_QWORD *google::protobuf::DescriptorPool::Tables::AllocateString(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v4;
  unint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char *v13;
  char *v14;
  _QWORD v16[2];
  _QWORD v17[5];

  v16[0] = a2;
  v16[1] = a3;
  v4 = (_QWORD *)operator new();
  google::protobuf::StringPiece::ToString((google::protobuf::StringPiece *)v16, v4);
  v5 = a1[28];
  v6 = (_QWORD *)a1[27];
  if ((unint64_t)v6 >= v5)
  {
    v8 = a1[26];
    v9 = ((uint64_t)v6 - v8) >> 3;
    if ((unint64_t)(v9 + 1) >> 61)
      std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
    v10 = v5 - v8;
    v11 = v10 >> 2;
    if (v10 >> 2 <= (unint64_t)(v9 + 1))
      v11 = v9 + 1;
    if ((unint64_t)v10 >= 0x7FFFFFFFFFFFFFF8)
      v12 = 0x1FFFFFFFFFFFFFFFLL;
    else
      v12 = v11;
    v17[4] = a1 + 28;
    if (v12)
      v13 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<zilch::StringList::Entry>>((uint64_t)(a1 + 28), v12);
    else
      v13 = 0;
    v14 = &v13[8 * v9];
    v17[0] = v13;
    v17[1] = v14;
    v17[3] = &v13[8 * v12];
    *(_QWORD *)v14 = v4;
    v17[2] = v14 + 8;
    std::vector<std::unique_ptr<std::string>>::__swap_out_circular_buffer(a1 + 26, v17);
    v7 = (_QWORD *)a1[27];
    std::__split_buffer<std::unique_ptr<std::string>>::~__split_buffer((uint64_t)v17);
  }
  else
  {
    *v6 = v4;
    v7 = v6 + 1;
    a1[27] = (uint64_t)v7;
  }
  a1[27] = (uint64_t)v7;
  return v4;
}

void sub_18886C140(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  std::__split_buffer<std::unique_ptr<std::string>>::~__split_buffer((uint64_t)va);
  _Unwind_Resume(a1);
}

_QWORD *google::protobuf::DescriptorPool::Tables::AllocateEmptyString(google::protobuf::DescriptorPool::Tables *this)
{
  _QWORD *v2;
  unint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char *v11;
  char *v12;
  _QWORD v14[5];

  v2 = (_QWORD *)operator new();
  v2[1] = 0;
  v2[2] = 0;
  *v2 = 0;
  v3 = *((_QWORD *)this + 28);
  v4 = (_QWORD *)*((_QWORD *)this + 27);
  if ((unint64_t)v4 >= v3)
  {
    v6 = *((_QWORD *)this + 26);
    v7 = ((uint64_t)v4 - v6) >> 3;
    if ((unint64_t)(v7 + 1) >> 61)
      std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
    v8 = v3 - v6;
    v9 = v8 >> 2;
    if (v8 >> 2 <= (unint64_t)(v7 + 1))
      v9 = v7 + 1;
    if ((unint64_t)v8 >= 0x7FFFFFFFFFFFFFF8)
      v10 = 0x1FFFFFFFFFFFFFFFLL;
    else
      v10 = v9;
    v14[4] = (char *)this + 224;
    if (v10)
      v11 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<zilch::StringList::Entry>>((uint64_t)this + 224, v10);
    else
      v11 = 0;
    v12 = &v11[8 * v7];
    v14[0] = v11;
    v14[1] = v12;
    v14[3] = &v11[8 * v10];
    *(_QWORD *)v12 = v2;
    v14[2] = v12 + 8;
    std::vector<std::unique_ptr<std::string>>::__swap_out_circular_buffer((uint64_t *)this + 26, v14);
    v5 = (_QWORD *)*((_QWORD *)this + 27);
    std::__split_buffer<std::unique_ptr<std::string>>::~__split_buffer((uint64_t)v14);
  }
  else
  {
    *v4 = v2;
    v5 = v4 + 1;
    *((_QWORD *)this + 27) = v5;
  }
  *((_QWORD *)this + 27) = v5;
  return v2;
}

void sub_18886C274(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  std::__split_buffer<std::unique_ptr<std::string>>::~__split_buffer((uint64_t)va);
  _Unwind_Resume(a1);
}

_QWORD *google::protobuf::DescriptorPool::Tables::AllocateOnceDynamic(google::protobuf::DescriptorPool::Tables *this)
{
  _QWORD *v2;
  _QWORD *v3;
  unint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  uint64_t v15;
  __int128 v16;
  unint64_t v17;
  uint64_t v19;
  __int128 v20;
  unint64_t v21;
  char *v22;

  v2 = (_QWORD *)operator new();
  v3 = v2;
  *v2 = 0;
  v5 = (_QWORD *)*((_QWORD *)this + 33);
  v4 = *((_QWORD *)this + 34);
  if ((unint64_t)v5 >= v4)
  {
    v7 = (_QWORD *)*((_QWORD *)this + 32);
    v8 = v5 - v7;
    v9 = v8 + 1;
    if ((unint64_t)(v8 + 1) >> 61)
      std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
    v10 = v4 - (_QWORD)v7;
    if (v10 >> 2 > v9)
      v9 = v10 >> 2;
    if ((unint64_t)v10 >= 0x7FFFFFFFFFFFFFF8)
      v11 = 0x1FFFFFFFFFFFFFFFLL;
    else
      v11 = v9;
    v22 = (char *)this + 272;
    if (v11)
    {
      v11 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<std::unique_ptr<google::protobuf::Message>>>(v11);
      v7 = (_QWORD *)*((_QWORD *)this + 32);
      v5 = (_QWORD *)*((_QWORD *)this + 33);
    }
    else
    {
      v12 = 0;
    }
    v13 = (_QWORD *)(v11 + 8 * v8);
    v14 = v11 + 8 * v12;
    v21 = v14;
    *v13 = v3;
    *((_QWORD *)&v20 + 1) = v13 + 1;
    if (v5 == v7)
    {
      v6 = v13 + 1;
    }
    else
    {
      do
      {
        v15 = *--v5;
        *v5 = 0;
        *--v13 = v15;
      }
      while (v5 != v7);
      v6 = (_QWORD *)*((_QWORD *)&v20 + 1);
      v14 = v21;
    }
    v16 = *((_OWORD *)this + 16);
    *((_QWORD *)this + 32) = v13;
    *((_QWORD *)this + 33) = v6;
    v20 = v16;
    v17 = *((_QWORD *)this + 34);
    *((_QWORD *)this + 34) = v14;
    v21 = v17;
    v19 = v16;
    std::__split_buffer<std::unique_ptr<std::once_flag>>::~__split_buffer((uint64_t)&v19);
  }
  else
  {
    *v5 = v2;
    v6 = v5 + 1;
  }
  *((_QWORD *)this + 33) = v6;
  return v3;
}

uint64_t google::protobuf::DescriptorPool::Tables::AllocateBytes(google::protobuf::DescriptorPool::Tables *this, int a2)
{
  char *v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  std::vector<char> *v16;
  std::vector<char> *v17;
  unint64_t v18;
  char *v19;

  if (!a2)
    return 0;
  v4 = (char *)this + 200;
  v5 = *((_QWORD *)this + 25);
  v6 = *((_QWORD *)this + 24);
  if (v6 >= v5)
  {
    v9 = *((_QWORD *)this + 23);
    v10 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v6 - v9) >> 3);
    if (v10 + 1 > 0xAAAAAAAAAAAAAAALL)
      std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
    v11 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v5 - v9) >> 3);
    v12 = 2 * v11;
    if (2 * v11 <= v10 + 1)
      v12 = v10 + 1;
    if (v11 >= 0x555555555555555)
      v13 = 0xAAAAAAAAAAAAAAALL;
    else
      v13 = v12;
    v19 = v4;
    if (v13)
      v13 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<std::vector<char>>>(v13);
    else
      v14 = 0;
    v15 = v13;
    v16 = (std::vector<char> *)(v13 + 24 * v10);
    v18 = v13 + 24 * v14;
    std::vector<char>::vector(v16, a2);
    v17 = v16 + 1;
    std::vector<std::vector<char>>::__swap_out_circular_buffer((_QWORD *)this + 23, &v15);
    v7 = *((_QWORD *)this + 24);
    std::__split_buffer<std::vector<char>>::~__split_buffer((uint64_t)&v15);
  }
  else
  {
    std::vector<char>::vector(*((std::vector<char> **)this + 24), a2);
    v7 = v6 + 24;
    *((_QWORD *)this + 24) = v6 + 24;
  }
  *((_QWORD *)this + 24) = v7;
  return *(_QWORD *)(v7 - 24);
}

void sub_18886C4D0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  std::__split_buffer<std::vector<char>>::~__split_buffer((uint64_t)va);
  _Unwind_Resume(a1);
}

void google::protobuf::FileDescriptorTables::BuildLocationsByPath(uint64_t *a1, uint64_t a2, char *a3)
{
  unint64_t v3;
  uint64_t *v4;
  uint64_t i;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char *v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint8x8_t v17;
  unint64_t v18;
  void **v19;
  void *v20;
  unint64_t v21;
  std::string::size_type v22;
  float v23;
  float v24;
  _BOOL8 v25;
  unint64_t v26;
  unint64_t v27;
  size_t v28;
  uint64_t v29;
  _QWORD *v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  std::string v37;
  std::string::value_type *__s;
  std::string::size_type v39;
  char v40;
  _BYTE v41[39];

  *(_QWORD *)&v41[31] = *MEMORY[0x1E0C80C00];
  v34 = *(unsigned int *)(a1[1] + 24);
  if ((int)v34 >= 1)
  {
    v4 = a1;
    for (i = 0; i != v34; ++i)
    {
      v6 = *v4;
      v7 = *(_QWORD *)(*(_QWORD *)(v4[1] + 32) + 8 * i + 8);
      v8 = *(int *)(v7 + 24);
      v35 = v7;
      v9 = *(_QWORD *)(v7 + 32);
      memset(&v37, 0, sizeof(v37));
      if ((_DWORD)v8)
      {
        v3 = 0;
        v10 = 4 * v8;
        do
        {
          if (v3)
            std::string::append(&v37, ",");
          v11 = *(unsigned int *)(v9 + v3);
          __s = &v40;
          v12 = &v40;
          if ((v11 & 0x80000000) != 0)
          {
            v40 = 45;
            v11 = -(int)v11;
            v12 = v41;
          }
          v39 = google::protobuf::FastUInt32ToBufferLeft((google::protobuf *)v11, v12, a3) - &v40;
          std::string::append(&v37, __s, v39);
          v3 += 4;
        }
        while (v10 != v3);
      }
      v36 = (uint64_t *)(v6 + 280);
      v13 = (_QWORD *)(v6 + 304);
      v14 = std::__string_hash<char>::operator()[abi:ne180100](v6 + 304, (uint64_t)&v37);
      v15 = v14;
      v16 = *(_QWORD *)(v6 + 288);
      if (v16)
      {
        v17 = (uint8x8_t)vcnt_s8((int8x8_t)v16);
        v17.i16[0] = vaddlv_u8(v17);
        v18 = v17.u32[0];
        if (v17.u32[0] > 1uLL)
        {
          v3 = v14;
          if (v14 >= v16)
            v3 = v14 % v16;
        }
        else
        {
          v3 = (v16 - 1) & v14;
        }
        v19 = *(void ***)(*v36 + 8 * v3);
        if (v19)
        {
          v20 = *v19;
          if (*v19)
          {
            while (1)
            {
              v21 = *((_QWORD *)v20 + 1);
              if (v21 == v15)
              {
                if ((std::equal_to<std::string>::operator()[abi:ne180100](v6 + 312, (unsigned __int8 *)v20 + 16, (unsigned __int8 *)&v37) & 1) != 0)
                {
                  v4 = a1;
                  v32 = v35;
                  goto LABEL_50;
                }
              }
              else
              {
                if (v18 > 1)
                {
                  if (v21 >= v16)
                    v21 %= v16;
                }
                else
                {
                  v21 &= v16 - 1;
                }
                if (v21 != v3)
                {
LABEL_26:
                  v4 = a1;
                  break;
                }
              }
              v20 = *(void **)v20;
              if (!v20)
                goto LABEL_26;
            }
          }
        }
        v13 = (_QWORD *)(v6 + 304);
      }
      v20 = operator new(0x30uLL);
      *(_QWORD *)v20 = 0;
      *((_QWORD *)v20 + 1) = v15;
      v22 = v37.__r_.__value_.__r.__words[2];
      *((_OWORD *)v20 + 1) = *(_OWORD *)&v37.__r_.__value_.__l.__data_;
      memset(&v37, 0, sizeof(v37));
      *((_QWORD *)v20 + 4) = v22;
      *((_QWORD *)v20 + 5) = 0;
      v23 = (float)(unint64_t)(*(_QWORD *)(v6 + 304) + 1);
      v24 = *(float *)(v6 + 312);
      if (!v16 || (float)(v24 * (float)v16) < v23)
      {
        v25 = (v16 & (v16 - 1)) != 0;
        if (v16 < 3)
          v25 = 1;
        v26 = v25 | (2 * v16);
        v27 = vcvtps_u32_f32(v23 / v24);
        if (v26 <= v27)
          v28 = v27;
        else
          v28 = v26;
        std::__hash_table<google::protobuf::Descriptor const*,std::hash<google::protobuf::Descriptor const*>,std::equal_to<google::protobuf::Descriptor const*>,std::allocator<google::protobuf::Descriptor const*>>::__rehash<true>((uint64_t)v36, v28);
        v16 = *(_QWORD *)(v6 + 288);
        if ((v16 & (v16 - 1)) != 0)
        {
          if (v15 >= v16)
            v3 = v15 % v16;
          else
            v3 = v15;
        }
        else
        {
          v3 = (v16 - 1) & v15;
        }
      }
      v29 = *v36;
      v30 = *(_QWORD **)(*v36 + 8 * v3);
      if (v30)
      {
        *(_QWORD *)v20 = *v30;
        v32 = v35;
      }
      else
      {
        *(_QWORD *)v20 = *(_QWORD *)(v6 + 296);
        *(_QWORD *)(v6 + 296) = v20;
        *(_QWORD *)(v29 + 8 * v3) = v6 + 296;
        v32 = v35;
        if (!*(_QWORD *)v20)
          goto LABEL_49;
        v31 = *(_QWORD *)(*(_QWORD *)v20 + 8);
        if ((v16 & (v16 - 1)) != 0)
        {
          if (v31 >= v16)
            v31 %= v16;
        }
        else
        {
          v31 &= v16 - 1;
        }
        v30 = (_QWORD *)(*v36 + 8 * v31);
      }
      *v30 = v20;
LABEL_49:
      ++*v13;
LABEL_50:
      *((_QWORD *)v20 + 5) = v32;
      if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v37.__r_.__value_.__l.__data_);
    }
  }
}

void sub_18886C86C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  void **v20;

  std::__hash_node_destructor<std::allocator<std::__hash_node<std::__hash_value_type<std::string,google::protobuf::Descriptor::WellKnownType>,void *>>>::operator()[abi:ne180100](1, v20);
  if (a20 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::DescriptorPool::DescriptorPool(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  google::protobuf::DescriptorPool::Tables *v7;

  v6 = operator new();
  *(_QWORD *)v6 = 850045863;
  *(_OWORD *)(v6 + 8) = 0u;
  *(_OWORD *)(v6 + 24) = 0u;
  *(_OWORD *)(v6 + 40) = 0u;
  *(_QWORD *)(v6 + 56) = 0;
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = a2;
  *(_QWORD *)(a1 + 16) = a3;
  *(_QWORD *)(a1 + 24) = 0;
  v7 = (google::protobuf::DescriptorPool::Tables *)operator new();
  google::protobuf::DescriptorPool::Tables::Tables(v7);
  *(_QWORD *)(a1 + 32) = v7;
  *(_BYTE *)(a1 + 40) = 1;
  *(_QWORD *)(a1 + 64) = 0;
  *(_QWORD *)(a1 + 56) = 0;
  *(_DWORD *)(a1 + 41) = 0;
  *(_QWORD *)(a1 + 48) = a1 + 56;
  return a1;
}

void sub_18886C950(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x18D76437C](v1, 0x10A0C40292B2256);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::`anonymous namespace'::GeneratedDatabase(google::protobuf::_anonymous_namespace_ *this)
{
  unsigned __int8 v1;
  google::protobuf::EncodedDescriptorDatabase *v3;
  const void *v4;

  if ((v1 & 1) == 0
  {
    v3 = (google::protobuf::EncodedDescriptorDatabase *)operator new();
    google::protobuf::EncodedDescriptorDatabase::EncodedDescriptorDatabase(v3);
    google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::OnShutdownDelete<google::protobuf::EncodedDescriptorDatabase>(google::protobuf::EncodedDescriptorDatabase *)::{lambda(void const*)#1}::__invoke, (void (*)(const void *))v3, v4);
  }
}

void sub_18886C9F8(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x18D76437C](v1, 0xA1C40F4AD4952);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::DescriptorPool::internal_generated_pool(google::protobuf::DescriptorPool *this)
{
  unsigned __int8 v1;
  google::protobuf::_anonymous_namespace_ *v3;
  void (*v4)(const void *);
  const void *v5;

  if ((v1 & 1) == 0)
  {
    if ((_DWORD)v3)
    {
      google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::OnShutdownDelete<google::protobuf::DescriptorPool>(google::protobuf::DescriptorPool *)::{lambda(void const*)#1}::__invoke, v4, v5);
      google::protobuf::DescriptorPool::internal_generated_pool(void)::generated_pool = (uint64_t)v4;
    }
  }
  return google::protobuf::DescriptorPool::internal_generated_pool(void)::generated_pool;
}

void sub_18886CA9C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

google::protobuf::_anonymous_namespace_ *google::protobuf::`anonymous namespace'::NewGeneratedPool(google::protobuf::_anonymous_namespace_ *this)
{
  google::protobuf::_anonymous_namespace_ *v1;
  uint64_t v2;

  v1 = (google::protobuf::_anonymous_namespace_ *)operator new();
  google::protobuf::DescriptorPool::DescriptorPool((uint64_t)v1, v2, 0);
  *((_WORD *)v1 + 20) = 256;
  return v1;
}

void sub_18886CB08(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x18D76437C](v1, 0x1060C40AEB7C726);
  _Unwind_Resume(a1);
}

void google::protobuf::DescriptorPool::InternalAddGeneratedFile(google::protobuf::DescriptorPool *this, const void *a2)
{
  int v2;
  google::protobuf::EncodedDescriptorDatabase *v4;
  int v5;
  const char *v6;
  int v7;
  std::string __p;

  v2 = (int)a2;
  if ((google::protobuf::EncodedDescriptorDatabase::Add(v4, (char *)this, v2) & 1) == 0)
  {
    v5 = 3;
    v6 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/descriptor.cc";
    v7 = 1374;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "CHECK failed: GeneratedDatabase()->Add(encoded_file_descriptor, size): ");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v5);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
}

void sub_18886CBB8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::DescriptorPool::FindFileByName(uint64_t a1, uint64_t *a2, const char *a3)
{
  std::mutex *v5;
  uint64_t v6;
  _QWORD *v7;
  const char *v8;
  uint64_t FileByName;
  uint64_t v10;
  const char *v11;
  uint64_t v12;
  _QWORD *v13;
  __int128 v15;
  uint64_t v16[2];
  __int128 v17;
  __int128 v18;

  v5 = *(std::mutex **)a1;
  if (*(_QWORD *)a1)
    std::mutex::lock(*(std::mutex **)a1);
  if (*(_QWORD *)(a1 + 8))
  {
    std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::clear(*(_QWORD *)(a1 + 32) + 64);
    std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::clear(*(_QWORD *)(a1 + 32) + 24);
  }
  v6 = *(_QWORD *)(a1 + 32);
  google::protobuf::StringPiece::StringPiece<std::allocator<char>>(&v17, a2, a3);
  v18 = v17;
  v7 = std::__hash_table<std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>,std::__unordered_map_hasher<google::protobuf::StringPiece,std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>,google::protobuf::hash<google::protobuf::StringPiece>,std::equal_to<google::protobuf::StringPiece>,true>,std::__unordered_map_equal<google::protobuf::StringPiece,std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>,std::equal_to<google::protobuf::StringPiece>,google::protobuf::hash<google::protobuf::StringPiece>,true>,std::allocator<std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>>>::find<google::protobuf::StringPiece>((_QWORD *)(v6 + 344), (char **)&v18);
  if (!v7 || (FileByName = v7[4]) == 0)
  {
    v10 = *(_QWORD *)(a1 + 24);
    if (!v10 || (FileByName = google::protobuf::DescriptorPool::FindFileByName(v10, a2)) == 0)
    {
      google::protobuf::StringPiece::StringPiece<std::allocator<char>>(v16, a2, v8);
      if (!google::protobuf::DescriptorPool::TryFindFileInFallbackDatabase((google::protobuf::DescriptorPool *)a1, v16[0], v16[1])|| (v12 = *(_QWORD *)(a1 + 32), google::protobuf::StringPiece::StringPiece<std::allocator<char>>(&v15, a2, v11), v18 = v15, (v13 = std::__hash_table<std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>,std::__unordered_map_hasher<google::protobuf::StringPiece,std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>,google::protobuf::hash<google::protobuf::StringPiece>,std::equal_to<google::protobuf::StringPiece>,true>,std::__unordered_map_equal<google::protobuf::StringPiece,std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>,std::equal_to<google::protobuf::StringPiece>,google::protobuf::hash<google::protobuf::StringPiece>,true>,std::allocator<std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>>>::find<google::protobuf::StringPiece>((_QWORD *)(v12 + 344), (char **)&v18)) == 0)|| (FileByName = v13[4]) == 0)
      {
        FileByName = 0;
      }
    }
  }
  if (v5)
    std::mutex::unlock(v5);
  return FileByName;
}

void sub_18886CCE0(_Unwind_Exception *exception_object)
{
  std::mutex *v1;

  if (v1)
    std::mutex::unlock(v1);
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::DescriptorPool::TryFindFileInFallbackDatabase(google::protobuf::DescriptorPool *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  _BYTE v6[216];
  void *v7[2];
  char v8;
  _QWORD v9[2];

  v9[0] = a2;
  v9[1] = a3;
  if (!*((_QWORD *)a1 + 1))
    return 0;
  google::protobuf::StringPiece::ToString((google::protobuf::StringPiece *)v9, v7);
  if (std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::find<std::string>((_QWORD *)(*((_QWORD *)a1 + 4) + 24), (unsigned __int8 *)v7))
  {
    v4 = 0;
  }
  else
  {
    google::protobuf::FileDescriptorProto::FileDescriptorProto((google::protobuf::FileDescriptorProto *)v6, 0);
    if ((*(unsigned int (**)(_QWORD, void **, _BYTE *))(**((_QWORD **)a1 + 1) + 16))(*((_QWORD *)a1 + 1), v7, v6)&& google::protobuf::DescriptorPool::BuildFileFromDatabase(a1, (const google::protobuf::FileDescriptorProto *)v6))
    {
      v4 = 1;
    }
    else
    {
      std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::__emplace_unique_key_args<std::string,std::string>(*((_QWORD *)a1 + 4) + 24, (unsigned __int8 *)v7, (uint64_t)v7);
      v4 = 0;
    }
    google::protobuf::FileDescriptorProto::~FileDescriptorProto((google::protobuf::FileDescriptorProto *)v6);
  }
  if (v8 < 0)
    operator delete(v7[0]);
  return v4;
}

void sub_18886CDCC(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (*(char *)(v1 - 33) < 0)
    operator delete(*(void **)(v1 - 56));
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::Symbol::GetFile(google::protobuf::Symbol *this)
{
  uint64_t v1;
  uint64_t result;
  uint64_t *v3;

  switch(*(_DWORD *)this)
  {
    case 1:
    case 4:
    case 6:
      v1 = *((_QWORD *)this + 1);
      goto LABEL_7;
    case 2:
      v3 = (uint64_t *)(*((_QWORD *)this + 1) + 40);
      goto LABEL_8;
    case 3:
    case 7:
      v1 = *(_QWORD *)(*((_QWORD *)this + 1) + 16);
      goto LABEL_7;
    case 5:
      v1 = *(_QWORD *)(*((_QWORD *)this + 1) + 24);
LABEL_7:
      v3 = (uint64_t *)(v1 + 16);
      goto LABEL_8;
    case 8:
      v3 = (uint64_t *)((char *)this + 8);
LABEL_8:
      result = *v3;
      break;
    default:
      result = 0;
      break;
  }
  return result;
}

uint64_t google::protobuf::DescriptorPool::FindMessageTypeByName(uint64_t a1, uint64_t *a2, const char *a3)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD v7[2];

  v4 = *(_QWORD *)(a1 + 32);
  google::protobuf::StringPiece::StringPiece<std::allocator<char>>(v7, a2, a3);
  if (google::protobuf::DescriptorPool::Tables::FindByNameHelper(v4, a1, v7[0], v7[1]) == 1)
    return v5;
  else
    return 0;
}

uint64_t google::protobuf::DescriptorPool::FindExtensionByName(uint64_t a1, uint64_t *a2, const char *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  _QWORD v7[2];

  v4 = *(_QWORD *)(a1 + 32);
  google::protobuf::StringPiece::StringPiece<std::allocator<char>>(v7, a2, a3);
  if (google::protobuf::DescriptorPool::Tables::FindByNameHelper(v4, a1, v7[0], v7[1]) != 2)
    return 0;
  result = v5;
  if (!*(_BYTE *)(v5 + 67))
    return 0;
  return result;
}

uint64_t google::protobuf::DescriptorPool::FindExtensionByNumber(std::mutex **this, const google::protobuf::Descriptor *a2, uint64_t a3)
{
  std::mutex *v6;
  std::mutex *v7;
  uint64_t *v8;
  uint64_t ExtensionByNumber;
  char v10;
  std::mutex *v11;
  uint64_t *v12;
  google::protobuf::DescriptorPool *v13;
  std::mutex *v14;
  uint64_t *v15;

  if (!*((_DWORD *)a2 + 31))
    return 0;
  v6 = *this;
  if (!*this)
    goto LABEL_10;
  std::mutex::lock(*this);
  v7 = this[4];
  v8 = std::__tree<std::__value_type<std::pair<google::protobuf::Descriptor const*,int>,google::protobuf::FieldDescriptor const*>,std::__map_value_compare<std::pair<google::protobuf::Descriptor const*,int>,std::__value_type<std::pair<google::protobuf::Descriptor const*,int>,google::protobuf::FieldDescriptor const*>,std::less<std::pair<google::protobuf::Descriptor const*,int>>,true>,std::allocator<std::__value_type<std::pair<google::protobuf::Descriptor const*,int>,google::protobuf::FieldDescriptor const*>>>::find<std::pair<google::protobuf::Descriptor const*,int>>((uint64_t)&v7[6], (unint64_t)a2, a3);
  if (v7[6].__m_.__opaque == (char *)v8)
  {
    std::mutex::unlock(v6);
  }
  else
  {
    ExtensionByNumber = v8[6];
    std::mutex::unlock(v6);
    if (ExtensionByNumber)
      return ExtensionByNumber;
  }
  v6 = *this;
  if (*this)
  {
    std::mutex::lock(*this);
    v10 = 0;
  }
  else
  {
LABEL_10:
    v10 = 1;
  }
  if (this[1])
  {
    std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::clear((uint64_t)&this[4][1]);
    std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::clear((uint64_t)&this[4]->__m_.__opaque[16]);
  }
  v11 = this[4];
  v12 = std::__tree<std::__value_type<std::pair<google::protobuf::Descriptor const*,int>,google::protobuf::FieldDescriptor const*>,std::__map_value_compare<std::pair<google::protobuf::Descriptor const*,int>,std::__value_type<std::pair<google::protobuf::Descriptor const*,int>,google::protobuf::FieldDescriptor const*>,std::less<std::pair<google::protobuf::Descriptor const*,int>>,true>,std::allocator<std::__value_type<std::pair<google::protobuf::Descriptor const*,int>,google::protobuf::FieldDescriptor const*>>>::find<std::pair<google::protobuf::Descriptor const*,int>>((uint64_t)&v11[6], (unint64_t)a2, a3);
  if (v11[6].__m_.__opaque == (char *)v12 || (ExtensionByNumber = v12[6]) == 0)
  {
    v13 = (google::protobuf::DescriptorPool *)this[3];
    if (!v13 || (ExtensionByNumber = google::protobuf::DescriptorPool::FindExtensionByNumber(v13, a2, a3)) == 0)
    {
      if (!google::protobuf::DescriptorPool::TryFindExtensionInFallbackDatabase((google::protobuf::DescriptorPool *)this, a2, a3)|| (v14 = this[4], v15 = std::__tree<std::__value_type<std::pair<google::protobuf::Descriptor const*,int>,google::protobuf::FieldDescriptor const*>,std::__map_value_compare<std::pair<google::protobuf::Descriptor const*,int>,std::__value_type<std::pair<google::protobuf::Descriptor const*,int>,google::protobuf::FieldDescriptor const*>,std::less<std::pair<google::protobuf::Descriptor const*,int>>,true>,std::allocator<std::__value_type<std::pair<google::protobuf::Descriptor const*,int>,google::protobuf::FieldDescriptor const*>>>::find<std::pair<google::protobuf::Descriptor const*,int>>((uint64_t)&v14[6], (unint64_t)a2, a3), v14[6].__m_.__opaque == (char *)v15)|| (ExtensionByNumber = v15[6]) == 0)
      {
        ExtensionByNumber = 0;
      }
    }
  }
  if ((v10 & 1) == 0)
    std::mutex::unlock(v6);
  return ExtensionByNumber;
}

void sub_18886D068(_Unwind_Exception *exception_object)
{
  std::mutex *v1;
  char v2;

  if ((v2 & 1) == 0)
    std::mutex::unlock(v1);
  _Unwind_Resume(exception_object);
}

BOOL google::protobuf::DescriptorPool::TryFindExtensionInFallbackDatabase(google::protobuf::DescriptorPool *this, const google::protobuf::Descriptor *a2, uint64_t a3)
{
  const char *v6;
  uint64_t v7;
  _QWORD *v8;
  _BOOL8 v9;
  __int128 v11;
  _BYTE v12[176];
  uint64_t v13;
  __int128 v14;

  if (!*((_QWORD *)this + 1))
    return 0;
  google::protobuf::FileDescriptorProto::FileDescriptorProto((google::protobuf::FileDescriptorProto *)v12, 0);
  v9 = ((*(uint64_t (**)(_QWORD, _QWORD, uint64_t, _BYTE *))(**((_QWORD **)this + 1) + 32))(*((_QWORD *)this + 1), *((_QWORD *)a2 + 1), a3, v12) & 1) != 0&& ((v7 = *((_QWORD *)this + 4), google::protobuf::StringPiece::StringPiece<std::allocator<char>>(&v11, (uint64_t *)(v13 & 0xFFFFFFFFFFFFFFFELL), v6), v14 = v11, (v8 = std::__hash_table<std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>,std::__unordered_map_hasher<google::protobuf::StringPiece,std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>,google::protobuf::hash<google::protobuf::StringPiece>,std::equal_to<google::protobuf::StringPiece>,true>,std::__unordered_map_equal<google::protobuf::StringPiece,std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>,std::equal_to<google::protobuf::StringPiece>,google::protobuf::hash<google::protobuf::StringPiece>,true>,std::allocator<std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>>>::find<google::protobuf::StringPiece>((_QWORD *)(v7 + 344), (char **)&v14)) == 0)|| !v8[4])&& google::protobuf::DescriptorPool::BuildFileFromDatabase(this, (const google::protobuf::FileDescriptorProto *)v12) != 0;
  google::protobuf::FileDescriptorProto::~FileDescriptorProto((google::protobuf::FileDescriptorProto *)v12);
  return v9;
}

void sub_18886D14C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  google::protobuf::FileDescriptorProto::~FileDescriptorProto((google::protobuf::FileDescriptorProto *)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::DescriptorPool::InternalFindExtensionByNumberNoLock(google::protobuf::DescriptorPool *this, const google::protobuf::Descriptor *a2, int a3)
{
  uint64_t v6;
  uint64_t *v7;
  uint64_t result;
  google::protobuf::DescriptorPool *v9;

  if (!*((_DWORD *)a2 + 31))
    return 0;
  v6 = *((_QWORD *)this + 4);
  v7 = std::__tree<std::__value_type<std::pair<google::protobuf::Descriptor const*,int>,google::protobuf::FieldDescriptor const*>,std::__map_value_compare<std::pair<google::protobuf::Descriptor const*,int>,std::__value_type<std::pair<google::protobuf::Descriptor const*,int>,google::protobuf::FieldDescriptor const*>,std::less<std::pair<google::protobuf::Descriptor const*,int>>,true>,std::allocator<std::__value_type<std::pair<google::protobuf::Descriptor const*,int>,google::protobuf::FieldDescriptor const*>>>::find<std::pair<google::protobuf::Descriptor const*,int>>(v6 + 384, (unint64_t)a2, a3);
  if ((uint64_t *)(v6 + 392) == v7 || (result = v7[6]) == 0)
  {
    v9 = (google::protobuf::DescriptorPool *)*((_QWORD *)this + 3);
    if (!v9)
      return 0;
    result = google::protobuf::DescriptorPool::InternalFindExtensionByNumberNoLock(v9, a2, a3);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t google::protobuf::DescriptorPool::FindExtensionByPrintableName(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t result;
  const char *v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);
  _QWORD *v17;
  _QWORD v18[2];

  if (!*(_DWORD *)(a2 + 124))
    return 0;
  result = google::protobuf::DescriptorPool::FindExtensionByName(a1, a3, (const char *)a3);
  if (result && *(_QWORD *)(result + 80) == a2)
    return result;
  if (!*(_BYTE *)(*(_QWORD *)(a2 + 32) + 72))
    return 0;
  result = google::protobuf::DescriptorPool::FindMessageTypeByName(a1, a3, v7);
  if (!result)
    return result;
  v8 = result;
  v9 = *(_DWORD *)(result + 128);
  if (v9 < 1)
    return 0;
  v10 = 0;
  v11 = 152 * v9;
  while (1)
  {
    v12 = *(_QWORD *)(v8 + 80);
    if (*(_QWORD *)(v12 + v10 + 80) == a2)
    {
      v13 = *(unint64_t **)(v12 + v10 + 48);
      if (v13)
      {
        v15 = v12 + v10;
        v16 = google::protobuf::FieldDescriptor::TypeOnceInit;
        v14 = atomic_load(v13);
        if (v14 != -1)
        {
          v18[0] = &v16;
          v18[1] = &v15;
          v17 = v18;
          std::__call_once(v13, &v17, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
        }
      }
      if (*(_DWORD *)(v12 + v10 + 56) == 11
        && *(_DWORD *)(v12 + v10 + 60) == 1
        && google::protobuf::FieldDescriptor::message_type((google::protobuf::FieldDescriptor *)(v12 + v10)) == v8)
      {
        break;
      }
    }
    v10 += 152;
    if (v11 == v10)
      return 0;
  }
  return v12 + v10;
}

uint64_t google::protobuf::FieldDescriptor::type(google::protobuf::FieldDescriptor *this)
{
  unint64_t *v2;
  unint64_t v3;
  google::protobuf::FieldDescriptor *v5;
  uint64_t (*v6)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);
  _QWORD *v7;
  _QWORD v8[2];

  v2 = (unint64_t *)*((_QWORD *)this + 6);
  if (v2)
  {
    v5 = this;
    v6 = google::protobuf::FieldDescriptor::TypeOnceInit;
    v3 = atomic_load(v2);
    if (v3 != -1)
    {
      v8[0] = &v6;
      v8[1] = &v5;
      v7 = v8;
      std::__call_once(v2, &v7, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  return *((unsigned int *)this + 14);
}

uint64_t google::protobuf::FieldDescriptor::message_type(google::protobuf::FieldDescriptor *this)
{
  unint64_t *v2;
  unint64_t v3;
  google::protobuf::FieldDescriptor *v5;
  _QWORD *v6;
  _QWORD v7[2];

  v2 = (unint64_t *)*((_QWORD *)this + 6);
  if (v2)
  {
    v5 = this;
    v3 = atomic_load(v2);
    if (v3 != -1)
    {
      v7[0] = google::protobuf::FieldDescriptor::TypeOnceInit;
      v7[1] = &v5;
      v6 = v7;
      std::__call_once(v2, &v6, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  return *((_QWORD *)this + 13);
}

uint64_t google::protobuf::Descriptor::FindFieldByNumber(google::protobuf::Descriptor *this, int a2)
{
  int8x8_t *v2;
  int8x8_t v3;
  unint64_t v4;
  uint8x8_t v5;
  uint64_t v6;
  uint64_t **v7;
  uint64_t *v8;
  unint64_t v9;
  uint64_t v12;

  v2 = *(int8x8_t **)(*((_QWORD *)this + 2) + 144);
  v3 = v2[20];
  if (!*(_QWORD *)&v3)
    return 0;
  v4 = (16777619 * a2) ^ (16777499 * (_QWORD)this);
  v5 = (uint8x8_t)vcnt_s8(v3);
  v5.i16[0] = vaddlv_u8(v5);
  if (v5.u32[0] > 1uLL)
  {
    v6 = (16777619 * a2) ^ (16777499 * (_QWORD)this);
    if (v4 >= *(_QWORD *)&v3)
      v6 = v4 % *(_QWORD *)&v3;
  }
  else
  {
    v6 = (*(_QWORD *)&v3 - 1) & v4;
  }
  v7 = *(uint64_t ***)(*(_QWORD *)&v2[19] + 8 * v6);
  if (!v7)
    return 0;
  v8 = *v7;
  if (!v8)
    return 0;
  while (1)
  {
    v9 = v8[1];
    if (v4 == v9)
      break;
    if (v5.u32[0] > 1uLL)
    {
      if (v9 >= *(_QWORD *)&v3)
        v9 %= *(_QWORD *)&v3;
    }
    else
    {
      v9 &= *(_QWORD *)&v3 - 1;
    }
    if (v9 != v6)
      return 0;
LABEL_20:
    v8 = (uint64_t *)*v8;
    if (!v8)
      return 0;
  }
  if ((google::protobuf::Descriptor *)v8[2] != this || *((_DWORD *)v8 + 6) != a2)
    goto LABEL_20;
  v12 = v8[4];
  if (!v12)
    return 0;
  if (*(_BYTE *)(v12 + 67))
    return 0;
  else
    return v8[4];
}

uint64_t google::protobuf::Descriptor::FindFieldByLowercaseName(uint64_t a1, uint64_t *a2, const char *a3)
{
  uint64_t v4;
  __int128 v5;
  unint64_t v6;
  uint64_t result;
  __int128 v8;
  __int128 v9;
  uint64_t (**v10)(uint64_t, const google::protobuf::FileDescriptorTables *);
  __int128 v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, const google::protobuf::FileDescriptorTables *);
  uint64_t (***v14)(uint64_t, const google::protobuf::FileDescriptorTables *);

  v4 = *(_QWORD *)(*(_QWORD *)(a1 + 16) + 144);
  google::protobuf::StringPiece::StringPiece<std::allocator<char>>(&v9, a2, a3);
  v5 = v9;
  v12 = v4;
  v13 = google::protobuf::FileDescriptorTables::FieldsByLowercaseNamesLazyInitStatic;
  v6 = atomic_load((unint64_t *)(v4 + 88));
  if (v6 != -1)
  {
    v10 = &v13;
    *(_QWORD *)&v11 = &v12;
    v14 = &v10;
    v8 = v9;
    std::__call_once((std::once_flag::_State_type *)(v4 + 88), &v14, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FileDescriptorTables const*),google::protobuf::FileDescriptorTables const*&&>>);
    v5 = v8;
  }
  v10 = (uint64_t (**)(uint64_t, const google::protobuf::FileDescriptorTables *))a1;
  v11 = v5;
  if (result)
  {
    if (*(_BYTE *)(result + 67))
      return 0;
  }
  return result;
}

uint64_t google::protobuf::Descriptor::FindFieldByName(uint64_t a1, uint64_t *a2, const char *a3)
{
  _QWORD *v4;
  google::protobuf::_anonymous_namespace_ *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  int8x8_t v9;
  unint64_t v10;
  uint8x8_t v11;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t *v19;
  uint64_t *v20;
  char *v21;
  uint64_t v22;
  _QWORD v23[3];

  v4 = *(_QWORD **)(*(_QWORD *)(a1 + 16) + 144);
  v5 = (google::protobuf::_anonymous_namespace_ *)google::protobuf::StringPiece::StringPiece<std::allocator<char>>(&v21, a2, a3);
  v6 = v21;
  v23[0] = a1;
  v23[1] = v21;
  v23[2] = v22;
  if (v22 < 1)
  {
    v7 = 0;
  }
  else
  {
    v7 = 0;
    do
    {
      v8 = *v6++;
      v7 = 5 * v7 + v8;
    }
    while (v6 < &v21[v22]);
  }
  v9 = (int8x8_t)v4[1];
  if (v9)
  {
    v10 = v7 ^ (16777619 * a1);
    v11 = (uint8x8_t)vcnt_s8(v9);
    v11.i16[0] = vaddlv_u8(v11);
    v12 = v11.u32[0];
    if (v11.u32[0] > 1uLL)
    {
      v13 = v10;
      if (v10 >= *(_QWORD *)&v9)
        v13 = v10 % *(_QWORD *)&v9;
    }
    else
    {
      v13 = (*(_QWORD *)&v9 - 1) & v10;
    }
    v14 = *(_QWORD **)(*v4 + 8 * v13);
    if (v14)
    {
      v15 = (_QWORD *)*v14;
      if (*v14)
      {
        do
        {
          v16 = v15[1];
          if (v10 == v16)
          {
            v5 = (google::protobuf::_anonymous_namespace_ *)std::equal_to<std::pair<void const*,google::protobuf::StringPiece>>::operator()[abi:ne180100](v15 + 2, v23);
            if ((v5 & 1) != 0)
            {
              v19 = v15 + 5;
              v20 = v15 + 6;
              goto LABEL_23;
            }
          }
          else
          {
            if (v12 > 1)
            {
              if (v16 >= *(_QWORD *)&v9)
                v16 %= *(_QWORD *)&v9;
            }
            else
            {
              v16 &= *(_QWORD *)&v9 - 1;
            }
            if (v16 != v13)
              break;
          }
          v15 = (_QWORD *)*v15;
        }
        while (v15);
      }
    }
  }
  v20 = &qword_1ECDBB720;
  v19 = &qword_1ECDBB718;
LABEL_23:
  if (*(_DWORD *)v19 != 2)
  {
    if (!(_DWORD)qword_1ECDBB718)
      return 0;
    v20 = &qword_1ECDBB720;
  }
  v17 = *v20;
  if (*(_BYTE *)(v17 + 67))
    return 0;
  else
    return v17;
}

uint64_t google::protobuf::EnumDescriptor::FindValueByName(uint64_t a1, uint64_t *a2, const char *a3)
{
  _QWORD *v4;
  google::protobuf::_anonymous_namespace_ *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  int8x8_t v9;
  unint64_t v10;
  uint8x8_t v11;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  unint64_t v16;
  uint64_t *v18;
  uint64_t *v19;
  char *v20;
  uint64_t v21;
  _QWORD v22[3];

  v4 = *(_QWORD **)(*(_QWORD *)(a1 + 16) + 144);
  v5 = (google::protobuf::_anonymous_namespace_ *)google::protobuf::StringPiece::StringPiece<std::allocator<char>>(&v20, a2, a3);
  v6 = v20;
  v22[0] = a1;
  v22[1] = v20;
  v22[2] = v21;
  if (v21 < 1)
  {
    v7 = 0;
  }
  else
  {
    v7 = 0;
    do
    {
      v8 = *v6++;
      v7 = 5 * v7 + v8;
    }
    while (v6 < &v20[v21]);
  }
  v9 = (int8x8_t)v4[1];
  if (v9)
  {
    v10 = v7 ^ (16777619 * a1);
    v11 = (uint8x8_t)vcnt_s8(v9);
    v11.i16[0] = vaddlv_u8(v11);
    v12 = v11.u32[0];
    if (v11.u32[0] > 1uLL)
    {
      v13 = v10;
      if (v10 >= *(_QWORD *)&v9)
        v13 = v10 % *(_QWORD *)&v9;
    }
    else
    {
      v13 = (*(_QWORD *)&v9 - 1) & v10;
    }
    v14 = *(_QWORD **)(*v4 + 8 * v13);
    if (v14)
    {
      v15 = (_QWORD *)*v14;
      if (*v14)
      {
        do
        {
          v16 = v15[1];
          if (v10 == v16)
          {
            v5 = (google::protobuf::_anonymous_namespace_ *)std::equal_to<std::pair<void const*,google::protobuf::StringPiece>>::operator()[abi:ne180100](v15 + 2, v22);
            if ((v5 & 1) != 0)
            {
              v18 = v15 + 5;
              v19 = v15 + 6;
              goto LABEL_23;
            }
          }
          else
          {
            if (v12 > 1)
            {
              if (v16 >= *(_QWORD *)&v9)
                v16 %= *(_QWORD *)&v9;
            }
            else
            {
              v16 &= *(_QWORD *)&v9 - 1;
            }
            if (v16 != v13)
              break;
          }
          v15 = (_QWORD *)*v15;
        }
        while (v15);
      }
    }
  }
  v19 = &qword_1ECDBB720;
  v18 = &qword_1ECDBB718;
LABEL_23:
  if (*(_DWORD *)v18 == 5)
    return *v19;
  if ((_DWORD)qword_1ECDBB718)
    return qword_1ECDBB720;
  else
    return 0;
}

uint64_t google::protobuf::FileDescriptorTables::FindEnumValueByNumberCreatingIfUnknown(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t Bytes;
  std::mutex *v8;
  uint64_t v9;
  _QWORD *v10;
  google::protobuf::DescriptorPool *v11;
  uint64_t v12;
  google::protobuf::DescriptorPool::Tables *v13;
  const char *v14;
  const void **v15;
  size_t v16;
  std::string *v17;
  const void *v18;
  std::string *v19;
  std::string::size_type size;
  std::string *v21;
  __int128 v22;
  const char *v23;
  std::string v26;
  void *__p[2];
  std::string::size_type v28;
  uint64_t v29[2];
  uint64_t v30[2];
  std::string v31;

  v6 = a3;
  v31.__r_.__value_.__r.__words[0] = (std::string::size_type)a2;
  v31.__r_.__value_.__l.__size_ = a3;
  if (!Bytes)
  {
    v8 = (std::mutex *)(a1 + 320);
    std::mutex::lock((std::mutex *)(a1 + 320));
    v9 = a1 + 232;
    std::mutex::unlock((std::mutex *)(a1 + 320));
    if (!Bytes)
    {
      std::mutex::lock((std::mutex *)(a1 + 320));
      if (!Bytes)
      {
        v10 = (_QWORD *)*a2;
        if (*(char *)(*a2 + 23) < 0)
          v10 = (_QWORD *)*v10;
        v11 = (google::protobuf::DescriptorPool *)google::protobuf::StringPrintf((google::protobuf *)"UNKNOWN_ENUM_VALUE_%s_%d", &v31, v10, a3);
        v12 = google::protobuf::DescriptorPool::internal_generated_pool(v11);
        google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0);
        v13 = *(google::protobuf::DescriptorPool::Tables **)(v12 + 32);
        Bytes = google::protobuf::DescriptorPool::Tables::AllocateBytes(v13, 40);
        google::protobuf::StringPiece::StringPiece<std::allocator<char>>(v30, (uint64_t *)&v31, v14);
        *(_QWORD *)Bytes = google::protobuf::DescriptorPool::Tables::AllocateString((uint64_t *)v13, v30[0], v30[1]);
        v15 = (const void **)a2[1];
        if (*((char *)v15 + 23) >= 0)
          v16 = *((unsigned __int8 *)v15 + 23);
        else
          v16 = (size_t)v15[1];
        v17 = &v26;
        std::string::basic_string[abi:ne180100]((uint64_t)&v26, v16 + 1);
        if ((v26.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
          v17 = (std::string *)v26.__r_.__value_.__r.__words[0];
        if (v16)
        {
          if (*((char *)v15 + 23) >= 0)
            v18 = v15;
          else
            v18 = *v15;
          memmove(v17, v18, v16);
        }
        *(_WORD *)((char *)&v17->__r_.__value_.__l.__data_ + v16) = 46;
        if ((v31.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          v19 = &v31;
        else
          v19 = (std::string *)v31.__r_.__value_.__r.__words[0];
        if ((v31.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          size = HIBYTE(v31.__r_.__value_.__r.__words[2]);
        else
          size = v31.__r_.__value_.__l.__size_;
        v21 = std::string::append(&v26, (const std::string::value_type *)v19, size);
        v22 = *(_OWORD *)&v21->__r_.__value_.__l.__data_;
        v28 = v21->__r_.__value_.__r.__words[2];
        *(_OWORD *)__p = v22;
        v21->__r_.__value_.__l.__size_ = 0;
        v21->__r_.__value_.__r.__words[2] = 0;
        v21->__r_.__value_.__r.__words[0] = 0;
        google::protobuf::StringPiece::StringPiece<std::allocator<char>>(v29, (uint64_t *)__p, v23);
        *(_QWORD *)(Bytes + 8) = google::protobuf::DescriptorPool::Tables::AllocateString((uint64_t *)v13, v29[0], v29[1]);
        if (SHIBYTE(v28) < 0)
          operator delete(__p[0]);
        if (SHIBYTE(v26.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v26.__r_.__value_.__l.__data_);
        *(_DWORD *)(Bytes + 16) = a3;
        *(_QWORD *)(Bytes + 24) = a2;
        if (atomic_load(scc_info_EnumValueOptions_google_2fprotobuf_2fdescriptor_2eproto))
          google::protobuf::internal::InitSCCImpl(scc_info_EnumValueOptions_google_2fprotobuf_2fdescriptor_2eproto);
        *(_QWORD *)(Bytes + 32) = &google::protobuf::_EnumValueOptions_default_instance_;
        __p[0] = a2;
        __p[1] = (void *)v6;
        if (SHIBYTE(v31.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v31.__r_.__value_.__l.__data_);
      }
      std::mutex::unlock(v8);
    }
  }
  return Bytes;
}

void sub_18886DAEC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,void *__p,uint64_t a30,int a31,__int16 a32,char a33,char a34)
{
  std::mutex *v34;

  if (a34 < 0)
    operator delete(__p);
  std::mutex::unlock(v34);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::DescriptorPool::BuildFileFromDatabase(google::protobuf::DescriptorPool *this, const google::protobuf::FileDescriptorProto *a2)
{
  uint64_t v4;
  void *v6[25];

  if (std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::find<std::string>((_QWORD *)(*((_QWORD *)this + 4) + 24), (unsigned __int8 *)(*((_QWORD *)a2 + 22) & 0xFFFFFFFFFFFFFFFELL)))
  {
    return 0;
  }
  google::protobuf::DescriptorBuilder::DescriptorBuilder((uint64_t)v6, (uint64_t)this, *((_QWORD *)this + 4), *((_QWORD *)this + 2));
  v4 = google::protobuf::DescriptorBuilder::BuildFile((google::protobuf::DescriptorBuilder *)v6, a2);
  google::protobuf::DescriptorBuilder::~DescriptorBuilder(v6);
  if (!v4)
    std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::__emplace_unique_key_args<std::string,std::string const&>(*((_QWORD *)this + 4) + 24, (unsigned __int8 *)(*((_QWORD *)a2 + 22) & 0xFFFFFFFFFFFFFFFELL), *((_QWORD *)a2 + 22) & 0xFFFFFFFFFFFFFFFELL);
  return v4;
}

void sub_18886DBF0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  google::protobuf::DescriptorBuilder::~DescriptorBuilder((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::DescriptorPool::IsSubSymbolOfBuiltType(uint64_t a1, uint64_t a2, uint64_t a3)
{
  std::string::size_type v4;
  std::string::size_type v5;
  const char *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t IsSubSymbolOfBuiltType;
  __int128 v13;
  std::string v14;
  std::string __str;
  uint64_t v16;
  uint64_t v17;
  char v18;

  v16 = a2;
  v17 = a3;
  google::protobuf::StringPiece::ToString((google::protobuf::StringPiece *)&v16, &__str);
  v4 = std::string::rfind(&__str, 46, 0xFFFFFFFFFFFFFFFFLL);
  if (v4 == -1)
  {
LABEL_10:
    v10 = *(_QWORD *)(a1 + 24);
    if (v10)
      IsSubSymbolOfBuiltType = google::protobuf::DescriptorPool::IsSubSymbolOfBuiltType(v10, v16, v17);
    else
      IsSubSymbolOfBuiltType = 0;
  }
  else
  {
    v5 = v4;
    while (1)
    {
      std::string::basic_string(&v14, &__str, 0, v5, (std::allocator<char> *)&v18);
      if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__str.__r_.__value_.__l.__data_);
      __str = v14;
      v7 = *(_QWORD *)(a1 + 32);
      google::protobuf::StringPiece::StringPiece<std::allocator<char>>(&v13, (uint64_t *)&__str, v6);
      *(_OWORD *)&v14.__r_.__value_.__l.__data_ = v13;
      v8 = std::__hash_table<std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>,std::__unordered_map_hasher<google::protobuf::StringPiece,std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>,google::protobuf::hash<google::protobuf::StringPiece>,std::equal_to<google::protobuf::StringPiece>,true>,std::__unordered_map_equal<google::protobuf::StringPiece,std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>,std::equal_to<google::protobuf::StringPiece>,google::protobuf::hash<google::protobuf::StringPiece>,true>,std::allocator<std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>>>::find<google::protobuf::StringPiece>((_QWORD *)(v7 + 304), &v14.__r_.__value_.__l.__data_);
      if (v8)
      {
        v9 = v8 + 4;
      }
      else
      {
        v9 = &qword_1ECDBB718;
      }
      if ((*(_DWORD *)v9 | 8) != 8)
        break;
      v5 = std::string::rfind(&__str, 46, 0xFFFFFFFFFFFFFFFFLL);
      if (v5 == -1)
        goto LABEL_10;
    }
    IsSubSymbolOfBuiltType = 1;
  }
  if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__str.__r_.__value_.__l.__data_);
  return IsSubSymbolOfBuiltType;
}

void sub_18886DD34(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a20 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void google::protobuf::FieldDescriptor::DefaultValueAsString(std::string *this, google::protobuf::FieldDescriptor *a2, char *a3)
{
  int v3;
  unint64_t *v6;
  unint64_t v7;
  int v8;
  unint64_t v9;
  std::string::value_type *v10;
  uint64_t v11;
  std::string::value_type *v12;
  google::protobuf *v13;
  google::protobuf *v14;
  char *v15;
  uint64_t v16;
  __int128 *v17;
  __int128 v18;
  std::string::size_type v19;
  std::string *v20;
  __int128 v21;
  std::string *v22;
  __int128 v23;
  unint64_t *v24;
  unint64_t v25;
  __int128 *v26;
  std::string v27;
  google::protobuf::FieldDescriptor *v28;
  uint64_t (*v29)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);
  std::string v30;
  std::string __p;
  uint64_t v32;

  v3 = (int)a3;
  v32 = *MEMORY[0x1E0C80C00];
  if (!*((_BYTE *)a2 + 64))
  {
    LODWORD(v30.__r_.__value_.__l.__data_) = 3;
    v30.__r_.__value_.__l.__size_ = (std::string::size_type)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobu"
                                                            "f/src/google/protobuf/descriptor.cc";
    LODWORD(v30.__r_.__value_.__r.__words[2]) = 1985;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "CHECK failed: has_default_value(): ");
    std::string::append(&__p, "No default value");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v30);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
  v6 = (unint64_t *)*((_QWORD *)a2 + 6);
  if (v6)
  {
    v28 = a2;
    v29 = google::protobuf::FieldDescriptor::TypeOnceInit;
    v7 = atomic_load(v6);
    if (v7 != -1)
    {
      v30.__r_.__value_.__r.__words[0] = (std::string::size_type)&v29;
      v30.__r_.__value_.__l.__size_ = (std::string::size_type)&v28;
      v27.__r_.__value_.__r.__words[0] = (std::string::size_type)&v30;
      std::__call_once(v6, &v27, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  v8 = *((_DWORD *)a2 + 14);
  switch(v8)
  {
    case 1:
      google::protobuf::DoubleToBuffer((google::protobuf *)&v30, *((double *)a2 + 18), (char *)a2);
      std::string::basic_string[abi:ne180100]<0>(this, (char *)&v30);
      break;
    case 2:
      google::protobuf::FloatToBuffer((google::protobuf *)&v30, *((float *)a2 + 36), (char *)a2);
      std::string::basic_string[abi:ne180100]<0>(this, (char *)&v30);
      break;
    case 3:
    case 16:
    case 18:
      v11 = *((_QWORD *)a2 + 18);
      v30.__r_.__value_.__r.__words[0] = (std::string::size_type)&v30.__r_.__value_.__r.__words[2];
      if (v11 < 0)
      {
        v12 = &v30.__r_.__value_.__s.__data_[17];
        v30.__r_.__value_.__s.__data_[16] = 45;
        v11 = -v11;
      }
      else
      {
        v12 = &v30.__r_.__value_.__s.__data_[16];
      }
      v30.__r_.__value_.__l.__size_ = google::protobuf::FastUInt64ToBufferLeft((google::protobuf *)v11, v12, a3)
                                    - (_BYTE *)&v30.__r_.__value_.__r.__words[2];
      std::string::basic_string[abi:ne180100](this, v30.__r_.__value_.__l.__data_, v30.__r_.__value_.__l.__size_);
      break;
    case 4:
    case 6:
      v14 = (google::protobuf *)*((_QWORD *)a2 + 18);
      v30.__r_.__value_.__r.__words[0] = (std::string::size_type)&v30.__r_.__value_.__r.__words[2];
      v30.__r_.__value_.__l.__size_ = google::protobuf::FastUInt64ToBufferLeft(v14, &v30.__r_.__value_.__s.__data_[16], a3)- (_BYTE *)&v30.__r_.__value_.__r.__words[2];
      std::string::basic_string[abi:ne180100](this, v30.__r_.__value_.__l.__data_, v30.__r_.__value_.__l.__size_);
      break;
    case 5:
    case 15:
    case 17:
      v9 = *((unsigned int *)a2 + 36);
      v30.__r_.__value_.__r.__words[0] = (std::string::size_type)&v30.__r_.__value_.__r.__words[2];
      if ((v9 & 0x80000000) != 0)
      {
        v10 = &v30.__r_.__value_.__s.__data_[17];
        v30.__r_.__value_.__s.__data_[16] = 45;
        v9 = -(int)v9;
      }
      else
      {
        v10 = &v30.__r_.__value_.__s.__data_[16];
      }
      v30.__r_.__value_.__l.__size_ = google::protobuf::FastUInt32ToBufferLeft((google::protobuf *)v9, v10, a3)
                                    - (_BYTE *)&v30.__r_.__value_.__r.__words[2];
      std::string::basic_string[abi:ne180100](this, v30.__r_.__value_.__l.__data_, v30.__r_.__value_.__l.__size_);
      break;
    case 7:
    case 13:
      v13 = (google::protobuf *)*((unsigned int *)a2 + 36);
      v30.__r_.__value_.__r.__words[0] = (std::string::size_type)&v30.__r_.__value_.__r.__words[2];
      v30.__r_.__value_.__l.__size_ = google::protobuf::FastUInt32ToBufferLeft(v13, &v30.__r_.__value_.__s.__data_[16], a3)- (_BYTE *)&v30.__r_.__value_.__r.__words[2];
      std::string::basic_string[abi:ne180100](this, v30.__r_.__value_.__l.__data_, v30.__r_.__value_.__l.__size_);
      break;
    case 8:
      if (*((_BYTE *)a2 + 144))
        v15 = "true";
      else
        v15 = "false";
      std::string::basic_string[abi:ne180100]<0>(this, v15);
      break;
    case 9:
    case 12:
      if (v3)
      {
        google::protobuf::CEscape(*((uint64_t **)a2 + 18), a3, &v27);
        v20 = std::string::insert(&v27, 0, "\"");
        v21 = *(_OWORD *)&v20->__r_.__value_.__l.__data_;
        v30.__r_.__value_.__r.__words[2] = v20->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v30.__r_.__value_.__l.__data_ = v21;
        v20->__r_.__value_.__l.__size_ = 0;
        v20->__r_.__value_.__r.__words[2] = 0;
        v20->__r_.__value_.__r.__words[0] = 0;
        v22 = std::string::append(&v30, "\"");
        v23 = *(_OWORD *)&v22->__r_.__value_.__l.__data_;
        this->__r_.__value_.__r.__words[2] = v22->__r_.__value_.__r.__words[2];
        *(_OWORD *)&this->__r_.__value_.__l.__data_ = v23;
        v22->__r_.__value_.__l.__size_ = 0;
        v22->__r_.__value_.__r.__words[2] = 0;
        v22->__r_.__value_.__r.__words[0] = 0;
        if (SHIBYTE(v30.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v30.__r_.__value_.__l.__data_);
        if (SHIBYTE(v27.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v27.__r_.__value_.__l.__data_);
      }
      else
      {
        v24 = (unint64_t *)*((_QWORD *)a2 + 6);
        if (v24)
        {
          v28 = a2;
          v29 = google::protobuf::FieldDescriptor::TypeOnceInit;
          v25 = atomic_load(v24);
          if (v25 != -1)
          {
            v30.__r_.__value_.__r.__words[0] = (std::string::size_type)&v29;
            v30.__r_.__value_.__l.__size_ = (std::string::size_type)&v28;
            v27.__r_.__value_.__r.__words[0] = (std::string::size_type)&v30;
            std::__call_once(v24, &v27, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
          }
          v8 = *((_DWORD *)a2 + 14);
        }
        v26 = (__int128 *)*((_QWORD *)a2 + 18);
        if (v8 == 12)
        {
          google::protobuf::CEscape((uint64_t *)v26, a3, this);
        }
        else
        {
          if ((*((char *)v26 + 23) & 0x80000000) == 0)
          {
            v18 = *v26;
            v19 = *((_QWORD *)v26 + 2);
            goto LABEL_45;
          }
          std::string::__init_copy_ctor_external(this, *(const std::string::value_type **)v26, *((_QWORD *)v26 + 1));
        }
      }
      break;
    case 10:
    case 11:
      LODWORD(v30.__r_.__value_.__l.__data_) = 2;
      v30.__r_.__value_.__l.__size_ = (std::string::size_type)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libproto"
                                                              "buf/src/google/protobuf/descriptor.cc";
      LODWORD(v30.__r_.__value_.__r.__words[2]) = 2023;
      memset(&__p, 0, sizeof(__p));
      std::string::append(&__p, "Messages can't have default values!");
      google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v30);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__p.__r_.__value_.__l.__data_);
      goto LABEL_29;
    case 14:
      v16 = google::protobuf::FieldDescriptor::default_value_enum(a2);
      v17 = *(__int128 **)v16;
      if (*(char *)(*(_QWORD *)v16 + 23) < 0)
      {
        std::string::__init_copy_ctor_external(this, *(const std::string::value_type **)v17, *((_QWORD *)v17 + 1));
      }
      else
      {
        v18 = *v17;
        v19 = *((_QWORD *)v17 + 2);
LABEL_45:
        this->__r_.__value_.__r.__words[2] = v19;
        *(_OWORD *)&this->__r_.__value_.__l.__data_ = v18;
      }
      break;
    default:
LABEL_29:
      LODWORD(v30.__r_.__value_.__l.__data_) = 3;
      v30.__r_.__value_.__l.__size_ = (std::string::size_type)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libproto"
                                                              "buf/src/google/protobuf/descriptor.cc";
      LODWORD(v30.__r_.__value_.__r.__words[2]) = 2026;
      memset(&__p, 0, sizeof(__p));
      std::string::append(&__p, "Can't get here: failed to get default value as string");
      google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v30);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__p.__r_.__value_.__l.__data_);
      std::string::basic_string[abi:ne180100]<0>(this, "");
      break;
  }
}

void sub_18886E1E4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23,uint64_t a24,uint64_t a25,int a26,__int16 a27,char a28,char a29)
{
  if (a23 < 0)
    operator delete(__p);
  if (a15 < 0)
    operator delete(a10);
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::FieldDescriptor::default_value_enum(google::protobuf::FieldDescriptor *this)
{
  unint64_t *v2;
  unint64_t v3;
  google::protobuf::FieldDescriptor *v5;
  _QWORD *v6;
  _QWORD v7[2];

  v2 = (unint64_t *)*((_QWORD *)this + 6);
  if (v2)
  {
    v5 = this;
    v3 = atomic_load(v2);
    if (v3 != -1)
    {
      v7[0] = google::protobuf::FieldDescriptor::TypeOnceInit;
      v7[1] = &v5;
      v6 = v7;
      std::__call_once(v2, &v6, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  return *((_QWORD *)this + 18);
}

void google::protobuf::FileDescriptor::CopyTo(__int128 **this, google::protobuf::FileDescriptorProto *a2)
{
  google::protobuf::FileDescriptor *v3;
  __int128 *v4;
  uint64_t v5;
  google::protobuf::internal::ArenaImpl *v6;
  uint64_t v7;
  uint64_t v8;
  google::protobuf::internal::ArenaImpl *v9;
  uint64_t v10;
  google::protobuf::internal::ArenaImpl *v11;
  int v12;
  google::protobuf::internal::RepeatedPtrFieldBase *v13;
  const std::string *v14;
  int *v15;
  int v16;
  int v17;
  std::string *AlignedAndAddCleanup;
  BOOL v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  google::protobuf::FileDescriptorProto *v24;
  uint64_t v25;
  unsigned int v26;
  int v27;
  uint64_t v28;
  unsigned int v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int *v34;
  int v35;
  int v36;
  google::protobuf::DescriptorProto *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int *v43;
  int v44;
  int v45;
  google::protobuf::EnumDescriptorProto *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int *v51;
  int v52;
  int v53;
  google::protobuf::ServiceDescriptorProto *v54;
  uint64_t v55;
  uint64_t v56;
  __int128 *v57;
  uint64_t v58;
  google::protobuf::internal::ArenaImpl *v59;
  uint64_t v60;
  int *v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  int *v66;
  int v67;
  int v68;
  google::protobuf::MethodDescriptorProto *v69;
  int v70;
  uint64_t v71;
  uint64_t v72;
  __int128 *v73;
  uint64_t v74;
  google::protobuf::internal::ArenaImpl *v75;
  google::protobuf::internal::LazyDescriptor *v76;
  uint64_t v77;
  google::protobuf::internal::ArenaImpl *v78;
  uint64_t v79;
  google::protobuf::internal::ArenaImpl *v80;
  std::string *v81;
  uint64_t v82;
  int v83;
  const std::string::value_type *v84;
  std::string::size_type v85;
  google::protobuf::internal::LazyDescriptor *v86;
  uint64_t v87;
  google::protobuf::internal::ArenaImpl *v88;
  uint64_t v89;
  google::protobuf::internal::ArenaImpl *v90;
  std::string *v91;
  uint64_t v92;
  int v93;
  const std::string::value_type *v94;
  std::string::size_type v95;
  void *v96;
  uint64_t **v98;
  uint64_t v99;
  google::protobuf::internal::ArenaImpl *v100;
  const google::protobuf::MethodOptions *v101;
  uint64_t v102;
  const google::protobuf::EnumValueOptions **v103;
  void *v104;
  void *v105;
  uint64_t **v107;
  uint64_t v108;
  google::protobuf::internal::ArenaImpl *v109;
  const google::protobuf::EnumValueOptions *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  int *v114;
  int v115;
  int v116;
  google::protobuf::FieldDescriptorProto *v117;
  uint64_t v118;
  uint64_t v119;
  void *v120;
  uint64_t **v122;
  uint64_t v123;
  google::protobuf::internal::ArenaImpl *v124;
  const google::protobuf::FileOptions *v125;
  int *v126;
  uint64_t v127;
  uint64_t v128;
  google::protobuf::FileDescriptorProto *v129;
  void *__p[2];
  char v131;

  v3 = (google::protobuf::FileDescriptor *)this;
  v4 = *this;
  *((_DWORD *)a2 + 4) |= 1u;
  v5 = *((_QWORD *)a2 + 1);
  v6 = (google::protobuf::internal::ArenaImpl *)(v5 & 0xFFFFFFFFFFFFFFFELL);
  if ((v5 & 1) != 0)
    v6 = *(google::protobuf::internal::ArenaImpl **)v6;
  google::protobuf::internal::ArenaStringPtr::Set((std::string **)a2 + 22, (std::string *)&google::protobuf::internal::fixed_address_empty_string, v4, v6);
  v7 = *((_QWORD *)v3 + 1);
  if (*(char *)(v7 + 23) < 0)
  {
    if (!*(_QWORD *)(v7 + 8))
      goto LABEL_10;
  }
  else if (!*(_BYTE *)(v7 + 23))
  {
    goto LABEL_10;
  }
  *((_DWORD *)a2 + 4) |= 2u;
  v8 = *((_QWORD *)a2 + 1);
  v9 = (google::protobuf::internal::ArenaImpl *)(v8 & 0xFFFFFFFFFFFFFFFELL);
  if ((v8 & 1) != 0)
    v9 = *(google::protobuf::internal::ArenaImpl **)v9;
  google::protobuf::internal::ArenaStringPtr::Set((std::string **)a2 + 23, (std::string *)&google::protobuf::internal::fixed_address_empty_string, (__int128 *)v7, v9);
LABEL_10:
  if (*((_DWORD *)v3 + 15) == 3)
  {
    *((_DWORD *)a2 + 4) |= 4u;
    std::string::basic_string[abi:ne180100]<0>(__p, "proto3");
    v10 = *((_QWORD *)a2 + 1);
    v11 = (google::protobuf::internal::ArenaImpl *)(v10 & 0xFFFFFFFFFFFFFFFELL);
    if ((v10 & 1) != 0)
      v11 = *(google::protobuf::internal::ArenaImpl **)v11;
    google::protobuf::internal::ArenaStringPtr::Set((uint64_t *)a2 + 24, (uint64_t)&google::protobuf::internal::fixed_address_empty_string, (__int128 *)__p, v11);
    if (v131 < 0)
      operator delete(__p[0]);
  }
  v129 = a2;
  v126 = (int *)v3;
  if (*((int *)v3 + 8) >= 1)
  {
    v12 = 0;
    v13 = (google::protobuf::FileDescriptorProto *)((char *)a2 + 24);
    while (1)
    {
      v14 = *(const std::string **)google::protobuf::FileDescriptor::dependency(v3, v12);
      v15 = (int *)*((_QWORD *)a2 + 5);
      if (!v15)
        break;
      v16 = *((_DWORD *)a2 + 8);
      v17 = *v15;
      if (v16 >= *v15)
      {
        if (v17 == *((_DWORD *)a2 + 9))
        {
LABEL_22:
          v19 = __OFSUB__(v17, v16);
          v20 = v17 - v16;
          if (v20 < 0 == v19)
          {
            google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend(v13, v20 + 1);
            v15 = (int *)*((_QWORD *)a2 + 5);
          }
          v17 = *v15;
        }
        *v15 = v17 + 1;
        v21 = *(_QWORD *)v13;
        if (*(_QWORD *)v13)
        {
          if ((*(_BYTE *)(v21 + 24) & 1) != 0)
          AlignedAndAddCleanup = (std::string *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((google::protobuf::internal::ArenaImpl *)v21, 0x18uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<std::string>);
        }
        else
        {
          AlignedAndAddCleanup = (std::string *)operator new();
        }
        AlignedAndAddCleanup->__r_.__value_.__r.__words[0] = 0;
        AlignedAndAddCleanup->__r_.__value_.__l.__size_ = 0;
        AlignedAndAddCleanup->__r_.__value_.__r.__words[2] = 0;
        v22 = *((_QWORD *)a2 + 5);
        v23 = *((int *)a2 + 8);
        *((_DWORD *)a2 + 8) = v23 + 1;
        *(_QWORD *)(v22 + 8 * v23 + 8) = AlignedAndAddCleanup;
        v3 = (google::protobuf::FileDescriptor *)v126;
        goto LABEL_31;
      }
      *((_DWORD *)a2 + 8) = v16 + 1;
      AlignedAndAddCleanup = *(std::string **)&v15[2 * v16 + 2];
LABEL_31:
      std::string::operator=(AlignedAndAddCleanup, v14);
      if (++v12 >= *((_DWORD *)v3 + 8))
        goto LABEL_32;
    }
    v16 = *((_DWORD *)a2 + 8);
    v17 = *((_DWORD *)a2 + 9);
    goto LABEL_22;
  }
LABEL_32:
  v24 = a2;
  if (*((int *)v3 + 9) >= 1)
  {
    v25 = 0;
    v26 = *((_DWORD *)v129 + 36);
    do
    {
      v27 = *(_DWORD *)(*((_QWORD *)v3 + 11) + 4 * v25);
      if (v26 == *((_DWORD *)v129 + 37))
        google::protobuf::RepeatedField<int>::Reserve((unsigned int *)v129 + 36, v26 + 1);
      *(_DWORD *)(*((_QWORD *)v129 + 19) + 4 * v26++) = v27;
      *((_DWORD *)v129 + 36) = v26;
      ++v25;
    }
    while (v25 < *((int *)v3 + 9));
  }
  if (*((int *)v3 + 10) >= 1)
  {
    v28 = 0;
    v29 = *((_DWORD *)v129 + 40);
    do
    {
      v30 = *(_DWORD *)(*((_QWORD *)v3 + 12) + 4 * v28);
      if (v29 == *((_DWORD *)v129 + 41))
        google::protobuf::RepeatedField<int>::Reserve((unsigned int *)v129 + 40, v29 + 1);
      *(_DWORD *)(*((_QWORD *)v129 + 21) + 4 * v29++) = v30;
      *((_DWORD *)v129 + 40) = v29;
      ++v28;
    }
    while (v28 < *((int *)v3 + 10));
  }
  if (*((int *)v3 + 11) >= 1)
  {
    v31 = 0;
    v32 = 0;
    while (1)
    {
      v33 = *((_QWORD *)v3 + 13);
      v34 = (int *)*((_QWORD *)v129 + 8);
      if (!v34)
        break;
      v35 = *((_DWORD *)v129 + 14);
      v36 = *v34;
      if (v35 >= *v34)
      {
        if (v36 == *((_DWORD *)v129 + 15))
        {
LABEL_49:
          if (v35 <= v36)
          {
            google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::FileDescriptorProto *)((char *)v129 + 48), v36 - v35 + 1);
            v34 = (int *)*((_QWORD *)v129 + 8);
          }
          v36 = *v34;
        }
        *v34 = v36 + 1;
        v37 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::DescriptorProto>(*((google::protobuf::internal::ArenaImpl **)v129
                                                                                             + 6));
        v38 = *((_QWORD *)v129 + 8);
        v39 = *((int *)v129 + 14);
        *((_DWORD *)v129 + 14) = v39 + 1;
        *(_QWORD *)(v38 + 8 * v39 + 8) = v37;
        goto LABEL_53;
      }
      *((_DWORD *)v129 + 14) = v35 + 1;
      v37 = *(google::protobuf::DescriptorProto **)&v34[2 * v35 + 2];
LABEL_53:
      google::protobuf::Descriptor::CopyTo((google::protobuf::Descriptor *)(v33 + v31), v37);
      ++v32;
      v31 += 144;
      if (v32 >= *((int *)v3 + 11))
        goto LABEL_54;
    }
    v35 = *((_DWORD *)v129 + 14);
    v36 = *((_DWORD *)v129 + 15);
    goto LABEL_49;
  }
LABEL_54:
  if (*((int *)v3 + 12) >= 1)
  {
    v40 = 0;
    v41 = 0;
    while (1)
    {
      v42 = *((_QWORD *)v3 + 14);
      v43 = (int *)*((_QWORD *)v129 + 11);
      if (!v43)
        break;
      v44 = *((_DWORD *)v129 + 20);
      v45 = *v43;
      if (v44 >= *v43)
      {
        if (v45 == *((_DWORD *)v129 + 21))
        {
LABEL_61:
          if (v44 <= v45)
          {
            google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::FileDescriptorProto *)((char *)v129 + 72), v45 - v44 + 1);
            v43 = (int *)*((_QWORD *)v129 + 11);
          }
          v45 = *v43;
        }
        *v43 = v45 + 1;
        v46 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::EnumDescriptorProto>(*((google::protobuf::internal::ArenaImpl **)v129
                                                                                                 + 9));
        v47 = *((_QWORD *)v129 + 11);
        v48 = *((int *)v129 + 20);
        *((_DWORD *)v129 + 20) = v48 + 1;
        *(_QWORD *)(v47 + 8 * v48 + 8) = v46;
        goto LABEL_65;
      }
      *((_DWORD *)v129 + 20) = v44 + 1;
      v46 = *(google::protobuf::EnumDescriptorProto **)&v43[2 * v44 + 2];
LABEL_65:
      google::protobuf::EnumDescriptor::CopyTo((google::protobuf::EnumDescriptor *)(v42 + v40), v46);
      ++v41;
      v40 += 80;
      if (v41 >= *((int *)v3 + 12))
        goto LABEL_66;
    }
    v44 = *((_DWORD *)v129 + 20);
    v45 = *((_DWORD *)v129 + 21);
    goto LABEL_61;
  }
LABEL_66:
  if (*((int *)v3 + 13) >= 1)
  {
    v49 = 0;
    while (1)
    {
      v50 = *((_QWORD *)v3 + 15);
      v51 = (int *)*((_QWORD *)v24 + 14);
      if (!v51)
        break;
      v52 = *((_DWORD *)v24 + 26);
      v53 = *v51;
      if (v52 < *v51)
      {
        *((_DWORD *)v24 + 26) = v52 + 1;
        v54 = *(google::protobuf::ServiceDescriptorProto **)&v51[2 * v52 + 2];
        goto LABEL_77;
      }
      if (v53 == *((_DWORD *)v24 + 27))
        goto LABEL_73;
LABEL_76:
      *v51 = v53 + 1;
      v54 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::ServiceDescriptorProto>(*((google::protobuf::internal::ArenaImpl **)v24
                                                                                                  + 12));
      v55 = *((_QWORD *)v24 + 14);
      v56 = *((int *)v24 + 26);
      *((_DWORD *)v24 + 26) = v56 + 1;
      *(_QWORD *)(v55 + 8 * v56 + 8) = v54;
LABEL_77:
      v57 = *(__int128 **)(v50 + 48 * v49);
      *((_DWORD *)v54 + 4) |= 1u;
      v58 = *((_QWORD *)v54 + 1);
      v59 = (google::protobuf::internal::ArenaImpl *)(v58 & 0xFFFFFFFFFFFFFFFELL);
      if ((v58 & 1) != 0)
        v59 = *(google::protobuf::internal::ArenaImpl **)v59;
      google::protobuf::internal::ArenaStringPtr::Set((std::string **)v54 + 6, (std::string *)&google::protobuf::internal::fixed_address_empty_string, v57, v59);
      v127 = v50;
      v128 = v49;
      v60 = v50 + 48 * v49;
      v62 = *(_DWORD *)(v60 + 40);
      v61 = (int *)(v60 + 40);
      if (v62 >= 1)
      {
        v63 = 0;
        v64 = 0;
        while (1)
        {
          v65 = *(_QWORD *)(v127 + 48 * v128 + 32);
          v66 = (int *)*((_QWORD *)v54 + 5);
          if (!v66)
            break;
          v67 = *((_DWORD *)v54 + 8);
          v68 = *v66;
          if (v67 >= *v66)
          {
            if (v68 == *((_DWORD *)v54 + 9))
            {
LABEL_86:
              v19 = __OFSUB__(v68, v67);
              v70 = v68 - v67;
              if (v70 < 0 == v19)
              {
                google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::ServiceDescriptorProto *)((char *)v54 + 24), v70 + 1);
                v66 = (int *)*((_QWORD *)v54 + 5);
              }
              v68 = *v66;
            }
            *v66 = v68 + 1;
            v69 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::MethodDescriptorProto>(*((google::protobuf::internal::ArenaImpl **)v54 + 3));
            v71 = *((_QWORD *)v54 + 5);
            v72 = *((int *)v54 + 8);
            *((_DWORD *)v54 + 8) = v72 + 1;
            *(_QWORD *)(v71 + 8 * v72 + 8) = v69;
            goto LABEL_90;
          }
          *((_DWORD *)v54 + 8) = v67 + 1;
          v69 = *(google::protobuf::MethodDescriptorProto **)&v66[2 * v67 + 2];
LABEL_90:
          v73 = *(__int128 **)(v65 + v63);
          *((_DWORD *)v69 + 4) |= 1u;
          v74 = *((_QWORD *)v69 + 1);
          v75 = (google::protobuf::internal::ArenaImpl *)(v74 & 0xFFFFFFFFFFFFFFFELL);
          if ((v74 & 1) != 0)
            v75 = *(google::protobuf::internal::ArenaImpl **)v75;
          google::protobuf::internal::ArenaStringPtr::Set((std::string **)v69 + 3, (std::string *)&google::protobuf::internal::fixed_address_empty_string, v73, v75);
          v76 = (google::protobuf::internal::LazyDescriptor *)(v65 + v63 + 24);
          google::protobuf::internal::LazyDescriptor::Once(v76);
          if (!*(_BYTE *)(*(_QWORD *)v76 + 141))
          {
            *((_DWORD *)v69 + 4) |= 2u;
            std::string::basic_string[abi:ne180100]<0>(__p, ".");
            v77 = *((_QWORD *)v69 + 1);
            v78 = (google::protobuf::internal::ArenaImpl *)(v77 & 0xFFFFFFFFFFFFFFFELL);
            if ((v77 & 1) != 0)
              v78 = *(google::protobuf::internal::ArenaImpl **)v78;
            google::protobuf::internal::ArenaStringPtr::Set((uint64_t *)v69 + 4, (uint64_t)&google::protobuf::internal::fixed_address_empty_string, (__int128 *)__p, v78);
            if (v131 < 0)
              operator delete(__p[0]);
          }
          *((_DWORD *)v69 + 4) |= 2u;
          v79 = *((_QWORD *)v69 + 1);
          v80 = (google::protobuf::internal::ArenaImpl *)(v79 & 0xFFFFFFFFFFFFFFFELL);
          if ((v79 & 1) != 0)
            v80 = *(google::protobuf::internal::ArenaImpl **)v80;
          v81 = (std::string *)*((_QWORD *)v69 + 4);
          if (v81 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
            v81 = (std::string *)google::protobuf::internal::ArenaStringPtr::MutableSlow<>((_QWORD *)v69 + 4, v80);
          google::protobuf::internal::LazyDescriptor::Once((google::protobuf::internal::LazyDescriptor *)(v65 + v63 + 24));
          v82 = *(_QWORD *)(*(_QWORD *)v76 + 8);
          v83 = *(char *)(v82 + 23);
          if (v83 >= 0)
            v84 = *(const std::string::value_type **)(*(_QWORD *)v76 + 8);
          else
            v84 = *(const std::string::value_type **)v82;
          if (v83 >= 0)
            v85 = *(unsigned __int8 *)(v82 + 23);
          else
            v85 = *(_QWORD *)(v82 + 8);
          std::string::append(v81, v84, v85);
          v86 = (google::protobuf::internal::LazyDescriptor *)(v65 + v63 + 56);
          google::protobuf::internal::LazyDescriptor::Once(v86);
          if (!*(_BYTE *)(*(_QWORD *)v86 + 141))
          {
            *((_DWORD *)v69 + 4) |= 4u;
            std::string::basic_string[abi:ne180100]<0>(__p, ".");
            v87 = *((_QWORD *)v69 + 1);
            v88 = (google::protobuf::internal::ArenaImpl *)(v87 & 0xFFFFFFFFFFFFFFFELL);
            if ((v87 & 1) != 0)
              v88 = *(google::protobuf::internal::ArenaImpl **)v88;
            google::protobuf::internal::ArenaStringPtr::Set((uint64_t *)v69 + 5, (uint64_t)&google::protobuf::internal::fixed_address_empty_string, (__int128 *)__p, v88);
            if (v131 < 0)
              operator delete(__p[0]);
          }
          *((_DWORD *)v69 + 4) |= 4u;
          v89 = *((_QWORD *)v69 + 1);
          v90 = (google::protobuf::internal::ArenaImpl *)(v89 & 0xFFFFFFFFFFFFFFFELL);
          if ((v89 & 1) != 0)
            v90 = *(google::protobuf::internal::ArenaImpl **)v90;
          v91 = (std::string *)*((_QWORD *)v69 + 5);
          if (v91 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
            v91 = (std::string *)google::protobuf::internal::ArenaStringPtr::MutableSlow<>((_QWORD *)v69 + 5, v90);
          google::protobuf::internal::LazyDescriptor::Once((google::protobuf::internal::LazyDescriptor *)(v65 + v63 + 56));
          v92 = *(_QWORD *)(*(_QWORD *)v86 + 8);
          v93 = *(char *)(v92 + 23);
          if (v93 >= 0)
            v94 = *(const std::string::value_type **)(*(_QWORD *)v86 + 8);
          else
            v94 = *(const std::string::value_type **)v92;
          if (v93 >= 0)
            v95 = *(unsigned __int8 *)(v92 + 23);
          else
            v95 = *(_QWORD *)(v92 + 8);
          std::string::append(v91, v94, v95);
          v96 = *(void **)(v65 + v63 + 88);
          if (atomic_load(scc_info_MethodOptions_google_2fprotobuf_2fdescriptor_2eproto))
            google::protobuf::internal::InitSCCImpl(scc_info_MethodOptions_google_2fprotobuf_2fdescriptor_2eproto);
          if (v96 != &google::protobuf::_MethodOptions_default_instance_)
          {
            *((_DWORD *)v69 + 4) |= 8u;
            v98 = (uint64_t **)*((_QWORD *)v69 + 6);
            if (!v98)
            {
              v99 = *((_QWORD *)v69 + 1);
              v100 = (google::protobuf::internal::ArenaImpl *)(v99 & 0xFFFFFFFFFFFFFFFELL);
              if ((v99 & 1) != 0)
                v100 = *(google::protobuf::internal::ArenaImpl **)v100;
              v98 = (uint64_t **)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::MethodOptions>(v100);
              *((_QWORD *)v69 + 6) = v98;
            }
            v101 = *(const google::protobuf::MethodOptions **)(v65 + v63 + 88);
            if (v101 != (const google::protobuf::MethodOptions *)v98)
            {
              google::protobuf::MethodOptions::Clear(v98);
              google::protobuf::MethodOptions::MergeFrom((google::protobuf::MethodOptions *)v98, v101);
            }
          }
          if (*(_BYTE *)(v65 + v63 + 96))
          {
            *((_DWORD *)v69 + 4) |= 0x10u;
            *((_BYTE *)v69 + 56) = 1;
          }
          if (*(_BYTE *)(v65 + v63 + 97))
          {
            *((_DWORD *)v69 + 4) |= 0x20u;
            *((_BYTE *)v69 + 57) = 1;
          }
          ++v64;
          v63 += 104;
          if (v64 >= *v61)
            goto LABEL_136;
        }
        v67 = *((_DWORD *)v54 + 8);
        v68 = *((_DWORD *)v54 + 9);
        goto LABEL_86;
      }
LABEL_136:
      v102 = v127 + 48 * v128;
      v105 = *(void **)(v102 + 24);
      v103 = (const google::protobuf::EnumValueOptions **)(v102 + 24);
      v104 = v105;
      if (atomic_load(scc_info_ServiceOptions_google_2fprotobuf_2fdescriptor_2eproto))
        google::protobuf::internal::InitSCCImpl(scc_info_ServiceOptions_google_2fprotobuf_2fdescriptor_2eproto);
      v3 = (google::protobuf::FileDescriptor *)v126;
      if (v104 != &google::protobuf::_ServiceOptions_default_instance_)
      {
        *((_DWORD *)v54 + 4) |= 2u;
        v107 = (uint64_t **)*((_QWORD *)v54 + 7);
        if (!v107)
        {
          v108 = *((_QWORD *)v54 + 1);
          v109 = (google::protobuf::internal::ArenaImpl *)(v108 & 0xFFFFFFFFFFFFFFFELL);
          if ((v108 & 1) != 0)
            v109 = *(google::protobuf::internal::ArenaImpl **)v109;
          v107 = (uint64_t **)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::ServiceOptions>(v109);
          *((_QWORD *)v54 + 7) = v107;
        }
        v110 = *v103;
        if (*v103 != (const google::protobuf::EnumValueOptions *)v107)
        {
          google::protobuf::ServiceOptions::Clear(v107);
          google::protobuf::EnumValueOptions::MergeFrom((google::protobuf::EnumValueOptions *)v107, v110);
        }
      }
      v49 = v128 + 1;
      v24 = v129;
      if (v128 + 1 >= v126[13])
        goto LABEL_146;
    }
    v52 = *((_DWORD *)v24 + 26);
    v53 = *((_DWORD *)v24 + 27);
LABEL_73:
    if (v52 <= v53)
    {
      google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::FileDescriptorProto *)((char *)v129 + 96), v53 - v52 + 1);
      v51 = (int *)*((_QWORD *)v24 + 14);
    }
    v53 = *v51;
    goto LABEL_76;
  }
LABEL_146:
  if (*((int *)v3 + 14) >= 1)
  {
    v111 = 0;
    v112 = 0;
    while (1)
    {
      v113 = *((_QWORD *)v3 + 16);
      v114 = (int *)*((_QWORD *)v24 + 17);
      if (!v114)
        break;
      v115 = *((_DWORD *)v24 + 32);
      v116 = *v114;
      if (v115 >= *v114)
      {
        if (v116 == *((_DWORD *)v24 + 33))
        {
LABEL_153:
          if (v115 <= v116)
          {
            google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::FileDescriptorProto *)((char *)v24 + 120), v116 - v115 + 1);
            v114 = (int *)*((_QWORD *)v24 + 17);
          }
          v116 = *v114;
        }
        *v114 = v116 + 1;
        v117 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::FieldDescriptorProto>(*((google::protobuf::internal::ArenaImpl **)v24 + 15));
        v118 = *((_QWORD *)v24 + 17);
        v119 = *((int *)v24 + 32);
        *((_DWORD *)v24 + 32) = v119 + 1;
        *(_QWORD *)(v118 + 8 * v119 + 8) = v117;
        goto LABEL_157;
      }
      *((_DWORD *)v24 + 32) = v115 + 1;
      v117 = *(google::protobuf::FieldDescriptorProto **)&v114[2 * v115 + 2];
LABEL_157:
      google::protobuf::FieldDescriptor::CopyTo((google::protobuf::FieldDescriptor *)(v113 + v111), v117);
      ++v112;
      v111 += 152;
      if (v112 >= *((int *)v3 + 14))
        goto LABEL_158;
    }
    v115 = *((_DWORD *)v24 + 32);
    v116 = *((_DWORD *)v24 + 33);
    goto LABEL_153;
  }
LABEL_158:
  v120 = (void *)*((_QWORD *)v3 + 17);
  if (atomic_load(scc_info_FileOptions_google_2fprotobuf_2fdescriptor_2eproto))
    google::protobuf::internal::InitSCCImpl(scc_info_FileOptions_google_2fprotobuf_2fdescriptor_2eproto);
  if (v120 != &google::protobuf::_FileOptions_default_instance_)
  {
    *((_DWORD *)v24 + 4) |= 8u;
    v122 = (uint64_t **)*((_QWORD *)v24 + 25);
    if (!v122)
    {
      v123 = *((_QWORD *)v24 + 1);
      v124 = (google::protobuf::internal::ArenaImpl *)(v123 & 0xFFFFFFFFFFFFFFFELL);
      if ((v123 & 1) != 0)
        v124 = *(google::protobuf::internal::ArenaImpl **)v124;
      v122 = (uint64_t **)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::FileOptions>(v124);
      *((_QWORD *)v24 + 25) = v122;
    }
    v125 = (const google::protobuf::FileOptions *)*((_QWORD *)v3 + 17);
    if (v125 != (const google::protobuf::FileOptions *)v122)
    {
      google::protobuf::FileOptions::Clear(v122);
      google::protobuf::FileOptions::MergeFrom((google::protobuf::FileOptions *)v122, v125);
    }
  }
}

void sub_18886EDFC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::FileDescriptor::dependency(google::protobuf::FileDescriptor *this, int a2)
{
  unint64_t *v4;
  unint64_t v5;
  google::protobuf::FileDescriptor *v7;
  _QWORD *v8;
  _QWORD v9[2];

  v4 = (unint64_t *)*((_QWORD *)this + 3);
  if (v4)
  {
    v7 = this;
    v5 = atomic_load(v4);
    if (v5 != -1)
    {
      v9[0] = google::protobuf::FileDescriptor::DependenciesOnceInit;
      v9[1] = &v7;
      v8 = v9;
      std::__call_once(v4, &v8, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (&)(google::protobuf::FileDescriptor const*),google::protobuf::FileDescriptor const*&&>>);
    }
  }
  return *(_QWORD *)(*((_QWORD *)this + 9) + 8 * a2);
}

void google::protobuf::Descriptor::CopyTo(google::protobuf::Descriptor *this, google::protobuf::DescriptorProto *a2)
{
  __int128 *v4;
  uint64_t v5;
  google::protobuf::internal::ArenaImpl *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  int v11;
  int v12;
  google::protobuf::FieldDescriptorProto *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int *v19;
  int v20;
  int v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  __int128 *v25;
  uint64_t v26;
  google::protobuf::internal::ArenaImpl *v27;
  uint64_t v28;
  void *v29;
  uint64_t **v31;
  uint64_t v32;
  google::protobuf::internal::ArenaImpl *v33;
  const google::protobuf::ExtensionRangeOptions *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int *v38;
  int v39;
  int v40;
  google::protobuf::DescriptorProto *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int *v47;
  int v48;
  int v49;
  google::protobuf::EnumDescriptorProto *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  int *v56;
  int v57;
  int v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  int *v62;
  int v63;
  int v64;
  int v65;
  void *v66;
  const google::protobuf::ExtensionRangeOptions *v68;
  uint64_t **v69;
  uint64_t v70;
  google::protobuf::internal::ArenaImpl *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  int *v75;
  int v76;
  int v77;
  google::protobuf::FieldDescriptorProto *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  int *v83;
  int v84;
  int v85;
  _DWORD *v86;
  uint64_t v87;
  uint64_t v88;
  int *v89;
  int v90;
  int v91;
  uint64_t v92;
  uint64_t *v93;
  const std::string *v94;
  int *v95;
  int v96;
  int v97;
  std::string *AlignedAndAddCleanup;
  BOOL v99;
  int v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  void *v104;
  uint64_t **v106;
  uint64_t v107;
  google::protobuf::internal::ArenaImpl *v108;
  const google::protobuf::MessageOptions *v109;

  v4 = *(__int128 **)this;
  *((_DWORD *)a2 + 4) |= 1u;
  v5 = *((_QWORD *)a2 + 1);
  v6 = (google::protobuf::internal::ArenaImpl *)(v5 & 0xFFFFFFFFFFFFFFFELL);
  if ((v5 & 1) != 0)
    v6 = *(google::protobuf::internal::ArenaImpl **)v6;
  google::protobuf::internal::ArenaStringPtr::Set((std::string **)a2 + 27, (std::string *)&google::protobuf::internal::fixed_address_empty_string, v4, v6);
  if (*((int *)this + 26) >= 1)
  {
    v7 = 0;
    v8 = 0;
    while (1)
    {
      v9 = *((_QWORD *)this + 5);
      v10 = (int *)*((_QWORD *)a2 + 5);
      if (!v10)
        break;
      v11 = *((_DWORD *)a2 + 8);
      v12 = *v10;
      if (v11 >= *v10)
      {
        if (v12 == *((_DWORD *)a2 + 9))
        {
LABEL_10:
          if (v11 <= v12)
          {
            google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::DescriptorProto *)((char *)a2 + 24), v12 - v11 + 1);
            v10 = (int *)*((_QWORD *)a2 + 5);
          }
          v12 = *v10;
        }
        *v10 = v12 + 1;
        v13 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::FieldDescriptorProto>(*((google::protobuf::internal::ArenaImpl **)a2
                                                                                                  + 3));
        v14 = *((_QWORD *)a2 + 5);
        v15 = *((int *)a2 + 8);
        *((_DWORD *)a2 + 8) = v15 + 1;
        *(_QWORD *)(v14 + 8 * v15 + 8) = v13;
        goto LABEL_14;
      }
      *((_DWORD *)a2 + 8) = v11 + 1;
      v13 = *(google::protobuf::FieldDescriptorProto **)&v10[2 * v11 + 2];
LABEL_14:
      google::protobuf::FieldDescriptor::CopyTo((google::protobuf::FieldDescriptor *)(v9 + v7), v13);
      ++v8;
      v7 += 152;
      if (v8 >= *((int *)this + 26))
        goto LABEL_15;
    }
    v11 = *((_DWORD *)a2 + 8);
    v12 = *((_DWORD *)a2 + 9);
    goto LABEL_10;
  }
LABEL_15:
  if (*((int *)this + 27) >= 1)
  {
    v16 = 0;
    v17 = 0;
    while (1)
    {
      v18 = *((_QWORD *)this + 6);
      v19 = (int *)*((_QWORD *)a2 + 20);
      if (!v19)
        break;
      v20 = *((_DWORD *)a2 + 38);
      v21 = *v19;
      if (v20 >= *v19)
      {
        if (v21 == *((_DWORD *)a2 + 39))
        {
LABEL_22:
          if (v20 <= v21)
          {
            google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::DescriptorProto *)((char *)a2 + 144), v21 - v20 + 1);
            v19 = (int *)*((_QWORD *)a2 + 20);
          }
          v21 = *v19;
        }
        *v19 = v21 + 1;
        v22 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::OneofDescriptorProto>(*((google::protobuf::internal::ArenaImpl **)a2
                                                                                                  + 18));
        v23 = *((_QWORD *)a2 + 20);
        v24 = *((int *)a2 + 38);
        *((_DWORD *)a2 + 38) = v24 + 1;
        *(_QWORD *)(v23 + 8 * v24 + 8) = v22;
        goto LABEL_26;
      }
      *((_DWORD *)a2 + 38) = v20 + 1;
      v22 = *(_QWORD **)&v19[2 * v20 + 2];
LABEL_26:
      v25 = *(__int128 **)(v18 + v16);
      *((_DWORD *)v22 + 4) |= 1u;
      v26 = v22[1];
      v27 = (google::protobuf::internal::ArenaImpl *)(v26 & 0xFFFFFFFFFFFFFFFELL);
      if ((v26 & 1) != 0)
        v27 = *(google::protobuf::internal::ArenaImpl **)v27;
      google::protobuf::internal::ArenaStringPtr::Set((std::string **)v22 + 3, (std::string *)&google::protobuf::internal::fixed_address_empty_string, v25, v27);
      v28 = v18 + v16;
      v29 = *(void **)(v18 + v16 + 40);
      if (atomic_load(scc_info_OneofOptions_google_2fprotobuf_2fdescriptor_2eproto))
        google::protobuf::internal::InitSCCImpl(scc_info_OneofOptions_google_2fprotobuf_2fdescriptor_2eproto);
      if (v29 != &google::protobuf::_OneofOptions_default_instance_)
      {
        *((_DWORD *)v22 + 4) |= 2u;
        v31 = (uint64_t **)v22[4];
        if (!v31)
        {
          v32 = v22[1];
          v33 = (google::protobuf::internal::ArenaImpl *)(v32 & 0xFFFFFFFFFFFFFFFELL);
          if ((v32 & 1) != 0)
            v33 = *(google::protobuf::internal::ArenaImpl **)v33;
          v31 = (uint64_t **)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::OneofOptions>(v33);
          v22[4] = v31;
        }
        v34 = *(const google::protobuf::ExtensionRangeOptions **)(v28 + 40);
        if (v34 != (const google::protobuf::ExtensionRangeOptions *)v31)
        {
          google::protobuf::OneofOptions::Clear(v31);
          google::protobuf::ExtensionRangeOptions::MergeFrom((google::protobuf::ExtensionRangeOptions *)v31, v34);
        }
      }
      ++v17;
      v16 += 48;
      if (v17 >= *((int *)this + 27))
        goto LABEL_38;
    }
    v20 = *((_DWORD *)a2 + 38);
    v21 = *((_DWORD *)a2 + 39);
    goto LABEL_22;
  }
LABEL_38:
  if (*((int *)this + 29) >= 1)
  {
    v35 = 0;
    v36 = 0;
    while (1)
    {
      v37 = *((_QWORD *)this + 7);
      v38 = (int *)*((_QWORD *)a2 + 8);
      if (!v38)
        break;
      v39 = *((_DWORD *)a2 + 14);
      v40 = *v38;
      if (v39 >= *v38)
      {
        if (v40 == *((_DWORD *)a2 + 15))
        {
LABEL_45:
          if (v39 <= v40)
          {
            google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::DescriptorProto *)((char *)a2 + 48), v40 - v39 + 1);
            v38 = (int *)*((_QWORD *)a2 + 8);
          }
          v40 = *v38;
        }
        *v38 = v40 + 1;
        v41 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::DescriptorProto>(*((google::protobuf::internal::ArenaImpl **)a2
                                                                                             + 6));
        v42 = *((_QWORD *)a2 + 8);
        v43 = *((int *)a2 + 14);
        *((_DWORD *)a2 + 14) = v43 + 1;
        *(_QWORD *)(v42 + 8 * v43 + 8) = v41;
        goto LABEL_49;
      }
      *((_DWORD *)a2 + 14) = v39 + 1;
      v41 = *(google::protobuf::DescriptorProto **)&v38[2 * v39 + 2];
LABEL_49:
      google::protobuf::Descriptor::CopyTo((google::protobuf::Descriptor *)(v37 + v35), v41);
      ++v36;
      v35 += 144;
      if (v36 >= *((int *)this + 29))
        goto LABEL_50;
    }
    v39 = *((_DWORD *)a2 + 14);
    v40 = *((_DWORD *)a2 + 15);
    goto LABEL_45;
  }
LABEL_50:
  if (*((int *)this + 30) >= 1)
  {
    v44 = 0;
    v45 = 0;
    while (1)
    {
      v46 = *((_QWORD *)this + 8);
      v47 = (int *)*((_QWORD *)a2 + 11);
      if (!v47)
        break;
      v48 = *((_DWORD *)a2 + 20);
      v49 = *v47;
      if (v48 >= *v47)
      {
        if (v49 == *((_DWORD *)a2 + 21))
        {
LABEL_57:
          if (v48 <= v49)
          {
            google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::DescriptorProto *)((char *)a2 + 72), v49 - v48 + 1);
            v47 = (int *)*((_QWORD *)a2 + 11);
          }
          v49 = *v47;
        }
        *v47 = v49 + 1;
        v50 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::EnumDescriptorProto>(*((google::protobuf::internal::ArenaImpl **)a2
                                                                                                 + 9));
        v51 = *((_QWORD *)a2 + 11);
        v52 = *((int *)a2 + 20);
        *((_DWORD *)a2 + 20) = v52 + 1;
        *(_QWORD *)(v51 + 8 * v52 + 8) = v50;
        goto LABEL_61;
      }
      *((_DWORD *)a2 + 20) = v48 + 1;
      v50 = *(google::protobuf::EnumDescriptorProto **)&v47[2 * v48 + 2];
LABEL_61:
      google::protobuf::EnumDescriptor::CopyTo((google::protobuf::EnumDescriptor *)(v46 + v44), v50);
      ++v45;
      v44 += 80;
      if (v45 >= *((int *)this + 30))
        goto LABEL_62;
    }
    v48 = *((_DWORD *)a2 + 20);
    v49 = *((_DWORD *)a2 + 21);
    goto LABEL_57;
  }
LABEL_62:
  if (*((int *)this + 31) >= 1)
  {
    v53 = 0;
    v54 = 0;
    while (1)
    {
      v55 = *((_QWORD *)this + 9);
      v56 = (int *)*((_QWORD *)a2 + 14);
      if (!v56)
        break;
      v57 = *((_DWORD *)a2 + 26);
      v58 = *v56;
      if (v57 >= *v56)
      {
        if (v58 == *((_DWORD *)a2 + 27))
        {
LABEL_69:
          if (v57 <= v58)
          {
            google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::DescriptorProto *)((char *)a2 + 96), v58 - v57 + 1);
            v56 = (int *)*((_QWORD *)a2 + 14);
          }
          v58 = *v56;
        }
        *v56 = v58 + 1;
        v59 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::DescriptorProto_ExtensionRange>(*((google::protobuf::internal::ArenaImpl **)a2 + 12));
        v60 = *((_QWORD *)a2 + 14);
        v61 = *((int *)a2 + 26);
        *((_DWORD *)a2 + 26) = v61 + 1;
        *(_QWORD *)(v60 + 8 * v61 + 8) = v59;
        goto LABEL_73;
      }
      *((_DWORD *)a2 + 26) = v57 + 1;
      v59 = *(_QWORD **)&v56[2 * v57 + 2];
LABEL_73:
      v62 = (int *)(v55 + v53);
      v63 = *v62;
      v64 = *((_DWORD *)v59 + 4);
      *((_DWORD *)v59 + 4) = v64 | 2;
      v65 = v62[1];
      *((_DWORD *)v59 + 4) = v64 | 6;
      *((_DWORD *)v59 + 8) = v63;
      *((_DWORD *)v59 + 9) = v65;
      v66 = (void *)*((_QWORD *)v62 + 1);
      if (atomic_load(scc_info_ExtensionRangeOptions_google_2fprotobuf_2fdescriptor_2eproto))
        google::protobuf::internal::InitSCCImpl(scc_info_ExtensionRangeOptions_google_2fprotobuf_2fdescriptor_2eproto);
      if (v66 != &google::protobuf::_ExtensionRangeOptions_default_instance_)
      {
        v68 = (const google::protobuf::ExtensionRangeOptions *)*((_QWORD *)v62 + 1);
        *((_DWORD *)v59 + 4) |= 1u;
        v69 = (uint64_t **)v59[3];
        if (!v69)
        {
          v70 = v59[1];
          v71 = (google::protobuf::internal::ArenaImpl *)(v70 & 0xFFFFFFFFFFFFFFFELL);
          if ((v70 & 1) != 0)
            v71 = *(google::protobuf::internal::ArenaImpl **)v71;
          v69 = (uint64_t **)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::ExtensionRangeOptions>(v71);
          v59[3] = v69;
        }
        if (v68 != (const google::protobuf::ExtensionRangeOptions *)v69)
        {
          google::protobuf::ExtensionRangeOptions::Clear(v69);
          google::protobuf::ExtensionRangeOptions::MergeFrom((google::protobuf::ExtensionRangeOptions *)v69, v68);
        }
      }
      ++v54;
      v53 += 16;
      if (v54 >= *((int *)this + 31))
        goto LABEL_83;
    }
    v57 = *((_DWORD *)a2 + 26);
    v58 = *((_DWORD *)a2 + 27);
    goto LABEL_69;
  }
LABEL_83:
  if (*((int *)this + 32) >= 1)
  {
    v72 = 0;
    v73 = 0;
    while (1)
    {
      v74 = *((_QWORD *)this + 10);
      v75 = (int *)*((_QWORD *)a2 + 17);
      if (!v75)
        break;
      v76 = *((_DWORD *)a2 + 32);
      v77 = *v75;
      if (v76 >= *v75)
      {
        if (v77 == *((_DWORD *)a2 + 33))
        {
LABEL_90:
          if (v76 <= v77)
          {
            google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::DescriptorProto *)((char *)a2 + 120), v77 - v76 + 1);
            v75 = (int *)*((_QWORD *)a2 + 17);
          }
          v77 = *v75;
        }
        *v75 = v77 + 1;
        v78 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::FieldDescriptorProto>(*((google::protobuf::internal::ArenaImpl **)a2
                                                                                                  + 15));
        v79 = *((_QWORD *)a2 + 17);
        v80 = *((int *)a2 + 32);
        *((_DWORD *)a2 + 32) = v80 + 1;
        *(_QWORD *)(v79 + 8 * v80 + 8) = v78;
        goto LABEL_94;
      }
      *((_DWORD *)a2 + 32) = v76 + 1;
      v78 = *(google::protobuf::FieldDescriptorProto **)&v75[2 * v76 + 2];
LABEL_94:
      google::protobuf::FieldDescriptor::CopyTo((google::protobuf::FieldDescriptor *)(v74 + v72), v78);
      ++v73;
      v72 += 152;
      if (v73 >= *((int *)this + 32))
        goto LABEL_95;
    }
    v76 = *((_DWORD *)a2 + 32);
    v77 = *((_DWORD *)a2 + 33);
    goto LABEL_90;
  }
LABEL_95:
  if (*((int *)this + 33) >= 1)
  {
    v81 = 0;
    v82 = 0;
    while (1)
    {
      v83 = (int *)*((_QWORD *)a2 + 23);
      if (!v83)
        break;
      v84 = *((_DWORD *)a2 + 44);
      v85 = *v83;
      if (v84 >= *v83)
      {
        if (v85 == *((_DWORD *)a2 + 45))
        {
LABEL_102:
          if (v84 <= v85)
          {
            google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::DescriptorProto *)((char *)a2 + 168), v85 - v84 + 1);
            v83 = (int *)*((_QWORD *)a2 + 23);
          }
          v85 = *v83;
        }
        *v83 = v85 + 1;
        v86 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::DescriptorProto_ReservedRange>(*((google::protobuf::internal::ArenaImpl **)a2 + 21));
        v87 = *((_QWORD *)a2 + 23);
        v88 = *((int *)a2 + 44);
        *((_DWORD *)a2 + 44) = v88 + 1;
        *(_QWORD *)(v87 + 8 * v88 + 8) = v86;
        goto LABEL_106;
      }
      *((_DWORD *)a2 + 44) = v84 + 1;
      v86 = *(_DWORD **)&v83[2 * v84 + 2];
LABEL_106:
      v89 = (int *)(*((_QWORD *)this + 11) + v81);
      v90 = *v89;
      v91 = v86[4];
      v86[4] = v91 | 1;
      LODWORD(v89) = v89[1];
      v86[4] = v91 | 3;
      v86[6] = v90;
      v86[7] = (_DWORD)v89;
      ++v82;
      v81 += 8;
      if (v82 >= *((int *)this + 33))
        goto LABEL_107;
    }
    v84 = *((_DWORD *)a2 + 44);
    v85 = *((_DWORD *)a2 + 45);
    goto LABEL_102;
  }
LABEL_107:
  if (*((int *)this + 34) >= 1)
  {
    v92 = 0;
    v93 = (uint64_t *)((char *)a2 + 192);
    while (1)
    {
      v94 = *(const std::string **)(*((_QWORD *)this + 12) + 8 * v92);
      v95 = (int *)*((_QWORD *)a2 + 26);
      if (!v95)
        break;
      v96 = *((_DWORD *)a2 + 50);
      v97 = *v95;
      if (v96 >= *v95)
      {
        if (v97 == *((_DWORD *)a2 + 51))
        {
LABEL_114:
          v99 = __OFSUB__(v97, v96);
          v100 = v97 - v96;
          if (v100 < 0 == v99)
          {
            google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::DescriptorProto *)((char *)a2 + 192), v100 + 1);
            v95 = (int *)*((_QWORD *)a2 + 26);
          }
          v97 = *v95;
        }
        *v95 = v97 + 1;
        v101 = *v93;
        if (*v93)
        {
          if ((*(_BYTE *)(v101 + 24) & 1) != 0)
          AlignedAndAddCleanup = (std::string *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((google::protobuf::internal::ArenaImpl *)v101, 0x18uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<std::string>);
        }
        else
        {
          AlignedAndAddCleanup = (std::string *)operator new();
        }
        AlignedAndAddCleanup->__r_.__value_.__r.__words[0] = 0;
        AlignedAndAddCleanup->__r_.__value_.__l.__size_ = 0;
        AlignedAndAddCleanup->__r_.__value_.__r.__words[2] = 0;
        v102 = *((_QWORD *)a2 + 26);
        v103 = *((int *)a2 + 50);
        *((_DWORD *)a2 + 50) = v103 + 1;
        *(_QWORD *)(v102 + 8 * v103 + 8) = AlignedAndAddCleanup;
        goto LABEL_123;
      }
      *((_DWORD *)a2 + 50) = v96 + 1;
      AlignedAndAddCleanup = *(std::string **)&v95[2 * v96 + 2];
LABEL_123:
      std::string::operator=(AlignedAndAddCleanup, v94);
      if (++v92 >= *((int *)this + 34))
        goto LABEL_124;
    }
    v96 = *((_DWORD *)a2 + 50);
    v97 = *((_DWORD *)a2 + 51);
    goto LABEL_114;
  }
LABEL_124:
  v104 = (void *)*((_QWORD *)this + 4);
  if (atomic_load(scc_info_MessageOptions_google_2fprotobuf_2fdescriptor_2eproto))
    google::protobuf::internal::InitSCCImpl(scc_info_MessageOptions_google_2fprotobuf_2fdescriptor_2eproto);
  if (v104 != &google::protobuf::_MessageOptions_default_instance_)
  {
    *((_DWORD *)a2 + 4) |= 2u;
    v106 = (uint64_t **)*((_QWORD *)a2 + 28);
    if (!v106)
    {
      v107 = *((_QWORD *)a2 + 1);
      v108 = (google::protobuf::internal::ArenaImpl *)(v107 & 0xFFFFFFFFFFFFFFFELL);
      if ((v107 & 1) != 0)
        v108 = *(google::protobuf::internal::ArenaImpl **)v108;
      v106 = (uint64_t **)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::MessageOptions>(v108);
      *((_QWORD *)a2 + 28) = v106;
    }
    v109 = (const google::protobuf::MessageOptions *)*((_QWORD *)this + 4);
    if (v109 != (const google::protobuf::MessageOptions *)v106)
    {
      google::protobuf::MessageOptions::Clear(v106);
      google::protobuf::MessageOptions::MergeFrom((google::protobuf::MessageOptions *)v106, v109);
    }
  }
}

void google::protobuf::EnumDescriptor::CopyTo(google::protobuf::EnumDescriptor *this, google::protobuf::EnumDescriptorProto *a2)
{
  __int128 *v4;
  uint64_t v5;
  google::protobuf::internal::ArenaImpl *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  int v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 *v16;
  uint64_t v17;
  google::protobuf::internal::ArenaImpl *v18;
  uint64_t v19;
  int v20;
  void *v21;
  uint64_t **v23;
  uint64_t v24;
  google::protobuf::internal::ArenaImpl *v25;
  const google::protobuf::EnumValueOptions *v26;
  uint64_t v27;
  uint64_t v28;
  int *v29;
  int v30;
  int v31;
  _DWORD *v32;
  uint64_t v33;
  uint64_t v34;
  int *v35;
  int v36;
  int v37;
  uint64_t v38;
  uint64_t *v39;
  const std::string *v40;
  int *v41;
  int v42;
  int v43;
  std::string *AlignedAndAddCleanup;
  BOOL v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  uint64_t **v52;
  uint64_t v53;
  google::protobuf::internal::ArenaImpl *v54;
  const google::protobuf::EnumOptions *v55;

  v4 = *(__int128 **)this;
  *((_DWORD *)a2 + 4) |= 1u;
  v5 = *((_QWORD *)a2 + 1);
  v6 = (google::protobuf::internal::ArenaImpl *)(v5 & 0xFFFFFFFFFFFFFFFELL);
  if ((v5 & 1) != 0)
    v6 = *(google::protobuf::internal::ArenaImpl **)v6;
  google::protobuf::internal::ArenaStringPtr::Set((std::string **)a2 + 12, (std::string *)&google::protobuf::internal::fixed_address_empty_string, v4, v6);
  if (*((int *)this + 11) >= 1)
  {
    v7 = 0;
    v8 = 0;
    while (1)
    {
      v9 = *((_QWORD *)this + 6);
      v10 = (int *)*((_QWORD *)a2 + 5);
      if (!v10)
        break;
      v11 = *((_DWORD *)a2 + 8);
      v12 = *v10;
      if (v11 >= *v10)
      {
        if (v12 == *((_DWORD *)a2 + 9))
        {
LABEL_10:
          if (v11 <= v12)
          {
            google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::EnumDescriptorProto *)((char *)a2 + 24), v12 - v11 + 1);
            v10 = (int *)*((_QWORD *)a2 + 5);
          }
          v12 = *v10;
        }
        *v10 = v12 + 1;
        v13 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::EnumValueDescriptorProto>(*((google::protobuf::internal::ArenaImpl **)a2 + 3));
        v14 = *((_QWORD *)a2 + 5);
        v15 = *((int *)a2 + 8);
        *((_DWORD *)a2 + 8) = v15 + 1;
        *(_QWORD *)(v14 + 8 * v15 + 8) = v13;
        goto LABEL_14;
      }
      *((_DWORD *)a2 + 8) = v11 + 1;
      v13 = *(_QWORD *)&v10[2 * v11 + 2];
LABEL_14:
      v16 = *(__int128 **)(v9 + v7);
      *(_DWORD *)(v13 + 16) |= 1u;
      v17 = *(_QWORD *)(v13 + 8);
      v18 = (google::protobuf::internal::ArenaImpl *)(v17 & 0xFFFFFFFFFFFFFFFELL);
      if ((v17 & 1) != 0)
        v18 = *(google::protobuf::internal::ArenaImpl **)v18;
      google::protobuf::internal::ArenaStringPtr::Set((std::string **)(v13 + 24), (std::string *)&google::protobuf::internal::fixed_address_empty_string, v16, v18);
      v19 = v9 + v7;
      v20 = *(_DWORD *)(v9 + v7 + 16);
      *(_DWORD *)(v13 + 16) |= 4u;
      *(_DWORD *)(v13 + 40) = v20;
      v21 = *(void **)(v9 + v7 + 32);
      if (atomic_load(scc_info_EnumValueOptions_google_2fprotobuf_2fdescriptor_2eproto))
        google::protobuf::internal::InitSCCImpl(scc_info_EnumValueOptions_google_2fprotobuf_2fdescriptor_2eproto);
      if (v21 != &google::protobuf::_EnumValueOptions_default_instance_)
      {
        *(_DWORD *)(v13 + 16) |= 2u;
        v23 = *(uint64_t ***)(v13 + 32);
        if (!v23)
        {
          v24 = *(_QWORD *)(v13 + 8);
          v25 = (google::protobuf::internal::ArenaImpl *)(v24 & 0xFFFFFFFFFFFFFFFELL);
          if ((v24 & 1) != 0)
            v25 = *(google::protobuf::internal::ArenaImpl **)v25;
          v23 = (uint64_t **)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::EnumValueOptions>(v25);
          *(_QWORD *)(v13 + 32) = v23;
        }
        v26 = *(const google::protobuf::EnumValueOptions **)(v19 + 32);
        if (v26 != (const google::protobuf::EnumValueOptions *)v23)
        {
          google::protobuf::EnumValueOptions::Clear(v23);
          google::protobuf::EnumValueOptions::MergeFrom((google::protobuf::EnumValueOptions *)v23, v26);
        }
      }
      ++v8;
      v7 += 40;
      if (v8 >= *((int *)this + 11))
        goto LABEL_26;
    }
    v11 = *((_DWORD *)a2 + 8);
    v12 = *((_DWORD *)a2 + 9);
    goto LABEL_10;
  }
LABEL_26:
  if (*((int *)this + 14) >= 1)
  {
    v27 = 0;
    v28 = 0;
    while (1)
    {
      v29 = (int *)*((_QWORD *)a2 + 8);
      if (!v29)
        break;
      v30 = *((_DWORD *)a2 + 14);
      v31 = *v29;
      if (v30 >= *v29)
      {
        if (v31 == *((_DWORD *)a2 + 15))
        {
LABEL_33:
          if (v30 <= v31)
          {
            google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::EnumDescriptorProto *)((char *)a2 + 48), v31 - v30 + 1);
            v29 = (int *)*((_QWORD *)a2 + 8);
          }
          v31 = *v29;
        }
        *v29 = v31 + 1;
        v32 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::EnumDescriptorProto_EnumReservedRange>(*((google::protobuf::internal::ArenaImpl **)a2 + 6));
        v33 = *((_QWORD *)a2 + 8);
        v34 = *((int *)a2 + 14);
        *((_DWORD *)a2 + 14) = v34 + 1;
        *(_QWORD *)(v33 + 8 * v34 + 8) = v32;
        goto LABEL_37;
      }
      *((_DWORD *)a2 + 14) = v30 + 1;
      v32 = *(_DWORD **)&v29[2 * v30 + 2];
LABEL_37:
      v35 = (int *)(*((_QWORD *)this + 8) + v27);
      v36 = *v35;
      v37 = v32[4];
      v32[4] = v37 | 1;
      LODWORD(v35) = v35[1];
      v32[4] = v37 | 3;
      v32[6] = v36;
      v32[7] = (_DWORD)v35;
      ++v28;
      v27 += 8;
      if (v28 >= *((int *)this + 14))
        goto LABEL_38;
    }
    v30 = *((_DWORD *)a2 + 14);
    v31 = *((_DWORD *)a2 + 15);
    goto LABEL_33;
  }
LABEL_38:
  if (*((int *)this + 15) >= 1)
  {
    v38 = 0;
    v39 = (uint64_t *)((char *)a2 + 72);
    while (1)
    {
      v40 = *(const std::string **)(*((_QWORD *)this + 9) + 8 * v38);
      v41 = (int *)*((_QWORD *)a2 + 11);
      if (!v41)
        break;
      v42 = *((_DWORD *)a2 + 20);
      v43 = *v41;
      if (v42 >= *v41)
      {
        if (v43 == *((_DWORD *)a2 + 21))
        {
LABEL_45:
          v45 = __OFSUB__(v43, v42);
          v46 = v43 - v42;
          if (v46 < 0 == v45)
          {
            google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::EnumDescriptorProto *)((char *)a2 + 72), v46 + 1);
            v41 = (int *)*((_QWORD *)a2 + 11);
          }
          v43 = *v41;
        }
        *v41 = v43 + 1;
        v47 = *v39;
        if (*v39)
        {
          if ((*(_BYTE *)(v47 + 24) & 1) != 0)
          AlignedAndAddCleanup = (std::string *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((google::protobuf::internal::ArenaImpl *)v47, 0x18uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<std::string>);
        }
        else
        {
          AlignedAndAddCleanup = (std::string *)operator new();
        }
        AlignedAndAddCleanup->__r_.__value_.__r.__words[0] = 0;
        AlignedAndAddCleanup->__r_.__value_.__l.__size_ = 0;
        AlignedAndAddCleanup->__r_.__value_.__r.__words[2] = 0;
        v48 = *((_QWORD *)a2 + 11);
        v49 = *((int *)a2 + 20);
        *((_DWORD *)a2 + 20) = v49 + 1;
        *(_QWORD *)(v48 + 8 * v49 + 8) = AlignedAndAddCleanup;
        goto LABEL_54;
      }
      *((_DWORD *)a2 + 20) = v42 + 1;
      AlignedAndAddCleanup = *(std::string **)&v41[2 * v42 + 2];
LABEL_54:
      std::string::operator=(AlignedAndAddCleanup, v40);
      if (++v38 >= *((int *)this + 15))
        goto LABEL_55;
    }
    v42 = *((_DWORD *)a2 + 20);
    v43 = *((_DWORD *)a2 + 21);
    goto LABEL_45;
  }
LABEL_55:
  v50 = (void *)*((_QWORD *)this + 4);
  if (atomic_load(scc_info_EnumOptions_google_2fprotobuf_2fdescriptor_2eproto))
    google::protobuf::internal::InitSCCImpl(scc_info_EnumOptions_google_2fprotobuf_2fdescriptor_2eproto);
  if (v50 != &google::protobuf::_EnumOptions_default_instance_)
  {
    *((_DWORD *)a2 + 4) |= 2u;
    v52 = (uint64_t **)*((_QWORD *)a2 + 13);
    if (!v52)
    {
      v53 = *((_QWORD *)a2 + 1);
      v54 = (google::protobuf::internal::ArenaImpl *)(v53 & 0xFFFFFFFFFFFFFFFELL);
      if ((v53 & 1) != 0)
        v54 = *(google::protobuf::internal::ArenaImpl **)v54;
      v52 = (uint64_t **)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::EnumOptions>(v54);
      *((_QWORD *)a2 + 13) = v52;
    }
    v55 = (const google::protobuf::EnumOptions *)*((_QWORD *)this + 4);
    if (v55 != (const google::protobuf::EnumOptions *)v52)
    {
      google::protobuf::EnumOptions::Clear(v52);
      google::protobuf::EnumOptions::MergeFrom((google::protobuf::EnumOptions *)v52, v55);
    }
  }
}

void google::protobuf::FieldDescriptor::CopyTo(google::protobuf::FieldDescriptor *this, google::protobuf::FieldDescriptorProto *a2)
{
  __int128 *v4;
  uint64_t v5;
  google::protobuf::internal::ArenaImpl *v6;
  int v7;
  int v8;
  int v9;
  __int128 *v10;
  uint64_t v11;
  google::protobuf::internal::ArenaImpl *v12;
  int v13;
  int v14;
  unint64_t *v15;
  unint64_t v16;
  int v17;
  int v18;
  uint64_t v19;
  google::protobuf::internal::ArenaImpl *v20;
  uint64_t v21;
  google::protobuf::internal::ArenaImpl *v22;
  std::string *v23;
  uint64_t v24;
  int v25;
  const std::string::value_type *v26;
  std::string::size_type v27;
  unint64_t *v28;
  unint64_t v29;
  int v30;
  uint64_t v31;
  google::protobuf::internal::ArenaImpl *v32;
  uint64_t v33;
  google::protobuf::internal::ArenaImpl *v34;
  std::string *v35;
  uint64_t v36;
  unint64_t *v37;
  unint64_t v38;
  uint64_t v39;
  google::protobuf::internal::ArenaImpl *v40;
  uint64_t v41;
  google::protobuf::internal::ArenaImpl *v42;
  uint64_t v43;
  int v44;
  const std::string::value_type *v45;
  std::string::size_type v46;
  uint64_t v47;
  google::protobuf::internal::ArenaImpl *v48;
  uint64_t v49;
  int v50;
  void *v51;
  uint64_t **v53;
  uint64_t v54;
  google::protobuf::internal::ArenaImpl *v55;
  const google::protobuf::FieldOptions *v56;
  google::protobuf::FieldDescriptor *v57;
  uint64_t (*v58)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);
  std::string *p_p;
  std::string __p;

  v4 = *(__int128 **)this;
  *((_DWORD *)a2 + 4) |= 1u;
  v5 = *((_QWORD *)a2 + 1);
  v6 = (google::protobuf::internal::ArenaImpl *)(v5 & 0xFFFFFFFFFFFFFFFELL);
  if ((v5 & 1) != 0)
    v6 = *(google::protobuf::internal::ArenaImpl **)v6;
  google::protobuf::internal::ArenaStringPtr::Set((std::string **)a2 + 3, (std::string *)&google::protobuf::internal::fixed_address_empty_string, v4, v6);
  v7 = *((_DWORD *)this + 17);
  v8 = *((_DWORD *)a2 + 4);
  v9 = v8 | 0x40;
  *((_DWORD *)a2 + 4) = v8 | 0x40;
  *((_DWORD *)a2 + 18) = v7;
  if (*((_BYTE *)this + 66))
  {
    v10 = (__int128 *)*((_QWORD *)this + 4);
    *((_DWORD *)a2 + 4) = v8 | 0x50;
    v11 = *((_QWORD *)a2 + 1);
    v12 = (google::protobuf::internal::ArenaImpl *)(v11 & 0xFFFFFFFFFFFFFFFELL);
    if ((v11 & 1) != 0)
      v12 = *(google::protobuf::internal::ArenaImpl **)v12;
    google::protobuf::internal::ArenaStringPtr::Set((std::string **)a2 + 7, (std::string *)&google::protobuf::internal::fixed_address_empty_string, v10, v12);
    v9 = *((_DWORD *)a2 + 4);
  }
  if (*((_BYTE *)this + 65))
  {
    v9 |= 0x100u;
    *((_DWORD *)a2 + 4) = v9;
    *((_BYTE *)a2 + 80) = 1;
  }
  v13 = *((_DWORD *)this + 15);
  v14 = v9 | 0x200;
  *((_DWORD *)a2 + 4) = v14;
  *((_DWORD *)a2 + 21) = v13;
  v15 = (unint64_t *)*((_QWORD *)this + 6);
  if (v15)
  {
    v57 = this;
    v58 = google::protobuf::FieldDescriptor::TypeOnceInit;
    v16 = atomic_load(v15);
    if (v16 != -1)
    {
      __p.__r_.__value_.__r.__words[0] = (std::string::size_type)&v58;
      __p.__r_.__value_.__l.__size_ = (std::string::size_type)&v57;
      p_p = &__p;
      std::__call_once(v15, &p_p, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
    v14 = *((_DWORD *)a2 + 4);
  }
  v17 = *((_DWORD *)this + 14);
  v18 = v14 | 0x400;
  *((_DWORD *)a2 + 4) = v14 | 0x400;
  *((_DWORD *)a2 + 22) = v17;
  if (*((_BYTE *)this + 67))
  {
    if (!*(_BYTE *)(*((_QWORD *)this + 10) + 141))
    {
      *((_DWORD *)a2 + 4) = v14 | 0x402;
      std::string::basic_string[abi:ne180100]<0>(&__p, ".");
      v19 = *((_QWORD *)a2 + 1);
      v20 = (google::protobuf::internal::ArenaImpl *)(v19 & 0xFFFFFFFFFFFFFFFELL);
      if ((v19 & 1) != 0)
        v20 = *(google::protobuf::internal::ArenaImpl **)v20;
      google::protobuf::internal::ArenaStringPtr::Set((uint64_t *)a2 + 4, (uint64_t)&google::protobuf::internal::fixed_address_empty_string, (__int128 *)&__p, v20);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__p.__r_.__value_.__l.__data_);
      v18 = *((_DWORD *)a2 + 4);
    }
    *((_DWORD *)a2 + 4) = v18 | 2;
    v21 = *((_QWORD *)a2 + 1);
    v22 = (google::protobuf::internal::ArenaImpl *)(v21 & 0xFFFFFFFFFFFFFFFELL);
    if ((v21 & 1) != 0)
      v22 = *(google::protobuf::internal::ArenaImpl **)v22;
    v23 = (std::string *)*((_QWORD *)a2 + 4);
    if (v23 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
      v23 = (std::string *)google::protobuf::internal::ArenaStringPtr::MutableSlow<>((_QWORD *)a2 + 4, v22);
    v24 = *(_QWORD *)(*((_QWORD *)this + 10) + 8);
    v25 = *(char *)(v24 + 23);
    if (v25 >= 0)
      v26 = *(const std::string::value_type **)(*((_QWORD *)this + 10) + 8);
    else
      v26 = *(const std::string::value_type **)v24;
    if (v25 >= 0)
      v27 = *(unsigned __int8 *)(v24 + 23);
    else
      v27 = *(_QWORD *)(v24 + 8);
    std::string::append(v23, v26, v27);
  }
  v28 = (unint64_t *)*((_QWORD *)this + 6);
  if (v28)
  {
    v57 = this;
    v58 = google::protobuf::FieldDescriptor::TypeOnceInit;
    v29 = atomic_load(v28);
    if (v29 != -1)
    {
      __p.__r_.__value_.__r.__words[0] = (std::string::size_type)&v58;
      __p.__r_.__value_.__l.__size_ = (std::string::size_type)&v57;
      p_p = &__p;
      std::__call_once(v28, &p_p, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  v30 = *((_DWORD *)this + 14);
  if ((v30 & 0xFFFFFFFE) == 0xA)
  {
    if (*(_BYTE *)(google::protobuf::FieldDescriptor::message_type(this) + 140))
    {
      *((_DWORD *)a2 + 22) = 1;
      *((_DWORD *)a2 + 4) &= ~0x400u;
    }
    if (!*(_BYTE *)(google::protobuf::FieldDescriptor::message_type(this) + 141))
    {
      *((_DWORD *)a2 + 4) |= 4u;
      std::string::basic_string[abi:ne180100]<0>(&__p, ".");
      v31 = *((_QWORD *)a2 + 1);
      v32 = (google::protobuf::internal::ArenaImpl *)(v31 & 0xFFFFFFFFFFFFFFFELL);
      if ((v31 & 1) != 0)
        v32 = *(google::protobuf::internal::ArenaImpl **)v32;
      google::protobuf::internal::ArenaStringPtr::Set((uint64_t *)a2 + 5, (uint64_t)&google::protobuf::internal::fixed_address_empty_string, (__int128 *)&__p, v32);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__p.__r_.__value_.__l.__data_);
    }
    *((_DWORD *)a2 + 4) |= 4u;
    v33 = *((_QWORD *)a2 + 1);
    v34 = (google::protobuf::internal::ArenaImpl *)(v33 & 0xFFFFFFFFFFFFFFFELL);
    if ((v33 & 1) != 0)
      v34 = *(google::protobuf::internal::ArenaImpl **)v34;
    v35 = (std::string *)*((_QWORD *)a2 + 5);
    if (v35 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
      v35 = (std::string *)google::protobuf::internal::ArenaStringPtr::MutableSlow<>((_QWORD *)a2 + 5, v34);
    v36 = google::protobuf::FieldDescriptor::message_type(this);
LABEL_62:
    v43 = *(_QWORD *)(v36 + 8);
    v44 = *(char *)(v43 + 23);
    if (v44 >= 0)
      v45 = *(const std::string::value_type **)(v36 + 8);
    else
      v45 = *(const std::string::value_type **)v43;
    if (v44 >= 0)
      v46 = *(unsigned __int8 *)(v43 + 23);
    else
      v46 = *(_QWORD *)(v43 + 8);
    std::string::append(v35, v45, v46);
    goto LABEL_69;
  }
  v37 = (unint64_t *)*((_QWORD *)this + 6);
  if (v37)
  {
    v57 = this;
    v58 = google::protobuf::FieldDescriptor::TypeOnceInit;
    v38 = atomic_load(v37);
    if (v38 != -1)
    {
      __p.__r_.__value_.__r.__words[0] = (std::string::size_type)&v58;
      __p.__r_.__value_.__l.__size_ = (std::string::size_type)&v57;
      p_p = &__p;
      std::__call_once(v37, &p_p, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
    v30 = *((_DWORD *)this + 14);
  }
  if (v30 == 14)
  {
    if (!*(_BYTE *)(google::protobuf::FieldDescriptor::enum_type(this) + 41))
    {
      *((_DWORD *)a2 + 4) |= 4u;
      std::string::basic_string[abi:ne180100]<0>(&__p, ".");
      v39 = *((_QWORD *)a2 + 1);
      v40 = (google::protobuf::internal::ArenaImpl *)(v39 & 0xFFFFFFFFFFFFFFFELL);
      if ((v39 & 1) != 0)
        v40 = *(google::protobuf::internal::ArenaImpl **)v40;
      google::protobuf::internal::ArenaStringPtr::Set((uint64_t *)a2 + 5, (uint64_t)&google::protobuf::internal::fixed_address_empty_string, (__int128 *)&__p, v40);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__p.__r_.__value_.__l.__data_);
    }
    *((_DWORD *)a2 + 4) |= 4u;
    v41 = *((_QWORD *)a2 + 1);
    v42 = (google::protobuf::internal::ArenaImpl *)(v41 & 0xFFFFFFFFFFFFFFFELL);
    if ((v41 & 1) != 0)
      v42 = *(google::protobuf::internal::ArenaImpl **)v42;
    v35 = (std::string *)*((_QWORD *)a2 + 5);
    if (v35 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
      v35 = (std::string *)google::protobuf::internal::ArenaStringPtr::MutableSlow<>((_QWORD *)a2 + 5, v42);
    v36 = google::protobuf::FieldDescriptor::enum_type(this);
    goto LABEL_62;
  }
LABEL_69:
  if (*((_BYTE *)this + 64))
  {
    google::protobuf::FieldDescriptor::DefaultValueAsString(&__p, this, 0);
    *((_DWORD *)a2 + 4) |= 8u;
    v47 = *((_QWORD *)a2 + 1);
    v48 = (google::protobuf::internal::ArenaImpl *)(v47 & 0xFFFFFFFFFFFFFFFELL);
    if ((v47 & 1) != 0)
      v48 = *(google::protobuf::internal::ArenaImpl **)v48;
    google::protobuf::internal::ArenaStringPtr::Set((uint64_t *)a2 + 6, (uint64_t)&google::protobuf::internal::fixed_address_empty_string, (__int128 *)&__p, v48);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
  v49 = *((_QWORD *)this + 11);
  if (v49 && !*((_BYTE *)this + 67))
  {
    v50 = -1431655765 * ((unint64_t)(v49 - *(_QWORD *)(*(_QWORD *)(v49 + 16) + 48)) >> 4);
    *((_DWORD *)a2 + 4) |= 0x80u;
    *((_DWORD *)a2 + 19) = v50;
  }
  v51 = (void *)*((_QWORD *)this + 15);
  if (atomic_load(scc_info_FieldOptions_google_2fprotobuf_2fdescriptor_2eproto))
    google::protobuf::internal::InitSCCImpl(scc_info_FieldOptions_google_2fprotobuf_2fdescriptor_2eproto);
  if (v51 != &google::protobuf::_FieldOptions_default_instance_)
  {
    *((_DWORD *)a2 + 4) |= 0x20u;
    v53 = (uint64_t **)*((_QWORD *)a2 + 8);
    if (!v53)
    {
      v54 = *((_QWORD *)a2 + 1);
      v55 = (google::protobuf::internal::ArenaImpl *)(v54 & 0xFFFFFFFFFFFFFFFELL);
      if ((v54 & 1) != 0)
        v55 = *(google::protobuf::internal::ArenaImpl **)v55;
      v53 = (uint64_t **)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::FieldOptions>(v55);
      *((_QWORD *)a2 + 8) = v53;
    }
    v56 = (const google::protobuf::FieldOptions *)*((_QWORD *)this + 15);
    if (v56 != (const google::protobuf::FieldOptions *)v53)
    {
      google::protobuf::FieldOptions::Clear(v53);
      google::protobuf::FieldOptions::MergeFrom((google::protobuf::FieldOptions *)v53, v56);
    }
  }
}

void sub_1888701E0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::FieldDescriptor::enum_type(google::protobuf::FieldDescriptor *this)
{
  unint64_t *v2;
  unint64_t v3;
  google::protobuf::FieldDescriptor *v5;
  _QWORD *v6;
  _QWORD v7[2];

  v2 = (unint64_t *)*((_QWORD *)this + 6);
  if (v2)
  {
    v5 = this;
    v3 = atomic_load(v2);
    if (v3 != -1)
    {
      v7[0] = google::protobuf::FieldDescriptor::TypeOnceInit;
      v7[1] = &v5;
      v6 = v7;
      std::__call_once(v2, &v6, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  return *((_QWORD *)this + 14);
}

void google::protobuf::`anonymous namespace'::SourceLocationCommentPrinter::AddPreComment(uint64_t a1, std::string *a2)
{
  uint64_t v4;
  uint64_t i;
  std::string *p_p;
  std::string::size_type size;
  std::string *v8;
  std::string::size_type v9;
  std::string __p;

  if (*(_BYTE *)a1)
  {
    v4 = *(_QWORD *)(a1 + 72);
    for (i = *(_QWORD *)(a1 + 80); v4 != i; v4 += 24)
    {
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        p_p = &__p;
      else
        p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
      else
        size = __p.__r_.__value_.__l.__size_;
      std::string::append(a2, (const std::string::value_type *)p_p, size);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__p.__r_.__value_.__l.__data_);
      std::string::append(a2, "\n");
    }
    if (*(char *)(a1 + 47) < 0)
    {
      if (!*(_QWORD *)(a1 + 32))
        return;
    }
    else if (!*(_BYTE *)(a1 + 47))
    {
      return;
    }
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v8 = &__p;
    else
      v8 = (std::string *)__p.__r_.__value_.__r.__words[0];
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v9 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    else
      v9 = __p.__r_.__value_.__l.__size_;
    std::string::append(a2, (const std::string::value_type *)v8, v9);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
}

void sub_188870380(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void google::protobuf::`anonymous namespace'::SourceLocationCommentPrinter::AddPostComment(uint64_t a1, std::string *a2)
{
  std::string *p_p;
  std::string::size_type size;
  std::string __p;

  if (*(_BYTE *)a1)
  {
    if (*(char *)(a1 + 71) < 0)
    {
      if (!*(_QWORD *)(a1 + 56))
        return;
    }
    else if (!*(_BYTE *)(a1 + 71))
    {
      return;
    }
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      p_p = &__p;
    else
      p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    else
      size = __p.__r_.__value_.__l.__size_;
    std::string::append(a2, (const std::string::value_type *)p_p, size);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
}

void sub_18887042C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void google::protobuf::`anonymous namespace'::SourceLocationCommentPrinter::~SourceLocationCommentPrinter(void **this)
{
  void **v2;

  if (*((char *)this + 127) < 0)
    operator delete(this[13]);
  v2 = this + 9;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100](&v2);
  if (*((char *)this + 71) < 0)
    operator delete(this[6]);
  if (*((char *)this + 47) < 0)
    operator delete(this[3]);
}

void google::protobuf::`anonymous namespace'::FormatLineOptions(int a1, const google::protobuf::Message *a2, uint64_t a3, std::string *a4)
{
  uint64_t *v8;
  uint64_t *i;
  int v10;
  void **p_p;
  uint64_t v12;
  uint64_t *v13;
  BOOL v14;
  __int128 v15;
  uint64_t *v16;
  uint64_t *v17;
  uint64_t v18;
  void *__p;
  uint64_t v20;
  unsigned __int8 v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  int v37;
  uint64_t *v38;
  int v39;
  void **v40;
  int v41;
  uint64_t v42;

  v42 = *MEMORY[0x1E0C80C00];
  std::string::basic_string[abi:ne180100](&__p, 2 * a1, 32);
  v16 = 0;
  v17 = 0;
  v18 = 0;
  {
    v8 = v16;
    for (i = v17; v8 != i; v8 += 3)
    {
      v10 = v21;
      p_p = (void **)__p;
      if ((v21 & 0x80u) == 0)
        p_p = &__p;
      v40 = p_p;
      if ((v21 & 0x80u) != 0)
        v10 = v20;
      v41 = v10;
      LODWORD(v12) = *((char *)v8 + 23);
      v13 = (uint64_t *)*v8;
      v14 = (int)v12 < 0;
      if ((int)v12 >= 0)
        v13 = v8;
      v38 = v13;
      LODWORD(v12) = v12;
      if (v14)
        v12 = v8[1];
      v39 = v12;
      v36 = 0;
      v37 = -1;
      v34 = 0;
      v35 = -1;
      v32 = 0;
      v33 = -1;
      v30 = 0;
      v31 = -1;
      v28 = 0;
      v29 = -1;
      v26 = 0;
      v27 = -1;
      v24 = 0;
      v25 = -1;
      v22 = 0;
      v23 = -1;
      *(_QWORD *)&v15 = &v28;
      *((_QWORD *)&v15 + 1) = &v26;
      google::protobuf::strings::SubstituteAndAppend(a4, "$0option $1;\n",
        (uint64_t)&v40,
        (uint64_t)&v38,
        (uint64_t)&v36,
        (uint64_t)&v34,
        (uint64_t)&v32,
        (uint64_t)&v30,
        v15,
        (uint64_t)&v24,
        (uint64_t)&v22);
    }
  }
  v40 = (void **)&v16;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100](&v40);
  if ((char)v21 < 0)
    operator delete(__p);
}

void sub_188870668(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  uint64_t v21;

  *(_QWORD *)(v21 - 144) = &a13;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)(v21 - 144));
  if (a21 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void google::protobuf::EnumDescriptor::DebugString(uint64_t *a1, int a2, uint64_t a3, __int16 *a4)
{
  char SourceLocation;
  int v9;
  std::string *p_b;
  void *v11;
  int v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char *v19;
  int v20;
  std::string *v21;
  uint64_t ***v22;
  uint64_t **v23;
  int v24;
  uint64_t *v25;
  int v26;
  int v27;
  std::string *v28;
  int v29;
  std::string *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  unsigned int *v34;
  AddrObjGoogle::protobuf *v35;
  char *v36;
  uint64_t v37;
  int v38;
  std::string *v39;
  const char *v40;
  uint64_t v41;
  std::string *v42;
  int v43;
  uint64_t v44;
  int v45;
  std::string *v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  int v56;
  _BYTE v57[8];
  uint64_t v58;
  void *v59[2];
  void *v60[2];
  __int128 v61;
  __int128 v62;
  uint64_t v63;
  __int16 v64;
  char v65;
  std::string v66;
  std::string __b;
  std::string v68;
  std::string v69;
  std::string v70[2];
  uint64_t v71;
  int v72;
  uint64_t v73;
  int v74;
  uint64_t v75;
  int v76;
  uint64_t v77;
  int v78;
  uint64_t v79;
  int v80;
  uint64_t v81;
  int v82;
  const char *v83;
  int v84;
  _BYTE v85[36];
  uint64_t **v86;
  int v87;
  void *__p;
  _QWORD v89[5];
  std::string *v90;
  _QWORD v91[2];
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  uint64_t v96;
  __int16 v97;
  char v98;
  std::string v99;
  uint64_t v100;

  v100 = *MEMORY[0x1E0C80C00];
  std::string::basic_string[abi:ne180100](&__b, 2 * a2, 32);
  v63 = 0;
  v61 = 0u;
  v62 = 0u;
  *(_OWORD *)v59 = 0u;
  *(_OWORD *)v60 = 0u;
  v64 = *a4;
  v65 = *((_BYTE *)a4 + 2);
  if (SHIBYTE(__b.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v66, __b.__r_.__value_.__l.__data_, __b.__r_.__value_.__l.__size_);
  else
    v66 = __b;
  if (*(_BYTE *)a4)
  {
    v90 = 0;
    v91[0] = 0;
    v91[1] = 0;
    google::protobuf::EnumDescriptor::GetLocationPath((uint64_t)a1, (char **)&v90);
    SourceLocation = google::protobuf::FileDescriptor::GetSourceLocation(a1[2], (uint64_t *)&v90, (uint64_t)&v58);
    if (v90)
    {
      v91[0] = v90;
      operator delete(v90);
    }
  }
  else
  {
    SourceLocation = 0;
  }
  v57[0] = SourceLocation;
  v9 = HIBYTE(__b.__r_.__value_.__r.__words[2]);
  p_b = &__b;
  if ((__b.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    p_b = (std::string *)__b.__r_.__value_.__r.__words[0];
  v90 = p_b;
  if ((__b.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    v9 = __b.__r_.__value_.__r.__words[1];
  LODWORD(v91[0]) = v9;
  v11 = (void *)*a1;
  v12 = *(char *)(*a1 + 23);
  v13 = *(_QWORD *)(*a1 + 8);
  if (v12 < 0)
    v11 = *(void **)*a1;
  __p = v11;
  v14 = v12;
  if (v12 < 0)
    v14 = v13;
  LODWORD(v89[0]) = v14;
  v86 = 0;
  v87 = -1;
  v83 = 0;
  v84 = -1;
  v81 = 0;
  v82 = -1;
  v79 = 0;
  v80 = -1;
  v77 = 0;
  v78 = -1;
  v75 = 0;
  v76 = -1;
  v73 = 0;
  v74 = -1;
  v71 = 0;
  v72 = -1;
  *(_QWORD *)&v47 = &v77;
  *((_QWORD *)&v47 + 1) = &v75;
  google::protobuf::strings::SubstituteAndAppend((std::string *)a3, "$0enum $1 {\n", (uint64_t)&v90, (uint64_t)&__p, (uint64_t)&v86, (uint64_t)&v83, (uint64_t)&v81, (uint64_t)&v79, v47, (uint64_t)&v73, (uint64_t)&v71);
  v56 = a2 + 1;
  if (*((int *)a1 + 11) >= 1)
  {
    v15 = 0;
    v16 = 0;
    do
    {
      v17 = a1[6];
      std::string::basic_string[abi:ne180100](&v69, 2 * v56, 32);
      v96 = 0;
      v94 = 0u;
      v95 = 0u;
      v92 = 0u;
      v93 = 0u;
      v97 = *a4;
      v98 = *((_BYTE *)a4 + 2);
      if (SHIBYTE(v69.__r_.__value_.__r.__words[2]) < 0)
        std::string::__init_copy_ctor_external(&v99, v69.__r_.__value_.__l.__data_, v69.__r_.__value_.__l.__size_);
      else
        v99 = v69;
      if (*(_BYTE *)a4)
      {
        v89[0] = 0;
        __p = 0;
        v89[1] = 0;
        google::protobuf::EnumValueDescriptor::GetLocationPath(v17 + v15, (char **)&__p);
        v18 = google::protobuf::FileDescriptor::GetSourceLocation(*(_QWORD *)(*(_QWORD *)(v17 + v15 + 24) + 16), (uint64_t *)&__p, (uint64_t)v91);
        if (__p)
        {
          v89[0] = __p;
          operator delete(__p);
        }
      }
      else
      {
        v18 = 0;
      }
      LOBYTE(v90) = v18;
      v20 = HIBYTE(v69.__r_.__value_.__r.__words[2]);
      v21 = (std::string *)v69.__r_.__value_.__r.__words[0];
      if ((v69.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v21 = &v69;
      __p = v21;
      if ((v69.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
        v20 = v69.__r_.__value_.__r.__words[1];
      LODWORD(v89[0]) = v20;
      v22 = (uint64_t ***)(v17 + v15);
      v23 = *v22;
      v24 = *((char *)*v22 + 23);
      v25 = (*v22)[1];
      if (v24 < 0)
        v23 = (uint64_t **)**v22;
      v86 = v23;
      v26 = v24;
      if (v24 < 0)
        v26 = (int)v25;
      v87 = v26;
      v83 = AddrObjGoogle::protobuf::FastInt32ToBuffer((AddrObjGoogle::protobuf *)*((unsigned int *)v22 + 4), v85, v19);
      v84 = strlen(v83);
      v81 = 0;
      v82 = -1;
      v79 = 0;
      v80 = -1;
      v77 = 0;
      v78 = -1;
      v75 = 0;
      v76 = -1;
      v73 = 0;
      v74 = -1;
      v71 = 0;
      v72 = -1;
      v70[0].__r_.__value_.__r.__words[0] = 0;
      LODWORD(v70[0].__r_.__value_.__r.__words[1]) = -1;
      *((_QWORD *)&v48 + 1) = &v73;
      *(_QWORD *)&v48 = &v75;
      google::protobuf::strings::SubstituteAndAppend((std::string *)a3, "$0$1 = $2", (uint64_t)&__p, (uint64_t)&v86, (uint64_t)&v83, (uint64_t)&v81, (uint64_t)&v79, (uint64_t)&v77, v48, (uint64_t)&v71, (uint64_t)v70);
      memset(&v68, 0, sizeof(v68));
      {
        v27 = HIBYTE(v68.__r_.__value_.__r.__words[2]);
        v28 = (std::string *)v68.__r_.__value_.__r.__words[0];
        if ((v68.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          v28 = &v68;
        __p = v28;
        if ((v68.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
          v27 = v68.__r_.__value_.__r.__words[1];
        LODWORD(v89[0]) = v27;
        v86 = 0;
        v87 = -1;
        v83 = 0;
        v84 = -1;
        v81 = 0;
        v82 = -1;
        v79 = 0;
        v80 = -1;
        v77 = 0;
        v78 = -1;
        v75 = 0;
        v76 = -1;
        v73 = 0;
        v74 = -1;
        v71 = 0;
        v72 = -1;
        v70[0].__r_.__value_.__r.__words[0] = 0;
        LODWORD(v70[0].__r_.__value_.__r.__words[1]) = -1;
        *((_QWORD *)&v49 + 1) = &v73;
        *(_QWORD *)&v49 = &v75;
        google::protobuf::strings::SubstituteAndAppend((std::string *)a3, " [$0]", (uint64_t)&__p, (uint64_t)&v86, (uint64_t)&v83, (uint64_t)&v81, (uint64_t)&v79, (uint64_t)&v77, v49, (uint64_t)&v71, (uint64_t)v70);
      }
      std::string::append((std::string *)a3, ";\n");
      if (SHIBYTE(v68.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v68.__r_.__value_.__l.__data_);
      if (SHIBYTE(v99.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v99.__r_.__value_.__l.__data_);
      __p = &v95;
      std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&__p);
      if (SHIBYTE(v94) < 0)
        operator delete(*((void **)&v93 + 1));
      if (SBYTE7(v93) < 0)
        operator delete((void *)v92);
      if (SHIBYTE(v69.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v69.__r_.__value_.__l.__data_);
      ++v16;
      v15 += 40;
    }
    while (v16 < *((int *)a1 + 11));
  }
  if (*((int *)a1 + 14) > 0)
  {
    v29 = HIBYTE(__b.__r_.__value_.__r.__words[2]);
    v30 = &__b;
    if ((__b.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
      v30 = (std::string *)__b.__r_.__value_.__r.__words[0];
    v90 = v30;
    if ((__b.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
      v29 = __b.__r_.__value_.__r.__words[1];
    LODWORD(v91[0]) = v29;
    __p = 0;
    LODWORD(v89[0]) = -1;
    v86 = 0;
    v87 = -1;
    v83 = 0;
    v84 = -1;
    v81 = 0;
    v82 = -1;
    v79 = 0;
    v80 = -1;
    v77 = 0;
    v78 = -1;
    v75 = 0;
    v76 = -1;
    v73 = 0;
    v74 = -1;
    v71 = 0;
    v72 = -1;
    *(_QWORD *)&v50 = &v77;
    *((_QWORD *)&v50 + 1) = &v75;
    google::protobuf::strings::SubstituteAndAppend((std::string *)a3, "$0  reserved ", (uint64_t)&v90, (uint64_t)&__p, (uint64_t)&v86, (uint64_t)&v83, (uint64_t)&v81, (uint64_t)&v79, v50, (uint64_t)&v73, (uint64_t)&v71);
    if (*((int *)a1 + 14) >= 1)
    {
      v32 = 0;
      v33 = 0;
      do
      {
        v34 = (unsigned int *)(a1[8] + v32);
        v35 = (AddrObjGoogle::protobuf *)v34[1];
        if ((_DWORD)v35 == *v34)
        {
          v90 = (std::string *)AddrObjGoogle::protobuf::FastInt32ToBuffer(v35, (_BYTE *)v91 + 4, v31);
          LODWORD(v91[0]) = strlen((const char *)v90);
          __p = 0;
          LODWORD(v89[0]) = -1;
          v86 = 0;
          v87 = -1;
          v83 = 0;
          v84 = -1;
          v81 = 0;
          v82 = -1;
          v79 = 0;
          v80 = -1;
          v77 = 0;
          v78 = -1;
          v75 = 0;
          v76 = -1;
          v73 = 0;
          v74 = -1;
          v71 = 0;
          v72 = -1;
          *((_QWORD *)&v51 + 1) = &v75;
          *(_QWORD *)&v51 = &v77;
          google::protobuf::strings::SubstituteAndAppend((std::string *)a3, "$0, ", (uint64_t)&v90, (uint64_t)&__p, (uint64_t)&v86, (uint64_t)&v83, (uint64_t)&v81, (uint64_t)&v79, v51, (uint64_t)&v73, (uint64_t)&v71);
        }
        else
        {
          v90 = (std::string *)AddrObjGoogle::protobuf::FastInt32ToBuffer((AddrObjGoogle::protobuf *)*v34, (_BYTE *)v91 + 4, v31);
          LODWORD(v91[0]) = strlen((const char *)v90);
          __p = AddrObjGoogle::protobuf::FastInt32ToBuffer((AddrObjGoogle::protobuf *)v34[1], (_BYTE *)v89 + 4, v36);
          LODWORD(v89[0]) = strlen((const char *)__p);
          v86 = 0;
          v87 = -1;
          v83 = 0;
          v84 = -1;
          v81 = 0;
          v82 = -1;
          v79 = 0;
          v80 = -1;
          v77 = 0;
          v78 = -1;
          v75 = 0;
          v76 = -1;
          v73 = 0;
          v74 = -1;
          v71 = 0;
          v72 = -1;
          *((_QWORD *)&v52 + 1) = &v75;
          *(_QWORD *)&v52 = &v77;
          google::protobuf::strings::SubstituteAndAppend((std::string *)a3, "$0 to $1, ", (uint64_t)&v90, (uint64_t)&__p, (uint64_t)&v86, (uint64_t)&v83, (uint64_t)&v81, (uint64_t)&v79, v52, (uint64_t)&v73, (uint64_t)&v71);
        }
        ++v33;
        v32 += 8;
      }
      while (v33 < *((int *)a1 + 14));
    }
    if (*(char *)(a3 + 23) < 0)
      v37 = *(_QWORD *)(a3 + 8);
    else
      v37 = *(unsigned __int8 *)(a3 + 23);
    std::string::replace((std::string *)a3, v37 - 2, 2uLL, ";\n");
  }
  if (*((int *)a1 + 15) >= 1)
  {
    v38 = HIBYTE(__b.__r_.__value_.__r.__words[2]);
    v39 = &__b;
    if ((__b.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
      v39 = (std::string *)__b.__r_.__value_.__r.__words[0];
    v90 = v39;
    if ((__b.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
      v38 = __b.__r_.__value_.__r.__words[1];
    LODWORD(v91[0]) = v38;
    __p = 0;
    LODWORD(v89[0]) = -1;
    v86 = 0;
    v87 = -1;
    v83 = 0;
    v84 = -1;
    v81 = 0;
    v82 = -1;
    v79 = 0;
    v80 = -1;
    v77 = 0;
    v78 = -1;
    v75 = 0;
    v76 = -1;
    v73 = 0;
    v74 = -1;
    v71 = 0;
    v72 = -1;
    *(_QWORD *)&v53 = &v77;
    *((_QWORD *)&v53 + 1) = &v75;
    google::protobuf::strings::SubstituteAndAppend((std::string *)a3, "$0  reserved ", (uint64_t)&v90, (uint64_t)&__p, (uint64_t)&v86, (uint64_t)&v83, (uint64_t)&v81, (uint64_t)&v79, v53, (uint64_t)&v73, (uint64_t)&v71);
    if (*((int *)a1 + 15) >= 1)
    {
      v41 = 0;
      do
      {
        google::protobuf::CEscape(*(uint64_t **)(a1[9] + 8 * v41), v40, v70);
        v42 = (std::string *)v70[0].__r_.__value_.__r.__words[0];
        if ((v70[0].__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          v42 = v70;
        v90 = v42;
        v43 = HIBYTE(v70[0].__r_.__value_.__r.__words[2]);
        if ((v70[0].__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
          v43 = v70[0].__r_.__value_.__r.__words[1];
        LODWORD(v91[0]) = v43;
        __p = 0;
        LODWORD(v89[0]) = -1;
        v86 = 0;
        v87 = -1;
        v83 = 0;
        v84 = -1;
        v81 = 0;
        v82 = -1;
        v79 = 0;
        v80 = -1;
        v77 = 0;
        v78 = -1;
        v75 = 0;
        v76 = -1;
        v73 = 0;
        v74 = -1;
        v71 = 0;
        v72 = -1;
        *(_QWORD *)&v54 = &v77;
        *((_QWORD *)&v54 + 1) = &v75;
        google::protobuf::strings::SubstituteAndAppend((std::string *)a3, "\"$0\", ", (uint64_t)&v90, (uint64_t)&__p, (uint64_t)&v86, (uint64_t)&v83, (uint64_t)&v81, (uint64_t)&v79, v54, (uint64_t)&v73, (uint64_t)&v71);
        if (SHIBYTE(v70[0].__r_.__value_.__r.__words[2]) < 0)
          operator delete(v70[0].__r_.__value_.__l.__data_);
        ++v41;
      }
      while (v41 < *((int *)a1 + 15));
    }
    if (*(char *)(a3 + 23) < 0)
      v44 = *(_QWORD *)(a3 + 8);
    else
      v44 = *(unsigned __int8 *)(a3 + 23);
    std::string::replace((std::string *)a3, v44 - 2, 2uLL, ";\n");
  }
  v45 = HIBYTE(__b.__r_.__value_.__r.__words[2]);
  v46 = &__b;
  if ((__b.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    v46 = (std::string *)__b.__r_.__value_.__r.__words[0];
  v90 = v46;
  if ((__b.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    v45 = __b.__r_.__value_.__r.__words[1];
  LODWORD(v91[0]) = v45;
  __p = 0;
  LODWORD(v89[0]) = -1;
  v86 = 0;
  v87 = -1;
  v83 = 0;
  v84 = -1;
  v81 = 0;
  v82 = -1;
  v79 = 0;
  v80 = -1;
  v77 = 0;
  v78 = -1;
  v75 = 0;
  v76 = -1;
  v73 = 0;
  v74 = -1;
  v71 = 0;
  v72 = -1;
  *(_QWORD *)&v55 = &v77;
  *((_QWORD *)&v55 + 1) = &v75;
  google::protobuf::strings::SubstituteAndAppend((std::string *)a3, "$0}\n", (uint64_t)&v90, (uint64_t)&__p, (uint64_t)&v86, (uint64_t)&v83, (uint64_t)&v81, (uint64_t)&v79, v55, (uint64_t)&v73, (uint64_t)&v71);
  if (SHIBYTE(v66.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v66.__r_.__value_.__l.__data_);
  v90 = (std::string *)&v62;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&v90);
  if (SHIBYTE(v61) < 0)
    operator delete(v60[1]);
  if (SHIBYTE(v60[0]) < 0)
    operator delete(v59[0]);
  if (SHIBYTE(__b.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__b.__r_.__value_.__l.__data_);
}

void sub_188871194(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,void *__p,uint64_t a30,int a31,__int16 a32,char a33,char a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,void *a39,uint64_t a40,uint64_t a41,void *a42,uint64_t a43,int a44,__int16 a45,char a46,char a47)
{
  uint64_t v47;

  *(_QWORD *)(v47 - 224) = &a35;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)(v47 - 224));
  if (a34 < 0)
    operator delete(__p);
  if (a28 < 0)
    operator delete(a23);
  if (a47 < 0)
    operator delete(a42);
  _Unwind_Resume(a1);
}

void google::protobuf::Descriptor::DebugString(uint64_t *a1, int a2, uint64_t a3, uint64_t a4, int a5)
{
  char SourceLocation;
  int v11;
  std::string *p_b;
  const char *v13;
  int v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t *v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t *v30;
  unint64_t v31;
  uint64_t v32;
  int v33;
  uint64_t i;
  unint64_t v35;
  _QWORD *j;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  std::string *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  int v55;
  std::string *v56;
  int v57;
  std::string *v58;
  const char *v59;
  int v60;
  uint64_t v61;
  int v62;
  uint64_t v63;
  int v64;
  std::string *v65;
  int v66;
  std::string *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  unsigned int *v71;
  AddrObjGoogle::protobuf *v72;
  char *v73;
  uint64_t v74;
  int v75;
  std::string *v76;
  const char *v77;
  uint64_t v78;
  std::string *p_p;
  int v80;
  uint64_t v81;
  int v82;
  std::string *v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  int v95;
  __int16 *v96;
  std::string __p;
  _QWORD **v98;
  _QWORD *v99[2];
  _BYTE v100[8];
  uint64_t v101;
  void *v102[2];
  void *v103[2];
  __int128 v104;
  __int128 v105;
  uint64_t v106;
  __int16 v107;
  char v108;
  std::string v109;
  std::string __b;
  uint64_t v111;
  int v112;
  uint64_t v113;
  int v114;
  uint64_t v115;
  int v116;
  uint64_t v117;
  int v118;
  uint64_t v119;
  int v120;
  uint64_t v121;
  int v122;
  uint64_t v123;
  int v124;
  const char *v125;
  int v126;
  _BYTE v127[36];
  const char *p_p_data;
  int v129;
  _BYTE v130[36];
  const char **p_data;
  _QWORD v132[7];

  v132[5] = *MEMORY[0x1E0C80C00];
  if (!*(_BYTE *)(a1[4] + 75))
  {
    std::string::basic_string[abi:ne180100](&__b, 2 * a2, 32);
    v106 = 0;
    v104 = 0u;
    v105 = 0u;
    *(_OWORD *)v102 = 0u;
    *(_OWORD *)v103 = 0u;
    v107 = *(_WORD *)a4;
    v108 = *(_BYTE *)(a4 + 2);
    if (SHIBYTE(__b.__r_.__value_.__r.__words[2]) < 0)
      std::string::__init_copy_ctor_external(&v109, __b.__r_.__value_.__l.__data_, __b.__r_.__value_.__l.__size_);
    else
      v109 = __b;
    if (*(_BYTE *)a4)
    {
      p_data = 0;
      v132[0] = 0;
      v132[1] = 0;
      google::protobuf::Descriptor::GetLocationPath((uint64_t)a1, (uint64_t)&p_data);
      SourceLocation = google::protobuf::FileDescriptor::GetSourceLocation(a1[2], (uint64_t *)&p_data, (uint64_t)&v101);
      if (p_data)
      {
        v132[0] = p_data;
        operator delete(p_data);
      }
    }
    else
    {
      SourceLocation = 0;
    }
    v100[0] = SourceLocation;
    if (a5)
    {
      v11 = HIBYTE(__b.__r_.__value_.__r.__words[2]);
      p_b = &__b;
      if ((__b.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
        p_b = (std::string *)__b.__r_.__value_.__r.__words[0];
      p_data = (const char **)&p_b->__r_.__value_.__l.__data_;
      if ((__b.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
        v11 = __b.__r_.__value_.__r.__words[1];
      LODWORD(v132[0]) = v11;
      v13 = (const char *)*a1;
      v14 = *(char *)(*a1 + 23);
      v15 = *(_QWORD *)(*a1 + 8);
      if (v14 < 0)
        v13 = *(const char **)*a1;
      p_p_data = v13;
      v16 = v14;
      if (v14 < 0)
        v16 = v15;
      v129 = v16;
      v125 = 0;
      v126 = -1;
      v123 = 0;
      v124 = -1;
      v121 = 0;
      v122 = -1;
      v119 = 0;
      v120 = -1;
      v117 = 0;
      v118 = -1;
      v115 = 0;
      v116 = -1;
      v113 = 0;
      v114 = -1;
      v111 = 0;
      v112 = -1;
      *(_QWORD *)&v84 = &v117;
      *((_QWORD *)&v84 + 1) = &v115;
      google::protobuf::strings::SubstituteAndAppend((std::string *)a3, "$0message $1", (uint64_t)&p_data, (uint64_t)&p_p_data, (uint64_t)&v125, (uint64_t)&v123, (uint64_t)&v121, (uint64_t)&v119, v84, (uint64_t)&v113, (uint64_t)&v111);
    }
    std::string::append((std::string *)a3, " {\n");
    v17 = (a2 + 1);
    v95 = a2;
    v96 = (__int16 *)a4;
    v99[0] = 0;
    v99[1] = 0;
    v98 = v99;
    if (*((int *)a1 + 26) >= 1)
    {
      v19 = 0;
      v20 = 0;
      do
      {
        v21 = a1[5];
        v22 = v21 + v19;
        v23 = *(unint64_t **)(v21 + v19 + 48);
        if (v23)
        {
          v125 = (const char *)google::protobuf::FieldDescriptor::TypeOnceInit;
          v123 = v21 + v19;
          v24 = atomic_load(v23);
          if (v24 != -1)
          {
            p_data = &v125;
            v132[0] = &v123;
            p_p_data = (const char *)&p_data;
            std::__call_once(v23, &p_p_data, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
          }
        }
        if (*(_DWORD *)(v22 + 56) == 10)
        {
          v25 = google::protobuf::FieldDescriptor::message_type((google::protobuf::FieldDescriptor *)(a1[5] + v19));
          std::__tree<google::protobuf::Descriptor const*>::__emplace_unique_key_args<google::protobuf::Descriptor const*,google::protobuf::Descriptor const*>((uint64_t *)&v98, v25, v25);
        }
        ++v20;
        v19 += 152;
      }
      while (v20 < *((int *)a1 + 26));
    }
    if (*((int *)a1 + 32) >= 1)
    {
      v26 = 0;
      v27 = 0;
      do
      {
        v28 = a1[10];
        v29 = v28 + v26;
        v30 = *(unint64_t **)(v28 + v26 + 48);
        if (v30)
        {
          v125 = (const char *)google::protobuf::FieldDescriptor::TypeOnceInit;
          v123 = v28 + v26;
          v31 = atomic_load(v30);
          if (v31 != -1)
          {
            p_data = &v125;
            v132[0] = &v123;
            p_p_data = (const char *)&p_data;
            std::__call_once(v30, &p_p_data, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
          }
        }
        if (*(_DWORD *)(v29 + 56) == 10)
        {
          v32 = google::protobuf::FieldDescriptor::message_type((google::protobuf::FieldDescriptor *)(a1[10] + v26));
          std::__tree<google::protobuf::Descriptor const*>::__emplace_unique_key_args<google::protobuf::Descriptor const*,google::protobuf::Descriptor const*>((uint64_t *)&v98, v32, v32);
        }
        ++v27;
        v26 += 152;
      }
      while (v27 < *((int *)a1 + 32));
    }
    v33 = *((_DWORD *)a1 + 29);
    if (v33 >= 1)
    {
      for (i = 0; i < v33; ++i)
      {
        v35 = a1[7] + 144 * i;
        for (j = v99[0]; j; j = (_QWORD *)*j)
        {
          v37 = j[4];
          if (v35 >= v37)
          {
            if (v37 >= v35)
              goto LABEL_43;
            ++j;
          }
        }
        google::protobuf::Descriptor::DebugString(v35, v17, a3, v96, 1);
        v33 = *((_DWORD *)a1 + 29);
LABEL_43:
        ;
      }
    }
    if (*((int *)a1 + 30) >= 1)
    {
      v38 = 0;
      v39 = 0;
      do
      {
        google::protobuf::EnumDescriptor::DebugString((uint64_t *)(a1[8] + v38), v17, a3, v96);
        ++v39;
        v38 += 80;
      }
      while (v39 < *((int *)a1 + 30));
    }
    if (*((int *)a1 + 26) >= 1)
    {
      v40 = 0;
      v41 = 88;
      do
      {
        v42 = (uint64_t *)(a1[5] + v41);
        v45 = *v42;
        v43 = v42 - 11;
        v44 = v45;
        if (v45)
        {
          if (v43 == **(uint64_t ***)(v44 + 32))
            google::protobuf::OneofDescriptor::DebugString((int *)v44, v17, (std::string *)a3, v96);
        }
        else
        {
          google::protobuf::FieldDescriptor::DebugString(v43, v17, a3, v96);
        }
        ++v40;
        v41 += 152;
      }
      while (v40 < *((int *)a1 + 26));
    }
    if (*((int *)a1 + 31) >= 1)
    {
      v46 = 0;
      v47 = 0;
      do
      {
        v48 = HIBYTE(__b.__r_.__value_.__r.__words[2]);
        v49 = (std::string *)__b.__r_.__value_.__r.__words[0];
        if ((__b.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          v49 = &__b;
        p_data = (const char **)&v49->__r_.__value_.__l.__data_;
        if ((__b.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
          v48 = __b.__r_.__value_.__r.__words[1];
        LODWORD(v132[0]) = v48;
        p_p_data = AddrObjGoogle::protobuf::FastInt32ToBuffer((AddrObjGoogle::protobuf *)*(unsigned int *)(a1[9] + v46), v130, v18);
        v129 = strlen(p_p_data);
        v125 = AddrObjGoogle::protobuf::FastInt32ToBuffer((AddrObjGoogle::protobuf *)(*(_DWORD *)(a1[9] + v46 + 4) - 1), v127, v50);
        v126 = strlen(v125);
        v123 = 0;
        v124 = -1;
        v121 = 0;
        v122 = -1;
        v119 = 0;
        v120 = -1;
        v117 = 0;
        v118 = -1;
        v115 = 0;
        v116 = -1;
        v113 = 0;
        v114 = -1;
        v111 = 0;
        v112 = -1;
        *((_QWORD *)&v85 + 1) = &v115;
        *(_QWORD *)&v85 = &v117;
        google::protobuf::strings::SubstituteAndAppend((std::string *)a3, "$0  extensions $1 to $2;\n",
          (uint64_t)&p_data,
          (uint64_t)&p_p_data,
          (uint64_t)&v125,
          (uint64_t)&v123,
          (uint64_t)&v121,
          (uint64_t)&v119,
          v85,
          (uint64_t)&v113,
          (uint64_t)&v111);
        ++v47;
        v46 += 16;
      }
      while (v47 < *((int *)a1 + 31));
    }
    if (*((int *)a1 + 32) >= 1)
    {
      v51 = 0;
      v52 = 0;
      v53 = 80;
      do
      {
        v54 = a1[10];
        if (*(_QWORD *)(v54 + v53) != v52)
        {
          if (v51)
          {
            v55 = HIBYTE(__b.__r_.__value_.__r.__words[2]);
            v56 = (std::string *)__b.__r_.__value_.__r.__words[0];
            if ((__b.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
              v56 = &__b;
            p_data = (const char **)&v56->__r_.__value_.__l.__data_;
            if ((__b.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
              v55 = __b.__r_.__value_.__r.__words[1];
            LODWORD(v132[0]) = v55;
            p_p_data = 0;
            v129 = -1;
            v125 = 0;
            v126 = -1;
            v123 = 0;
            v124 = -1;
            v121 = 0;
            v122 = -1;
            v119 = 0;
            v120 = -1;
            v117 = 0;
            v118 = -1;
            v115 = 0;
            v116 = -1;
            v113 = 0;
            v114 = -1;
            v111 = 0;
            v112 = -1;
            *((_QWORD *)&v86 + 1) = &v115;
            *(_QWORD *)&v86 = &v117;
            google::protobuf::strings::SubstituteAndAppend((std::string *)a3, "$0  }\n", (uint64_t)&p_data, (uint64_t)&p_p_data, (uint64_t)&v125, (uint64_t)&v123, (uint64_t)&v121, (uint64_t)&v119, v86, (uint64_t)&v113, (uint64_t)&v111);
            v52 = *(_QWORD *)(a1[10] + v53);
          }
          else
          {
            v52 = *(_QWORD *)(v54 + v53);
          }
          v57 = HIBYTE(__b.__r_.__value_.__r.__words[2]);
          v58 = (std::string *)__b.__r_.__value_.__r.__words[0];
          if ((__b.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
            v58 = &__b;
          p_data = (const char **)&v58->__r_.__value_.__l.__data_;
          if ((__b.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
            v57 = __b.__r_.__value_.__r.__words[1];
          LODWORD(v132[0]) = v57;
          v59 = *(const char **)(v52 + 8);
          v60 = v59[23];
          v61 = *((_QWORD *)v59 + 1);
          if (v60 < 0)
            v59 = *(const char **)v59;
          p_p_data = v59;
          v62 = v60;
          if (v60 < 0)
            v62 = v61;
          v129 = v62;
          v125 = 0;
          v126 = -1;
          v123 = 0;
          v124 = -1;
          v121 = 0;
          v122 = -1;
          v119 = 0;
          v120 = -1;
          v117 = 0;
          v118 = -1;
          v115 = 0;
          v116 = -1;
          v113 = 0;
          v114 = -1;
          v111 = 0;
          v112 = -1;
          *((_QWORD *)&v87 + 1) = &v115;
          *(_QWORD *)&v87 = &v117;
          google::protobuf::strings::SubstituteAndAppend((std::string *)a3, "$0  extend .$1 {\n", (uint64_t)&p_data, (uint64_t)&p_p_data, (uint64_t)&v125, (uint64_t)&v123, (uint64_t)&v121, (uint64_t)&v119, v87, (uint64_t)&v113, (uint64_t)&v111);
          v54 = a1[10];
        }
        google::protobuf::FieldDescriptor::DebugString(v54 + v53 - 80, (v95 + 2), a3, v96);
        ++v51;
        v63 = *((int *)a1 + 32);
        v53 += 152;
      }
      while (v51 < v63);
      if ((int)v63 > 0)
      {
        v64 = HIBYTE(__b.__r_.__value_.__r.__words[2]);
        v65 = &__b;
        if ((__b.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
          v65 = (std::string *)__b.__r_.__value_.__r.__words[0];
        p_data = (const char **)&v65->__r_.__value_.__l.__data_;
        if ((__b.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
          v64 = __b.__r_.__value_.__r.__words[1];
        LODWORD(v132[0]) = v64;
        p_p_data = 0;
        v129 = -1;
        v125 = 0;
        v126 = -1;
        v123 = 0;
        v124 = -1;
        v121 = 0;
        v122 = -1;
        v119 = 0;
        v120 = -1;
        v117 = 0;
        v118 = -1;
        v115 = 0;
        v116 = -1;
        v113 = 0;
        v114 = -1;
        v111 = 0;
        v112 = -1;
        *(_QWORD *)&v88 = &v117;
        *((_QWORD *)&v88 + 1) = &v115;
        google::protobuf::strings::SubstituteAndAppend((std::string *)a3, "$0  }\n", (uint64_t)&p_data, (uint64_t)&p_p_data, (uint64_t)&v125, (uint64_t)&v123, (uint64_t)&v121, (uint64_t)&v119, v88, (uint64_t)&v113, (uint64_t)&v111);
      }
    }
    if (*((int *)a1 + 33) >= 1)
    {
      v66 = HIBYTE(__b.__r_.__value_.__r.__words[2]);
      v67 = &__b;
      if ((__b.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
        v67 = (std::string *)__b.__r_.__value_.__r.__words[0];
      p_data = (const char **)&v67->__r_.__value_.__l.__data_;
      if ((__b.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
        v66 = __b.__r_.__value_.__r.__words[1];
      LODWORD(v132[0]) = v66;
      p_p_data = 0;
      v129 = -1;
      v125 = 0;
      v126 = -1;
      v123 = 0;
      v124 = -1;
      v121 = 0;
      v122 = -1;
      v119 = 0;
      v120 = -1;
      v117 = 0;
      v118 = -1;
      v115 = 0;
      v116 = -1;
      v113 = 0;
      v114 = -1;
      v111 = 0;
      v112 = -1;
      *(_QWORD *)&v89 = &v117;
      *((_QWORD *)&v89 + 1) = &v115;
      google::protobuf::strings::SubstituteAndAppend((std::string *)a3, "$0  reserved ", (uint64_t)&p_data, (uint64_t)&p_p_data, (uint64_t)&v125, (uint64_t)&v123, (uint64_t)&v121, (uint64_t)&v119, v89, (uint64_t)&v113, (uint64_t)&v111);
      if (*((int *)a1 + 33) >= 1)
      {
        v69 = 0;
        v70 = 0;
        do
        {
          v71 = (unsigned int *)(a1[11] + v69);
          v72 = (AddrObjGoogle::protobuf *)*v71;
          if (v71[1] == (_DWORD)v72 + 1)
          {
            p_data = (const char **)AddrObjGoogle::protobuf::FastInt32ToBuffer(v72, (_BYTE *)v132 + 4, v68);
            LODWORD(v132[0]) = strlen((const char *)p_data);
            p_p_data = 0;
            v129 = -1;
            v125 = 0;
            v126 = -1;
            v123 = 0;
            v124 = -1;
            v121 = 0;
            v122 = -1;
            v119 = 0;
            v120 = -1;
            v117 = 0;
            v118 = -1;
            v115 = 0;
            v116 = -1;
            v113 = 0;
            v114 = -1;
            v111 = 0;
            v112 = -1;
            *((_QWORD *)&v90 + 1) = &v115;
            *(_QWORD *)&v90 = &v117;
            google::protobuf::strings::SubstituteAndAppend((std::string *)a3, "$0, ", (uint64_t)&p_data, (uint64_t)&p_p_data, (uint64_t)&v125, (uint64_t)&v123, (uint64_t)&v121, (uint64_t)&v119, v90, (uint64_t)&v113, (uint64_t)&v111);
          }
          else
          {
            p_data = (const char **)AddrObjGoogle::protobuf::FastInt32ToBuffer(v72, (_BYTE *)v132 + 4, v68);
            LODWORD(v132[0]) = strlen((const char *)p_data);
            p_p_data = AddrObjGoogle::protobuf::FastInt32ToBuffer((AddrObjGoogle::protobuf *)(v71[1] - 1), v130, v73);
            v129 = strlen(p_p_data);
            v125 = 0;
            v126 = -1;
            v123 = 0;
            v124 = -1;
            v121 = 0;
            v122 = -1;
            v119 = 0;
            v120 = -1;
            v117 = 0;
            v118 = -1;
            v115 = 0;
            v116 = -1;
            v113 = 0;
            v114 = -1;
            v111 = 0;
            v112 = -1;
            *((_QWORD *)&v91 + 1) = &v115;
            *(_QWORD *)&v91 = &v117;
            google::protobuf::strings::SubstituteAndAppend((std::string *)a3, "$0 to $1, ", (uint64_t)&p_data, (uint64_t)&p_p_data, (uint64_t)&v125, (uint64_t)&v123, (uint64_t)&v121, (uint64_t)&v119, v91, (uint64_t)&v113, (uint64_t)&v111);
          }
          ++v70;
          v69 += 8;
        }
        while (v70 < *((int *)a1 + 33));
      }
      if (*(char *)(a3 + 23) < 0)
        v74 = *(_QWORD *)(a3 + 8);
      else
        v74 = *(unsigned __int8 *)(a3 + 23);
      std::string::replace((std::string *)a3, v74 - 2, 2uLL, ";\n");
    }
    if (*((int *)a1 + 34) >= 1)
    {
      v75 = HIBYTE(__b.__r_.__value_.__r.__words[2]);
      v76 = &__b;
      if ((__b.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
        v76 = (std::string *)__b.__r_.__value_.__r.__words[0];
      p_data = (const char **)&v76->__r_.__value_.__l.__data_;
      if ((__b.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
        v75 = __b.__r_.__value_.__r.__words[1];
      LODWORD(v132[0]) = v75;
      p_p_data = 0;
      v129 = -1;
      v125 = 0;
      v126 = -1;
      v123 = 0;
      v124 = -1;
      v121 = 0;
      v122 = -1;
      v119 = 0;
      v120 = -1;
      v117 = 0;
      v118 = -1;
      v115 = 0;
      v116 = -1;
      v113 = 0;
      v114 = -1;
      v111 = 0;
      v112 = -1;
      *(_QWORD *)&v92 = &v117;
      *((_QWORD *)&v92 + 1) = &v115;
      google::protobuf::strings::SubstituteAndAppend((std::string *)a3, "$0  reserved ", (uint64_t)&p_data, (uint64_t)&p_p_data, (uint64_t)&v125, (uint64_t)&v123, (uint64_t)&v121, (uint64_t)&v119, v92, (uint64_t)&v113, (uint64_t)&v111);
      if (*((int *)a1 + 34) >= 1)
      {
        v78 = 0;
        do
        {
          google::protobuf::CEscape(*(uint64_t **)(a1[12] + 8 * v78), v77, &__p);
          p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
          if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
            p_p = &__p;
          p_data = (const char **)&p_p->__r_.__value_.__l.__data_;
          v80 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
          if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
            v80 = __p.__r_.__value_.__r.__words[1];
          LODWORD(v132[0]) = v80;
          p_p_data = 0;
          v129 = -1;
          v125 = 0;
          v126 = -1;
          v123 = 0;
          v124 = -1;
          v121 = 0;
          v122 = -1;
          v119 = 0;
          v120 = -1;
          v117 = 0;
          v118 = -1;
          v115 = 0;
          v116 = -1;
          v113 = 0;
          v114 = -1;
          v111 = 0;
          v112 = -1;
          *(_QWORD *)&v93 = &v117;
          *((_QWORD *)&v93 + 1) = &v115;
          google::protobuf::strings::SubstituteAndAppend((std::string *)a3, "\"$0\", ", (uint64_t)&p_data, (uint64_t)&p_p_data, (uint64_t)&v125, (uint64_t)&v123, (uint64_t)&v121, (uint64_t)&v119, v93, (uint64_t)&v113, (uint64_t)&v111);
          if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
            operator delete(__p.__r_.__value_.__l.__data_);
          ++v78;
        }
        while (v78 < *((int *)a1 + 34));
      }
      if (*(char *)(a3 + 23) < 0)
        v81 = *(_QWORD *)(a3 + 8);
      else
        v81 = *(unsigned __int8 *)(a3 + 23);
      std::string::replace((std::string *)a3, v81 - 2, 2uLL, ";\n");
    }
    v82 = HIBYTE(__b.__r_.__value_.__r.__words[2]);
    v83 = &__b;
    if ((__b.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
      v83 = (std::string *)__b.__r_.__value_.__r.__words[0];
    p_data = (const char **)&v83->__r_.__value_.__l.__data_;
    if ((__b.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
      v82 = __b.__r_.__value_.__r.__words[1];
    LODWORD(v132[0]) = v82;
    p_p_data = 0;
    v129 = -1;
    v125 = 0;
    v126 = -1;
    v123 = 0;
    v124 = -1;
    v121 = 0;
    v122 = -1;
    v119 = 0;
    v120 = -1;
    v117 = 0;
    v118 = -1;
    v115 = 0;
    v116 = -1;
    v113 = 0;
    v114 = -1;
    v111 = 0;
    v112 = -1;
    *(_QWORD *)&v94 = &v117;
    *((_QWORD *)&v94 + 1) = &v115;
    google::protobuf::strings::SubstituteAndAppend((std::string *)a3, "$0}\n", (uint64_t)&p_data, (uint64_t)&p_p_data, (uint64_t)&v125, (uint64_t)&v123, (uint64_t)&v121, (uint64_t)&v119, v94, (uint64_t)&v113, (uint64_t)&v111);
    std::__tree<std::__value_type<std::pair<google::protobuf::Descriptor const*,int>,google::protobuf::FieldDescriptor const*>,std::__map_value_compare<std::pair<google::protobuf::Descriptor const*,int>,std::__value_type<std::pair<google::protobuf::Descriptor const*,int>,google::protobuf::FieldDescriptor const*>,std::less<std::pair<google::protobuf::Descriptor const*,int>>,true>,std::allocator<std::__value_type<std::pair<google::protobuf::Descriptor const*,int>,google::protobuf::FieldDescriptor const*>>>::destroy(v99[0]);
    if (SHIBYTE(v109.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v109.__r_.__value_.__l.__data_);
    p_data = (const char **)&v105;
    std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&p_data);
    if (SHIBYTE(v104) < 0)
      operator delete(v103[1]);
    if (SHIBYTE(v103[0]) < 0)
      operator delete(v102[0]);
    if (SHIBYTE(__b.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__b.__r_.__value_.__l.__data_);
  }
}

void sub_1888720E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,_QWORD *a23,uint64_t a24,void *a25,uint64_t a26,uint64_t a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33,void *a34,uint64_t a35,int a36,__int16 a37,char a38,char a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,void *a44,uint64_t a45,int a46,__int16 a47,char a48,char a49,void *__p,uint64_t a51,int a52,__int16 a53,char a54,char a55)
{
  std::__tree<std::__value_type<std::pair<google::protobuf::Descriptor const*,int>,google::protobuf::FieldDescriptor const*>,std::__map_value_compare<std::pair<google::protobuf::Descriptor const*,int>,std::__value_type<std::pair<google::protobuf::Descriptor const*,int>,google::protobuf::FieldDescriptor const*>,std::less<std::pair<google::protobuf::Descriptor const*,int>>,true>,std::allocator<std::__value_type<std::pair<google::protobuf::Descriptor const*,int>,google::protobuf::FieldDescriptor const*>>>::destroy(a23);
  if (a55 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void google::protobuf::FieldDescriptor::DebugString(uint64_t a1, int a2, std::string *a3, uint64_t a4)
{
  unint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  void *v11;
  int v12;
  uint64_t v13;
  std::string *p_p;
  int v15;
  unint64_t *v16;
  unint64_t v17;
  std::string::value_type SourceLocation;
  char *v19;
  int v20;
  std::string *p_b;
  int v22;
  std::string *v23;
  int v24;
  std::string *v25;
  unint64_t *v26;
  unint64_t v27;
  uint64_t (***v28)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);
  uint64_t (*v29)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);
  int v30;
  uint64_t (*v31)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);
  int v32;
  std::string *v33;
  int v34;
  const std::string::value_type *v35;
  const char *v36;
  std::string *v37;
  std::string::size_type size;
  int v39;
  const std::string::value_type *v40;
  std::string *v41;
  std::string::size_type v42;
  unint64_t *v43;
  unint64_t v44;
  const std::string::value_type *v45;
  uint64_t *v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  std::string v50;
  std::string __p;
  std::string v52;
  std::string __b;
  void *v54;
  uint64_t v55;
  unsigned __int8 v56;
  std::string v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  uint64_t v62;
  __int16 v63;
  char v64;
  std::string v65;
  uint64_t v66;
  int v67;
  uint64_t v68;
  int v69;
  uint64_t (*v70)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);
  int v71;
  const char **v72;
  int v73;
  const char *v74;
  uint64_t *v75;
  uint64_t (*v76)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);
  int v77;
  uint64_t (***v78)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);
  int v79;
  uint64_t (**v80)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);
  const char **v81;
  std::string v82[2];
  uint64_t v83;

  v83 = *MEMORY[0x1E0C80C00];
  std::string::basic_string[abi:ne180100](&__b, 2 * a2, 32);
  memset(&v52, 0, sizeof(v52));
  v8 = *(unint64_t **)(a1 + 48);
  if (v8)
  {
    v80 = (uint64_t (**)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *))google::protobuf::FieldDescriptor::TypeOnceInit;
    v78 = (uint64_t (***)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *))a1;
    v9 = atomic_load(v8);
    if (v9 != -1)
    {
      v57.__r_.__value_.__r.__words[0] = (std::string::size_type)&v80;
      v57.__r_.__value_.__l.__size_ = (std::string::size_type)&v78;
      v82[0].__r_.__value_.__r.__words[0] = (std::string::size_type)&v57;
      std::__call_once(v8, v82, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  if (*(_DWORD *)(a1 + 56) == 11 && *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 104) + 32) + 75))
  {
    v10 = google::protobuf::FieldDescriptor::message_type((google::protobuf::FieldDescriptor *)a1);
    google::protobuf::FieldDescriptor::FieldTypeNameDebugString((google::protobuf::FieldDescriptor *)&v54, *(_QWORD *)(v10 + 40));
    v11 = v54;
    if ((v56 & 0x80u) == 0)
      v11 = &v54;
    v57.__r_.__value_.__r.__words[0] = (std::string::size_type)v11;
    v12 = v56;
    if ((v56 & 0x80u) != 0)
      v12 = v55;
    LODWORD(v57.__r_.__value_.__r.__words[1]) = v12;
    v13 = google::protobuf::FieldDescriptor::message_type((google::protobuf::FieldDescriptor *)a1);
    google::protobuf::FieldDescriptor::FieldTypeNameDebugString((google::protobuf::FieldDescriptor *)&__p, *(_QWORD *)(v13 + 40) + 152);
    p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      p_p = &__p;
    v82[0].__r_.__value_.__r.__words[0] = (std::string::size_type)p_p;
    v15 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
      v15 = __p.__r_.__value_.__r.__words[1];
    LODWORD(v82[0].__r_.__value_.__r.__words[1]) = v15;
    v80 = 0;
    LODWORD(v81) = -1;
    v78 = 0;
    v79 = -1;
    v76 = 0;
    v77 = -1;
    v74 = 0;
    LODWORD(v75) = -1;
    v72 = 0;
    v73 = -1;
    v70 = 0;
    v71 = -1;
    v68 = 0;
    v69 = -1;
    v66 = 0;
    v67 = -1;
    *(_QWORD *)&v47 = &v72;
    *((_QWORD *)&v47 + 1) = &v70;
    google::protobuf::strings::SubstituteAndAppend(&v52, "map<$0, $1>", (uint64_t)&v57, (uint64_t)v82, (uint64_t)&v80, (uint64_t)&v78, (uint64_t)&v76, (uint64_t)&v74, v47, (uint64_t)&v68, (uint64_t)&v66);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
    if ((char)v56 < 0)
      operator delete(v54);
  }
  else
  {
    google::protobuf::FieldDescriptor::FieldTypeNameDebugString((google::protobuf::FieldDescriptor *)&v57, a1);
    if (SHIBYTE(v52.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v52.__r_.__value_.__l.__data_);
    v52 = v57;
  }
  v57.__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FieldDescriptor::kLabelToName[*(unsigned int *)(a1 + 60)];
  v57.__r_.__value_.__l.__size_ = strlen(v57.__r_.__value_.__l.__data_);
  v82[0].__r_.__value_.__r.__words[0] = (std::string::size_type)" ";
  v82[0].__r_.__value_.__l.__size_ = 1;
  google::protobuf::StrCat((uint64_t)&v57, (uint64_t)v82, &__p);
  v16 = *(unint64_t **)(a1 + 48);
  if (v16)
  {
    v80 = (uint64_t (**)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *))google::protobuf::FieldDescriptor::TypeOnceInit;
    v78 = (uint64_t (***)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *))a1;
    v17 = atomic_load(v16);
    if (v17 != -1)
    {
      v57.__r_.__value_.__r.__words[0] = (std::string::size_type)&v80;
      v57.__r_.__value_.__l.__size_ = (std::string::size_type)&v78;
      v82[0].__r_.__value_.__r.__words[0] = (std::string::size_type)&v57;
      std::__call_once(v16, v82, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  if (*(_DWORD *)(a1 + 56) == 11 && *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 104) + 32) + 75)
    || *(_QWORD *)(a1 + 88)
    || *(_DWORD *)(a1 + 60) == 1 && !*(_BYTE *)(a1 + 65) && *(_DWORD *)(*(_QWORD *)(a1 + 40) + 60) != 2)
  {
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    {
      *__p.__r_.__value_.__l.__data_ = 0;
      __p.__r_.__value_.__l.__size_ = 0;
    }
    else
    {
      __p.__r_.__value_.__s.__data_[0] = 0;
      *((_BYTE *)&__p.__r_.__value_.__s + 23) = 0;
    }
  }
  v62 = 0;
  v61 = 0u;
  v60 = 0u;
  v59 = 0u;
  v58 = 0u;
  v63 = *(_WORD *)a4;
  v64 = *(_BYTE *)(a4 + 2);
  if (SHIBYTE(__b.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v65, __b.__r_.__value_.__l.__data_, __b.__r_.__value_.__l.__size_);
  else
    v65 = __b;
  if (*(_BYTE *)a4)
  {
    memset(v82, 0, 24);
    google::protobuf::FieldDescriptor::GetLocationPath(a1, &v82[0].__r_.__value_.__l.__data_);
    SourceLocation = google::protobuf::FileDescriptor::GetSourceLocation(*(_QWORD *)(a1 + 40), (uint64_t *)v82, (uint64_t)&v57.__r_.__value_.__l.__size_);
    if (v82[0].__r_.__value_.__r.__words[0])
    {
      v82[0].__r_.__value_.__l.__size_ = v82[0].__r_.__value_.__r.__words[0];
      operator delete(v82[0].__r_.__value_.__l.__data_);
    }
  }
  else
  {
    SourceLocation = 0;
  }
  v57.__r_.__value_.__s.__data_[0] = SourceLocation;
  v20 = HIBYTE(__b.__r_.__value_.__r.__words[2]);
  p_b = &__b;
  if ((__b.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    p_b = (std::string *)__b.__r_.__value_.__r.__words[0];
  v82[0].__r_.__value_.__r.__words[0] = (std::string::size_type)p_b;
  if ((__b.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    v20 = __b.__r_.__value_.__r.__words[1];
  LODWORD(v82[0].__r_.__value_.__r.__words[1]) = v20;
  v22 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  v23 = &__p;
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    v23 = (std::string *)__p.__r_.__value_.__r.__words[0];
  v80 = (uint64_t (**)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *))v23;
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    v22 = __p.__r_.__value_.__r.__words[1];
  LODWORD(v81) = v22;
  v24 = HIBYTE(v52.__r_.__value_.__r.__words[2]);
  v25 = &v52;
  if ((v52.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    v25 = (std::string *)v52.__r_.__value_.__r.__words[0];
  v78 = (uint64_t (***)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *))v25;
  if ((v52.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    v24 = v52.__r_.__value_.__r.__words[1];
  v79 = v24;
  v26 = *(unint64_t **)(a1 + 48);
  if (v26)
  {
    v70 = google::protobuf::FieldDescriptor::TypeOnceInit;
    v68 = a1;
    v27 = atomic_load(v26);
    if (v27 != -1)
    {
      v74 = (const char *)&v70;
      v75 = &v68;
      v72 = &v74;
      std::__call_once(v26, &v72, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  v28 = (uint64_t (***)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *))a1;
  if (*(_DWORD *)(a1 + 56) == 10)
    v28 = (uint64_t (***)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *))google::protobuf::FieldDescriptor::message_type((google::protobuf::FieldDescriptor *)a1);
  v29 = (uint64_t (*)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *))*v28;
  v30 = *((char *)*v28 + 23);
  v31 = (*v28)[1];
  if (v30 < 0)
    v29 = **v28;
  v76 = v29;
  v32 = v30;
  if (v30 < 0)
    v32 = (int)v31;
  v77 = v32;
  v74 = AddrObjGoogle::protobuf::FastInt32ToBuffer((AddrObjGoogle::protobuf *)*(unsigned int *)(a1 + 68), (_BYTE *)&v75 + 4, v19);
  LODWORD(v75) = strlen(v74);
  v72 = 0;
  v73 = -1;
  v70 = 0;
  v71 = -1;
  v68 = 0;
  v69 = -1;
  v66 = 0;
  v67 = -1;
  v54 = 0;
  LODWORD(v55) = -1;
  *(_QWORD *)&v48 = &v70;
  *((_QWORD *)&v48 + 1) = &v68;
  google::protobuf::strings::SubstituteAndAppend(a3, "$0$1$2 $3 = $4", (uint64_t)v82, (uint64_t)&v80, (uint64_t)&v78, (uint64_t)&v76, (uint64_t)&v74, (uint64_t)&v72, v48, (uint64_t)&v66, (uint64_t)&v54);
  if (*(_BYTE *)(a1 + 64))
  {
    google::protobuf::FieldDescriptor::DefaultValueAsString(&v50, (google::protobuf::FieldDescriptor *)a1, (char *)1);
    v33 = (std::string *)v50.__r_.__value_.__r.__words[0];
    if ((v50.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v33 = &v50;
    v82[0].__r_.__value_.__r.__words[0] = (std::string::size_type)v33;
    v34 = HIBYTE(v50.__r_.__value_.__r.__words[2]);
    if ((v50.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
      v34 = v50.__r_.__value_.__r.__words[1];
    LODWORD(v82[0].__r_.__value_.__r.__words[1]) = v34;
    v80 = 0;
    LODWORD(v81) = -1;
    v78 = 0;
    v79 = -1;
    v76 = 0;
    v77 = -1;
    v74 = 0;
    LODWORD(v75) = -1;
    v72 = 0;
    v73 = -1;
    v70 = 0;
    v71 = -1;
    v68 = 0;
    v69 = -1;
    v66 = 0;
    v67 = -1;
    v54 = 0;
    LODWORD(v55) = -1;
    *(_QWORD *)&v49 = &v70;
    *((_QWORD *)&v49 + 1) = &v68;
    google::protobuf::strings::SubstituteAndAppend(a3, " [default = $0", (uint64_t)v82, (uint64_t)&v80, (uint64_t)&v78, (uint64_t)&v76, (uint64_t)&v74, (uint64_t)&v72, v49, (uint64_t)&v66, (uint64_t)&v54);
    if (SHIBYTE(v50.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v50.__r_.__value_.__l.__data_);
    if (!*(_BYTE *)(a1 + 66))
      goto LABEL_81;
    v35 = ", ";
LABEL_72:
    std::string::append(a3, v35);
    std::string::append(a3, "json_name = \"");
    google::protobuf::CEscape(*(uint64_t **)(a1 + 32), v36, v82);
    if ((v82[0].__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v37 = v82;
    else
      v37 = (std::string *)v82[0].__r_.__value_.__r.__words[0];
    if ((v82[0].__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      size = HIBYTE(v82[0].__r_.__value_.__r.__words[2]);
    else
      size = v82[0].__r_.__value_.__l.__size_;
    std::string::append(a3, (const std::string::value_type *)v37, size);
    if (SHIBYTE(v82[0].__r_.__value_.__r.__words[2]) < 0)
      operator delete(v82[0].__r_.__value_.__l.__data_);
    std::string::append(a3, "\"");
LABEL_81:
    v39 = 1;
    goto LABEL_82;
  }
  if (*(_BYTE *)(a1 + 66))
  {
    v35 = " [";
    goto LABEL_72;
  }
  v39 = 0;
LABEL_82:
  memset(v82, 0, 24);
  {
    if (v39)
      v40 = ", ";
    else
      v40 = " [";
    std::string::append(a3, v40);
    if ((v82[0].__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v41 = v82;
    else
      v41 = (std::string *)v82[0].__r_.__value_.__r.__words[0];
    if ((v82[0].__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v42 = HIBYTE(v82[0].__r_.__value_.__r.__words[2]);
    else
      v42 = v82[0].__r_.__value_.__l.__size_;
    std::string::append(a3, (const std::string::value_type *)v41, v42);
    goto LABEL_94;
  }
  if (v39)
LABEL_94:
    std::string::append(a3, "]");
  v43 = *(unint64_t **)(a1 + 48);
  if (v43)
  {
    v76 = google::protobuf::FieldDescriptor::TypeOnceInit;
    v74 = (const char *)a1;
    v44 = atomic_load(v43);
    if (v44 != -1)
    {
      v80 = &v76;
      v81 = &v74;
      v78 = &v80;
      std::__call_once(v43, &v78, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  if (*(_DWORD *)(a1 + 56) != 10)
  {
    v45 = ";\n";
    goto LABEL_102;
  }
  if (*(_BYTE *)(a4 + 1))
  {
    v45 = " { ... };\n";
LABEL_102:
    std::string::append(a3, v45);
    goto LABEL_103;
  }
  v46 = (uint64_t *)google::protobuf::FieldDescriptor::message_type((google::protobuf::FieldDescriptor *)a1);
  google::protobuf::Descriptor::DebugString(v46, a2, (uint64_t)a3, a4, 0);
LABEL_103:
  if (SHIBYTE(v82[0].__r_.__value_.__r.__words[2]) < 0)
    operator delete(v82[0].__r_.__value_.__l.__data_);
  if (SHIBYTE(v65.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v65.__r_.__value_.__l.__data_);
  v82[0].__r_.__value_.__r.__words[0] = (std::string::size_type)&v61;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)v82);
  if (SHIBYTE(v60) < 0)
    operator delete(*((void **)&v59 + 1));
  if (SBYTE7(v59) < 0)
    operator delete((void *)v58);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  if (SHIBYTE(v52.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v52.__r_.__value_.__l.__data_);
  if (SHIBYTE(__b.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__b.__r_.__value_.__l.__data_);
}

void sub_188872A40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,uint64_t a28,void *a29,uint64_t a30,int a31,__int16 a32,char a33,char a34,void *a35,uint64_t a36,int a37,__int16 a38,char a39,char a40)
{
  if (a21 < 0)
    operator delete(__p);
  if (a40 < 0)
    operator delete(a35);
  if (a27 < 0)
    operator delete(a22);
  if (a34 < 0)
    operator delete(a29);
  _Unwind_Resume(a1);
}

void google::protobuf::OneofDescriptor::DebugString(int *a1, int a2, std::string *a3, __int16 *a4)
{
  char SourceLocation;
  int v9;
  std::string *p_b;
  uint64_t *v11;
  int v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  std::string *v18;
  __int128 v19;
  __int128 v20;
  _BYTE v21[8];
  uint64_t v22;
  void *v23[2];
  void *v24[2];
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  __int16 v28;
  char v29;
  std::string __p;
  std::string __b;
  uint64_t v32;
  int v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  int v47;
  uint64_t *v48;
  int v49;
  std::string *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;

  v53 = *MEMORY[0x1E0C80C00];
  std::string::basic_string[abi:ne180100](&__b, 2 * a2, 32);
  v27 = 0;
  v26 = 0u;
  v25 = 0u;
  *(_OWORD *)v24 = 0u;
  *(_OWORD *)v23 = 0u;
  v28 = *a4;
  v29 = *((_BYTE *)a4 + 2);
  if (SHIBYTE(__b.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&__p, __b.__r_.__value_.__l.__data_, __b.__r_.__value_.__l.__size_);
  else
    __p = __b;
  if (*(_BYTE *)a4)
  {
    v50 = 0;
    v51 = 0;
    v52 = 0;
    google::protobuf::OneofDescriptor::GetLocationPath((uint64_t)a1, (char **)&v50);
    SourceLocation = google::protobuf::FileDescriptor::GetSourceLocation(*(_QWORD *)(*((_QWORD *)a1 + 2) + 16), (uint64_t *)&v50, (uint64_t)&v22);
    if (v50)
    {
      v51 = (char *)v50;
      operator delete(v50);
    }
  }
  else
  {
    SourceLocation = 0;
  }
  v21[0] = SourceLocation;
  v9 = HIBYTE(__b.__r_.__value_.__r.__words[2]);
  p_b = &__b;
  if ((__b.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    p_b = (std::string *)__b.__r_.__value_.__r.__words[0];
  v50 = p_b;
  if ((__b.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    v9 = __b.__r_.__value_.__r.__words[1];
  LODWORD(v51) = v9;
  v11 = *(uint64_t **)a1;
  v12 = *(char *)(*(_QWORD *)a1 + 23);
  v13 = *(_QWORD *)(*(_QWORD *)a1 + 8);
  if (v12 < 0)
    v11 = **(uint64_t ***)a1;
  v48 = v11;
  v14 = v12;
  if (v12 < 0)
    v14 = v13;
  v49 = v14;
  v46 = 0;
  v47 = -1;
  v44 = 0;
  v45 = -1;
  v42 = 0;
  v43 = -1;
  v40 = 0;
  v41 = -1;
  v38 = 0;
  v39 = -1;
  v36 = 0;
  v37 = -1;
  v34 = 0;
  v35 = -1;
  v32 = 0;
  v33 = -1;
  *(_QWORD *)&v19 = &v38;
  *((_QWORD *)&v19 + 1) = &v36;
  google::protobuf::strings::SubstituteAndAppend(a3, "$0oneof $1 {", (uint64_t)&v50, (uint64_t)&v48, (uint64_t)&v46, (uint64_t)&v44, (uint64_t)&v42, (uint64_t)&v40, v19, (uint64_t)&v34, (uint64_t)&v32);
  v15 = (a2 + 1);
  if (*((_BYTE *)a4 + 2))
  {
    std::string::append(a3, " ... }\n");
  }
  else
  {
    std::string::append(a3, "\n");
    if (a1[6] >= 1)
    {
      v16 = 0;
      do
        google::protobuf::FieldDescriptor::DebugString(*(_QWORD *)(*((_QWORD *)a1 + 4) + 8 * v16++), v15, a3, a4);
      while (v16 < a1[6]);
    }
    v17 = HIBYTE(__b.__r_.__value_.__r.__words[2]);
    v18 = &__b;
    if ((__b.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
      v18 = (std::string *)__b.__r_.__value_.__r.__words[0];
    v50 = v18;
    if ((__b.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
      v17 = __b.__r_.__value_.__r.__words[1];
    LODWORD(v51) = v17;
    v48 = 0;
    v49 = -1;
    v46 = 0;
    v47 = -1;
    v44 = 0;
    v45 = -1;
    v42 = 0;
    v43 = -1;
    v40 = 0;
    v41 = -1;
    v38 = 0;
    v39 = -1;
    v36 = 0;
    v37 = -1;
    v34 = 0;
    v35 = -1;
    v32 = 0;
    v33 = -1;
    *(_QWORD *)&v20 = &v38;
    *((_QWORD *)&v20 + 1) = &v36;
    google::protobuf::strings::SubstituteAndAppend(a3, "$0}\n", (uint64_t)&v50, (uint64_t)&v48, (uint64_t)&v46, (uint64_t)&v44, (uint64_t)&v42, (uint64_t)&v40, v20, (uint64_t)&v34, (uint64_t)&v32);
  }
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  v50 = (std::string *)&v26;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&v50);
  if (SHIBYTE(v25) < 0)
    operator delete(v24[1]);
  if (SHIBYTE(v24[0]) < 0)
    operator delete(v23[0]);
  if (SHIBYTE(__b.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__b.__r_.__value_.__l.__data_);
}

void sub_188872F0C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,void *a32,uint64_t a33,int a34,__int16 a35,char a36,char a37,void *__p,uint64_t a39,int a40,__int16 a41,char a42,char a43)
{
  if (a43 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

_QWORD *google::protobuf::FieldDescriptor::FieldTypeNameDebugString(google::protobuf::FieldDescriptor *this, uint64_t a2)
{
  unint64_t *v4;
  unint64_t v5;
  int v6;
  unint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);
  uint64_t (***v12)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);
  uint64_t (**v13)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);
  uint64_t *v14;

  v4 = *(unint64_t **)(a2 + 48);
  if (v4)
  {
    v10 = a2;
    v11 = google::protobuf::FieldDescriptor::TypeOnceInit;
    v5 = atomic_load(v4);
    if (v5 != -1)
    {
      v13 = &v11;
      v14 = &v10;
      v12 = &v13;
      std::__call_once(v4, &v12, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  v6 = *(_DWORD *)(a2 + 56);
  if (v6 == 14)
  {
    google::protobuf::FieldDescriptor::enum_type((google::protobuf::FieldDescriptor *)a2);
    return (_QWORD *)std::operator+<char>();
  }
  if (v6 == 11)
  {
    google::protobuf::FieldDescriptor::message_type((google::protobuf::FieldDescriptor *)a2);
    return (_QWORD *)std::operator+<char>();
  }
  v8 = *(unint64_t **)(a2 + 48);
  if (v8)
  {
    v10 = a2;
    v11 = google::protobuf::FieldDescriptor::TypeOnceInit;
    v9 = atomic_load(v8);
    if (v9 != -1)
    {
      v13 = &v11;
      v14 = &v10;
      v12 = &v13;
      std::__call_once(v8, &v12, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
    v6 = *(_DWORD *)(a2 + 56);
  }
  return std::string::basic_string[abi:ne180100]<0>(this, google::protobuf::FieldDescriptor::kTypeToName[v6]);
}

BOOL google::protobuf::`anonymous namespace'::FormatBracketedOptions(int a1, const google::protobuf::Message *a2, uint64_t a3, std::string *a4)
{
  std::string *p_p;
  std::string::size_type size;
  _BOOL8 v7;
  std::string __p;
  std::string *v10;
  std::string *v11;
  uint64_t v12;

  v10 = 0;
  v11 = 0;
  v12 = 0;
  {
    google::protobuf::Join<std::vector<std::string>>(", ", &v10, &__p);
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      p_p = &__p;
    else
      p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    else
      size = __p.__r_.__value_.__l.__size_;
    std::string::append(a4, (const std::string::value_type *)p_p, size);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
  v7 = v10 != v11;
  __p.__r_.__value_.__r.__words[0] = (std::string::size_type)&v10;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&__p);
  return v7;
}

void sub_188873150(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, char *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15)
{
  if (a14 < 0)
    operator delete(__p);
  __p = &a15;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&__p);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::FileDescriptor::GetSourceLocation(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int *v13;
  unint64_t v14;
  int8x8_t v15;
  unint64_t v16;
  uint8x8_t v17;
  unint64_t v18;
  unint64_t v19;
  int8x8_t **v20;
  int8x8_t *v21;
  uint64_t v22;
  int8x8_t v23;
  int v24;
  _DWORD *v25;
  std::string *v26;
  uint64_t v27;
  const std::string **v28;
  unint64_t v29;
  __int128 **v30;
  unint64_t v31;
  unint64_t v32;
  std::string *v33;
  std::string *v35;
  unint64_t v36;
  uint64_t v37;
  const std::string **v38;
  uint64_t v39;
  std::string *v40;
  std::string v41;
  _QWORD *v42;
  _QWORD v43[2];
  std::string::value_type *__s;
  const char *v45;
  int v46;
  std::string __p;
  uint64_t v48;

  v48 = *MEMORY[0x1E0C80C00];
  if (!a3)
  {
    LODWORD(__s) = 3;
    v45 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/descriptor.cc";
    v46 = 2966;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "CHECK failed: out_location != nullptr: ");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&__s);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
  v6 = *(_QWORD *)(a1 + 152);
  if (!v6)
    return 0;
  v7 = *(unint64_t **)(a1 + 144);
  v43[0] = v7;
  v43[1] = v6;
  v42 = v43;
  v8 = atomic_load(v7 + 34);
  if (v8 != -1)
  {
    __s = (std::string::value_type *)google::protobuf::FileDescriptorTables::BuildLocationsByPath;
    v45 = (const char *)&v42;
    v41.__r_.__value_.__r.__words[0] = (std::string::size_type)&__s;
    std::__call_once(v7 + 34, &v41, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (&)(std::pair<google::protobuf::FileDescriptorTables const*,google::protobuf::SourceCodeInfo const*> *),std::pair<google::protobuf::FileDescriptorTables const*,google::protobuf::SourceCodeInfo const*> *&&>>);
  }
  v9 = *a2;
  v10 = a2[1];
  memset(&v41, 0, sizeof(v41));
  if (v9 != v10)
  {
    v11 = 0;
    do
    {
      if (v11)
        std::string::append(&v41, ",");
      v12 = *(unsigned int *)(v9 + v11);
      __s = (std::string::value_type *)&v46;
      v13 = &v46;
      if ((v12 & 0x80000000) != 0)
      {
        LOBYTE(v46) = 45;
        v12 = -(int)v12;
        v13 = (int *)((char *)&v46 + 1);
      }
      v45 = (const char *)(google::protobuf::FastUInt32ToBufferLeft((google::protobuf *)v12, v13, (char *)a3)
                         - (_BYTE *)&v46);
      std::string::append(&v41, __s, (std::string::size_type)v45);
      v11 += 4;
    }
    while (v9 + v11 != v10);
  }
  v14 = std::__string_hash<char>::operator()[abi:ne180100]((uint64_t)(v7 + 38), (uint64_t)&v41);
  v15 = (int8x8_t)v7[36];
  if (v15)
  {
    v16 = v14;
    v17 = (uint8x8_t)vcnt_s8(v15);
    v17.i16[0] = vaddlv_u8(v17);
    v18 = v17.u32[0];
    if (v17.u32[0] > 1uLL)
    {
      v19 = v14;
      if (v14 >= *(_QWORD *)&v15)
        v19 = v14 % *(_QWORD *)&v15;
    }
    else
    {
      v19 = (*(_QWORD *)&v15 - 1) & v14;
    }
    v20 = *(int8x8_t ***)(v7[35] + 8 * v19);
    if (v20)
    {
      v21 = *v20;
      if (*v20)
      {
        v22 = (uint64_t)(v7 + 39);
        do
        {
          v23 = v21[1];
          if (*(_QWORD *)&v23 == v16)
          {
            if ((std::equal_to<std::string>::operator()[abi:ne180100](v22, (unsigned __int8 *)&v21[2], (unsigned __int8 *)&v41) & 1) != 0)
            {
              v15 = v21[5];
              goto LABEL_32;
            }
          }
          else
          {
            if (v18 > 1)
            {
              if (*(_QWORD *)&v23 >= *(_QWORD *)&v15)
                *(_QWORD *)&v23 %= *(_QWORD *)&v15;
            }
            else
            {
              *(_QWORD *)&v23 &= *(_QWORD *)&v15 - 1;
            }
            if (*(_QWORD *)&v23 != v19)
              break;
          }
          v21 = (int8x8_t *)*v21;
        }
        while (v21);
      }
    }
    v15 = 0;
  }
LABEL_32:
  if (SHIBYTE(v41.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v41.__r_.__value_.__l.__data_);
    if (!*(_QWORD *)&v15)
      return 0;
  }
  else if (!*(_QWORD *)&v15)
  {
    return 0;
  }
  v24 = *(_DWORD *)(*(_QWORD *)&v15 + 48);
  if ((v24 - 3) >= 2)
    return 0;
  v25 = *(_DWORD **)(*(_QWORD *)&v15 + 56);
  *(_DWORD *)a3 = *v25;
  *(_DWORD *)(a3 + 8) = v25[1];
  *(_DWORD *)(a3 + 4) = v25[2 * (v24 != 3)];
  *(_DWORD *)(a3 + 12) = v25[v24 - 1];
  std::string::operator=((std::string *)(a3 + 16), (const std::string *)(*(_QWORD *)(*(_QWORD *)&v15 + 96) & 0xFFFFFFFFFFFFFFFELL));
  std::string::operator=((std::string *)(a3 + 40), (const std::string *)(*(_QWORD *)(*(_QWORD *)&v15 + 104) & 0xFFFFFFFFFFFFFFFELL));
  v26 = *(std::string **)(a3 + 64);
  v27 = *(_QWORD *)(*(_QWORD *)&v15 + 88);
  if (v27)
    v28 = (const std::string **)(v27 + 8);
  else
    v28 = 0;
  v29 = *(int *)(*(_QWORD *)&v15 + 80);
  v30 = (__int128 **)&v28[v29];
  if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(a3 + 80) - (_QWORD)v26) >> 3) >= v29)
  {
    v35 = *(std::string **)(a3 + 72);
    v36 = 0xAAAAAAAAAAAAAAABLL * (((char *)v35 - (char *)v26) >> 3);
    if (v36 >= v29)
    {
      if ((_DWORD)v29)
      {
        v39 = 8 * v29;
        v40 = *(std::string **)(a3 + 64);
        do
        {
          std::string::operator=(v26++, *v28++);
          ++v40;
          v39 -= 8;
        }
        while (v39);
        v35 = *(std::string **)(a3 + 72);
      }
      else
      {
        v40 = *(std::string **)(a3 + 64);
      }
      while (v35 != v40)
      {
        if (SHIBYTE(v35[-1].__r_.__value_.__r.__words[2]) < 0)
          operator delete(v35[-1].__r_.__value_.__l.__data_);
        --v35;
      }
      *(_QWORD *)(a3 + 72) = v40;
      return 1;
    }
    if (v35 != v26)
    {
      v37 = 0x5555555555555558 * (((char *)v35 - (char *)v26) >> 3);
      v38 = v28;
      do
      {
        std::string::operator=(v26++, *v38++);
        v37 -= 8;
      }
      while (v37);
      v26 = *(std::string **)(a3 + 72);
    }
    v33 = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::string>,google::protobuf::internal::RepeatedPtrIterator<std::string const>,google::protobuf::internal::RepeatedPtrIterator<std::string const>,std::string*>(a3 + 80, (__int128 **)&v28[v36], v30, v26);
  }
  else
  {
    std::vector<std::string>::__vdeallocate((std::vector<std::string> *)(a3 + 64));
    if ((v29 & 0x80000000) != 0)
      std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
    v31 = 0x5555555555555556 * ((uint64_t)(*(_QWORD *)(a3 + 80) - *(_QWORD *)(a3 + 64)) >> 3);
    if (v31 <= v29)
      v31 = v29;
    if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(a3 + 80) - *(_QWORD *)(a3 + 64)) >> 3) >= 0x555555555555555)
      v32 = 0xAAAAAAAAAAAAAAALL;
    else
      v32 = v31;
    std::vector<zilch::TrafficDynamicTile::Flow>::__vallocate[abi:ne180100]((_QWORD *)(a3 + 64), v32);
    v33 = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::string>,google::protobuf::internal::RepeatedPtrIterator<std::string const>,google::protobuf::internal::RepeatedPtrIterator<std::string const>,std::string*>(a3 + 80, (__int128 **)v28, (__int128 **)&v28[v29], *(std::string **)(a3 + 72));
  }
  *(_QWORD *)(a3 + 72) = v33;
  return 1;
}

void sub_188873600(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *__p,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  uint64_t v27;
  uint64_t v28;

  *(_QWORD *)(v27 + 72) = v28;
  _Unwind_Resume(exception_object);
}

BOOL google::protobuf::FieldDescriptor::is_packed(google::protobuf::FieldDescriptor *this)
{
  unint64_t *v2;
  unint64_t v3;
  uint64_t v4;
  google::protobuf::FieldDescriptor *v6;
  uint64_t (*v7)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);
  _QWORD *v8;
  _QWORD v9[2];

  if (*((_DWORD *)this + 15) != 3)
    return 0;
  v2 = (unint64_t *)*((_QWORD *)this + 6);
  if (v2)
  {
    v6 = this;
    v7 = google::protobuf::FieldDescriptor::TypeOnceInit;
    v3 = atomic_load(v2);
    if (v3 != -1)
    {
      v9[0] = &v7;
      v9[1] = &v6;
      v8 = v9;
      std::__call_once(v2, &v8, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  if ((*((_DWORD *)this + 14) - 13) > 0xFFFFFFFB)
    return 0;
  v4 = *((_QWORD *)this + 15);
  if (*(_DWORD *)(*((_QWORD *)this + 5) + 60) != 2)
  {
    if (!v4 || (*(_BYTE *)(v4 + 40) & 2) == 0)
      return 1;
    return *(unsigned __int8 *)(v4 + 76) != 0;
  }
  if (v4)
    return *(unsigned __int8 *)(v4 + 76) != 0;
  return 0;
}

void google::protobuf::Descriptor::GetLocationPath(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  _DWORD *v7;
  _DWORD *v8;
  unint64_t v9;
  _QWORD *v10;
  _DWORD *v11;
  _DWORD *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char *v17;
  _DWORD *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char *v23;
  char *v24;
  char *v25;
  int v26;
  uint64_t v27;
  _QWORD *v28;
  int v29;
  _DWORD *v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  char *v35;
  char *v36;
  char *v37;
  _DWORD *v38;
  int v39;
  char *v40;
  char *v41;
  int v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  unint64_t v48;
  char *v49;
  int v50;

  v4 = *(_QWORD *)(a1 + 24);
  if (!v4)
  {
    v10 = (_QWORD *)(a2 + 16);
    v9 = *(_QWORD *)(a2 + 16);
    v11 = *(_DWORD **)(a2 + 8);
    if ((unint64_t)v11 >= v9)
    {
      v18 = *(_DWORD **)a2;
      v19 = ((uint64_t)v11 - *(_QWORD *)a2) >> 2;
      v20 = v19 + 1;
      if ((unint64_t)(v19 + 1) >> 62)
        goto LABEL_70;
      v21 = v9 - (_QWORD)v18;
      if (v21 >> 1 > v20)
        v20 = v21 >> 1;
      if ((unint64_t)v21 >= 0x7FFFFFFFFFFFFFFCLL)
        v22 = 0x3FFFFFFFFFFFFFFFLL;
      else
        v22 = v20;
      if (v22)
      {
        v23 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<unsigned int>>(a2 + 16, v22);
        v18 = *(_DWORD **)a2;
        v11 = *(_DWORD **)(a2 + 8);
      }
      else
      {
        v23 = 0;
      }
      v40 = &v23[4 * v19];
      v41 = &v23[4 * v22];
      *(_DWORD *)v40 = 4;
      v8 = v40 + 4;
      while (v11 != v18)
      {
        v42 = *--v11;
        *((_DWORD *)v40 - 1) = v42;
        v40 -= 4;
      }
      *(_QWORD *)a2 = v40;
      *(_QWORD *)(a2 + 8) = v8;
      *(_QWORD *)(a2 + 16) = v41;
      if (v18)
        operator delete(v18);
    }
    else
    {
      *v11 = 4;
      v8 = v11 + 1;
    }
    *(_QWORD *)(a2 + 8) = v8;
    v43 = *(_QWORD *)(a1 + 24);
    if (v43)
      v44 = (_QWORD *)(v43 + 56);
    else
      v44 = (_QWORD *)(*(_QWORD *)(a1 + 16) + 104);
    v29 = 954437177 * ((unint64_t)(a1 - *v44) >> 4);
    if ((unint64_t)v8 >= *v10)
    {
      v30 = *(_DWORD **)a2;
      v45 = ((uint64_t)v8 - *(_QWORD *)a2) >> 2;
      v46 = v45 + 1;
      if (!((unint64_t)(v45 + 1) >> 62))
      {
        v47 = *v10 - (_QWORD)v30;
        if (v47 >> 1 > v46)
          v46 = v47 >> 1;
        if ((unint64_t)v47 >= 0x7FFFFFFFFFFFFFFCLL)
          v48 = 0x3FFFFFFFFFFFFFFFLL;
        else
          v48 = v46;
        if (v48)
        {
          v49 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<unsigned int>>(a2 + 16, v48);
          v30 = *(_DWORD **)a2;
          v8 = *(_DWORD **)(a2 + 8);
        }
        else
        {
          v49 = 0;
        }
        v36 = &v49[4 * v45];
        v37 = &v49[4 * v48];
        *(_DWORD *)v36 = v29;
        v38 = v36 + 4;
        while (v8 != v30)
        {
          v50 = *--v8;
          *((_DWORD *)v36 - 1) = v50;
          v36 -= 4;
        }
        goto LABEL_67;
      }
LABEL_70:
      std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
    }
LABEL_54:
    *v8 = v29;
    v38 = v8 + 1;
    goto LABEL_69;
  }
  google::protobuf::Descriptor::GetLocationPath(v4, a2);
  v6 = (_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 16);
  v7 = *(_DWORD **)(a2 + 8);
  if ((unint64_t)v7 >= v5)
  {
    v12 = *(_DWORD **)a2;
    v13 = ((uint64_t)v7 - *(_QWORD *)a2) >> 2;
    v14 = v13 + 1;
    if ((unint64_t)(v13 + 1) >> 62)
      goto LABEL_70;
    v15 = v5 - (_QWORD)v12;
    if (v15 >> 1 > v14)
      v14 = v15 >> 1;
    if ((unint64_t)v15 >= 0x7FFFFFFFFFFFFFFCLL)
      v16 = 0x3FFFFFFFFFFFFFFFLL;
    else
      v16 = v14;
    if (v16)
    {
      v17 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<unsigned int>>(a2 + 16, v16);
      v12 = *(_DWORD **)a2;
      v7 = *(_DWORD **)(a2 + 8);
    }
    else
    {
      v17 = 0;
    }
    v24 = &v17[4 * v13];
    v25 = &v17[4 * v16];
    *(_DWORD *)v24 = 3;
    v8 = v24 + 4;
    while (v7 != v12)
    {
      v26 = *--v7;
      *((_DWORD *)v24 - 1) = v26;
      v24 -= 4;
    }
    *(_QWORD *)a2 = v24;
    *(_QWORD *)(a2 + 8) = v8;
    *(_QWORD *)(a2 + 16) = v25;
    if (v12)
      operator delete(v12);
  }
  else
  {
    *v7 = 3;
    v8 = v7 + 1;
  }
  *(_QWORD *)(a2 + 8) = v8;
  v27 = *(_QWORD *)(a1 + 24);
  if (v27)
    v28 = (_QWORD *)(v27 + 56);
  else
    v28 = (_QWORD *)(*(_QWORD *)(a1 + 16) + 104);
  v29 = 954437177 * ((unint64_t)(a1 - *v28) >> 4);
  if ((unint64_t)v8 < *v6)
    goto LABEL_54;
  v30 = *(_DWORD **)a2;
  v31 = ((uint64_t)v8 - *(_QWORD *)a2) >> 2;
  v32 = v31 + 1;
  if ((unint64_t)(v31 + 1) >> 62)
    goto LABEL_70;
  v33 = *v6 - (_QWORD)v30;
  if (v33 >> 1 > v32)
    v32 = v33 >> 1;
  if ((unint64_t)v33 >= 0x7FFFFFFFFFFFFFFCLL)
    v34 = 0x3FFFFFFFFFFFFFFFLL;
  else
    v34 = v32;
  if (v34)
  {
    v35 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<unsigned int>>(a2 + 16, v34);
    v30 = *(_DWORD **)a2;
    v8 = *(_DWORD **)(a2 + 8);
  }
  else
  {
    v35 = 0;
  }
  v36 = &v35[4 * v31];
  v37 = &v35[4 * v34];
  *(_DWORD *)v36 = v29;
  v38 = v36 + 4;
  while (v8 != v30)
  {
    v39 = *--v8;
    *((_DWORD *)v36 - 1) = v39;
    v36 -= 4;
  }
LABEL_67:
  *(_QWORD *)a2 = v36;
  *(_QWORD *)(a2 + 8) = v38;
  *(_QWORD *)(a2 + 16) = v37;
  if (v30)
    operator delete(v30);
LABEL_69:
  *(_QWORD *)(a2 + 8) = v38;
}

void google::protobuf::FieldDescriptor::GetLocationPath(uint64_t a1, char **a2)
{
  uint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  char *v7;
  char *v8;
  unint64_t v9;
  _QWORD *v10;
  char *v11;
  unint64_t v12;
  _QWORD *v13;
  char *v14;
  char *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char *v32;
  char *v33;
  char *v34;
  int v35;
  uint64_t v36;
  _QWORD *v37;
  int v38;
  char *v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  unint64_t v43;
  char *v44;
  char *v45;
  char *v46;
  char *v47;
  int v48;
  char *v49;
  char *v50;
  int v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  unint64_t v57;
  char *v58;
  int v59;
  char *v60;
  char *v61;
  int v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  unint64_t v68;
  char *v69;
  int v70;

  if (!*(_BYTE *)(a1 + 67))
  {
    google::protobuf::Descriptor::GetLocationPath(*(_QWORD *)(a1 + 80), (uint64_t)a2);
    v10 = a2 + 2;
    v9 = (unint64_t)a2[2];
    v11 = a2[1];
    if ((unint64_t)v11 >= v9)
    {
      v21 = *a2;
      v22 = (v11 - *a2) >> 2;
      v23 = v22 + 1;
      if ((unint64_t)(v22 + 1) >> 62)
        goto LABEL_109;
      v24 = v9 - (_QWORD)v21;
      if (v24 >> 1 > v23)
        v23 = v24 >> 1;
      if ((unint64_t)v24 >= 0x7FFFFFFFFFFFFFFCLL)
        v25 = 0x3FFFFFFFFFFFFFFFLL;
      else
        v25 = v23;
      if (v25)
      {
        v26 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<unsigned int>>((uint64_t)(a2 + 2), v25);
        v21 = *a2;
        v11 = a2[1];
      }
      else
      {
        v26 = 0;
      }
      v49 = &v26[4 * v22];
      v50 = &v26[4 * v25];
      *(_DWORD *)v49 = 2;
      v8 = v49 + 4;
      while (v11 != v21)
      {
        v51 = *((_DWORD *)v11 - 1);
        v11 -= 4;
        *((_DWORD *)v49 - 1) = v51;
        v49 -= 4;
      }
      *a2 = v49;
      a2[1] = v8;
      a2[2] = v50;
      if (v21)
        operator delete(v21);
    }
    else
    {
      *(_DWORD *)v11 = 2;
      v8 = v11 + 4;
    }
    a2[1] = v8;
    if (*(_BYTE *)(a1 + 67))
    {
      v52 = *(_QWORD *)(a1 + 96);
      if (v52)
        v53 = (_QWORD *)(v52 + 80);
      else
        v53 = (_QWORD *)(*(_QWORD *)(a1 + 40) + 128);
    }
    else
    {
      v53 = (_QWORD *)(*(_QWORD *)(a1 + 80) + 40);
    }
    v38 = 678152731 * ((unint64_t)(a1 - *v53) >> 3);
    if ((unint64_t)v8 < *v10)
      goto LABEL_93;
    v39 = *a2;
    v54 = (v8 - *a2) >> 2;
    v55 = v54 + 1;
    if (!((unint64_t)(v54 + 1) >> 62))
    {
      v56 = *v10 - (_QWORD)v39;
      if (v56 >> 1 > v55)
        v55 = v56 >> 1;
      if ((unint64_t)v56 >= 0x7FFFFFFFFFFFFFFCLL)
        v57 = 0x3FFFFFFFFFFFFFFFLL;
      else
        v57 = v55;
      if (v57)
      {
        v58 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<unsigned int>>((uint64_t)(a2 + 2), v57);
        v39 = *a2;
        v8 = a2[1];
      }
      else
      {
        v58 = 0;
      }
      v45 = &v58[4 * v54];
      v46 = &v58[4 * v57];
      *(_DWORD *)v45 = v38;
      v47 = v45 + 4;
      while (v8 != v39)
      {
        v59 = *((_DWORD *)v8 - 1);
        v8 -= 4;
        *((_DWORD *)v45 - 1) = v59;
        v45 -= 4;
      }
      goto LABEL_106;
    }
    goto LABEL_109;
  }
  v4 = *(_QWORD *)(a1 + 96);
  if (!v4)
  {
    v13 = a2 + 2;
    v12 = (unint64_t)a2[2];
    v14 = a2[1];
    if ((unint64_t)v14 >= v12)
    {
      v27 = *a2;
      v28 = (v14 - *a2) >> 2;
      v29 = v28 + 1;
      if ((unint64_t)(v28 + 1) >> 62)
        goto LABEL_109;
      v30 = v12 - (_QWORD)v27;
      if (v30 >> 1 > v29)
        v29 = v30 >> 1;
      if ((unint64_t)v30 >= 0x7FFFFFFFFFFFFFFCLL)
        v31 = 0x3FFFFFFFFFFFFFFFLL;
      else
        v31 = v29;
      if (v31)
      {
        v32 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<unsigned int>>((uint64_t)(a2 + 2), v31);
        v27 = *a2;
        v14 = a2[1];
      }
      else
      {
        v32 = 0;
      }
      v60 = &v32[4 * v28];
      v61 = &v32[4 * v31];
      *(_DWORD *)v60 = 7;
      v8 = v60 + 4;
      while (v14 != v27)
      {
        v62 = *((_DWORD *)v14 - 1);
        v14 -= 4;
        *((_DWORD *)v60 - 1) = v62;
        v60 -= 4;
      }
      *a2 = v60;
      a2[1] = v8;
      a2[2] = v61;
      if (v27)
        operator delete(v27);
    }
    else
    {
      *(_DWORD *)v14 = 7;
      v8 = v14 + 4;
    }
    a2[1] = v8;
    if (*(_BYTE *)(a1 + 67))
    {
      v63 = *(_QWORD *)(a1 + 96);
      if (v63)
        v64 = (_QWORD *)(v63 + 80);
      else
        v64 = (_QWORD *)(*(_QWORD *)(a1 + 40) + 128);
    }
    else
    {
      v64 = (_QWORD *)(*(_QWORD *)(a1 + 80) + 40);
    }
    v38 = 678152731 * ((unint64_t)(a1 - *v64) >> 3);
    if ((unint64_t)v8 < *v13)
    {
LABEL_93:
      *(_DWORD *)v8 = v38;
      v47 = v8 + 4;
      goto LABEL_108;
    }
    v39 = *a2;
    v65 = (v8 - *a2) >> 2;
    v66 = v65 + 1;
    if (!((unint64_t)(v65 + 1) >> 62))
    {
      v67 = *v13 - (_QWORD)v39;
      if (v67 >> 1 > v66)
        v66 = v67 >> 1;
      if ((unint64_t)v67 >= 0x7FFFFFFFFFFFFFFCLL)
        v68 = 0x3FFFFFFFFFFFFFFFLL;
      else
        v68 = v66;
      if (v68)
      {
        v69 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<unsigned int>>((uint64_t)(a2 + 2), v68);
        v39 = *a2;
        v8 = a2[1];
      }
      else
      {
        v69 = 0;
      }
      v45 = &v69[4 * v65];
      v46 = &v69[4 * v68];
      *(_DWORD *)v45 = v38;
      v47 = v45 + 4;
      while (v8 != v39)
      {
        v70 = *((_DWORD *)v8 - 1);
        v8 -= 4;
        *((_DWORD *)v45 - 1) = v70;
        v45 -= 4;
      }
      goto LABEL_106;
    }
LABEL_109:
    std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
  }
  google::protobuf::Descriptor::GetLocationPath(v4, (uint64_t)a2);
  v6 = a2 + 2;
  v5 = (unint64_t)a2[2];
  v7 = a2[1];
  if ((unint64_t)v7 >= v5)
  {
    v15 = *a2;
    v16 = (v7 - *a2) >> 2;
    v17 = v16 + 1;
    if ((unint64_t)(v16 + 1) >> 62)
      goto LABEL_109;
    v18 = v5 - (_QWORD)v15;
    if (v18 >> 1 > v17)
      v17 = v18 >> 1;
    if ((unint64_t)v18 >= 0x7FFFFFFFFFFFFFFCLL)
      v19 = 0x3FFFFFFFFFFFFFFFLL;
    else
      v19 = v17;
    if (v19)
    {
      v20 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<unsigned int>>((uint64_t)(a2 + 2), v19);
      v15 = *a2;
      v7 = a2[1];
    }
    else
    {
      v20 = 0;
    }
    v33 = &v20[4 * v16];
    v34 = &v20[4 * v19];
    *(_DWORD *)v33 = 6;
    v8 = v33 + 4;
    while (v7 != v15)
    {
      v35 = *((_DWORD *)v7 - 1);
      v7 -= 4;
      *((_DWORD *)v33 - 1) = v35;
      v33 -= 4;
    }
    *a2 = v33;
    a2[1] = v8;
    a2[2] = v34;
    if (v15)
      operator delete(v15);
  }
  else
  {
    *(_DWORD *)v7 = 6;
    v8 = v7 + 4;
  }
  a2[1] = v8;
  if (*(_BYTE *)(a1 + 67))
  {
    v36 = *(_QWORD *)(a1 + 96);
    if (v36)
      v37 = (_QWORD *)(v36 + 80);
    else
      v37 = (_QWORD *)(*(_QWORD *)(a1 + 40) + 128);
  }
  else
  {
    v37 = (_QWORD *)(*(_QWORD *)(a1 + 80) + 40);
  }
  v38 = 678152731 * ((unint64_t)(a1 - *v37) >> 3);
  if ((unint64_t)v8 < *v6)
    goto LABEL_93;
  v39 = *a2;
  v40 = (v8 - *a2) >> 2;
  v41 = v40 + 1;
  if ((unint64_t)(v40 + 1) >> 62)
    goto LABEL_109;
  v42 = *v6 - (_QWORD)v39;
  if (v42 >> 1 > v41)
    v41 = v42 >> 1;
  if ((unint64_t)v42 >= 0x7FFFFFFFFFFFFFFCLL)
    v43 = 0x3FFFFFFFFFFFFFFFLL;
  else
    v43 = v41;
  if (v43)
  {
    v44 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<unsigned int>>((uint64_t)(a2 + 2), v43);
    v39 = *a2;
    v8 = a2[1];
  }
  else
  {
    v44 = 0;
  }
  v45 = &v44[4 * v40];
  v46 = &v44[4 * v43];
  *(_DWORD *)v45 = v38;
  v47 = v45 + 4;
  while (v8 != v39)
  {
    v48 = *((_DWORD *)v8 - 1);
    v8 -= 4;
    *((_DWORD *)v45 - 1) = v48;
    v45 -= 4;
  }
LABEL_106:
  *a2 = v45;
  a2[1] = v47;
  a2[2] = v46;
  if (v39)
    operator delete(v39);
LABEL_108:
  a2[1] = v47;
}

void google::protobuf::OneofDescriptor::GetLocationPath(uint64_t a1, char **a2)
{
  char *v4;
  char *v5;
  char *v6;
  char *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char *v12;
  char *v13;
  int v14;
  int v15;
  char *v16;
  char *v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char *v22;
  char *v23;
  char *v24;
  int v25;

  google::protobuf::Descriptor::GetLocationPath(*(_QWORD *)(a1 + 16), (uint64_t)a2);
  v4 = a2[2];
  v5 = a2[1];
  if (v5 >= v4)
  {
    v7 = *a2;
    v8 = (v5 - *a2) >> 2;
    v9 = v8 + 1;
    if ((unint64_t)(v8 + 1) >> 62)
      goto LABEL_34;
    v10 = v4 - v7;
    if (v10 >> 1 > v9)
      v9 = v10 >> 1;
    if ((unint64_t)v10 >= 0x7FFFFFFFFFFFFFFCLL)
      v11 = 0x3FFFFFFFFFFFFFFFLL;
    else
      v11 = v9;
    if (v11)
    {
      v12 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<unsigned int>>((uint64_t)(a2 + 2), v11);
      v7 = *a2;
      v5 = a2[1];
    }
    else
    {
      v12 = 0;
    }
    v13 = &v12[4 * v8];
    v4 = &v12[4 * v11];
    *(_DWORD *)v13 = 8;
    v6 = v13 + 4;
    while (v5 != v7)
    {
      v14 = *((_DWORD *)v5 - 1);
      v5 -= 4;
      *((_DWORD *)v13 - 1) = v14;
      v13 -= 4;
    }
    *a2 = v13;
    a2[1] = v6;
    a2[2] = v4;
    if (v7)
    {
      operator delete(v7);
      v4 = a2[2];
    }
  }
  else
  {
    *(_DWORD *)v5 = 8;
    v6 = v5 + 4;
  }
  a2[1] = v6;
  v15 = -1431655765 * ((unint64_t)(a1 - *(_QWORD *)(*(_QWORD *)(a1 + 16) + 48)) >> 4);
  if (v6 < v4)
  {
    *(_DWORD *)v6 = v15;
    v16 = v6 + 4;
    goto LABEL_33;
  }
  v17 = *a2;
  v18 = (v6 - *a2) >> 2;
  v19 = v18 + 1;
  if ((unint64_t)(v18 + 1) >> 62)
LABEL_34:
    std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
  v20 = v4 - v17;
  if (v20 >> 1 > v19)
    v19 = v20 >> 1;
  if ((unint64_t)v20 >= 0x7FFFFFFFFFFFFFFCLL)
    v21 = 0x3FFFFFFFFFFFFFFFLL;
  else
    v21 = v19;
  if (v21)
  {
    v22 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<unsigned int>>((uint64_t)(a2 + 2), v21);
    v17 = *a2;
    v6 = a2[1];
  }
  else
  {
    v22 = 0;
  }
  v23 = &v22[4 * v18];
  v24 = &v22[4 * v21];
  *(_DWORD *)v23 = v15;
  v16 = v23 + 4;
  while (v6 != v17)
  {
    v25 = *((_DWORD *)v6 - 1);
    v6 -= 4;
    *((_DWORD *)v23 - 1) = v25;
    v23 -= 4;
  }
  *a2 = v23;
  a2[1] = v16;
  a2[2] = v24;
  if (v17)
    operator delete(v17);
LABEL_33:
  a2[1] = v16;
}

void google::protobuf::EnumDescriptor::GetLocationPath(uint64_t a1, char **a2)
{
  uint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  char *v7;
  char *v8;
  unint64_t v9;
  _QWORD *v10;
  char *v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char *v23;
  char *v24;
  char *v25;
  int v26;
  uint64_t v27;
  _QWORD *v28;
  int v29;
  char *v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  char *v35;
  char *v36;
  char *v37;
  char *v38;
  int v39;
  char *v40;
  char *v41;
  int v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  unint64_t v48;
  char *v49;
  int v50;

  v4 = *(_QWORD *)(a1 + 24);
  if (!v4)
  {
    v10 = a2 + 2;
    v9 = (unint64_t)a2[2];
    v11 = a2[1];
    if ((unint64_t)v11 >= v9)
    {
      v18 = *a2;
      v19 = (v11 - *a2) >> 2;
      v20 = v19 + 1;
      if ((unint64_t)(v19 + 1) >> 62)
        goto LABEL_70;
      v21 = v9 - (_QWORD)v18;
      if (v21 >> 1 > v20)
        v20 = v21 >> 1;
      if ((unint64_t)v21 >= 0x7FFFFFFFFFFFFFFCLL)
        v22 = 0x3FFFFFFFFFFFFFFFLL;
      else
        v22 = v20;
      if (v22)
      {
        v23 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<unsigned int>>((uint64_t)(a2 + 2), v22);
        v18 = *a2;
        v11 = a2[1];
      }
      else
      {
        v23 = 0;
      }
      v40 = &v23[4 * v19];
      v41 = &v23[4 * v22];
      *(_DWORD *)v40 = 5;
      v8 = v40 + 4;
      while (v11 != v18)
      {
        v42 = *((_DWORD *)v11 - 1);
        v11 -= 4;
        *((_DWORD *)v40 - 1) = v42;
        v40 -= 4;
      }
      *a2 = v40;
      a2[1] = v8;
      a2[2] = v41;
      if (v18)
        operator delete(v18);
    }
    else
    {
      *(_DWORD *)v11 = 5;
      v8 = v11 + 4;
    }
    a2[1] = v8;
    v43 = *(_QWORD *)(a1 + 24);
    if (v43)
      v44 = (_QWORD *)(v43 + 64);
    else
      v44 = (_QWORD *)(*(_QWORD *)(a1 + 16) + 112);
    v29 = -858993459 * ((unint64_t)(a1 - *v44) >> 4);
    if ((unint64_t)v8 >= *v10)
    {
      v30 = *a2;
      v45 = (v8 - *a2) >> 2;
      v46 = v45 + 1;
      if (!((unint64_t)(v45 + 1) >> 62))
      {
        v47 = *v10 - (_QWORD)v30;
        if (v47 >> 1 > v46)
          v46 = v47 >> 1;
        if ((unint64_t)v47 >= 0x7FFFFFFFFFFFFFFCLL)
          v48 = 0x3FFFFFFFFFFFFFFFLL;
        else
          v48 = v46;
        if (v48)
        {
          v49 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<unsigned int>>((uint64_t)(a2 + 2), v48);
          v30 = *a2;
          v8 = a2[1];
        }
        else
        {
          v49 = 0;
        }
        v36 = &v49[4 * v45];
        v37 = &v49[4 * v48];
        *(_DWORD *)v36 = v29;
        v38 = v36 + 4;
        while (v8 != v30)
        {
          v50 = *((_DWORD *)v8 - 1);
          v8 -= 4;
          *((_DWORD *)v36 - 1) = v50;
          v36 -= 4;
        }
        goto LABEL_67;
      }
LABEL_70:
      std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
    }
LABEL_54:
    *(_DWORD *)v8 = v29;
    v38 = v8 + 4;
    goto LABEL_69;
  }
  google::protobuf::Descriptor::GetLocationPath(v4, (uint64_t)a2);
  v6 = a2 + 2;
  v5 = (unint64_t)a2[2];
  v7 = a2[1];
  if ((unint64_t)v7 >= v5)
  {
    v12 = *a2;
    v13 = (v7 - *a2) >> 2;
    v14 = v13 + 1;
    if ((unint64_t)(v13 + 1) >> 62)
      goto LABEL_70;
    v15 = v5 - (_QWORD)v12;
    if (v15 >> 1 > v14)
      v14 = v15 >> 1;
    if ((unint64_t)v15 >= 0x7FFFFFFFFFFFFFFCLL)
      v16 = 0x3FFFFFFFFFFFFFFFLL;
    else
      v16 = v14;
    if (v16)
    {
      v17 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<unsigned int>>((uint64_t)(a2 + 2), v16);
      v12 = *a2;
      v7 = a2[1];
    }
    else
    {
      v17 = 0;
    }
    v24 = &v17[4 * v13];
    v25 = &v17[4 * v16];
    *(_DWORD *)v24 = 4;
    v8 = v24 + 4;
    while (v7 != v12)
    {
      v26 = *((_DWORD *)v7 - 1);
      v7 -= 4;
      *((_DWORD *)v24 - 1) = v26;
      v24 -= 4;
    }
    *a2 = v24;
    a2[1] = v8;
    a2[2] = v25;
    if (v12)
      operator delete(v12);
  }
  else
  {
    *(_DWORD *)v7 = 4;
    v8 = v7 + 4;
  }
  a2[1] = v8;
  v27 = *(_QWORD *)(a1 + 24);
  if (v27)
    v28 = (_QWORD *)(v27 + 64);
  else
    v28 = (_QWORD *)(*(_QWORD *)(a1 + 16) + 112);
  v29 = -858993459 * ((unint64_t)(a1 - *v28) >> 4);
  if ((unint64_t)v8 < *v6)
    goto LABEL_54;
  v30 = *a2;
  v31 = (v8 - *a2) >> 2;
  v32 = v31 + 1;
  if ((unint64_t)(v31 + 1) >> 62)
    goto LABEL_70;
  v33 = *v6 - (_QWORD)v30;
  if (v33 >> 1 > v32)
    v32 = v33 >> 1;
  if ((unint64_t)v33 >= 0x7FFFFFFFFFFFFFFCLL)
    v34 = 0x3FFFFFFFFFFFFFFFLL;
  else
    v34 = v32;
  if (v34)
  {
    v35 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<unsigned int>>((uint64_t)(a2 + 2), v34);
    v30 = *a2;
    v8 = a2[1];
  }
  else
  {
    v35 = 0;
  }
  v36 = &v35[4 * v31];
  v37 = &v35[4 * v34];
  *(_DWORD *)v36 = v29;
  v38 = v36 + 4;
  while (v8 != v30)
  {
    v39 = *((_DWORD *)v8 - 1);
    v8 -= 4;
    *((_DWORD *)v36 - 1) = v39;
    v36 -= 4;
  }
LABEL_67:
  *a2 = v36;
  a2[1] = v38;
  a2[2] = v37;
  if (v30)
    operator delete(v30);
LABEL_69:
  a2[1] = v38;
}

void google::protobuf::ServiceDescriptor::GetLocationPath(uint64_t a1, char **a2)
{
  char *v4;
  char **v5;
  char *v6;
  char *v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char *v13;
  char *v14;
  int v15;
  int v16;
  char *v17;
  char *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char *v23;
  char *v24;
  char *v25;
  int v26;

  v5 = a2 + 2;
  v4 = a2[2];
  v6 = a2[1];
  if (v6 >= v4)
  {
    v8 = *a2;
    v9 = (v6 - *a2) >> 2;
    v10 = v9 + 1;
    if ((unint64_t)(v9 + 1) >> 62)
      goto LABEL_34;
    v11 = v4 - v8;
    if (v11 >> 1 > v10)
      v10 = v11 >> 1;
    if ((unint64_t)v11 >= 0x7FFFFFFFFFFFFFFCLL)
      v12 = 0x3FFFFFFFFFFFFFFFLL;
    else
      v12 = v10;
    if (v12)
    {
      v13 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<unsigned int>>((uint64_t)v5, v12);
      v8 = *a2;
      v6 = a2[1];
    }
    else
    {
      v13 = 0;
    }
    v14 = &v13[4 * v9];
    v4 = &v13[4 * v12];
    *(_DWORD *)v14 = 6;
    v7 = v14 + 4;
    while (v6 != v8)
    {
      v15 = *((_DWORD *)v6 - 1);
      v6 -= 4;
      *((_DWORD *)v14 - 1) = v15;
      v14 -= 4;
    }
    *a2 = v14;
    a2[1] = v7;
    a2[2] = v4;
    if (v8)
    {
      operator delete(v8);
      v4 = *v5;
    }
  }
  else
  {
    *(_DWORD *)v6 = 6;
    v7 = v6 + 4;
  }
  a2[1] = v7;
  v16 = -1431655765 * ((unint64_t)(a1 - *(_QWORD *)(*(_QWORD *)(a1 + 16) + 120)) >> 4);
  if (v7 < v4)
  {
    *(_DWORD *)v7 = v16;
    v17 = v7 + 4;
    goto LABEL_33;
  }
  v18 = *a2;
  v19 = (v7 - *a2) >> 2;
  v20 = v19 + 1;
  if ((unint64_t)(v19 + 1) >> 62)
LABEL_34:
    std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
  v21 = v4 - v18;
  if (v21 >> 1 > v20)
    v20 = v21 >> 1;
  if ((unint64_t)v21 >= 0x7FFFFFFFFFFFFFFCLL)
    v22 = 0x3FFFFFFFFFFFFFFFLL;
  else
    v22 = v20;
  if (v22)
  {
    v23 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<unsigned int>>((uint64_t)v5, v22);
    v18 = *a2;
    v7 = a2[1];
  }
  else
  {
    v23 = 0;
  }
  v24 = &v23[4 * v19];
  v25 = &v23[4 * v22];
  *(_DWORD *)v24 = v16;
  v17 = v24 + 4;
  while (v7 != v18)
  {
    v26 = *((_DWORD *)v7 - 1);
    v7 -= 4;
    *((_DWORD *)v24 - 1) = v26;
    v24 -= 4;
  }
  *a2 = v24;
  a2[1] = v17;
  a2[2] = v25;
  if (v18)
    operator delete(v18);
LABEL_33:
  a2[1] = v17;
}

void google::protobuf::EnumValueDescriptor::GetLocationPath(uint64_t a1, char **a2)
{
  char *v4;
  char *v5;
  char *v6;
  char *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char *v12;
  char *v13;
  int v14;
  int v15;
  char *v16;
  char *v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char *v22;
  char *v23;
  char *v24;
  int v25;

  google::protobuf::EnumDescriptor::GetLocationPath(*(_QWORD *)(a1 + 24), a2);
  v4 = a2[2];
  v5 = a2[1];
  if (v5 >= v4)
  {
    v7 = *a2;
    v8 = (v5 - *a2) >> 2;
    v9 = v8 + 1;
    if ((unint64_t)(v8 + 1) >> 62)
      goto LABEL_34;
    v10 = v4 - v7;
    if (v10 >> 1 > v9)
      v9 = v10 >> 1;
    if ((unint64_t)v10 >= 0x7FFFFFFFFFFFFFFCLL)
      v11 = 0x3FFFFFFFFFFFFFFFLL;
    else
      v11 = v9;
    if (v11)
    {
      v12 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<unsigned int>>((uint64_t)(a2 + 2), v11);
      v7 = *a2;
      v5 = a2[1];
    }
    else
    {
      v12 = 0;
    }
    v13 = &v12[4 * v8];
    v4 = &v12[4 * v11];
    *(_DWORD *)v13 = 2;
    v6 = v13 + 4;
    while (v5 != v7)
    {
      v14 = *((_DWORD *)v5 - 1);
      v5 -= 4;
      *((_DWORD *)v13 - 1) = v14;
      v13 -= 4;
    }
    *a2 = v13;
    a2[1] = v6;
    a2[2] = v4;
    if (v7)
    {
      operator delete(v7);
      v4 = a2[2];
    }
  }
  else
  {
    *(_DWORD *)v5 = 2;
    v6 = v5 + 4;
  }
  a2[1] = v6;
  v15 = -858993459 * ((unint64_t)(a1 - *(_QWORD *)(*(_QWORD *)(a1 + 24) + 48)) >> 3);
  if (v6 < v4)
  {
    *(_DWORD *)v6 = v15;
    v16 = v6 + 4;
    goto LABEL_33;
  }
  v17 = *a2;
  v18 = (v6 - *a2) >> 2;
  v19 = v18 + 1;
  if ((unint64_t)(v18 + 1) >> 62)
LABEL_34:
    std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
  v20 = v4 - v17;
  if (v20 >> 1 > v19)
    v19 = v20 >> 1;
  if ((unint64_t)v20 >= 0x7FFFFFFFFFFFFFFCLL)
    v21 = 0x3FFFFFFFFFFFFFFFLL;
  else
    v21 = v19;
  if (v21)
  {
    v22 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<unsigned int>>((uint64_t)(a2 + 2), v21);
    v17 = *a2;
    v6 = a2[1];
  }
  else
  {
    v22 = 0;
  }
  v23 = &v22[4 * v18];
  v24 = &v22[4 * v21];
  *(_DWORD *)v23 = v15;
  v16 = v23 + 4;
  while (v6 != v17)
  {
    v25 = *((_DWORD *)v6 - 1);
    v6 -= 4;
    *((_DWORD *)v23 - 1) = v25;
    v23 -= 4;
  }
  *a2 = v23;
  a2[1] = v16;
  a2[2] = v24;
  if (v17)
    operator delete(v17);
LABEL_33:
  a2[1] = v16;
}

uint64_t google::protobuf::DescriptorBuilder::BuildFile(google::protobuf::DescriptorBuilder *this, const google::protobuf::FileDescriptorProto *a2)
{
  uint64_t v2;
  uint64_t *v4;
  uint64_t v5;
  const char *v6;
  _QWORD *v7;
  google::protobuf::internal::ArenaImpl *v8;
  char v9;
  std::string::size_type size;
  uint64_t v11;
  int v12;
  unsigned __int8 *v13;
  uint64_t v14;
  std::string *p_p;
  int v16;
  int v17;
  int v18;
  int v19;
  BOOL v21;
  BOOL v22;
  uint64_t *v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  unsigned __int8 *v31;
  uint64_t v32;
  uint64_t v33;
  unsigned __int8 *v34;
  __int128 *v35;
  const char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  int v42;
  const std::string::value_type *v43;
  std::string::size_type v44;
  unint64_t v45;
  int v46;
  const std::string::value_type *v47;
  std::string::size_type v48;
  uint64_t v49;
  unint64_t v50;
  const google::protobuf::FileDescriptorProto *v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  google::protobuf::DescriptorPool *v55;
  uint64_t v56;
  uint64_t FileByName;
  uint64_t *v59;
  uint64_t v60;
  void **v61;
  unint64_t v62;
  unint64_t v63;
  unint64_t v64;
  unint64_t v65;
  int v66;
  unint64_t v67;
  unint64_t v68;
  unint64_t v69;
  unint64_t v70;
  _DWORD *v71;
  _DWORD *v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  unint64_t v76;
  char *v77;
  char *v78;
  __int128 v79;
  google::protobuf::FileDescriptor *v80;
  google::protobuf::SourceCodeInfo *v82;
  _QWORD *v83;
  unint64_t v84;
  google::protobuf::SourceCodeInfo **v85;
  _QWORD *v86;
  const google::protobuf::FileDescriptorProto *v87;
  _QWORD *v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;
  unint64_t v92;
  uint64_t v93;
  google::protobuf::SourceCodeInfo **v94;
  void *v95;
  google::protobuf::SourceCodeInfo *v96;
  __int128 v97;
  void *v98;
  const google::protobuf::SourceCodeInfo *v99;
  _QWORD *v100;
  google::protobuf::FileDescriptorTables *v101;
  const char *v102;
  unint64_t v103;
  google::protobuf::FileDescriptorTables **v104;
  _QWORD *v105;
  const google::protobuf::FileDescriptorProto *v106;
  _QWORD *v107;
  uint64_t v108;
  unint64_t v109;
  uint64_t v110;
  unint64_t v111;
  uint64_t v112;
  google::protobuf::FileDescriptorTables **v113;
  void *v114;
  google::protobuf::FileDescriptorTables *v115;
  __int128 v116;
  void *v117;
  unint64_t v118;
  BOOL v119;
  int *v120;
  uint64_t v121;
  int v123;
  int v124;
  uint64_t v126;
  google::protobuf::DescriptorBuilder *v127;
  uint64_t v128;
  int v129;
  uint64_t *v130;
  const char *v131;
  uint64_t *v132;
  uint64_t v133;
  const char *v134;
  uint64_t v135;
  const char *v136;
  __int128 v137;
  unint64_t v138;
  char *v139;
  uint64_t v140;
  uint64_t *v141;
  unint64_t v142;
  uint8x8_t v143;
  unint64_t v144;
  _QWORD *v145;
  _QWORD *v146;
  unint64_t v147;
  const void *v148;
  _QWORD *v149;
  float v150;
  float v151;
  _BOOL8 v152;
  unint64_t v153;
  unint64_t v154;
  size_t v155;
  uint64_t v156;
  _QWORD *v157;
  uint64_t v158;
  const google::protobuf::FileDescriptorProto *v159;
  unint64_t v160;
  _QWORD *v161;
  unint64_t v162;
  _QWORD *v163;
  _QWORD *v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  unint64_t v169;
  char *v170;
  char *v171;
  char *v172;
  char *v173;
  char *v174;
  uint64_t v175;
  uint64_t v176;
  int v177;
  void *v178;
  uint64_t v179;
  int v180;
  uint64_t i;
  int v182;
  uint64_t *v183;
  uint64_t **v184;
  uint64_t **v185;
  int v186;
  _DWORD *v187;
  uint64_t j;
  const void **v189;
  const char *v190;
  char v191;
  uint64_t v192;
  std::string *v193;
  __int128 v194;
  uint64_t v195;
  _QWORD *v196;
  const char *v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  BOOL v201;
  uint64_t *v202;
  uint64_t *v203;
  uint64_t **v204;
  uint64_t *v205;
  uint64_t **v206;
  uint64_t v207;
  std::string *v208;
  std::string::size_type v209;
  char v210;
  uint64_t v211;
  int v212;
  int v213;
  unint64_t v214;
  int v215;
  const google::protobuf::FileDescriptor *v216;
  uint64_t v217;
  int v218;
  int v219;
  int v220;
  uint64_t v221;
  uint64_t v222;
  int v223;
  uint64_t v224;
  uint64_t v225;
  int v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  void **NameString;
  uint64_t *v231;
  const char *v232;
  int v233;
  const char *v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t *v239;
  _QWORD *String;
  uint64_t *v241;
  void **v242;
  uint64_t *v243;
  _QWORD *v244;
  char *v245;
  _DWORD *v246;
  char *v247;
  _DWORD *v248;
  uint64_t v249;
  unint64_t v250;
  uint64_t v251;
  unint64_t v252;
  char *v253;
  char *v254;
  int v255;
  int v256;
  char *v257;
  char *v258;
  uint64_t v259;
  unint64_t v260;
  uint64_t v261;
  unint64_t v262;
  char *v263;
  char *v264;
  int v265;
  _DWORD *v266;
  char *v267;
  uint64_t v268;
  unint64_t v269;
  uint64_t v270;
  unint64_t v271;
  char *v272;
  char *v273;
  int v274;
  uint64_t v275;
  _QWORD *v276;
  int *v277;
  unint64_t v278;
  int **v279;
  _QWORD *v280;
  _QWORD *v281;
  uint64_t v282;
  unint64_t v283;
  uint64_t v284;
  unint64_t v285;
  uint64_t v286;
  int **v287;
  void *v288;
  int *v289;
  __int128 v290;
  void *v291;
  google::protobuf::UnknownFieldSet *v292;
  const char *v293;
  uint64_t v294;
  uint64_t *v295;
  uint64_t v296;
  _QWORD *v297;
  uint64_t *v298;
  const google::protobuf::Descriptor **v299;
  size_t v300;
  std::string *v301;
  const std::string::value_type *v302;
  int v303;
  const std::string::value_type *v304;
  std::string::size_type v305;
  std::string *v306;
  __int128 v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  const google::protobuf::Descriptor *v312;
  uint64_t ExtensionByNumberNoLock;
  uint64_t v314;
  int **v315;
  uint64_t *v316;
  _QWORD *v317;
  char *v318;
  _DWORD *v319;
  uint64_t *v320;
  char *v321;
  uint64_t v322;
  unint64_t v323;
  uint64_t v324;
  unint64_t v325;
  char *v326;
  char *v327;
  int v328;
  uint64_t v329;
  _QWORD *v330;
  int *v331;
  unint64_t v332;
  int **v333;
  _QWORD *v334;
  _QWORD *v335;
  uint64_t v336;
  unint64_t v337;
  uint64_t v338;
  unint64_t v339;
  uint64_t v340;
  int **v341;
  void *v342;
  int *v343;
  __int128 v344;
  void *v345;
  google::protobuf::UnknownFieldSet *v346;
  const char *v347;
  uint64_t v348;
  uint64_t *v349;
  uint64_t v350;
  _QWORD *v351;
  uint64_t *v352;
  const google::protobuf::Descriptor **v353;
  size_t v354;
  std::string *v355;
  const void *v356;
  int v357;
  const std::string::value_type *v358;
  std::string::size_type v359;
  std::string *v360;
  __int128 v361;
  uint64_t v362;
  uint64_t v363;
  uint64_t v364;
  uint64_t v365;
  const google::protobuf::Descriptor *v366;
  uint64_t v367;
  int v368;
  uint64_t v369;
  uint64_t v370;
  _QWORD *v371;
  _DWORD *v372;
  const void **v373;
  size_t v374;
  size_t v375;
  size_t v376;
  void **v377;
  const void *v378;
  __int128 *v379;
  _QWORD *v380;
  int *v381;
  unint64_t v382;
  int **v383;
  _QWORD *v384;
  _QWORD *v385;
  uint64_t v386;
  unint64_t v387;
  uint64_t v388;
  char *v389;
  uint64_t v390;
  int **v391;
  char *v392;
  int *v393;
  __int128 v394;
  void *v395;
  google::protobuf::UnknownFieldSet *v396;
  const char *v397;
  uint64_t v398;
  uint64_t *v399;
  uint64_t v400;
  _QWORD *v401;
  uint64_t *v402;
  const google::protobuf::Descriptor **v403;
  size_t v404;
  std::string *v405;
  void **v406;
  int v407;
  const std::string::value_type *v408;
  std::string::size_type v409;
  std::string *v410;
  __int128 v411;
  uint64_t v412;
  uint64_t v413;
  uint64_t v414;
  uint64_t v415;
  const google::protobuf::Descriptor *v416;
  uint64_t v417;
  uint64_t v419;
  uint64_t v420;
  uint64_t v421;
  uint64_t v422;
  uint64_t v423;
  uint64_t v424;
  google::protobuf::internal::RepeatedPtrFieldBase *v425;
  uint64_t v426;
  uint64_t v427;
  uint64_t v428;
  _QWORD *v429;
  uint64_t v430;
  uint64_t v432;
  int *v433;
  int v434;
  uint64_t v435;
  uint64_t v436;
  uint64_t *v437;
  uint64_t v438;
  uint64_t v439;
  uint64_t v440;
  int v442;
  const google::protobuf::Descriptor *v443;
  const char *v444;
  uint64_t v445;
  uint64_t v446;
  std::string *v447;
  __int128 v448;
  int v449;
  const google::protobuf::Descriptor *v450;
  const char *v451;
  uint64_t v452;
  uint64_t v453;
  std::string *v454;
  __int128 v455;
  int v456;
  uint64_t v457;
  _QWORD *v458;
  google::protobuf::Message *v459;
  const google::protobuf::Message *v460;
  uint64_t v461;
  const char *v462;
  uint64_t FieldByName;
  const google::protobuf::FieldDescriptor *v464;
  google::protobuf::Reflection *v465;
  uint64_t v466;
  const char *v467;
  const void *v468;
  uint64_t v469;
  int v470;
  char *v471;
  _DWORD *v472;
  char *v473;
  uint64_t v474;
  unint64_t v475;
  uint64_t v476;
  unint64_t v477;
  char *v478;
  char *v479;
  int v480;
  uint64_t v481;
  const char *v482;
  uint64_t v483;
  const google::protobuf::FieldDescriptor *v484;
  google::protobuf::_anonymous_namespace_ **v485;
  uint64_t v486;
  const char *v487;
  int v488;
  int v489;
  int *v490;
  _DWORD *v491;
  int *v492;
  uint64_t v493;
  unint64_t v494;
  uint64_t v495;
  unint64_t v496;
  char *v497;
  int *v498;
  int v499;
  google::protobuf::_anonymous_namespace_ **v500;
  const char *v501;
  google::protobuf::Message *v502;
  unsigned int *v503;
  uint64_t v504;
  std::string *v505;
  __int128 v506;
  std::string *v507;
  __int128 v508;
  void **v509;
  std::string::size_type v510;
  std::string *v511;
  __int128 v512;
  unsigned int *v513;
  _QWORD *v514;
  google::protobuf::SourceCodeInfo *v515;
  google::protobuf::SourceCodeInfo *v516;
  char v517;
  char v518;
  uint64_t v519;
  const google::protobuf::SourceCodeInfo_Location **v520;
  int *v521;
  unint64_t v522;
  google::protobuf::SourceCodeInfo_Location *v523;
  uint64_t v524;
  int v525;
  int *v526;
  uint64_t v527;
  unint64_t v528;
  uint64_t v529;
  unint64_t v530;
  char *v531;
  char *v532;
  int *v533;
  int v534;
  int *v535;
  _QWORD *v536;
  _QWORD *v537;
  int *v538;
  int *v539;
  int v540;
  int v541;
  uint64_t v543;
  uint64_t v544;
  uint64_t v545;
  int v546;
  int v547;
  BOOL v548;
  int *v549;
  int v550;
  int v551;
  google::protobuf::SourceCodeInfo_Location *v552;
  int *v553;
  int v554;
  int v555;
  google::protobuf::SourceCodeInfo_Location *v556;
  int *v557;
  int *v558;
  int v559;
  int v560;
  int v561;
  BOOL v562;
  int v563;
  uint64_t v564;
  int v565;
  uint64_t v566;
  const google::protobuf::SourceCodeInfo_Location **v567;
  const google::protobuf::SourceCodeInfo_Location *v568;
  int *v569;
  int v570;
  int v571;
  google::protobuf::SourceCodeInfo_Location *v572;
  int v573;
  uint64_t v574;
  int v575;
  uint64_t v576;
  const google::protobuf::SourceCodeInfo_Location *v577;
  int *v578;
  int *v579;
  unsigned int v580;
  int v581;
  uint64_t v582;
  uint64_t v583;
  uint64_t v584;
  char v585;
  google::protobuf::SourceCodeInfo *v586;
  uint64_t v587;
  google::protobuf::SourceCodeInfo_Location **v588;
  unsigned int v589;
  std::string::size_type v590;
  unsigned int *v591;
  signed int v592;
  signed int *v593;
  uint64_t v594;
  uint64_t v595;
  uint64_t v596;
  uint64_t v597;
  uint64_t v598;
  uint64_t v599;
  unint64_t v600;
  uint64_t v601;
  __int128 v602;
  unint64_t v603;
  char *v604;
  uint64_t v605;
  int8x8_t v606;
  uint8x8_t v607;
  unint64_t v608;
  unint64_t v609;
  uint64_t v610;
  _QWORD **v611;
  _QWORD *v612;
  unint64_t v613;
  const void *v614;
  _QWORD *v615;
  _QWORD *v616;
  _QWORD *v617;
  unint64_t v618;
  unint64_t v619;
  unint64_t v620;
  unint64_t v621;
  uint64_t v622;
  __int128 v623;
  unint64_t v624;
  char *v625;
  uint64_t v626;
  int8x8_t v627;
  uint8x8_t v628;
  unint64_t v629;
  unint64_t v630;
  uint64_t v631;
  _QWORD **v632;
  _QWORD *v633;
  unint64_t v634;
  const void *v635;
  _QWORD *v636;
  _QWORD *v637;
  _QWORD *v638;
  unint64_t v639;
  unint64_t v640;
  unint64_t v641;
  unint64_t v642;
  uint64_t v643;
  uint64_t v644;
  uint64_t **v645;
  uint64_t *v646;
  unint64_t *v647;
  unint64_t v648;
  int v649;
  uint64_t *v650;
  uint64_t *v651;
  unint64_t v652;
  unint64_t v653;
  uint64_t *v654;
  uint64_t *v655;
  uint64_t *v656;
  google::protobuf::internal::RepeatedPtrFieldBase *v657;
  unint64_t v658;
  uint64_t v659;
  uint64_t v660;
  unint64_t v661;
  uint64_t v662;
  unint64_t v663;
  unint64_t v664;
  unint64_t v665;
  char *v666;
  uint64_t v667;
  char *v668;
  char *v669;
  char *v670;
  char *v671;
  char *v672;
  char *v673;
  uint64_t v674;
  _BOOL4 v675;
  uint64_t v676;
  uint64_t v677;
  uint64_t v678;
  unint64_t v679;
  unint64_t v680;
  unint64_t v681;
  uint64_t v682;
  uint64_t v683;
  unint64_t v684;
  char *v685;
  char *v686;
  uint64_t v687;
  unint64_t v688;
  uint64_t v689;
  _QWORD *v690;
  unint64_t v691;
  unint64_t v692;
  uint64_t v693;
  uint64_t v694;
  unint64_t v695;
  char *v696;
  _QWORD *v697;
  _QWORD *v698;
  char *v699;
  uint64_t v700;
  char *v701;
  char *v702;
  uint64_t v703;
  _QWORD *v704;
  uint64_t v705;
  uint64_t v706;
  __int128 v707;
  void *v708;
  unint64_t v709;
  uint64_t v710;
  uint64_t v711;
  unint64_t v712;
  unint64_t v713;
  uint64_t v714;
  uint64_t v715;
  unint64_t v716;
  char *v717;
  _QWORD *v718;
  _QWORD *v719;
  char *v720;
  uint64_t v721;
  char *v722;
  char *v723;
  uint64_t v724;
  __int128 v725;
  void *v726;
  unint64_t v727;
  uint64_t v728;
  google::protobuf::FileDescriptorTables **v729;
  unint64_t v730;
  unint64_t v731;
  uint64_t v732;
  uint64_t v733;
  unint64_t v734;
  char *v735;
  _QWORD *v736;
  _QWORD *v737;
  char *v738;
  uint64_t v739;
  char *v740;
  char *v741;
  uint64_t v742;
  google::protobuf::FileDescriptorTables **v743;
  __int128 v744;
  void *v745;
  uint64_t v746;
  uint64_t v747;
  unint64_t v748;
  unint64_t v749;
  unint64_t v750;
  uint64_t v751;
  unint64_t v752;
  unint64_t v753;
  char *v754;
  char *v755;
  uint64_t v756;
  size_t v757;
  uint64_t v758;
  uint64_t v759;
  void *v760;
  void *v761;
  uint64_t *v763;
  std::string *v764;
  __int128 v765;
  uint64_t v766;
  uint64_t *v767;
  uint64_t *v768;
  uint64_t *v769;
  google::protobuf::SourceCodeInfo *v770;
  void **v771;
  uint64_t v772;
  uint64_t v773;
  google::protobuf::FileDescriptor *Bytes;
  uint64_t **v776;
  uint64_t v777;
  unint64_t v778;
  unint64_t v779;
  uint64_t v780;
  google::protobuf::internal::RepeatedPtrFieldBase *v781;
  google::protobuf::internal::RepeatedPtrFieldBase *v782;
  google::protobuf::internal::RepeatedPtrFieldBase *v783;
  google::protobuf::internal::RepeatedPtrFieldBase *v784;
  google::protobuf::internal::RepeatedPtrFieldBase *v785;
  google::protobuf::DescriptorBuilder *v786;
  uint64_t v787;
  uint64_t v788;
  uint64_t v789[2];
  __int128 v790;
  __int128 v791;
  uint64_t v792[2];
  uint64_t v793[2];
  __int128 v794;
  uint64_t **v795;
  uint64_t *v796;
  uint64_t v797;
  char **v798;
  char *v799[2];
  _QWORD v800[2];
  uint64_t v801[2];
  void *v802[2];
  unsigned __int8 v803;
  std::string v804;
  std::string v805;
  std::string __p;
  std::string v807;
  std::string v808;
  void *v809[2];
  int64_t v810;
  std::string v811;
  void *v812;
  _QWORD *v813;
  uint64_t v814;
  void *v815;
  _QWORD v816[4];
  char v817;
  uint64_t v818;
  uint64_t v819;
  __int128 v820;
  __int128 v821;
  __int128 v822;
  uint64_t v823;
  uint64_t v824[4];
  __int128 v825;
  _QWORD v826[4];

  v826[1] = *MEMORY[0x1E0C80C00];
  v4 = (uint64_t *)((char *)this + 56);
  std::string::operator=((std::string *)((char *)this + 56), (const std::string *)(*((_QWORD *)a2 + 22) & 0xFFFFFFFFFFFFFFFELL));
  v786 = this;
  v5 = *((_QWORD *)this + 1);
  google::protobuf::StringPiece::StringPiece<std::allocator<char>>(&v791, v4, v6);
  *(_OWORD *)&v811.__r_.__value_.__l.__data_ = v791;
  v7 = std::__hash_table<std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>,std::__unordered_map_hasher<google::protobuf::StringPiece,std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>,google::protobuf::hash<google::protobuf::StringPiece>,std::equal_to<google::protobuf::StringPiece>,true>,std::__unordered_map_equal<google::protobuf::StringPiece,std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>,std::equal_to<google::protobuf::StringPiece>,google::protobuf::hash<google::protobuf::StringPiece>,true>,std::allocator<std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>>>::find<google::protobuf::StringPiece>((_QWORD *)(v5 + 344), &v811.__r_.__value_.__l.__data_);
  if (!v7)
    goto LABEL_34;
  v2 = v7[4];
  if (!v2)
    goto LABEL_34;
  google::protobuf::FileDescriptorProto::FileDescriptorProto((google::protobuf::FileDescriptorProto *)&v811, 0);
  google::protobuf::FileDescriptor::CopyTo((__int128 **)v2, (google::protobuf::FileDescriptorProto *)&v811);
  if (*(_DWORD *)(v2 + 60) == 2 && (*((_BYTE *)a2 + 16) & 4) != 0)
  {
    LODWORD(v811.__r_.__value_.__r.__words[2]) |= 4u;
    std::string::basic_string[abi:ne180100]<0>(&__p, "proto2");
    v8 = (google::protobuf::internal::ArenaImpl *)(v811.__r_.__value_.__l.__size_ & 0xFFFFFFFFFFFFFFFELL);
    if ((v811.__r_.__value_.__s.__data_[8] & 1) != 0)
      v8 = *(google::protobuf::internal::ArenaImpl **)v8;
    google::protobuf::internal::ArenaStringPtr::Set(v824, (uint64_t)&google::protobuf::internal::fixed_address_empty_string, (__int128 *)&__p, v8);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
  google::protobuf::MessageLite::SerializeAsString((google::protobuf::MessageLite *)&v811, (uint64_t)&__p);
  google::protobuf::MessageLite::SerializeAsString(a2, (uint64_t)&v825);
  v9 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  else
    size = __p.__r_.__value_.__l.__size_;
  v11 = HIBYTE(v826[0]);
  v12 = SHIBYTE(v826[0]);
  if (v826[0] < 0)
    v11 = *((_QWORD *)&v825 + 1);
  if (size != v11)
  {
    v22 = 0;
    if ((SHIBYTE(v826[0]) & 0x80000000) == 0)
      goto LABEL_32;
    goto LABEL_28;
  }
  if (v826[0] >= 0)
    v13 = (unsigned __int8 *)&v825;
  else
    v13 = (unsigned __int8 *)v825;
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
  {
    v22 = memcmp(__p.__r_.__value_.__l.__data_, v13, __p.__r_.__value_.__l.__size_) == 0;
    goto LABEL_31;
  }
  if (*((_BYTE *)&__p.__r_.__value_.__s + 23))
  {
    v14 = HIBYTE(__p.__r_.__value_.__r.__words[2]) - 1;
    p_p = &__p;
    do
    {
      v17 = p_p->__r_.__value_.__s.__data_[0];
      p_p = (std::string *)((char *)p_p + 1);
      v16 = v17;
      v19 = *v13++;
      v18 = v19;
      v21 = v14-- != 0;
      v22 = v16 == v18;
    }
    while (v16 == v18 && v21);
LABEL_31:
    if ((v12 & 0x80000000) == 0)
      goto LABEL_32;
LABEL_28:
    operator delete((void *)v825);
    if ((*((_BYTE *)&__p.__r_.__value_.__s + 23) & 0x80) == 0)
      goto LABEL_33;
    goto LABEL_29;
  }
  v22 = 1;
  if (SHIBYTE(v826[0]) < 0)
    goto LABEL_28;
LABEL_32:
  if (v9 < 0)
LABEL_29:
    operator delete(__p.__r_.__value_.__l.__data_);
LABEL_33:
  google::protobuf::FileDescriptorProto::~FileDescriptorProto((google::protobuf::FileDescriptorProto *)&v811);
  if (v22)
    return v2;
LABEL_34:
  v23 = (uint64_t *)*((_QWORD *)v786 + 1);
  v24 = *v23;
  v25 = v23[1];
  if (v25 != *v23)
  {
    v26 = 0;
    v27 = *((_QWORD *)a2 + 22) & 0xFFFFFFFFFFFFFFFELL;
    v28 = *(char *)(v27 + 23);
    if (v28 >= 0)
      v29 = *(unsigned __int8 *)(v27 + 23);
    else
      v29 = *(_QWORD *)(v27 + 8);
    if ((unint64_t)((uint64_t)(v25 - *v23) / 24) <= 1)
      v30 = 1;
    else
      v30 = (uint64_t)(v25 - *v23) / 24;
    v2 = 24;
    do
    {
      v31 = (unsigned __int8 *)(v24 + 24 * v26);
      v32 = v31[23];
      if ((v32 & 0x80u) == 0)
        v33 = v31[23];
      else
        v33 = *((_QWORD *)v31 + 1);
      if (v33 == v29)
      {
        if (v28 >= 0)
          v34 = (unsigned __int8 *)v27;
        else
          v34 = *(unsigned __int8 **)v27;
        if ((v32 & 0x80) != 0)
        {
          if (!memcmp(*(const void **)v31, v34, *((_QWORD *)v31 + 1)))
          {
LABEL_60:
            std::string::basic_string[abi:ne180100]<0>(&v811, "File recursively imports itself: ");
            v38 = **((_QWORD **)v786 + 1);
            if (0xAAAAAAAAAAAAAAABLL * ((*(_QWORD *)(*((_QWORD *)v786 + 1) + 8) - v38) >> 3) > (int)v26)
            {
              v39 = 24 * (int)v26;
              v40 = (int)v26;
              do
              {
                v41 = v38 + v39;
                v42 = *(char *)(v41 + 23);
                if (v42 >= 0)
                  v43 = (const std::string::value_type *)v41;
                else
                  v43 = *(const std::string::value_type **)v41;
                if (v42 >= 0)
                  v44 = *(unsigned __int8 *)(v41 + 23);
                else
                  v44 = *(_QWORD *)(v41 + 8);
                std::string::append(&v811, v43, v44);
                std::string::append(&v811, " -> ");
                ++v40;
                v38 = **((_QWORD **)v786 + 1);
                v39 += 24;
              }
              while (0xAAAAAAAAAAAAAAABLL * ((*(_QWORD *)(*((_QWORD *)v786 + 1) + 8) - v38) >> 3) > v40);
            }
            v45 = *((_QWORD *)a2 + 22) & 0xFFFFFFFFFFFFFFFELL;
            v46 = *(char *)(v45 + 23);
            if (v46 >= 0)
              v47 = (const std::string::value_type *)(*((_QWORD *)a2 + 22) & 0xFFFFFFFFFFFFFFFELL);
            else
              v47 = *(const std::string::value_type **)v45;
            if (v46 >= 0)
              v48 = *(unsigned __int8 *)(v45 + 23);
            else
              v48 = *(_QWORD *)(v45 + 8);
            std::string::append(&v811, v47, v48);
            v49 = **((_QWORD **)v786 + 1);
            if (0xAAAAAAAAAAAAAAABLL * ((*(_QWORD *)(*((_QWORD *)v786 + 1) + 8) - v49) >> 3) - 1 <= (int)v26)
              v50 = *((_QWORD *)a2 + 22) & 0xFFFFFFFFFFFFFFFELL;
            else
              v50 = v49 + 24 * (int)((unint64_t)((v26 << 32) + 0x100000000) >> 32);
            google::protobuf::DescriptorBuilder::AddError((uint64_t)v786, v50, (uint64_t)a2, 9, (uint64_t)&v811);
            if (SHIBYTE(v811.__r_.__value_.__r.__words[2]) < 0)
              operator delete(v811.__r_.__value_.__l.__data_);
            return 0;
          }
        }
        else
        {
          if (!v31[23])
            goto LABEL_60;
          while (*v31 == *v34)
          {
            ++v31;
            ++v34;
            if (!--v32)
              goto LABEL_60;
          }
        }
      }
      ++v26;
    }
    while (v26 != v30);
  }
  if (!*(_BYTE *)(*(_QWORD *)v786 + 41) && *(_QWORD *)(*(_QWORD *)v786 + 8))
  {
    v35 = (__int128 *)(*((_QWORD *)a2 + 22) & 0xFFFFFFFFFFFFFFFELL);
    if (v25 >= v23[2])
    {
      v37 = std::vector<std::string>::__push_back_slow_path<std::string const&>(v23, v35);
    }
    else
    {
      std::vector<std::string>::__construct_one_at_end[abi:ne180100]<std::string const&>((uint64_t)v23, v35);
      v37 = v25 + 24;
    }
    v23[1] = v37;
    v51 = a2;
    if (*((int *)a2 + 8) >= 1)
    {
      v52 = 1;
      do
      {
        v53 = *((_QWORD *)v786 + 1);
        google::protobuf::StringPiece::StringPiece<std::allocator<char>>(&v790, *(uint64_t **)(*((_QWORD *)v51 + 5) + 8 * v52), v36);
        *(_OWORD *)&v811.__r_.__value_.__l.__data_ = v790;
        v54 = std::__hash_table<std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>,std::__unordered_map_hasher<google::protobuf::StringPiece,std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>,google::protobuf::hash<google::protobuf::StringPiece>,std::equal_to<google::protobuf::StringPiece>,true>,std::__unordered_map_equal<google::protobuf::StringPiece,std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>,std::equal_to<google::protobuf::StringPiece>,google::protobuf::hash<google::protobuf::StringPiece>,true>,std::allocator<std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>>>::find<google::protobuf::StringPiece>((_QWORD *)(v53 + 344), &v811.__r_.__value_.__l.__data_);
        if (v54)
        {
          v51 = a2;
          if (v54[4])
            continue;
        }
        else
        {
          v51 = a2;
        }
        v55 = *(google::protobuf::DescriptorPool **)v786;
        v56 = *(_QWORD *)(*(_QWORD *)v786 + 24);
        if (!v56)
          goto LABEL_93;
        FileByName = google::protobuf::DescriptorPool::FindFileByName(v56, *(uint64_t **)(*((_QWORD *)v51 + 5) + 8 * v52), v36);
        v51 = a2;
        if (!FileByName)
        {
          v55 = *(google::protobuf::DescriptorPool **)v786;
LABEL_93:
          google::protobuf::StringPiece::StringPiece<std::allocator<char>>(v789, *(uint64_t **)(*((_QWORD *)v51 + 5) + 8 * v52), v36);
          google::protobuf::DescriptorPool::TryFindFileInFallbackDatabase(v55, v789[0], v789[1]);
          v51 = a2;
        }
      }
      while (v52++ < *((int *)v51 + 8));
    }
    v59 = (uint64_t *)*((_QWORD *)v786 + 1);
    v60 = v59[1];
    v61 = (void **)(v60 - 24);
    v23 = v59;
    if (*(char *)(v60 - 1) < 0)
    {
      operator delete(*v61);
      v23 = (uint64_t *)*((_QWORD *)v786 + 1);
    }
    v59[1] = (uint64_t)v61;
  }
  v62 = (unint64_t)(v23[27] - v23[26]) >> 3;
  v63 = (unint64_t)(v23[30] - v23[29]) >> 3;
  v64 = (unint64_t)(v23[33] - v23[32]) >> 3;
  v65 = (unint64_t)(v23[36] - v23[35]) >> 3;
  v66 = -1431655765 * ((unint64_t)(v23[24] - v23[23]) >> 3);
  v67 = (unint64_t)(v23[55] - v23[54]) >> 3;
  v68 = (unint64_t)(v23[58] - v23[57]) >> 3;
  v69 = (unint64_t)(v23[61] - v23[60]) >> 4;
  v71 = (_DWORD *)v23[52];
  v70 = v23[53];
  if ((unint64_t)v71 >= v70)
  {
    v2 = v23[51];
    v73 = ((uint64_t)v71 - v2) >> 5;
    v74 = v73 + 1;
    if ((unint64_t)(v73 + 1) >> 59)
      std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
    v75 = v70 - v2;
    if (v75 >> 4 > v74)
      v74 = v75 >> 4;
    if ((unint64_t)v75 >= 0x7FFFFFFFFFFFFFE0)
      v76 = 0x7FFFFFFFFFFFFFFLL;
    else
      v76 = v74;
    if (v76)
    {
      v778 = (unint64_t)(v23[33] - v23[32]) >> 3;
      v779 = (unint64_t)(v23[30] - v23[29]) >> 3;
      v781 = (google::protobuf::internal::RepeatedPtrFieldBase *)((unint64_t)(v23[27] - v23[26]) >> 3);
      if (v76 >> 59)
        std::__throw_bad_array_new_length[abi:ne180100]();
      v77 = (char *)operator new(32 * v76);
      LODWORD(v63) = v779;
      LODWORD(v62) = (_DWORD)v781;
      LODWORD(v64) = v778;
    }
    else
    {
      v77 = 0;
    }
    v78 = &v77[32 * v73];
    *(_DWORD *)v78 = v62;
    *((_DWORD *)v78 + 1) = v63;
    *((_DWORD *)v78 + 2) = v64;
    *((_DWORD *)v78 + 3) = v65;
    *((_DWORD *)v78 + 4) = v66;
    *((_DWORD *)v78 + 5) = v67;
    v72 = v78 + 32;
    *((_DWORD *)v78 + 6) = v68;
    *((_DWORD *)v78 + 7) = v69;
    if (v71 != (_DWORD *)v2)
    {
      do
      {
        v79 = *((_OWORD *)v71 - 1);
        *((_OWORD *)v78 - 2) = *((_OWORD *)v71 - 2);
        *((_OWORD *)v78 - 1) = v79;
        v78 -= 32;
        v71 -= 8;
      }
      while (v71 != (_DWORD *)v2);
      v71 = (_DWORD *)v23[51];
    }
    v23[51] = (uint64_t)v78;
    v23[52] = (uint64_t)v72;
    v23[53] = (uint64_t)&v77[32 * v76];
    if (v71)
      operator delete(v71);
  }
  else
  {
    *v71 = v62;
    v71[1] = v63;
    v71[2] = v64;
    v71[3] = v65;
    v71[4] = v66;
    v71[5] = v67;
    v72 = v71 + 8;
    v71[6] = v68;
    v71[7] = v69;
  }
  v23[52] = (uint64_t)v72;
  Bytes = (google::protobuf::FileDescriptor *)google::protobuf::DescriptorPool::Tables::AllocateBytes(*((google::protobuf::DescriptorPool::Tables **)v786 + 1), 160);
  v80 = Bytes;
  *((_QWORD *)v786 + 10) = Bytes;
  *((_WORD *)Bytes + 32) = 0;
  if ((*((_BYTE *)a2 + 16) & 0x10) != 0)
  {
    v83 = (_QWORD *)*((_QWORD *)v786 + 1);
    v82 = (google::protobuf::SourceCodeInfo *)operator new();
    google::protobuf::SourceCodeInfo::SourceCodeInfo(v82, 0);
    v84 = v83[31];
    v85 = (google::protobuf::SourceCodeInfo **)v83[30];
    if ((unint64_t)v85 >= v84)
    {
      v88 = (_QWORD *)v83[29];
      v89 = v85 - (google::protobuf::SourceCodeInfo **)v88;
      v90 = v89 + 1;
      if ((unint64_t)(v89 + 1) >> 61)
        std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
      v91 = v84 - (_QWORD)v88;
      if (v91 >> 2 > v90)
        v90 = v91 >> 2;
      if ((unint64_t)v91 >= 0x7FFFFFFFFFFFFFF8)
        v92 = 0x1FFFFFFFFFFFFFFFLL;
      else
        v92 = v90;
      v813 = v83 + 31;
      if (v92)
      {
        v92 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<std::unique_ptr<google::protobuf::Message>>>(v92);
        v88 = (_QWORD *)v83[29];
        v85 = (google::protobuf::SourceCodeInfo **)v83[30];
      }
      else
      {
        v93 = 0;
      }
      v94 = (google::protobuf::SourceCodeInfo **)(v92 + 8 * v89);
      v95 = (void *)(v92 + 8 * v93);
      v812 = v95;
      *v94 = v82;
      v811.__r_.__value_.__r.__words[2] = (std::string::size_type)(v94 + 1);
      if (v85 == v88)
      {
        v86 = v94 + 1;
      }
      else
      {
        do
        {
          v96 = *--v85;
          *v85 = 0;
          *--v94 = v96;
        }
        while (v85 != v88);
        v86 = (_QWORD *)v811.__r_.__value_.__r.__words[2];
        v95 = v812;
      }
      v87 = a2;
      v97 = *(_OWORD *)(v83 + 29);
      v83[29] = v94;
      v83[30] = v86;
      *(_OWORD *)&v811.__r_.__value_.__r.__words[1] = v97;
      v98 = (void *)v83[31];
      v83[31] = v95;
      v812 = v98;
      v811.__r_.__value_.__r.__words[0] = v97;
      std::__split_buffer<std::unique_ptr<google::protobuf::Message>>::~__split_buffer((uint64_t)&v811);
    }
    else
    {
      *v85 = v82;
      v86 = v85 + 1;
      v87 = a2;
    }
    v83[30] = v86;
    if (*((_QWORD *)v87 + 26))
      v99 = (const google::protobuf::SourceCodeInfo *)*((_QWORD *)v87 + 26);
    else
      v99 = (const google::protobuf::SourceCodeInfo *)&google::protobuf::_SourceCodeInfo_default_instance_;
    if (v99 != v82)
    {
      google::protobuf::SourceCodeInfo::Clear(v82);
      google::protobuf::SourceCodeInfo::MergeFrom(v82, v99);
    }
    v770 = v82;
  }
  else
  {
    if (!atomic_load(scc_info_SourceCodeInfo_google_2fprotobuf_2fdescriptor_2eproto))
    {
      v770 = 0;
      v82 = (google::protobuf::SourceCodeInfo *)&google::protobuf::_SourceCodeInfo_default_instance_;
      goto LABEL_141;
    }
    google::protobuf::internal::InitSCCImpl(scc_info_SourceCodeInfo_google_2fprotobuf_2fdescriptor_2eproto);
    v770 = 0;
    v82 = (google::protobuf::SourceCodeInfo *)&google::protobuf::_SourceCodeInfo_default_instance_;
  }
  v80 = Bytes;
LABEL_141:
  *((_QWORD *)v80 + 19) = v82;
  v100 = (_QWORD *)*((_QWORD *)v786 + 1);
  v101 = (google::protobuf::FileDescriptorTables *)operator new();
  google::protobuf::FileDescriptorTables::FileDescriptorTables(v101);
  v104 = (google::protobuf::FileDescriptorTables **)v100[36];
  v103 = v100[37];
  if ((unint64_t)v104 >= v103)
  {
    v107 = (_QWORD *)v100[35];
    v108 = v104 - (google::protobuf::FileDescriptorTables **)v107;
    v109 = v108 + 1;
    if ((unint64_t)(v108 + 1) >> 61)
      std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
    v110 = v103 - (_QWORD)v107;
    if (v110 >> 2 > v109)
      v109 = v110 >> 2;
    if ((unint64_t)v110 >= 0x7FFFFFFFFFFFFFF8)
      v111 = 0x1FFFFFFFFFFFFFFFLL;
    else
      v111 = v109;
    v813 = v100 + 37;
    if (v111)
    {
      v111 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<std::unique_ptr<google::protobuf::Message>>>(v111);
      v107 = (_QWORD *)v100[35];
      v104 = (google::protobuf::FileDescriptorTables **)v100[36];
    }
    else
    {
      v112 = 0;
    }
    v113 = (google::protobuf::FileDescriptorTables **)(v111 + 8 * v108);
    v114 = (void *)(v111 + 8 * v112);
    v812 = v114;
    *v113 = v101;
    v811.__r_.__value_.__r.__words[2] = (std::string::size_type)(v113 + 1);
    if (v104 == v107)
    {
      v105 = v113 + 1;
    }
    else
    {
      do
      {
        v115 = *--v104;
        *v104 = 0;
        *--v113 = v115;
      }
      while (v104 != v107);
      v105 = (_QWORD *)v811.__r_.__value_.__r.__words[2];
      v114 = v812;
    }
    v106 = a2;
    v116 = *(_OWORD *)(v100 + 35);
    v100[35] = v113;
    v100[36] = v105;
    *(_OWORD *)&v811.__r_.__value_.__r.__words[1] = v116;
    v117 = (void *)v100[37];
    v100[37] = v114;
    v812 = v117;
    v811.__r_.__value_.__r.__words[0] = v116;
    std::__split_buffer<std::unique_ptr<google::protobuf::FileDescriptorTables>>::~__split_buffer((uint64_t)&v811);
  }
  else
  {
    *v104 = v101;
    v105 = v104 + 1;
    v106 = a2;
  }
  v100[36] = v105;
  *((_QWORD *)v786 + 11) = v101;
  *(_QWORD *)(*((_QWORD *)v786 + 10) + 144) = v101;
  if ((*((_BYTE *)v106 + 16) & 1) == 0)
  {
    std::string::basic_string[abi:ne180100]<0>(&v811, "");
    v106 = a2;
    google::protobuf::DescriptorBuilder::AddError((uint64_t)v786, (uint64_t)&v811, (uint64_t)a2, 10, "Missing field: FileDescriptorProto.name.");
    if (SHIBYTE(v811.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v811.__r_.__value_.__l.__data_);
  }
  v118 = *((_QWORD *)v106 + 24) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v118 + 23) < 0)
  {
    v121 = *(_QWORD *)(v118 + 8);
    if (!v121)
      goto LABEL_182;
    if (v121 == 6)
    {
      v120 = *(int **)v118;
      if (**(_DWORD **)v118 != 1953460848 || *(_WORD *)(*(_QWORD *)v118 + 4) != 12911)
        goto LABEL_175;
      goto LABEL_182;
    }
  }
  else
  {
    if (!*(_BYTE *)(v118 + 23))
      goto LABEL_182;
    if (*(_BYTE *)(v118 + 23) == 6)
    {
      v119 = *(_DWORD *)v118 == 1953460848 && *(_WORD *)(v118 + 4) == 12911;
      v120 = (int *)(*((_QWORD *)v106 + 24) & 0xFFFFFFFFFFFFFFFELL);
      if (!v119)
      {
LABEL_175:
        v123 = *v120;
        v124 = *((unsigned __int16 *)v120 + 2);
        if (v123 != 1953460848 || v124 != 13167)
          goto LABEL_179;
        v127 = v786;
        v128 = *((_QWORD *)v786 + 10);
        v129 = 3;
LABEL_183:
        *(_DWORD *)(v128 + 60) = v129;
        goto LABEL_184;
      }
LABEL_182:
      v127 = v786;
      v128 = *((_QWORD *)v786 + 10);
      v129 = 2;
      goto LABEL_183;
    }
  }
LABEL_179:
  *(_DWORD *)(*((_QWORD *)v786 + 10) + 60) = 0;
  v126 = *((_QWORD *)v106 + 22);
  std::operator+<char>();
  v106 = a2;
  google::protobuf::DescriptorBuilder::AddError((uint64_t)v786, v126 & 0xFFFFFFFFFFFFFFFELL, (uint64_t)a2, 10, (uint64_t)&v811);
  if (SHIBYTE(v811.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v811.__r_.__value_.__l.__data_);
  v127 = v786;
LABEL_184:
  v130 = (uint64_t *)*((_QWORD *)v127 + 1);
  google::protobuf::StringPiece::StringPiece<std::allocator<char>>(v801, (uint64_t *)(*((_QWORD *)v106 + 22) & 0xFFFFFFFFFFFFFFFELL), v102);
  *(_QWORD *)Bytes = google::protobuf::DescriptorPool::Tables::AllocateString(v130, v801[0], v801[1]);
  v132 = (uint64_t *)*((_QWORD *)v127 + 1);
  if ((*((_BYTE *)a2 + 16) & 2) != 0)
  {
    google::protobuf::StringPiece::StringPiece<std::allocator<char>>(v800, (uint64_t *)(*((_QWORD *)a2 + 23) & 0xFFFFFFFFFFFFFFFELL), v131);
    v134 = (const char *)v800[0];
    v133 = v800[1];
  }
  else
  {
    v133 = 0;
    v134 = "";
  }
  *((_QWORD *)Bytes + 1) = google::protobuf::DescriptorPool::Tables::AllocateString(v132, (uint64_t)v134, v133);
  *((_QWORD *)Bytes + 2) = *(_QWORD *)v786;
  v135 = *((_QWORD *)v786 + 1);
  v136 = *(const char **)Bytes;
  if (*(char *)(*(_QWORD *)Bytes + 23) < 0)
    v136 = *(const char **)v136;
  google::protobuf::StringPiece::StringPiece((google::protobuf::StringPiece *)&v811, v136);
  v137 = *(_OWORD *)&v811.__r_.__value_.__l.__data_;
  if ((uint64_t)v811.__r_.__value_.__l.__size_ < 1)
  {
    v138 = 0;
  }
  else
  {
    v138 = 0;
    v139 = (char *)v811.__r_.__value_.__r.__words[0];
    do
    {
      v140 = *v139++;
      v138 = 5 * v138 + v140;
    }
    while ((unint64_t)v139 < v811.__r_.__value_.__r.__words[0] + v811.__r_.__value_.__l.__size_);
  }
  v141 = (uint64_t *)(v135 + 344);
  v142 = *(_QWORD *)(v135 + 352);
  if (!v142)
    goto LABEL_214;
  v143 = (uint8x8_t)vcnt_s8((int8x8_t)v142);
  v143.i16[0] = vaddlv_u8(v143);
  v144 = v143.u32[0];
  if (v143.u32[0] > 1uLL)
  {
    v2 = v138;
    if (v138 >= v142)
      v2 = v138 % v142;
  }
  else
  {
    v2 = (v142 - 1) & v138;
  }
  v145 = *(_QWORD **)(*v141 + 8 * v2);
  if (!v145 || (v146 = (_QWORD *)*v145) == 0)
  {
LABEL_214:
    v149 = operator new(0x28uLL);
    *v149 = 0;
    v149[1] = v138;
    *((_OWORD *)v149 + 1) = v137;
    v149[4] = Bytes;
    v150 = (float)(unint64_t)(*(_QWORD *)(v135 + 368) + 1);
    v151 = *(float *)(v135 + 376);
    if ((((float)(v151 * (float)v142) >= v150) & ~(v142 == 0)) == 0)
    {
      v152 = 1;
      if (v142 >= 3)
        v152 = (v142 & (v142 - 1)) != 0;
      v153 = v152 | (2 * v142);
      v154 = vcvtps_u32_f32(v150 / v151);
      if (v153 <= v154)
        v155 = v154;
      else
        v155 = v153;
      std::__hash_table<google::protobuf::Descriptor const*,std::hash<google::protobuf::Descriptor const*>,std::equal_to<google::protobuf::Descriptor const*>,std::allocator<google::protobuf::Descriptor const*>>::__rehash<true>(v135 + 344, v155);
      v142 = *(_QWORD *)(v135 + 352);
      if ((v142 & (v142 - 1)) != 0)
      {
        if (v138 >= v142)
          v2 = v138 % v142;
        else
          v2 = v138;
      }
      else
      {
        v2 = (v142 - 1) & v138;
      }
    }
    v156 = *v141;
    v157 = *(_QWORD **)(*v141 + 8 * v2);
    if (v157)
    {
      *v149 = *v157;
      v158 = (uint64_t)Bytes;
      v159 = a2;
    }
    else
    {
      *v149 = *(_QWORD *)(v135 + 360);
      *(_QWORD *)(v135 + 360) = v149;
      *(_QWORD *)(v156 + 8 * v2) = v135 + 360;
      v158 = (uint64_t)Bytes;
      v159 = a2;
      if (!*v149)
        goto LABEL_234;
      v160 = *(_QWORD *)(*v149 + 8);
      if ((v142 & (v142 - 1)) != 0)
      {
        if (v160 >= v142)
          v160 %= v142;
      }
      else
      {
        v160 &= v142 - 1;
      }
      v157 = (_QWORD *)(*v141 + 8 * v160);
    }
    *v157 = v149;
LABEL_234:
    ++*(_QWORD *)(v135 + 368);
    v161 = *(_QWORD **)v158;
    if (*(char *)(*(_QWORD *)v158 + 23) < 0)
      v161 = (_QWORD *)*v161;
    v163 = *(_QWORD **)(v135 + 464);
    v162 = *(_QWORD *)(v135 + 472);
    if ((unint64_t)v163 >= v162)
    {
      v165 = *(_QWORD *)(v135 + 456);
      v166 = ((uint64_t)v163 - v165) >> 3;
      if ((unint64_t)(v166 + 1) >> 61)
        std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
      v167 = v162 - v165;
      v168 = v167 >> 2;
      if (v167 >> 2 <= (unint64_t)(v166 + 1))
        v168 = v166 + 1;
      if ((unint64_t)v167 >= 0x7FFFFFFFFFFFFFF8)
        v169 = 0x1FFFFFFFFFFFFFFFLL;
      else
        v169 = v168;
      if (v169)
      {
        v170 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<zilch::StringList::Entry>>(v135 + 472, v169);
        v158 = (uint64_t)Bytes;
      }
      else
      {
        v170 = 0;
      }
      v171 = &v170[8 * v166];
      v172 = &v170[8 * v169];
      *(_QWORD *)v171 = v161;
      v164 = v171 + 8;
      v174 = *(char **)(v135 + 456);
      v173 = *(char **)(v135 + 464);
      if (v173 != v174)
      {
        do
        {
          v175 = *((_QWORD *)v173 - 1);
          v173 -= 8;
          *((_QWORD *)v171 - 1) = v175;
          v171 -= 8;
        }
        while (v173 != v174);
        v173 = *(char **)(v135 + 456);
      }
      v159 = a2;
      *(_QWORD *)(v135 + 456) = v171;
      *(_QWORD *)(v135 + 464) = v164;
      *(_QWORD *)(v135 + 472) = v172;
      if (v173)
        operator delete(v173);
    }
    else
    {
      *v163 = v161;
      v164 = v163 + 1;
    }
    *(_QWORD *)(v135 + 464) = v164;
    v176 = *(_QWORD *)(v158 + 8);
    if (*(char *)(v176 + 23) < 0)
    {
      if (!*(_QWORD *)(v176 + 8))
      {
LABEL_257:
        v799[0] = 0;
        v799[1] = 0;
        v798 = v799;
        v177 = *((_DWORD *)v159 + 8);
        *(_DWORD *)(v158 + 32) = v177;
        *(_QWORD *)(v158 + 72) = google::protobuf::DescriptorPool::Tables::AllocateBytes(*((google::protobuf::DescriptorPool::Tables **)v786 + 1), 8 * v177);
        if (*(_BYTE *)(*(_QWORD *)v786 + 41))
        {
          *(_QWORD *)(v158 + 24) = google::protobuf::DescriptorPool::Tables::AllocateOnceDynamic(*((google::protobuf::DescriptorPool::Tables **)v786
                                                                                                 + 1));
          v178 = (void *)google::protobuf::DescriptorPool::Tables::AllocateBytes(*((google::protobuf::DescriptorPool::Tables **)v786 + 1), 8 * *((_DWORD *)v159 + 8));
          *(_QWORD *)(v158 + 80) = v178;
          v179 = *((unsigned int *)v159 + 8);
          if ((int)v179 >= 1)
            bzero(v178, 8 * v179);
        }
        else
        {
          *(_QWORD *)(v158 + 24) = 0;
          *(_QWORD *)(v158 + 80) = 0;
        }
        std::__tree<std::__value_type<std::pair<google::protobuf::Descriptor const*,int>,google::protobuf::FieldDescriptor const*>,std::__map_value_compare<std::pair<google::protobuf::Descriptor const*,int>,std::__value_type<std::pair<google::protobuf::Descriptor const*,int>,google::protobuf::FieldDescriptor const*>,std::less<std::pair<google::protobuf::Descriptor const*,int>>,true>,std::allocator<std::__value_type<std::pair<google::protobuf::Descriptor const*,int>,google::protobuf::FieldDescriptor const*>>>::destroy(*((_QWORD **)v786 + 16));
        *((_QWORD *)v786 + 15) = (char *)v786 + 128;
        v769 = (uint64_t *)((char *)v786 + 128);
        *((_QWORD *)v786 + 16) = 0;
        v776 = (uint64_t **)((char *)v786 + 120);
        *((_QWORD *)v786 + 17) = 0;
        v796 = 0;
        v797 = 0;
        v795 = &v796;
        v180 = *((_DWORD *)v159 + 40);
        if (v180 >= 1)
        {
          for (i = 0; i < v180; ++i)
          {
            v182 = *(_DWORD *)(*((_QWORD *)v159 + 21) + 4 * i);
            v183 = v796;
            v184 = &v796;
            v185 = &v796;
            if (v796)
            {
              do
              {
                while (1)
                {
                  v185 = (uint64_t **)v183;
                  v186 = *((_DWORD *)v183 + 7);
                  if (v186 <= v182)
                    break;
                  v183 = *v185;
                  v184 = v185;
                  if (!*v185)
                    goto LABEL_270;
                }
                if (v186 >= v182)
                  goto LABEL_273;
                v183 = v185[1];
              }
              while (v183);
              v184 = v185 + 1;
            }
LABEL_270:
            v187 = operator new(0x20uLL);
            v187[7] = v182;
            *(_QWORD *)v187 = 0;
            *((_QWORD *)v187 + 1) = 0;
            *((_QWORD *)v187 + 2) = v185;
            *v184 = (uint64_t *)v187;
            if (*v795)
            {
              v795 = (uint64_t **)*v795;
              v187 = *v184;
            }
            std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(v796, (uint64_t *)v187);
            ++v797;
            v180 = *((_DWORD *)v159 + 40);
LABEL_273:
            ;
          }
        }
        if (*((int *)v159 + 8) >= 1)
        {
          for (j = 0; j < *((int *)a2 + 8); ++j)
          {
            v189 = *(const void ***)(*((_QWORD *)v159 + 5) + 8 * j + 8);
            std::__tree<std::string>::__emplace_unique_key_args<std::string,std::string const&>((uint64_t **)&v798, v189, (uint64_t)v189);
            if ((v191 & 1) == 0)
            {
              v192 = *(_QWORD *)(*((_QWORD *)a2 + 5) + 8 * (int)j + 8);
              std::operator+<char>();
              v193 = std::string::append(&__p, "\" was listed twice.");
              v194 = *(_OWORD *)&v193->__r_.__value_.__l.__data_;
              v811.__r_.__value_.__r.__words[2] = v193->__r_.__value_.__r.__words[2];
              *(_OWORD *)&v811.__r_.__value_.__l.__data_ = v194;
              v193->__r_.__value_.__l.__size_ = 0;
              v193->__r_.__value_.__r.__words[2] = 0;
              v193->__r_.__value_.__r.__words[0] = 0;
              google::protobuf::DescriptorBuilder::AddError((uint64_t)v786, v192, (uint64_t)a2, 9, (uint64_t)&v811);
              if (SHIBYTE(v811.__r_.__value_.__r.__words[2]) < 0)
                operator delete(v811.__r_.__value_.__l.__data_);
              if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
                operator delete(__p.__r_.__value_.__l.__data_);
            }
            v195 = *((_QWORD *)v786 + 1);
            google::protobuf::StringPiece::StringPiece<std::allocator<char>>(&v794, *(uint64_t **)(*((_QWORD *)a2 + 5) + 8 * j + 8), v190);
            *(_OWORD *)&v811.__r_.__value_.__l.__data_ = v794;
            v196 = std::__hash_table<std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>,std::__unordered_map_hasher<google::protobuf::StringPiece,std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>,google::protobuf::hash<google::protobuf::StringPiece>,std::equal_to<google::protobuf::StringPiece>,true>,std::__unordered_map_equal<google::protobuf::StringPiece,std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>,std::equal_to<google::protobuf::StringPiece>,google::protobuf::hash<google::protobuf::StringPiece>,true>,std::allocator<std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>>>::find<google::protobuf::StringPiece>((_QWORD *)(v195 + 344), &v811.__r_.__value_.__l.__data_);
            if (!v196 || (v198 = v196[4]) == 0)
            {
              v199 = *(_QWORD *)v786;
              v200 = *(_QWORD *)(*(_QWORD *)v786 + 24);
              if (!v200)
                goto LABEL_291;
              v198 = google::protobuf::DescriptorPool::FindFileByName(v200, *(uint64_t **)(*((_QWORD *)a2 + 5) + 8 * j + 8), v197);
            }
            if ((google::protobuf::FileDescriptor *)v198 == Bytes)
              goto LABEL_906;
            v199 = *(_QWORD *)v786;
            if (v198)
            {
              if (*(_BYTE *)(v199 + 40)
                && *(_QWORD *)v786 + 56 != std::__tree<std::__value_type<std::string,std::pair<void const*,int>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::pair<void const*,int>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::pair<void const*,int>>>>::find<std::string>(v199 + 48, (const void **)(*((_QWORD *)a2 + 22) & 0xFFFFFFFFFFFFFFFELL))&& !*(_DWORD *)(v198 + 36))
              {
                std::__tree<google::protobuf::FileDescriptor const*>::__emplace_unique_key_args<google::protobuf::FileDescriptor const*,google::protobuf::FileDescriptor const* const&>(v776, v198, v198);
              }
              goto LABEL_295;
            }
LABEL_291:
            if (!*(_BYTE *)(v199 + 41))
            {
              if (*(_BYTE *)(v199 + 42))
                goto LABEL_294;
              if (!*(_BYTE *)(v199 + 43))
              {
                v203 = v796;
                if (v796)
                {
                  v204 = &v796;
                  do
                  {
                    v205 = v203;
                    v206 = v204;
                    v207 = *((int *)v203 + 7);
                    if (j <= v207)
                      v204 = (uint64_t **)v203;
                    else
                      ++v203;
                    v203 = (uint64_t *)*v203;
                  }
                  while (v203);
                  if (v204 != &v796)
                  {
                    if (j > v207)
                      v205 = (uint64_t *)v206;
                    if (j >= *((int *)v205 + 7))
                    {
LABEL_294:
                      google::protobuf::StringPiece::StringPiece<std::allocator<char>>(v793, *(uint64_t **)(*((_QWORD *)a2 + 5) + 8 * j + 8), v197);
                      v198 = google::protobuf::DescriptorPool::NewPlaceholderFileWithMutexHeld(v199, v793[0], v793[1]);
                      goto LABEL_295;
                    }
                  }
                }
              }
              memset(&v811, 0, sizeof(v811));
              if (*(_QWORD *)(v199 + 8))
              {
                std::operator+<char>();
                v208 = std::string::append(&__p, "\" was not found or had errors.");
              }
              else
              {
                std::operator+<char>();
                v208 = std::string::append(&__p, "\" has not been loaded.");
              }
              v209 = v208->__r_.__value_.__r.__words[0];
              *(_QWORD *)&v825 = v208->__r_.__value_.__l.__size_;
              *(_QWORD *)((char *)&v825 + 7) = *(std::string::size_type *)((char *)&v208->__r_.__value_.__r.__words[1]
                                                                         + 7);
              v210 = HIBYTE(v208->__r_.__value_.__r.__words[2]);
              v208->__r_.__value_.__l.__size_ = 0;
              v208->__r_.__value_.__r.__words[2] = 0;
              v208->__r_.__value_.__r.__words[0] = 0;
              v811.__r_.__value_.__r.__words[0] = v209;
              *(std::string::size_type *)((char *)&v811.__r_.__value_.__r.__words[1] + 7) = *(_QWORD *)((char *)&v825 + 7);
              v811.__r_.__value_.__l.__size_ = v825;
              *((_BYTE *)&v811.__r_.__value_.__s + 23) = v210;
              if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
                operator delete(__p.__r_.__value_.__l.__data_);
              google::protobuf::DescriptorBuilder::AddError((uint64_t)v786, *(_QWORD *)(*((_QWORD *)a2 + 5) + 8 * (int)j + 8), (uint64_t)a2, 9, (uint64_t)&v811);
              if (SHIBYTE(v811.__r_.__value_.__r.__words[2]) < 0)
                operator delete(v811.__r_.__value_.__l.__data_);
            }
            v198 = 0;
LABEL_295:
            *(_QWORD *)(*((_QWORD *)Bytes + 9) + 8 * j) = v198;
            if (*(_BYTE *)(*(_QWORD *)v786 + 41))
              v201 = v198 == 0;
            else
              v201 = 0;
            if (v201)
            {
              v202 = (uint64_t *)*((_QWORD *)v786 + 1);
              google::protobuf::StringPiece::StringPiece<std::allocator<char>>(v792, *(uint64_t **)(*((_QWORD *)a2 + 5) + 8 * j + 8), v197);
              *(_QWORD *)(*((_QWORD *)Bytes + 10) + 8 * j) = google::protobuf::DescriptorPool::Tables::AllocateString(v202, v792[0], v792[1]);
            }
            v159 = a2;
          }
        }
        v2 = (uint64_t)Bytes;
        *((_QWORD *)Bytes + 11) = google::protobuf::DescriptorPool::Tables::AllocateBytes(*((google::protobuf::DescriptorPool::Tables **)v786 + 1), 4 * *((_DWORD *)v159 + 36));
        if (*((int *)v159 + 36) < 1)
        {
          v212 = 0;
        }
        else
        {
          v211 = 0;
          v212 = 0;
          do
          {
            v213 = *(_DWORD *)(*((_QWORD *)v159 + 19) + 4 * v211);
            if (v213 < 0 || v213 >= *((_DWORD *)v159 + 8))
            {
              google::protobuf::DescriptorBuilder::AddError((uint64_t)v786, *((_QWORD *)v159 + 22) & 0xFFFFFFFFFFFFFFFELL, (uint64_t)v159, 10, "Invalid public dependency index.");
            }
            else
            {
              *(_DWORD *)(*((_QWORD *)Bytes + 11) + 4 * v212) = v213;
              if (!*(_BYTE *)(*(_QWORD *)v786 + 41))
              {
                v214 = google::protobuf::FileDescriptor::dependency(Bytes, v213);
                std::__tree<google::protobuf::FileDescriptor const*>::__erase_unique<google::protobuf::FileDescriptor const*>(v776, v214);
              }
              ++v212;
            }
            ++v211;
          }
          while (v211 < *((int *)v159 + 36));
        }
        *((_DWORD *)Bytes + 9) = v212;
        std::__tree<std::__value_type<std::pair<google::protobuf::Descriptor const*,int>,google::protobuf::FieldDescriptor const*>,std::__map_value_compare<std::pair<google::protobuf::Descriptor const*,int>,std::__value_type<std::pair<google::protobuf::Descriptor const*,int>,google::protobuf::FieldDescriptor const*>,std::less<std::pair<google::protobuf::Descriptor const*,int>>,true>,std::allocator<std::__value_type<std::pair<google::protobuf::Descriptor const*,int>,google::protobuf::FieldDescriptor const*>>>::destroy(*((_QWORD **)v786 + 13));
        *((_QWORD *)v786 + 12) = (char *)v786 + 104;
        *((_QWORD *)v786 + 14) = 0;
        *((_QWORD *)v786 + 13) = 0;
        if (!*(_BYTE *)(*(_QWORD *)v786 + 41) && *((int *)Bytes + 8) >= 1)
        {
          v215 = 0;
          do
          {
            v216 = (const google::protobuf::FileDescriptor *)google::protobuf::FileDescriptor::dependency(Bytes, v215);
            google::protobuf::DescriptorBuilder::RecordPublicDependencies((uint64_t)v786, v216);
            ++v215;
          }
          while (v215 < *((_DWORD *)Bytes + 8));
        }
        *((_QWORD *)Bytes + 12) = google::protobuf::DescriptorPool::Tables::AllocateBytes(*((google::protobuf::DescriptorPool::Tables **)v786 + 1), 4 * *((_DWORD *)v159 + 40));
        if (*((int *)v159 + 40) < 1)
        {
          v218 = 0;
        }
        else
        {
          v217 = 0;
          v218 = 0;
          do
          {
            v219 = *(_DWORD *)(*((_QWORD *)v159 + 21) + 4 * v217);
            if (v219 < 0 || v219 >= *((_DWORD *)v159 + 8))
              google::protobuf::DescriptorBuilder::AddError((uint64_t)v786, *((_QWORD *)v159 + 22) & 0xFFFFFFFFFFFFFFFELL, (uint64_t)v159, 10, "Invalid weak dependency index.");
            else
              *(_DWORD *)(*((_QWORD *)Bytes + 12) + 4 * v218++) = v219;
            ++v217;
          }
          while (v217 < *((int *)v159 + 40));
        }
        *((_DWORD *)Bytes + 10) = v218;
        v220 = *((_DWORD *)v159 + 14);
        *((_DWORD *)Bytes + 11) = v220;
        *((_QWORD *)Bytes + 13) = google::protobuf::DescriptorPool::Tables::AllocateBytes(*((google::protobuf::DescriptorPool::Tables **)v786 + 1), 144 * v220);
        if (*((int *)v159 + 14) >= 1)
        {
          v221 = 0;
          v222 = 0;
          do
          {
            google::protobuf::DescriptorBuilder::BuildMessage(v786, *(const google::protobuf::DescriptorProto **)(*((_QWORD *)v159 + 8) + 8 * v222++ + 8), 0, (google::protobuf::Descriptor *)(*((_QWORD *)Bytes + 13) + v221));
            v221 += 144;
          }
          while (v222 < *((int *)v159 + 14));
        }
        v223 = *((_DWORD *)v159 + 20);
        *((_DWORD *)Bytes + 12) = v223;
        *((_QWORD *)Bytes + 14) = google::protobuf::DescriptorPool::Tables::AllocateBytes(*((google::protobuf::DescriptorPool::Tables **)v786 + 1), 80 * v223);
        if (*((int *)v159 + 20) >= 1)
        {
          v224 = 0;
          v225 = 0;
          do
          {
            google::protobuf::DescriptorBuilder::BuildEnum((uint64_t)v786, *(_QWORD *)(*((_QWORD *)v159 + 11) + 8 * v225++ + 8), 0, *((_QWORD *)Bytes + 14) + v224);
            v224 += 80;
          }
          while (v225 < *((int *)v159 + 20));
        }
        v226 = *((_DWORD *)v159 + 26);
        *((_DWORD *)Bytes + 13) = v226;
        *((_QWORD *)Bytes + 15) = google::protobuf::DescriptorPool::Tables::AllocateBytes(*((google::protobuf::DescriptorPool::Tables **)v786 + 1), 48 * v226);
        if (*((int *)v159 + 26) >= 1)
        {
          v227 = 0;
          v771 = (void **)((char *)v786 + 24);
          do
          {
            v228 = *(_QWORD *)(*((_QWORD *)v159 + 14) + 8 * v227 + 8);
            v229 = *(_QWORD *)(v2 + 120);
            NameString = google::protobuf::DescriptorBuilder::AllocateNameString(*((google::protobuf::DescriptorPool::Tables **)v786 + 1), *(uint64_t **)(*((_QWORD *)v786 + 10) + 8), *(_QWORD *)(v228 + 48) & 0xFFFFFFFFFFFFFFFELL);
            google::protobuf::DescriptorBuilder::ValidateSymbolName((uint64_t)v786, (unsigned __int8 *)(*(_QWORD *)(v228 + 48) & 0xFFFFFFFFFFFFFFFELL), (uint64_t)NameString, v228);
            v231 = (uint64_t *)*((_QWORD *)v786 + 1);
            google::protobuf::StringPiece::StringPiece<std::allocator<char>>(&v805, (uint64_t *)(*(_QWORD *)(v228 + 48) & 0xFFFFFFFFFFFFFFFELL), v232);
            v780 = v229 + 48 * v227;
            *(_QWORD *)v780 = google::protobuf::DescriptorPool::Tables::AllocateString(v231, (uint64_t)v805.__r_.__value_.__l.__data_, v805.__r_.__value_.__l.__size_);
            *(_QWORD *)(v780 + 8) = NameString;
            *(_QWORD *)(v780 + 16) = *((_QWORD *)v786 + 10);
            v233 = *(_DWORD *)(v228 + 32);
            *(_DWORD *)(v780 + 40) = v233;
            v772 = v229;
            v773 = v227;
            v777 = v228;
            *(_QWORD *)(v780 + 32) = google::protobuf::DescriptorPool::Tables::AllocateBytes(*((google::protobuf::DescriptorPool::Tables **)v786 + 1), 104 * v233);
            v235 = v228;
            if (*(int *)(v228 + 32) >= 1)
            {
              v236 = 0;
              do
              {
                v237 = *(_QWORD *)(*(_QWORD *)(v235 + 40) + 8 * v236 + 8);
                v238 = *(_QWORD *)(v780 + 32);
                v239 = (uint64_t *)*((_QWORD *)v786 + 1);
                google::protobuf::StringPiece::StringPiece<std::allocator<char>>(&v808, (uint64_t *)(*(_QWORD *)(v237 + 24) & 0xFFFFFFFFFFFFFFFELL), v234);
                String = google::protobuf::DescriptorPool::Tables::AllocateString(v239, (uint64_t)v808.__r_.__value_.__l.__data_, v808.__r_.__value_.__l.__size_);
                v782 = (google::protobuf::internal::RepeatedPtrFieldBase *)(v238 + 104 * v236);
                *(_QWORD *)v782 = String;
                *((_QWORD *)v782 + 2) = v780;
                v241 = (uint64_t *)((char *)v782 + 16);
                v242 = google::protobuf::DescriptorBuilder::AllocateNameString(*((google::protobuf::DescriptorPool::Tables **)v786 + 1), *(uint64_t **)(v780 + 8), (uint64_t)String);
                *((_QWORD *)v782 + 1) = v242;
                v243 = (uint64_t *)((char *)v782 + 8);
                google::protobuf::DescriptorBuilder::ValidateSymbolName((uint64_t)v786, (unsigned __int8 *)(*(_QWORD *)(v237 + 24) & 0xFFFFFFFFFFFFFFFELL), (uint64_t)v242, v237);
                *((_QWORD *)v782 + 11) = 0;
                *(_OWORD *)((char *)v782 + 72) = 0u;
                *(_OWORD *)((char *)v782 + 56) = 0u;
                *(_OWORD *)((char *)v782 + 40) = 0u;
                *(_OWORD *)((char *)v782 + 24) = 0u;
                if ((*(_BYTE *)(v237 + 16) & 8) != 0)
                {
                  v244 = *(_QWORD **)(v237 + 48);
                  std::string::basic_string[abi:ne180100]<0>(v809, "google.protobuf.MethodOptions");
                  v825 = 0uLL;
                  v826[0] = 0;
                  google::protobuf::ServiceDescriptor::GetLocationPath(*v241, (char **)&v825);
                  v246 = (_DWORD *)*((_QWORD *)&v825 + 1);
                  v245 = (char *)v826[0];
                  if (*((_QWORD *)&v825 + 1) >= v826[0])
                  {
                    v248 = (_DWORD *)v825;
                    v249 = (uint64_t)(*((_QWORD *)&v825 + 1) - v825) >> 2;
                    v250 = v249 + 1;
                    if ((unint64_t)(v249 + 1) >> 62)
                      goto LABEL_1177;
                    v251 = v826[0] - v825;
                    if ((uint64_t)(v826[0] - v825) >> 1 > v250)
                      v250 = v251 >> 1;
                    if ((unint64_t)v251 >= 0x7FFFFFFFFFFFFFFCLL)
                      v252 = 0x3FFFFFFFFFFFFFFFLL;
                    else
                      v252 = v250;
                    if (v252)
                    {
                      v253 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<unsigned int>>((uint64_t)v826, v252);
                      v246 = (_DWORD *)*((_QWORD *)&v825 + 1);
                      v248 = (_DWORD *)v825;
                    }
                    else
                    {
                      v253 = 0;
                    }
                    v254 = &v253[4 * v249];
                    *(_DWORD *)v254 = 2;
                    v247 = v254 + 4;
                    while (v246 != v248)
                    {
                      v255 = *--v246;
                      *((_DWORD *)v254 - 1) = v255;
                      v254 -= 4;
                    }
                    v245 = &v253[4 * v252];
                    *(_QWORD *)&v825 = v254;
                    *((_QWORD *)&v825 + 1) = v247;
                    v826[0] = v245;
                    if (v248)
                    {
                      operator delete(v248);
                      v245 = (char *)v826[0];
                    }
                  }
                  else
                  {
                    **((_DWORD **)&v825 + 1) = 2;
                    v247 = (char *)(v246 + 1);
                  }
                  *((_QWORD *)&v825 + 1) = v247;
                  v256 = -991146299 * (((unint64_t)v782 - *(_QWORD *)(*v241 + 32)) >> 3);
                  if (v247 >= v245)
                  {
                    v258 = (char *)v825;
                    v259 = (uint64_t)&v247[-v825] >> 2;
                    v260 = v259 + 1;
                    if ((unint64_t)(v259 + 1) >> 62)
                      goto LABEL_1177;
                    v261 = (uint64_t)&v245[-v825];
                    if (v261 >> 1 > v260)
                      v260 = v261 >> 1;
                    if ((unint64_t)v261 >= 0x7FFFFFFFFFFFFFFCLL)
                      v262 = 0x3FFFFFFFFFFFFFFFLL;
                    else
                      v262 = v260;
                    if (v262)
                    {
                      v263 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<unsigned int>>((uint64_t)v826, v262);
                      v247 = (char *)*((_QWORD *)&v825 + 1);
                      v258 = (char *)v825;
                    }
                    else
                    {
                      v263 = 0;
                    }
                    v264 = &v263[4 * v259];
                    *(_DWORD *)v264 = v256;
                    v257 = v264 + 4;
                    while (v247 != v258)
                    {
                      v265 = *((_DWORD *)v247 - 1);
                      v247 -= 4;
                      *((_DWORD *)v264 - 1) = v265;
                      v264 -= 4;
                    }
                    v245 = &v263[4 * v262];
                    *(_QWORD *)&v825 = v264;
                    *((_QWORD *)&v825 + 1) = v257;
                    v826[0] = v245;
                    if (v258)
                    {
                      operator delete(v258);
                      v245 = (char *)v826[0];
                    }
                  }
                  else
                  {
                    *(_DWORD *)v247 = v256;
                    v257 = v247 + 4;
                  }
                  *((_QWORD *)&v825 + 1) = v257;
                  if (v257 >= v245)
                  {
                    v267 = (char *)v825;
                    v268 = (uint64_t)&v257[-v825] >> 2;
                    v269 = v268 + 1;
                    if ((unint64_t)(v268 + 1) >> 62)
LABEL_1177:
                      std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
                    v270 = (uint64_t)&v245[-v825];
                    if (v270 >> 1 > v269)
                      v269 = v270 >> 1;
                    if ((unint64_t)v270 >= 0x7FFFFFFFFFFFFFFCLL)
                      v271 = 0x3FFFFFFFFFFFFFFFLL;
                    else
                      v271 = v269;
                    if (v271)
                    {
                      v272 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<unsigned int>>((uint64_t)v826, v271);
                      v257 = (char *)*((_QWORD *)&v825 + 1);
                      v267 = (char *)v825;
                    }
                    else
                    {
                      v272 = 0;
                    }
                    v273 = &v272[4 * v268];
                    *(_DWORD *)v273 = 4;
                    v266 = v273 + 4;
                    while (v257 != v267)
                    {
                      v274 = *((_DWORD *)v257 - 1);
                      v257 -= 4;
                      *((_DWORD *)v273 - 1) = v274;
                      v273 -= 4;
                    }
                    *(_QWORD *)&v825 = v273;
                    *((_QWORD *)&v825 + 1) = v266;
                    v826[0] = &v272[4 * v271];
                    if (v267)
                      operator delete(v267);
                  }
                  else
                  {
                    *(_DWORD *)v257 = 4;
                    v266 = v257 + 4;
                  }
                  *((_QWORD *)&v825 + 1) = v266;
                  v275 = *v243;
                  v276 = (_QWORD *)*((_QWORD *)v786 + 1);
                  v277 = (int *)operator new();
                  google::protobuf::MethodOptions::MethodOptions((google::protobuf::MethodOptions *)v277, 0);
                  v278 = v276[31];
                  v279 = (int **)v276[30];
                  if ((unint64_t)v279 >= v278)
                  {
                    v281 = (_QWORD *)v276[29];
                    v282 = v279 - (int **)v281;
                    v283 = v282 + 1;
                    if ((unint64_t)(v282 + 1) >> 61)
                      std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
                    v284 = v278 - (_QWORD)v281;
                    if (v284 >> 2 > v283)
                      v283 = v284 >> 2;
                    if ((unint64_t)v284 >= 0x7FFFFFFFFFFFFFF8)
                      v285 = 0x1FFFFFFFFFFFFFFFLL;
                    else
                      v285 = v283;
                    v813 = v276 + 31;
                    if (v285)
                    {
                      v285 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<std::unique_ptr<google::protobuf::Message>>>(v285);
                      v281 = (_QWORD *)v276[29];
                      v279 = (int **)v276[30];
                    }
                    else
                    {
                      v286 = 0;
                    }
                    v287 = (int **)(v285 + 8 * v282);
                    v288 = (void *)(v285 + 8 * v286);
                    v812 = v288;
                    *v287 = v277;
                    v811.__r_.__value_.__r.__words[2] = (std::string::size_type)(v287 + 1);
                    if (v279 == v281)
                    {
                      v280 = v287 + 1;
                    }
                    else
                    {
                      do
                      {
                        v289 = *--v279;
                        *v279 = 0;
                        *--v287 = v289;
                      }
                      while (v279 != v281);
                      v280 = (_QWORD *)v811.__r_.__value_.__r.__words[2];
                      v288 = v812;
                    }
                    v290 = *(_OWORD *)(v276 + 29);
                    v276[29] = v287;
                    v276[30] = v280;
                    *(_OWORD *)&v811.__r_.__value_.__r.__words[1] = v290;
                    v291 = (void *)v276[31];
                    v276[31] = v288;
                    v812 = v291;
                    v811.__r_.__value_.__r.__words[0] = v290;
                    std::__split_buffer<std::unique_ptr<google::protobuf::Message>>::~__split_buffer((uint64_t)&v811);
                  }
                  else
                  {
                    *v279 = v277;
                    v280 = v279 + 1;
                  }
                  v276[30] = v280;
                  if (google::protobuf::internal::ExtensionSet::IsInitialized((google::protobuf::internal::ExtensionSet *)(v244 + 2))
                    && (google::protobuf::internal::AllAreInitialized<google::protobuf::UninterpretedOption>((uint64_t)(v244 + 6)) & 1) != 0)
                  {
                    google::protobuf::MessageLite::SerializeAsString((google::protobuf::MessageLite *)v244, (uint64_t)&v811);
                    v292 = (google::protobuf::UnknownFieldSet *)google::protobuf::MessageLite::ParseFrom<(google::protobuf::MessageLite::ParseFlags)1,std::string>((google::protobuf::MessageLite *)v277, (uint64_t *)&v811);
                    if (SHIBYTE(v811.__r_.__value_.__r.__words[2]) < 0)
                      operator delete(v811.__r_.__value_.__l.__data_);
                    *(_QWORD *)(v238 + 104 * v236 + 88) = v277;
                    if (v277[14] >= 1)
                    {
                      v292 = (google::protobuf::UnknownFieldSet *)v815;
                      if (v815)
                      {
                        v816[0] = v815;
                        operator delete(v815);
                      }
                      if (SHIBYTE(v814) < 0)
                        operator delete(v812);
                      if (SHIBYTE(v811.__r_.__value_.__r.__words[2]) < 0)
                        operator delete(v811.__r_.__value_.__l.__data_);
                    }
                    v294 = v244[1];
                    if ((v294 & 1) != 0)
                      v295 = (uint64_t *)((v294 & 0xFFFFFFFFFFFFFFFELL) + 8);
                    else
                      v295 = (uint64_t *)google::protobuf::UnknownFieldSet::default_instance(v292);
                    if (*v295 != v295[1])
                    {
                      v296 = *((_QWORD *)v786 + 1);
                      google::protobuf::StringPiece::StringPiece<std::allocator<char>>(&__p, (uint64_t *)v809, v293);
                      *(_OWORD *)&v811.__r_.__value_.__l.__data_ = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
                      v297 = std::__hash_table<std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>,std::__unordered_map_hasher<google::protobuf::StringPiece,std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>,google::protobuf::hash<google::protobuf::StringPiece>,std::equal_to<google::protobuf::StringPiece>,true>,std::__unordered_map_equal<google::protobuf::StringPiece,std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>,std::equal_to<google::protobuf::StringPiece>,google::protobuf::hash<google::protobuf::StringPiece>,true>,std::allocator<std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>>>::find<google::protobuf::StringPiece>((_QWORD *)(v296 + 304), &v811.__r_.__value_.__l.__data_);
                      if (v297)
                      {
                        v298 = v297 + 4;
                        v299 = (const google::protobuf::Descriptor **)(v297 + 5);
                      }
                      else
                      {
                        v298 = &qword_1ECDBB718;
                        v299 = (const google::protobuf::Descriptor **)&qword_1ECDBB720;
                      }
                      if (*(_DWORD *)v298 == 1)
                      {
                        v309 = *v295;
                        v308 = v295[1];
                        if ((int)((unint64_t)(v308 - *v295) >> 4) >= 1)
                        {
                          v310 = 0;
                          v311 = 0;
                          v312 = *v299;
                          do
                          {
                            ExtensionByNumberNoLock = google::protobuf::DescriptorPool::InternalFindExtensionByNumberNoLock(*(google::protobuf::DescriptorPool **)v786, v312, *(_DWORD *)(v309 + v310));
                            if (ExtensionByNumberNoLock)
                            {
                              std::__tree<google::protobuf::FileDescriptor const*>::__erase_unique<google::protobuf::FileDescriptor const*>(v776, *(_QWORD *)(ExtensionByNumberNoLock + 40));
                              v309 = *v295;
                              v308 = v295[1];
                            }
                            ++v311;
                            v310 += 16;
                          }
                          while (v311 < (int)((unint64_t)(v308 - v309) >> 4));
                        }
                      }
                    }
                  }
                  else
                  {
                    if (*(char *)(v275 + 23) >= 0)
                      v300 = *(unsigned __int8 *)(v275 + 23);
                    else
                      v300 = *(_QWORD *)(v275 + 8);
                    std::string::basic_string[abi:ne180100]((uint64_t)&__p, v300 + 1);
                    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
                      v301 = &__p;
                    else
                      v301 = (std::string *)__p.__r_.__value_.__r.__words[0];
                    if (v300)
                    {
                      if (*(char *)(v275 + 23) >= 0)
                        v302 = (const std::string::value_type *)v275;
                      else
                        v302 = *(const std::string::value_type **)v275;
                      memmove(v301, v302, v300);
                    }
                    *(_WORD *)((char *)&v301->__r_.__value_.__l.__data_ + v300) = 46;
                    v303 = *(char *)(v275 + 23);
                    if (v303 >= 0)
                      v304 = (const std::string::value_type *)v275;
                    else
                      v304 = *(const std::string::value_type **)v275;
                    if (v303 >= 0)
                      v305 = *(unsigned __int8 *)(v275 + 23);
                    else
                      v305 = *(_QWORD *)(v275 + 8);
                    v306 = std::string::append(&__p, v304, v305);
                    v307 = *(_OWORD *)&v306->__r_.__value_.__l.__data_;
                    v811.__r_.__value_.__r.__words[2] = v306->__r_.__value_.__r.__words[2];
                    *(_OWORD *)&v811.__r_.__value_.__l.__data_ = v307;
                    v306->__r_.__value_.__l.__size_ = 0;
                    v306->__r_.__value_.__r.__words[2] = 0;
                    v306->__r_.__value_.__r.__words[0] = 0;
                    google::protobuf::DescriptorBuilder::AddError((uint64_t)v786, (uint64_t)&v811, (uint64_t)v244, 7, "Uninterpreted option is missing name or value.");
                    if (SHIBYTE(v811.__r_.__value_.__r.__words[2]) < 0)
                      operator delete(v811.__r_.__value_.__l.__data_);
                    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
                      operator delete(__p.__r_.__value_.__l.__data_);
                  }
                  if ((_QWORD)v825)
                  {
                    *((_QWORD *)&v825 + 1) = v825;
                    operator delete((void *)v825);
                  }
                  if (SHIBYTE(v810) < 0)
                    operator delete(v809[0]);
                }
                *(_WORD *)(v238 + 104 * v236 + 96) = *(_WORD *)(v237 + 56);
                google::protobuf::DescriptorBuilder::AddSymbol((uint64_t)v786, *v243, v780, *(_QWORD *)v782, v237, 7, (uint64_t)v782);
                ++v236;
                v235 = v777;
              }
              while (v236 < *(int *)(v777 + 32));
            }
            v314 = v772 + 48 * v773;
            *(_QWORD *)(v314 + 24) = 0;
            v315 = (int **)(v314 + 24);
            v2 = (uint64_t)Bytes;
            v159 = a2;
            v316 = (uint64_t *)(v780 + 8);
            if ((*(_BYTE *)(v235 + 16) & 2) != 0)
            {
              v317 = *(_QWORD **)(v235 + 56);
              std::string::basic_string[abi:ne180100]<0>(v809, "google.protobuf.ServiceOptions");
              v825 = 0uLL;
              v826[0] = 0;
              google::protobuf::ServiceDescriptor::GetLocationPath(v780, (char **)&v825);
              v318 = (char *)*((_QWORD *)&v825 + 1);
              if (*((_QWORD *)&v825 + 1) >= v826[0])
              {
                v321 = (char *)v825;
                v322 = (uint64_t)(*((_QWORD *)&v825 + 1) - v825) >> 2;
                v323 = v322 + 1;
                v320 = (uint64_t *)(v780 + 8);
                if ((unint64_t)(v322 + 1) >> 62)
                  std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
                v324 = v826[0] - v825;
                if ((uint64_t)(v826[0] - v825) >> 1 > v323)
                  v323 = v324 >> 1;
                if ((unint64_t)v324 >= 0x7FFFFFFFFFFFFFFCLL)
                  v325 = 0x3FFFFFFFFFFFFFFFLL;
                else
                  v325 = v323;
                if (v325)
                {
                  v326 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<unsigned int>>((uint64_t)v826, v325);
                  v318 = (char *)*((_QWORD *)&v825 + 1);
                  v321 = (char *)v825;
                  v320 = (uint64_t *)(v780 + 8);
                }
                else
                {
                  v326 = 0;
                }
                v327 = &v326[4 * v322];
                *(_DWORD *)v327 = 3;
                v319 = v327 + 4;
                while (v318 != v321)
                {
                  v328 = *((_DWORD *)v318 - 1);
                  v318 -= 4;
                  *((_DWORD *)v327 - 1) = v328;
                  v327 -= 4;
                }
                *(_QWORD *)&v825 = v327;
                *((_QWORD *)&v825 + 1) = v319;
                v826[0] = &v326[4 * v325];
                if (v321)
                  operator delete(v321);
              }
              else
              {
                **((_DWORD **)&v825 + 1) = 3;
                v319 = v318 + 4;
                v320 = (uint64_t *)(v780 + 8);
              }
              *((_QWORD *)&v825 + 1) = v319;
              v329 = *v320;
              v330 = (_QWORD *)*((_QWORD *)v786 + 1);
              v331 = (int *)operator new();
              google::protobuf::ServiceOptions::ServiceOptions((google::protobuf::ServiceOptions *)v331, 0);
              v332 = v330[31];
              v333 = (int **)v330[30];
              if ((unint64_t)v333 >= v332)
              {
                v335 = (_QWORD *)v330[29];
                v336 = v333 - (int **)v335;
                v337 = v336 + 1;
                if ((unint64_t)(v336 + 1) >> 61)
                  std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
                v338 = v332 - (_QWORD)v335;
                if (v338 >> 2 > v337)
                  v337 = v338 >> 2;
                if ((unint64_t)v338 >= 0x7FFFFFFFFFFFFFF8)
                  v339 = 0x1FFFFFFFFFFFFFFFLL;
                else
                  v339 = v337;
                v813 = v330 + 31;
                if (v339)
                {
                  v339 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<std::unique_ptr<google::protobuf::Message>>>(v339);
                  v335 = (_QWORD *)v330[29];
                  v333 = (int **)v330[30];
                }
                else
                {
                  v340 = 0;
                }
                v341 = (int **)(v339 + 8 * v336);
                v342 = (void *)(v339 + 8 * v340);
                v812 = v342;
                *v341 = v331;
                v811.__r_.__value_.__r.__words[2] = (std::string::size_type)(v341 + 1);
                if (v333 == v335)
                {
                  v334 = v341 + 1;
                }
                else
                {
                  do
                  {
                    v343 = *--v333;
                    *v333 = 0;
                    *--v341 = v343;
                  }
                  while (v333 != v335);
                  v334 = (_QWORD *)v811.__r_.__value_.__r.__words[2];
                  v342 = v812;
                }
                v344 = *(_OWORD *)(v330 + 29);
                v330[29] = v341;
                v330[30] = v334;
                *(_OWORD *)&v811.__r_.__value_.__r.__words[1] = v344;
                v345 = (void *)v330[31];
                v330[31] = v342;
                v812 = v345;
                v811.__r_.__value_.__r.__words[0] = v344;
                std::__split_buffer<std::unique_ptr<google::protobuf::Message>>::~__split_buffer((uint64_t)&v811);
              }
              else
              {
                *v333 = v331;
                v334 = v333 + 1;
              }
              v330[30] = v334;
              if (google::protobuf::internal::ExtensionSet::IsInitialized((google::protobuf::internal::ExtensionSet *)(v317 + 2))
                && (google::protobuf::internal::AllAreInitialized<google::protobuf::UninterpretedOption>((uint64_t)(v317 + 6)) & 1) != 0)
              {
                google::protobuf::MessageLite::SerializeAsString((google::protobuf::MessageLite *)v317, (uint64_t)&v811);
                v346 = (google::protobuf::UnknownFieldSet *)google::protobuf::MessageLite::ParseFrom<(google::protobuf::MessageLite::ParseFlags)1,std::string>((google::protobuf::MessageLite *)v331, (uint64_t *)&v811);
                if (SHIBYTE(v811.__r_.__value_.__r.__words[2]) < 0)
                  operator delete(v811.__r_.__value_.__l.__data_);
                *v315 = v331;
                if (v331[14] >= 1)
                {
                  v346 = (google::protobuf::UnknownFieldSet *)v815;
                  if (v815)
                  {
                    v816[0] = v815;
                    operator delete(v815);
                  }
                  if (SHIBYTE(v814) < 0)
                    operator delete(v812);
                  if (SHIBYTE(v811.__r_.__value_.__r.__words[2]) < 0)
                    operator delete(v811.__r_.__value_.__l.__data_);
                }
                v348 = v317[1];
                if ((v348 & 1) != 0)
                  v349 = (uint64_t *)((v348 & 0xFFFFFFFFFFFFFFFELL) + 8);
                else
                  v349 = (uint64_t *)google::protobuf::UnknownFieldSet::default_instance(v346);
                if (*v349 != v349[1])
                {
                  v350 = *((_QWORD *)v786 + 1);
                  google::protobuf::StringPiece::StringPiece<std::allocator<char>>(&__p, (uint64_t *)v809, v347);
                  *(_OWORD *)&v811.__r_.__value_.__l.__data_ = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
                  v351 = std::__hash_table<std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>,std::__unordered_map_hasher<google::protobuf::StringPiece,std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>,google::protobuf::hash<google::protobuf::StringPiece>,std::equal_to<google::protobuf::StringPiece>,true>,std::__unordered_map_equal<google::protobuf::StringPiece,std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>,std::equal_to<google::protobuf::StringPiece>,google::protobuf::hash<google::protobuf::StringPiece>,true>,std::allocator<std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>>>::find<google::protobuf::StringPiece>((_QWORD *)(v350 + 304), &v811.__r_.__value_.__l.__data_);
                  if (v351)
                  {
                    v352 = v351 + 4;
                    v353 = (const google::protobuf::Descriptor **)(v351 + 5);
                  }
                  else
                  {
                    v352 = &qword_1ECDBB718;
                    v353 = (const google::protobuf::Descriptor **)&qword_1ECDBB720;
                  }
                  if (*(_DWORD *)v352 == 1)
                  {
                    v363 = *v349;
                    v362 = v349[1];
                    if ((int)((unint64_t)(v362 - *v349) >> 4) >= 1)
                    {
                      v364 = 0;
                      v365 = 0;
                      v366 = *v353;
                      do
                      {
                        v367 = google::protobuf::DescriptorPool::InternalFindExtensionByNumberNoLock(*(google::protobuf::DescriptorPool **)v786, v366, *(_DWORD *)(v363 + v364));
                        if (v367)
                        {
                          std::__tree<google::protobuf::FileDescriptor const*>::__erase_unique<google::protobuf::FileDescriptor const*>(v776, *(_QWORD *)(v367 + 40));
                          v363 = *v349;
                          v362 = v349[1];
                        }
                        ++v365;
                        v364 += 16;
                      }
                      while (v365 < (int)((unint64_t)(v362 - v363) >> 4));
                    }
                  }
                }
              }
              else
              {
                if (*(char *)(v329 + 23) >= 0)
                  v354 = *(unsigned __int8 *)(v329 + 23);
                else
                  v354 = *(_QWORD *)(v329 + 8);
                std::string::basic_string[abi:ne180100]((uint64_t)&__p, v354 + 1);
                if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
                  v355 = &__p;
                else
                  v355 = (std::string *)__p.__r_.__value_.__r.__words[0];
                if (v354)
                {
                  if (*(char *)(v329 + 23) >= 0)
                    v356 = (const void *)v329;
                  else
                    v356 = *(const void **)v329;
                  memmove(v355, v356, v354);
                }
                *(_WORD *)((char *)&v355->__r_.__value_.__l.__data_ + v354) = 46;
                v357 = *(char *)(v329 + 23);
                if (v357 >= 0)
                  v358 = (const std::string::value_type *)v329;
                else
                  v358 = *(const std::string::value_type **)v329;
                if (v357 >= 0)
                  v359 = *(unsigned __int8 *)(v329 + 23);
                else
                  v359 = *(_QWORD *)(v329 + 8);
                v360 = std::string::append(&__p, v358, v359);
                v361 = *(_OWORD *)&v360->__r_.__value_.__l.__data_;
                v811.__r_.__value_.__r.__words[2] = v360->__r_.__value_.__r.__words[2];
                *(_OWORD *)&v811.__r_.__value_.__l.__data_ = v361;
                v360->__r_.__value_.__l.__size_ = 0;
                v360->__r_.__value_.__r.__words[2] = 0;
                v360->__r_.__value_.__r.__words[0] = 0;
                google::protobuf::DescriptorBuilder::AddError((uint64_t)v786, (uint64_t)&v811, (uint64_t)v317, 7, "Uninterpreted option is missing name or value.");
                if (SHIBYTE(v811.__r_.__value_.__r.__words[2]) < 0)
                  operator delete(v811.__r_.__value_.__l.__data_);
                if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
                  operator delete(__p.__r_.__value_.__l.__data_);
              }
              if ((_QWORD)v825)
              {
                *((_QWORD *)&v825 + 1) = v825;
                operator delete((void *)v825);
              }
              v316 = (uint64_t *)(v780 + 8);
              if (SHIBYTE(v810) < 0)
                operator delete(v809[0]);
              v235 = v777;
            }
            google::protobuf::DescriptorBuilder::AddSymbol((uint64_t)v786, *v316, 0, *(_QWORD *)v780, v235, 6, v780);
            v227 = v773 + 1;
          }
          while (v773 + 1 < *((int *)a2 + 26));
        }
        v368 = *((_DWORD *)v159 + 32);
        *(_DWORD *)(v2 + 56) = v368;
        *(_QWORD *)(v2 + 128) = google::protobuf::DescriptorPool::Tables::AllocateBytes(*((google::protobuf::DescriptorPool::Tables **)v786 + 1), 152 * v368);
        if (*((int *)v159 + 32) >= 1)
        {
          v369 = 0;
          v370 = 0;
          do
          {
            google::protobuf::DescriptorBuilder::BuildFieldOrExtension(v786, *(const google::protobuf::FieldDescriptorProto **)(*((_QWORD *)v159 + 17) + 8 * v370++ + 8), 0, (google::protobuf::FieldDescriptor *)(*(_QWORD *)(v2 + 128) + v369), 1);
            v369 += 152;
          }
          while (v370 < *((int *)v159 + 32));
        }
        *(_QWORD *)(v2 + 136) = 0;
        if ((*((_BYTE *)v159 + 16) & 8) == 0)
          goto LABEL_638;
        v371 = (_QWORD *)*((_QWORD *)v159 + 25);
        v372 = operator new(4uLL);
        *v372 = 8;
        v826[0] = v372 + 1;
        v373 = *(const void ***)(v2 + 8);
        v374 = (size_t)v373[1];
        v375 = *((unsigned __int8 *)v373 + 23);
        *(_QWORD *)&v825 = v372;
        *((_QWORD *)&v825 + 1) = v372 + 1;
        if ((v375 & 0x80u) == 0)
          v376 = v375;
        else
          v376 = v374;
        std::string::basic_string[abi:ne180100]((uint64_t)v809, v376 + 6);
        if (v810 >= 0)
          v377 = v809;
        else
          v377 = (void **)v809[0];
        if (v376)
        {
          if (*((char *)v373 + 23) >= 0)
            v378 = v373;
          else
            v378 = *v373;
          memmove(v377, v378, v376);
        }
        strcpy((char *)v377 + v376, ".dummy");
        v379 = *(__int128 **)v2;
        std::string::basic_string[abi:ne180100]<0>(&v808, "google.protobuf.FileOptions");
        v380 = (_QWORD *)*((_QWORD *)v786 + 1);
        v381 = (int *)operator new();
        google::protobuf::FileOptions::FileOptions((google::protobuf::FileOptions *)v381, 0);
        v382 = v380[31];
        v383 = (int **)v380[30];
        if ((unint64_t)v383 >= v382)
        {
          v385 = (_QWORD *)v380[29];
          v386 = v383 - (int **)v385;
          v387 = v386 + 1;
          if ((unint64_t)(v386 + 1) >> 61)
            std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
          v388 = v382 - (_QWORD)v385;
          if (v388 >> 2 > v387)
            v387 = v388 >> 2;
          v389 = (char *)((unint64_t)v388 >= 0x7FFFFFFFFFFFFFF8 ? 0x1FFFFFFFFFFFFFFFLL : v387);
          v813 = v380 + 31;
          if (v389)
          {
            v389 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::unique_ptr<google::protobuf::Message>>>((unint64_t)v389);
            v385 = (_QWORD *)v380[29];
            v383 = (int **)v380[30];
          }
          else
          {
            v390 = 0;
          }
          v391 = (int **)&v389[8 * v386];
          v392 = &v389[8 * v390];
          v812 = v392;
          *v391 = v381;
          v811.__r_.__value_.__r.__words[2] = (std::string::size_type)(v391 + 1);
          if (v383 == v385)
          {
            v384 = v391 + 1;
          }
          else
          {
            do
            {
              v393 = *--v383;
              *v383 = 0;
              *--v391 = v393;
            }
            while (v383 != v385);
            v384 = (_QWORD *)v811.__r_.__value_.__r.__words[2];
            v392 = (char *)v812;
          }
          v394 = *(_OWORD *)(v380 + 29);
          v380[29] = v391;
          v380[30] = v384;
          *(_OWORD *)&v811.__r_.__value_.__r.__words[1] = v394;
          v395 = (void *)v380[31];
          v380[31] = v392;
          v812 = v395;
          v811.__r_.__value_.__r.__words[0] = v394;
          std::__split_buffer<std::unique_ptr<google::protobuf::Message>>::~__split_buffer((uint64_t)&v811);
        }
        else
        {
          *v383 = v381;
          v384 = v383 + 1;
        }
        v380[30] = v384;
        if (google::protobuf::internal::ExtensionSet::IsInitialized((google::protobuf::internal::ExtensionSet *)(v371 + 2))
          && (google::protobuf::internal::AllAreInitialized<google::protobuf::UninterpretedOption>((uint64_t)(v371 + 6)) & 1) != 0)
        {
          google::protobuf::MessageLite::SerializeAsString((google::protobuf::MessageLite *)v371, (uint64_t)&v811);
          v396 = (google::protobuf::UnknownFieldSet *)google::protobuf::MessageLite::ParseFrom<(google::protobuf::MessageLite::ParseFlags)1,std::string>((google::protobuf::MessageLite *)v381, (uint64_t *)&v811);
          if (SHIBYTE(v811.__r_.__value_.__r.__words[2]) < 0)
            operator delete(v811.__r_.__value_.__l.__data_);
          *(_QWORD *)(v2 + 136) = v381;
          if (v381[14] >= 1)
          {
            v396 = (google::protobuf::UnknownFieldSet *)v815;
            if (v815)
            {
              v816[0] = v815;
              operator delete(v815);
            }
            if (SHIBYTE(v814) < 0)
              operator delete(v812);
            if (SHIBYTE(v811.__r_.__value_.__r.__words[2]) < 0)
              operator delete(v811.__r_.__value_.__l.__data_);
          }
          v398 = v371[1];
          if ((v398 & 1) != 0)
            v399 = (uint64_t *)((v398 & 0xFFFFFFFFFFFFFFFELL) + 8);
          else
            v399 = (uint64_t *)google::protobuf::UnknownFieldSet::default_instance(v396);
          if (*v399 != v399[1])
          {
            v400 = *((_QWORD *)v786 + 1);
            google::protobuf::StringPiece::StringPiece<std::allocator<char>>(&__p, (uint64_t *)&v808, v397);
            *(_OWORD *)&v811.__r_.__value_.__l.__data_ = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
            v401 = std::__hash_table<std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>,std::__unordered_map_hasher<google::protobuf::StringPiece,std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>,google::protobuf::hash<google::protobuf::StringPiece>,std::equal_to<google::protobuf::StringPiece>,true>,std::__unordered_map_equal<google::protobuf::StringPiece,std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>,std::equal_to<google::protobuf::StringPiece>,google::protobuf::hash<google::protobuf::StringPiece>,true>,std::allocator<std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>>>::find<google::protobuf::StringPiece>((_QWORD *)(v400 + 304), &v811.__r_.__value_.__l.__data_);
            if (v401)
            {
              v402 = v401 + 4;
              v403 = (const google::protobuf::Descriptor **)(v401 + 5);
            }
            else
            {
              v402 = &qword_1ECDBB718;
              v403 = (const google::protobuf::Descriptor **)&qword_1ECDBB720;
            }
            if (*(_DWORD *)v402 == 1)
            {
              v413 = *v399;
              v412 = v399[1];
              if ((int)((unint64_t)(v412 - *v399) >> 4) >= 1)
              {
                v414 = 0;
                v415 = 0;
                v416 = *v403;
                do
                {
                  v417 = google::protobuf::DescriptorPool::InternalFindExtensionByNumberNoLock(*(google::protobuf::DescriptorPool **)v786, v416, *(_DWORD *)(v413 + v414));
                  if (v417)
                  {
                    std::__tree<google::protobuf::FileDescriptor const*>::__erase_unique<google::protobuf::FileDescriptor const*>(v776, *(_QWORD *)(v417 + 40));
                    v413 = *v399;
                    v412 = v399[1];
                  }
                  ++v415;
                  v414 += 16;
                }
                while (v415 < (int)((unint64_t)(v412 - v413) >> 4));
              }
            }
          }
        }
        else
        {
          if (v810 >= 0)
            v404 = HIBYTE(v810);
          else
            v404 = (size_t)v809[1];
          std::string::basic_string[abi:ne180100]((uint64_t)&__p, v404 + 1);
          if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
            v405 = &__p;
          else
            v405 = (std::string *)__p.__r_.__value_.__r.__words[0];
          if (v404)
          {
            if (v810 >= 0)
              v406 = v809;
            else
              v406 = (void **)v809[0];
            memmove(v405, v406, v404);
          }
          *(_WORD *)((char *)&v405->__r_.__value_.__l.__data_ + v404) = 46;
          v407 = *((char *)v379 + 23);
          if (v407 >= 0)
            v408 = (const std::string::value_type *)v379;
          else
            v408 = *(const std::string::value_type **)v379;
          if (v407 >= 0)
            v409 = *((unsigned __int8 *)v379 + 23);
          else
            v409 = *((_QWORD *)v379 + 1);
          v410 = std::string::append(&__p, v408, v409);
          v411 = *(_OWORD *)&v410->__r_.__value_.__l.__data_;
          v811.__r_.__value_.__r.__words[2] = v410->__r_.__value_.__r.__words[2];
          *(_OWORD *)&v811.__r_.__value_.__l.__data_ = v411;
          v410->__r_.__value_.__l.__size_ = 0;
          v410->__r_.__value_.__r.__words[2] = 0;
          v410->__r_.__value_.__r.__words[0] = 0;
          google::protobuf::DescriptorBuilder::AddError((uint64_t)v786, (uint64_t)&v811, (uint64_t)v371, 7, "Uninterpreted option is missing name or value.");
          if (SHIBYTE(v811.__r_.__value_.__r.__words[2]) < 0)
            operator delete(v811.__r_.__value_.__l.__data_);
          if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
            operator delete(__p.__r_.__value_.__l.__data_);
        }
        if (SHIBYTE(v808.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v808.__r_.__value_.__l.__data_);
        if (SHIBYTE(v810) < 0)
          operator delete(v809[0]);
        operator delete(v372);
        if (!*(_QWORD *)(v2 + 136))
        {
LABEL_638:
          if (atomic_load(scc_info_FileOptions_google_2fprotobuf_2fdescriptor_2eproto))
            google::protobuf::internal::InitSCCImpl(scc_info_FileOptions_google_2fprotobuf_2fdescriptor_2eproto);
          *(_QWORD *)(v2 + 136) = &google::protobuf::_FileOptions_default_instance_;
        }
        if (*(int *)(v2 + 44) >= 1)
        {
          v419 = 0;
          v420 = 0;
          do
          {
            google::protobuf::DescriptorBuilder::CrossLinkMessage((google::protobuf::DescriptorPool::Tables **)v786, (google::protobuf::Descriptor *)(*(_QWORD *)(v2 + 104) + v419), *(const google::protobuf::DescriptorProto **)(*((_QWORD *)v159 + 8) + 8 * v420++ + 8));
            v419 += 144;
          }
          while (v420 < *(int *)(v2 + 44));
        }
        if (*(int *)(v2 + 56) >= 1)
        {
          v421 = 0;
          v422 = 0;
          do
          {
            google::protobuf::DescriptorBuilder::CrossLinkField(v786, (google::protobuf::FieldDescriptor *)(*(_QWORD *)(v2 + 128) + v421), *(const google::protobuf::FieldDescriptorProto **)(*((_QWORD *)v159 + 17) + 8 * v422++ + 8));
            v421 += 152;
          }
          while (v422 < *(int *)(v2 + 56));
        }
        if (*(int *)(v2 + 48) >= 1)
        {
          v423 = 0;
          v424 = 0;
          do
          {
            google::protobuf::DescriptorBuilder::CrossLinkEnum(*(_QWORD *)(v2 + 112) + v423);
            ++v424;
            v423 += 80;
          }
          while (v424 < *(int *)(v2 + 48));
        }
        if (*(int *)(v2 + 52) >= 1)
        {
          v425 = 0;
          do
          {
            v426 = *(_QWORD *)(v2 + 120);
            v427 = *(_QWORD *)(*((_QWORD *)v159 + 14) + 8 * (_QWORD)v425 + 8);
            v428 = v426 + 48 * (_QWORD)v425;
            v430 = *(_QWORD *)(v428 + 24);
            v429 = (_QWORD *)(v428 + 24);
            if (!v430)
            {
              if (atomic_load(scc_info_ServiceOptions_google_2fprotobuf_2fdescriptor_2eproto))
                google::protobuf::internal::InitSCCImpl(scc_info_ServiceOptions_google_2fprotobuf_2fdescriptor_2eproto);
              *v429 = &google::protobuf::_ServiceOptions_default_instance_;
            }
            v783 = v425;
            v432 = v426 + 48 * (_QWORD)v425;
            v434 = *(_DWORD *)(v432 + 40);
            v433 = (int *)(v432 + 40);
            if (v434 >= 1)
            {
              v435 = 0;
              v436 = 0;
              v437 = (uint64_t *)(v426 + 48 * (_QWORD)v425 + 32);
              do
              {
                v438 = *v437;
                v439 = *(_QWORD *)(*(_QWORD *)(v427 + 40) + 8 * v436 + 8);
                v440 = *v437 + v435;
                if (!*(_QWORD *)(v440 + 88))
                {
                  if (atomic_load(scc_info_MethodOptions_google_2fprotobuf_2fdescriptor_2eproto))
                    google::protobuf::internal::InitSCCImpl(scc_info_MethodOptions_google_2fprotobuf_2fdescriptor_2eproto);
                  *(_QWORD *)(v440 + 88) = &google::protobuf::_MethodOptions_default_instance_;
                }
                v442 = google::protobuf::DescriptorBuilder::LookupSymbol((uint64_t *)v786, (std::string *)(*(_QWORD *)(v439 + 32) & 0xFFFFFFFFFFFFFFFELL), *(_QWORD *)(v440 + 8), 0, 0, *(_BYTE *)(*(_QWORD *)v786 + 41) == 0);
                if (v442 == 1)
                {
                  google::protobuf::internal::LazyDescriptor::Set((google::protobuf::internal::LazyDescriptor *)(v438 + v435 + 24), v443);
                }
                else if (v442)
                {
                  v446 = *(_QWORD *)(v440 + 8);
                  std::operator+<char>();
                  v447 = std::string::append(&__p, "\" is not a message type.");
                  v448 = *(_OWORD *)&v447->__r_.__value_.__l.__data_;
                  v811.__r_.__value_.__r.__words[2] = v447->__r_.__value_.__r.__words[2];
                  *(_OWORD *)&v811.__r_.__value_.__l.__data_ = v448;
                  v447->__r_.__value_.__l.__size_ = 0;
                  v447->__r_.__value_.__r.__words[2] = 0;
                  v447->__r_.__value_.__r.__words[0] = 0;
                  google::protobuf::DescriptorBuilder::AddError((uint64_t)v786, v446, v439, 5, (uint64_t)&v811);
                  if (SHIBYTE(v811.__r_.__value_.__r.__words[2]) < 0)
                    operator delete(v811.__r_.__value_.__l.__data_);
                  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
                    operator delete(__p.__r_.__value_.__l.__data_);
                }
                else
                {
                  v445 = *(_QWORD *)(v439 + 32);
                  if (*(_BYTE *)(*(_QWORD *)v786 + 41))
                  {
                    google::protobuf::StringPiece::StringPiece<std::allocator<char>>(&v825, (uint64_t *)(v445 & 0xFFFFFFFFFFFFFFFELL), v444);
                    google::protobuf::internal::LazyDescriptor::SetLazy((_QWORD *)(v438 + v435 + 24), v825, *((uint64_t *)&v825 + 1), *((_QWORD *)v786 + 10));
                  }
                  else
                  {
                    google::protobuf::DescriptorBuilder::AddNotDefinedError((uint64_t)v786, *(_QWORD *)(v440 + 8), v439, 5, v445 & 0xFFFFFFFFFFFFFFFELL);
                  }
                }
                v449 = google::protobuf::DescriptorBuilder::LookupSymbol((uint64_t *)v786, (std::string *)(*(_QWORD *)(v439 + 40) & 0xFFFFFFFFFFFFFFFELL), *(_QWORD *)(v440 + 8), 0, 0, *(_BYTE *)(*(_QWORD *)v786 + 41) == 0);
                if (v449 == 1)
                {
                  google::protobuf::internal::LazyDescriptor::Set((google::protobuf::internal::LazyDescriptor *)(v438 + v435 + 56), v450);
                }
                else if (v449)
                {
                  v453 = *(_QWORD *)(v440 + 8);
                  std::operator+<char>();
                  v454 = std::string::append(&__p, "\" is not a message type.");
                  v455 = *(_OWORD *)&v454->__r_.__value_.__l.__data_;
                  v811.__r_.__value_.__r.__words[2] = v454->__r_.__value_.__r.__words[2];
                  *(_OWORD *)&v811.__r_.__value_.__l.__data_ = v455;
                  v454->__r_.__value_.__l.__size_ = 0;
                  v454->__r_.__value_.__r.__words[2] = 0;
                  v454->__r_.__value_.__r.__words[0] = 0;
                  google::protobuf::DescriptorBuilder::AddError((uint64_t)v786, v453, v439, 6, (uint64_t)&v811);
                  if (SHIBYTE(v811.__r_.__value_.__r.__words[2]) < 0)
                    operator delete(v811.__r_.__value_.__l.__data_);
                  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
                    operator delete(__p.__r_.__value_.__l.__data_);
                }
                else
                {
                  v452 = *(_QWORD *)(v439 + 40);
                  if (*(_BYTE *)(*(_QWORD *)v786 + 41))
                  {
                    google::protobuf::StringPiece::StringPiece<std::allocator<char>>(&v811, (uint64_t *)(v452 & 0xFFFFFFFFFFFFFFFELL), v451);
                    google::protobuf::internal::LazyDescriptor::SetLazy((_QWORD *)(v438 + v435 + 56), (uint64_t)v811.__r_.__value_.__l.__data_, v811.__r_.__value_.__l.__size_, *((_QWORD *)v786 + 10));
                  }
                  else
                  {
                    google::protobuf::DescriptorBuilder::AddNotDefinedError((uint64_t)v786, *(_QWORD *)(v440 + 8), v439, 6, v452 & 0xFFFFFFFFFFFFFFFELL);
                  }
                }
                ++v436;
                v435 += 104;
              }
              while (v436 < *v433);
            }
            v425 = (google::protobuf::internal::RepeatedPtrFieldBase *)((char *)v783 + 1);
            v2 = (uint64_t)Bytes;
            v159 = a2;
          }
          while ((uint64_t)v783 + 1 < *((int *)Bytes + 13));
        }
        if (*((_BYTE *)v786 + 48))
        {
          v456 = 1;
          goto LABEL_901;
        }
        v814 = 0;
        v813 = 0;
        v811.__r_.__value_.__r.__words[0] = (std::string::size_type)v786;
        v812 = &v813;
        v816[0] = 0;
        v815 = v816;
        v816[1] = 0;
        v816[2] = &off_1E1BF81B8;
        v816[3] = 0;
        v817 = 0;
        v457 = operator new();
        *(_OWORD *)v457 = 0u;
        *(_OWORD *)(v457 + 16) = 0u;
        *(_DWORD *)(v457 + 32) = 1065353216;
        v818 = v457;
        v819 = 850045863;
        v820 = 0u;
        v821 = 0u;
        v822 = 0u;
        v823 = 0;
        if (!v811.__r_.__value_.__r.__words[0])
        {
          LODWORD(__p.__r_.__value_.__l.__data_) = 3;
          __p.__r_.__value_.__l.__size_ = (std::string::size_type)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libp"
                                                                  "rotobuf/src/google/protobuf/descriptor.cc";
          LODWORD(__p.__r_.__value_.__r.__words[2]) = 6381;
          memset(&v807, 0, sizeof(v807));
          std::string::append(&v807, "CHECK failed: builder_: ");
          google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&__p);
          if (SHIBYTE(v807.__r_.__value_.__r.__words[2]) < 0)
            operator delete(v807.__r_.__value_.__l.__data_);
        }
        v458 = (_QWORD *)*((_QWORD *)v786 + 3);
        if (v458 == *((_QWORD **)v786 + 4))
          goto LABEL_769;
        while (1)
        {
          v460 = (const google::protobuf::Message *)v458[9];
          v459 = (google::protobuf::Message *)v458[10];
          v811.__r_.__value_.__l.__size_ = (std::string::size_type)v458;
          v461 = (*(uint64_t (**)(google::protobuf::Message *))(*(_QWORD *)v459 + 152))(v459);
          std::string::basic_string[abi:ne180100]<0>(&__p, "uninterpreted_option");
          FieldByName = google::protobuf::Descriptor::FindFieldByName(v461, (uint64_t *)&__p, v462);
          v464 = (const google::protobuf::FieldDescriptor *)FieldByName;
          if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
          {
            operator delete(__p.__r_.__value_.__l.__data_);
            if (v464)
              goto LABEL_696;
          }
          else if (FieldByName)
          {
            goto LABEL_696;
          }
          LODWORD(__p.__r_.__value_.__l.__data_) = 3;
          __p.__r_.__value_.__l.__size_ = (std::string::size_type)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libp"
                                                                  "rotobuf/src/google/protobuf/descriptor.cc";
          LODWORD(__p.__r_.__value_.__r.__words[2]) = 6400;
          memset(&v807, 0, sizeof(v807));
          std::string::append(&v807, "CHECK failed: uninterpreted_options_field != nullptr: ");
          std::string::append(&v807, "No field named \"uninterpreted_option\" in the Options proto.");
          google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&__p);
          if (SHIBYTE(v807.__r_.__value_.__r.__words[2]) < 0)
            operator delete(v807.__r_.__value_.__l.__data_);
LABEL_696:
          (*(void (**)(google::protobuf::Message *))(*(_QWORD *)v459 + 152))(v459);
          google::protobuf::Reflection::ClearField(v465, v459, v464, v466, v467);
          v468 = (const void *)v458[6];
          v469 = v458[7];
          v825 = 0uLL;
          v826[0] = 0;
          std::vector<int>::__init_with_size[abi:ne180100]<int *,int *>(&v825, v468, v469, (v469 - (uint64_t)v468) >> 2);
          v470 = *((_DWORD *)v464 + 17);
          v471 = (char *)*((_QWORD *)&v825 + 1);
          if (*((_QWORD *)&v825 + 1) >= v826[0])
          {
            v473 = (char *)v825;
            v474 = (uint64_t)(*((_QWORD *)&v825 + 1) - v825) >> 2;
            v475 = v474 + 1;
            if ((unint64_t)(v474 + 1) >> 62)
              std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
            v476 = v826[0] - v825;
            if ((uint64_t)(v826[0] - v825) >> 1 > v475)
              v475 = v476 >> 1;
            if ((unint64_t)v476 >= 0x7FFFFFFFFFFFFFFCLL)
              v477 = 0x3FFFFFFFFFFFFFFFLL;
            else
              v477 = v475;
            if (v477)
            {
              v478 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<unsigned int>>((uint64_t)v826, v477);
              v471 = (char *)*((_QWORD *)&v825 + 1);
              v473 = (char *)v825;
            }
            else
            {
              v478 = 0;
            }
            v479 = &v478[4 * v474];
            *(_DWORD *)v479 = v470;
            v472 = v479 + 4;
            while (v471 != v473)
            {
              v480 = *((_DWORD *)v471 - 1);
              v471 -= 4;
              *((_DWORD *)v479 - 1) = v480;
              v479 -= 4;
            }
            *(_QWORD *)&v825 = v479;
            *((_QWORD *)&v825 + 1) = v472;
            v826[0] = &v478[4 * v477];
            if (v473)
              operator delete(v473);
          }
          else
          {
            **((_DWORD **)&v825 + 1) = v470;
            v472 = v471 + 4;
          }
          *((_QWORD *)&v825 + 1) = v472;
          v481 = (*(uint64_t (**)(const google::protobuf::Message *))(*(_QWORD *)v460 + 152))(v460);
          std::string::basic_string[abi:ne180100]<0>(&__p, "uninterpreted_option");
          v483 = google::protobuf::Descriptor::FindFieldByName(v481, (uint64_t *)&__p, v482);
          v484 = (const google::protobuf::FieldDescriptor *)v483;
          if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
          {
            operator delete(__p.__r_.__value_.__l.__data_);
            if (!v484)
            {
LABEL_716:
              LODWORD(__p.__r_.__value_.__l.__data_) = 3;
              __p.__r_.__value_.__l.__size_ = (std::string::size_type)"/Library/Caches/com.apple.xbs/Sources/GeoServices/"
                                                                      "libprotobuf/src/google/protobuf/descriptor.cc";
              LODWORD(__p.__r_.__value_.__r.__words[2]) = 6411;
              memset(&v807, 0, sizeof(v807));
              std::string::append(&v807, "CHECK failed: original_uninterpreted_options_field != nullptr: ");
              std::string::append(&v807, "No field named \"uninterpreted_option\" in the Options proto.");
              google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&__p);
              if (SHIBYTE(v807.__r_.__value_.__r.__words[2]) < 0)
                operator delete(v807.__r_.__value_.__l.__data_);
            }
          }
          else if (!v483)
          {
            goto LABEL_716;
          }
          (*(void (**)(const google::protobuf::Message *))(*(_QWORD *)v460 + 152))(v460);
          v488 = google::protobuf::Reflection::FieldSize(v485, v460, v484, v486, v487);
          if (v488 < 1)
          {
LABEL_738:
            *(_OWORD *)&v811.__r_.__value_.__r.__words[1] = 0uLL;
            v502 = (google::protobuf::Message *)(*(uint64_t (**)(google::protobuf::Message *))(*(_QWORD *)v459 + 24))(v459);
            (*(void (**)(google::protobuf::Message *))(*(_QWORD *)v459 + 152))(v459);
            google::protobuf::Reflection::Swap(v503, v502, v459);
            memset(&__p, 0, sizeof(__p));
            if (!google::protobuf::MessageLite::AppendPartialToString((uint64_t)v502, &__p)
              || (google::protobuf::MessageLite::ParseFrom<(google::protobuf::MessageLite::ParseFlags)1,std::string>(v459, (uint64_t *)&__p) & 1) == 0)
            {
              v504 = v811.__r_.__value_.__r.__words[0];
              google::protobuf::Message::ShortDebugString(v502, (uint64_t)&v804);
              v505 = std::string::insert(&v804, 0, "Some options could not be correctly parsed using the proto descriptors compiled into this binary.\nUnparsed options: ");
              v506 = *(_OWORD *)&v505->__r_.__value_.__l.__data_;
              v805.__r_.__value_.__r.__words[2] = v505->__r_.__value_.__r.__words[2];
              *(_OWORD *)&v805.__r_.__value_.__l.__data_ = v506;
              v505->__r_.__value_.__l.__size_ = 0;
              v505->__r_.__value_.__r.__words[2] = 0;
              v505->__r_.__value_.__r.__words[0] = 0;
              v507 = std::string::append(&v805, "\nParsing attempt:  ");
              v508 = *(_OWORD *)&v507->__r_.__value_.__l.__data_;
              v808.__r_.__value_.__r.__words[2] = v507->__r_.__value_.__r.__words[2];
              *(_OWORD *)&v808.__r_.__value_.__l.__data_ = v508;
              v507->__r_.__value_.__l.__size_ = 0;
              v507->__r_.__value_.__r.__words[2] = 0;
              v507->__r_.__value_.__r.__words[0] = 0;
              google::protobuf::Message::ShortDebugString(v459, (uint64_t)v802);
              if ((v803 & 0x80u) == 0)
                v509 = v802;
              else
                v509 = (void **)v802[0];
              if ((v803 & 0x80u) == 0)
                v510 = v803;
              else
                v510 = (std::string::size_type)v802[1];
              v511 = std::string::append(&v808, (const std::string::value_type *)v509, v510);
              v512 = *(_OWORD *)&v511->__r_.__value_.__l.__data_;
              v810 = v511->__r_.__value_.__r.__words[2];
              *(_OWORD *)v809 = v512;
              v511->__r_.__value_.__l.__size_ = 0;
              v511->__r_.__value_.__r.__words[2] = 0;
              v511->__r_.__value_.__r.__words[0] = 0;
              google::protobuf::DescriptorBuilder::AddError(v504, (uint64_t)(v458 + 3), (uint64_t)v460, 10, (uint64_t)v809);
              if (SHIBYTE(v810) < 0)
                operator delete(v809[0]);
              if ((char)v803 < 0)
                operator delete(v802[0]);
              if (SHIBYTE(v808.__r_.__value_.__r.__words[2]) < 0)
                operator delete(v808.__r_.__value_.__l.__data_);
              if (SHIBYTE(v805.__r_.__value_.__r.__words[2]) < 0)
                operator delete(v805.__r_.__value_.__l.__data_);
              if (SHIBYTE(v804.__r_.__value_.__r.__words[2]) < 0)
                operator delete(v804.__r_.__value_.__l.__data_);
              (*(void (**)(google::protobuf::Message *))(*(_QWORD *)v459 + 152))(v459);
              google::protobuf::Reflection::Swap(v513, v502, v459);
            }
            if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
              operator delete(__p.__r_.__value_.__l.__data_);
            if (v502)
              (*(void (**)(google::protobuf::Message *))(*(_QWORD *)v502 + 8))(v502);
          }
          else
          {
            v489 = 0;
            v490 = (int *)*((_QWORD *)&v825 + 1);
            while (1)
            {
              if ((unint64_t)v490 >= v826[0])
              {
                v492 = (int *)v825;
                v493 = (uint64_t)((uint64_t)v490 - v825) >> 2;
                v494 = v493 + 1;
                if ((unint64_t)(v493 + 1) >> 62)
                  std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
                v495 = v826[0] - v825;
                if ((uint64_t)(v826[0] - v825) >> 1 > v494)
                  v494 = v495 >> 1;
                if ((unint64_t)v495 >= 0x7FFFFFFFFFFFFFFCLL)
                  v496 = 0x3FFFFFFFFFFFFFFFLL;
                else
                  v496 = v494;
                if (v496)
                {
                  v497 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<unsigned int>>((uint64_t)v826, v496);
                  v490 = (int *)*((_QWORD *)&v825 + 1);
                  v492 = (int *)v825;
                }
                else
                {
                  v497 = 0;
                }
                v498 = (int *)&v497[4 * v493];
                *v498 = v489;
                v491 = v498 + 1;
                while (v490 != v492)
                {
                  v499 = *--v490;
                  *--v498 = v499;
                }
                *(_QWORD *)&v825 = v498;
                *((_QWORD *)&v825 + 1) = v491;
                v826[0] = &v497[4 * v496];
                if (v492)
                  operator delete(v492);
              }
              else
              {
                *v490 = v489;
                v491 = v490 + 1;
              }
              *((_QWORD *)&v825 + 1) = v491;
              (*(void (**)(const google::protobuf::Message *))(*(_QWORD *)v460 + 152))(v460);
              v811.__r_.__value_.__r.__words[2] = google::protobuf::Reflection::GetRepeatedMessage(v500, v460, v484, v489, v501);
              if ((google::protobuf::DescriptorBuilder::OptionInterpreter::InterpretSingleOption((uint64_t)&v811, v459, (uint64_t)&v825, (uint64_t)(v458 + 6)) & 1) == 0)break;
              v490 = (int *)(*((_QWORD *)&v825 + 1) - 4);
              *((_QWORD *)&v825 + 1) -= 4;
              if (++v489 == v488)
                goto LABEL_738;
            }
            *(_OWORD *)&v811.__r_.__value_.__r.__words[1] = 0uLL;
          }
          if ((_QWORD)v825)
          {
            *((_QWORD *)&v825 + 1) = v825;
            operator delete((void *)v825);
          }
          v458 += 11;
          if (v458 == *((_QWORD **)v786 + 4))
          {
            v514 = (_QWORD *)*((_QWORD *)v786 + 3);
            if (v458 != v514)
            {
              v515 = v770;
              do
              {
                v458 -= 11;
              }
              while (v458 != v514);
              v458 = v514;
LABEL_770:
              *((_QWORD *)v786 + 4) = v458;
              v2 = (uint64_t)Bytes;
              v159 = a2;
              if (!v515 || !v814)
                goto LABEL_900;
              memset(&__p, 0, sizeof(__p));
              v825 = 0uLL;
              v826[0] = 0;
              if (!*((_DWORD *)v515 + 6))
                goto LABEL_899;
              v516 = v515;
              v517 = 0;
              v518 = 0;
              v784 = (google::protobuf::SourceCodeInfo *)((char *)v516 + 16);
              v519 = *((_QWORD *)v516 + 4);
              if (v519)
                v520 = (const google::protobuf::SourceCodeInfo_Location **)(v519 + 8);
              else
                v520 = 0;
              while (2)
              {
                v521 = (int *)v825;
                if ((v518 & 1) != 0)
                {
                  v522 = (uint64_t)(*((_QWORD *)&v825 + 1) - v825) >> 2;
                  if (v522 <= *((int *)*v520 + 6))
                  {
                    if (*((_QWORD *)&v825 + 1) != (_QWORD)v825)
                    {
                      v557 = (int *)*((_QWORD *)*v520 + 4);
                      if (v522 <= 1)
                        v522 = 1;
                      v558 = (int *)v825;
                      do
                      {
                        v560 = *v557++;
                        v559 = v560;
                        v561 = *v558++;
                        if (v559 != v561)
                          goto LABEL_778;
                      }
                      while (--v522);
                    }
                    v518 = 1;
LABEL_883:
                    ++v520;
                    v582 = *((_QWORD *)v770 + 4);
                    if (v582)
                      v583 = v582 + 8;
                    else
                      v583 = 0;
                    v584 = *((int *)v770 + 6);
                    if (v520 == (const google::protobuf::SourceCodeInfo_Location **)(v583 + 8 * v584))
                    {
                      v585 = (v784 != (google::protobuf::internal::RepeatedPtrFieldBase *)&__p) & v517;
                      v2 = (uint64_t)Bytes;
                      v159 = a2;
                      v586 = v770;
                      if ((v585 & 1) != 0)
                      {
                        v587 = *((unsigned int *)v770 + 6);
                        if ((int)v584 >= 1)
                        {
                          v588 = (google::protobuf::SourceCodeInfo_Location **)(v582 + 8);
                          do
                          {
                            google::protobuf::SourceCodeInfo_Location::Clear(*v588++);
                            --v587;
                          }
                          while (v587);
                          v586 = v770;
                          *((_DWORD *)v770 + 6) = 0;
                        }
                        v589 = __p.__r_.__value_.__r.__words[1];
                        if (LODWORD(__p.__r_.__value_.__r.__words[1]))
                        {
                          v590 = __p.__r_.__value_.__r.__words[2];
                          v591 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend(v784, __p.__r_.__value_.__r.__words[1]);
                          google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<google::protobuf::SourceCodeInfo_Location>::TypeHandler>((google::protobuf::internal::ArenaImpl **)v784, (google::protobuf::SourceCodeInfo_Location **)v591, (const google::protobuf::SourceCodeInfo_Location **)(v590 + 8), v589, **((_DWORD **)v586 + 4) - *((_DWORD *)v586 + 6));
                          v592 = *((_DWORD *)v586 + 6) + v589;
                          *((_DWORD *)v586 + 6) = v592;
                          v593 = (signed int *)*((_QWORD *)v586 + 4);
                          if (*v593 < v592)
                            *v593 = v592;
                        }
                      }
                      if ((_QWORD)v825)
                      {
                        *((_QWORD *)&v825 + 1) = v825;
                        operator delete((void *)v825);
                      }
LABEL_899:
                      google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<google::protobuf::SourceCodeInfo_Location>::TypeHandler>(&__p);
LABEL_900:
                      google::protobuf::DescriptorBuilder::OptionInterpreter::~OptionInterpreter((google::protobuf::DescriptorBuilder::OptionInterpreter *)&v811);
                      v456 = *((unsigned __int8 *)v786 + 48);
                      if (*((_BYTE *)v786 + 48))
                      {
LABEL_901:
                        if (*((int *)v159 + 14) >= 1)
                        {
                          v594 = 0;
                          v595 = 0;
                          do
                          {
                            google::protobuf::DescriptorBuilder::DetectMapConflicts(v786, (const google::protobuf::Descriptor *)(*(_QWORD *)(v2 + 104) + v594), *(const google::protobuf::DescriptorProto **)(*((_QWORD *)v159 + 8) + 8 * v595++ + 8));
                            v594 += 144;
                          }
                          while (v595 < *((int *)v159 + 14));
                          v456 = *((unsigned __int8 *)v786 + 48);
                        }
                        goto LABEL_905;
                      }
                      if (*(_BYTE *)(*(_QWORD *)v786 + 41))
                        goto LABEL_1199;
                      google::protobuf::DescriptorBuilder::ValidateFileOptions(v786, (google::protobuf::FileDescriptor *)v2, v159);
                      v456 = *((unsigned __int8 *)v786 + 48);
                      if (*((_BYTE *)v786 + 48))
                        goto LABEL_901;
LABEL_905:
                      if (!v456)
                      {
LABEL_1199:
                        if (!*((_QWORD *)v786 + 17) || *(_BYTE *)(*(_QWORD *)v786 + 41))
                          goto LABEL_907;
                        v674 = std::__tree<std::__value_type<std::string,std::pair<void const*,int>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::pair<void const*,int>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::pair<void const*,int>>>>::find<std::string>(*(_QWORD *)v786 + 48, (const void **)(*((_QWORD *)v159 + 22) & 0xFFFFFFFFFFFFFFFELL));
                        v675 = *(_QWORD *)v786 + 56 != v674 && *(_BYTE *)(v674 + 56) != 0;
                        v763 = *v776;
                        if (*v776 != v769)
                        {
                          do
                          {
                            std::operator+<char>();
                            v764 = std::string::append(&__p, " is unused.");
                            v765 = *(_OWORD *)&v764->__r_.__value_.__l.__data_;
                            v811.__r_.__value_.__r.__words[2] = v764->__r_.__value_.__r.__words[2];
                            *(_OWORD *)&v811.__r_.__value_.__l.__data_ = v765;
                            v764->__r_.__value_.__l.__size_ = 0;
                            v764->__r_.__value_.__r.__words[2] = 0;
                            v764->__r_.__value_.__r.__words[0] = 0;
                            if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
                              operator delete(__p.__r_.__value_.__l.__data_);
                            v766 = *(_QWORD *)v763[4];
                            if (v675)
                              google::protobuf::DescriptorBuilder::AddError((uint64_t)v786, v766, (uint64_t)v159, 9, (uint64_t)&v811);
                            else
                              google::protobuf::DescriptorBuilder::AddWarning((uint64_t)v786, v766, (uint64_t)v159, 9, (uint64_t)&v811);
                            if (SHIBYTE(v811.__r_.__value_.__r.__words[2]) < 0)
                              operator delete(v811.__r_.__value_.__l.__data_);
                            v767 = (uint64_t *)v763[1];
                            if (v767)
                            {
                              do
                              {
                                v768 = v767;
                                v767 = (uint64_t *)*v767;
                              }
                              while (v767);
                            }
                            else
                            {
                              do
                              {
                                v768 = (uint64_t *)v763[2];
                                v119 = *v768 == (_QWORD)v763;
                                v763 = v768;
                              }
                              while (!v119);
                            }
                            v763 = v768;
                          }
                          while (v768 != v769);
                        }
                        if (!*((_BYTE *)v786 + 48))
                        {
LABEL_907:
                          std::__tree<std::__value_type<unsigned int,unsigned long>,std::__map_value_compare<unsigned int,std::__value_type<unsigned int,unsigned long>,std::less<unsigned int>,true>,std::allocator<std::__value_type<unsigned int,unsigned long>>>::destroy((uint64_t)&v795, v796);
                          std::__tree<std::__value_type<std::pair<std::string,int>,std::pair<void const*,int>>,std::__map_value_compare<std::pair<std::string,int>,std::__value_type<std::pair<std::string,int>,std::pair<void const*,int>>,std::less<std::pair<std::string,int>>,true>,std::allocator<std::__value_type<std::pair<std::string,int>,std::pair<void const*,int>>>>::destroy((uint64_t)&v798, v799[0]);
                          goto LABEL_908;
                        }
                      }
LABEL_906:
                      v2 = 0;
                      goto LABEL_907;
                    }
                    continue;
                  }
                }
                break;
              }
LABEL_778:
              *((_QWORD *)&v825 + 1) = v825;
              v523 = *v520;
              if (*((int *)*v520 + 6) < 1)
              {
                v535 = (int *)v825;
              }
              else
              {
                v524 = 0;
                do
                {
                  v525 = *(_DWORD *)(*((_QWORD *)v523 + 4) + 4 * v524);
                  if ((unint64_t)v521 >= v826[0])
                  {
                    v526 = (int *)v825;
                    v527 = (uint64_t)((uint64_t)v521 - v825) >> 2;
                    v528 = v527 + 1;
                    if ((unint64_t)(v527 + 1) >> 62)
                      std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
                    v529 = v826[0] - v825;
                    if ((uint64_t)(v826[0] - v825) >> 1 > v528)
                      v528 = v529 >> 1;
                    if ((unint64_t)v529 >= 0x7FFFFFFFFFFFFFFCLL)
                      v530 = 0x3FFFFFFFFFFFFFFFLL;
                    else
                      v530 = v528;
                    if (v530)
                    {
                      v531 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<unsigned int>>((uint64_t)v826, v530);
                      v521 = (int *)*((_QWORD *)&v825 + 1);
                      v526 = (int *)v825;
                    }
                    else
                    {
                      v531 = 0;
                    }
                    v532 = &v531[4 * v527];
                    *(_DWORD *)v532 = v525;
                    v533 = (int *)(v532 + 4);
                    while (v521 != v526)
                    {
                      v534 = *--v521;
                      *((_DWORD *)v532 - 1) = v534;
                      v532 -= 4;
                    }
                    *(_QWORD *)&v825 = v532;
                    *((_QWORD *)&v825 + 1) = v533;
                    v826[0] = &v531[4 * v530];
                    if (v526)
                      operator delete(v526);
                    v521 = v533;
                  }
                  else
                  {
                    *v521++ = v525;
                  }
                  *((_QWORD *)&v825 + 1) = v521;
                  ++v524;
                  v523 = *v520;
                }
                while (v524 < *((int *)*v520 + 6));
                v535 = (int *)v825;
              }
              v536 = v813;
              if (v813)
              {
                v537 = &v813;
                do
                {
                  if (v535 == v521)
                  {
LABEL_811:
                    v537 = v536;
                  }
                  else
                  {
                    v538 = (int *)v536[4];
                    v539 = v535 + 1;
                    while (v538 != (int *)v536[5])
                    {
                      v540 = *v538;
                      v541 = *(v539 - 1);
                      if (*v538 < v541)
                        break;
                      ++v538;
                      if (v541 < v540 || v539++ == v521)
                        goto LABEL_811;
                    }
                    ++v536;
                  }
                  v536 = (_QWORD *)*v536;
                }
                while (v536);
                if (&v813 != v537)
                {
                  v544 = v537[4];
                  v543 = v537[5];
                  if (v544 != v543)
                  {
                    v545 = v544 + 4;
                    while (v535 != v521)
                    {
                      v546 = *v535;
                      v547 = *(_DWORD *)(v545 - 4);
                      if (*v535 < v547)
                        break;
                      ++v535;
                      v548 = v547 < v546 || v545 == v543;
                      v545 += 4;
                      if (v548)
                        goto LABEL_824;
                    }
                    goto LABEL_828;
                  }
LABEL_824:
                  if ((v517 & 1) == 0)
                  {
                    v565 = *((_DWORD *)v770 + 6);
                    if (v565 > SLODWORD(__p.__r_.__value_.__r.__words[1]))
                      google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)&__p, v565 - LODWORD(__p.__r_.__value_.__r.__words[1]));
                    v566 = *((_QWORD *)v770 + 4);
                    if (v566)
                      v567 = (const google::protobuf::SourceCodeInfo_Location **)(v566 + 8);
                    else
                      v567 = 0;
                    while (2)
                    {
                      if (v567 == v520)
                        goto LABEL_825;
                      v568 = *v567;
                      v569 = (int *)__p.__r_.__value_.__r.__words[2];
                      if (__p.__r_.__value_.__r.__words[2])
                      {
                        v570 = __p.__r_.__value_.__r.__words[1];
                        v571 = *(_DWORD *)__p.__r_.__value_.__r.__words[2];
                        if (SLODWORD(__p.__r_.__value_.__r.__words[1]) < *(_DWORD *)__p.__r_.__value_.__r.__words[2])
                        {
                          ++LODWORD(__p.__r_.__value_.__r.__words[1]);
                          v572 = *(google::protobuf::SourceCodeInfo_Location **)(__p.__r_.__value_.__r.__words[2]
                                                                               + 8 * v570
                                                                               + 8);
LABEL_865:
                          if (v568 != v572)
                          {
                            google::protobuf::SourceCodeInfo_Location::Clear(v572);
                            google::protobuf::SourceCodeInfo_Location::MergeFrom(v572, v568);
                          }
                          ++v567;
                          continue;
                        }
                        if (v571 == HIDWORD(__p.__r_.__value_.__r.__words[1]))
                        {
LABEL_861:
                          v562 = __OFSUB__(v571, v570);
                          v573 = v571 - v570;
                          if (v573 < 0 == v562)
                          {
                            google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)&__p, v573 + 1);
                            v569 = (int *)__p.__r_.__value_.__r.__words[2];
                          }
                          v571 = *v569;
                        }
                        *v569 = v571 + 1;
                        v572 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::SourceCodeInfo_Location>((google::protobuf::internal::ArenaImpl *)__p.__r_.__value_.__l.__data_);
                        v574 = SLODWORD(__p.__r_.__value_.__r.__words[1]);
                        ++LODWORD(__p.__r_.__value_.__r.__words[1]);
                        *(_QWORD *)(__p.__r_.__value_.__r.__words[2] + 8 * v574 + 8) = v572;
                        goto LABEL_865;
                      }
                      break;
                    }
                    v571 = HIDWORD(__p.__r_.__value_.__r.__words[1]);
                    v570 = __p.__r_.__value_.__r.__words[1];
                    goto LABEL_861;
                  }
LABEL_825:
                  v549 = (int *)__p.__r_.__value_.__r.__words[2];
                  if (!__p.__r_.__value_.__r.__words[2])
                  {
                    v551 = HIDWORD(__p.__r_.__value_.__r.__words[1]);
                    v550 = __p.__r_.__value_.__r.__words[1];
                    goto LABEL_870;
                  }
                  v550 = __p.__r_.__value_.__r.__words[1];
                  v551 = *(_DWORD *)__p.__r_.__value_.__r.__words[2];
                  if (SLODWORD(__p.__r_.__value_.__r.__words[1]) < *(_DWORD *)__p.__r_.__value_.__r.__words[2])
                  {
                    ++LODWORD(__p.__r_.__value_.__r.__words[1]);
                    v552 = *(google::protobuf::SourceCodeInfo_Location **)(__p.__r_.__value_.__r.__words[2]
                                                                         + 8 * v550
                                                                         + 8);
                    goto LABEL_874;
                  }
                  if (v551 == HIDWORD(__p.__r_.__value_.__r.__words[1]))
                  {
LABEL_870:
                    v562 = __OFSUB__(v551, v550);
                    v575 = v551 - v550;
                    if (v575 < 0 == v562)
                    {
                      google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)&__p, v575 + 1);
                      v549 = (int *)__p.__r_.__value_.__r.__words[2];
                    }
                    v551 = *v549;
                  }
                  *v549 = v551 + 1;
                  v552 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::SourceCodeInfo_Location>((google::protobuf::internal::ArenaImpl *)__p.__r_.__value_.__l.__data_);
                  v576 = SLODWORD(__p.__r_.__value_.__r.__words[1]);
                  ++LODWORD(__p.__r_.__value_.__r.__words[1]);
                  *(_QWORD *)(__p.__r_.__value_.__r.__words[2] + 8 * v576 + 8) = v552;
LABEL_874:
                  v577 = *v520;
                  if (*v520 != v552)
                  {
                    google::protobuf::SourceCodeInfo_Location::Clear(v552);
                    google::protobuf::SourceCodeInfo_Location::MergeFrom(v552, v577);
                  }
                  *((_DWORD *)v552 + 6) = 0;
                  v579 = (int *)v537[7];
                  v578 = (int *)v537[8];
                  if (v579 != v578)
                  {
                    v580 = 0;
                    do
                    {
                      v581 = *v579;
                      if (v580 == *((_DWORD *)v552 + 7))
                      {
                        google::protobuf::RepeatedField<int>::Reserve((unsigned int *)v552 + 6, v580 + 1);
                        *(_DWORD *)(*((_QWORD *)v552 + 4) + 4 * v580) = v581;
                        v578 = (int *)v537[8];
                      }
                      else
                      {
                        *(_DWORD *)(*((_QWORD *)v552 + 4) + 4 * v580) = v581;
                      }
                      *((_DWORD *)v552 + 6) = ++v580;
                      ++v579;
                    }
                    while (v579 != v578);
                    v518 = 1;
                    v517 = 1;
                    goto LABEL_883;
                  }
                  v518 = 1;
LABEL_849:
                  v517 = 1;
                  goto LABEL_883;
                }
              }
LABEL_828:
              if ((v517 & 1) == 0)
              {
                v518 = 0;
                v517 = 0;
                goto LABEL_883;
              }
              v553 = (int *)__p.__r_.__value_.__r.__words[2];
              if (__p.__r_.__value_.__r.__words[2])
              {
                v554 = __p.__r_.__value_.__r.__words[1];
                v555 = *(_DWORD *)__p.__r_.__value_.__r.__words[2];
                if (SLODWORD(__p.__r_.__value_.__r.__words[1]) < *(_DWORD *)__p.__r_.__value_.__r.__words[2])
                {
                  ++LODWORD(__p.__r_.__value_.__r.__words[1]);
                  v556 = *(google::protobuf::SourceCodeInfo_Location **)(__p.__r_.__value_.__r.__words[2]
                                                                       + 8 * v554
                                                                       + 8);
LABEL_846:
                  if (v523 != v556)
                  {
                    google::protobuf::SourceCodeInfo_Location::Clear(v556);
                    google::protobuf::SourceCodeInfo_Location::MergeFrom(v556, v523);
                  }
                  v518 = 0;
                  goto LABEL_849;
                }
                if (v555 == HIDWORD(__p.__r_.__value_.__r.__words[1]))
                {
LABEL_842:
                  v562 = __OFSUB__(v555, v554);
                  v563 = v555 - v554;
                  if (v563 < 0 == v562)
                  {
                    google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)&__p, v563 + 1);
                    v553 = (int *)__p.__r_.__value_.__r.__words[2];
                  }
                  v555 = *v553;
                }
                *v553 = v555 + 1;
                v556 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::SourceCodeInfo_Location>((google::protobuf::internal::ArenaImpl *)__p.__r_.__value_.__l.__data_);
                v564 = SLODWORD(__p.__r_.__value_.__r.__words[1]);
                ++LODWORD(__p.__r_.__value_.__r.__words[1]);
                *(_QWORD *)(__p.__r_.__value_.__r.__words[2] + 8 * v564 + 8) = v556;
                goto LABEL_846;
              }
              v555 = HIDWORD(__p.__r_.__value_.__r.__words[1]);
              v554 = __p.__r_.__value_.__r.__words[1];
              goto LABEL_842;
            }
LABEL_769:
            v515 = v770;
            goto LABEL_770;
          }
        }
      }
    }
    else if (!*(_BYTE *)(v176 + 23))
    {
      goto LABEL_257;
    }
    google::protobuf::DescriptorBuilder::AddPackage((uint64_t)v786, (std::string *)v176, (uint64_t)v159, v158);
    v158 = (uint64_t)Bytes;
    v159 = a2;
    goto LABEL_257;
  }
  while (1)
  {
    v147 = v146[1];
    if (v147 == v138)
      break;
    if (v144 > 1)
    {
      if (v147 >= v142)
        v147 %= v142;
    }
    else
    {
      v147 &= v142 - 1;
    }
    if (v147 != v2)
      goto LABEL_214;
LABEL_213:
    v146 = (_QWORD *)*v146;
    if (!v146)
      goto LABEL_214;
  }
  if (v146[3] != *((_QWORD *)&v137 + 1))
    goto LABEL_213;
  if (*((uint64_t *)&v137 + 1) >= 1)
  {
    v148 = (const void *)v146[2];
    if ((const void *)v137 != v148)
    {
      if (memcmp(v148, (const void *)v137, *((size_t *)&v137 + 1)))
        goto LABEL_213;
    }
  }
  google::protobuf::DescriptorBuilder::AddError((uint64_t)v786, *((_QWORD *)a2 + 22) & 0xFFFFFFFFFFFFFFFELL, (uint64_t)a2, 10, "A file with this name is already in the pool.");
  v2 = 0;
LABEL_908:
  v596 = *((_QWORD *)v786 + 11);
  v597 = *((_QWORD *)v786 + 1);
  if (v2)
  {
    v598 = *(_QWORD *)(v597 + 408);
    v599 = *(_QWORD *)(v597 + 416) - 32;
    *(_QWORD *)(v597 + 416) = v599;
    if (v598 == v599)
    {
      *(_QWORD *)(v597 + 440) = *(_QWORD *)(v597 + 432);
      *(_QWORD *)(v597 + 464) = *(_QWORD *)(v597 + 456);
      *(_QWORD *)(v597 + 488) = *(_QWORD *)(v597 + 480);
    }
    *(_BYTE *)(v2 + 65) = 1;
    return v2;
  }
  v785 = *(google::protobuf::internal::RepeatedPtrFieldBase **)(v597 + 416);
  v600 = *((int *)v785 - 3);
  v601 = *(_QWORD *)(v597 + 432);
  if (v600 >= (*(_QWORD *)(v597 + 440) - v601) >> 3)
    goto LABEL_968;
  while (2)
  {
    google::protobuf::StringPiece::StringPiece((google::protobuf::StringPiece *)&v811, *(const char **)(v601 + 8 * v600));
    v602 = *(_OWORD *)&v811.__r_.__value_.__l.__data_;
    if ((uint64_t)v811.__r_.__value_.__l.__size_ < 1)
    {
      v603 = 0;
    }
    else
    {
      v603 = 0;
      v604 = (char *)v811.__r_.__value_.__r.__words[0];
      do
      {
        v605 = *v604++;
        v603 = 5 * v603 + v605;
      }
      while ((unint64_t)v604 < v811.__r_.__value_.__r.__words[0] + v811.__r_.__value_.__l.__size_);
    }
    v606 = *(int8x8_t *)(v597 + 312);
    if (!*(_QWORD *)&v606)
      goto LABEL_967;
    v607 = (uint8x8_t)vcnt_s8(v606);
    v607.i16[0] = vaddlv_u8(v607);
    v608 = v607.u32[0];
    if (v607.u32[0] > 1uLL)
    {
      v609 = v603;
      if (v603 >= *(_QWORD *)&v606)
        v609 = v603 % *(_QWORD *)&v606;
    }
    else
    {
      v609 = (*(_QWORD *)&v606 - 1) & v603;
    }
    v610 = *(_QWORD *)(v597 + 304);
    v611 = *(_QWORD ***)(v610 + 8 * v609);
    if (!v611)
      goto LABEL_967;
    v612 = *v611;
    if (!*v611)
      goto LABEL_967;
    v787 = *(_QWORD *)&v606 - 1;
    while (2)
    {
      v613 = v612[1];
      if (v613 != v603)
      {
        if (v608 > 1)
        {
          if (v613 >= *(_QWORD *)&v606)
            v613 %= *(_QWORD *)&v606;
        }
        else
        {
          v613 &= v787;
        }
        if (v613 != v609)
          goto LABEL_967;
        goto LABEL_937;
      }
      if (v612[3] != *((_QWORD *)&v602 + 1)
        || *((uint64_t *)&v602 + 1) >= 1
        && (v614 = (const void *)v612[2], (const void *)v602 != v614)
        && memcmp(v614, (const void *)v602, *((size_t *)&v602 + 1)))
      {
LABEL_937:
        v612 = (_QWORD *)*v612;
        if (!v612)
          goto LABEL_967;
        continue;
      }
      break;
    }
    if (v608 > 1)
    {
      if (v603 >= *(_QWORD *)&v606)
        v603 %= *(_QWORD *)&v606;
    }
    else
    {
      v603 &= v787;
    }
    v615 = (_QWORD *)*v612;
    v616 = *(_QWORD **)(v610 + 8 * v603);
    do
    {
      v617 = v616;
      v616 = (_QWORD *)*v616;
    }
    while (v616 != v612);
    if (v617 == (_QWORD *)(v597 + 320))
      goto LABEL_956;
    v618 = v617[1];
    if (v608 > 1)
    {
      if (v618 >= *(_QWORD *)&v606)
        v618 %= *(_QWORD *)&v606;
    }
    else
    {
      v618 &= v787;
    }
    if (v618 == v603)
    {
LABEL_958:
      if (v615)
      {
        v619 = v615[1];
        goto LABEL_960;
      }
    }
    else
    {
LABEL_956:
      if (!v615)
        goto LABEL_957;
      v619 = v615[1];
      if (v608 > 1)
      {
        v620 = v615[1];
        if (v619 >= *(_QWORD *)&v606)
          v620 = v619 % *(_QWORD *)&v606;
      }
      else
      {
        v620 = v619 & v787;
      }
      if (v620 != v603)
      {
LABEL_957:
        *(_QWORD *)(v610 + 8 * v603) = 0;
        v615 = (_QWORD *)*v612;
        goto LABEL_958;
      }
LABEL_960:
      if (v608 > 1)
      {
        if (v619 >= *(_QWORD *)&v606)
          v619 %= *(_QWORD *)&v606;
      }
      else
      {
        v619 &= v787;
      }
      if (v619 != v603)
      {
        *(_QWORD *)(*(_QWORD *)(v597 + 304) + 8 * v619) = v617;
        v615 = (_QWORD *)*v612;
      }
    }
    *v617 = v615;
    *v612 = 0;
    --*(_QWORD *)(v597 + 328);
    operator delete(v612);
LABEL_967:
    ++v600;
    v601 = *(_QWORD *)(v597 + 432);
    if (v600 < (*(_QWORD *)(v597 + 440) - v601) >> 3)
      continue;
    break;
  }
LABEL_968:
  v621 = *((int *)v785 - 2);
  v622 = *(_QWORD *)(v597 + 456);
  if (v621 >= (*(_QWORD *)(v597 + 464) - v622) >> 3)
    goto LABEL_1024;
  while (2)
  {
    google::protobuf::StringPiece::StringPiece((google::protobuf::StringPiece *)&v811, *(const char **)(v622 + 8 * v621));
    v623 = *(_OWORD *)&v811.__r_.__value_.__l.__data_;
    if ((uint64_t)v811.__r_.__value_.__l.__size_ < 1)
    {
      v624 = 0;
    }
    else
    {
      v624 = 0;
      v625 = (char *)v811.__r_.__value_.__r.__words[0];
      do
      {
        v626 = *v625++;
        v624 = 5 * v624 + v626;
      }
      while ((unint64_t)v625 < v811.__r_.__value_.__r.__words[0] + v811.__r_.__value_.__l.__size_);
    }
    v627 = *(int8x8_t *)(v597 + 352);
    if (!*(_QWORD *)&v627)
      goto LABEL_1023;
    v628 = (uint8x8_t)vcnt_s8(v627);
    v628.i16[0] = vaddlv_u8(v628);
    v629 = v628.u32[0];
    if (v628.u32[0] > 1uLL)
    {
      v630 = v624;
      if (v624 >= *(_QWORD *)&v627)
        v630 = v624 % *(_QWORD *)&v627;
    }
    else
    {
      v630 = (*(_QWORD *)&v627 - 1) & v624;
    }
    v631 = *(_QWORD *)(v597 + 344);
    v632 = *(_QWORD ***)(v631 + 8 * v630);
    if (!v632)
      goto LABEL_1023;
    v633 = *v632;
    if (!*v632)
      goto LABEL_1023;
    v788 = *(_QWORD *)&v627 - 1;
    while (2)
    {
      v634 = v633[1];
      if (v634 != v624)
      {
        if (v629 > 1)
        {
          if (v634 >= *(_QWORD *)&v627)
            v634 %= *(_QWORD *)&v627;
        }
        else
        {
          v634 &= v788;
        }
        if (v634 != v630)
          goto LABEL_1023;
        goto LABEL_993;
      }
      if (v633[3] != *((_QWORD *)&v623 + 1)
        || *((uint64_t *)&v623 + 1) >= 1
        && (v635 = (const void *)v633[2], (const void *)v623 != v635)
        && memcmp(v635, (const void *)v623, *((size_t *)&v623 + 1)))
      {
LABEL_993:
        v633 = (_QWORD *)*v633;
        if (!v633)
          goto LABEL_1023;
        continue;
      }
      break;
    }
    if (v629 > 1)
    {
      if (v624 >= *(_QWORD *)&v627)
        v624 %= *(_QWORD *)&v627;
    }
    else
    {
      v624 &= v788;
    }
    v636 = (_QWORD *)*v633;
    v637 = *(_QWORD **)(v631 + 8 * v624);
    do
    {
      v638 = v637;
      v637 = (_QWORD *)*v637;
    }
    while (v637 != v633);
    if (v638 == (_QWORD *)(v597 + 360))
      goto LABEL_1012;
    v639 = v638[1];
    if (v629 > 1)
    {
      if (v639 >= *(_QWORD *)&v627)
        v639 %= *(_QWORD *)&v627;
    }
    else
    {
      v639 &= v788;
    }
    if (v639 == v624)
    {
LABEL_1014:
      if (v636)
      {
        v640 = v636[1];
        goto LABEL_1016;
      }
    }
    else
    {
LABEL_1012:
      if (!v636)
        goto LABEL_1013;
      v640 = v636[1];
      if (v629 > 1)
      {
        v641 = v636[1];
        if (v640 >= *(_QWORD *)&v627)
          v641 = v640 % *(_QWORD *)&v627;
      }
      else
      {
        v641 = v640 & v788;
      }
      if (v641 != v624)
      {
LABEL_1013:
        *(_QWORD *)(v631 + 8 * v624) = 0;
        v636 = (_QWORD *)*v633;
        goto LABEL_1014;
      }
LABEL_1016:
      if (v629 > 1)
      {
        if (v640 >= *(_QWORD *)&v627)
          v640 %= *(_QWORD *)&v627;
      }
      else
      {
        v640 &= v788;
      }
      if (v640 != v624)
      {
        *(_QWORD *)(*(_QWORD *)(v597 + 344) + 8 * v640) = v638;
        v636 = (_QWORD *)*v633;
      }
    }
    *v638 = v636;
    *v633 = 0;
    --*(_QWORD *)(v597 + 368);
    operator delete(v633);
LABEL_1023:
    ++v621;
    v622 = *(_QWORD *)(v597 + 456);
    if (v621 < (*(_QWORD *)(v597 + 464) - v622) >> 3)
      continue;
    break;
  }
LABEL_1024:
  v642 = *((int *)v785 - 1);
  v644 = *(_QWORD *)(v597 + 480);
  v643 = *(_QWORD *)(v597 + 488);
  if (v642 < (v643 - v644) >> 4)
  {
    v645 = (uint64_t **)(v597 + 392);
    do
    {
      v646 = *v645;
      if (*v645)
      {
        v647 = (unint64_t *)(v644 + 16 * v642);
        v648 = *v647;
        v649 = *((_DWORD *)v647 + 2);
        v650 = (uint64_t *)(v597 + 392);
        v651 = *v645;
        do
        {
          v652 = v651[4];
          if (v652 >= v648)
          {
            if (v652 <= v648)
            {
              if (*((_DWORD *)v651 + 10) < v649)
                ++v651;
              else
                v650 = v651;
            }
            else
            {
              v650 = v651;
            }
          }
          else
          {
            ++v651;
          }
          v651 = (uint64_t *)*v651;
        }
        while (v651);
        if (v650 != (uint64_t *)v645)
        {
          v653 = v650[4];
          if (v653 <= v648 && (v653 < v648 || *((_DWORD *)v650 + 10) <= v649))
          {
            v654 = (uint64_t *)v650[1];
            v655 = v650;
            if (v654)
            {
              do
              {
                v656 = v654;
                v654 = (uint64_t *)*v654;
              }
              while (v654);
            }
            else
            {
              do
              {
                v656 = (uint64_t *)v655[2];
                v119 = *v656 == (_QWORD)v655;
                v655 = v656;
              }
              while (!v119);
            }
            if (*(uint64_t **)(v597 + 384) == v650)
              *(_QWORD *)(v597 + 384) = v656;
            --*(_QWORD *)(v597 + 400);
            std::__tree_remove[abi:ne180100]<std::__tree_node_base<void *> *>(v646, v650);
            operator delete(v650);
            v644 = *(_QWORD *)(v597 + 480);
            v643 = *(_QWORD *)(v597 + 488);
          }
        }
      }
      ++v642;
    }
    while (v642 < (v643 - v644) >> 4);
  }
  std::vector<zilch::StringList::Entry>::resize(v597 + 432, *((int *)v785 - 3));
  std::vector<zilch::StringList::Entry>::resize(v597 + 456, *((int *)v785 - 2));
  v657 = v785;
  v658 = *((int *)v785 - 1);
  v660 = *(_QWORD *)(v597 + 480);
  v659 = *(_QWORD *)(v597 + 488);
  v661 = (v659 - v660) >> 4;
  if (v658 <= v661)
  {
    if (v658 < v661)
      *(_QWORD *)(v597 + 488) = v660 + 16 * v658;
  }
  else
  {
    v662 = *(_QWORD *)(v597 + 496);
    if (v658 - v661 <= (v662 - v659) >> 4)
    {
      v676 = v659 + 16 * (v658 - v661);
      do
      {
        *(_QWORD *)v659 = 0;
        *(_DWORD *)(v659 + 8) = 0;
        v659 += 16;
      }
      while (v659 != v676);
      *(_QWORD *)(v597 + 488) = v676;
    }
    else
    {
      if ((v658 & 0x80000000) != 0)
        std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
      v663 = v662 - v660;
      v664 = (v662 - v660) >> 3;
      if (v664 <= v658)
        v664 = *((int *)v785 - 1);
      if (v663 >= 0x7FFFFFFFFFFFFFF0)
        v665 = 0xFFFFFFFFFFFFFFFLL;
      else
        v665 = v664;
      v666 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::pair<google::protobuf::Descriptor const*,int>>>(v665);
      v668 = &v666[16 * v661];
      v669 = &v666[16 * v658];
      v670 = v668;
      do
      {
        *(_QWORD *)v670 = 0;
        *((_DWORD *)v670 + 2) = 0;
        v670 += 16;
      }
      while (v670 != v669);
      v671 = &v666[16 * v667];
      v673 = *(char **)(v597 + 480);
      v672 = *(char **)(v597 + 488);
      if (v672 != v673)
      {
        do
        {
          *((_OWORD *)v668 - 1) = *((_OWORD *)v672 - 1);
          v668 -= 16;
          v672 -= 16;
        }
        while (v672 != v673);
        v672 = *(char **)(v597 + 480);
      }
      v657 = v785;
      *(_QWORD *)(v597 + 480) = v668;
      *(_QWORD *)(v597 + 488) = v669;
      *(_QWORD *)(v597 + 496) = v671;
      if (v672)
        operator delete(v672);
    }
  }
  v677 = *(_QWORD *)(v597 + 208);
  v678 = *(_QWORD *)(v597 + 216);
  v679 = *((int *)v657 - 8);
  v680 = (v678 - v677) >> 3;
  if (v679 <= v680)
  {
    if (v679 < v680)
      std::vector<std::unique_ptr<std::string>>::__base_destruct_at_end[abi:ne180100](v597 + 208, (uint64_t *)(v677 + 8 * v679));
  }
  else
  {
    v681 = v679 - v680;
    v682 = *(_QWORD *)(v597 + 224);
    if (v679 - v680 <= (v682 - v678) >> 3)
    {
      bzero(*(void **)(v597 + 216), 8 * v681);
      *(_QWORD *)(v597 + 216) = v678 + 8 * v681;
    }
    else
    {
      if ((v679 & 0x80000000) != 0)
        std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
      v683 = v682 - v677;
      if (v683 >> 2 > v679)
        v679 = v683 >> 2;
      if ((unint64_t)v683 >= 0x7FFFFFFFFFFFFFF8)
        v684 = 0x1FFFFFFFFFFFFFFFLL;
      else
        v684 = v679;
      v813 = (_QWORD *)(v597 + 224);
      v685 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<zilch::StringList::Entry>>(v597 + 224, v684);
      v686 = &v685[8 * v680];
      v811.__r_.__value_.__r.__words[0] = (std::string::size_type)v685;
      v811.__r_.__value_.__l.__size_ = (std::string::size_type)v686;
      v812 = &v685[8 * v687];
      bzero(v686, 8 * v681);
      v811.__r_.__value_.__r.__words[2] = (std::string::size_type)&v686[8 * v681];
      std::vector<std::unique_ptr<std::string>>::__swap_out_circular_buffer((uint64_t *)(v597 + 208), &v811);
      std::__split_buffer<std::unique_ptr<std::string>>::~__split_buffer((uint64_t)&v811);
      v657 = v785;
    }
  }
  v688 = *((int *)v657 - 7);
  v689 = *(_QWORD *)(v597 + 232);
  v690 = *(_QWORD **)(v597 + 240);
  v691 = ((uint64_t)v690 - v689) >> 3;
  if (v688 <= v691)
  {
    if (v688 < v691)
    {
      v704 = (_QWORD *)(v689 + 8 * v688);
      while (v690 != v704)
      {
        v706 = *--v690;
        v705 = v706;
        *v690 = 0;
        if (v706)
          (*(void (**)(uint64_t))(*(_QWORD *)v705 + 8))(v705);
      }
      *(_QWORD *)(v597 + 240) = v704;
    }
  }
  else
  {
    v692 = v688 - v691;
    v693 = *(_QWORD *)(v597 + 248);
    if (v688 - v691 <= (v693 - (uint64_t)v690) >> 3)
    {
      bzero(*(void **)(v597 + 240), 8 * v692);
      *(_QWORD *)(v597 + 240) = &v690[v692];
    }
    else
    {
      if ((v688 & 0x80000000) != 0)
        std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
      v694 = v693 - v689;
      if (v694 >> 2 > v688)
        v688 = v694 >> 2;
      if ((unint64_t)v694 >= 0x7FFFFFFFFFFFFFF8)
        v695 = 0x1FFFFFFFFFFFFFFFLL;
      else
        v695 = v688;
      v813 = (_QWORD *)(v597 + 248);
      v696 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::unique_ptr<google::protobuf::Message>>>(v695);
      v698 = *(_QWORD **)(v597 + 232);
      v697 = *(_QWORD **)(v597 + 240);
      v699 = &v696[8 * v691];
      v701 = &v696[8 * v700];
      bzero(v699, 8 * v692);
      v702 = &v699[8 * v692];
      while (v697 != v698)
      {
        v703 = *--v697;
        *v697 = 0;
        *((_QWORD *)v699 - 1) = v703;
        v699 -= 8;
      }
      v707 = *(_OWORD *)(v597 + 232);
      *(_QWORD *)(v597 + 232) = v699;
      *(_QWORD *)(v597 + 240) = v702;
      *(_OWORD *)&v811.__r_.__value_.__r.__words[1] = v707;
      v708 = *(void **)(v597 + 248);
      *(_QWORD *)(v597 + 248) = v701;
      v812 = v708;
      v811.__r_.__value_.__r.__words[0] = v707;
      std::__split_buffer<std::unique_ptr<google::protobuf::Message>>::~__split_buffer((uint64_t)&v811);
      v657 = v785;
    }
  }
  v709 = *((int *)v657 - 6);
  v710 = *(_QWORD *)(v597 + 256);
  v711 = *(_QWORD *)(v597 + 264);
  v712 = (v711 - v710) >> 3;
  if (v709 <= v712)
  {
    if (v709 < v712)
      std::vector<std::unique_ptr<std::once_flag>>::__base_destruct_at_end[abi:ne180100](v597 + 256, (_QWORD *)(v710 + 8 * v709));
  }
  else
  {
    v713 = v709 - v712;
    v714 = *(_QWORD *)(v597 + 272);
    if (v709 - v712 <= (v714 - v711) >> 3)
    {
      bzero(*(void **)(v597 + 264), 8 * v713);
      *(_QWORD *)(v597 + 264) = v711 + 8 * v713;
    }
    else
    {
      if ((v709 & 0x80000000) != 0)
        std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
      v715 = v714 - v710;
      if (v715 >> 2 > v709)
        v709 = v715 >> 2;
      if ((unint64_t)v715 >= 0x7FFFFFFFFFFFFFF8)
        v716 = 0x1FFFFFFFFFFFFFFFLL;
      else
        v716 = v709;
      v813 = (_QWORD *)(v597 + 272);
      v717 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::unique_ptr<google::protobuf::Message>>>(v716);
      v719 = *(_QWORD **)(v597 + 256);
      v718 = *(_QWORD **)(v597 + 264);
      v720 = &v717[8 * v712];
      v722 = &v717[8 * v721];
      bzero(v720, 8 * v713);
      v723 = &v720[8 * v713];
      while (v718 != v719)
      {
        v724 = *--v718;
        *v718 = 0;
        *((_QWORD *)v720 - 1) = v724;
        v720 -= 8;
      }
      v725 = *(_OWORD *)(v597 + 256);
      *(_QWORD *)(v597 + 256) = v720;
      *(_QWORD *)(v597 + 264) = v723;
      *(_OWORD *)&v811.__r_.__value_.__r.__words[1] = v725;
      v726 = *(void **)(v597 + 272);
      *(_QWORD *)(v597 + 272) = v722;
      v812 = v726;
      v811.__r_.__value_.__r.__words[0] = v725;
      std::__split_buffer<std::unique_ptr<std::once_flag>>::~__split_buffer((uint64_t)&v811);
      v657 = v785;
    }
  }
  v727 = *((int *)v657 - 5);
  v728 = *(_QWORD *)(v597 + 280);
  v729 = *(google::protobuf::FileDescriptorTables ***)(v597 + 288);
  v730 = ((uint64_t)v729 - v728) >> 3;
  if (v727 <= v730)
  {
    if (v727 < v730)
    {
      v743 = (google::protobuf::FileDescriptorTables **)(v728 + 8 * v727);
      while (v729 != v743)
        std::unique_ptr<google::protobuf::FileDescriptorTables>::reset[abi:ne180100](--v729);
      *(_QWORD *)(v597 + 288) = v743;
    }
  }
  else
  {
    v731 = v727 - v730;
    v732 = *(_QWORD *)(v597 + 296);
    if (v727 - v730 <= (v732 - (uint64_t)v729) >> 3)
    {
      bzero(*(void **)(v597 + 288), 8 * v731);
      *(_QWORD *)(v597 + 288) = &v729[v731];
    }
    else
    {
      if ((v727 & 0x80000000) != 0)
        std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
      v733 = v732 - v728;
      if (v733 >> 2 > v727)
        v727 = v733 >> 2;
      if ((unint64_t)v733 >= 0x7FFFFFFFFFFFFFF8)
        v734 = 0x1FFFFFFFFFFFFFFFLL;
      else
        v734 = v727;
      v813 = (_QWORD *)(v597 + 296);
      v735 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::unique_ptr<google::protobuf::Message>>>(v734);
      v737 = *(_QWORD **)(v597 + 280);
      v736 = *(_QWORD **)(v597 + 288);
      v738 = &v735[8 * v730];
      v740 = &v735[8 * v739];
      bzero(v738, 8 * v731);
      v741 = &v738[8 * v731];
      while (v736 != v737)
      {
        v742 = *--v736;
        *v736 = 0;
        *((_QWORD *)v738 - 1) = v742;
        v738 -= 8;
      }
      v744 = *(_OWORD *)(v597 + 280);
      *(_QWORD *)(v597 + 280) = v738;
      *(_QWORD *)(v597 + 288) = v741;
      *(_OWORD *)&v811.__r_.__value_.__r.__words[1] = v744;
      v745 = *(void **)(v597 + 296);
      *(_QWORD *)(v597 + 296) = v740;
      v812 = v745;
      v811.__r_.__value_.__r.__words[0] = v744;
      std::__split_buffer<std::unique_ptr<google::protobuf::FileDescriptorTables>>::~__split_buffer((uint64_t)&v811);
      v657 = v785;
    }
  }
  v746 = *(_QWORD *)(v597 + 184);
  v747 = *(_QWORD *)(v597 + 192);
  v748 = *((int *)v657 - 4);
  v749 = 0xAAAAAAAAAAAAAAABLL * ((v747 - v746) >> 3);
  v750 = v748 - v749;
  if (v748 <= v749)
  {
    if (v748 < v749)
    {
      v758 = v746 + 24 * (int)v748;
      if (v747 != v758)
      {
        v759 = *(_QWORD *)(v597 + 192);
        do
        {
          v761 = *(void **)(v759 - 24);
          v759 -= 24;
          v760 = v761;
          if (v761)
          {
            *(_QWORD *)(v747 - 16) = v760;
            operator delete(v760);
          }
          v747 = v759;
        }
        while (v759 != v758);
      }
      *(_QWORD *)(v597 + 192) = v758;
    }
  }
  else
  {
    v751 = *(_QWORD *)(v597 + 200);
    if (0xAAAAAAAAAAAAAAABLL * ((v751 - v747) >> 3) >= v750)
    {
      bzero(*(void **)(v597 + 192), 24 * ((24 * v750 - 24) / 0x18) + 24);
      *(_QWORD *)(v597 + 192) = v747 + 24 * ((24 * v750 - 24) / 0x18) + 24;
    }
    else
    {
      if ((v748 & 0x80000000) != 0)
        std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
      v752 = 0xAAAAAAAAAAAAAAABLL * ((v751 - v746) >> 3);
      if (2 * v752 > v748)
        v748 = 2 * v752;
      if (v752 >= 0x555555555555555)
        v753 = 0xAAAAAAAAAAAAAAALL;
      else
        v753 = v748;
      v813 = (_QWORD *)(v597 + 200);
      v754 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::vector<char>>>(v753);
      v755 = &v754[24 * v749];
      v811.__r_.__value_.__r.__words[0] = (std::string::size_type)v754;
      v811.__r_.__value_.__l.__size_ = (std::string::size_type)v755;
      v812 = &v754[24 * v756];
      v757 = 24 * ((24 * v750 - 24) / 0x18) + 24;
      bzero(v755, v757);
      v811.__r_.__value_.__r.__words[2] = (std::string::size_type)&v755[v757];
      std::vector<std::vector<char>>::__swap_out_circular_buffer((_QWORD *)(v597 + 184), &v811);
      std::__split_buffer<std::vector<char>>::~__split_buffer((uint64_t)&v811);
    }
  }
  v2 = 0;
  *(_QWORD *)(v597 + 416) -= 32;
  return v2;
}

void sub_188878F28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,char a37,uint64_t a38,uint64_t a39,char a40,uint64_t a41)
{
  std::__tree<std::__value_type<unsigned int,unsigned long>,std::__map_value_compare<unsigned int,std::__value_type<unsigned int,unsigned long>,std::less<unsigned int>,true>,std::allocator<std::__value_type<unsigned int,unsigned long>>>::destroy((uint64_t)&a37, (_QWORD *)a38);
  std::__tree<std::__value_type<std::pair<std::string,int>,std::pair<void const*,int>>,std::__map_value_compare<std::pair<std::string,int>,std::__value_type<std::pair<std::string,int>,std::pair<void const*,int>>,std::less<std::pair<std::string,int>>,true>,std::allocator<std::__value_type<std::pair<std::string,int>,std::pair<void const*,int>>>>::destroy((uint64_t)&a40, (char *)a41);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::DescriptorBuilder::DescriptorBuilder(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(_QWORD *)a1 = a2;
  *(_QWORD *)(a1 + 8) = a3;
  *(_QWORD *)(a1 + 16) = a4;
  *(_QWORD *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 56) = 0;
  *(_QWORD *)(a1 + 64) = 0;
  *(_QWORD *)(a1 + 72) = 0;
  *(_QWORD *)(a1 + 104) = 0;
  *(_QWORD *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 40) = 0;
  *(_BYTE *)(a1 + 48) = 0;
  *(_QWORD *)(a1 + 96) = a1 + 104;
  *(_QWORD *)(a1 + 136) = 0;
  *(_QWORD *)(a1 + 128) = 0;
  *(_QWORD *)(a1 + 112) = 0;
  *(_QWORD *)(a1 + 120) = a1 + 128;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  std::string::basic_string[abi:ne180100]<0>((_QWORD *)(a1 + 176), "");
  return a1;
}

void sub_18887949C(_Unwind_Exception *a1)
{
  void **v1;
  uint64_t v2;
  void **v3;

  if (*(char *)(v2 + 175) < 0)
    operator delete(*(void **)(v2 + 152));
  std::__tree<std::__value_type<std::pair<google::protobuf::Descriptor const*,int>,google::protobuf::FieldDescriptor const*>,std::__map_value_compare<std::pair<google::protobuf::Descriptor const*,int>,std::__value_type<std::pair<google::protobuf::Descriptor const*,int>,google::protobuf::FieldDescriptor const*>,std::less<std::pair<google::protobuf::Descriptor const*,int>>,true>,std::allocator<std::__value_type<std::pair<google::protobuf::Descriptor const*,int>,google::protobuf::FieldDescriptor const*>>>::destroy(*(_QWORD **)(v2 + 128));
  std::__tree<std::__value_type<std::pair<google::protobuf::Descriptor const*,int>,google::protobuf::FieldDescriptor const*>,std::__map_value_compare<std::pair<google::protobuf::Descriptor const*,int>,std::__value_type<std::pair<google::protobuf::Descriptor const*,int>,google::protobuf::FieldDescriptor const*>,std::less<std::pair<google::protobuf::Descriptor const*,int>>,true>,std::allocator<std::__value_type<std::pair<google::protobuf::Descriptor const*,int>,google::protobuf::FieldDescriptor const*>>>::destroy(*(_QWORD **)(v2 + 104));
  if (*(char *)(v2 + 79) < 0)
    operator delete(*v3);
  _Unwind_Resume(a1);
}

void **std::vector<google::protobuf::`anonymous namespace'::OptionsToInterpret>::~vector[abi:ne180100](void **a1)
{
  void *v2;
  uint64_t v3;
  void *v4;

  v2 = *a1;
  if (*a1)
  {
    v3 = (uint64_t)a1[1];
    v4 = *a1;
    if ((void *)v3 != v2)
    {
      do
      {
        v3 -= 88;
      }
      while ((void *)v3 != v2);
      v4 = *a1;
    }
    a1[1] = v2;
    operator delete(v4);
  }
  return a1;
}

void google::protobuf::DescriptorBuilder::~DescriptorBuilder(void **this)
{
  if (*((char *)this + 199) < 0)
    operator delete(this[22]);
  if (*((char *)this + 175) < 0)
    operator delete(this[19]);
  std::__tree<std::__value_type<std::pair<google::protobuf::Descriptor const*,int>,google::protobuf::FieldDescriptor const*>,std::__map_value_compare<std::pair<google::protobuf::Descriptor const*,int>,std::__value_type<std::pair<google::protobuf::Descriptor const*,int>,google::protobuf::FieldDescriptor const*>,std::less<std::pair<google::protobuf::Descriptor const*,int>>,true>,std::allocator<std::__value_type<std::pair<google::protobuf::Descriptor const*,int>,google::protobuf::FieldDescriptor const*>>>::destroy(this[16]);
  std::__tree<std::__value_type<std::pair<google::protobuf::Descriptor const*,int>,google::protobuf::FieldDescriptor const*>,std::__map_value_compare<std::pair<google::protobuf::Descriptor const*,int>,std::__value_type<std::pair<google::protobuf::Descriptor const*,int>,google::protobuf::FieldDescriptor const*>,std::less<std::pair<google::protobuf::Descriptor const*,int>>,true>,std::allocator<std::__value_type<std::pair<google::protobuf::Descriptor const*,int>,google::protobuf::FieldDescriptor const*>>>::destroy(this[13]);
  if (*((char *)this + 79) < 0)
    operator delete(this[7]);
}

void google::protobuf::DescriptorBuilder::AddError(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  int v9;
  const std::string::value_type *v10;
  std::string::size_type v11;
  int v12;
  const std::string::value_type *v13;
  std::string::size_type v14;
  int v15;
  const std::string::value_type *v16;
  std::string::size_type v17;
  int v18;
  const char *v19;
  int v20;
  std::string __p;

  v8 = *(_QWORD *)(a1 + 16);
  if (v8)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)v8 + 16))(v8, a1 + 56, a2, a3, a4, a5);
  }
  else
  {
    if (!*(_BYTE *)(a1 + 48))
    {
      v18 = 2;
      v19 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/descriptor.cc";
      v20 = 3623;
      memset(&__p, 0, sizeof(__p));
      std::string::append(&__p, "Invalid proto descriptor for file \"");
      v9 = *(char *)(a1 + 79);
      v10 = v9 >= 0 ? (const std::string::value_type *)(a1 + 56) : *(const std::string::value_type **)(a1 + 56);
      v11 = v9 >= 0 ? *(unsigned __int8 *)(a1 + 79) : *(_QWORD *)(a1 + 64);
      std::string::append(&__p, v10, v11);
      std::string::append(&__p, "\":");
      google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v18);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__p.__r_.__value_.__l.__data_);
    }
    v18 = 2;
    v19 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/descriptor.cc";
    v20 = 3626;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "  ");
    v12 = *(char *)(a2 + 23);
    if (v12 >= 0)
      v13 = (const std::string::value_type *)a2;
    else
      v13 = *(const std::string::value_type **)a2;
    if (v12 >= 0)
      v14 = *(unsigned __int8 *)(a2 + 23);
    else
      v14 = *(_QWORD *)(a2 + 8);
    std::string::append(&__p, v13, v14);
    std::string::append(&__p, ": ");
    v15 = *(char *)(a5 + 23);
    if (v15 >= 0)
      v16 = (const std::string::value_type *)a5;
    else
      v16 = *(const std::string::value_type **)a5;
    if (v15 >= 0)
      v17 = *(unsigned __int8 *)(a5 + 23);
    else
      v17 = *(_QWORD *)(a5 + 8);
    std::string::append(&__p, v16, v17);
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v18);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
  *(_BYTE *)(a1 + 48) = 1;
}

void sub_188879748(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void google::protobuf::DescriptorBuilder::AddError(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char *__s)
{
  void *__p[2];
  char v10;

  std::string::basic_string[abi:ne180100]<0>(__p, __s);
  google::protobuf::DescriptorBuilder::AddError(a1, a2, a3, a4, (uint64_t)__p);
  if (v10 < 0)
    operator delete(__p[0]);
}

void sub_1888797DC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void google::protobuf::DescriptorBuilder::AddNotDefinedError(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  std::string *v10;
  __int128 v11;
  uint64_t v12;
  int v13;
  const std::string::value_type *v14;
  std::string::size_type v15;
  std::string *v16;
  __int128 v17;
  std::string *v18;
  __int128 v19;
  int v20;
  const std::string::value_type *v21;
  std::string::size_type v22;
  std::string *v23;
  __int128 v24;
  std::string *v25;
  __int128 v26;
  int v27;
  std::string *v28;
  __int128 v29;
  int v30;
  const std::string::value_type *v31;
  std::string::size_type v32;
  std::string *v33;
  __int128 v34;
  std::string *v35;
  __int128 v36;
  int v37;
  const std::string::value_type *v38;
  std::string::size_type v39;
  std::string *v40;
  __int128 v41;
  std::string *v42;
  __int128 v43;
  void *v44;
  std::string *v45;
  __int128 v46;
  std::string v47;
  std::string v48;
  std::string v49;
  std::string v50;
  std::string v51;
  __int128 v52;
  std::string::size_type v53;

  if (*(_QWORD *)(a1 + 144))
  {
    std::operator+<char>();
    v10 = std::string::append(&v47, "\" seems to be defined in \"");
    v11 = *(_OWORD *)&v10->__r_.__value_.__l.__data_;
    v48.__r_.__value_.__r.__words[2] = v10->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v48.__r_.__value_.__l.__data_ = v11;
    v10->__r_.__value_.__l.__size_ = 0;
    v10->__r_.__value_.__r.__words[2] = 0;
    v10->__r_.__value_.__r.__words[0] = 0;
    v12 = **(_QWORD **)(a1 + 144);
    v13 = *(char *)(v12 + 23);
    if (v13 >= 0)
      v14 = **(const std::string::value_type ***)(a1 + 144);
    else
      v14 = *(const std::string::value_type **)v12;
    if (v13 >= 0)
      v15 = *(unsigned __int8 *)(v12 + 23);
    else
      v15 = *(_QWORD *)(v12 + 8);
    v16 = std::string::append(&v48, v14, v15);
    v17 = *(_OWORD *)&v16->__r_.__value_.__l.__data_;
    v49.__r_.__value_.__r.__words[2] = v16->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v49.__r_.__value_.__l.__data_ = v17;
    v16->__r_.__value_.__l.__size_ = 0;
    v16->__r_.__value_.__r.__words[2] = 0;
    v16->__r_.__value_.__r.__words[0] = 0;
    v18 = std::string::append(&v49, "\", which is not imported by \"");
    v19 = *(_OWORD *)&v18->__r_.__value_.__l.__data_;
    v50.__r_.__value_.__r.__words[2] = v18->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v50.__r_.__value_.__l.__data_ = v19;
    v18->__r_.__value_.__l.__size_ = 0;
    v18->__r_.__value_.__r.__words[2] = 0;
    v18->__r_.__value_.__r.__words[0] = 0;
    v20 = *(char *)(a1 + 79);
    if (v20 >= 0)
      v21 = (const std::string::value_type *)(a1 + 56);
    else
      v21 = *(const std::string::value_type **)(a1 + 56);
    if (v20 >= 0)
      v22 = *(unsigned __int8 *)(a1 + 79);
    else
      v22 = *(_QWORD *)(a1 + 64);
    v23 = std::string::append(&v50, v21, v22);
    v24 = *(_OWORD *)&v23->__r_.__value_.__l.__data_;
    v51.__r_.__value_.__r.__words[2] = v23->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v51.__r_.__value_.__l.__data_ = v24;
    v23->__r_.__value_.__l.__size_ = 0;
    v23->__r_.__value_.__r.__words[2] = 0;
    v23->__r_.__value_.__r.__words[0] = 0;
    v25 = std::string::append(&v51, "\".  To use it here, please add the necessary import.");
    v26 = *(_OWORD *)&v25->__r_.__value_.__l.__data_;
    v53 = v25->__r_.__value_.__r.__words[2];
    v52 = v26;
    v25->__r_.__value_.__l.__size_ = 0;
    v25->__r_.__value_.__r.__words[2] = 0;
    v25->__r_.__value_.__r.__words[0] = 0;
    google::protobuf::DescriptorBuilder::AddError(a1, a2, a3, a4, (uint64_t)&v52);
    if (SHIBYTE(v53) < 0)
      operator delete((void *)v52);
    if (SHIBYTE(v51.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v51.__r_.__value_.__l.__data_);
    if (SHIBYTE(v50.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v50.__r_.__value_.__l.__data_);
    if (SHIBYTE(v49.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v49.__r_.__value_.__l.__data_);
    if (SHIBYTE(v48.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v48.__r_.__value_.__l.__data_);
    if (SHIBYTE(v47.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v47.__r_.__value_.__l.__data_);
    LOBYTE(v27) = *(_BYTE *)(a1 + 199);
LABEL_27:
    if ((v27 & 0x80) != 0)
    {
      if (!*(_QWORD *)(a1 + 184))
        return;
    }
    else if (!(_BYTE)v27)
    {
      return;
    }
    std::operator+<char>();
    v28 = std::string::append(&v47, "\" is resolved to \"");
    v29 = *(_OWORD *)&v28->__r_.__value_.__l.__data_;
    v48.__r_.__value_.__r.__words[2] = v28->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v48.__r_.__value_.__l.__data_ = v29;
    v28->__r_.__value_.__l.__size_ = 0;
    v28->__r_.__value_.__r.__words[2] = 0;
    v28->__r_.__value_.__r.__words[0] = 0;
    v30 = *(char *)(a1 + 199);
    if (v30 >= 0)
      v31 = (const std::string::value_type *)(a1 + 176);
    else
      v31 = *(const std::string::value_type **)(a1 + 176);
    if (v30 >= 0)
      v32 = *(unsigned __int8 *)(a1 + 199);
    else
      v32 = *(_QWORD *)(a1 + 184);
    v33 = std::string::append(&v48, v31, v32);
    v34 = *(_OWORD *)&v33->__r_.__value_.__l.__data_;
    v49.__r_.__value_.__r.__words[2] = v33->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v49.__r_.__value_.__l.__data_ = v34;
    v33->__r_.__value_.__l.__size_ = 0;
    v33->__r_.__value_.__r.__words[2] = 0;
    v33->__r_.__value_.__r.__words[0] = 0;
    v35 = std::string::append(&v49, "\", which is not defined. The innermost scope is searched first in name resolution. Consider using a leading '.'(i.e., \".");
    v36 = *(_OWORD *)&v35->__r_.__value_.__l.__data_;
    v50.__r_.__value_.__r.__words[2] = v35->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v50.__r_.__value_.__l.__data_ = v36;
    v35->__r_.__value_.__l.__size_ = 0;
    v35->__r_.__value_.__r.__words[2] = 0;
    v35->__r_.__value_.__r.__words[0] = 0;
    v37 = *(char *)(a5 + 23);
    if (v37 >= 0)
      v38 = (const std::string::value_type *)a5;
    else
      v38 = *(const std::string::value_type **)a5;
    if (v37 >= 0)
      v39 = *(unsigned __int8 *)(a5 + 23);
    else
      v39 = *(_QWORD *)(a5 + 8);
    v40 = std::string::append(&v50, v38, v39);
    v41 = *(_OWORD *)&v40->__r_.__value_.__l.__data_;
    v51.__r_.__value_.__r.__words[2] = v40->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v51.__r_.__value_.__l.__data_ = v41;
    v40->__r_.__value_.__l.__size_ = 0;
    v40->__r_.__value_.__r.__words[2] = 0;
    v40->__r_.__value_.__r.__words[0] = 0;
    v42 = std::string::append(&v51, "\") to start from the outermost scope.");
    v43 = *(_OWORD *)&v42->__r_.__value_.__l.__data_;
    v53 = v42->__r_.__value_.__r.__words[2];
    v52 = v43;
    v42->__r_.__value_.__l.__size_ = 0;
    v42->__r_.__value_.__r.__words[2] = 0;
    v42->__r_.__value_.__r.__words[0] = 0;
    google::protobuf::DescriptorBuilder::AddError(a1, a2, a3, a4, (uint64_t)&v52);
    if (SHIBYTE(v53) < 0)
      operator delete((void *)v52);
    if (SHIBYTE(v51.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v51.__r_.__value_.__l.__data_);
    if (SHIBYTE(v50.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v50.__r_.__value_.__l.__data_);
    if (SHIBYTE(v49.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v49.__r_.__value_.__l.__data_);
    if (SHIBYTE(v48.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v48.__r_.__value_.__l.__data_);
    if (SHIBYTE(v47.__r_.__value_.__r.__words[2]) < 0)
    {
      v44 = (void *)v47.__r_.__value_.__r.__words[0];
LABEL_63:
      operator delete(v44);
      return;
    }
    return;
  }
  v27 = *(char *)(a1 + 199);
  if (v27 < 0)
  {
    if (*(_QWORD *)(a1 + 184))
      goto LABEL_27;
  }
  else if (*(_BYTE *)(a1 + 199))
  {
    goto LABEL_27;
  }
  std::operator+<char>();
  v45 = std::string::append(&v51, "\" is not defined.");
  v46 = *(_OWORD *)&v45->__r_.__value_.__l.__data_;
  v53 = v45->__r_.__value_.__r.__words[2];
  v52 = v46;
  v45->__r_.__value_.__l.__size_ = 0;
  v45->__r_.__value_.__r.__words[2] = 0;
  v45->__r_.__value_.__r.__words[0] = 0;
  google::protobuf::DescriptorBuilder::AddError(a1, a2, a3, a4, (uint64_t)&v52);
  if (SHIBYTE(v53) < 0)
    operator delete((void *)v52);
  if (SHIBYTE(v51.__r_.__value_.__r.__words[2]) < 0)
  {
    v44 = (void *)v51.__r_.__value_.__r.__words[0];
    goto LABEL_63;
  }
}

void sub_188879BF8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,uint64_t a36,void *__p,uint64_t a38,int a39,__int16 a40,char a41,char a42)
{
  uint64_t v42;

  if (*(char *)(v42 - 73) < 0)
    operator delete(*(void **)(v42 - 96));
  if (a42 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void google::protobuf::DescriptorBuilder::AddWarning(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  const std::string::value_type *v9;
  const std::string::value_type *v10;
  int v11;
  const std::string::value_type *v12;
  std::string::size_type v13;
  int v14;
  const std::string::value_type *v15;
  std::string::size_type v16;
  int v17;
  const std::string::value_type *v18;
  std::string::size_type v19;
  int v20;
  const char *v21;
  int v22;
  std::string __p;

  v7 = *(_QWORD *)(a1 + 16);
  if (v7)
  {
    (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)v7 + 24))(*(_QWORD *)(a1 + 16), a1 + 56, a2, a3, a4, a5);
  }
  else
  {
    v20 = 1;
    v21 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/descriptor.cc";
    v22 = 3677;
    memset(&__p, 0, sizeof(__p));
    v10 = *(const std::string::value_type **)(a1 + 56);
    v8 = a1 + 56;
    v9 = v10;
    v11 = *(char *)(v8 + 23);
    if (v11 >= 0)
      v12 = (const std::string::value_type *)v8;
    else
      v12 = v9;
    if (v11 >= 0)
      v13 = *(unsigned __int8 *)(v8 + 23);
    else
      v13 = *(_QWORD *)(v8 + 8);
    std::string::append(&__p, v12, v13);
    std::string::append(&__p, " ");
    v14 = *(char *)(a2 + 23);
    if (v14 >= 0)
      v15 = (const std::string::value_type *)a2;
    else
      v15 = *(const std::string::value_type **)a2;
    if (v14 >= 0)
      v16 = *(unsigned __int8 *)(a2 + 23);
    else
      v16 = *(_QWORD *)(a2 + 8);
    std::string::append(&__p, v15, v16);
    std::string::append(&__p, ": ");
    v17 = *(char *)(a5 + 23);
    if (v17 >= 0)
      v18 = (const std::string::value_type *)a5;
    else
      v18 = *(const std::string::value_type **)a5;
    if (v17 >= 0)
      v19 = *(unsigned __int8 *)(a5 + 23);
    else
      v19 = *(_QWORD *)(a5 + 8);
    std::string::append(&__p, v18, v19);
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v20);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
}

void sub_188879E04(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

BOOL google::protobuf::DescriptorBuilder::IsInPackage(uint64_t a1, uint64_t a2, const char *a3)
{
  const char *v5;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  void *__s2;
  size_t __n;
  void *__s1[2];

  google::protobuf::StringPiece::StringPiece<std::allocator<char>>(__s1, *(uint64_t **)(a1 + 8), a3);
  google::protobuf::StringPiece::StringPiece<std::allocator<char>>(&__s2, (uint64_t *)a2, v5);
  if ((uint64_t)__s1[1] < (uint64_t)__n || memcmp(__s1[0], __s2, __n))
    return 0;
  v7 = *(uint64_t **)(a1 + 8);
  if (*((char *)v7 + 23) < 0)
    v8 = v7[1];
  else
    v8 = *((unsigned __int8 *)v7 + 23);
  if (*(char *)(a2 + 23) < 0)
    v9 = *(_QWORD *)(a2 + 8);
  else
    v9 = *(unsigned __int8 *)(a2 + 23);
  if (v8 == v9)
    return 1;
  if ((*((_BYTE *)v7 + 23) & 0x80) != 0)
    v7 = (uint64_t *)*v7;
  return *((_BYTE *)v7 + v9) == 46;
}

uint64_t google::protobuf::DescriptorBuilder::RecordPublicDependencies(uint64_t this, const google::protobuf::FileDescriptor *a2)
{
  google::protobuf::DescriptorBuilder *v3;
  uint64_t v4;
  const google::protobuf::FileDescriptor *v5;

  if (a2)
  {
    v3 = (google::protobuf::DescriptorBuilder *)this;
    this = std::__tree<google::protobuf::FileDescriptor const*>::__emplace_unique_key_args<google::protobuf::FileDescriptor const*,google::protobuf::FileDescriptor const* const&>((uint64_t **)(this + 96), (unint64_t)a2, (uint64_t)a2);
    if ((this & 1) != 0 && *((int *)a2 + 9) >= 1)
    {
      v4 = 0;
      do
      {
        v5 = (const google::protobuf::FileDescriptor *)google::protobuf::FileDescriptor::dependency(a2, *(_DWORD *)(*((_QWORD *)a2 + 11) + 4 * v4));
        this = google::protobuf::DescriptorBuilder::RecordPublicDependencies(v3, v5);
        ++v4;
      }
      while (v4 < *((int *)a2 + 9));
    }
  }
  return this;
}

unint64_t google::protobuf::DescriptorBuilder::FindSymbolNotEnforcingDepsHelper(_QWORD *a1, uint64_t a2, uint64_t *a3, int a4)
{
  std::mutex *v8;
  char v9;
  uint64_t v10;
  _QWORD *v11;
  const char *v12;
  uint64_t *v13;
  unsigned int v14;
  unint64_t v15;
  uint64_t v17;
  unint64_t SymbolNotEnforcingDepsHelper;
  const char *v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t *v22;
  __int128 v23;
  _QWORD v24[2];
  __int128 v25;
  __int128 v26;

  if (*a1 == a2)
  {
    v8 = 0;
  }
  else
  {
    v8 = *(std::mutex **)a2;
    if (*(_QWORD *)a2)
    {
      std::mutex::lock(*(std::mutex **)a2);
      v9 = 0;
      goto LABEL_6;
    }
  }
  v9 = 1;
LABEL_6:
  v10 = *(_QWORD *)(a2 + 32);
  google::protobuf::StringPiece::StringPiece<std::allocator<char>>(&v25, a3, (const char *)a3);
  v26 = v25;
  v11 = std::__hash_table<std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>,std::__unordered_map_hasher<google::protobuf::StringPiece,std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>,google::protobuf::hash<google::protobuf::StringPiece>,std::equal_to<google::protobuf::StringPiece>,true>,std::__unordered_map_equal<google::protobuf::StringPiece,std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>,std::equal_to<google::protobuf::StringPiece>,google::protobuf::hash<google::protobuf::StringPiece>,true>,std::allocator<std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>>>::find<google::protobuf::StringPiece>((_QWORD *)(v10 + 304), (char **)&v26);
  if (v11)
  {
    v13 = v11 + 4;
  }
  else
  {
    v13 = &qword_1ECDBB718;
  }
  v14 = *(_DWORD *)v13;
  v15 = *((unsigned int *)v13 + 1);
  if (*(_DWORD *)v13)
    goto LABEL_10;
  v17 = *(_QWORD *)(a2 + 24);
  if (v17)
  {
    SymbolNotEnforcingDepsHelper = google::protobuf::DescriptorBuilder::FindSymbolNotEnforcingDepsHelper(a1, v17, a3, 1);
    v14 = SymbolNotEnforcingDepsHelper;
    v15 = HIDWORD(SymbolNotEnforcingDepsHelper);
    if ((_DWORD)SymbolNotEnforcingDepsHelper)
      goto LABEL_10;
  }
  else
  {
    v14 = 0;
  }
  if (a4)
  {
    google::protobuf::StringPiece::StringPiece<std::allocator<char>>(v24, a3, v12);
    if (google::protobuf::DescriptorPool::TryFindSymbolInFallbackDatabase(a2, v24[0], v24[1]))
    {
      v20 = *(_QWORD *)(a2 + 32);
      google::protobuf::StringPiece::StringPiece<std::allocator<char>>(&v23, a3, v19);
      v26 = v23;
      v21 = std::__hash_table<std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>,std::__unordered_map_hasher<google::protobuf::StringPiece,std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>,google::protobuf::hash<google::protobuf::StringPiece>,std::equal_to<google::protobuf::StringPiece>,true>,std::__unordered_map_equal<google::protobuf::StringPiece,std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>,std::equal_to<google::protobuf::StringPiece>,google::protobuf::hash<google::protobuf::StringPiece>,true>,std::allocator<std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>>>::find<google::protobuf::StringPiece>((_QWORD *)(v20 + 304), (char **)&v26);
      if (v21)
      {
        v22 = v21 + 4;
      }
      else
      {
        v22 = &qword_1ECDBB718;
      }
      v14 = *(_DWORD *)v22;
      v15 = *((unsigned int *)v22 + 1);
    }
    else
    {
      v14 = 0;
    }
  }
LABEL_10:
  if ((v9 & 1) == 0)
    std::mutex::unlock(v8);
  return v14 | (v15 << 32);
}

void sub_18887A0E8(_Unwind_Exception *exception_object)
{
  std::mutex *v1;
  char v2;

  if ((v2 & 1) == 0)
    std::mutex::unlock(v1);
  _Unwind_Resume(exception_object);
}

unint64_t google::protobuf::DescriptorBuilder::FindSymbolNotEnforcingDeps(uint64_t a1, uint64_t *a2, int a3)
{
  unint64_t SymbolNotEnforcingDepsHelper;
  uint64_t v5;
  unint64_t File;
  _QWORD *i;
  unint64_t v8;
  _QWORD v10[2];

  SymbolNotEnforcingDepsHelper = google::protobuf::DescriptorBuilder::FindSymbolNotEnforcingDepsHelper((_QWORD *)a1, *(_QWORD *)a1, a2, a3);
  v10[0] = SymbolNotEnforcingDepsHelper;
  v10[1] = v5;
  File = google::protobuf::Symbol::GetFile((google::protobuf::Symbol *)v10);
  if (File == *(_QWORD *)(a1 + 80))
  {
LABEL_8:
    std::__tree<google::protobuf::FileDescriptor const*>::__erase_unique<google::protobuf::FileDescriptor const*>((uint64_t **)(a1 + 120), File);
  }
  else
  {
    for (i = *(_QWORD **)(a1 + 104); i; i = (_QWORD *)*i)
    {
      v8 = i[4];
      if (File >= v8)
      {
        if (v8 >= File)
          goto LABEL_8;
        ++i;
      }
    }
  }
  return SymbolNotEnforcingDepsHelper;
}

uint64_t google::protobuf::DescriptorBuilder::FindSymbol(uint64_t a1, std::string *a2, int a3)
{
  unint64_t SymbolNotEnforcingDeps;
  uint64_t v6;
  const char *v7;
  unint64_t File;
  uint64_t v9;
  _QWORD *i;
  _QWORD *v11;
  unint64_t v12;
  const char *v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  BOOL v18;
  std::string *v19;
  _QWORD v21[2];

  SymbolNotEnforcingDeps = google::protobuf::DescriptorBuilder::FindSymbolNotEnforcingDeps(a1, (uint64_t *)a2, a3);
  v21[0] = SymbolNotEnforcingDeps;
  v21[1] = v6;
  if ((_DWORD)SymbolNotEnforcingDeps)
  {
    if (*(_BYTE *)(*(_QWORD *)a1 + 40))
    {
      File = google::protobuf::Symbol::GetFile((google::protobuf::Symbol *)v21);
      v9 = *(_QWORD *)(a1 + 80);
      if (File != v9)
      {
        v11 = (_QWORD *)(a1 + 104);
        for (i = *(_QWORD **)(a1 + 104); i; i = (_QWORD *)*i)
        {
          v12 = i[4];
          if (File >= v12)
          {
            if (v12 >= File)
              return SymbolNotEnforcingDeps;
            ++i;
          }
        }
        if (SymbolNotEnforcingDeps != 8)
          goto LABEL_20;
        if (google::protobuf::DescriptorBuilder::IsInPackage(v9, (uint64_t)a2, v7))
          return SymbolNotEnforcingDeps;
        v14 = *(_QWORD **)(a1 + 96);
        if (v14 == v11)
        {
LABEL_20:
          *(_QWORD *)(a1 + 144) = File;
          v19 = std::string::operator=((std::string *)(a1 + 152), a2);
          return qword_1ECDBB718;
        }
        while (1)
        {
          v15 = v14[4];
          if (v15)
          {
            if (google::protobuf::DescriptorBuilder::IsInPackage(v15, (uint64_t)a2, v13))
              break;
          }
          v16 = (_QWORD *)v14[1];
          if (v16)
          {
            do
            {
              v17 = v16;
              v16 = (_QWORD *)*v16;
            }
            while (v16);
          }
          else
          {
            do
            {
              v17 = (_QWORD *)v14[2];
              v18 = *v17 == (_QWORD)v14;
              v14 = v17;
            }
            while (!v18);
          }
          v14 = v17;
          if (v17 == v11)
            goto LABEL_20;
        }
      }
    }
  }
  return SymbolNotEnforcingDeps;
}

void google::protobuf::`anonymous namespace'::kNullSymbol(google::protobuf::_anonymous_namespace_ *this)
{
  unsigned __int8 v1;

  v1 = atomic_load((unsigned __int8 *)&_MergedGlobals_172);
  if ((v1 & 1) == 0)
  {
    if (__cxa_guard_acquire(&_MergedGlobals_172))
    {
      LODWORD(qword_1ECDBB718) = 0;
      qword_1ECDBB720 = 0;
      __cxa_guard_release(&_MergedGlobals_172);
    }
  }
}

unint64_t google::protobuf::DescriptorBuilder::LookupSymbolNoPlaceholder(uint64_t a1, std::string *__str, uint64_t a3, int a4, int a5)
{
  std::string *v10;
  uint64_t Symbol;
  unsigned int v12;
  std::string::size_type v13;
  std::string::size_type v14;
  std::string::size_type v15;
  std::string *v16;
  std::string::size_type v17;
  uint64_t v18;
  std::string::size_type size;
  std::string::size_type v20;
  uint64_t v21;
  std::string __stra;
  std::string v24;
  char v25;

  *(_QWORD *)(a1 + 144) = 0;
  if (*(char *)(a1 + 199) < 0)
  {
    **(_BYTE **)(a1 + 176) = 0;
    *(_QWORD *)(a1 + 184) = 0;
  }
  else
  {
    *(_BYTE *)(a1 + 176) = 0;
    *(_BYTE *)(a1 + 199) = 0;
  }
  if ((SHIBYTE(__str->__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    v10 = __str;
    if (!*((_BYTE *)&__str->__r_.__value_.__s + 23))
      goto LABEL_13;
LABEL_9:
    if (v10->__r_.__value_.__s.__data_[0] == 46)
    {
      std::string::basic_string(&v24, __str, 1uLL, 0xFFFFFFFFFFFFFFFFLL, (std::allocator<char> *)&__stra);
      Symbol = google::protobuf::DescriptorBuilder::FindSymbol(a1, &v24, a5);
      if (SHIBYTE(v24.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v24.__r_.__value_.__l.__data_);
      v12 = Symbol;
      return Symbol & 0xFFFFFFFF00000000 | v12;
    }
    goto LABEL_13;
  }
  if (__str->__r_.__value_.__l.__size_)
  {
    v10 = (std::string *)__str->__r_.__value_.__r.__words[0];
    goto LABEL_9;
  }
LABEL_13:
  v13 = std::string::find(__str, 46, 0);
  memset(&v24, 0, sizeof(v24));
  if (v13 == -1)
  {
    std::string::operator=(&v24, __str);
  }
  else
  {
    std::string::basic_string(&__stra, __str, 0, v13, (std::allocator<char> *)&v25);
    if (SHIBYTE(v24.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v24.__r_.__value_.__l.__data_);
    v24 = __stra;
  }
  if (*(char *)(a3 + 23) < 0)
    std::string::__init_copy_ctor_external(&__stra, *(const std::string::value_type **)a3, *(_QWORD *)(a3 + 8));
  else
    __stra = *(std::string *)a3;
  while (1)
  {
    v14 = std::string::rfind(&__stra, 46, 0xFFFFFFFFFFFFFFFFLL);
    if (v14 == -1)
    {
      Symbol = google::protobuf::DescriptorBuilder::FindSymbol(a1, __str, a5);
      goto LABEL_48;
    }
    std::string::erase(&__stra, v14, 0xFFFFFFFFFFFFFFFFLL);
    v15 = (__stra.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
        ? HIBYTE(__stra.__r_.__value_.__r.__words[2])
        : __stra.__r_.__value_.__l.__size_;
    std::string::append(&__stra, 1uLL, 46);
    v16 = (v24.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
        ? &v24
        : (std::string *)v24.__r_.__value_.__r.__words[0];
    v17 = (v24.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
        ? HIBYTE(v24.__r_.__value_.__r.__words[2])
        : v24.__r_.__value_.__l.__size_;
    std::string::append(&__stra, (const std::string::value_type *)v16, v17);
    v18 = google::protobuf::DescriptorBuilder::FindSymbol(a1, &__stra, a5);
    Symbol = v18;
    if ((_DWORD)v18)
      break;
LABEL_44:
    std::string::erase(&__stra, v15, 0xFFFFFFFFFFFFFFFFLL);
  }
  if ((v24.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    size = HIBYTE(v24.__r_.__value_.__r.__words[2]);
  else
    size = v24.__r_.__value_.__l.__size_;
  v20 = HIBYTE(__str->__r_.__value_.__r.__words[2]);
  if ((v20 & 0x80u) != 0)
    v20 = __str->__r_.__value_.__l.__size_;
  if (v20 <= size)
  {
    if (a4 != 1 || (_DWORD)v18 == 1)
      goto LABEL_48;
    v12 = v18;
    if ((_DWORD)v18 == 4)
      goto LABEL_49;
    goto LABEL_44;
  }
  if (v18 > 8 || ((1 << v18) & 0x152) == 0)
    goto LABEL_44;
  std::string::append(&__stra, __str, size, v20 - size);
  v21 = google::protobuf::DescriptorBuilder::FindSymbol(a1, &__stra, a5);
  Symbol = v21;
  if (!(_DWORD)v21)
  {
    std::string::operator=((std::string *)(a1 + 176), &__stra);
    v12 = 0;
    goto LABEL_49;
  }
LABEL_48:
  v12 = Symbol;
LABEL_49:
  if (SHIBYTE(__stra.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__stra.__r_.__value_.__l.__data_);
  if (SHIBYTE(v24.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v24.__r_.__value_.__l.__data_);
  return Symbol & 0xFFFFFFFF00000000 | v12;
}

void sub_18887A648(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a16 < 0)
    operator delete(__p);
  if (a23 < 0)
    operator delete(a18);
  _Unwind_Resume(exception_object);
}

unint64_t google::protobuf::DescriptorBuilder::LookupSymbol(uint64_t *a1, std::string *a2, uint64_t a3, int a4, int a5, int a6)
{
  unint64_t v9;
  const char *v10;
  uint64_t v11;
  google::protobuf::_anonymous_namespace_ *v12;
  char v13;
  _BYTE *v14;
  unsigned __int8 *v15;
  unsigned __int8 *v16;
  int v17;
  unint64_t v19;
  uint64_t v20;
  unsigned int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  const std::string *String;
  std::string::size_type v26;
  std::string::size_type v27;
  uint64_t *v28;
  const char *v29;
  uint64_t *v30;
  uint64_t *v31;
  const char *v32;
  std::string::__raw *v33;
  unsigned __int8 v34;
  size_t size;
  std::string *v36;
  const char *v37;
  const std::string *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v42;
  _QWORD *v43;
  uint64_t *v44;
  size_t v45;
  std::string *v46;
  const char *v47;
  const void *v48;
  uint64_t Bytes;
  _QWORD *v51;
  unsigned __int8 *v54;
  uint64_t v55;
  uint64_t v56[2];
  uint64_t v57[2];
  uint64_t v58[2];
  std::string v59;
  uint64_t v60[2];

  v9 = google::protobuf::DescriptorBuilder::LookupSymbolNoPlaceholder((uint64_t)a1, a2, a3, a5, a6);
  if ((_DWORD)v9)
    goto LABEL_70;
  v11 = *a1;
  if (*(_BYTE *)(v11 + 42))
  {
    v12 = (google::protobuf::_anonymous_namespace_ *)google::protobuf::StringPiece::StringPiece<std::allocator<char>>(&v54, (uint64_t *)a2, v10);
    if (!v55)
    {
LABEL_14:
      v19 = qword_1ECDBB718 & 0xFFFFFFFF00000000;
      v20 = qword_1ECDBB718;
LABEL_69:
      v9 = v19 | v20;
LABEL_70:
      v21 = v9;
      return v9 & 0xFFFFFFFF00000000 | v21;
    }
    v13 = 0;
    v14 = v54;
    v15 = &v54[v55];
    v16 = v54;
    do
    {
      while (1)
      {
        v17 = *v16;
        if ((v17 & 0xFFFFFFDF) - 65 < 0x1A)
          break;
        if (v17 == 95 || (v17 - 48) < 0xA)
          break;
        if (!(v13 & 1 | (v17 != 46)))
        {
          ++v16;
          v13 = 1;
          if (v16 != v15)
            continue;
        }
        goto LABEL_14;
      }
      v13 = 0;
      ++v16;
    }
    while (v16 != v15);
    v22 = *v54;
    if (v22 == 46)
      v23 = (uint64_t)(v54 + 1);
    else
      v23 = (uint64_t)v54;
    if (v22 == 46)
      v24 = v55 - 1;
    else
      v24 = v55;
    String = (const std::string *)google::protobuf::DescriptorPool::Tables::AllocateString(*(uint64_t **)(v11 + 32), v23, v24);
    v26 = std::string::rfind(String, 46, 0xFFFFFFFFFFFFFFFFLL);
    if (v26 == -1)
    {
      v34 = atomic_load(google::protobuf::internal::init_protobuf_defaults_state);
      if ((v34 & 1) == 0)
        google::protobuf::internal::InitProtobufDefaultsSlow((google::protobuf::internal *)0xFFFFFFFFFFFFFFFFLL);
      v30 = &google::protobuf::internal::fixed_address_empty_string;
      v33 = (std::string::__raw *)String;
    }
    else
    {
      v27 = v26;
      v28 = *(uint64_t **)(v11 + 32);
      std::string::basic_string(&v59, String, 0, v26, (std::allocator<char> *)v60);
      google::protobuf::StringPiece::StringPiece<std::allocator<char>>(v60, (uint64_t *)&v59, v29);
      v30 = google::protobuf::DescriptorPool::Tables::AllocateString(v28, v60[0], v60[1]);
      if (SHIBYTE(v59.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v59.__r_.__value_.__l.__data_);
      v31 = *(uint64_t **)(v11 + 32);
      std::string::basic_string(&v59, String, v27 + 1, 0xFFFFFFFFFFFFFFFFLL, (std::allocator<char> *)v58);
      google::protobuf::StringPiece::StringPiece<std::allocator<char>>(v58, (uint64_t *)&v59, v32);
      v33 = (std::string::__raw *)google::protobuf::DescriptorPool::Tables::AllocateString(v31, v58[0], v58[1]);
      if (SHIBYTE(v59.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v59.__r_.__value_.__l.__data_);
    }
    if ((String->__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      size = HIBYTE(String->__r_.__value_.__r.__words[2]);
    else
      size = String->__r_.__value_.__l.__size_;
    v36 = &v59;
    std::string::basic_string[abi:ne180100]((uint64_t)&v59, size + 18);
    if ((v59.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
      v36 = (std::string *)v59.__r_.__value_.__r.__words[0];
    if (size)
    {
      if ((String->__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v38 = String;
      else
        v38 = (const std::string *)String->__r_.__value_.__r.__words[0];
      memmove(v36, v38, size);
    }
    strcpy((char *)v36 + size, ".placeholder.proto");
    google::protobuf::StringPiece::StringPiece<std::allocator<char>>(v57, (uint64_t *)&v59, v37);
    v39 = google::protobuf::DescriptorPool::NewPlaceholderFileWithMutexHeld(v11, v57[0], v57[1]);
    if (SHIBYTE(v59.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v59.__r_.__value_.__l.__data_);
    *(_QWORD *)(v39 + 8) = v30;
    if (a4 != 1)
    {
      v20 = 1;
      *(_DWORD *)(v39 + 44) = 1;
      Bytes = google::protobuf::DescriptorPool::Tables::AllocateBytes(*(google::protobuf::DescriptorPool::Tables **)(v11 + 32), 144);
      *(_QWORD *)(v39 + 104) = Bytes;
      *(_OWORD *)(Bytes + 24) = 0u;
      *(_OWORD *)(Bytes + 40) = 0u;
      *(_OWORD *)(Bytes + 56) = 0u;
      *(_OWORD *)(Bytes + 72) = 0u;
      *(_OWORD *)(Bytes + 88) = 0u;
      *(_OWORD *)(Bytes + 104) = 0u;
      *(_OWORD *)(Bytes + 120) = 0u;
      *(_QWORD *)(Bytes + 136) = 0;
      *(_QWORD *)Bytes = v33;
      *(_QWORD *)(Bytes + 8) = String;
      *(_QWORD *)(Bytes + 16) = v39;
      if (atomic_load(scc_info_MessageOptions_google_2fprotobuf_2fdescriptor_2eproto))
        google::protobuf::internal::InitSCCImpl(scc_info_MessageOptions_google_2fprotobuf_2fdescriptor_2eproto);
      *(_QWORD *)(Bytes + 32) = &google::protobuf::_MessageOptions_default_instance_;
      *(_BYTE *)(Bytes + 140) = 1;
      *(_BYTE *)(Bytes + 141) = *v14 != 46;
      if (a4 == 2)
      {
        v20 = 1;
        *(_DWORD *)(Bytes + 124) = 1;
        v51 = (_QWORD *)google::protobuf::DescriptorPool::Tables::AllocateBytes(*(google::protobuf::DescriptorPool::Tables **)(v11 + 32), 16);
        v19 = 0;
        *(_QWORD *)(Bytes + 72) = v51;
        *v51 = 0x2000000000000001;
      }
      else
      {
        v19 = 0;
      }
      goto LABEL_69;
    }
    *(_DWORD *)(v39 + 48) = 1;
    v40 = google::protobuf::DescriptorPool::Tables::AllocateBytes(*(google::protobuf::DescriptorPool::Tables **)(v11 + 32), 80);
    *(_QWORD *)(v39 + 112) = v40;
    *(_OWORD *)(v40 + 24) = 0u;
    *(_OWORD *)(v40 + 40) = 0u;
    *(_OWORD *)(v40 + 56) = 0u;
    *(_QWORD *)(v40 + 72) = 0;
    *(_QWORD *)v40 = v33;
    *(_QWORD *)(v40 + 8) = String;
    *(_QWORD *)(v40 + 16) = v39;
    if (atomic_load(scc_info_EnumOptions_google_2fprotobuf_2fdescriptor_2eproto))
      google::protobuf::internal::InitSCCImpl(scc_info_EnumOptions_google_2fprotobuf_2fdescriptor_2eproto);
    *(_QWORD *)(v40 + 32) = &google::protobuf::_EnumOptions_default_instance_;
    *(_BYTE *)(v40 + 40) = 1;
    *(_BYTE *)(v40 + 41) = *v14 != 46;
    *(_DWORD *)(v40 + 44) = 1;
    v42 = google::protobuf::DescriptorPool::Tables::AllocateBytes(*(google::protobuf::DescriptorPool::Tables **)(v11 + 32), 40);
    *(_QWORD *)(v40 + 48) = v42;
    *(_OWORD *)v42 = 0u;
    *(_OWORD *)(v42 + 16) = 0u;
    *(_QWORD *)(v42 + 32) = 0;
    v43 = google::protobuf::DescriptorPool::Tables::AllocateString(*(uint64_t **)(v11 + 32), (uint64_t)"PLACEHOLDER_VALUE", 17);
    *(_QWORD *)v42 = v43;
    if (*((char *)v30 + 23) < 0)
    {
      if (v30[1])
        goto LABEL_47;
    }
    else if (*((_BYTE *)v30 + 23))
    {
LABEL_47:
      v44 = *(uint64_t **)(v11 + 32);
      if (*((char *)v30 + 23) >= 0)
        v45 = *((unsigned __int8 *)v30 + 23);
      else
        v45 = v30[1];
      v46 = &v59;
      std::string::basic_string[abi:ne180100]((uint64_t)&v59, v45 + 18);
      if ((v59.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
        v46 = (std::string *)v59.__r_.__value_.__r.__words[0];
      if (v45)
      {
        if (*((char *)v30 + 23) >= 0)
          v48 = v30;
        else
          v48 = (const void *)*v30;
        memmove(v46, v48, v45);
      }
      strcpy((char *)v46 + v45, ".PLACEHOLDER_VALUE");
      google::protobuf::StringPiece::StringPiece<std::allocator<char>>(v56, (uint64_t *)&v59, v47);
      *(_QWORD *)(v42 + 8) = google::protobuf::DescriptorPool::Tables::AllocateString(v44, v56[0], v56[1]);
      if (SHIBYTE(v59.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v59.__r_.__value_.__l.__data_);
      goto LABEL_66;
    }
    *(_QWORD *)(v42 + 8) = v43;
LABEL_66:
    *(_DWORD *)(v42 + 16) = 0;
    *(_QWORD *)(v42 + 24) = v40;
    if (atomic_load(scc_info_EnumValueOptions_google_2fprotobuf_2fdescriptor_2eproto))
      google::protobuf::internal::InitSCCImpl(scc_info_EnumValueOptions_google_2fprotobuf_2fdescriptor_2eproto);
    v19 = 0;
    *(_QWORD *)(v42 + 32) = &google::protobuf::_EnumValueOptions_default_instance_;
    v20 = 4;
    goto LABEL_69;
  }
  v21 = 0;
  return v9 & 0xFFFFFFFF00000000 | v21;
}

void sub_18887ABC8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a23 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::DescriptorPool::NewPlaceholderFileWithMutexHeld(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t Bytes;
  google::protobuf::internal *String;
  unsigned __int8 v8;
  unsigned __int8 v10;
  google::protobuf::FileDescriptorTables *v13;
  const void *v14;

  Bytes = google::protobuf::DescriptorPool::Tables::AllocateBytes(*(google::protobuf::DescriptorPool::Tables **)(a1 + 32), 160);
  *(_OWORD *)Bytes = 0u;
  *(_OWORD *)(Bytes + 16) = 0u;
  *(_OWORD *)(Bytes + 32) = 0u;
  *(_OWORD *)(Bytes + 48) = 0u;
  *(_OWORD *)(Bytes + 64) = 0u;
  *(_OWORD *)(Bytes + 80) = 0u;
  *(_OWORD *)(Bytes + 96) = 0u;
  *(_OWORD *)(Bytes + 112) = 0u;
  *(_OWORD *)(Bytes + 128) = 0u;
  *(_OWORD *)(Bytes + 144) = 0u;
  String = (google::protobuf::internal *)google::protobuf::DescriptorPool::Tables::AllocateString(*(uint64_t **)(a1 + 32), a2, a3);
  *(_QWORD *)Bytes = String;
  v8 = atomic_load(google::protobuf::internal::init_protobuf_defaults_state);
  if ((v8 & 1) == 0)
    google::protobuf::internal::InitProtobufDefaultsSlow(String);
  *(_QWORD *)(Bytes + 8) = &google::protobuf::internal::fixed_address_empty_string;
  *(_QWORD *)(Bytes + 16) = a1;
  if (atomic_load(scc_info_FileOptions_google_2fprotobuf_2fdescriptor_2eproto))
    google::protobuf::internal::InitSCCImpl(scc_info_FileOptions_google_2fprotobuf_2fdescriptor_2eproto);
  *(_QWORD *)(Bytes + 136) = &google::protobuf::_FileOptions_default_instance_;
  v10 = atomic_load((unsigned __int8 *)&qword_1ECDBB700);
  if ((v10 & 1) == 0 && __cxa_guard_acquire(&qword_1ECDBB700))
  {
    v13 = (google::protobuf::FileDescriptorTables *)operator new();
    google::protobuf::FileDescriptorTables::FileDescriptorTables(v13);
    google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::OnShutdownDelete<google::protobuf::FileDescriptorTables>(google::protobuf::FileDescriptorTables *)::{lambda(void const*)#1}::__invoke, (void (*)(const void *))v13, v14);
    qword_1ECDBB6F8 = (uint64_t)v13;
    __cxa_guard_release(&qword_1ECDBB700);
  }
  *(_QWORD *)(Bytes + 144) = qword_1ECDBB6F8;
  if (atomic_load(scc_info_SourceCodeInfo_google_2fprotobuf_2fdescriptor_2eproto))
    google::protobuf::internal::InitSCCImpl(scc_info_SourceCodeInfo_google_2fprotobuf_2fdescriptor_2eproto);
  *(_QWORD *)(Bytes + 152) = &google::protobuf::_SourceCodeInfo_default_instance_;
  *(_WORD *)(Bytes + 64) = 257;
  *(_DWORD *)(Bytes + 60) = 0;
  return Bytes;
}

void sub_18887AD54(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x18D76437C](v1, 0x10A0C40C644375CLL);
  __cxa_guard_abort(&qword_1ECDBB700);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::DescriptorBuilder::AddSymbol(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v11;
  const char *v14;
  uint64_t v16;
  _QWORD *v17;
  uint64_t *v18;
  uint64_t *v19;
  int v20;
  const std::string::value_type *v21;
  std::string::size_type v22;
  void *v23;
  uint64_t v24;
  uint64_t File;
  uint64_t v26;
  std::string *v27;
  __int128 v28;
  __int128 *v29;
  __int128 v30;
  std::string::size_type v31;
  std::string::size_type v32;
  std::string *v33;
  __int128 v34;
  std::string *v35;
  __int128 v36;
  std::string *v37;
  std::string::size_type size;
  std::string *v39;
  __int128 v40;
  std::string *v41;
  __int128 v42;
  std::string *v43;
  std::string::size_type v44;
  std::string *v45;
  __int128 v46;
  std::string *v47;
  __int128 v48;
  std::string *v49;
  __int128 v50;
  std::string v51;
  std::string v52;
  std::string v53;
  std::string v54;
  std::string v55;
  __int128 v56;
  __int128 v57;
  std::string::size_type v58;
  std::string v59;
  char v60;

  v11 = a3;
  if (!a3)
    v11 = *(_QWORD *)(a1 + 80);
  if (!google::protobuf::DescriptorPool::Tables::AddSymbol(*(_QWORD *)(a1 + 8), (const char *)a2, a6, a7))
  {
    v16 = *(_QWORD *)(a1 + 8);
    google::protobuf::StringPiece::StringPiece<std::allocator<char>>(&v56, (uint64_t *)a2, v14);
    v57 = v56;
    v17 = std::__hash_table<std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>,std::__unordered_map_hasher<google::protobuf::StringPiece,std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>,google::protobuf::hash<google::protobuf::StringPiece>,std::equal_to<google::protobuf::StringPiece>,true>,std::__unordered_map_equal<google::protobuf::StringPiece,std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>,std::equal_to<google::protobuf::StringPiece>,google::protobuf::hash<google::protobuf::StringPiece>,true>,std::allocator<std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>>>::find<google::protobuf::StringPiece>((_QWORD *)(v16 + 304), (char **)&v57);
    if (v17)
    {
      v18 = v17 + 4;
      v19 = v17 + 5;
    }
    else
    {
      v18 = &qword_1ECDBB718;
      v19 = &qword_1ECDBB720;
    }
    v24 = *v19;
    *(_QWORD *)&v57 = *v18;
    *((_QWORD *)&v57 + 1) = v24;
    File = google::protobuf::Symbol::GetFile((google::protobuf::Symbol *)&v57);
    if (File == *(_QWORD *)(a1 + 80))
    {
      v31 = std::string::rfind((const std::string *)a2, 46, 0xFFFFFFFFFFFFFFFFLL);
      if (v31 == -1)
      {
        std::operator+<char>();
        v49 = std::string::append(&v55, "\" is already defined.");
        v50 = *(_OWORD *)&v49->__r_.__value_.__l.__data_;
        v58 = v49->__r_.__value_.__r.__words[2];
        v57 = v50;
        v49->__r_.__value_.__l.__size_ = 0;
        v49->__r_.__value_.__r.__words[2] = 0;
        v49->__r_.__value_.__r.__words[0] = 0;
        google::protobuf::DescriptorBuilder::AddError(a1, a2, a5, 0, (uint64_t)&v57);
        if (SHIBYTE(v58) < 0)
          operator delete((void *)v57);
        if ((SHIBYTE(v55.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
          return 0;
        v23 = (void *)v55.__r_.__value_.__r.__words[0];
      }
      else
      {
        v32 = v31;
        std::string::basic_string(&v52, (const std::string *)a2, v31 + 1, 0xFFFFFFFFFFFFFFFFLL, (std::allocator<char> *)&v51);
        v33 = std::string::insert(&v52, 0, "\"");
        v34 = *(_OWORD *)&v33->__r_.__value_.__l.__data_;
        v53.__r_.__value_.__r.__words[2] = v33->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v53.__r_.__value_.__l.__data_ = v34;
        v33->__r_.__value_.__l.__size_ = 0;
        v33->__r_.__value_.__r.__words[2] = 0;
        v33->__r_.__value_.__r.__words[0] = 0;
        v35 = std::string::append(&v53, "\" is already defined in \"");
        v36 = *(_OWORD *)&v35->__r_.__value_.__l.__data_;
        v54.__r_.__value_.__r.__words[2] = v35->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v54.__r_.__value_.__l.__data_ = v36;
        v35->__r_.__value_.__l.__size_ = 0;
        v35->__r_.__value_.__r.__words[2] = 0;
        v35->__r_.__value_.__r.__words[0] = 0;
        std::string::basic_string(&v51, (const std::string *)a2, 0, v32, (std::allocator<char> *)&v60);
        if ((v51.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          v37 = &v51;
        else
          v37 = (std::string *)v51.__r_.__value_.__r.__words[0];
        if ((v51.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          size = HIBYTE(v51.__r_.__value_.__r.__words[2]);
        else
          size = v51.__r_.__value_.__l.__size_;
        v39 = std::string::append(&v54, (const std::string::value_type *)v37, size);
        v40 = *(_OWORD *)&v39->__r_.__value_.__l.__data_;
        v55.__r_.__value_.__r.__words[2] = v39->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v55.__r_.__value_.__l.__data_ = v40;
        v39->__r_.__value_.__l.__size_ = 0;
        v39->__r_.__value_.__r.__words[2] = 0;
        v39->__r_.__value_.__r.__words[0] = 0;
        v41 = std::string::append(&v55, "\".");
        v42 = *(_OWORD *)&v41->__r_.__value_.__l.__data_;
        v58 = v41->__r_.__value_.__r.__words[2];
        v57 = v42;
        v41->__r_.__value_.__l.__size_ = 0;
        v41->__r_.__value_.__r.__words[2] = 0;
        v41->__r_.__value_.__r.__words[0] = 0;
        google::protobuf::DescriptorBuilder::AddError(a1, a2, a5, 0, (uint64_t)&v57);
        if (SHIBYTE(v58) < 0)
          operator delete((void *)v57);
        if (SHIBYTE(v55.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v55.__r_.__value_.__l.__data_);
        if (SHIBYTE(v51.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v51.__r_.__value_.__l.__data_);
        if (SHIBYTE(v54.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v54.__r_.__value_.__l.__data_);
        if (SHIBYTE(v53.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v53.__r_.__value_.__l.__data_);
        if ((SHIBYTE(v52.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
          return 0;
        v23 = (void *)v52.__r_.__value_.__r.__words[0];
      }
    }
    else
    {
      v26 = File;
      std::operator+<char>();
      v27 = std::string::append(&v53, "\" is already defined in file \"");
      v28 = *(_OWORD *)&v27->__r_.__value_.__l.__data_;
      v54.__r_.__value_.__r.__words[2] = v27->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v54.__r_.__value_.__l.__data_ = v28;
      v27->__r_.__value_.__l.__size_ = 0;
      v27->__r_.__value_.__r.__words[2] = 0;
      v27->__r_.__value_.__r.__words[0] = 0;
      if (v26)
      {
        v29 = *(__int128 **)v26;
        if (*(char *)(*(_QWORD *)v26 + 23) < 0)
        {
          std::string::__init_copy_ctor_external(&v52, *(const std::string::value_type **)v29, *((_QWORD *)v29 + 1));
        }
        else
        {
          v30 = *v29;
          v52.__r_.__value_.__r.__words[2] = *((_QWORD *)v29 + 2);
          *(_OWORD *)&v52.__r_.__value_.__l.__data_ = v30;
        }
      }
      else
      {
        std::string::basic_string[abi:ne180100]<0>(&v52, "null");
      }
      if ((v52.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v43 = &v52;
      else
        v43 = (std::string *)v52.__r_.__value_.__r.__words[0];
      if ((v52.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v44 = HIBYTE(v52.__r_.__value_.__r.__words[2]);
      else
        v44 = v52.__r_.__value_.__l.__size_;
      v45 = std::string::append(&v54, (const std::string::value_type *)v43, v44);
      v46 = *(_OWORD *)&v45->__r_.__value_.__l.__data_;
      v55.__r_.__value_.__r.__words[2] = v45->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v55.__r_.__value_.__l.__data_ = v46;
      v45->__r_.__value_.__l.__size_ = 0;
      v45->__r_.__value_.__r.__words[2] = 0;
      v45->__r_.__value_.__r.__words[0] = 0;
      v47 = std::string::append(&v55, "\".");
      v48 = *(_OWORD *)&v47->__r_.__value_.__l.__data_;
      v58 = v47->__r_.__value_.__r.__words[2];
      v57 = v48;
      v47->__r_.__value_.__l.__size_ = 0;
      v47->__r_.__value_.__r.__words[2] = 0;
      v47->__r_.__value_.__r.__words[0] = 0;
      google::protobuf::DescriptorBuilder::AddError(a1, a2, a5, 0, (uint64_t)&v57);
      if (SHIBYTE(v58) < 0)
        operator delete((void *)v57);
      if (SHIBYTE(v55.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v55.__r_.__value_.__l.__data_);
      if (SHIBYTE(v52.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v52.__r_.__value_.__l.__data_);
      if (SHIBYTE(v54.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v54.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v53.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        return 0;
      v23 = (void *)v53.__r_.__value_.__r.__words[0];
    }
    goto LABEL_59;
  }
  if ((google::protobuf::FileDescriptorTables::AddAliasUnderParent(*(_QWORD *)(a1 + 88), v11, a4, a6, a7) & 1) != 0)
    return 1;
  if (!*(_BYTE *)(a1 + 48))
  {
    LODWORD(v57) = 2;
    *((_QWORD *)&v57 + 1) = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/descriptor.cc";
    LODWORD(v58) = 4030;
    memset(&v59, 0, sizeof(v59));
    std::string::append(&v59, "\"");
    v20 = *(char *)(a2 + 23);
    v21 = v20 >= 0 ? (const std::string::value_type *)a2 : *(const std::string::value_type **)a2;
    v22 = v20 >= 0 ? *(unsigned __int8 *)(a2 + 23) : *(_QWORD *)(a2 + 8);
    std::string::append(&v59, v21, v22);
    std::string::append(&v59, "\" not previously defined in symbols_by_name_, but was defined in symbols_by_parent_; this shouldn't be possible.");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v57);
    if (SHIBYTE(v59.__r_.__value_.__r.__words[2]) < 0)
    {
      v23 = (void *)v59.__r_.__value_.__r.__words[0];
LABEL_59:
      operator delete(v23);
    }
  }
  return 0;
}

void sub_18887B25C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,uint64_t a36,void *__p,uint64_t a38,int a39,__int16 a40,char a41,char a42)
{
  uint64_t v42;

  if (*(char *)(v42 - 105) < 0)
    operator delete(*(void **)(v42 - 128));
  if (a42 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void google::protobuf::DescriptorBuilder::AddPackage(uint64_t a1, std::string *a2, uint64_t a3, uint64_t a4)
{
  const char *v8;
  std::string::size_type v9;
  std::string::size_type v10;
  uint64_t *v11;
  const char *v12;
  _QWORD *String;
  void *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t *v18;
  uint64_t v19;
  std::string *v20;
  __int128 v21;
  const std::string::value_type ***File;
  int v23;
  const std::string::value_type *v24;
  std::string::size_type v25;
  std::string *v26;
  __int128 v27;
  std::string *v28;
  __int128 v29;
  std::string v30;
  std::string v31;
  std::string v32;
  __int128 v33;
  _QWORD v34[2];
  std::string v35;
  uint64_t v36[2];

  if (google::protobuf::DescriptorPool::Tables::AddSymbol(*(_QWORD *)(a1 + 8), (const char *)a2, 8, a4))
  {
    v9 = std::string::rfind(a2, 46, 0xFFFFFFFFFFFFFFFFLL);
    if (v9 == -1)
    {
      google::protobuf::DescriptorBuilder::ValidateSymbolName(a1, (unsigned __int8 *)a2, (uint64_t)a2, a3);
      return;
    }
    v10 = v9;
    v11 = *(uint64_t **)(a1 + 8);
    std::string::basic_string(&v35, a2, 0, v9, (std::allocator<char> *)&v32);
    google::protobuf::StringPiece::StringPiece<std::allocator<char>>(v36, (uint64_t *)&v35, v12);
    String = google::protobuf::DescriptorPool::Tables::AllocateString(v11, v36[0], v36[1]);
    if (SHIBYTE(v35.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v35.__r_.__value_.__l.__data_);
    google::protobuf::DescriptorBuilder::AddPackage(a1, String, a3, a4);
    std::string::basic_string(&v35, a2, v10 + 1, 0xFFFFFFFFFFFFFFFFLL, (std::allocator<char> *)&v32);
    google::protobuf::DescriptorBuilder::ValidateSymbolName(a1, (unsigned __int8 *)&v35, (uint64_t)a2, a3);
    if (SHIBYTE(v35.__r_.__value_.__r.__words[2]) < 0)
    {
      v14 = (void *)v35.__r_.__value_.__r.__words[0];
LABEL_26:
      operator delete(v14);
    }
  }
  else
  {
    v15 = *(_QWORD *)(a1 + 8);
    google::protobuf::StringPiece::StringPiece<std::allocator<char>>(&v33, (uint64_t *)a2, v8);
    *(_OWORD *)&v35.__r_.__value_.__l.__data_ = v33;
    v16 = std::__hash_table<std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>,std::__unordered_map_hasher<google::protobuf::StringPiece,std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>,google::protobuf::hash<google::protobuf::StringPiece>,std::equal_to<google::protobuf::StringPiece>,true>,std::__unordered_map_equal<google::protobuf::StringPiece,std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>,std::equal_to<google::protobuf::StringPiece>,google::protobuf::hash<google::protobuf::StringPiece>,true>,std::allocator<std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>>>::find<google::protobuf::StringPiece>((_QWORD *)(v15 + 304), &v35.__r_.__value_.__l.__data_);
    if (v16)
    {
      v17 = v16 + 4;
      v18 = v16 + 5;
    }
    else
    {
      v17 = &qword_1ECDBB718;
      v18 = &qword_1ECDBB720;
    }
    v19 = *v18;
    v34[0] = *v17;
    v34[1] = v19;
    if (LODWORD(v34[0]) != 8)
    {
      std::operator+<char>();
      v20 = std::string::append(&v30, "\" is already defined (as something other than a package) in file \"");
      v21 = *(_OWORD *)&v20->__r_.__value_.__l.__data_;
      v31.__r_.__value_.__r.__words[2] = v20->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v31.__r_.__value_.__l.__data_ = v21;
      v20->__r_.__value_.__l.__size_ = 0;
      v20->__r_.__value_.__r.__words[2] = 0;
      v20->__r_.__value_.__r.__words[0] = 0;
      File = (const std::string::value_type ***)google::protobuf::Symbol::GetFile((google::protobuf::Symbol *)v34);
      v23 = *((char *)*File + 23);
      if (v23 >= 0)
        v24 = (const std::string::value_type *)*File;
      else
        v24 = **File;
      if (v23 >= 0)
        v25 = *((unsigned __int8 *)*File + 23);
      else
        v25 = (std::string::size_type)(*File)[1];
      v26 = std::string::append(&v31, v24, v25);
      v27 = *(_OWORD *)&v26->__r_.__value_.__l.__data_;
      v32.__r_.__value_.__r.__words[2] = v26->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v32.__r_.__value_.__l.__data_ = v27;
      v26->__r_.__value_.__l.__size_ = 0;
      v26->__r_.__value_.__r.__words[2] = 0;
      v26->__r_.__value_.__r.__words[0] = 0;
      v28 = std::string::append(&v32, "\".");
      v29 = *(_OWORD *)&v28->__r_.__value_.__l.__data_;
      v35.__r_.__value_.__r.__words[2] = v28->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v35.__r_.__value_.__l.__data_ = v29;
      v28->__r_.__value_.__l.__size_ = 0;
      v28->__r_.__value_.__r.__words[2] = 0;
      v28->__r_.__value_.__r.__words[0] = 0;
      google::protobuf::DescriptorBuilder::AddError(a1, (uint64_t)a2, a3, 0, (uint64_t)&v35);
      if (SHIBYTE(v35.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v35.__r_.__value_.__l.__data_);
      if (SHIBYTE(v32.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v32.__r_.__value_.__l.__data_);
      if (SHIBYTE(v31.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v31.__r_.__value_.__l.__data_);
      if (SHIBYTE(v30.__r_.__value_.__r.__words[2]) < 0)
      {
        v14 = (void *)v30.__r_.__value_.__r.__words[0];
        goto LABEL_26;
      }
    }
  }
}

void sub_18887B62C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,void *__p,uint64_t a24,int a25,__int16 a26,char a27,char a28)
{
  uint64_t v28;

  if (*(char *)(v28 - 73) < 0)
    operator delete(*(void **)(v28 - 96));
  if (a28 < 0)
    operator delete(__p);
  if (a21 < 0)
    operator delete(a16);
  if (a15 < 0)
    operator delete(a10);
  _Unwind_Resume(exception_object);
}

void google::protobuf::DescriptorBuilder::ValidateSymbolName(uint64_t a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  unsigned __int8 *v8;
  int v9;
  std::string *v11;
  __int128 v12;
  std::string v13;
  void *__p[2];
  std::string::size_type v15;

  if ((char)a2[23] < 0)
  {
    v7 = *((_QWORD *)a2 + 1);
    if (v7)
    {
      v8 = *(unsigned __int8 **)a2;
      goto LABEL_6;
    }
LABEL_17:
    google::protobuf::DescriptorBuilder::AddError(a1, a3, a4, 0, "Missing name.");
    return;
  }
  v7 = a2[23];
  if (!a2[23])
    goto LABEL_17;
  v8 = a2;
  do
  {
LABEL_6:
    v9 = *v8;
    if ((v9 & 0xFFFFFFDF) - 91 <= 0xFFFFFFE5 && v9 != 95 && (v9 - 58) <= 0xFFFFFFF5)
    {
      std::operator+<char>();
      v11 = std::string::append(&v13, "\" is not a valid identifier.");
      v12 = *(_OWORD *)&v11->__r_.__value_.__l.__data_;
      v15 = v11->__r_.__value_.__r.__words[2];
      *(_OWORD *)__p = v12;
      v11->__r_.__value_.__l.__size_ = 0;
      v11->__r_.__value_.__r.__words[2] = 0;
      v11->__r_.__value_.__r.__words[0] = 0;
      google::protobuf::DescriptorBuilder::AddError(a1, a3, a4, 0, (uint64_t)__p);
      if (SHIBYTE(v15) < 0)
        operator delete(__p[0]);
      if (SHIBYTE(v13.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v13.__r_.__value_.__l.__data_);
    }
    ++v8;
    --v7;
  }
  while (v7);
}

void sub_18887B7F4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0)
    operator delete(__p);
  if (a15 < 0)
    operator delete(a10);
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::DescriptorBuilder::BuildMessage(google::protobuf::DescriptorBuilder *this, const google::protobuf::DescriptorProto *a2, const google::protobuf::Descriptor *a3, google::protobuf::Descriptor *a4)
{
  uint64_t **v5;
  unsigned __int8 *NameString;
  uint64_t *v7;
  const char *v8;
  int8x8_t *v9;
  unint64_t v10;
  int8x8_t v11;
  unint64_t v12;
  uint8x8_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t **v16;
  uint64_t *v17;
  uint64_t v18;
  unint64_t v19;
  int v20;
  const google::protobuf::DescriptorProto *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void **v25;
  uint64_t *v26;
  const char *v27;
  _QWORD *String;
  uint64_t v29;
  void ***v30;
  char *v31;
  char *v32;
  char *v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  char *v38;
  char *v39;
  int v40;
  void **v41;
  _QWORD *v42;
  int *v43;
  unint64_t v44;
  int **v45;
  _QWORD *v46;
  _QWORD *v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  int **v53;
  void *v54;
  int *v55;
  __int128 v56;
  void *v57;
  google::protobuf::UnknownFieldSet *v58;
  const char *v59;
  uint64_t v60;
  uint64_t *v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t *v64;
  const google::protobuf::Descriptor **v65;
  size_t v66;
  std::string *v67;
  const void *v68;
  int v69;
  const std::string::value_type *v70;
  std::string::size_type v71;
  std::string *v72;
  __int128 v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  const google::protobuf::Descriptor *v78;
  uint64_t ExtensionByNumberNoLock;
  int v80;
  uint64_t Bytes;
  const google::protobuf::DescriptorProto *v82;
  uint64_t v83;
  uint64_t v84;
  int v85;
  int *v86;
  uint64_t v87;
  const google::protobuf::DescriptorProto *v88;
  uint64_t v89;
  uint64_t v90;
  int v91;
  int *v92;
  uint64_t v93;
  const google::protobuf::DescriptorProto *v94;
  uint64_t v95;
  uint64_t v96;
  int v97;
  int *v98;
  int v99;
  const google::protobuf::DescriptorProto *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  int *v104;
  int v105;
  int v106;
  uint64_t v107;
  int **v108;
  char *v109;
  char *v110;
  char *v111;
  char *v112;
  uint64_t v113;
  unint64_t v114;
  uint64_t v115;
  unint64_t v116;
  char *v117;
  char *v118;
  int v119;
  unint64_t v120;
  char *v121;
  char *v122;
  uint64_t v123;
  unint64_t v124;
  uint64_t v125;
  unint64_t v126;
  char *v127;
  char *v128;
  int v129;
  char *v130;
  char *v131;
  uint64_t v132;
  unint64_t v133;
  uint64_t v134;
  unint64_t v135;
  char *v136;
  char *v137;
  int v138;
  uint64_t v139;
  _QWORD *v140;
  _QWORD *v141;
  _QWORD *v142;
  int *v143;
  unint64_t v144;
  int **v145;
  _QWORD *v146;
  _QWORD *v147;
  uint64_t v148;
  unint64_t v149;
  uint64_t v150;
  unint64_t v151;
  uint64_t v152;
  int **v153;
  void *v154;
  int *v155;
  __int128 v156;
  void *v157;
  google::protobuf::UnknownFieldSet *v158;
  const char *v159;
  uint64_t v160;
  uint64_t *v161;
  uint64_t v162;
  _QWORD *v163;
  uint64_t *v164;
  const google::protobuf::Descriptor **v165;
  size_t v166;
  std::string *v167;
  const void *v168;
  int v169;
  const std::string::value_type *v170;
  std::string::size_type v171;
  std::string *v172;
  __int128 v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  const google::protobuf::Descriptor *v178;
  uint64_t v179;
  int v180;
  uint64_t v181;
  const google::protobuf::DescriptorProto *v182;
  uint64_t v183;
  uint64_t v184;
  int v185;
  int *v186;
  int v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  const char *v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t *v195;
  const google::protobuf::DescriptorProto *v196;
  _QWORD *v197;
  char *v198;
  char *v199;
  char *v200;
  uint64_t v201;
  unint64_t v202;
  uint64_t v203;
  unint64_t v204;
  char *v205;
  char *v206;
  char *v207;
  int v208;
  uint64_t v209;
  _QWORD *v210;
  int *v211;
  unint64_t v212;
  int **v213;
  _QWORD *v214;
  _QWORD *v215;
  uint64_t v216;
  unint64_t v217;
  uint64_t v218;
  unint64_t v219;
  uint64_t v220;
  int **v221;
  void *v222;
  int *v223;
  __int128 v224;
  void *v225;
  google::protobuf::UnknownFieldSet *v226;
  const char *v227;
  uint64_t v228;
  uint64_t *v229;
  uint64_t v230;
  _QWORD *v231;
  uint64_t *v232;
  const google::protobuf::Descriptor **v233;
  size_t v234;
  std::string *v235;
  const void *v236;
  int v237;
  const std::string::value_type *v238;
  std::string::size_type v239;
  std::string *v240;
  __int128 v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  const google::protobuf::Descriptor *v246;
  uint64_t v247;
  char *v248;
  int v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  AddrObjGoogle::protobuf *v257;
  uint64_t v258;
  uint64_t v259;
  char *v260;
  char *v261;
  char *v262;
  uint64_t v263;
  const google::protobuf::DescriptorProto *v264;
  uint64_t v265;
  uint64_t v266;
  int v267;
  BOOL v268;
  std::string::size_type v269;
  uint64_t v270;
  google::protobuf::Descriptor *v271;
  uint64_t v272;
  unsigned __int8 **v273;
  int v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  _DWORD *v278;
  uint64_t *v279;
  uint64_t v280;
  AddrObjGoogle::protobuf *v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  char *v285;
  char *v286;
  unsigned __int8 *v287;
  int v288;
  uint64_t v289;
  int v290;
  int v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  unsigned int *v295;
  uint64_t *v296;
  uint64_t v297;
  AddrObjGoogle::protobuf *v298;
  uint64_t v299;
  uint64_t v300;
  void **v301;
  int v302;
  uint64_t v303;
  int v304;
  uint64_t v305;
  unsigned __int8 *v306;
  int v307;
  uint64_t v308;
  uint64_t v309;
  int v310;
  int v311;
  uint64_t v312;
  uint64_t v313;
  int v314;
  uint64_t v315;
  _DWORD *v316;
  int v317;
  uint64_t v318;
  uint64_t v319;
  _DWORD *v320;
  uint64_t v321;
  AddrObjGoogle::protobuf *v322;
  uint64_t v323;
  uint64_t v324;
  char *v325;
  char *v326;
  char *v327;
  uint64_t v328;
  _DWORD *v329;
  uint64_t v330;
  uint64_t v331;
  AddrObjGoogle::protobuf *v332;
  uint64_t v333;
  uint64_t v334;
  char *v335;
  char *v336;
  char *v337;
  uint64_t v338;
  __int128 v340;
  __int128 v341;
  __int128 v342;
  __int128 v343;
  __int128 v344;
  __int128 v345;
  __int128 v346;
  uint64_t v347;
  int v349;
  int v350[2];
  _QWORD *v351;
  google::protobuf::MessageLite *v352;
  google::protobuf::DescriptorBuilder *v353;
  std::string v356;
  void *v357[2];
  __int128 v358;
  int v359;
  uint64_t v360[2];
  uint64_t v361[2];
  uint64_t v362;
  int v363;
  uint64_t v364;
  int v365;
  uint64_t v366;
  int v367;
  uint64_t v368;
  int v369;
  uint64_t v370;
  int v371;
  uint64_t v372;
  uint64_t v373;
  void *v374;
  int v375;
  _BYTE v376[11];
  char v377;
  void *__p;
  char *v379;
  _QWORD v380[4];
  std::string v381;
  std::string v382;
  void *v383;
  _QWORD *v384;
  char v385;
  google::protobuf::UnknownFieldSet *v386;
  google::protobuf::UnknownFieldSet *v387;
  uint64_t v388;

  v388 = *MEMORY[0x1E0C80C00];
  if (a3)
    v5 = (uint64_t **)((char *)a3 + 8);
  else
    v5 = (uint64_t **)(*((_QWORD *)this + 10) + 8);
  NameString = (unsigned __int8 *)google::protobuf::DescriptorBuilder::AllocateNameString(*((google::protobuf::DescriptorPool::Tables **)this + 1), *v5, *((_QWORD *)a2 + 27) & 0xFFFFFFFFFFFFFFFELL);
  google::protobuf::DescriptorBuilder::ValidateSymbolName((uint64_t)this, (unsigned __int8 *)(*((_QWORD *)a2 + 27) & 0xFFFFFFFFFFFFFFFELL), (uint64_t)NameString, (uint64_t)a2);
  v353 = this;
  v7 = (uint64_t *)*((_QWORD *)this + 1);
  google::protobuf::StringPiece::StringPiece<std::allocator<char>>(v361, (uint64_t *)(*((_QWORD *)a2 + 27) & 0xFFFFFFFFFFFFFFFELL), v8);
  *(_QWORD *)a4 = google::protobuf::DescriptorPool::Tables::AllocateString(v7, v361[0], v361[1]);
  *((_QWORD *)a4 + 1) = NameString;
  *((_QWORD *)a4 + 2) = *((_QWORD *)this + 10);
  *((_QWORD *)a4 + 3) = a3;
  *((_WORD *)a4 + 70) = 0;
  *((_BYTE *)a4 + 142) = 0;
  v9 = *(int8x8_t **)(*(_QWORD *)this + 32);
  v10 = std::__string_hash<char>::operator()[abi:ne180100]((uint64_t)&v9[21], (uint64_t)NameString);
  v11 = v9[19];
  if (v11)
  {
    v12 = v10;
    v13 = (uint8x8_t)vcnt_s8(v11);
    v13.i16[0] = vaddlv_u8(v13);
    v14 = v13.u32[0];
    if (v13.u32[0] > 1uLL)
    {
      v15 = v10;
      if (v10 >= *(_QWORD *)&v11)
        v15 = v10 % *(_QWORD *)&v11;
    }
    else
    {
      v15 = (*(_QWORD *)&v11 - 1) & v10;
    }
    v16 = *(uint64_t ***)(*(_QWORD *)&v9[18] + 8 * v15);
    if (v16)
    {
      v17 = *v16;
      if (*v16)
      {
        v18 = (uint64_t)&v9[22];
        do
        {
          v19 = v17[1];
          if (v19 == v12)
          {
            if ((std::equal_to<std::string>::operator()[abi:ne180100](v18, (unsigned __int8 *)v17 + 16, NameString) & 1) != 0)
            {
              *((_BYTE *)a4 + 142) = *((_DWORD *)v17 + 10);
              break;
            }
          }
          else
          {
            if (v14 > 1)
            {
              if (v19 >= *(_QWORD *)&v11)
                v19 %= *(_QWORD *)&v11;
            }
            else
            {
              v19 &= *(_QWORD *)&v11 - 1;
            }
            if (v19 != v15)
              break;
          }
          v17 = (uint64_t *)*v17;
        }
        while (v17);
      }
    }
  }
  v20 = *((_DWORD *)a2 + 38);
  *((_DWORD *)a4 + 27) = v20;
  *((_QWORD *)a4 + 6) = google::protobuf::DescriptorPool::Tables::AllocateBytes(*((google::protobuf::DescriptorPool::Tables **)v353 + 1), 48 * v20);
  v21 = a2;
  if (*((int *)a2 + 38) >= 1)
  {
    v22 = 0;
    do
    {
      v24 = *((_QWORD *)a4 + 6);
      v23 = *(_QWORD *)(*((_QWORD *)v21 + 20) + 8 * v22 + 8);
      v25 = google::protobuf::DescriptorBuilder::AllocateNameString(*((google::protobuf::DescriptorPool::Tables **)v353 + 1), *((uint64_t **)a4 + 1), *(_QWORD *)(v23 + 24) & 0xFFFFFFFFFFFFFFFELL);
      google::protobuf::DescriptorBuilder::ValidateSymbolName((uint64_t)v353, (unsigned __int8 *)(*(_QWORD *)(v23 + 24) & 0xFFFFFFFFFFFFFFFELL), (uint64_t)v25, v23);
      v26 = (uint64_t *)*((_QWORD *)v353 + 1);
      google::protobuf::StringPiece::StringPiece<std::allocator<char>>(&v372, (uint64_t *)(*(_QWORD *)(v23 + 24) & 0xFFFFFFFFFFFFFFFELL), v27);
      String = google::protobuf::DescriptorPool::Tables::AllocateString(v26, v372, v373);
      v29 = v24 + 48 * v22;
      *(_QWORD *)v29 = String;
      *(_QWORD *)(v29 + 8) = v25;
      *(_QWORD *)(v29 + 16) = a4;
      v30 = (void ***)(v29 + 8);
      *(_DWORD *)(v29 + 24) = 0;
      *(_QWORD *)(v29 + 32) = 0;
      *(_QWORD *)(v29 + 40) = 0;
      if ((*(_BYTE *)(v23 + 16) & 2) != 0)
      {
        v352 = *(google::protobuf::MessageLite **)(v23 + 32);
        std::string::basic_string[abi:ne180100]<0>(&v374, "google.protobuf.OneofOptions");
        v379 = 0;
        __p = 0;
        v380[0] = 0;
        v351 = (_QWORD *)(v24 + 48 * v22);
        google::protobuf::OneofDescriptor::GetLocationPath((uint64_t)v351, (char **)&__p);
        v31 = v379;
        if ((unint64_t)v379 >= v380[0])
        {
          v33 = (char *)__p;
          v34 = (v379 - (_BYTE *)__p) >> 2;
          v35 = v34 + 1;
          if ((unint64_t)(v34 + 1) >> 62)
            std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
          v36 = v380[0] - (_QWORD)__p;
          if ((uint64_t)(v380[0] - (_QWORD)__p) >> 1 > v35)
            v35 = v36 >> 1;
          if ((unint64_t)v36 >= 0x7FFFFFFFFFFFFFFCLL)
            v37 = 0x3FFFFFFFFFFFFFFFLL;
          else
            v37 = v35;
          if (v37)
          {
            v38 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<unsigned int>>((uint64_t)v380, v37);
            v31 = v379;
            v33 = (char *)__p;
          }
          else
          {
            v38 = 0;
          }
          v39 = &v38[4 * v34];
          *(_DWORD *)v39 = 2;
          v32 = v39 + 4;
          while (v31 != v33)
          {
            v40 = *((_DWORD *)v31 - 1);
            v31 -= 4;
            *((_DWORD *)v39 - 1) = v40;
            v39 -= 4;
          }
          __p = v39;
          v379 = v32;
          v380[0] = &v38[4 * v37];
          if (v33)
            operator delete(v33);
        }
        else
        {
          *(_DWORD *)v379 = 2;
          v32 = v31 + 4;
        }
        v379 = v32;
        v41 = *v30;
        v42 = (_QWORD *)*((_QWORD *)v353 + 1);
        v43 = (int *)operator new();
        google::protobuf::OneofOptions::OneofOptions((google::protobuf::OneofOptions *)v43, 0);
        v44 = v42[31];
        v45 = (int **)v42[30];
        if ((unint64_t)v45 >= v44)
        {
          v47 = (_QWORD *)v42[29];
          v48 = v45 - (int **)v47;
          v49 = v48 + 1;
          if ((unint64_t)(v48 + 1) >> 61)
            std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
          v50 = v44 - (_QWORD)v47;
          if (v50 >> 2 > v49)
            v49 = v50 >> 2;
          if ((unint64_t)v50 >= 0x7FFFFFFFFFFFFFF8)
            v51 = 0x1FFFFFFFFFFFFFFFLL;
          else
            v51 = v49;
          v384 = v42 + 31;
          if (v51)
          {
            v51 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<std::unique_ptr<google::protobuf::Message>>>(v51);
            v47 = (_QWORD *)v42[29];
            v45 = (int **)v42[30];
          }
          else
          {
            v52 = 0;
          }
          v53 = (int **)(v51 + 8 * v48);
          v54 = (void *)(v51 + 8 * v52);
          v383 = v54;
          *v53 = v43;
          v382.__r_.__value_.__r.__words[2] = (std::string::size_type)(v53 + 1);
          if (v45 == v47)
          {
            v46 = v53 + 1;
          }
          else
          {
            do
            {
              v55 = *--v45;
              *v45 = 0;
              *--v53 = v55;
            }
            while (v45 != v47);
            v46 = (_QWORD *)v382.__r_.__value_.__r.__words[2];
            v54 = v383;
          }
          v56 = *(_OWORD *)(v42 + 29);
          v42[29] = v53;
          v42[30] = v46;
          *(_OWORD *)&v382.__r_.__value_.__r.__words[1] = v56;
          v57 = (void *)v42[31];
          v42[31] = v54;
          v383 = v57;
          v382.__r_.__value_.__r.__words[0] = v56;
          std::__split_buffer<std::unique_ptr<google::protobuf::Message>>::~__split_buffer((uint64_t)&v382);
        }
        else
        {
          *v45 = v43;
          v46 = v45 + 1;
        }
        v42[30] = v46;
        if (google::protobuf::internal::ExtensionSet::IsInitialized((google::protobuf::MessageLite *)((char *)v352 + 16))
          && (google::protobuf::internal::AllAreInitialized<google::protobuf::UninterpretedOption>((uint64_t)v352 + 40) & 1) != 0)
        {
          google::protobuf::MessageLite::SerializeAsString(v352, (uint64_t)&v382);
          v58 = (google::protobuf::UnknownFieldSet *)google::protobuf::MessageLite::ParseFrom<(google::protobuf::MessageLite::ParseFlags)1,std::string>((google::protobuf::MessageLite *)v43, (uint64_t *)&v382);
          if (SHIBYTE(v382.__r_.__value_.__r.__words[2]) < 0)
            operator delete(v382.__r_.__value_.__l.__data_);
          *(_QWORD *)(v24 + 48 * v22 + 40) = v43;
          if (v43[12] >= 1)
          {
            v58 = v386;
            if (v386)
            {
              v387 = v386;
              operator delete(v386);
            }
            if (v385 < 0)
              operator delete(v383);
            if (SHIBYTE(v382.__r_.__value_.__r.__words[2]) < 0)
              operator delete(v382.__r_.__value_.__l.__data_);
          }
          v60 = *((_QWORD *)v352 + 1);
          if ((v60 & 1) != 0)
            v61 = (uint64_t *)((v60 & 0xFFFFFFFFFFFFFFFELL) + 8);
          else
            v61 = (uint64_t *)google::protobuf::UnknownFieldSet::default_instance(v58);
          if (*v61 != v61[1])
          {
            v62 = *((_QWORD *)v353 + 1);
            google::protobuf::StringPiece::StringPiece<std::allocator<char>>(&v381, (uint64_t *)&v374, v59);
            *(_OWORD *)&v382.__r_.__value_.__l.__data_ = *(_OWORD *)&v381.__r_.__value_.__l.__data_;
            v63 = std::__hash_table<std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>,std::__unordered_map_hasher<google::protobuf::StringPiece,std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>,google::protobuf::hash<google::protobuf::StringPiece>,std::equal_to<google::protobuf::StringPiece>,true>,std::__unordered_map_equal<google::protobuf::StringPiece,std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>,std::equal_to<google::protobuf::StringPiece>,google::protobuf::hash<google::protobuf::StringPiece>,true>,std::allocator<std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>>>::find<google::protobuf::StringPiece>((_QWORD *)(v62 + 304), &v382.__r_.__value_.__l.__data_);
            if (v63)
            {
              v64 = v63 + 4;
              v65 = (const google::protobuf::Descriptor **)(v63 + 5);
            }
            else
            {
              v64 = &qword_1ECDBB718;
              v65 = (const google::protobuf::Descriptor **)&qword_1ECDBB720;
            }
            if (*(_DWORD *)v64 == 1)
            {
              v75 = *v61;
              v74 = v61[1];
              if ((int)((unint64_t)(v74 - *v61) >> 4) >= 1)
              {
                v76 = 0;
                v77 = 0;
                v78 = *v65;
                do
                {
                  ExtensionByNumberNoLock = google::protobuf::DescriptorPool::InternalFindExtensionByNumberNoLock(*(google::protobuf::DescriptorPool **)v353, v78, *(_DWORD *)(v75 + v76));
                  if (ExtensionByNumberNoLock)
                  {
                    std::__tree<google::protobuf::FileDescriptor const*>::__erase_unique<google::protobuf::FileDescriptor const*>((uint64_t **)v353 + 15, *(_QWORD *)(ExtensionByNumberNoLock + 40));
                    v75 = *v61;
                    v74 = v61[1];
                  }
                  ++v77;
                  v76 += 16;
                }
                while (v77 < (int)((unint64_t)(v74 - v75) >> 4));
              }
            }
          }
        }
        else
        {
          if (*((char *)v41 + 23) >= 0)
            v66 = *((unsigned __int8 *)v41 + 23);
          else
            v66 = (size_t)v41[1];
          std::string::basic_string[abi:ne180100]((uint64_t)&v381, v66 + 1);
          if ((v381.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
            v67 = &v381;
          else
            v67 = (std::string *)v381.__r_.__value_.__r.__words[0];
          if (v66)
          {
            if (*((char *)v41 + 23) >= 0)
              v68 = v41;
            else
              v68 = *v41;
            memmove(v67, v68, v66);
          }
          *(_WORD *)((char *)&v67->__r_.__value_.__l.__data_ + v66) = 46;
          v69 = *((char *)v41 + 23);
          if (v69 >= 0)
            v70 = (const std::string::value_type *)v41;
          else
            v70 = (const std::string::value_type *)*v41;
          if (v69 >= 0)
            v71 = *((unsigned __int8 *)v41 + 23);
          else
            v71 = (std::string::size_type)v41[1];
          v72 = std::string::append(&v381, v70, v71);
          v73 = *(_OWORD *)&v72->__r_.__value_.__l.__data_;
          v382.__r_.__value_.__r.__words[2] = v72->__r_.__value_.__r.__words[2];
          *(_OWORD *)&v382.__r_.__value_.__l.__data_ = v73;
          v72->__r_.__value_.__l.__size_ = 0;
          v72->__r_.__value_.__r.__words[2] = 0;
          v72->__r_.__value_.__r.__words[0] = 0;
          google::protobuf::DescriptorBuilder::AddError((uint64_t)v353, (uint64_t)&v382, (uint64_t)v352, 7, "Uninterpreted option is missing name or value.");
          if (SHIBYTE(v382.__r_.__value_.__r.__words[2]) < 0)
            operator delete(v382.__r_.__value_.__l.__data_);
          if (SHIBYTE(v381.__r_.__value_.__r.__words[2]) < 0)
            operator delete(v381.__r_.__value_.__l.__data_);
        }
        if (__p)
        {
          v379 = (char *)__p;
          operator delete(__p);
        }
        v29 = (uint64_t)v351;
        if (v377 < 0)
          operator delete(v374);
        v25 = *v30;
        String = (_QWORD *)*v351;
      }
      google::protobuf::DescriptorBuilder::AddSymbol((uint64_t)v353, (uint64_t)v25, (uint64_t)a4, (uint64_t)String, v23, 3, v29);
      ++v22;
      v21 = a2;
    }
    while (v22 < *((int *)a2 + 38));
  }
  v80 = *((_DWORD *)v21 + 8);
  *((_DWORD *)a4 + 26) = v80;
  Bytes = google::protobuf::DescriptorPool::Tables::AllocateBytes(*((google::protobuf::DescriptorPool::Tables **)v353 + 1), 152 * v80);
  v82 = a2;
  *((_QWORD *)a4 + 5) = Bytes;
  if (*((int *)v21 + 8) >= 1)
  {
    v83 = 0;
    v84 = 0;
    do
    {
      google::protobuf::DescriptorBuilder::BuildFieldOrExtension(v353, *(const google::protobuf::FieldDescriptorProto **)(*((_QWORD *)v82 + 5) + 8 * v84++ + 8), a4, (google::protobuf::FieldDescriptor *)(*((_QWORD *)a4 + 5) + v83), 0);
      v82 = a2;
      v83 += 152;
    }
    while (v84 < *((int *)a2 + 8));
  }
  v86 = (int *)((char *)v82 + 56);
  v85 = *((_DWORD *)v82 + 14);
  *((_DWORD *)a4 + 29) = v85;
  v87 = google::protobuf::DescriptorPool::Tables::AllocateBytes(*((google::protobuf::DescriptorPool::Tables **)v353 + 1), 144 * v85);
  v88 = a2;
  *((_QWORD *)a4 + 7) = v87;
  if (*v86 >= 1)
  {
    v89 = 0;
    v90 = 0;
    do
    {
      google::protobuf::DescriptorBuilder::BuildMessage(v353, *(const google::protobuf::DescriptorProto **)(*((_QWORD *)v88 + 8) + 8 * v90++ + 8), a4, (google::protobuf::Descriptor *)(*((_QWORD *)a4 + 7) + v89));
      v88 = a2;
      v89 += 144;
    }
    while (v90 < *((int *)a2 + 14));
  }
  v92 = (int *)((char *)v88 + 80);
  v91 = *((_DWORD *)v88 + 20);
  *((_DWORD *)a4 + 30) = v91;
  v93 = google::protobuf::DescriptorPool::Tables::AllocateBytes(*((google::protobuf::DescriptorPool::Tables **)v353 + 1), 80 * v91);
  v94 = a2;
  *((_QWORD *)a4 + 8) = v93;
  if (*v92 >= 1)
  {
    v95 = 0;
    v96 = 0;
    do
    {
      google::protobuf::DescriptorBuilder::BuildEnum((uint64_t)v353, *(_QWORD *)(*((_QWORD *)v94 + 11) + 8 * v96++ + 8), (uint64_t)a4, *((_QWORD *)a4 + 8) + v95);
      v94 = a2;
      v95 += 80;
    }
    while (v96 < *((int *)a2 + 20));
  }
  v98 = (int *)((char *)v94 + 104);
  v97 = *((_DWORD *)v94 + 26);
  *((_DWORD *)a4 + 31) = v97;
  *((_QWORD *)a4 + 9) = google::protobuf::DescriptorPool::Tables::AllocateBytes(*((google::protobuf::DescriptorPool::Tables **)v353 + 1), 16 * v97);
  v99 = *v98;
  v100 = a2;
  if (v99 >= 1)
  {
    v101 = 0;
    do
    {
      v102 = *(_QWORD *)(*((_QWORD *)v100 + 14) + 8 * v101 + 8);
      v103 = *((_QWORD *)a4 + 9);
      v104 = (int *)(v103 + 16 * v101);
      v105 = *(_DWORD *)(v102 + 32);
      *v104 = v105;
      v106 = *(_DWORD *)(v102 + 36);
      v104[1] = v106;
      if (v105 <= 0)
      {
        google::protobuf::DescriptorBuilder::AddError((uint64_t)v353, *((_QWORD *)a4 + 1), v102, 1, "Extension numbers must be positive integers.");
        v105 = *v104;
        v106 = v104[1];
      }
      if (v105 >= v106)
        google::protobuf::DescriptorBuilder::AddError((uint64_t)v353, *((_QWORD *)a4 + 1), v102, 1, "Extension range end number must be greater than start number.");
      v107 = v103 + 16 * v101;
      *(_QWORD *)(v107 + 8) = 0;
      v108 = (int **)(v107 + 8);
      if ((*(_BYTE *)(v102 + 16) & 1) != 0)
      {
        v379 = 0;
        __p = 0;
        v380[0] = 0;
        google::protobuf::Descriptor::GetLocationPath((uint64_t)a4, (uint64_t)&__p);
        v109 = v379;
        v110 = (char *)v380[0];
        if ((unint64_t)v379 >= v380[0])
        {
          v112 = (char *)__p;
          v113 = (v379 - (_BYTE *)__p) >> 2;
          v114 = v113 + 1;
          if ((unint64_t)(v113 + 1) >> 62)
            std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
          v115 = v380[0] - (_QWORD)__p;
          if ((uint64_t)(v380[0] - (_QWORD)__p) >> 1 > v114)
            v114 = v115 >> 1;
          if ((unint64_t)v115 >= 0x7FFFFFFFFFFFFFFCLL)
            v116 = 0x3FFFFFFFFFFFFFFFLL;
          else
            v116 = v114;
          if (v116)
          {
            v117 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<unsigned int>>((uint64_t)v380, v116);
            v109 = v379;
            v112 = (char *)__p;
          }
          else
          {
            v117 = 0;
          }
          v118 = &v117[4 * v113];
          *(_DWORD *)v118 = 5;
          v111 = v118 + 4;
          while (v109 != v112)
          {
            v119 = *((_DWORD *)v109 - 1);
            v109 -= 4;
            *((_DWORD *)v118 - 1) = v119;
            v118 -= 4;
          }
          v110 = &v117[4 * v116];
          __p = v118;
          v379 = v111;
          v380[0] = v110;
          if (v112)
          {
            operator delete(v112);
            v110 = (char *)v380[0];
          }
        }
        else
        {
          *(_DWORD *)v379 = 5;
          v111 = v109 + 4;
        }
        v379 = v111;
        v120 = ((unint64_t)v104 - *((_QWORD *)a4 + 9)) >> 4;
        if (v111 >= v110)
        {
          v122 = (char *)__p;
          v123 = (v111 - (_BYTE *)__p) >> 2;
          v124 = v123 + 1;
          if ((unint64_t)(v123 + 1) >> 62)
            std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
          v125 = v110 - (_BYTE *)__p;
          if (v125 >> 1 > v124)
            v124 = v125 >> 1;
          if ((unint64_t)v125 >= 0x7FFFFFFFFFFFFFFCLL)
            v126 = 0x3FFFFFFFFFFFFFFFLL;
          else
            v126 = v124;
          if (v126)
          {
            v127 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<unsigned int>>((uint64_t)v380, v126);
            v111 = v379;
            v122 = (char *)__p;
          }
          else
          {
            v127 = 0;
          }
          v128 = &v127[4 * v123];
          *(_DWORD *)v128 = v120;
          v121 = v128 + 4;
          while (v111 != v122)
          {
            v129 = *((_DWORD *)v111 - 1);
            v111 -= 4;
            *((_DWORD *)v128 - 1) = v129;
            v128 -= 4;
          }
          v110 = &v127[4 * v126];
          __p = v128;
          v379 = v121;
          v380[0] = v110;
          if (v122)
          {
            operator delete(v122);
            v110 = (char *)v380[0];
          }
        }
        else
        {
          *(_DWORD *)v111 = v120;
          v121 = v111 + 4;
        }
        v379 = v121;
        if (v121 >= v110)
        {
          v131 = (char *)__p;
          v132 = (v121 - (_BYTE *)__p) >> 2;
          v133 = v132 + 1;
          if ((unint64_t)(v132 + 1) >> 62)
            std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
          v134 = v110 - (_BYTE *)__p;
          if (v134 >> 1 > v133)
            v133 = v134 >> 1;
          if ((unint64_t)v134 >= 0x7FFFFFFFFFFFFFFCLL)
            v135 = 0x3FFFFFFFFFFFFFFFLL;
          else
            v135 = v133;
          if (v135)
          {
            v136 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<unsigned int>>((uint64_t)v380, v135);
            v121 = v379;
            v131 = (char *)__p;
          }
          else
          {
            v136 = 0;
          }
          v137 = &v136[4 * v132];
          *(_DWORD *)v137 = 3;
          v130 = v137 + 4;
          while (v121 != v131)
          {
            v138 = *((_DWORD *)v121 - 1);
            v121 -= 4;
            *((_DWORD *)v137 - 1) = v138;
            v137 -= 4;
          }
          __p = v137;
          v379 = v130;
          v380[0] = &v136[4 * v135];
          if (v131)
            operator delete(v131);
        }
        else
        {
          *(_DWORD *)v121 = 3;
          v130 = v121 + 4;
        }
        v379 = v130;
        v139 = *((_QWORD *)a4 + 1);
        v140 = *(_QWORD **)(v102 + 24);
        std::string::basic_string[abi:ne180100]<0>(&v374, "google.protobuf.ExtensionRangeOptions");
        if (v140)
          v141 = v140;
        else
          v141 = &google::protobuf::_ExtensionRangeOptions_default_instance_;
        v142 = (_QWORD *)*((_QWORD *)v353 + 1);
        v143 = (int *)operator new();
        google::protobuf::ExtensionRangeOptions::ExtensionRangeOptions((google::protobuf::ExtensionRangeOptions *)v143, 0);
        v144 = v142[31];
        v145 = (int **)v142[30];
        if ((unint64_t)v145 >= v144)
        {
          v147 = (_QWORD *)v142[29];
          v148 = v145 - (int **)v147;
          v149 = v148 + 1;
          if ((unint64_t)(v148 + 1) >> 61)
            std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
          v150 = v144 - (_QWORD)v147;
          if (v150 >> 2 > v149)
            v149 = v150 >> 2;
          if ((unint64_t)v150 >= 0x7FFFFFFFFFFFFFF8)
            v151 = 0x1FFFFFFFFFFFFFFFLL;
          else
            v151 = v149;
          v384 = v142 + 31;
          if (v151)
          {
            v151 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<std::unique_ptr<google::protobuf::Message>>>(v151);
            v147 = (_QWORD *)v142[29];
            v145 = (int **)v142[30];
          }
          else
          {
            v152 = 0;
          }
          v153 = (int **)(v151 + 8 * v148);
          v154 = (void *)(v151 + 8 * v152);
          v383 = v154;
          *v153 = v143;
          v382.__r_.__value_.__r.__words[2] = (std::string::size_type)(v153 + 1);
          if (v145 == v147)
          {
            v146 = v153 + 1;
          }
          else
          {
            do
            {
              v155 = *--v145;
              *v145 = 0;
              *--v153 = v155;
            }
            while (v145 != v147);
            v146 = (_QWORD *)v382.__r_.__value_.__r.__words[2];
            v154 = v383;
          }
          v156 = *(_OWORD *)(v142 + 29);
          v142[29] = v153;
          v142[30] = v146;
          *(_OWORD *)&v382.__r_.__value_.__r.__words[1] = v156;
          v157 = (void *)v142[31];
          v142[31] = v154;
          v383 = v157;
          v382.__r_.__value_.__r.__words[0] = v156;
          std::__split_buffer<std::unique_ptr<google::protobuf::Message>>::~__split_buffer((uint64_t)&v382);
        }
        else
        {
          *v145 = v143;
          v146 = v145 + 1;
        }
        v142[30] = v146;
        if (google::protobuf::internal::ExtensionSet::IsInitialized((google::protobuf::internal::ExtensionSet *)(v141 + 2))
          && (google::protobuf::internal::AllAreInitialized<google::protobuf::UninterpretedOption>((uint64_t)(v141 + 5)) & 1) != 0)
        {
          google::protobuf::MessageLite::SerializeAsString((google::protobuf::MessageLite *)v141, (uint64_t)&v382);
          v158 = (google::protobuf::UnknownFieldSet *)google::protobuf::MessageLite::ParseFrom<(google::protobuf::MessageLite::ParseFlags)1,std::string>((google::protobuf::MessageLite *)v143, (uint64_t *)&v382);
          if (SHIBYTE(v382.__r_.__value_.__r.__words[2]) < 0)
            operator delete(v382.__r_.__value_.__l.__data_);
          *v108 = v143;
          if (v143[12] >= 1)
          {
            v158 = v386;
            if (v386)
            {
              v387 = v386;
              operator delete(v386);
            }
            if (v385 < 0)
              operator delete(v383);
            if (SHIBYTE(v382.__r_.__value_.__r.__words[2]) < 0)
              operator delete(v382.__r_.__value_.__l.__data_);
          }
          v160 = v141[1];
          if ((v160 & 1) != 0)
            v161 = (uint64_t *)((v160 & 0xFFFFFFFFFFFFFFFELL) + 8);
          else
            v161 = (uint64_t *)google::protobuf::UnknownFieldSet::default_instance(v158);
          if (*v161 != v161[1])
          {
            v162 = *((_QWORD *)v353 + 1);
            google::protobuf::StringPiece::StringPiece<std::allocator<char>>(&v381, (uint64_t *)&v374, v159);
            *(_OWORD *)&v382.__r_.__value_.__l.__data_ = *(_OWORD *)&v381.__r_.__value_.__l.__data_;
            v163 = std::__hash_table<std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>,std::__unordered_map_hasher<google::protobuf::StringPiece,std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>,google::protobuf::hash<google::protobuf::StringPiece>,std::equal_to<google::protobuf::StringPiece>,true>,std::__unordered_map_equal<google::protobuf::StringPiece,std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>,std::equal_to<google::protobuf::StringPiece>,google::protobuf::hash<google::protobuf::StringPiece>,true>,std::allocator<std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>>>::find<google::protobuf::StringPiece>((_QWORD *)(v162 + 304), &v382.__r_.__value_.__l.__data_);
            if (v163)
            {
              v164 = v163 + 4;
              v165 = (const google::protobuf::Descriptor **)(v163 + 5);
            }
            else
            {
              v164 = &qword_1ECDBB718;
              v165 = (const google::protobuf::Descriptor **)&qword_1ECDBB720;
            }
            if (*(_DWORD *)v164 == 1)
            {
              v175 = *v161;
              v174 = v161[1];
              if ((int)((unint64_t)(v174 - *v161) >> 4) >= 1)
              {
                v176 = 0;
                v177 = 0;
                v178 = *v165;
                do
                {
                  v179 = google::protobuf::DescriptorPool::InternalFindExtensionByNumberNoLock(*(google::protobuf::DescriptorPool **)v353, v178, *(_DWORD *)(v175 + v176));
                  if (v179)
                  {
                    std::__tree<google::protobuf::FileDescriptor const*>::__erase_unique<google::protobuf::FileDescriptor const*>((uint64_t **)v353 + 15, *(_QWORD *)(v179 + 40));
                    v175 = *v161;
                    v174 = v161[1];
                  }
                  ++v177;
                  v176 += 16;
                }
                while (v177 < (int)((unint64_t)(v174 - v175) >> 4));
              }
            }
          }
        }
        else
        {
          if (*(char *)(v139 + 23) >= 0)
            v166 = *(unsigned __int8 *)(v139 + 23);
          else
            v166 = *(_QWORD *)(v139 + 8);
          std::string::basic_string[abi:ne180100]((uint64_t)&v381, v166 + 1);
          if ((v381.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
            v167 = &v381;
          else
            v167 = (std::string *)v381.__r_.__value_.__r.__words[0];
          if (v166)
          {
            if (*(char *)(v139 + 23) >= 0)
              v168 = (const void *)v139;
            else
              v168 = *(const void **)v139;
            memmove(v167, v168, v166);
          }
          *(_WORD *)((char *)&v167->__r_.__value_.__l.__data_ + v166) = 46;
          v169 = *(char *)(v139 + 23);
          if (v169 >= 0)
            v170 = (const std::string::value_type *)v139;
          else
            v170 = *(const std::string::value_type **)v139;
          if (v169 >= 0)
            v171 = *(unsigned __int8 *)(v139 + 23);
          else
            v171 = *(_QWORD *)(v139 + 8);
          v172 = std::string::append(&v381, v170, v171);
          v173 = *(_OWORD *)&v172->__r_.__value_.__l.__data_;
          v382.__r_.__value_.__r.__words[2] = v172->__r_.__value_.__r.__words[2];
          *(_OWORD *)&v382.__r_.__value_.__l.__data_ = v173;
          v172->__r_.__value_.__l.__size_ = 0;
          v172->__r_.__value_.__r.__words[2] = 0;
          v172->__r_.__value_.__r.__words[0] = 0;
          google::protobuf::DescriptorBuilder::AddError((uint64_t)v353, (uint64_t)&v382, (uint64_t)v141, 7, "Uninterpreted option is missing name or value.");
          if (SHIBYTE(v382.__r_.__value_.__r.__words[2]) < 0)
            operator delete(v382.__r_.__value_.__l.__data_);
          if (SHIBYTE(v381.__r_.__value_.__r.__words[2]) < 0)
            operator delete(v381.__r_.__value_.__l.__data_);
        }
        if (v377 < 0)
          operator delete(v374);
        if (__p)
        {
          v379 = (char *)__p;
          operator delete(__p);
        }
      }
      ++v101;
      v100 = a2;
    }
    while (v101 < *((int *)a2 + 26));
  }
  v180 = *((_DWORD *)v100 + 32);
  *((_DWORD *)a4 + 32) = v180;
  v181 = google::protobuf::DescriptorPool::Tables::AllocateBytes(*((google::protobuf::DescriptorPool::Tables **)v353 + 1), 152 * v180);
  v182 = a2;
  *((_QWORD *)a4 + 10) = v181;
  if (*((int *)v100 + 32) >= 1)
  {
    v183 = 0;
    v184 = 0;
    do
    {
      google::protobuf::DescriptorBuilder::BuildFieldOrExtension(v353, *(const google::protobuf::FieldDescriptorProto **)(*((_QWORD *)v182 + 17) + 8 * v184++ + 8), a4, (google::protobuf::FieldDescriptor *)(*((_QWORD *)a4 + 10) + v183), 1);
      v182 = a2;
      v183 += 152;
    }
    while (v184 < *((int *)a2 + 32));
  }
  v186 = (int *)((char *)v182 + 176);
  v185 = *((_DWORD *)v182 + 44);
  *((_DWORD *)a4 + 33) = v185;
  *((_QWORD *)a4 + 11) = google::protobuf::DescriptorPool::Tables::AllocateBytes(*((google::protobuf::DescriptorPool::Tables **)v353 + 1), 8 * v185);
  v187 = *v186;
  if (*v186 >= 1)
  {
    v188 = 0;
    do
    {
      v189 = *(_QWORD *)(*((_QWORD *)a2 + 23) + 8 * v188 + 8);
      v190 = *(_QWORD *)(v189 + 24);
      *(_QWORD *)(*((_QWORD *)a4 + 11) + 8 * v188) = v190;
      if ((int)v190 <= 0)
      {
        google::protobuf::DescriptorBuilder::AddError((uint64_t)v353, *((_QWORD *)a4 + 1), v189, 1, "Reserved numbers must be positive integers.");
        v187 = *((_DWORD *)a2 + 44);
      }
      ++v188;
    }
    while (v188 < v187);
  }
  v191 = *((unsigned int *)a2 + 50);
  *((_DWORD *)a4 + 34) = v191;
  *((_QWORD *)a4 + 12) = google::protobuf::DescriptorPool::Tables::AllocateBytes(*((google::protobuf::DescriptorPool::Tables **)v353 + 1), 8 * (int)v191);
  if ((int)v191 >= 1)
  {
    v193 = 0;
    v194 = 8 * v191;
    do
    {
      v195 = (uint64_t *)*((_QWORD *)v353 + 1);
      google::protobuf::StringPiece::StringPiece<std::allocator<char>>(v360, *(uint64_t **)(*((_QWORD *)a2 + 26) + v193 + 8), v192);
      *(_QWORD *)(*((_QWORD *)a4 + 12) + v193) = google::protobuf::DescriptorPool::Tables::AllocateString(v195, v360[0], v360[1]);
      v193 += 8;
    }
    while (v194 != v193);
  }
  v196 = a2;
  *((_QWORD *)a4 + 4) = 0;
  if ((*((_BYTE *)a2 + 16) & 2) != 0)
  {
    v197 = (_QWORD *)*((_QWORD *)a2 + 28);
    std::string::basic_string[abi:ne180100]<0>(&v374, "google.protobuf.MessageOptions");
    v379 = 0;
    __p = 0;
    v380[0] = 0;
    google::protobuf::Descriptor::GetLocationPath((uint64_t)a4, (uint64_t)&__p);
    v198 = v379;
    if ((unint64_t)v379 >= v380[0])
    {
      v200 = (char *)__p;
      v201 = (v379 - (_BYTE *)__p) >> 2;
      v202 = v201 + 1;
      if ((unint64_t)(v201 + 1) >> 62)
        std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
      v203 = v380[0] - (_QWORD)__p;
      if ((uint64_t)(v380[0] - (_QWORD)__p) >> 1 > v202)
        v202 = v203 >> 1;
      if ((unint64_t)v203 >= 0x7FFFFFFFFFFFFFFCLL)
        v204 = 0x3FFFFFFFFFFFFFFFLL;
      else
        v204 = v202;
      if (v204)
      {
        v205 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<unsigned int>>((uint64_t)v380, v204);
        v198 = v379;
        v200 = (char *)__p;
      }
      else
      {
        v205 = 0;
      }
      v206 = &v205[4 * v201];
      v207 = &v205[4 * v204];
      *(_DWORD *)v206 = 7;
      v199 = v206 + 4;
      while (v198 != v200)
      {
        v208 = *((_DWORD *)v198 - 1);
        v198 -= 4;
        *((_DWORD *)v206 - 1) = v208;
        v206 -= 4;
      }
      __p = v206;
      v379 = v199;
      v380[0] = v207;
      if (v200)
        operator delete(v200);
    }
    else
    {
      *(_DWORD *)v379 = 7;
      v199 = v198 + 4;
    }
    v379 = v199;
    v209 = *((_QWORD *)a4 + 1);
    v210 = (_QWORD *)*((_QWORD *)v353 + 1);
    v211 = (int *)operator new();
    google::protobuf::MessageOptions::MessageOptions((google::protobuf::MessageOptions *)v211, 0);
    v212 = v210[31];
    v213 = (int **)v210[30];
    if ((unint64_t)v213 >= v212)
    {
      v215 = (_QWORD *)v210[29];
      v216 = v213 - (int **)v215;
      v217 = v216 + 1;
      if ((unint64_t)(v216 + 1) >> 61)
        std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
      v218 = v212 - (_QWORD)v215;
      if (v218 >> 2 > v217)
        v217 = v218 >> 2;
      if ((unint64_t)v218 >= 0x7FFFFFFFFFFFFFF8)
        v219 = 0x1FFFFFFFFFFFFFFFLL;
      else
        v219 = v217;
      v384 = v210 + 31;
      if (v219)
      {
        v219 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<std::unique_ptr<google::protobuf::Message>>>(v219);
        v215 = (_QWORD *)v210[29];
        v213 = (int **)v210[30];
      }
      else
      {
        v220 = 0;
      }
      v221 = (int **)(v219 + 8 * v216);
      v222 = (void *)(v219 + 8 * v220);
      v383 = v222;
      *v221 = v211;
      v382.__r_.__value_.__r.__words[2] = (std::string::size_type)(v221 + 1);
      if (v213 == v215)
      {
        v214 = v221 + 1;
      }
      else
      {
        do
        {
          v223 = *--v213;
          *v213 = 0;
          *--v221 = v223;
        }
        while (v213 != v215);
        v214 = (_QWORD *)v382.__r_.__value_.__r.__words[2];
        v222 = v383;
      }
      v224 = *(_OWORD *)(v210 + 29);
      v210[29] = v221;
      v210[30] = v214;
      *(_OWORD *)&v382.__r_.__value_.__r.__words[1] = v224;
      v225 = (void *)v210[31];
      v210[31] = v222;
      v383 = v225;
      v382.__r_.__value_.__r.__words[0] = v224;
      std::__split_buffer<std::unique_ptr<google::protobuf::Message>>::~__split_buffer((uint64_t)&v382);
    }
    else
    {
      *v213 = v211;
      v214 = v213 + 1;
    }
    v210[30] = v214;
    if (google::protobuf::internal::ExtensionSet::IsInitialized((google::protobuf::internal::ExtensionSet *)(v197 + 2))
      && (google::protobuf::internal::AllAreInitialized<google::protobuf::UninterpretedOption>((uint64_t)(v197 + 6)) & 1) != 0)
    {
      google::protobuf::MessageLite::SerializeAsString((google::protobuf::MessageLite *)v197, (uint64_t)&v382);
      v226 = (google::protobuf::UnknownFieldSet *)google::protobuf::MessageLite::ParseFrom<(google::protobuf::MessageLite::ParseFlags)1,std::string>((google::protobuf::MessageLite *)v211, (uint64_t *)&v382);
      if (SHIBYTE(v382.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v382.__r_.__value_.__l.__data_);
      *((_QWORD *)a4 + 4) = v211;
      if (v211[14] >= 1)
      {
        v226 = v386;
        if (v386)
        {
          v387 = v386;
          operator delete(v386);
        }
        if (v385 < 0)
          operator delete(v383);
        if (SHIBYTE(v382.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v382.__r_.__value_.__l.__data_);
      }
      v228 = v197[1];
      if ((v228 & 1) != 0)
        v229 = (uint64_t *)((v228 & 0xFFFFFFFFFFFFFFFELL) + 8);
      else
        v229 = (uint64_t *)google::protobuf::UnknownFieldSet::default_instance(v226);
      if (*v229 != v229[1])
      {
        v230 = *((_QWORD *)v353 + 1);
        google::protobuf::StringPiece::StringPiece<std::allocator<char>>(&v381, (uint64_t *)&v374, v227);
        *(_OWORD *)&v382.__r_.__value_.__l.__data_ = *(_OWORD *)&v381.__r_.__value_.__l.__data_;
        v231 = std::__hash_table<std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>,std::__unordered_map_hasher<google::protobuf::StringPiece,std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>,google::protobuf::hash<google::protobuf::StringPiece>,std::equal_to<google::protobuf::StringPiece>,true>,std::__unordered_map_equal<google::protobuf::StringPiece,std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>,std::equal_to<google::protobuf::StringPiece>,google::protobuf::hash<google::protobuf::StringPiece>,true>,std::allocator<std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>>>::find<google::protobuf::StringPiece>((_QWORD *)(v230 + 304), &v382.__r_.__value_.__l.__data_);
        if (v231)
        {
          v232 = v231 + 4;
          v233 = (const google::protobuf::Descriptor **)(v231 + 5);
        }
        else
        {
          v232 = &qword_1ECDBB718;
          v233 = (const google::protobuf::Descriptor **)&qword_1ECDBB720;
        }
        if (*(_DWORD *)v232 == 1)
        {
          v243 = *v229;
          v242 = v229[1];
          if ((int)((unint64_t)(v242 - *v229) >> 4) >= 1)
          {
            v244 = 0;
            v245 = 0;
            v246 = *v233;
            do
            {
              v247 = google::protobuf::DescriptorPool::InternalFindExtensionByNumberNoLock(*(google::protobuf::DescriptorPool **)v353, v246, *(_DWORD *)(v243 + v244));
              if (v247)
              {
                std::__tree<google::protobuf::FileDescriptor const*>::__erase_unique<google::protobuf::FileDescriptor const*>((uint64_t **)v353 + 15, *(_QWORD *)(v247 + 40));
                v243 = *v229;
                v242 = v229[1];
              }
              ++v245;
              v244 += 16;
            }
            while (v245 < (int)((unint64_t)(v242 - v243) >> 4));
          }
        }
      }
    }
    else
    {
      if (*(char *)(v209 + 23) >= 0)
        v234 = *(unsigned __int8 *)(v209 + 23);
      else
        v234 = *(_QWORD *)(v209 + 8);
      std::string::basic_string[abi:ne180100]((uint64_t)&v381, v234 + 1);
      if ((v381.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v235 = &v381;
      else
        v235 = (std::string *)v381.__r_.__value_.__r.__words[0];
      if (v234)
      {
        if (*(char *)(v209 + 23) >= 0)
          v236 = (const void *)v209;
        else
          v236 = *(const void **)v209;
        memmove(v235, v236, v234);
      }
      *(_WORD *)((char *)&v235->__r_.__value_.__l.__data_ + v234) = 46;
      v237 = *(char *)(v209 + 23);
      if (v237 >= 0)
        v238 = (const std::string::value_type *)v209;
      else
        v238 = *(const std::string::value_type **)v209;
      if (v237 >= 0)
        v239 = *(unsigned __int8 *)(v209 + 23);
      else
        v239 = *(_QWORD *)(v209 + 8);
      v240 = std::string::append(&v381, v238, v239);
      v241 = *(_OWORD *)&v240->__r_.__value_.__l.__data_;
      v382.__r_.__value_.__r.__words[2] = v240->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v382.__r_.__value_.__l.__data_ = v241;
      v240->__r_.__value_.__l.__size_ = 0;
      v240->__r_.__value_.__r.__words[2] = 0;
      v240->__r_.__value_.__r.__words[0] = 0;
      google::protobuf::DescriptorBuilder::AddError((uint64_t)v353, (uint64_t)&v382, (uint64_t)v197, 7, "Uninterpreted option is missing name or value.");
      if (SHIBYTE(v382.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v382.__r_.__value_.__l.__data_);
      if (SHIBYTE(v381.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v381.__r_.__value_.__l.__data_);
    }
    if (__p)
    {
      v379 = (char *)__p;
      operator delete(__p);
    }
    if (v377 < 0)
      operator delete(v374);
    v196 = a2;
  }
  google::protobuf::DescriptorBuilder::AddSymbol((uint64_t)v353, *((_QWORD *)a4 + 1), (uint64_t)a3, *(_QWORD *)a4, (uint64_t)v196, 1, (uint64_t)a4);
  v249 = *((_DWORD *)a2 + 44);
  if (v249 >= 1)
  {
    v250 = 0;
    v251 = 2;
    do
    {
      v252 = v250 + 1;
      if (v250 + 1 >= v249)
      {
        v263 = v249;
      }
      else
      {
        v253 = *(_QWORD *)(*((_QWORD *)a2 + 23) + 8 * v250 + 8);
        v254 = v251;
        do
        {
          v255 = *((_QWORD *)a2 + 23);
          v256 = *(_QWORD *)(v255 + 8 * v254);
          v257 = (AddrObjGoogle::protobuf *)*(unsigned int *)(v256 + 24);
          if (*(_DWORD *)(v253 + 28) > (int)v257 && *(_DWORD *)(v256 + 28) > *(_DWORD *)(v253 + 24))
          {
            v258 = *((_QWORD *)a4 + 1);
            v259 = *(_QWORD *)(v255 + 8 * v250 + 8);
            v382.__r_.__value_.__r.__words[0] = (std::string::size_type)AddrObjGoogle::protobuf::FastInt32ToBuffer(v257, &v382.__r_.__value_.__s.__data_[12], v248);
            LODWORD(v382.__r_.__value_.__r.__words[1]) = strlen(v382.__r_.__value_.__l.__data_);
            v381.__r_.__value_.__r.__words[0] = (std::string::size_type)AddrObjGoogle::protobuf::FastInt32ToBuffer((AddrObjGoogle::protobuf *)(*(_DWORD *)(v256 + 28) - 1), &v381.__r_.__value_.__s.__data_[12], v260);
            LODWORD(v381.__r_.__value_.__r.__words[1]) = strlen(v381.__r_.__value_.__l.__data_);
            __p = AddrObjGoogle::protobuf::FastInt32ToBuffer((AddrObjGoogle::protobuf *)*(unsigned int *)(v253 + 24), (_BYTE *)&v379 + 4, v261);
            LODWORD(v379) = strlen((const char *)__p);
            v374 = AddrObjGoogle::protobuf::FastInt32ToBuffer((AddrObjGoogle::protobuf *)(*(_DWORD *)(v253 + 28) - 1), v376, v262);
            v375 = strlen((const char *)v374);
            v372 = 0;
            LODWORD(v373) = -1;
            v370 = 0;
            v371 = -1;
            v368 = 0;
            v369 = -1;
            v366 = 0;
            v367 = -1;
            v364 = 0;
            v365 = -1;
            v362 = 0;
            v363 = -1;
            *((_QWORD *)&v340 + 1) = &v364;
            *(_QWORD *)&v340 = &v366;
            google::protobuf::strings::Substitute("Reserved range $0 to $1 overlaps with already-defined range $2 to $3.", (uint64_t)&v382, (uint64_t)&v381, (uint64_t)&__p, (uint64_t)&v374, (uint64_t)&v372, (uint64_t)&v370, (uint64_t)&v368, (std::string *)v357, v340, (uint64_t)&v362);
            google::protobuf::DescriptorBuilder::AddError((uint64_t)v353, v258, v259, 1, (uint64_t)v357);
            if (SBYTE7(v358) < 0)
              operator delete(v357[0]);
            v249 = *((_DWORD *)a2 + 44);
          }
          ++v254;
        }
        while (v249 > (int)v254 - 1);
        v263 = v249;
      }
      ++v251;
      ++v250;
    }
    while (v252 < v263);
  }
  *(_OWORD *)v357 = 0u;
  v358 = 0u;
  v359 = 1065353216;
  v264 = a2;
  if (*((int *)a2 + 50) >= 1)
  {
    v265 = 0;
    do
    {
      v266 = *(_QWORD *)(*((_QWORD *)v264 + 26) + 8 * v265 + 8);
      if (std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::find<std::string>(v357, (unsigned __int8 *)v266))
      {
        v267 = *(char *)(v266 + 23);
        v268 = v267 < 0;
        v269 = *(_QWORD *)v266;
        v270 = *(_QWORD *)(v266 + 8);
        if (v267 >= 0)
          v269 = v266;
        v382.__r_.__value_.__r.__words[0] = v269;
        v267 = v267;
        if (v268)
          v267 = v270;
        LODWORD(v382.__r_.__value_.__r.__words[1]) = v267;
        v381.__r_.__value_.__r.__words[0] = 0;
        LODWORD(v381.__r_.__value_.__r.__words[1]) = -1;
        __p = 0;
        LODWORD(v379) = -1;
        v374 = 0;
        v375 = -1;
        v372 = 0;
        LODWORD(v373) = -1;
        v370 = 0;
        v371 = -1;
        v368 = 0;
        v369 = -1;
        v366 = 0;
        v367 = -1;
        v364 = 0;
        v365 = -1;
        v362 = 0;
        v363 = -1;
        *((_QWORD *)&v341 + 1) = &v364;
        *(_QWORD *)&v341 = &v366;
        google::protobuf::strings::Substitute("Field name \"$0\" is reserved multiple times.", (uint64_t)&v382, (uint64_t)&v381, (uint64_t)&__p, (uint64_t)&v374, (uint64_t)&v372, (uint64_t)&v370, (uint64_t)&v368, &v356, v341, (uint64_t)&v362);
        google::protobuf::DescriptorBuilder::AddError((uint64_t)v353, v266, (uint64_t)a2, 0, (uint64_t)&v356);
        if (SHIBYTE(v356.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v356.__r_.__value_.__l.__data_);
      }
      else
      {
        std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::__emplace_unique_key_args<std::string,std::string const&>((uint64_t)v357, (unsigned __int8 *)v266, v266);
      }
      ++v265;
      v264 = a2;
    }
    while (v265 < *((int *)a2 + 50));
  }
  v271 = a4;
  if (*((int *)a4 + 26) >= 1)
  {
    v272 = 0;
    do
    {
      *(_QWORD *)v350 = *((_QWORD *)v271 + 5);
      v273 = (unsigned __int8 **)(*(_QWORD *)v350 + 152 * v272);
      v274 = *((_DWORD *)v271 + 31);
      if (v274 >= 1)
      {
        v275 = 0;
        v276 = 0;
        v277 = *(_QWORD *)v350 + 152 * v272;
        v278 = (_DWORD *)(v277 + 68);
        v279 = (uint64_t *)(v277 + 8);
        do
        {
          v280 = *((_QWORD *)a4 + 9);
          v281 = (AddrObjGoogle::protobuf *)*(unsigned int *)(v280 + v275);
          if ((int)v281 <= *v278)
          {
            v282 = v280 + v275;
            if (*v278 < *(_DWORD *)(v280 + v275 + 4))
            {
              v283 = *v279;
              v284 = *(_QWORD *)(*((_QWORD *)a2 + 14) + 8 * v276 + 8);
              v382.__r_.__value_.__r.__words[0] = (std::string::size_type)AddrObjGoogle::protobuf::FastInt32ToBuffer(v281, &v382.__r_.__value_.__s.__data_[12], v248);
              LODWORD(v382.__r_.__value_.__r.__words[1]) = strlen(v382.__r_.__value_.__l.__data_);
              v381.__r_.__value_.__r.__words[0] = (std::string::size_type)AddrObjGoogle::protobuf::FastInt32ToBuffer((AddrObjGoogle::protobuf *)(*(_DWORD *)(v282 + 4) - 1), &v381.__r_.__value_.__s.__data_[12], v285);
              LODWORD(v381.__r_.__value_.__r.__words[1]) = strlen(v381.__r_.__value_.__l.__data_);
              v287 = *v273;
              v288 = (char)(*v273)[23];
              v289 = *((_QWORD *)*v273 + 1);
              if (v288 < 0)
                v287 = *(unsigned __int8 **)*v273;
              __p = v287;
              v290 = v288;
              if (v288 < 0)
                v290 = v289;
              LODWORD(v379) = v290;
              v374 = AddrObjGoogle::protobuf::FastInt32ToBuffer((AddrObjGoogle::protobuf *)*v278, v376, v286);
              v375 = strlen((const char *)v374);
              v372 = 0;
              LODWORD(v373) = -1;
              v370 = 0;
              v371 = -1;
              v368 = 0;
              v369 = -1;
              v366 = 0;
              v367 = -1;
              v364 = 0;
              v365 = -1;
              v362 = 0;
              v363 = -1;
              *((_QWORD *)&v342 + 1) = &v364;
              *(_QWORD *)&v342 = &v366;
              google::protobuf::strings::Substitute("Extension range $0 to $1 includes field \"$2\" ($3).", (uint64_t)&v382, (uint64_t)&v381, (uint64_t)&__p, (uint64_t)&v374, (uint64_t)&v372, (uint64_t)&v370, (uint64_t)&v368, &v356, v342, (uint64_t)&v362);
              google::protobuf::DescriptorBuilder::AddError((uint64_t)v353, v283, v284, 1, (uint64_t)&v356);
              if (SHIBYTE(v356.__r_.__value_.__r.__words[2]) < 0)
                operator delete(v356.__r_.__value_.__l.__data_);
              v274 = *((_DWORD *)a4 + 31);
            }
          }
          ++v276;
          v275 += 16;
        }
        while (v276 < v274);
      }
      v291 = *((_DWORD *)a4 + 33);
      if (v291 >= 1)
      {
        v292 = 0;
        v293 = 0;
        v294 = *(_QWORD *)v350 + 152 * v272;
        v295 = (unsigned int *)(v294 + 68);
        v296 = (uint64_t *)(v294 + 8);
        do
        {
          v297 = *((_QWORD *)a4 + 11);
          v298 = (AddrObjGoogle::protobuf *)*v295;
          if (*(_DWORD *)(v297 + v292) <= (int)v298 && (int)v298 < *(_DWORD *)(v297 + v292 + 4))
          {
            v299 = *v296;
            v300 = *(_QWORD *)(*((_QWORD *)a2 + 23) + 8 * v293 + 8);
            v301 = (void **)*v273;
            v302 = (char)(*v273)[23];
            v303 = *((_QWORD *)*v273 + 1);
            if (v302 < 0)
              v301 = *(void ***)*v273;
            v382.__r_.__value_.__r.__words[0] = (std::string::size_type)v301;
            v304 = v302;
            if (v302 < 0)
              v304 = v303;
            LODWORD(v382.__r_.__value_.__r.__words[1]) = v304;
            v381.__r_.__value_.__r.__words[0] = (std::string::size_type)AddrObjGoogle::protobuf::FastInt32ToBuffer(v298, &v381.__r_.__value_.__s.__data_[12], v248);
            LODWORD(v381.__r_.__value_.__r.__words[1]) = strlen(v381.__r_.__value_.__l.__data_);
            __p = 0;
            LODWORD(v379) = -1;
            v374 = 0;
            v375 = -1;
            v372 = 0;
            LODWORD(v373) = -1;
            v370 = 0;
            v371 = -1;
            v368 = 0;
            v369 = -1;
            v366 = 0;
            v367 = -1;
            v364 = 0;
            v365 = -1;
            v362 = 0;
            v363 = -1;
            *((_QWORD *)&v343 + 1) = &v364;
            *(_QWORD *)&v343 = &v366;
            google::protobuf::strings::Substitute("Field \"$0\" uses reserved number $1.", (uint64_t)&v382, (uint64_t)&v381, (uint64_t)&__p, (uint64_t)&v374, (uint64_t)&v372, (uint64_t)&v370, (uint64_t)&v368, &v356, v343, (uint64_t)&v362);
            google::protobuf::DescriptorBuilder::AddError((uint64_t)v353, v299, v300, 1, (uint64_t)&v356);
            if (SHIBYTE(v356.__r_.__value_.__r.__words[2]) < 0)
              operator delete(v356.__r_.__value_.__l.__data_);
            v291 = *((_DWORD *)a4 + 33);
          }
          ++v293;
          v292 += 8;
        }
        while (v293 < v291);
      }
      if (std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::find<std::string>(v357, *v273))
      {
        v305 = *(_QWORD *)(*(_QWORD *)v350 + 152 * v272 + 8);
        v306 = *v273;
        v307 = (char)(*v273)[23];
        v308 = *((_QWORD *)*v273 + 1);
        if (v307 < 0)
          v306 = *(unsigned __int8 **)*v273;
        v309 = *(_QWORD *)(*((_QWORD *)a2 + 5) + 8 * v272 + 8);
        v382.__r_.__value_.__r.__words[0] = (std::string::size_type)v306;
        v310 = v307;
        if (v307 < 0)
          v310 = v308;
        LODWORD(v382.__r_.__value_.__r.__words[1]) = v310;
        v381.__r_.__value_.__r.__words[0] = 0;
        LODWORD(v381.__r_.__value_.__r.__words[1]) = -1;
        __p = 0;
        LODWORD(v379) = -1;
        v374 = 0;
        v375 = -1;
        v372 = 0;
        LODWORD(v373) = -1;
        v370 = 0;
        v371 = -1;
        v368 = 0;
        v369 = -1;
        v366 = 0;
        v367 = -1;
        v364 = 0;
        v365 = -1;
        v362 = 0;
        v363 = -1;
        *((_QWORD *)&v344 + 1) = &v364;
        *(_QWORD *)&v344 = &v366;
        google::protobuf::strings::Substitute("Field name \"$0\" is reserved.", (uint64_t)&v382, (uint64_t)&v381, (uint64_t)&__p, (uint64_t)&v374, (uint64_t)&v372, (uint64_t)&v370, (uint64_t)&v368, &v356, v344, (uint64_t)&v362);
        google::protobuf::DescriptorBuilder::AddError((uint64_t)v353, v305, v309, 0, (uint64_t)&v356);
        if (SHIBYTE(v356.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v356.__r_.__value_.__l.__data_);
      }
      ++v272;
      v271 = a4;
    }
    while (v272 < *((int *)a4 + 26));
  }
  v311 = *((_DWORD *)v271 + 31);
  if (v311 >= 1)
  {
    v312 = 0;
    v313 = 0;
    v314 = 1;
    do
    {
      v315 = *((_QWORD *)a4 + 9);
      v316 = (_DWORD *)(v315 + 16 * v313);
      v317 = *((_DWORD *)a4 + 33);
      v349 = v314;
      if (v317 >= 1)
      {
        v347 = *((_QWORD *)a4 + 9);
        v318 = 0;
        v319 = 0;
        v320 = v316 + 1;
        do
        {
          v321 = *((_QWORD *)a4 + 11);
          if (*v320 > *(_DWORD *)(v321 + v318))
          {
            v322 = (AddrObjGoogle::protobuf *)*v316;
            if (*(_DWORD *)(v321 + v318 + 4) > (int)v322)
            {
              v323 = *((_QWORD *)a4 + 1);
              v324 = *(_QWORD *)(*((_QWORD *)a2 + 14) + 8 * v313 + 8);
              v382.__r_.__value_.__r.__words[0] = (std::string::size_type)AddrObjGoogle::protobuf::FastInt32ToBuffer(v322, &v382.__r_.__value_.__s.__data_[12], v248);
              LODWORD(v382.__r_.__value_.__r.__words[1]) = strlen(v382.__r_.__value_.__l.__data_);
              v381.__r_.__value_.__r.__words[0] = (std::string::size_type)AddrObjGoogle::protobuf::FastInt32ToBuffer((AddrObjGoogle::protobuf *)(*v320 - 1), &v381.__r_.__value_.__s.__data_[12], v325);
              LODWORD(v381.__r_.__value_.__r.__words[1]) = strlen(v381.__r_.__value_.__l.__data_);
              __p = AddrObjGoogle::protobuf::FastInt32ToBuffer((AddrObjGoogle::protobuf *)*(unsigned int *)(v321 + v318), (_BYTE *)&v379 + 4, v326);
              LODWORD(v379) = strlen((const char *)__p);
              v374 = AddrObjGoogle::protobuf::FastInt32ToBuffer((AddrObjGoogle::protobuf *)(*(_DWORD *)(v321 + v318 + 4) - 1), v376, v327);
              v375 = strlen((const char *)v374);
              v372 = 0;
              LODWORD(v373) = -1;
              v370 = 0;
              v371 = -1;
              v368 = 0;
              v369 = -1;
              v366 = 0;
              v367 = -1;
              v364 = 0;
              v365 = -1;
              v362 = 0;
              v363 = -1;
              *((_QWORD *)&v345 + 1) = &v364;
              *(_QWORD *)&v345 = &v366;
              google::protobuf::strings::Substitute("Extension range $0 to $1 overlaps with reserved range $2 to $3.", (uint64_t)&v382, (uint64_t)&v381, (uint64_t)&__p, (uint64_t)&v374, (uint64_t)&v372, (uint64_t)&v370, (uint64_t)&v368, &v356, v345, (uint64_t)&v362);
              google::protobuf::DescriptorBuilder::AddError((uint64_t)v353, v323, v324, 1, (uint64_t)&v356);
              if (SHIBYTE(v356.__r_.__value_.__r.__words[2]) < 0)
                operator delete(v356.__r_.__value_.__l.__data_);
              v317 = *((_DWORD *)a4 + 33);
            }
          }
          ++v319;
          v318 += 8;
        }
        while (v319 < v317);
        v311 = *((_DWORD *)a4 + 31);
        v315 = v347;
        v314 = v349;
      }
      v328 = v313 + 1;
      if (v313 + 1 >= v311)
      {
        v338 = v311;
      }
      else
      {
        v329 = (_DWORD *)(v315 + 16 * v313 + 4);
        v330 = v312;
        do
        {
          v331 = *((_QWORD *)a4 + 9) + v330;
          v332 = (AddrObjGoogle::protobuf *)*(unsigned int *)(v331 + 16);
          if (*v329 > (int)v332 && *(_DWORD *)(v331 + 20) > *v316)
          {
            v333 = *((_QWORD *)a4 + 1);
            v334 = *(_QWORD *)(*((_QWORD *)a2 + 14) + 8 * v313 + 8);
            v382.__r_.__value_.__r.__words[0] = (std::string::size_type)AddrObjGoogle::protobuf::FastInt32ToBuffer(v332, &v382.__r_.__value_.__s.__data_[12], v248);
            LODWORD(v382.__r_.__value_.__r.__words[1]) = strlen(v382.__r_.__value_.__l.__data_);
            v381.__r_.__value_.__r.__words[0] = (std::string::size_type)AddrObjGoogle::protobuf::FastInt32ToBuffer((AddrObjGoogle::protobuf *)(*(_DWORD *)(v331 + 20) - 1), &v381.__r_.__value_.__s.__data_[12], v335);
            LODWORD(v381.__r_.__value_.__r.__words[1]) = strlen(v381.__r_.__value_.__l.__data_);
            __p = AddrObjGoogle::protobuf::FastInt32ToBuffer((AddrObjGoogle::protobuf *)*v316, (_BYTE *)&v379 + 4, v336);
            LODWORD(v379) = strlen((const char *)__p);
            v374 = AddrObjGoogle::protobuf::FastInt32ToBuffer((AddrObjGoogle::protobuf *)(*v329 - 1), v376, v337);
            v375 = strlen((const char *)v374);
            v372 = 0;
            LODWORD(v373) = -1;
            v370 = 0;
            v371 = -1;
            v368 = 0;
            v369 = -1;
            v366 = 0;
            v367 = -1;
            v364 = 0;
            v365 = -1;
            v362 = 0;
            v363 = -1;
            *((_QWORD *)&v346 + 1) = &v364;
            *(_QWORD *)&v346 = &v366;
            google::protobuf::strings::Substitute("Extension range $0 to $1 overlaps with already-defined range $2 to $3.", (uint64_t)&v382, (uint64_t)&v381, (uint64_t)&__p, (uint64_t)&v374, (uint64_t)&v372, (uint64_t)&v370, (uint64_t)&v368, &v356, v346, (uint64_t)&v362);
            google::protobuf::DescriptorBuilder::AddError((uint64_t)v353, v333, v334, 1, (uint64_t)&v356);
            if (SHIBYTE(v356.__r_.__value_.__r.__words[2]) < 0)
              operator delete(v356.__r_.__value_.__l.__data_);
            v311 = *((_DWORD *)a4 + 31);
          }
          ++v314;
          v330 += 16;
        }
        while (v311 > v314);
        v338 = v311;
        v314 = v349;
        v328 = v313 + 1;
      }
      ++v314;
      v312 += 16;
      v313 = v328;
    }
    while (v328 < v338);
  }
  return std::__hash_table<std::string,AddrObjGoogle::protobuf::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table((uint64_t)v357);
}

void sub_18887D994(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  void *a71;
  uint64_t v71;
  void *v73;

  v73 = (void *)STACK[0x220];
  if (STACK[0x220])
  {
    STACK[0x228] = (unint64_t)v73;
    operator delete(v73);
  }
  if (SLOBYTE(STACK[0x207]) < 0)
    operator delete(a71);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::DescriptorBuilder::BuildEnum(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t **v5;
  void **NameString;
  uint64_t *v7;
  const char *v8;
  _QWORD *String;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  const char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t *v19;
  std::string *EmptyString;
  std::string *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  std::string::size_type v26;
  const std::string::value_type *v27;
  int v28;
  const std::string::value_type *v29;
  std::string::size_type v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  std::string::size_type size;
  std::string::size_type v37;
  void *v38;
  uint64_t v39;
  unint64_t v40;
  int64_t v41;
  unint64_t v42;
  char *v43;
  char *v44;
  int v45;
  uint64_t v46;
  _QWORD *v47;
  int *v48;
  unint64_t v49;
  int **v50;
  _QWORD *v51;
  _QWORD *v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  int **v58;
  void *v59;
  int *v60;
  __int128 v61;
  void *v62;
  uint64_t v63;
  google::protobuf::UnknownFieldSet *v64;
  const char *v65;
  uint64_t v66;
  uint64_t *v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t *v70;
  const google::protobuf::Descriptor **v71;
  size_t v72;
  std::string *v73;
  const std::string::value_type *v74;
  int v75;
  const std::string::value_type *v76;
  std::string::size_type v77;
  std::string *v78;
  __int128 v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  const google::protobuf::Descriptor *v84;
  uint64_t ExtensionByNumberNoLock;
  int v86;
  uint64_t v87;
  std::string::size_type v88;
  std::string *v89;
  std::string::size_type v90;
  char v91;
  uint64_t v92;
  std::string *v93;
  __int128 v94;
  std::string *v95;
  std::string::size_type v96;
  std::string *v97;
  __int128 v98;
  std::string *v99;
  __int128 v100;
  int v101;
  const std::string::value_type *v102;
  std::string::size_type v103;
  std::string *v104;
  __int128 v105;
  std::string *v106;
  __int128 v107;
  uint64_t v108;
  int v109;
  int v110;
  int v111;
  uint64_t i;
  uint64_t v113;
  int32x2_t v114;
  uint64_t v115;
  const char *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t *v119;
  const char *v120;
  unsigned __int8 *v121;
  uint64_t v122;
  int v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t **v127;
  std::string::size_type v128;
  std::string::size_type v129;
  std::string::size_type v130;
  std::string *v131;
  int v132;
  std::string::size_type v133;
  char v134;
  std::string *v135;
  std::string::size_type v136;
  char v137;
  int v138;
  BOOL v139;
  BOOL v140;
  char v141;
  char v142;
  char v143;
  uint64_t **v144;
  uint64_t *v145;
  _OWORD *v146;
  uint64_t **v147;
  std::string::size_type v148;
  void *v149;
  std::string::size_type v150;
  uint64_t *v151;
  _DWORD *v152;
  const void **v153;
  uint64_t *v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  int v158;
  uint64_t *v159;
  std::string *v160;
  __int128 v161;
  uint64_t **v162;
  _QWORD *v163;
  uint64_t **v164;
  std::string *v165;
  uint64_t v166;
  uint64_t *v167;
  uint64_t v168;
  int v169;
  const std::string::value_type *v170;
  std::string::size_type v171;
  std::string *v172;
  __int128 v173;
  std::string *v174;
  __int128 v175;
  uint64_t v176;
  uint64_t v177;
  char *v178;
  uint64_t v179;
  _QWORD *v180;
  std::string::size_type v181;
  std::string::size_type v182;
  void *v183;
  uint64_t v184;
  unint64_t v185;
  int64_t v186;
  unint64_t v187;
  char *v188;
  char *v189;
  std::string::size_type v190;
  int v191;
  uint64_t v192;
  _QWORD *v193;
  int *v194;
  unint64_t v195;
  int **v196;
  _QWORD *v197;
  _QWORD *v198;
  uint64_t v199;
  unint64_t v200;
  uint64_t v201;
  unint64_t v202;
  uint64_t v203;
  int **v204;
  void *v205;
  int *v206;
  __int128 v207;
  void *v208;
  google::protobuf::UnknownFieldSet *v209;
  const char *v210;
  uint64_t v211;
  uint64_t *v212;
  uint64_t v213;
  _QWORD *v214;
  uint64_t *v215;
  const google::protobuf::Descriptor **v216;
  size_t v217;
  std::string *v218;
  const void *v219;
  int v220;
  const std::string::value_type *v221;
  std::string::size_type v222;
  std::string *v223;
  __int128 v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  const google::protobuf::Descriptor *v229;
  uint64_t v230;
  char *v231;
  int v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  AddrObjGoogle::protobuf *v240;
  uint64_t v241;
  uint64_t v242;
  char *v243;
  char *v244;
  char *v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  int v250;
  BOOL v251;
  std::string::size_type v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  unsigned __int8 **v257;
  int v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  unsigned int *v262;
  uint64_t *v263;
  uint64_t v264;
  AddrObjGoogle::protobuf *v265;
  uint64_t v266;
  uint64_t v267;
  std::string::size_type v268;
  int v269;
  uint64_t v270;
  int v271;
  uint64_t v272;
  unsigned __int8 *v273;
  int v274;
  uint64_t v275;
  uint64_t v276;
  int v277;
  __int128 v279;
  __int128 v280;
  __int128 v281;
  __int128 v282;
  void **v283;
  uint64_t **v285;
  int **v286;
  uint64_t v287;
  uint64_t v288;
  std::string v291;
  void *v292[2];
  __int128 v293;
  int v294;
  uint64_t v295[2];
  uint64_t v296[2];
  uint64_t v297;
  int v298;
  _OWORD v299[3];
  unsigned __int8 *v300;
  uint64_t v301;
  std::string v302;
  std::string v303;
  std::string v304;
  std::string v305;
  std::string __p[2];
  std::string v307;
  std::string v308;
  void *v309;
  _QWORD *v310;
  char v311;
  google::protobuf::UnknownFieldSet *v312;
  google::protobuf::UnknownFieldSet *v313;
  uint64_t v314;

  v314 = *MEMORY[0x1E0C80C00];
  if (a3)
    v5 = (uint64_t **)(a3 + 8);
  else
    v5 = (uint64_t **)(*(_QWORD *)(a1 + 80) + 8);
  NameString = google::protobuf::DescriptorBuilder::AllocateNameString(*(google::protobuf::DescriptorPool::Tables **)(a1 + 8), *v5, *(_QWORD *)(a2 + 96) & 0xFFFFFFFFFFFFFFFELL);
  google::protobuf::DescriptorBuilder::ValidateSymbolName(a1, (unsigned __int8 *)(*(_QWORD *)(a2 + 96) & 0xFFFFFFFFFFFFFFFELL), (uint64_t)NameString, a2);
  v288 = a1;
  v7 = *(uint64_t **)(a1 + 8);
  google::protobuf::StringPiece::StringPiece<std::allocator<char>>(v296, (uint64_t *)(*(_QWORD *)(a2 + 96) & 0xFFFFFFFFFFFFFFFELL), v8);
  String = google::protobuf::DescriptorPool::Tables::AllocateString(v7, v296[0], v296[1]);
  v10 = a4;
  *(_QWORD *)a4 = String;
  *(_QWORD *)(a4 + 8) = NameString;
  v11 = a1;
  *(_QWORD *)(a4 + 16) = *(_QWORD *)(a1 + 80);
  *(_QWORD *)(a4 + 24) = a3;
  *(_WORD *)(a4 + 40) = 0;
  v12 = *(_DWORD *)(a2 + 32);
  if (!v12)
  {
    google::protobuf::DescriptorBuilder::AddError(a1, (uint64_t)NameString, a2, 0, "Enums must contain at least one value.");
    v10 = a4;
    v12 = *(_DWORD *)(a2 + 32);
    v11 = a1;
  }
  *(_DWORD *)(v10 + 44) = v12;
  v13 = a2;
  *(_QWORD *)(a4 + 48) = google::protobuf::DescriptorPool::Tables::AllocateBytes(*(google::protobuf::DescriptorPool::Tables **)(v11 + 8), 40 * v12);
  if (*(int *)(a2 + 32) >= 1)
  {
    v15 = 0;
    v283 = (void **)(a1 + 24);
    v285 = (uint64_t **)(a1 + 120);
    do
    {
      v16 = *(_QWORD *)(*(_QWORD *)(v13 + 40) + 8 * v15 + 8);
      v17 = *(_QWORD *)(a4 + 48);
      v18 = *(uint64_t **)(v288 + 8);
      v287 = v16;
      google::protobuf::StringPiece::StringPiece<std::allocator<char>>(&v300, (uint64_t *)(*(_QWORD *)(v16 + 24) & 0xFFFFFFFFFFFFFFFELL), v14);
      v19 = (uint64_t *)(v17 + 40 * v15);
      *v19 = (uint64_t)google::protobuf::DescriptorPool::Tables::AllocateString(v18, (uint64_t)v300, v301);
      *((_DWORD *)v19 + 4) = *(_DWORD *)(v287 + 40);
      v19[3] = a4;
      EmptyString = (std::string *)google::protobuf::DescriptorPool::Tables::AllocateEmptyString(*(google::protobuf::DescriptorPool::Tables **)(v288 + 8));
      v21 = EmptyString;
      v22 = *(_QWORD *)(a4 + 8);
      if (*(char *)(v22 + 23) < 0)
        v23 = *(_QWORD *)(v22 + 8);
      else
        v23 = *(unsigned __int8 *)(v22 + 23);
      if (*(char *)(*(_QWORD *)a4 + 23) < 0)
        v24 = *(_QWORD *)(*(_QWORD *)a4 + 8);
      else
        v24 = *(unsigned __int8 *)(*(_QWORD *)a4 + 23);
      if (*(char *)(*v19 + 23) < 0)
        v25 = *(_QWORD *)(*v19 + 8);
      else
        v25 = *(unsigned __int8 *)(*v19 + 23);
      v26 = v23 - v24;
      std::string::reserve(EmptyString, v25 + v23 - v24);
      v27 = *(const std::string::value_type **)(a4 + 8);
      if (v27[23] < 0)
        v27 = *(const std::string::value_type **)v27;
      std::string::append(v21, v27, v26);
      v28 = *(char *)(*v19 + 23);
      if (v28 >= 0)
        v29 = (const std::string::value_type *)*v19;
      else
        v29 = *(const std::string::value_type **)*v19;
      if (v28 >= 0)
        v30 = *(unsigned __int8 *)(*v19 + 23);
      else
        v30 = *(_QWORD *)(*v19 + 8);
      std::string::append(v21, v29, v30);
      v31 = v17 + 40 * v15;
      *(_QWORD *)(v31 + 8) = v21;
      v32 = (uint64_t *)(v31 + 8);
      google::protobuf::DescriptorBuilder::ValidateSymbolName(v288, (unsigned __int8 *)(*(_QWORD *)(v287 + 24) & 0xFFFFFFFFFFFFFFFELL), (uint64_t)v21, v287);
      v33 = v17 + 40 * v15;
      *(_QWORD *)(v33 + 32) = 0;
      v286 = (int **)(v33 + 32);
      v34 = v287;
      if ((*(_BYTE *)(v287 + 16) & 2) != 0)
      {
        v35 = *(_QWORD **)(v287 + 32);
        std::string::basic_string[abi:ne180100]<0>(&v305, "google.protobuf.EnumValueOptions");
        memset(__p, 0, 24);
        google::protobuf::EnumValueDescriptor::GetLocationPath(v17 + 40 * v15, &__p[0].__r_.__value_.__l.__data_);
        size = __p[0].__r_.__value_.__l.__size_;
        if (__p[0].__r_.__value_.__l.__size_ >= __p[0].__r_.__value_.__r.__words[2])
        {
          v38 = (void *)__p[0].__r_.__value_.__r.__words[0];
          v39 = (uint64_t)(__p[0].__r_.__value_.__l.__size_ - __p[0].__r_.__value_.__r.__words[0]) >> 2;
          v40 = v39 + 1;
          if ((unint64_t)(v39 + 1) >> 62)
            std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
          v41 = __p[0].__r_.__value_.__r.__words[2] - __p[0].__r_.__value_.__r.__words[0];
          if ((uint64_t)(__p[0].__r_.__value_.__r.__words[2] - __p[0].__r_.__value_.__r.__words[0]) >> 1 > v40)
            v40 = v41 >> 1;
          if ((unint64_t)v41 >= 0x7FFFFFFFFFFFFFFCLL)
            v42 = 0x3FFFFFFFFFFFFFFFLL;
          else
            v42 = v40;
          if (v42)
          {
            v43 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<unsigned int>>((uint64_t)&__p[0].__r_.__value_.__r.__words[2], v42);
            size = __p[0].__r_.__value_.__l.__size_;
            v38 = (void *)__p[0].__r_.__value_.__r.__words[0];
          }
          else
          {
            v43 = 0;
          }
          v44 = &v43[4 * v39];
          *(_DWORD *)v44 = 3;
          v37 = (std::string::size_type)(v44 + 4);
          while ((void *)size != v38)
          {
            v45 = *(_DWORD *)(size - 4);
            size -= 4;
            *((_DWORD *)v44 - 1) = v45;
            v44 -= 4;
          }
          __p[0].__r_.__value_.__r.__words[0] = (std::string::size_type)v44;
          __p[0].__r_.__value_.__l.__size_ = v37;
          __p[0].__r_.__value_.__r.__words[2] = (std::string::size_type)&v43[4 * v42];
          if (v38)
            operator delete(v38);
        }
        else
        {
          *(_DWORD *)__p[0].__r_.__value_.__l.__size_ = 3;
          v37 = size + 4;
        }
        __p[0].__r_.__value_.__l.__size_ = v37;
        v46 = *v32;
        v47 = *(_QWORD **)(v288 + 8);
        v48 = (int *)operator new();
        google::protobuf::EnumValueOptions::EnumValueOptions((google::protobuf::EnumValueOptions *)v48, 0);
        v49 = v47[31];
        v50 = (int **)v47[30];
        if ((unint64_t)v50 >= v49)
        {
          v52 = (_QWORD *)v47[29];
          v53 = v50 - (int **)v52;
          v54 = v53 + 1;
          if ((unint64_t)(v53 + 1) >> 61)
            std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
          v55 = v49 - (_QWORD)v52;
          if (v55 >> 2 > v54)
            v54 = v55 >> 2;
          if ((unint64_t)v55 >= 0x7FFFFFFFFFFFFFF8)
            v56 = 0x1FFFFFFFFFFFFFFFLL;
          else
            v56 = v54;
          v310 = v47 + 31;
          if (v56)
          {
            v56 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<std::unique_ptr<google::protobuf::Message>>>(v56);
            v52 = (_QWORD *)v47[29];
            v50 = (int **)v47[30];
          }
          else
          {
            v57 = 0;
          }
          v58 = (int **)(v56 + 8 * v53);
          v59 = (void *)(v56 + 8 * v57);
          v309 = v59;
          *v58 = v48;
          v308.__r_.__value_.__r.__words[2] = (std::string::size_type)(v58 + 1);
          if (v50 == v52)
          {
            v51 = v58 + 1;
          }
          else
          {
            do
            {
              v60 = *--v50;
              *v50 = 0;
              *--v58 = v60;
            }
            while (v50 != v52);
            v51 = (_QWORD *)v308.__r_.__value_.__r.__words[2];
            v59 = v309;
          }
          v61 = *(_OWORD *)(v47 + 29);
          v47[29] = v58;
          v47[30] = v51;
          *(_OWORD *)&v308.__r_.__value_.__r.__words[1] = v61;
          v62 = (void *)v47[31];
          v47[31] = v59;
          v309 = v62;
          v308.__r_.__value_.__r.__words[0] = v61;
          std::__split_buffer<std::unique_ptr<google::protobuf::Message>>::~__split_buffer((uint64_t)&v308);
        }
        else
        {
          *v50 = v48;
          v51 = v50 + 1;
        }
        v47[30] = v51;
        v63 = (uint64_t)v35;
        if (google::protobuf::internal::ExtensionSet::IsInitialized((google::protobuf::internal::ExtensionSet *)(v35 + 2))
          && (google::protobuf::internal::AllAreInitialized<google::protobuf::UninterpretedOption>((uint64_t)(v35 + 6)) & 1) != 0)
        {
          google::protobuf::MessageLite::SerializeAsString((google::protobuf::MessageLite *)v35, (uint64_t)&v308);
          v64 = (google::protobuf::UnknownFieldSet *)google::protobuf::MessageLite::ParseFrom<(google::protobuf::MessageLite::ParseFlags)1,std::string>((google::protobuf::MessageLite *)v48, (uint64_t *)&v308);
          if (SHIBYTE(v308.__r_.__value_.__r.__words[2]) < 0)
            operator delete(v308.__r_.__value_.__l.__data_);
          *v286 = v48;
          if (v48[14] >= 1)
          {
            v64 = v312;
            if (v312)
            {
              v313 = v312;
              operator delete(v312);
            }
            if (v311 < 0)
              operator delete(v309);
            if (SHIBYTE(v308.__r_.__value_.__r.__words[2]) < 0)
              operator delete(v308.__r_.__value_.__l.__data_);
          }
          v66 = v35[1];
          if ((v66 & 1) != 0)
            v67 = (uint64_t *)((v66 & 0xFFFFFFFFFFFFFFFELL) + 8);
          else
            v67 = (uint64_t *)google::protobuf::UnknownFieldSet::default_instance(v64);
          if (*v67 != v67[1])
          {
            v68 = *(_QWORD *)(v288 + 8);
            google::protobuf::StringPiece::StringPiece<std::allocator<char>>(&v307, (uint64_t *)&v305, v65);
            *(_OWORD *)&v308.__r_.__value_.__l.__data_ = *(_OWORD *)&v307.__r_.__value_.__l.__data_;
            v69 = std::__hash_table<std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>,std::__unordered_map_hasher<google::protobuf::StringPiece,std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>,google::protobuf::hash<google::protobuf::StringPiece>,std::equal_to<google::protobuf::StringPiece>,true>,std::__unordered_map_equal<google::protobuf::StringPiece,std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>,std::equal_to<google::protobuf::StringPiece>,google::protobuf::hash<google::protobuf::StringPiece>,true>,std::allocator<std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>>>::find<google::protobuf::StringPiece>((_QWORD *)(v68 + 304), &v308.__r_.__value_.__l.__data_);
            if (v69)
            {
              v70 = v69 + 4;
              v71 = (const google::protobuf::Descriptor **)(v69 + 5);
            }
            else
            {
              v70 = &qword_1ECDBB718;
              v71 = (const google::protobuf::Descriptor **)&qword_1ECDBB720;
            }
            if (*(_DWORD *)v70 == 1)
            {
              v81 = *v67;
              v80 = v67[1];
              if ((int)((unint64_t)(v80 - *v67) >> 4) >= 1)
              {
                v82 = 0;
                v83 = 0;
                v84 = *v71;
                do
                {
                  ExtensionByNumberNoLock = google::protobuf::DescriptorPool::InternalFindExtensionByNumberNoLock(*(google::protobuf::DescriptorPool **)v288, v84, *(_DWORD *)(v81 + v82));
                  if (ExtensionByNumberNoLock)
                  {
                    std::__tree<google::protobuf::FileDescriptor const*>::__erase_unique<google::protobuf::FileDescriptor const*>(v285, *(_QWORD *)(ExtensionByNumberNoLock + 40));
                    v81 = *v67;
                    v80 = v67[1];
                  }
                  ++v83;
                  v82 += 16;
                }
                while (v83 < (int)((unint64_t)(v80 - v81) >> 4));
              }
            }
          }
        }
        else
        {
          if (*(char *)(v46 + 23) >= 0)
            v72 = *(unsigned __int8 *)(v46 + 23);
          else
            v72 = *(_QWORD *)(v46 + 8);
          std::string::basic_string[abi:ne180100]((uint64_t)&v307, v72 + 1);
          if ((v307.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
            v73 = &v307;
          else
            v73 = (std::string *)v307.__r_.__value_.__r.__words[0];
          if (v72)
          {
            if (*(char *)(v46 + 23) >= 0)
              v74 = (const std::string::value_type *)v46;
            else
              v74 = *(const std::string::value_type **)v46;
            memmove(v73, v74, v72);
          }
          *(_WORD *)((char *)&v73->__r_.__value_.__l.__data_ + v72) = 46;
          v75 = *(char *)(v46 + 23);
          if (v75 >= 0)
            v76 = (const std::string::value_type *)v46;
          else
            v76 = *(const std::string::value_type **)v46;
          if (v75 >= 0)
            v77 = *(unsigned __int8 *)(v46 + 23);
          else
            v77 = *(_QWORD *)(v46 + 8);
          v78 = std::string::append(&v307, v76, v77);
          v79 = *(_OWORD *)&v78->__r_.__value_.__l.__data_;
          v308.__r_.__value_.__r.__words[2] = v78->__r_.__value_.__r.__words[2];
          *(_OWORD *)&v308.__r_.__value_.__l.__data_ = v79;
          v78->__r_.__value_.__l.__size_ = 0;
          v78->__r_.__value_.__r.__words[2] = 0;
          v78->__r_.__value_.__r.__words[0] = 0;
          google::protobuf::DescriptorBuilder::AddError(v288, (uint64_t)&v308, v63, 7, "Uninterpreted option is missing name or value.");
          if (SHIBYTE(v308.__r_.__value_.__r.__words[2]) < 0)
            operator delete(v308.__r_.__value_.__l.__data_);
          if (SHIBYTE(v307.__r_.__value_.__r.__words[2]) < 0)
            operator delete(v307.__r_.__value_.__l.__data_);
        }
        if (__p[0].__r_.__value_.__r.__words[0])
        {
          __p[0].__r_.__value_.__l.__size_ = __p[0].__r_.__value_.__r.__words[0];
          operator delete(__p[0].__r_.__value_.__l.__data_);
        }
        if (SHIBYTE(v305.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v305.__r_.__value_.__l.__data_);
        v34 = v287;
      }
      v86 = google::protobuf::DescriptorBuilder::AddSymbol(v288, *v32, *(_QWORD *)(a4 + 24), *v19, v34, 5, (uint64_t)v19);
      if (((google::protobuf::FileDescriptorTables::AddAliasUnderParent(*(_QWORD *)(v288 + 88), a4, *v19, 5, (uint64_t)v19) ^ 1 | v86) & 1) == 0)
      {
        memset(&v308, 0, sizeof(v308));
        v87 = *(_QWORD *)(a4 + 24);
        if (!v87)
          v87 = *(_QWORD *)(v288 + 80);
        std::string::operator=(&v308, *(const std::string **)(v87 + 8));
        v88 = HIBYTE(v308.__r_.__value_.__r.__words[2]);
        if ((v308.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
          v88 = v308.__r_.__value_.__l.__size_;
        if (v88)
        {
          std::operator+<char>();
          v89 = std::string::append(&v307, "\"");
          v90 = v89->__r_.__value_.__r.__words[0];
          __p[0].__r_.__value_.__r.__words[0] = v89->__r_.__value_.__l.__size_;
          *(std::string::size_type *)((char *)__p[0].__r_.__value_.__r.__words + 7) = *(std::string::size_type *)((char *)&v89->__r_.__value_.__r.__words[1] + 7);
          v91 = HIBYTE(v89->__r_.__value_.__r.__words[2]);
          v89->__r_.__value_.__l.__size_ = 0;
          v89->__r_.__value_.__r.__words[2] = 0;
          v89->__r_.__value_.__r.__words[0] = 0;
          if (SHIBYTE(v308.__r_.__value_.__r.__words[2]) < 0)
            operator delete(v308.__r_.__value_.__l.__data_);
          v308.__r_.__value_.__r.__words[0] = v90;
          v308.__r_.__value_.__l.__size_ = __p[0].__r_.__value_.__r.__words[0];
          *(std::string::size_type *)((char *)&v308.__r_.__value_.__r.__words[1] + 7) = *(std::string::size_type *)((char *)__p[0].__r_.__value_.__r.__words + 7);
          *((_BYTE *)&v308.__r_.__value_.__s + 23) = v91;
          if (SHIBYTE(v307.__r_.__value_.__r.__words[2]) < 0)
            operator delete(v307.__r_.__value_.__l.__data_);
        }
        else
        {
          MEMORY[0x18D7640AC](&v308, "the global scope");
        }
        v92 = *v32;
        std::operator+<char>();
        v93 = std::string::append(&v302, "\" must be unique within ");
        v94 = *(_OWORD *)&v93->__r_.__value_.__l.__data_;
        v303.__r_.__value_.__r.__words[2] = v93->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v303.__r_.__value_.__l.__data_ = v94;
        v93->__r_.__value_.__l.__size_ = 0;
        v93->__r_.__value_.__r.__words[2] = 0;
        v93->__r_.__value_.__r.__words[0] = 0;
        if ((v308.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          v95 = &v308;
        else
          v95 = (std::string *)v308.__r_.__value_.__r.__words[0];
        if ((v308.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          v96 = HIBYTE(v308.__r_.__value_.__r.__words[2]);
        else
          v96 = v308.__r_.__value_.__l.__size_;
        v97 = std::string::append(&v303, (const std::string::value_type *)v95, v96);
        v98 = *(_OWORD *)&v97->__r_.__value_.__l.__data_;
        v304.__r_.__value_.__r.__words[2] = v97->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v304.__r_.__value_.__l.__data_ = v98;
        v97->__r_.__value_.__l.__size_ = 0;
        v97->__r_.__value_.__r.__words[2] = 0;
        v97->__r_.__value_.__r.__words[0] = 0;
        v99 = std::string::append(&v304, ", not just within \"");
        v100 = *(_OWORD *)&v99->__r_.__value_.__l.__data_;
        v305.__r_.__value_.__r.__words[2] = v99->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v305.__r_.__value_.__l.__data_ = v100;
        v99->__r_.__value_.__l.__size_ = 0;
        v99->__r_.__value_.__r.__words[2] = 0;
        v99->__r_.__value_.__r.__words[0] = 0;
        v101 = *(char *)(*(_QWORD *)a4 + 23);
        if (v101 >= 0)
          v102 = *(const std::string::value_type **)a4;
        else
          v102 = **(const std::string::value_type ***)a4;
        if (v101 >= 0)
          v103 = *(unsigned __int8 *)(*(_QWORD *)a4 + 23);
        else
          v103 = *(_QWORD *)(*(_QWORD *)a4 + 8);
        v104 = std::string::append(&v305, v102, v103);
        v105 = *(_OWORD *)&v104->__r_.__value_.__l.__data_;
        __p[0].__r_.__value_.__r.__words[2] = v104->__r_.__value_.__r.__words[2];
        *(_OWORD *)&__p[0].__r_.__value_.__l.__data_ = v105;
        v104->__r_.__value_.__l.__size_ = 0;
        v104->__r_.__value_.__r.__words[2] = 0;
        v104->__r_.__value_.__r.__words[0] = 0;
        v106 = std::string::append(__p, "\".");
        v107 = *(_OWORD *)&v106->__r_.__value_.__l.__data_;
        v307.__r_.__value_.__r.__words[2] = v106->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v307.__r_.__value_.__l.__data_ = v107;
        v106->__r_.__value_.__l.__size_ = 0;
        v106->__r_.__value_.__r.__words[2] = 0;
        v106->__r_.__value_.__r.__words[0] = 0;
        google::protobuf::DescriptorBuilder::AddError(v288, v92, v287, 0, (uint64_t)&v307);
        if (SHIBYTE(v307.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v307.__r_.__value_.__l.__data_);
        if (SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) < 0)
          operator delete(__p[0].__r_.__value_.__l.__data_);
        if (SHIBYTE(v305.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v305.__r_.__value_.__l.__data_);
        if (SHIBYTE(v304.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v304.__r_.__value_.__l.__data_);
        if (SHIBYTE(v303.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v303.__r_.__value_.__l.__data_);
        if (SHIBYTE(v302.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v302.__r_.__value_.__l.__data_);
        if (SHIBYTE(v308.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v308.__r_.__value_.__l.__data_);
      }
      v108 = *(_QWORD *)(v288 + 88);
      v109 = *((_DWORD *)v19 + 4);
      v308.__r_.__value_.__r.__words[0] = v19[3];
      LODWORD(v308.__r_.__value_.__r.__words[1]) = v109;
      ++v15;
      v13 = a2;
    }
    while (v15 < *(int *)(a2 + 32));
  }
  v110 = *(_DWORD *)(v13 + 56);
  *(_DWORD *)(a4 + 56) = v110;
  *(_QWORD *)(a4 + 64) = google::protobuf::DescriptorPool::Tables::AllocateBytes(*(google::protobuf::DescriptorPool::Tables **)(v288 + 8), 8 * v110);
  v111 = *(_DWORD *)(v13 + 56);
  if (v111 >= 1)
  {
    for (i = 0; i < v111; ++i)
    {
      v113 = *(_QWORD *)(*(_QWORD *)(a2 + 64) + 8 * i + 8);
      v114 = *(int32x2_t *)(v113 + 24);
      *(int32x2_t *)(*(_QWORD *)(a4 + 64) + 8 * i) = v114;
      if ((vcgt_s32(v114, vdup_lane_s32(v114, 1)).u8[0] & 1) != 0)
      {
        google::protobuf::DescriptorBuilder::AddError(v288, *(_QWORD *)(a4 + 8), v113, 1, "Reserved range end number must be greater than start number.");
        v111 = *(_DWORD *)(a2 + 56);
      }
    }
  }
  v115 = *(unsigned int *)(a2 + 80);
  *(_DWORD *)(a4 + 60) = v115;
  *(_QWORD *)(a4 + 72) = google::protobuf::DescriptorPool::Tables::AllocateBytes(*(google::protobuf::DescriptorPool::Tables **)(v288 + 8), 8 * (int)v115);
  if ((int)v115 >= 1)
  {
    v117 = 0;
    v118 = 8 * v115;
    do
    {
      v119 = *(uint64_t **)(v288 + 8);
      google::protobuf::StringPiece::StringPiece<std::allocator<char>>(v295, *(uint64_t **)(*(_QWORD *)(a2 + 88) + v117 + 8), v116);
      *(_QWORD *)(*(_QWORD *)(a4 + 72) + v117) = google::protobuf::DescriptorPool::Tables::AllocateString(v119, v295[0], v295[1]);
      v117 += 8;
    }
    while (v118 != v117);
  }
  google::protobuf::StringPiece::StringPiece<std::allocator<char>>(&v300, *(uint64_t **)a4, v116);
  v121 = v300;
  v122 = v301;
  memset(&v307, 0, sizeof(v307));
  if (v301)
  {
    do
    {
      v123 = *v121;
      if (v123 != 95)
      {
        if ((v123 - 65) < 0x1A)
          LOBYTE(v123) = v123 + 32;
        std::string::push_back(&v307, v123);
      }
      ++v121;
      --v122;
    }
    while (v122);
  }
  *(_OWORD *)&__p[0].__r_.__value_.__r.__words[1] = 0uLL;
  __p[0].__r_.__value_.__r.__words[0] = (std::string::size_type)&__p[0].__r_.__value_.__l.__size_;
  if (*(int *)(a4 + 44) >= 1)
  {
    v124 = 0;
    v125 = a4;
    while (1)
    {
      v126 = *(_QWORD *)(v125 + 48);
      v127 = (uint64_t **)(v126 + 40 * v124);
      google::protobuf::StringPiece::StringPiece<std::allocator<char>>(v299, *v127, v120);
      *(_OWORD *)&v304.__r_.__value_.__l.__data_ = v299[0];
      v128 = HIBYTE(v307.__r_.__value_.__r.__words[2]);
      if (!*((_QWORD *)&v299[0] + 1))
        break;
      v129 = 0;
      v130 = 0;
      if ((v307.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
        v128 = v307.__r_.__value_.__l.__size_;
      v131 = (std::string *)v307.__r_.__value_.__r.__words[0];
      if ((v307.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v131 = &v307;
      while (v129 < v128)
      {
        v132 = *(unsigned __int8 *)(*(_QWORD *)&v299[0] + v130);
        if (v132 != 95)
        {
          if ((v132 - 65) < 0x1A)
            LOBYTE(v132) = v132 + 32;
          if (v131->__r_.__value_.__s.__data_[v129] != v132)
            goto LABEL_187;
          ++v129;
        }
        if (*((_QWORD *)&v299[0] + 1) == ++v130)
        {
          v130 = *((_QWORD *)&v299[0] + 1);
          break;
        }
      }
      if (v129 >= v128)
      {
        if (v130 < *((_QWORD *)&v299[0] + 1))
        {
          while (*(_BYTE *)(*(_QWORD *)&v299[0] + v130) == 95)
          {
            if (*((_QWORD *)&v299[0] + 1) == ++v130)
              goto LABEL_187;
          }
        }
LABEL_185:
        if (*((_QWORD *)&v299[0] + 1) != v130)
        {
          v304.__r_.__value_.__r.__words[0] = *(_QWORD *)&v299[0] + v130;
          v304.__r_.__value_.__l.__size_ = *((_QWORD *)&v299[0] + 1) - v130;
        }
      }
LABEL_187:
      google::protobuf::StringPiece::ToString((google::protobuf::StringPiece *)&v304, &v308);
      memset(&v305, 0, sizeof(v305));
      if ((v308.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v133 = HIBYTE(v308.__r_.__value_.__r.__words[2]);
      else
        v133 = v308.__r_.__value_.__l.__size_;
      std::string::reserve(&v305, v133);
      v134 = HIBYTE(v308.__r_.__value_.__r.__words[2]);
      if ((v308.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v135 = &v308;
      else
        v135 = (std::string *)v308.__r_.__value_.__r.__words[0];
      if ((v308.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v136 = HIBYTE(v308.__r_.__value_.__r.__words[2]);
      else
        v136 = v308.__r_.__value_.__l.__size_;
      if (v136)
      {
        v137 = 1;
        do
        {
          v138 = v135->__r_.__value_.__s.__data_[0];
          v139 = v138 == 95;
          if (v138 != 95)
          {
            v140 = (v137 & 1) == 0;
            if ((v137 & 1) != 0)
              v141 = -97;
            else
              v141 = -65;
            if (v140)
              v142 = 32;
            else
              v142 = -32;
            if ((v138 + v141) >= 0x1Au)
              v143 = 0;
            else
              v143 = v142;
            std::string::push_back(&v305, v143 + v138);
          }
          v135 = (std::string *)((char *)v135 + 1);
          v137 = v139;
          --v136;
        }
        while (v136);
        v134 = HIBYTE(v308.__r_.__value_.__r.__words[2]);
      }
      if (v134 < 0)
        operator delete(v308.__r_.__value_.__l.__data_);
      if (SHIBYTE(v305.__r_.__value_.__r.__words[2]) < 0)
        std::string::__init_copy_ctor_external(&v308, v305.__r_.__value_.__l.__data_, v305.__r_.__value_.__l.__size_);
      else
        v308 = v305;
      v309 = (void *)(v126 + 40 * v124);
      v144 = (uint64_t **)std::__tree<std::__value_type<std::string,std::pair<void const*,int>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::pair<void const*,int>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::pair<void const*,int>>>>::__find_equal<std::string>((uint64_t)__p, &v304, (const void **)&v308.__r_.__value_.__l.__data_);
      v145 = *v144;
      v146 = *v144;
      if (!*v144)
      {
        v147 = v144;
        v146 = operator new(0x40uLL);
        v146[2] = *(_OWORD *)&v308.__r_.__value_.__l.__data_;
        v148 = v308.__r_.__value_.__r.__words[2];
        v149 = v309;
        memset(&v308, 0, sizeof(v308));
        *((_QWORD *)v146 + 6) = v148;
        *((_QWORD *)v146 + 7) = v149;
        v150 = v304.__r_.__value_.__r.__words[0];
        *(_QWORD *)v146 = 0;
        *((_QWORD *)v146 + 1) = 0;
        *((_QWORD *)v146 + 2) = v150;
        *v147 = (uint64_t *)v146;
        v151 = (uint64_t *)v146;
        if (*(_QWORD *)__p[0].__r_.__value_.__l.__data_)
        {
          __p[0].__r_.__value_.__r.__words[0] = *(_QWORD *)__p[0].__r_.__value_.__l.__data_;
          v151 = *v147;
        }
        std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>((uint64_t *)__p[0].__r_.__value_.__l.__size_, v151);
        ++__p[0].__r_.__value_.__r.__words[2];
      }
      if (SHIBYTE(v308.__r_.__value_.__r.__words[2]) < 0)
      {
        operator delete(v308.__r_.__value_.__l.__data_);
        if (!v145)
          goto LABEL_264;
      }
      else if (!v145)
      {
        goto LABEL_264;
      }
      v152 = (_DWORD *)*((_QWORD *)v146 + 7);
      v153 = *(const void ***)v152;
      v154 = *v127;
      v155 = *(unsigned __int8 *)(*(_QWORD *)v152 + 23);
      v120 = *(const char **)(*(_QWORD *)v152 + 8);
      if ((v155 & 0x80u) == 0)
        v156 = *(unsigned __int8 *)(*(_QWORD *)v152 + 23);
      else
        v156 = *(_QWORD *)(*(_QWORD *)v152 + 8);
      v157 = *((unsigned __int8 *)v154 + 23);
      v158 = (char)v157;
      if ((v157 & 0x80u) != 0)
        v157 = v154[1];
      if (v156 != v157)
        goto LABEL_239;
      if (v158 >= 0)
        v159 = *v127;
      else
        v159 = (uint64_t *)*v154;
      if ((v155 & 0x80) != 0)
      {
        if (memcmp(*v153, v159, (size_t)v120))
          goto LABEL_239;
      }
      else if (*(_BYTE *)(*(_QWORD *)v152 + 23))
      {
        while (*(unsigned __int8 *)v153 == *(unsigned __int8 *)v159)
        {
          v153 = (const void **)((char *)v153 + 1);
          v159 = (uint64_t *)((char *)v159 + 1);
          if (!--v155)
            goto LABEL_264;
        }
LABEL_239:
        if (v152[4] != *(_DWORD *)(v126 + 40 * v124 + 16))
        {
          std::operator+<char>();
          v160 = std::string::append(&v302, " has the same name as ");
          v161 = *(_OWORD *)&v160->__r_.__value_.__l.__data_;
          v303.__r_.__value_.__r.__words[2] = v160->__r_.__value_.__r.__words[2];
          *(_OWORD *)&v303.__r_.__value_.__l.__data_ = v161;
          v160->__r_.__value_.__l.__size_ = 0;
          v160->__r_.__value_.__r.__words[2] = 0;
          v160->__r_.__value_.__r.__words[0] = 0;
          v162 = (uint64_t **)std::__tree<std::__value_type<std::string,std::pair<void const*,int>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::pair<void const*,int>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::pair<void const*,int>>>>::__find_equal<std::string>((uint64_t)__p, &v297, (const void **)&v305.__r_.__value_.__l.__data_);
          v163 = *v162;
          if (!*v162)
          {
            v164 = v162;
            v163 = operator new(0x40uLL);
            v165 = (std::string *)(v163 + 4);
            if (SHIBYTE(v305.__r_.__value_.__r.__words[2]) < 0)
            {
              std::string::__init_copy_ctor_external(v165, v305.__r_.__value_.__l.__data_, v305.__r_.__value_.__l.__size_);
            }
            else
            {
              *(_OWORD *)&v165->__r_.__value_.__l.__data_ = *(_OWORD *)&v305.__r_.__value_.__l.__data_;
              v163[6] = *((_QWORD *)&v305.__r_.__value_.__l + 2);
            }
            v163[7] = 0;
            v166 = v297;
            *v163 = 0;
            v163[1] = 0;
            v163[2] = v166;
            *v164 = v163;
            v167 = v163;
            if (*(_QWORD *)__p[0].__r_.__value_.__l.__data_)
            {
              __p[0].__r_.__value_.__r.__words[0] = *(_QWORD *)__p[0].__r_.__value_.__l.__data_;
              v167 = *v164;
            }
            std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>((uint64_t *)__p[0].__r_.__value_.__l.__size_, v167);
            ++__p[0].__r_.__value_.__r.__words[2];
          }
          v168 = *(_QWORD *)v163[7];
          v169 = *(char *)(v168 + 23);
          if (v169 >= 0)
            v170 = *(const std::string::value_type **)v163[7];
          else
            v170 = *(const std::string::value_type **)v168;
          if (v169 >= 0)
            v171 = *(unsigned __int8 *)(v168 + 23);
          else
            v171 = *(_QWORD *)(v168 + 8);
          v172 = std::string::append(&v303, v170, v171);
          v173 = *(_OWORD *)&v172->__r_.__value_.__l.__data_;
          v304.__r_.__value_.__r.__words[2] = v172->__r_.__value_.__r.__words[2];
          *(_OWORD *)&v304.__r_.__value_.__l.__data_ = v173;
          v172->__r_.__value_.__l.__size_ = 0;
          v172->__r_.__value_.__r.__words[2] = 0;
          v172->__r_.__value_.__r.__words[0] = 0;
          v174 = std::string::append(&v304, " if you ignore case and strip out the enum name prefix (if any). This is error-prone and can lead to undefined behavior. Please avoid doing this. If you are using allow_alias, please assign the same numeric value to both enums.");
          v175 = *(_OWORD *)&v174->__r_.__value_.__l.__data_;
          v308.__r_.__value_.__r.__words[2] = v174->__r_.__value_.__r.__words[2];
          *(_OWORD *)&v308.__r_.__value_.__l.__data_ = v175;
          v174->__r_.__value_.__l.__size_ = 0;
          v174->__r_.__value_.__r.__words[2] = 0;
          v174->__r_.__value_.__r.__words[0] = 0;
          if (SHIBYTE(v304.__r_.__value_.__r.__words[2]) < 0)
            operator delete(v304.__r_.__value_.__l.__data_);
          if (SHIBYTE(v303.__r_.__value_.__r.__words[2]) < 0)
            operator delete(v303.__r_.__value_.__l.__data_);
          if (SHIBYTE(v302.__r_.__value_.__r.__words[2]) < 0)
            operator delete(v302.__r_.__value_.__l.__data_);
          v176 = *(_QWORD *)(v126 + 40 * v124 + 8);
          v177 = *(_QWORD *)(*(_QWORD *)(a2 + 40) + 8 * v124 + 8);
          if (*(_DWORD *)(*(_QWORD *)(a4 + 16) + 60) == 2)
            google::protobuf::DescriptorBuilder::AddWarning(v288, v176, v177, 0, (uint64_t)&v308);
          else
            google::protobuf::DescriptorBuilder::AddError(v288, v176, v177, 0, (uint64_t)&v308);
          if (SHIBYTE(v308.__r_.__value_.__r.__words[2]) < 0)
            operator delete(v308.__r_.__value_.__l.__data_);
        }
      }
LABEL_264:
      if (SHIBYTE(v305.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v305.__r_.__value_.__l.__data_);
      ++v124;
      v125 = a4;
      if (v124 >= *(int *)(a4 + 44))
      {
        v178 = (char *)__p[0].__r_.__value_.__l.__size_;
        goto LABEL_269;
      }
    }
    if ((v307.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v130 = HIBYTE(v307.__r_.__value_.__r.__words[2]);
    else
      v130 = v307.__r_.__value_.__l.__size_;
    if (v130)
      goto LABEL_187;
    goto LABEL_185;
  }
  v178 = 0;
LABEL_269:
  std::__tree<std::__value_type<std::string,BOOL>,std::__map_value_compare<std::string,std::__value_type<std::string,BOOL>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,BOOL>>>::destroy(v178);
  if (SHIBYTE(v307.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v307.__r_.__value_.__l.__data_);
  v179 = a2;
  *(_QWORD *)(a4 + 32) = 0;
  if ((*(_BYTE *)(a2 + 16) & 2) != 0)
  {
    v180 = *(_QWORD **)(a2 + 104);
    std::string::basic_string[abi:ne180100]<0>(&v305, "google.protobuf.EnumOptions");
    memset(__p, 0, 24);
    google::protobuf::EnumDescriptor::GetLocationPath(a4, &__p[0].__r_.__value_.__l.__data_);
    v181 = __p[0].__r_.__value_.__l.__size_;
    if (__p[0].__r_.__value_.__l.__size_ >= __p[0].__r_.__value_.__r.__words[2])
    {
      v183 = (void *)__p[0].__r_.__value_.__r.__words[0];
      v184 = (uint64_t)(__p[0].__r_.__value_.__l.__size_ - __p[0].__r_.__value_.__r.__words[0]) >> 2;
      v185 = v184 + 1;
      if ((unint64_t)(v184 + 1) >> 62)
        std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
      v186 = __p[0].__r_.__value_.__r.__words[2] - __p[0].__r_.__value_.__r.__words[0];
      if ((uint64_t)(__p[0].__r_.__value_.__r.__words[2] - __p[0].__r_.__value_.__r.__words[0]) >> 1 > v185)
        v185 = v186 >> 1;
      if ((unint64_t)v186 >= 0x7FFFFFFFFFFFFFFCLL)
        v187 = 0x3FFFFFFFFFFFFFFFLL;
      else
        v187 = v185;
      if (v187)
      {
        v188 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<unsigned int>>((uint64_t)&__p[0].__r_.__value_.__r.__words[2], v187);
        v181 = __p[0].__r_.__value_.__l.__size_;
        v183 = (void *)__p[0].__r_.__value_.__r.__words[0];
      }
      else
      {
        v188 = 0;
      }
      v189 = &v188[4 * v184];
      v190 = (std::string::size_type)&v188[4 * v187];
      *(_DWORD *)v189 = 3;
      v182 = (std::string::size_type)(v189 + 4);
      while ((void *)v181 != v183)
      {
        v191 = *(_DWORD *)(v181 - 4);
        v181 -= 4;
        *((_DWORD *)v189 - 1) = v191;
        v189 -= 4;
      }
      __p[0].__r_.__value_.__r.__words[0] = (std::string::size_type)v189;
      __p[0].__r_.__value_.__l.__size_ = v182;
      __p[0].__r_.__value_.__r.__words[2] = v190;
      if (v183)
        operator delete(v183);
    }
    else
    {
      *(_DWORD *)__p[0].__r_.__value_.__l.__size_ = 3;
      v182 = v181 + 4;
    }
    __p[0].__r_.__value_.__l.__size_ = v182;
    v192 = *(_QWORD *)(a4 + 8);
    v193 = *(_QWORD **)(v288 + 8);
    v194 = (int *)operator new();
    google::protobuf::EnumOptions::EnumOptions((google::protobuf::EnumOptions *)v194, 0);
    v195 = v193[31];
    v196 = (int **)v193[30];
    if ((unint64_t)v196 >= v195)
    {
      v198 = (_QWORD *)v193[29];
      v199 = v196 - (int **)v198;
      v200 = v199 + 1;
      if ((unint64_t)(v199 + 1) >> 61)
        std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
      v201 = v195 - (_QWORD)v198;
      if (v201 >> 2 > v200)
        v200 = v201 >> 2;
      if ((unint64_t)v201 >= 0x7FFFFFFFFFFFFFF8)
        v202 = 0x1FFFFFFFFFFFFFFFLL;
      else
        v202 = v200;
      v310 = v193 + 31;
      if (v202)
      {
        v202 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<std::unique_ptr<google::protobuf::Message>>>(v202);
        v198 = (_QWORD *)v193[29];
        v196 = (int **)v193[30];
      }
      else
      {
        v203 = 0;
      }
      v204 = (int **)(v202 + 8 * v199);
      v205 = (void *)(v202 + 8 * v203);
      v309 = v205;
      *v204 = v194;
      v308.__r_.__value_.__r.__words[2] = (std::string::size_type)(v204 + 1);
      if (v196 == v198)
      {
        v197 = v204 + 1;
      }
      else
      {
        do
        {
          v206 = *--v196;
          *v196 = 0;
          *--v204 = v206;
        }
        while (v196 != v198);
        v197 = (_QWORD *)v308.__r_.__value_.__r.__words[2];
        v205 = v309;
      }
      v207 = *(_OWORD *)(v193 + 29);
      v193[29] = v204;
      v193[30] = v197;
      *(_OWORD *)&v308.__r_.__value_.__r.__words[1] = v207;
      v208 = (void *)v193[31];
      v193[31] = v205;
      v309 = v208;
      v308.__r_.__value_.__r.__words[0] = v207;
      std::__split_buffer<std::unique_ptr<google::protobuf::Message>>::~__split_buffer((uint64_t)&v308);
    }
    else
    {
      *v196 = v194;
      v197 = v196 + 1;
    }
    v193[30] = v197;
    if (google::protobuf::internal::ExtensionSet::IsInitialized((google::protobuf::internal::ExtensionSet *)(v180 + 2))
      && (google::protobuf::internal::AllAreInitialized<google::protobuf::UninterpretedOption>((uint64_t)(v180 + 6)) & 1) != 0)
    {
      google::protobuf::MessageLite::SerializeAsString((google::protobuf::MessageLite *)v180, (uint64_t)&v308);
      v209 = (google::protobuf::UnknownFieldSet *)google::protobuf::MessageLite::ParseFrom<(google::protobuf::MessageLite::ParseFlags)1,std::string>((google::protobuf::MessageLite *)v194, (uint64_t *)&v308);
      if (SHIBYTE(v308.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v308.__r_.__value_.__l.__data_);
      *(_QWORD *)(a4 + 32) = v194;
      if (v194[14] >= 1)
      {
        v209 = v312;
        if (v312)
        {
          v313 = v312;
          operator delete(v312);
        }
        if (v311 < 0)
          operator delete(v309);
        if (SHIBYTE(v308.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v308.__r_.__value_.__l.__data_);
      }
      v211 = v180[1];
      if ((v211 & 1) != 0)
        v212 = (uint64_t *)((v211 & 0xFFFFFFFFFFFFFFFELL) + 8);
      else
        v212 = (uint64_t *)google::protobuf::UnknownFieldSet::default_instance(v209);
      if (*v212 != v212[1])
      {
        v213 = *(_QWORD *)(v288 + 8);
        google::protobuf::StringPiece::StringPiece<std::allocator<char>>(&v307, (uint64_t *)&v305, v210);
        *(_OWORD *)&v308.__r_.__value_.__l.__data_ = *(_OWORD *)&v307.__r_.__value_.__l.__data_;
        v214 = std::__hash_table<std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>,std::__unordered_map_hasher<google::protobuf::StringPiece,std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>,google::protobuf::hash<google::protobuf::StringPiece>,std::equal_to<google::protobuf::StringPiece>,true>,std::__unordered_map_equal<google::protobuf::StringPiece,std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>,std::equal_to<google::protobuf::StringPiece>,google::protobuf::hash<google::protobuf::StringPiece>,true>,std::allocator<std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>>>::find<google::protobuf::StringPiece>((_QWORD *)(v213 + 304), &v308.__r_.__value_.__l.__data_);
        if (v214)
        {
          v215 = v214 + 4;
          v216 = (const google::protobuf::Descriptor **)(v214 + 5);
        }
        else
        {
          v215 = &qword_1ECDBB718;
          v216 = (const google::protobuf::Descriptor **)&qword_1ECDBB720;
        }
        if (*(_DWORD *)v215 == 1)
        {
          v226 = *v212;
          v225 = v212[1];
          if ((int)((unint64_t)(v225 - *v212) >> 4) >= 1)
          {
            v227 = 0;
            v228 = 0;
            v229 = *v216;
            do
            {
              v230 = google::protobuf::DescriptorPool::InternalFindExtensionByNumberNoLock(*(google::protobuf::DescriptorPool **)v288, v229, *(_DWORD *)(v226 + v227));
              if (v230)
              {
                std::__tree<google::protobuf::FileDescriptor const*>::__erase_unique<google::protobuf::FileDescriptor const*>((uint64_t **)(v288 + 120), *(_QWORD *)(v230 + 40));
                v226 = *v212;
                v225 = v212[1];
              }
              ++v228;
              v227 += 16;
            }
            while (v228 < (int)((unint64_t)(v225 - v226) >> 4));
          }
        }
      }
    }
    else
    {
      if (*(char *)(v192 + 23) >= 0)
        v217 = *(unsigned __int8 *)(v192 + 23);
      else
        v217 = *(_QWORD *)(v192 + 8);
      std::string::basic_string[abi:ne180100]((uint64_t)&v307, v217 + 1);
      if ((v307.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v218 = &v307;
      else
        v218 = (std::string *)v307.__r_.__value_.__r.__words[0];
      if (v217)
      {
        if (*(char *)(v192 + 23) >= 0)
          v219 = (const void *)v192;
        else
          v219 = *(const void **)v192;
        memmove(v218, v219, v217);
      }
      *(_WORD *)((char *)&v218->__r_.__value_.__l.__data_ + v217) = 46;
      v220 = *(char *)(v192 + 23);
      if (v220 >= 0)
        v221 = (const std::string::value_type *)v192;
      else
        v221 = *(const std::string::value_type **)v192;
      if (v220 >= 0)
        v222 = *(unsigned __int8 *)(v192 + 23);
      else
        v222 = *(_QWORD *)(v192 + 8);
      v223 = std::string::append(&v307, v221, v222);
      v224 = *(_OWORD *)&v223->__r_.__value_.__l.__data_;
      v308.__r_.__value_.__r.__words[2] = v223->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v308.__r_.__value_.__l.__data_ = v224;
      v223->__r_.__value_.__l.__size_ = 0;
      v223->__r_.__value_.__r.__words[2] = 0;
      v223->__r_.__value_.__r.__words[0] = 0;
      google::protobuf::DescriptorBuilder::AddError(v288, (uint64_t)&v308, (uint64_t)v180, 7, "Uninterpreted option is missing name or value.");
      if (SHIBYTE(v308.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v308.__r_.__value_.__l.__data_);
      if (SHIBYTE(v307.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v307.__r_.__value_.__l.__data_);
    }
    if (__p[0].__r_.__value_.__r.__words[0])
    {
      __p[0].__r_.__value_.__l.__size_ = __p[0].__r_.__value_.__r.__words[0];
      operator delete(__p[0].__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v305.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v305.__r_.__value_.__l.__data_);
    v179 = a2;
  }
  google::protobuf::DescriptorBuilder::AddSymbol(v288, *(_QWORD *)(a4 + 8), a3, *(_QWORD *)a4, v179, 4, a4);
  v232 = *(_DWORD *)(a2 + 56);
  if (v232 >= 1)
  {
    v233 = 0;
    v234 = 2;
    do
    {
      v235 = v233 + 1;
      if (v233 + 1 >= v232)
      {
        v246 = v232;
      }
      else
      {
        v236 = *(_QWORD *)(*(_QWORD *)(a2 + 64) + 8 * v233 + 8);
        v237 = v234;
        do
        {
          v238 = *(_QWORD *)(a2 + 64);
          v239 = *(_QWORD *)(v238 + 8 * v237);
          v240 = (AddrObjGoogle::protobuf *)*(unsigned int *)(v239 + 24);
          if (*(_DWORD *)(v236 + 28) >= (int)v240 && *(_DWORD *)(v239 + 28) >= *(_DWORD *)(v236 + 24))
          {
            v241 = *(_QWORD *)(a4 + 8);
            v242 = *(_QWORD *)(v238 + 8 * v233 + 8);
            v308.__r_.__value_.__r.__words[0] = (std::string::size_type)AddrObjGoogle::protobuf::FastInt32ToBuffer(v240, &v308.__r_.__value_.__s.__data_[12], v231);
            LODWORD(v308.__r_.__value_.__r.__words[1]) = strlen(v308.__r_.__value_.__l.__data_);
            v307.__r_.__value_.__r.__words[0] = (std::string::size_type)AddrObjGoogle::protobuf::FastInt32ToBuffer((AddrObjGoogle::protobuf *)*(unsigned int *)(v239 + 28), &v307.__r_.__value_.__s.__data_[12], v243);
            LODWORD(v307.__r_.__value_.__r.__words[1]) = strlen(v307.__r_.__value_.__l.__data_);
            __p[0].__r_.__value_.__r.__words[0] = (std::string::size_type)AddrObjGoogle::protobuf::FastInt32ToBuffer((AddrObjGoogle::protobuf *)*(unsigned int *)(v236 + 24), &__p[0].__r_.__value_.__s.__data_[12], v244);
            LODWORD(__p[0].__r_.__value_.__r.__words[1]) = strlen(__p[0].__r_.__value_.__l.__data_);
            v305.__r_.__value_.__r.__words[0] = (std::string::size_type)AddrObjGoogle::protobuf::FastInt32ToBuffer((AddrObjGoogle::protobuf *)*(unsigned int *)(v236 + 28), &v305.__r_.__value_.__s.__data_[12], v245);
            LODWORD(v305.__r_.__value_.__r.__words[1]) = strlen(v305.__r_.__value_.__l.__data_);
            v304.__r_.__value_.__r.__words[0] = 0;
            LODWORD(v304.__r_.__value_.__r.__words[1]) = -1;
            v303.__r_.__value_.__r.__words[0] = 0;
            LODWORD(v303.__r_.__value_.__r.__words[1]) = -1;
            v302.__r_.__value_.__r.__words[0] = 0;
            LODWORD(v302.__r_.__value_.__r.__words[1]) = -1;
            v300 = 0;
            LODWORD(v301) = -1;
            *(_QWORD *)&v299[0] = 0;
            DWORD2(v299[0]) = -1;
            v297 = 0;
            v298 = -1;
            *((_QWORD *)&v279 + 1) = v299;
            *(_QWORD *)&v279 = &v300;
            google::protobuf::strings::Substitute("Reserved range $0 to $1 overlaps with already-defined range $2 to $3.", (uint64_t)&v308, (uint64_t)&v307, (uint64_t)__p, (uint64_t)&v305, (uint64_t)&v304, (uint64_t)&v303, (uint64_t)&v302, (std::string *)v292, v279, (uint64_t)&v297);
            google::protobuf::DescriptorBuilder::AddError(v288, v241, v242, 1, (uint64_t)v292);
            if (SBYTE7(v293) < 0)
              operator delete(v292[0]);
            v232 = *(_DWORD *)(a2 + 56);
          }
          ++v237;
        }
        while (v232 > (int)v237 - 1);
        v246 = v232;
      }
      ++v234;
      ++v233;
    }
    while (v235 < v246);
  }
  *(_OWORD *)v292 = 0u;
  v293 = 0u;
  v294 = 1065353216;
  v247 = a2;
  if (*(int *)(a2 + 80) >= 1)
  {
    v248 = 0;
    do
    {
      v249 = *(_QWORD *)(*(_QWORD *)(v247 + 88) + 8 * v248 + 8);
      if (std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::find<std::string>(v292, (unsigned __int8 *)v249))
      {
        v250 = *(char *)(v249 + 23);
        v251 = v250 < 0;
        v252 = *(_QWORD *)v249;
        v253 = *(_QWORD *)(v249 + 8);
        if (v250 >= 0)
          v252 = v249;
        v308.__r_.__value_.__r.__words[0] = v252;
        v250 = v250;
        if (v251)
          v250 = v253;
        LODWORD(v308.__r_.__value_.__r.__words[1]) = v250;
        v307.__r_.__value_.__r.__words[0] = 0;
        LODWORD(v307.__r_.__value_.__r.__words[1]) = -1;
        __p[0].__r_.__value_.__r.__words[0] = 0;
        LODWORD(__p[0].__r_.__value_.__r.__words[1]) = -1;
        v305.__r_.__value_.__r.__words[0] = 0;
        LODWORD(v305.__r_.__value_.__r.__words[1]) = -1;
        v304.__r_.__value_.__r.__words[0] = 0;
        LODWORD(v304.__r_.__value_.__r.__words[1]) = -1;
        v303.__r_.__value_.__r.__words[0] = 0;
        LODWORD(v303.__r_.__value_.__r.__words[1]) = -1;
        v302.__r_.__value_.__r.__words[0] = 0;
        LODWORD(v302.__r_.__value_.__r.__words[1]) = -1;
        v300 = 0;
        LODWORD(v301) = -1;
        *(_QWORD *)&v299[0] = 0;
        DWORD2(v299[0]) = -1;
        v297 = 0;
        v298 = -1;
        *((_QWORD *)&v280 + 1) = v299;
        *(_QWORD *)&v280 = &v300;
        google::protobuf::strings::Substitute("Enum value \"$0\" is reserved multiple times.", (uint64_t)&v308, (uint64_t)&v307, (uint64_t)__p, (uint64_t)&v305, (uint64_t)&v304, (uint64_t)&v303, (uint64_t)&v302, &v291, v280, (uint64_t)&v297);
        google::protobuf::DescriptorBuilder::AddError(v288, v249, a2, 0, (uint64_t)&v291);
        if (SHIBYTE(v291.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v291.__r_.__value_.__l.__data_);
      }
      else
      {
        std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::__emplace_unique_key_args<std::string,std::string const&>((uint64_t)v292, (unsigned __int8 *)v249, v249);
      }
      ++v248;
      v247 = a2;
    }
    while (v248 < *(int *)(a2 + 80));
  }
  v254 = a4;
  if (*(int *)(a4 + 44) >= 1)
  {
    v255 = 0;
    do
    {
      v256 = *(_QWORD *)(v254 + 48);
      v257 = (unsigned __int8 **)(v256 + 40 * v255);
      v258 = *(_DWORD *)(v254 + 56);
      if (v258 >= 1)
      {
        v259 = 0;
        v260 = 0;
        v261 = v256 + 40 * v255;
        v262 = (unsigned int *)(v261 + 16);
        v263 = (uint64_t *)(v261 + 8);
        do
        {
          v264 = *(_QWORD *)(a4 + 64);
          v265 = (AddrObjGoogle::protobuf *)*v262;
          if (*(_DWORD *)(v264 + v259) <= (int)v265 && (int)v265 <= *(_DWORD *)(v264 + v259 + 4))
          {
            v266 = *v263;
            v267 = *(_QWORD *)(*(_QWORD *)(a2 + 64) + 8 * v260 + 8);
            v268 = (std::string::size_type)*v257;
            v269 = (char)(*v257)[23];
            v270 = *((_QWORD *)*v257 + 1);
            if (v269 < 0)
              v268 = *(_QWORD *)*v257;
            v308.__r_.__value_.__r.__words[0] = v268;
            v271 = v269;
            if (v269 < 0)
              v271 = v270;
            LODWORD(v308.__r_.__value_.__r.__words[1]) = v271;
            v307.__r_.__value_.__r.__words[0] = (std::string::size_type)AddrObjGoogle::protobuf::FastInt32ToBuffer(v265, &v307.__r_.__value_.__s.__data_[12], v231);
            LODWORD(v307.__r_.__value_.__r.__words[1]) = strlen(v307.__r_.__value_.__l.__data_);
            __p[0].__r_.__value_.__r.__words[0] = 0;
            LODWORD(__p[0].__r_.__value_.__r.__words[1]) = -1;
            v305.__r_.__value_.__r.__words[0] = 0;
            LODWORD(v305.__r_.__value_.__r.__words[1]) = -1;
            v304.__r_.__value_.__r.__words[0] = 0;
            LODWORD(v304.__r_.__value_.__r.__words[1]) = -1;
            v303.__r_.__value_.__r.__words[0] = 0;
            LODWORD(v303.__r_.__value_.__r.__words[1]) = -1;
            v302.__r_.__value_.__r.__words[0] = 0;
            LODWORD(v302.__r_.__value_.__r.__words[1]) = -1;
            v300 = 0;
            LODWORD(v301) = -1;
            *(_QWORD *)&v299[0] = 0;
            DWORD2(v299[0]) = -1;
            v297 = 0;
            v298 = -1;
            *((_QWORD *)&v281 + 1) = v299;
            *(_QWORD *)&v281 = &v300;
            google::protobuf::strings::Substitute("Enum value \"$0\" uses reserved number $1.", (uint64_t)&v308, (uint64_t)&v307, (uint64_t)__p, (uint64_t)&v305, (uint64_t)&v304, (uint64_t)&v303, (uint64_t)&v302, &v291, v281, (uint64_t)&v297);
            google::protobuf::DescriptorBuilder::AddError(v288, v266, v267, 1, (uint64_t)&v291);
            if (SHIBYTE(v291.__r_.__value_.__r.__words[2]) < 0)
              operator delete(v291.__r_.__value_.__l.__data_);
            v258 = *(_DWORD *)(a4 + 56);
          }
          ++v260;
          v259 += 8;
        }
        while (v260 < v258);
      }
      if (std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::find<std::string>(v292, *v257))
      {
        v272 = *(_QWORD *)(v256 + 40 * v255 + 8);
        v273 = *v257;
        v274 = (char)(*v257)[23];
        v275 = *((_QWORD *)*v257 + 1);
        if (v274 < 0)
          v273 = *(unsigned __int8 **)*v257;
        v276 = *(_QWORD *)(*(_QWORD *)(a2 + 40) + 8 * v255 + 8);
        v308.__r_.__value_.__r.__words[0] = (std::string::size_type)v273;
        v277 = v274;
        if (v274 < 0)
          v277 = v275;
        LODWORD(v308.__r_.__value_.__r.__words[1]) = v277;
        v307.__r_.__value_.__r.__words[0] = 0;
        LODWORD(v307.__r_.__value_.__r.__words[1]) = -1;
        __p[0].__r_.__value_.__r.__words[0] = 0;
        LODWORD(__p[0].__r_.__value_.__r.__words[1]) = -1;
        v305.__r_.__value_.__r.__words[0] = 0;
        LODWORD(v305.__r_.__value_.__r.__words[1]) = -1;
        v304.__r_.__value_.__r.__words[0] = 0;
        LODWORD(v304.__r_.__value_.__r.__words[1]) = -1;
        v303.__r_.__value_.__r.__words[0] = 0;
        LODWORD(v303.__r_.__value_.__r.__words[1]) = -1;
        v302.__r_.__value_.__r.__words[0] = 0;
        LODWORD(v302.__r_.__value_.__r.__words[1]) = -1;
        v300 = 0;
        LODWORD(v301) = -1;
        *(_QWORD *)&v299[0] = 0;
        DWORD2(v299[0]) = -1;
        v297 = 0;
        v298 = -1;
        *((_QWORD *)&v282 + 1) = v299;
        *(_QWORD *)&v282 = &v300;
        google::protobuf::strings::Substitute("Enum value \"$0\" is reserved.", (uint64_t)&v308, (uint64_t)&v307, (uint64_t)__p, (uint64_t)&v305, (uint64_t)&v304, (uint64_t)&v303, (uint64_t)&v302, &v291, v282, (uint64_t)&v297);
        google::protobuf::DescriptorBuilder::AddError(v288, v272, v276, 0, (uint64_t)&v291);
        if (SHIBYTE(v291.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v291.__r_.__value_.__l.__data_);
      }
      ++v255;
      v254 = a4;
    }
    while (v255 < *(int *)(a4 + 44));
  }
  return std::__hash_table<std::string,AddrObjGoogle::protobuf::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table((uint64_t)v292);
}

void sub_18887F71C(_Unwind_Exception *a1)
{
  uint64_t v1;
  void *v3;

  v3 = (void *)STACK[0x230];
  if (STACK[0x230])
  {
    STACK[0x238] = (unint64_t)v3;
    operator delete(v3);
  }
  if (SLOBYTE(STACK[0x217]) < 0)
    operator delete((void *)STACK[0x200]);
  _Unwind_Resume(a1);
}

void google::protobuf::DescriptorBuilder::ValidateFileOptions(google::protobuf::DescriptorBuilder *this, google::protobuf::FileDescriptor *a2, const google::protobuf::FileDescriptorProto *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  int v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v27;
  std::string *v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  std::string v36;
  void *__p[2];
  std::string::size_type v38;

  if (*((int *)a2 + 11) >= 1)
  {
    v6 = 0;
    v7 = 0;
    do
    {
      google::protobuf::DescriptorBuilder::ValidateMessageOptions(this, (google::protobuf::Descriptor *)(*((_QWORD *)a2 + 13) + v6), *(const google::protobuf::DescriptorProto **)(*((_QWORD *)a3 + 8) + 8 * v7++ + 8));
      v6 += 144;
    }
    while (v7 < *((int *)a2 + 11));
  }
  if (*((int *)a2 + 12) >= 1)
  {
    v8 = 0;
    v9 = 0;
    do
    {
      google::protobuf::DescriptorBuilder::ValidateEnumOptions((uint64_t)this, *((_QWORD *)a2 + 14) + v8, *(_QWORD *)(*((_QWORD *)a3 + 11) + 8 * v9++ + 8));
      v8 += 80;
    }
    while (v9 < *((int *)a2 + 12));
  }
  if (*((int *)a2 + 13) >= 1)
  {
    v10 = 0;
    v11 = 0;
    do
    {
      v12 = *((_QWORD *)a2 + 15);
      v13 = *(_QWORD *)(v12 + v10 + 16);
      if (v13)
      {
        v14 = *(_QWORD *)(*((_QWORD *)a3 + 14) + 8 * v11 + 8);
        v15 = *(void **)(v13 + 136);
        if (atomic_load(scc_info_FileOptions_google_2fprotobuf_2fdescriptor_2eproto))
          google::protobuf::internal::InitSCCImpl(scc_info_FileOptions_google_2fprotobuf_2fdescriptor_2eproto);
        if (v15 != &google::protobuf::_FileOptions_default_instance_
          && *(_DWORD *)(*(_QWORD *)(v13 + 136) + 160) == 3)
        {
          v17 = *(_QWORD *)(*(_QWORD *)(v12 + v10 + 16) + 136);
          if (*(_BYTE *)(v17 + 155) || *(_BYTE *)(v17 + 156))
            google::protobuf::DescriptorBuilder::AddError((uint64_t)this, *(_QWORD *)(v12 + v10 + 8), v14, 0, "Files with optimize_for = LITE_RUNTIME cannot define services unless you set both options cc_generic_services and java_generic_services to false.");
        }
      }
      ++v11;
      v10 += 48;
    }
    while (v11 < *((int *)a2 + 13));
  }
  if (*((int *)a2 + 14) >= 1)
  {
    v18 = 0;
    v19 = 0;
    do
    {
      google::protobuf::DescriptorBuilder::ValidateFieldOptions(this, (google::protobuf::FieldDescriptor *)(*((_QWORD *)a2 + 16) + v18), *(const google::protobuf::FieldDescriptorProto **)(*((_QWORD *)a3 + 17) + 8 * v19++ + 8));
      v18 += 152;
    }
    while (v19 < *((int *)a2 + 14));
  }
  v20 = (void *)*((_QWORD *)a2 + 17);
  if (atomic_load(scc_info_FileOptions_google_2fprotobuf_2fdescriptor_2eproto))
    google::protobuf::internal::InitSCCImpl(scc_info_FileOptions_google_2fprotobuf_2fdescriptor_2eproto);
  if ((v20 == &google::protobuf::_FileOptions_default_instance_ || *(_DWORD *)(*((_QWORD *)a2 + 17) + 160) != 3)
    && *((int *)a2 + 8) >= 1)
  {
    v22 = 0;
    while (1)
    {
      v23 = google::protobuf::FileDescriptor::dependency(a2, v22);
      if (v23)
      {
        v24 = v23;
        v25 = *(void **)(v23 + 136);
        if (atomic_load(scc_info_FileOptions_google_2fprotobuf_2fdescriptor_2eproto))
          google::protobuf::internal::InitSCCImpl(scc_info_FileOptions_google_2fprotobuf_2fdescriptor_2eproto);
        if (v25 != &google::protobuf::_FileOptions_default_instance_
          && *(_DWORD *)(*(_QWORD *)(v24 + 136) + 160) == 3)
        {
          break;
        }
      }
      if (++v22 >= *((_DWORD *)a2 + 8))
        goto LABEL_38;
    }
    v27 = *(_QWORD *)google::protobuf::FileDescriptor::dependency(a2, v22);
    google::protobuf::FileDescriptor::dependency(a2, v22);
    std::operator+<char>();
    v28 = std::string::append(&v36, "\" which is.");
    v29 = *(_OWORD *)&v28->__r_.__value_.__l.__data_;
    v38 = v28->__r_.__value_.__r.__words[2];
    *(_OWORD *)__p = v29;
    v28->__r_.__value_.__l.__size_ = 0;
    v28->__r_.__value_.__r.__words[2] = 0;
    v28->__r_.__value_.__r.__words[0] = 0;
    google::protobuf::DescriptorBuilder::AddError((uint64_t)this, v27, (uint64_t)a3, 9, (uint64_t)__p);
    if (SHIBYTE(v38) < 0)
      operator delete(__p[0]);
    if (SHIBYTE(v36.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v36.__r_.__value_.__l.__data_);
  }
LABEL_38:
  if (*((_DWORD *)a2 + 15) == 3)
  {
    if (*((int *)a2 + 14) >= 1)
    {
      v30 = 0;
      v31 = 0;
      do
      {
        google::protobuf::DescriptorBuilder::ValidateProto3Field(this, (google::protobuf::FieldDescriptor *)(*((_QWORD *)a2 + 16) + v30), *(const google::protobuf::FieldDescriptorProto **)(*((_QWORD *)a3 + 17) + 8 * v31++ + 8));
        v30 += 152;
      }
      while (v31 < *((int *)a2 + 14));
    }
    if (*((int *)a2 + 11) >= 1)
    {
      v32 = 0;
      v33 = 0;
      do
      {
        google::protobuf::DescriptorBuilder::ValidateProto3Message(this, (google::protobuf::Descriptor *)(*((_QWORD *)a2 + 13) + v32), *(const google::protobuf::DescriptorProto **)(*((_QWORD *)a3 + 8) + 8 * v33++ + 8));
        v32 += 144;
      }
      while (v33 < *((int *)a2 + 11));
    }
    if (*((int *)a2 + 12) >= 1)
    {
      v34 = 0;
      v35 = 0;
      do
      {
        google::protobuf::DescriptorBuilder::ValidateProto3Enum((uint64_t)this, *((_QWORD *)a2 + 14) + v34, *(_QWORD *)(*(_QWORD *)(*((_QWORD *)a3 + 11) + 8 * v35++ + 8) + 40));
        v34 += 80;
      }
      while (v35 < *((int *)a2 + 12));
    }
  }
}

void sub_18887FDDC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0)
    operator delete(__p);
  if (a15 < 0)
    operator delete(a10);
  _Unwind_Resume(exception_object);
}

void google::protobuf::DescriptorBuilder::DetectMapConflicts(google::protobuf::DescriptorBuilder *this, const google::protobuf::Descriptor *a2, const google::protobuf::DescriptorProto *a3)
{
  const google::protobuf::DescriptorProto *v3;
  uint64_t i;
  uint64_t v7;
  __int128 **v8;
  __int128 *v9;
  __int128 v10;
  uint64_t *v11;
  void **v12;
  uint64_t **v13;
  const void **v14;
  _OWORD *v15;
  int v16;
  std::string::size_type v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  std::string *v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  std::string *v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  std::string *v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  std::string *v39;
  __int128 v40;
  std::string v42;
  std::string v43;
  uint64_t v44;
  uint64_t **v45;
  uint64_t *v46;
  uint64_t v47;

  v3 = a3;
  v46 = 0;
  v47 = 0;
  v45 = &v46;
  if (*((int *)a2 + 29) >= 1)
  {
    for (i = 0; i < *((int *)a2 + 29); ++i)
    {
      v7 = *((_QWORD *)a2 + 7);
      v8 = (__int128 **)(v7 + 144 * i);
      v9 = *v8;
      if (*((char *)*v8 + 23) < 0)
      {
        std::string::__init_copy_ctor_external(&v43, *(const std::string::value_type **)v9, *((_QWORD *)v9 + 1));
      }
      else
      {
        v10 = *v9;
        v43.__r_.__value_.__r.__words[2] = *((_QWORD *)v9 + 2);
        *(_OWORD *)&v43.__r_.__value_.__l.__data_ = v10;
      }
      v44 = v7 + 144 * i;
      v11 = v46;
      v12 = (void **)&v46;
      v13 = &v46;
      if (!v46)
        goto LABEL_16;
      v12 = (void **)&v46;
      while (1)
      {
        while (1)
        {
          v13 = (uint64_t **)v11;
          v14 = (const void **)(v11 + 4);
          if (!std::less<std::string>::operator()[abi:ne180100]((uint64_t)&v47, (const void **)&v43.__r_.__value_.__l.__data_, (const void **)v11 + 4))break;
          v11 = *v13;
          v12 = (void **)v13;
          if (!*v13)
            goto LABEL_16;
        }
        if (!std::less<std::string>::operator()[abi:ne180100]((uint64_t)&v47, v14, (const void **)&v43.__r_.__value_.__l.__data_))break;
        v12 = (void **)(v13 + 1);
        v11 = v13[1];
        if (!v11)
          goto LABEL_16;
      }
      v15 = *v12;
      if (*v12)
      {
        v16 = 1;
      }
      else
      {
LABEL_16:
        v15 = operator new(0x40uLL);
        v15[2] = *(_OWORD *)&v43.__r_.__value_.__l.__data_;
        v17 = v43.__r_.__value_.__r.__words[2];
        v18 = v44;
        memset(&v43, 0, sizeof(v43));
        *((_QWORD *)v15 + 6) = v17;
        *((_QWORD *)v15 + 7) = v18;
        *(_QWORD *)v15 = 0;
        *((_QWORD *)v15 + 1) = 0;
        *((_QWORD *)v15 + 2) = v13;
        *v12 = v15;
        v19 = (uint64_t *)v15;
        if (*v45)
        {
          v45 = (uint64_t **)*v45;
          v19 = (uint64_t *)*v12;
        }
        std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(v46, v19);
        v16 = 0;
        ++v47;
      }
      v3 = a3;
      if (SHIBYTE(v43.__r_.__value_.__r.__words[2]) < 0)
      {
        operator delete(v43.__r_.__value_.__l.__data_);
        if (v16)
        {
LABEL_23:
          if (*(_BYTE *)(*(_QWORD *)(*((_QWORD *)v15 + 7) + 32) + 75)
            || *(_BYTE *)(*(_QWORD *)(v7 + 144 * i + 32) + 75))
          {
            v20 = *((_QWORD *)a2 + 1);
            std::operator+<char>();
            v21 = std::string::append(&v42, " conflicts with an existing nested message type.");
            v22 = *(_OWORD *)&v21->__r_.__value_.__l.__data_;
            v43.__r_.__value_.__r.__words[2] = v21->__r_.__value_.__r.__words[2];
            *(_OWORD *)&v43.__r_.__value_.__l.__data_ = v22;
            v21->__r_.__value_.__l.__size_ = 0;
            v21->__r_.__value_.__r.__words[2] = 0;
            v21->__r_.__value_.__r.__words[0] = 0;
            google::protobuf::DescriptorBuilder::AddError((uint64_t)this, v20, (uint64_t)a3, 0, (uint64_t)&v43);
            if (SHIBYTE(v43.__r_.__value_.__r.__words[2]) < 0)
              operator delete(v43.__r_.__value_.__l.__data_);
            if (SHIBYTE(v42.__r_.__value_.__r.__words[2]) < 0)
              operator delete(v42.__r_.__value_.__l.__data_);
          }
        }
      }
      else if (v16)
      {
        goto LABEL_23;
      }
      google::protobuf::DescriptorBuilder::DetectMapConflicts(this, (const google::protobuf::Descriptor *)(*((_QWORD *)a2 + 7) + 144 * i), *(const google::protobuf::DescriptorProto **)(*((_QWORD *)a3 + 8) + 8 * i + 8));
    }
  }
  if (*((int *)a2 + 26) >= 1)
  {
    v23 = 0;
    v24 = 0;
    do
    {
      v25 = std::__tree<std::__value_type<std::string,std::pair<void const*,int>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::pair<void const*,int>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::pair<void const*,int>>>>::find<std::string>((uint64_t)&v45, *(const void ***)(*((_QWORD *)a2 + 5) + v23));
      if (&v46 != (uint64_t **)v25 && *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v25 + 56) + 32) + 75))
      {
        v26 = *((_QWORD *)a2 + 1);
        std::operator+<char>();
        v27 = std::string::append(&v42, " conflicts with an existing field.");
        v28 = *(_OWORD *)&v27->__r_.__value_.__l.__data_;
        v43.__r_.__value_.__r.__words[2] = v27->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v43.__r_.__value_.__l.__data_ = v28;
        v27->__r_.__value_.__l.__size_ = 0;
        v27->__r_.__value_.__r.__words[2] = 0;
        v27->__r_.__value_.__r.__words[0] = 0;
        google::protobuf::DescriptorBuilder::AddError((uint64_t)this, v26, (uint64_t)v3, 0, (uint64_t)&v43);
        if (SHIBYTE(v43.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v43.__r_.__value_.__l.__data_);
        if (SHIBYTE(v42.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v42.__r_.__value_.__l.__data_);
      }
      ++v24;
      v23 += 152;
    }
    while (v24 < *((int *)a2 + 26));
  }
  if (*((int *)a2 + 30) >= 1)
  {
    v29 = 0;
    v30 = 0;
    do
    {
      v31 = std::__tree<std::__value_type<std::string,std::pair<void const*,int>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::pair<void const*,int>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::pair<void const*,int>>>>::find<std::string>((uint64_t)&v45, *(const void ***)(*((_QWORD *)a2 + 8) + v29));
      if (&v46 != (uint64_t **)v31 && *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v31 + 56) + 32) + 75))
      {
        v32 = *((_QWORD *)a2 + 1);
        std::operator+<char>();
        v33 = std::string::append(&v42, " conflicts with an existing enum type.");
        v34 = *(_OWORD *)&v33->__r_.__value_.__l.__data_;
        v43.__r_.__value_.__r.__words[2] = v33->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v43.__r_.__value_.__l.__data_ = v34;
        v33->__r_.__value_.__l.__size_ = 0;
        v33->__r_.__value_.__r.__words[2] = 0;
        v33->__r_.__value_.__r.__words[0] = 0;
        google::protobuf::DescriptorBuilder::AddError((uint64_t)this, v32, (uint64_t)v3, 0, (uint64_t)&v43);
        if (SHIBYTE(v43.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v43.__r_.__value_.__l.__data_);
        if (SHIBYTE(v42.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v42.__r_.__value_.__l.__data_);
      }
      ++v30;
      v29 += 80;
    }
    while (v30 < *((int *)a2 + 30));
  }
  if (*((int *)a2 + 27) >= 1)
  {
    v35 = 0;
    v36 = 0;
    do
    {
      v37 = std::__tree<std::__value_type<std::string,std::pair<void const*,int>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::pair<void const*,int>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::pair<void const*,int>>>>::find<std::string>((uint64_t)&v45, *(const void ***)(*((_QWORD *)a2 + 6) + v35));
      if (&v46 != (uint64_t **)v37 && *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v37 + 56) + 32) + 75))
      {
        v38 = *((_QWORD *)a2 + 1);
        std::operator+<char>();
        v39 = std::string::append(&v42, " conflicts with an existing oneof type.");
        v40 = *(_OWORD *)&v39->__r_.__value_.__l.__data_;
        v43.__r_.__value_.__r.__words[2] = v39->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v43.__r_.__value_.__l.__data_ = v40;
        v39->__r_.__value_.__l.__size_ = 0;
        v39->__r_.__value_.__r.__words[2] = 0;
        v39->__r_.__value_.__r.__words[0] = 0;
        google::protobuf::DescriptorBuilder::AddError((uint64_t)this, v38, (uint64_t)v3, 0, (uint64_t)&v43);
        if (SHIBYTE(v43.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v43.__r_.__value_.__l.__data_);
        if (SHIBYTE(v42.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v42.__r_.__value_.__l.__data_);
      }
      ++v36;
      v35 += 48;
    }
    while (v36 < *((int *)a2 + 27));
  }
  std::__tree<std::__value_type<std::string,BOOL>,std::__map_value_compare<std::string,std::__value_type<std::string,BOOL>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,BOOL>>>::destroy((char *)v46);
}

void sub_1888802F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,char *a25)
{
  if (a21 < 0)
    operator delete(__p);
  if (a15 < 0)
    operator delete(a10);
  std::__tree<std::__value_type<std::string,BOOL>,std::__map_value_compare<std::string,std::__value_type<std::string,BOOL>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,BOOL>>>::destroy(a25);
  _Unwind_Resume(a1);
}

void **google::protobuf::DescriptorBuilder::AllocateNameString(google::protobuf::DescriptorPool::Tables *this, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  void **EmptyString;
  int v8;
  BOOL v9;
  uint64_t *v10;
  uint64_t v11;
  int v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  std::string v18;
  uint64_t v19[2];
  _QWORD v20[6];
  _QWORD v21[6];
  _QWORD v22[7];

  v22[6] = *MEMORY[0x1E0C80C00];
  v5 = *((unsigned __int8 *)a2 + 23);
  if ((v5 & 0x80u) != 0)
    v5 = a2[1];
  if (v5)
  {
    EmptyString = (void **)google::protobuf::DescriptorPool::Tables::AllocateEmptyString(this);
    v8 = *((char *)a2 + 23);
    v9 = v8 < 0;
    v10 = (uint64_t *)*a2;
    if (v8 >= 0)
      v10 = a2;
    v11 = *((unsigned __int8 *)a2 + 23);
    if (v9)
      v11 = a2[1];
    v22[0] = v10;
    v22[1] = v11;
    v21[0] = ".";
    v21[1] = 1;
    v12 = *(char *)(a3 + 23);
    v13 = v12 < 0;
    v14 = *(_QWORD *)a3;
    if (v12 >= 0)
      v14 = a3;
    v15 = *(unsigned __int8 *)(a3 + 23);
    if (v13)
      v15 = *(_QWORD *)(a3 + 8);
    v20[0] = v14;
    v20[1] = v15;
    google::protobuf::StrCat((uint64_t)v22, (uint64_t)v21, (uint64_t)v20, &v18);
    if (*((char *)EmptyString + 23) < 0)
      operator delete(*EmptyString);
    v16 = *(_OWORD *)&v18.__r_.__value_.__l.__data_;
    EmptyString[2] = (void *)v18.__r_.__value_.__r.__words[2];
    *(_OWORD *)EmptyString = v16;
  }
  else
  {
    google::protobuf::StringPiece::StringPiece<std::allocator<char>>(v19, (uint64_t *)a3, (const char *)a3);
    return (void **)google::protobuf::DescriptorPool::Tables::AllocateString((uint64_t *)this, v19[0], v19[1]);
  }
  return EmptyString;
}

void google::protobuf::DescriptorBuilder::BuildFieldOrExtension(google::protobuf::DescriptorBuilder *this, const google::protobuf::FieldDescriptorProto *a2, google::protobuf::Descriptor *a3, google::protobuf::FieldDescriptor *a4, int a5)
{
  google::protobuf::Descriptor *v7;
  uint64_t **v10;
  void **NameString;
  uint64_t *v12;
  const char *v13;
  uint64_t v14;
  int v15;
  unint64_t v16;
  __int128 v17;
  const char *v18;
  const char *size;
  std::string *v20;
  std::string *v21;
  int v22;
  unint64_t v23;
  const char *v24;
  const char *v25;
  int v26;
  unsigned __int8 *v27;
  std::string *v28;
  uint64_t *v29;
  uint64_t *v30;
  const char *v31;
  const char *v32;
  uint64_t *v33;
  const char *v34;
  char **v35;
  uint64_t *v36;
  int32x2_t v37;
  uint64_t v38;
  std::string *v39;
  __int128 v40;
  int v41;
  int v42;
  uint64_t v43;
  int v44;
  unint64_t *v45;
  unint64_t v46;
  uint64_t v47;
  AddrObjGoogle::protobuf *v48;
  uint64_t v49;
  unint64_t *v50;
  unint64_t v51;
  int v52;
  unint64_t v53;
  int v54;
  uint64_t v55;
  std::string::size_type v56;
  int v57;
  uint64_t v58;
  int v59;
  _QWORD *v60;
  char *v61;
  char *v62;
  char *v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  unint64_t v67;
  char *v68;
  char *v69;
  char *v70;
  int v71;
  uint64_t v72;
  _QWORD *v73;
  int *v74;
  unint64_t v75;
  int **v76;
  _QWORD *v77;
  _QWORD *v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;
  int **v84;
  void *v85;
  int *v86;
  __int128 v87;
  void *v88;
  google::protobuf::UnknownFieldSet *v89;
  const char *v90;
  uint64_t v91;
  uint64_t *v92;
  uint64_t v93;
  _QWORD *v94;
  uint64_t *v95;
  const google::protobuf::Descriptor **v96;
  size_t v97;
  std::string *v98;
  const void *v99;
  int v100;
  const std::string::value_type *v101;
  std::string::size_type v102;
  std::string *v103;
  __int128 v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  const google::protobuf::Descriptor *v109;
  uint64_t ExtensionByNumberNoLock;
  uint64_t v111;
  unsigned __int16 **v112;
  int v113;
  unsigned __int16 *v114;
  unint64_t v115;
  unint64_t v116;
  unint64_t String;
  unint64_t v118;
  uint64_t v119;
  unsigned __int16 **v120;
  int v121;
  unsigned __int16 *v122;
  uint64_t v123;
  _QWORD *v124;
  int v125;
  _DWORD *v126;
  unsigned __int8 v127;
  unint64_t *v128;
  unint64_t v129;
  uint64_t *v130;
  int v131;
  int v132;
  unint64_t v134;
  int v135;
  int v136;
  int v138;
  char *v139;
  char *v140;
  double v141;
  int v142;
  float v143;
  unint64_t v144;
  uint64_t v145;
  std::string *v146;
  __int128 v147;
  __int128 v148;
  __int128 v149;
  __int128 v150;
  google::protobuf::Descriptor *v151;
  std::string __p;
  uint64_t v153[2];
  uint64_t v154[2];
  uint64_t v155[2];
  uint64_t v156[2];
  uint64_t v157[2];
  std::string v158;
  uint64_t v159[2];
  uint64_t v160;
  int v161;
  uint64_t v162;
  int v163;
  uint64_t v164;
  int v165;
  uint64_t v166;
  int v167;
  uint64_t v168;
  int v169;
  char *__endptr;
  int v171;
  void *v172;
  int v173;
  char v174;
  void *v175;
  char *v176;
  unint64_t v177[4];
  std::string v178;
  std::string v179;
  void *v180;
  _QWORD *v181;
  char v182;
  google::protobuf::UnknownFieldSet *v183;
  google::protobuf::UnknownFieldSet *v184;
  uint64_t v185;

  v7 = a3;
  v185 = *MEMORY[0x1E0C80C00];
  if (a3)
    v10 = (uint64_t **)((char *)a3 + 8);
  else
    v10 = (uint64_t **)(*((_QWORD *)this + 10) + 8);
  NameString = google::protobuf::DescriptorBuilder::AllocateNameString(*((google::protobuf::DescriptorPool::Tables **)this + 1), *v10, *((_QWORD *)a2 + 3) & 0xFFFFFFFFFFFFFFFELL);
  google::protobuf::DescriptorBuilder::ValidateSymbolName((uint64_t)this, (unsigned __int8 *)(*((_QWORD *)a2 + 3) & 0xFFFFFFFFFFFFFFFELL), (uint64_t)NameString, (uint64_t)a2);
  v12 = (uint64_t *)*((_QWORD *)this + 1);
  google::protobuf::StringPiece::StringPiece<std::allocator<char>>(v159, (uint64_t *)(*((_QWORD *)a2 + 3) & 0xFFFFFFFFFFFFFFFELL), v13);
  *(_QWORD *)a4 = google::protobuf::DescriptorPool::Tables::AllocateString(v12, v159[0], v159[1]);
  *((_QWORD *)a4 + 1) = NameString;
  v14 = *((_QWORD *)this + 10);
  *((_QWORD *)a4 + 5) = v14;
  *((_DWORD *)a4 + 17) = *((_DWORD *)a2 + 18);
  *((_BYTE *)a4 + 67) = a5;
  v15 = *((unsigned __int8 *)a2 + 80);
  *((_BYTE *)a4 + 65) = v15;
  if (v15)
  {
    if (*(_DWORD *)(v14 + 60) != 3)
    {
      std::operator+<char>();
      google::protobuf::DescriptorBuilder::AddError((uint64_t)this, (uint64_t)NameString, (uint64_t)a2, 2, (uint64_t)&v179);
      if (SHIBYTE(v179.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v179.__r_.__value_.__l.__data_);
    }
  }
  v16 = *((_QWORD *)a2 + 3) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v16 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(&v158, *(const std::string::value_type **)v16, *(_QWORD *)(v16 + 8));
  }
  else
  {
    v17 = *(_OWORD *)v16;
    v158.__r_.__value_.__r.__words[2] = *(_QWORD *)(v16 + 16);
    *(_OWORD *)&v158.__r_.__value_.__l.__data_ = v17;
  }
  v18 = (const char *)HIBYTE(v158.__r_.__value_.__r.__words[2]);
  size = (const char *)v158.__r_.__value_.__l.__size_;
  v20 = (std::string *)v158.__r_.__value_.__r.__words[0];
  if ((v158.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v21 = (std::string *)((char *)&v158 + HIBYTE(v158.__r_.__value_.__r.__words[2]));
  else
    v21 = (std::string *)(v158.__r_.__value_.__r.__words[0] + v158.__r_.__value_.__l.__size_);
  if ((v158.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v20 = &v158;
  if (v20 != v21)
  {
    do
    {
      v22 = v20->__r_.__value_.__s.__data_[0];
      if ((v22 - 65) <= 0x19)
        v20->__r_.__value_.__s.__data_[0] = v22 + 32;
      v20 = (std::string *)((char *)v20 + 1);
    }
    while (v20 != v21);
    v18 = (const char *)HIBYTE(v158.__r_.__value_.__r.__words[2]);
    size = (const char *)v158.__r_.__value_.__l.__size_;
  }
  v23 = *((_QWORD *)a2 + 3) & 0xFFFFFFFFFFFFFFFELL;
  if ((char)v18 >= 0)
    v24 = v18;
  else
    v24 = size;
  v25 = (const char *)*(unsigned __int8 *)(v23 + 23);
  v26 = (char)v25;
  if ((char)v25 < 0)
    v25 = *(const char **)(v23 + 8);
  if (v24 != v25)
    goto LABEL_37;
  if (v26 >= 0)
    v27 = (unsigned __int8 *)(*((_QWORD *)a2 + 3) & 0xFFFFFFFFFFFFFFFELL);
  else
    v27 = *(unsigned __int8 **)v23;
  if ((v18 & 0x80) != 0)
  {
    if (!memcmp(v158.__r_.__value_.__l.__data_, v27, (size_t)size))
      goto LABEL_38;
LABEL_37:
    v29 = (uint64_t *)*((_QWORD *)this + 1);
    google::protobuf::StringPiece::StringPiece<std::allocator<char>>(v157, (uint64_t *)&v158, size);
    *((_QWORD *)a4 + 2) = google::protobuf::DescriptorPool::Tables::AllocateString(v29, v157[0], v157[1]);
    v23 = *((_QWORD *)a2 + 3) & 0xFFFFFFFFFFFFFFFELL;
    goto LABEL_39;
  }
  if ((_DWORD)v18)
  {
    v28 = &v158;
    while (v28->__r_.__value_.__s.__data_[0] == *v27)
    {
      v28 = (std::string *)((char *)v28 + 1);
      ++v27;
      if (!--v18)
        goto LABEL_38;
    }
    goto LABEL_37;
  }
LABEL_38:
  *((_QWORD *)a4 + 2) = *(_QWORD *)a4;
LABEL_39:
  v30 = (uint64_t *)*((_QWORD *)this + 1);
  google::protobuf::StringPiece::StringPiece<std::allocator<char>>(v156, (uint64_t *)&v179, v31);
  *((_QWORD *)a4 + 3) = google::protobuf::DescriptorPool::Tables::AllocateString(v30, v156[0], v156[1]);
  if (SHIBYTE(v179.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v179.__r_.__value_.__l.__data_);
  if ((*((_BYTE *)a2 + 16) & 0x10) != 0)
  {
    *((_BYTE *)a4 + 66) = 1;
    v36 = (uint64_t *)*((_QWORD *)this + 1);
    google::protobuf::StringPiece::StringPiece<std::allocator<char>>(v155, (uint64_t *)(*((_QWORD *)a2 + 7) & 0xFFFFFFFFFFFFFFFELL), v32);
    *((_QWORD *)a4 + 4) = google::protobuf::DescriptorPool::Tables::AllocateString(v36, v155[0], v155[1]);
  }
  else
  {
    *((_BYTE *)a4 + 66) = 0;
    v33 = (uint64_t *)*((_QWORD *)this + 1);
    google::protobuf::StringPiece::StringPiece<std::allocator<char>>(v154, (uint64_t *)&v179, v34);
    *((_QWORD *)a4 + 4) = google::protobuf::DescriptorPool::Tables::AllocateString(v33, v154[0], v154[1]);
    if (SHIBYTE(v179.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v179.__r_.__value_.__l.__data_);
  }
  v37 = *(int32x2_t *)((char *)a2 + 84);
  *((int32x2_t *)a4 + 7) = vrev64_s32(v37);
  if (v37.i32[0] == 2 && *((_BYTE *)a4 + 67))
  {
    v38 = *((_QWORD *)a4 + 1);
    std::operator+<char>();
    v39 = std::string::append(&v178, " cannot be required.");
    v40 = *(_OWORD *)&v39->__r_.__value_.__l.__data_;
    v179.__r_.__value_.__r.__words[2] = v39->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v179.__r_.__value_.__l.__data_ = v40;
    v39->__r_.__value_.__l.__size_ = 0;
    v39->__r_.__value_.__r.__words[2] = 0;
    v39->__r_.__value_.__r.__words[0] = 0;
    google::protobuf::DescriptorBuilder::AddError((uint64_t)this, v38, (uint64_t)a2, 2, (uint64_t)&v179);
    if (SHIBYTE(v179.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v179.__r_.__value_.__l.__data_);
    if (SHIBYTE(v178.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v178.__r_.__value_.__l.__data_);
  }
  *((_QWORD *)a4 + 12) = 0;
  *((_QWORD *)a4 + 10) = 0;
  *((_QWORD *)a4 + 6) = 0;
  *((_QWORD *)a4 + 13) = 0;
  *((_QWORD *)a4 + 14) = 0;
  *((_QWORD *)a4 + 17) = 0;
  *((_QWORD *)a4 + 18) = 0;
  *((_QWORD *)a4 + 16) = 0;
  v41 = *((_DWORD *)a2 + 4);
  *((_BYTE *)a4 + 64) = (v41 & 8) != 0;
  if ((v41 & 8) != 0 && *((_DWORD *)a4 + 15) == 3)
  {
    google::protobuf::DescriptorBuilder::AddError((uint64_t)this, *((_QWORD *)a4 + 1), (uint64_t)a2, 4, "Repeated fields can't have default values.");
    v41 = *((_DWORD *)a2 + 4);
  }
  if ((v41 & 0x400) != 0)
  {
    if ((v41 & 8) == 0)
    {
      v45 = (unint64_t *)*((_QWORD *)a4 + 6);
      if (v45)
      {
        v175 = google::protobuf::FieldDescriptor::TypeOnceInit;
        v172 = a4;
        v46 = atomic_load(v45);
        if (v46 != -1)
        {
          v179.__r_.__value_.__r.__words[0] = (std::string::size_type)&v175;
          v179.__r_.__value_.__l.__size_ = (std::string::size_type)&v172;
          v178.__r_.__value_.__r.__words[0] = (std::string::size_type)&v179;
          std::__call_once(v45, &v178, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
        }
      }
      switch(*((_DWORD *)a4 + 14))
      {
        case 1:
        case 3:
        case 4:
        case 6:
        case 0xE:
        case 0x10:
        case 0x12:
          *((_QWORD *)a4 + 18) = 0;
          break;
        case 2:
        case 5:
        case 7:
        case 0xD:
        case 0xF:
        case 0x11:
          *((_DWORD *)a4 + 36) = 0;
          break;
        case 8:
          *((_BYTE *)a4 + 144) = 0;
          break;
        case 9:
        case 0xC:
          v127 = atomic_load(google::protobuf::internal::init_protobuf_defaults_state);
          if ((v127 & 1) == 0)
            google::protobuf::internal::InitProtobufDefaultsSlow((google::protobuf::internal *)v45);
          *((_QWORD *)a4 + 18) = &google::protobuf::internal::fixed_address_empty_string;
          break;
        case 0xA:
        case 0xB:
          atomic_store(0, (unint64_t *)a4 + 18);
          break;
        default:
          goto LABEL_55;
      }
      goto LABEL_55;
    }
    __endptr = 0;
    v50 = (unint64_t *)*((_QWORD *)a4 + 6);
    if (v50)
    {
      v175 = google::protobuf::FieldDescriptor::TypeOnceInit;
      v172 = a4;
      v51 = atomic_load(v50);
      if (v51 != -1)
      {
        v179.__r_.__value_.__r.__words[0] = (std::string::size_type)&v175;
        v179.__r_.__value_.__l.__size_ = (std::string::size_type)&v172;
        v178.__r_.__value_.__r.__words[0] = (std::string::size_type)&v179;
        std::__call_once(v50, &v178, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
      }
    }
    v52 = *((_DWORD *)a4 + 14);
    switch(v52)
    {
      case 1:
        v111 = *((_QWORD *)a2 + 6);
        v112 = (unsigned __int16 **)(v111 & 0xFFFFFFFFFFFFFFFELL);
        v113 = *(char *)((v111 & 0xFFFFFFFFFFFFFFFELL) + 23);
        if (v113 < 0)
        {
          if (v112[1] != (unsigned __int16 *)3)
          {
LABEL_221:
            if (std::operator==[abi:ne180100]<char,std::char_traits<char>,std::allocator<char>>(v112, "-inf"))
            {
              v134 = 0xFFF0000000000000;
LABEL_250:
              *((_QWORD *)a4 + 18) = v134;
              goto LABEL_262;
            }
            if (std::operator==[abi:ne180100]<char,std::char_traits<char>,std::allocator<char>>((_QWORD *)(*((_QWORD *)a2 + 6) & 0xFFFFFFFFFFFFFFFELL), "nan"))
            {
              v134 = 0x7FF8000000000000;
              goto LABEL_250;
            }
            v139 = (char *)(*((_QWORD *)a2 + 6) & 0xFFFFFFFFFFFFFFFELL);
            if (v139[23] < 0)
              v139 = *(char **)v139;
            *((double *)a4 + 18) = google::protobuf::internal::NoLocaleStrtod((google::protobuf::internal *)v139, (char *)&__endptr, v35);
LABEL_262:
            if (!__endptr)
              break;
            v144 = *((_QWORD *)a2 + 6) & 0xFFFFFFFFFFFFFFFELL;
            if (*(char *)(v144 + 23) < 0)
            {
              if (!*(_QWORD *)(v144 + 8))
              {
LABEL_268:
                v145 = *((_QWORD *)a4 + 1);
                std::operator+<char>();
                v146 = std::string::append(&v178, "\".");
                v147 = *(_OWORD *)&v146->__r_.__value_.__l.__data_;
                v179.__r_.__value_.__r.__words[2] = v146->__r_.__value_.__r.__words[2];
                *(_OWORD *)&v179.__r_.__value_.__l.__data_ = v147;
                v146->__r_.__value_.__l.__size_ = 0;
                v146->__r_.__value_.__r.__words[2] = 0;
                v146->__r_.__value_.__r.__words[0] = 0;
                google::protobuf::DescriptorBuilder::AddError((uint64_t)this, v145, (uint64_t)a2, 4, (uint64_t)&v179);
                if (SHIBYTE(v179.__r_.__value_.__r.__words[2]) < 0)
                  operator delete(v179.__r_.__value_.__l.__data_);
                if (SHIBYTE(v178.__r_.__value_.__r.__words[2]) < 0)
                  operator delete(v178.__r_.__value_.__l.__data_);
                break;
              }
            }
            else if (!*(_BYTE *)(v144 + 23))
            {
              goto LABEL_268;
            }
            if (!*__endptr)
              break;
            goto LABEL_268;
          }
          v114 = *v112;
        }
        else
        {
          v114 = (unsigned __int16 *)(v111 & 0xFFFFFFFFFFFFFFFELL);
          if (v113 != 3)
            goto LABEL_221;
        }
        v131 = *v114;
        v132 = *((unsigned __int8 *)v114 + 2);
        if (v131 == 28265 && v132 == 102)
        {
          v134 = 0x7FF0000000000000;
          goto LABEL_250;
        }
        goto LABEL_221;
      case 2:
        v119 = *((_QWORD *)a2 + 6);
        v120 = (unsigned __int16 **)(v119 & 0xFFFFFFFFFFFFFFFELL);
        v121 = *(char *)((v119 & 0xFFFFFFFFFFFFFFFELL) + 23);
        if (v121 < 0)
        {
          if (v120[1] != (unsigned __int16 *)3)
            goto LABEL_231;
          v122 = *v120;
        }
        else
        {
          v122 = (unsigned __int16 *)(v119 & 0xFFFFFFFFFFFFFFFELL);
          if (v121 != 3)
            goto LABEL_231;
        }
        v135 = *v122;
        v136 = *((unsigned __int8 *)v122 + 2);
        if (v135 == 28265 && v136 == 102)
        {
          v138 = 2139095040;
          goto LABEL_252;
        }
LABEL_231:
        if (std::operator==[abi:ne180100]<char,std::char_traits<char>,std::allocator<char>>(v120, "-inf"))
        {
          v138 = -8388608;
LABEL_252:
          *((_DWORD *)a4 + 36) = v138;
          goto LABEL_262;
        }
        if (std::operator==[abi:ne180100]<char,std::char_traits<char>,std::allocator<char>>((_QWORD *)(*((_QWORD *)a2 + 6) & 0xFFFFFFFFFFFFFFFELL), "nan"))
        {
          v138 = 2143289344;
          goto LABEL_252;
        }
        v140 = (char *)(*((_QWORD *)a2 + 6) & 0xFFFFFFFFFFFFFFFELL);
        if (v140[23] < 0)
          v140 = *(char **)v140;
        v141 = google::protobuf::internal::NoLocaleStrtod((google::protobuf::internal *)v140, (char *)&__endptr, v35);
        if (v141 <= 3.40282347e38)
        {
          if (v141 >= -3.40282347e38)
          {
            v143 = v141;
LABEL_261:
            *((float *)a4 + 36) = v143;
            goto LABEL_262;
          }
          if (v141 >= -3.40282357e38)
            v142 = -8388609;
          else
            v142 = -8388608;
        }
        else if (v141 <= 3.40282357e38)
        {
          v142 = 2139095039;
        }
        else
        {
          v142 = 2139095040;
        }
        v143 = *(float *)&v142;
        goto LABEL_261;
      case 3:
      case 16:
      case 18:
        v118 = *((_QWORD *)a2 + 6) & 0xFFFFFFFFFFFFFFFELL;
        if (*(char *)(v118 + 23) < 0)
          v118 = *(_QWORD *)v118;
        String = strtoll((const char *)v118, &__endptr, 0);
        goto LABEL_214;
      case 4:
      case 6:
        v116 = *((_QWORD *)a2 + 6) & 0xFFFFFFFFFFFFFFFELL;
        if (*(char *)(v116 + 23) < 0)
          v116 = *(_QWORD *)v116;
        String = strtoull((const char *)v116, &__endptr, 0);
        goto LABEL_214;
      case 5:
      case 15:
      case 17:
        v53 = *((_QWORD *)a2 + 6) & 0xFFFFFFFFFFFFFFFELL;
        if (*(char *)(v53 + 23) < 0)
          v53 = *(_QWORD *)v53;
        v54 = strtol((const char *)v53, &__endptr, 0);
        goto LABEL_189;
      case 7:
      case 13:
        v115 = *((_QWORD *)a2 + 6) & 0xFFFFFFFFFFFFFFFELL;
        if (*(char *)(v115 + 23) < 0)
          v115 = *(_QWORD *)v115;
        v54 = strtoul((const char *)v115, &__endptr, 0);
LABEL_189:
        *((_DWORD *)a4 + 36) = v54;
        goto LABEL_262;
      case 8:
        v123 = *((_QWORD *)a2 + 6);
        v124 = (_QWORD *)(v123 & 0xFFFFFFFFFFFFFFFELL);
        v125 = *(char *)((v123 & 0xFFFFFFFFFFFFFFFELL) + 23);
        if (v125 < 0)
        {
          if (v124[1] != 4)
            goto LABEL_238;
          v126 = (_DWORD *)*v124;
        }
        else
        {
          v126 = (_DWORD *)(v123 & 0xFFFFFFFFFFFFFFFELL);
          if (v125 != 4)
            goto LABEL_238;
        }
        if (*v126 == 1702195828)
        {
          *((_BYTE *)a4 + 144) = 1;
          goto LABEL_262;
        }
LABEL_238:
        if (std::operator==[abi:ne180100]<char,std::char_traits<char>,std::allocator<char>>(v124, "false"))
          *((_BYTE *)a4 + 144) = 0;
        else
          google::protobuf::DescriptorBuilder::AddError((uint64_t)this, *((_QWORD *)a4 + 1), (uint64_t)a2, 4, "Boolean default must be true or false.");
        goto LABEL_262;
      case 9:
      case 12:
        v128 = (unint64_t *)*((_QWORD *)a4 + 6);
        if (v128)
        {
          v175 = google::protobuf::FieldDescriptor::TypeOnceInit;
          v172 = a4;
          v129 = atomic_load(v128);
          if (v129 != -1)
          {
            v179.__r_.__value_.__r.__words[0] = (std::string::size_type)&v175;
            v179.__r_.__value_.__l.__size_ = (std::string::size_type)&v172;
            v178.__r_.__value_.__r.__words[0] = (std::string::size_type)&v179;
            std::__call_once(v128, &v178, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
          }
          v52 = *((_DWORD *)a4 + 14);
        }
        v130 = (uint64_t *)*((_QWORD *)this + 1);
        if (v52 == 12)
          google::protobuf::UnescapeCEscapeString(*((_QWORD *)a2 + 6) & 0xFFFFFFFFFFFFFFFELL, &v179);
        google::protobuf::StringPiece::StringPiece<std::allocator<char>>(v153, (uint64_t *)(*((_QWORD *)a2 + 6) & 0xFFFFFFFFFFFFFFFELL), (const char *)v35);
        String = (unint64_t)google::protobuf::DescriptorPool::Tables::AllocateString(v130, v153[0], v153[1]);
LABEL_214:
        *((_QWORD *)a4 + 18) = String;
        goto LABEL_262;
      case 10:
      case 11:
        google::protobuf::DescriptorBuilder::AddError((uint64_t)this, *((_QWORD *)a4 + 1), (uint64_t)a2, 4, "Messages can't have default values.");
        *((_BYTE *)a4 + 64) = 0;
        atomic_store(0, (unint64_t *)a4 + 18);
        goto LABEL_262;
      case 14:
        *((_QWORD *)a4 + 18) = 0;
        goto LABEL_262;
      default:
        goto LABEL_262;
    }
  }
LABEL_55:
  v42 = *((_DWORD *)a4 + 17);
  if (v42 <= 0)
  {
    google::protobuf::DescriptorBuilder::AddError((uint64_t)this, *((_QWORD *)a4 + 1), (uint64_t)a2, 1, "Field numbers must be positive integers.");
  }
  else
  {
    if (v42 >> 29 && (a5 & 1) == 0)
    {
      v43 = *((_QWORD *)a4 + 1);
      strcpy(&v179.__r_.__value_.__s.__data_[14], "536870911");
      v179.__r_.__value_.__r.__words[0] = (std::string::size_type)&v179.__r_.__value_.__r.__words[1] + 6;
      LODWORD(v179.__r_.__value_.__r.__words[1]) = strlen(&v179.__r_.__value_.__s.__data_[14]);
      v178.__r_.__value_.__r.__words[0] = 0;
      LODWORD(v178.__r_.__value_.__r.__words[1]) = -1;
      v175 = 0;
      LODWORD(v176) = -1;
      v172 = 0;
      v173 = -1;
      __endptr = 0;
      v171 = -1;
      v168 = 0;
      v169 = -1;
      v166 = 0;
      v167 = -1;
      v164 = 0;
      v165 = -1;
      v162 = 0;
      v163 = -1;
      v160 = 0;
      v161 = -1;
      *(_QWORD *)&v148 = &v164;
      *((_QWORD *)&v148 + 1) = &v162;
      google::protobuf::strings::Substitute("Field numbers cannot be greater than $0.", (uint64_t)&v179, (uint64_t)&v178, (uint64_t)&v175, (uint64_t)&v172, (uint64_t)&__endptr, (uint64_t)&v168, (uint64_t)&v166, &__p, v148, (uint64_t)&v160);
      google::protobuf::DescriptorBuilder::AddError((uint64_t)this, v43, (uint64_t)a2, 1, (uint64_t)&__p);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__p.__r_.__value_.__l.__data_);
      v44 = *((_DWORD *)a2 + 4);
      goto LABEL_76;
    }
    if ((v42 - 19000) <= 0x3E7)
    {
      v47 = *((_QWORD *)a4 + 1);
      strcpy(&v179.__r_.__value_.__s.__data_[18], "19000");
      v179.__r_.__value_.__r.__words[0] = (std::string::size_type)&v179.__r_.__value_.__r.__words[2] + 2;
      LODWORD(v179.__r_.__value_.__r.__words[1]) = strlen(&v179.__r_.__value_.__s.__data_[18]);
      qmemcpy((char *)&v178.__r_.__value_.__r.__words[2] + 2, "19999", 5);
      v178.__r_.__value_.__r.__words[0] = (std::string::size_type)&v178.__r_.__value_.__r.__words[2] + 2;
      LODWORD(v178.__r_.__value_.__r.__words[1]) = strlen(&v178.__r_.__value_.__s.__data_[18]);
      v175 = 0;
      LODWORD(v176) = -1;
      v172 = 0;
      v173 = -1;
      __endptr = 0;
      v171 = -1;
      v168 = 0;
      v169 = -1;
      v166 = 0;
      v167 = -1;
      v164 = 0;
      v165 = -1;
      v162 = 0;
      v163 = -1;
      v160 = 0;
      v161 = -1;
      *(_QWORD *)&v149 = &v164;
      *((_QWORD *)&v149 + 1) = &v162;
      google::protobuf::strings::Substitute("Field numbers $0 through $1 are reserved for the protocol buffer library implementation.", (uint64_t)&v179, (uint64_t)&v178, (uint64_t)&v175, (uint64_t)&v172, (uint64_t)&__endptr, (uint64_t)&v168, (uint64_t)&v166, &__p, v149, (uint64_t)&v160);
      google::protobuf::DescriptorBuilder::AddError((uint64_t)this, v47, (uint64_t)a2, 1, (uint64_t)&__p);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  v44 = *((_DWORD *)a2 + 4);
  if (a5)
  {
    if ((v44 & 2) == 0)
    {
      google::protobuf::DescriptorBuilder::AddError((uint64_t)this, *((_QWORD *)a4 + 1), (uint64_t)a2, 3, "FieldDescriptorProto.extendee not set for extension field.");
      v44 = *((_DWORD *)a2 + 4);
    }
    *((_QWORD *)a4 + 12) = v7;
    if ((v44 & 0x80) != 0)
      google::protobuf::DescriptorBuilder::AddError((uint64_t)this, *((_QWORD *)a4 + 1), (uint64_t)a2, 2, "FieldDescriptorProto.oneof_index should not be set for extensions.");
    goto LABEL_95;
  }
LABEL_76:
  if ((v44 & 2) != 0)
  {
    google::protobuf::DescriptorBuilder::AddError((uint64_t)this, *((_QWORD *)a4 + 1), (uint64_t)a2, 3, "FieldDescriptorProto.extendee set for non-extension field.");
    v44 = *((_DWORD *)a2 + 4);
  }
  *((_QWORD *)a4 + 10) = v7;
  if ((v44 & 0x80) != 0)
  {
    v48 = (AddrObjGoogle::protobuf *)*((unsigned int *)a2 + 19);
    if ((v48 & 0x80000000) == 0 && (int)v48 < *((_DWORD *)v7 + 27))
    {
      v49 = *((_QWORD *)v7 + 6) + 48 * v48;
      goto LABEL_96;
    }
    v55 = *((_QWORD *)a4 + 1);
    v179.__r_.__value_.__r.__words[0] = (std::string::size_type)AddrObjGoogle::protobuf::FastInt32ToBuffer(v48, &v179.__r_.__value_.__s.__data_[12], (char *)v35);
    LODWORD(v179.__r_.__value_.__r.__words[1]) = strlen(v179.__r_.__value_.__l.__data_);
    v56 = *(_QWORD *)v7;
    v57 = *(char *)(*(_QWORD *)v7 + 23);
    v58 = *(_QWORD *)(*(_QWORD *)v7 + 8);
    if (v57 < 0)
      v56 = **(_QWORD **)v7;
    v178.__r_.__value_.__r.__words[0] = v56;
    v59 = v57;
    if (v57 < 0)
      v59 = v58;
    LODWORD(v178.__r_.__value_.__r.__words[1]) = v59;
    v175 = 0;
    LODWORD(v176) = -1;
    v172 = 0;
    v173 = -1;
    __endptr = 0;
    v171 = -1;
    v168 = 0;
    v169 = -1;
    v166 = 0;
    v167 = -1;
    v164 = 0;
    v165 = -1;
    v162 = 0;
    v163 = -1;
    v160 = 0;
    v161 = -1;
    *(_QWORD *)&v150 = &v164;
    *((_QWORD *)&v150 + 1) = &v162;
    google::protobuf::strings::Substitute("FieldDescriptorProto.oneof_index $0 is out of range for type \"$1\".", (uint64_t)&v179, (uint64_t)&v178, (uint64_t)&v175, (uint64_t)&v172, (uint64_t)&__endptr, (uint64_t)&v168, (uint64_t)&v166, &__p, v150, (uint64_t)&v160);
    google::protobuf::DescriptorBuilder::AddError((uint64_t)this, v55, (uint64_t)a2, 2, (uint64_t)&__p);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
LABEL_95:
  v49 = 0;
LABEL_96:
  *((_QWORD *)a4 + 11) = v49;
  *((_QWORD *)a4 + 15) = 0;
  if ((*((_BYTE *)a2 + 16) & 0x20) != 0)
  {
    v60 = (_QWORD *)*((_QWORD *)a2 + 8);
    std::string::basic_string[abi:ne180100]<0>(&v172, "google.protobuf.FieldOptions");
    v176 = 0;
    v175 = 0;
    v177[0] = 0;
    google::protobuf::FieldDescriptor::GetLocationPath((uint64_t)a4, (char **)&v175);
    v61 = v176;
    if ((unint64_t)v176 >= v177[0])
    {
      v63 = (char *)v175;
      v64 = (v176 - (_BYTE *)v175) >> 2;
      v65 = v64 + 1;
      if ((unint64_t)(v64 + 1) >> 62)
        std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
      v66 = v177[0] - (_QWORD)v175;
      if ((uint64_t)(v177[0] - (_QWORD)v175) >> 1 > v65)
        v65 = v66 >> 1;
      if ((unint64_t)v66 >= 0x7FFFFFFFFFFFFFFCLL)
        v67 = 0x3FFFFFFFFFFFFFFFLL;
      else
        v67 = v65;
      if (v67)
      {
        v68 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<unsigned int>>((uint64_t)v177, v67);
        v61 = v176;
        v63 = (char *)v175;
      }
      else
      {
        v68 = 0;
      }
      v69 = &v68[4 * v64];
      v70 = &v68[4 * v67];
      *(_DWORD *)v69 = 8;
      v62 = v69 + 4;
      while (v61 != v63)
      {
        v71 = *((_DWORD *)v61 - 1);
        v61 -= 4;
        *((_DWORD *)v69 - 1) = v71;
        v69 -= 4;
      }
      v175 = v69;
      v176 = v62;
      v177[0] = (unint64_t)v70;
      if (v63)
        operator delete(v63);
    }
    else
    {
      *(_DWORD *)v176 = 8;
      v62 = v61 + 4;
    }
    v176 = v62;
    v72 = *((_QWORD *)a4 + 1);
    v73 = (_QWORD *)*((_QWORD *)this + 1);
    v74 = (int *)operator new();
    v151 = v7;
    google::protobuf::FieldOptions::FieldOptions((google::protobuf::FieldOptions *)v74, 0);
    v75 = v73[31];
    v76 = (int **)v73[30];
    if ((unint64_t)v76 >= v75)
    {
      v78 = (_QWORD *)v73[29];
      v79 = v76 - (int **)v78;
      v80 = v79 + 1;
      if ((unint64_t)(v79 + 1) >> 61)
        std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
      v81 = v75 - (_QWORD)v78;
      if (v81 >> 2 > v80)
        v80 = v81 >> 2;
      if ((unint64_t)v81 >= 0x7FFFFFFFFFFFFFF8)
        v82 = 0x1FFFFFFFFFFFFFFFLL;
      else
        v82 = v80;
      v181 = v73 + 31;
      if (v82)
      {
        v82 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<std::unique_ptr<google::protobuf::Message>>>(v82);
        v78 = (_QWORD *)v73[29];
        v76 = (int **)v73[30];
      }
      else
      {
        v83 = 0;
      }
      v84 = (int **)(v82 + 8 * v79);
      v85 = (void *)(v82 + 8 * v83);
      v180 = v85;
      *v84 = v74;
      v179.__r_.__value_.__r.__words[2] = (std::string::size_type)(v84 + 1);
      if (v76 == v78)
      {
        v77 = v84 + 1;
      }
      else
      {
        do
        {
          v86 = *--v76;
          *v76 = 0;
          *--v84 = v86;
        }
        while (v76 != v78);
        v77 = (_QWORD *)v179.__r_.__value_.__r.__words[2];
        v85 = v180;
      }
      v87 = *(_OWORD *)(v73 + 29);
      v73[29] = v84;
      v73[30] = v77;
      *(_OWORD *)&v179.__r_.__value_.__r.__words[1] = v87;
      v88 = (void *)v73[31];
      v73[31] = v85;
      v180 = v88;
      v179.__r_.__value_.__r.__words[0] = v87;
      std::__split_buffer<std::unique_ptr<google::protobuf::Message>>::~__split_buffer((uint64_t)&v179);
    }
    else
    {
      *v76 = v74;
      v77 = v76 + 1;
    }
    v73[30] = v77;
    if (google::protobuf::internal::ExtensionSet::IsInitialized((google::protobuf::internal::ExtensionSet *)(v60 + 2))
      && (google::protobuf::internal::AllAreInitialized<google::protobuf::UninterpretedOption>((uint64_t)(v60 + 6)) & 1) != 0)
    {
      google::protobuf::MessageLite::SerializeAsString((google::protobuf::MessageLite *)v60, (uint64_t)&v179);
      v89 = (google::protobuf::UnknownFieldSet *)google::protobuf::MessageLite::ParseFrom<(google::protobuf::MessageLite::ParseFlags)1,std::string>((google::protobuf::MessageLite *)v74, (uint64_t *)&v179);
      if (SHIBYTE(v179.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v179.__r_.__value_.__l.__data_);
      *((_QWORD *)a4 + 15) = v74;
      if (v74[14] >= 1)
      {
        v89 = v183;
        if (v183)
        {
          v184 = v183;
          operator delete(v183);
        }
        if (v182 < 0)
          operator delete(v180);
        if (SHIBYTE(v179.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v179.__r_.__value_.__l.__data_);
      }
      v91 = v60[1];
      if ((v91 & 1) != 0)
        v92 = (uint64_t *)((v91 & 0xFFFFFFFFFFFFFFFELL) + 8);
      else
        v92 = (uint64_t *)google::protobuf::UnknownFieldSet::default_instance(v89);
      if (*v92 != v92[1])
      {
        v93 = *((_QWORD *)this + 1);
        google::protobuf::StringPiece::StringPiece<std::allocator<char>>(&v178, (uint64_t *)&v172, v90);
        *(_OWORD *)&v179.__r_.__value_.__l.__data_ = *(_OWORD *)&v178.__r_.__value_.__l.__data_;
        v94 = std::__hash_table<std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>,std::__unordered_map_hasher<google::protobuf::StringPiece,std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>,google::protobuf::hash<google::protobuf::StringPiece>,std::equal_to<google::protobuf::StringPiece>,true>,std::__unordered_map_equal<google::protobuf::StringPiece,std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>,std::equal_to<google::protobuf::StringPiece>,google::protobuf::hash<google::protobuf::StringPiece>,true>,std::allocator<std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>>>::find<google::protobuf::StringPiece>((_QWORD *)(v93 + 304), &v179.__r_.__value_.__l.__data_);
        if (v94)
        {
          v95 = v94 + 4;
          v96 = (const google::protobuf::Descriptor **)(v94 + 5);
        }
        else
        {
          v95 = &qword_1ECDBB718;
          v96 = (const google::protobuf::Descriptor **)&qword_1ECDBB720;
        }
        if (*(_DWORD *)v95 == 1)
        {
          v105 = *v92;
          v106 = v92[1];
          if ((int)((unint64_t)(v106 - *v92) >> 4) >= 1)
          {
            v107 = 0;
            v108 = 0;
            v109 = *v96;
            do
            {
              ExtensionByNumberNoLock = google::protobuf::DescriptorPool::InternalFindExtensionByNumberNoLock(*(google::protobuf::DescriptorPool **)this, v109, *(_DWORD *)(v105 + v107));
              if (ExtensionByNumberNoLock)
              {
                std::__tree<google::protobuf::FileDescriptor const*>::__erase_unique<google::protobuf::FileDescriptor const*>((uint64_t **)this + 15, *(_QWORD *)(ExtensionByNumberNoLock + 40));
                v105 = *v92;
                v106 = v92[1];
              }
              ++v108;
              v107 += 16;
            }
            while (v108 < (int)((unint64_t)(v106 - v105) >> 4));
          }
        }
      }
    }
    else
    {
      if (*(char *)(v72 + 23) >= 0)
        v97 = *(unsigned __int8 *)(v72 + 23);
      else
        v97 = *(_QWORD *)(v72 + 8);
      std::string::basic_string[abi:ne180100]((uint64_t)&v178, v97 + 1);
      if ((v178.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v98 = &v178;
      else
        v98 = (std::string *)v178.__r_.__value_.__r.__words[0];
      if (v97)
      {
        if (*(char *)(v72 + 23) >= 0)
          v99 = (const void *)v72;
        else
          v99 = *(const void **)v72;
        memmove(v98, v99, v97);
      }
      *(_WORD *)((char *)&v98->__r_.__value_.__l.__data_ + v97) = 46;
      v100 = *(char *)(v72 + 23);
      if (v100 >= 0)
        v101 = (const std::string::value_type *)v72;
      else
        v101 = *(const std::string::value_type **)v72;
      if (v100 >= 0)
        v102 = *(unsigned __int8 *)(v72 + 23);
      else
        v102 = *(_QWORD *)(v72 + 8);
      v103 = std::string::append(&v178, v101, v102);
      v104 = *(_OWORD *)&v103->__r_.__value_.__l.__data_;
      v179.__r_.__value_.__r.__words[2] = v103->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v179.__r_.__value_.__l.__data_ = v104;
      v103->__r_.__value_.__l.__size_ = 0;
      v103->__r_.__value_.__r.__words[2] = 0;
      v103->__r_.__value_.__r.__words[0] = 0;
      google::protobuf::DescriptorBuilder::AddError((uint64_t)this, (uint64_t)&v179, (uint64_t)v60, 7, "Uninterpreted option is missing name or value.");
      if (SHIBYTE(v179.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v179.__r_.__value_.__l.__data_);
      if (SHIBYTE(v178.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v178.__r_.__value_.__l.__data_);
    }
    if (v175)
    {
      v176 = (char *)v175;
      operator delete(v175);
    }
    v7 = v151;
    if (v174 < 0)
      operator delete(v172);
  }
  google::protobuf::DescriptorBuilder::AddSymbol((uint64_t)this, *((_QWORD *)a4 + 1), (uint64_t)v7, *(_QWORD *)a4, (uint64_t)a2, 2, (uint64_t)a4);
  if (SHIBYTE(v158.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v158.__r_.__value_.__l.__data_);
}

void sub_18888172C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,void *__p,uint64_t a30,int a31,__int16 a32,char a33,char a34)
{
  if (a34 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void google::protobuf::`anonymous namespace'::ToCamelCase(std::string *a1, unsigned __int8 *a2, char a3)
{
  unsigned __int8 *v4;
  std::string *v5;
  std::string::size_type v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 v9;
  int v10;
  BOOL v11;
  std::string::value_type v12;
  int v13;

  v4 = a2;
  v5 = a1;
  a1->__r_.__value_.__r.__words[0] = 0;
  a1->__r_.__value_.__l.__size_ = 0;
  a1->__r_.__value_.__r.__words[2] = 0;
  if ((a2[23] & 0x80u) == 0)
    v6 = a2[23];
  else
    v6 = *((_QWORD *)a2 + 1);
  std::string::reserve(a1, v6);
  v7 = *((_QWORD *)v4 + 1);
  if ((v4[23] & 0x80u) == 0)
  {
    v8 = v4[23];
  }
  else
  {
    v4 = *(unsigned __int8 **)v4;
    v8 = v7;
  }
  if (v8)
  {
    v9 = a3 ^ 1;
    do
    {
      v10 = *v4;
      v11 = v10 == 95;
      if (v10 != 95)
      {
        if ((v9 & ((v10 - 97) < 0x1A)) != 0)
          v12 = v10 - 32;
        else
          v12 = *v4;
        std::string::push_back(v5, v12);
      }
      ++v4;
      v9 = v11;
      --v8;
    }
    while (v8);
  }
  if ((a3 & 1) != 0)
  {
    if (SHIBYTE(v5->__r_.__value_.__r.__words[2]) < 0)
    {
      if (!v5->__r_.__value_.__l.__size_)
        return;
      v5 = (std::string *)v5->__r_.__value_.__r.__words[0];
    }
    else if (!*((_BYTE *)&v5->__r_.__value_.__s + 23))
    {
      return;
    }
    v13 = v5->__r_.__value_.__s.__data_[0];
    if ((v13 - 65) < 0x1A)
      LOBYTE(v13) = v13 + 32;
    v5->__r_.__value_.__s.__data_[0] = v13;
  }
}

void sub_188881984(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (*(char *)(v1 + 23) < 0)
    operator delete(*(void **)v1);
  _Unwind_Resume(exception_object);
}

void google::protobuf::`anonymous namespace'::ToJsonName(std::string *a1, unsigned __int8 *a2)
{
  unsigned __int8 *v2;
  std::string::size_type v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  int v8;
  BOOL v9;
  std::string::value_type v10;

  v2 = a2;
  a1->__r_.__value_.__r.__words[0] = 0;
  a1->__r_.__value_.__l.__size_ = 0;
  a1->__r_.__value_.__r.__words[2] = 0;
  if ((a2[23] & 0x80u) == 0)
    v4 = a2[23];
  else
    v4 = *((_QWORD *)a2 + 1);
  std::string::reserve(a1, v4);
  v5 = *((_QWORD *)v2 + 1);
  if ((v2[23] & 0x80u) == 0)
  {
    v6 = v2[23];
  }
  else
  {
    v2 = *(unsigned __int8 **)v2;
    v6 = v5;
  }
  if (v6)
  {
    v7 = 0;
    do
    {
      v8 = *v2;
      v9 = v8 == 95;
      if (v8 != 95)
      {
        if (v7 && (v8 - 97) < 0x1A)
          v10 = v8 - 32;
        else
          v10 = *v2;
        std::string::push_back(a1, v10);
      }
      ++v2;
      v7 = v9;
      --v6;
    }
    while (v6);
  }
}

void sub_188881A50(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (*(char *)(v1 + 23) < 0)
    operator delete(*(void **)v1);
  _Unwind_Resume(exception_object);
}

BOOL std::operator!=[abi:ne180100]<char,std::char_traits<char>,std::allocator<char>>(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  int v7;
  int v8;
  int v9;
  BOOL v10;

  v2 = a1[23];
  if ((v2 & 0x80u) == 0)
    v3 = a1[23];
  else
    v3 = *((_QWORD *)a1 + 1);
  v4 = a2[23];
  v5 = (char)v4;
  if ((v4 & 0x80u) != 0)
    v4 = *((_QWORD *)a2 + 1);
  if (v3 != v4)
    return 1;
  if (v5 < 0)
    a2 = *(unsigned __int8 **)a2;
  if ((v2 & 0x80) != 0)
    return memcmp(*(const void **)a1, a2, *((_QWORD *)a1 + 1)) != 0;
  if (a1[23])
  {
    v6 = v2 - 1;
    do
    {
      v8 = *a1++;
      v7 = v8;
      v9 = *a2++;
      v10 = v7 == v9;
      v2 = v7 != v9;
      v10 = !v10 || v6-- == 0;
    }
    while (!v10);
  }
  return v2;
}

void google::protobuf::DescriptorBuilder::CrossLinkMessage(google::protobuf::DescriptorPool::Tables **this, google::protobuf::Descriptor *a2, const google::protobuf::DescriptorProto *a3)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v20;
  uint64_t v21;
  uint64_t i;
  uint64_t v23;
  uint64_t v24;
  const void **v25;
  size_t v26;
  std::string *v27;
  const void *v28;
  uint64_t v29;
  int v30;
  const std::string::value_type *v31;
  std::string::size_type v32;
  std::string *v33;
  __int128 v34;
  uint64_t v35;
  uint64_t **v36;
  int v37;
  uint64_t *v38;
  int v39;
  std::string::size_type v40;
  int v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  const void **v51;
  size_t v52;
  std::string *v53;
  const void *v54;
  uint64_t v55;
  int v56;
  const std::string::value_type *v57;
  std::string::size_type v58;
  std::string *v59;
  __int128 v60;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t j;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  int v74;
  uint64_t v75;
  __int128 v76;
  std::string __p;
  std::string v78;
  void *v79[2];
  std::string::size_type v80;
  uint64_t v81;
  int v82;
  uint64_t v83;
  int v84;
  uint64_t v85;
  int v86;
  uint64_t v87;
  int v88;
  uint64_t v89;
  int v90;
  uint64_t v91;
  int v92;
  uint64_t v93;
  int v94;
  uint64_t v95;
  int v96;
  std::string v97;
  __int128 v98;
  std::string::size_type v99;
  uint64_t v100;

  v100 = *MEMORY[0x1E0C80C00];
  if (!*((_QWORD *)a2 + 4))
  {
    if (atomic_load(scc_info_MessageOptions_google_2fprotobuf_2fdescriptor_2eproto))
      google::protobuf::internal::InitSCCImpl(scc_info_MessageOptions_google_2fprotobuf_2fdescriptor_2eproto);
    *((_QWORD *)a2 + 4) = &google::protobuf::_MessageOptions_default_instance_;
  }
  if (*((int *)a2 + 29) >= 1)
  {
    v7 = 0;
    v8 = 0;
    do
    {
      google::protobuf::DescriptorBuilder::CrossLinkMessage((google::protobuf::DescriptorBuilder *)this, (google::protobuf::Descriptor *)(*((_QWORD *)a2 + 7) + v7), *(const google::protobuf::DescriptorProto **)(*((_QWORD *)a3 + 8) + 8 * v8++ + 8));
      v7 += 144;
    }
    while (v8 < *((int *)a2 + 29));
  }
  if (*((int *)a2 + 30) >= 1)
  {
    v9 = 0;
    v10 = 0;
    do
    {
      google::protobuf::DescriptorBuilder::CrossLinkEnum(*((_QWORD *)a2 + 8) + v9);
      ++v10;
      v9 += 80;
    }
    while (v10 < *((int *)a2 + 30));
  }
  if (*((int *)a2 + 26) >= 1)
  {
    v11 = 0;
    v12 = 0;
    do
    {
      google::protobuf::DescriptorBuilder::CrossLinkField((google::protobuf::DescriptorBuilder *)this, (google::protobuf::FieldDescriptor *)(*((_QWORD *)a2 + 5) + v11), *(const google::protobuf::FieldDescriptorProto **)(*((_QWORD *)a3 + 5) + 8 * v12++ + 8));
      v11 += 152;
    }
    while (v12 < *((int *)a2 + 26));
  }
  if (*((int *)a2 + 32) >= 1)
  {
    v13 = 0;
    v14 = 0;
    do
    {
      google::protobuf::DescriptorBuilder::CrossLinkField((google::protobuf::DescriptorBuilder *)this, (google::protobuf::FieldDescriptor *)(*((_QWORD *)a2 + 10) + v13), *(const google::protobuf::FieldDescriptorProto **)(*((_QWORD *)a3 + 17) + 8 * v14++ + 8));
      v13 += 152;
    }
    while (v14 < *((int *)a2 + 32));
  }
  v15 = *((_DWORD *)a2 + 31);
  if (v15 >= 1)
  {
    v16 = 0;
    v17 = 8;
    do
    {
      v18 = *((_QWORD *)a2 + 9);
      if (!*(_QWORD *)(v18 + v17))
      {
        if (atomic_load(scc_info_ExtensionRangeOptions_google_2fprotobuf_2fdescriptor_2eproto))
          google::protobuf::internal::InitSCCImpl(scc_info_ExtensionRangeOptions_google_2fprotobuf_2fdescriptor_2eproto);
        *(_QWORD *)(v18 + v17) = &google::protobuf::_ExtensionRangeOptions_default_instance_;
        v15 = *((_DWORD *)a2 + 31);
      }
      ++v16;
      v17 += 16;
    }
    while (v16 < v15);
  }
  v20 = *((_DWORD *)a2 + 26);
  if (v20 >= 1)
  {
    v21 = 0;
    for (i = 0; i < v20; ++i)
    {
      v23 = *((_QWORD *)a2 + 5);
      v24 = *(_QWORD *)(v23 + v21 + 88);
      if (v24)
      {
        if (*(int *)(v24 + 24) >= 1 && *(_QWORD *)(v23 + v21 - 64) != v24)
        {
          v25 = (const void **)*((_QWORD *)a2 + 1);
          if (*((char *)v25 + 23) >= 0)
            v26 = *((unsigned __int8 *)v25 + 23);
          else
            v26 = (size_t)v25[1];
          std::string::basic_string[abi:ne180100]((uint64_t)&v78, v26 + 1);
          if ((v78.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
            v27 = &v78;
          else
            v27 = (std::string *)v78.__r_.__value_.__r.__words[0];
          if (v26)
          {
            if (*((char *)v25 + 23) >= 0)
              v28 = v25;
            else
              v28 = *v25;
            memmove(v27, v28, v26);
          }
          *(_WORD *)((char *)&v27->__r_.__value_.__l.__data_ + v26) = 46;
          v29 = *(_QWORD *)(*((_QWORD *)a2 + 5) + v21 - 152);
          v30 = *(char *)(v29 + 23);
          if (v30 >= 0)
            v31 = *(const std::string::value_type **)(*((_QWORD *)a2 + 5) + v21 - 152);
          else
            v31 = *(const std::string::value_type **)v29;
          if (v30 >= 0)
            v32 = *(unsigned __int8 *)(v29 + 23);
          else
            v32 = *(_QWORD *)(v29 + 8);
          v33 = std::string::append(&v78, v31, v32);
          v34 = *(_OWORD *)&v33->__r_.__value_.__l.__data_;
          v80 = v33->__r_.__value_.__r.__words[2];
          *(_OWORD *)v79 = v34;
          v33->__r_.__value_.__l.__size_ = 0;
          v33->__r_.__value_.__r.__words[2] = 0;
          v33->__r_.__value_.__r.__words[0] = 0;
          v35 = *(_QWORD *)(*((_QWORD *)a3 + 5) + 8 * i);
          v36 = *(uint64_t ***)(*((_QWORD *)a2 + 5) + v21 - 152);
          v37 = *((char *)v36 + 23);
          v38 = v36[1];
          if (v37 < 0)
            v36 = (uint64_t **)*v36;
          *(_QWORD *)&v98 = v36;
          v39 = v37;
          if (v37 < 0)
            v39 = (int)v38;
          DWORD2(v98) = v39;
          v40 = *(_QWORD *)v24;
          v41 = *(char *)(*(_QWORD *)v24 + 23);
          v42 = *(_QWORD *)(*(_QWORD *)v24 + 8);
          if (v41 < 0)
            v40 = **(_QWORD **)v24;
          v97.__r_.__value_.__r.__words[0] = v40;
          v43 = v41;
          if (v41 < 0)
            v43 = v42;
          LODWORD(v97.__r_.__value_.__r.__words[1]) = v43;
          v95 = 0;
          v96 = -1;
          v93 = 0;
          v94 = -1;
          v91 = 0;
          v92 = -1;
          v89 = 0;
          v90 = -1;
          v87 = 0;
          v88 = -1;
          v85 = 0;
          v86 = -1;
          v83 = 0;
          v84 = -1;
          v81 = 0;
          v82 = -1;
          *((_QWORD *)&v76 + 1) = &v83;
          *(_QWORD *)&v76 = &v85;
          google::protobuf::strings::Substitute("Fields in the same oneof must be defined consecutively. \"$0\" cannot be defined before the completion of the \"$1\" oneof definition.", (uint64_t)&v98, (uint64_t)&v97, (uint64_t)&v95, (uint64_t)&v93, (uint64_t)&v91, (uint64_t)&v89, (uint64_t)&v87, &__p, v76, (uint64_t)&v81);
          google::protobuf::DescriptorBuilder::AddError((uint64_t)this, (uint64_t)v79, v35, 2, (uint64_t)&__p);
          if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
            operator delete(__p.__r_.__value_.__l.__data_);
          if (SHIBYTE(v80) < 0)
            operator delete(v79[0]);
          if (SHIBYTE(v78.__r_.__value_.__r.__words[2]) < 0)
            operator delete(v78.__r_.__value_.__l.__data_);
          v20 = *((_DWORD *)a2 + 26);
        }
        v44 = *((_QWORD *)a2 + 6)
            + 48 * (int)(-1431655765 * ((unint64_t)(v24 - *(_QWORD *)(*(_QWORD *)(v24 + 16) + 48)) >> 4));
        ++*(_DWORD *)(v44 + 24);
      }
      v21 += 152;
    }
  }
  LODWORD(v45) = *((_DWORD *)a2 + 27);
  if ((int)v45 >= 1)
  {
    v46 = 0;
    v47 = 0;
    do
    {
      v48 = *((_QWORD *)a2 + 6);
      v49 = v48 + v46;
      v50 = *(_DWORD *)(v48 + v46 + 24);
      if (!v50)
      {
        v51 = (const void **)*((_QWORD *)a2 + 1);
        if (*((char *)v51 + 23) >= 0)
          v52 = *((unsigned __int8 *)v51 + 23);
        else
          v52 = (size_t)v51[1];
        std::string::basic_string[abi:ne180100]((uint64_t)&v97, v52 + 1);
        if ((v97.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          v53 = &v97;
        else
          v53 = (std::string *)v97.__r_.__value_.__r.__words[0];
        if (v52)
        {
          if (*((char *)v51 + 23) >= 0)
            v54 = v51;
          else
            v54 = *v51;
          memmove(v53, v54, v52);
        }
        *(_WORD *)((char *)&v53->__r_.__value_.__l.__data_ + v52) = 46;
        v55 = *(_QWORD *)(v48 + v46);
        v56 = *(char *)(v55 + 23);
        if (v56 >= 0)
          v57 = *(const std::string::value_type **)(v48 + v46);
        else
          v57 = *(const std::string::value_type **)v55;
        if (v56 >= 0)
          v58 = *(unsigned __int8 *)(v55 + 23);
        else
          v58 = *(_QWORD *)(v55 + 8);
        v59 = std::string::append(&v97, v57, v58);
        v60 = *(_OWORD *)&v59->__r_.__value_.__l.__data_;
        v99 = v59->__r_.__value_.__r.__words[2];
        v98 = v60;
        v59->__r_.__value_.__l.__size_ = 0;
        v59->__r_.__value_.__r.__words[2] = 0;
        v59->__r_.__value_.__r.__words[0] = 0;
        google::protobuf::DescriptorBuilder::AddError((uint64_t)this, (uint64_t)&v98, *(_QWORD *)(*((_QWORD *)a3 + 20) + 8 * v47 + 8), 0, "Oneof must have at least one field.");
        if (SHIBYTE(v99) < 0)
          operator delete((void *)v98);
        if (SHIBYTE(v97.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v97.__r_.__value_.__l.__data_);
        v50 = *(_DWORD *)(v49 + 24);
      }
      *(_QWORD *)(v48 + v46 + 32) = google::protobuf::DescriptorPool::Tables::AllocateBytes(this[1], 8 * v50);
      *(_DWORD *)(v49 + 24) = 0;
      if (!*(_QWORD *)(v48 + v46 + 40))
      {
        if (atomic_load(scc_info_OneofOptions_google_2fprotobuf_2fdescriptor_2eproto))
          google::protobuf::internal::InitSCCImpl(scc_info_OneofOptions_google_2fprotobuf_2fdescriptor_2eproto);
        *(_QWORD *)(v48 + v46 + 40) = &google::protobuf::_OneofOptions_default_instance_;
      }
      ++v47;
      v45 = *((int *)a2 + 27);
      v46 += 48;
    }
    while (v47 < v45);
    v20 = *((_DWORD *)a2 + 26);
  }
  if (v20 >= 1)
  {
    v62 = 0;
    do
    {
      v63 = *((_QWORD *)a2 + 5) + v62;
      v64 = *(_QWORD *)(v63 + 88);
      if (v64)
      {
        v65 = *((_QWORD *)a2 + 6)
            + 48 * (int)(-1431655765 * ((unint64_t)(v64 - *(_QWORD *)(*(_QWORD *)(v64 + 16) + 48)) >> 4));
        v66 = *(int *)(v65 + 24);
        *(_DWORD *)(v63 + 72) = v66;
        v67 = *(_QWORD *)(v65 + 32);
        *(_DWORD *)(v65 + 24) = v66 + 1;
        *(_QWORD *)(v67 + 8 * v66) = v63;
      }
      v62 += 152;
    }
    while (152 * v20 != v62);
    v68 = 0;
    for (j = 0; j < v20; ++j)
    {
      v70 = *((_QWORD *)a2 + 5) + v68;
      if (*(_BYTE *)(v70 + 65))
      {
        v71 = *(_QWORD *)(v70 + 88);
        if (!v71 || *(_DWORD *)(v71 + 24) != 1 || !*(_BYTE *)(**(_QWORD **)(v71 + 32) + 65))
        {
          google::protobuf::DescriptorBuilder::AddError((uint64_t)this, *((_QWORD *)a2 + 1), *(_QWORD *)(*((_QWORD *)a3 + 5) + 8 * j + 8), 10, "Fields with proto3_optional set must be a member of a one-field oneof");
          v20 = *((_DWORD *)a2 + 26);
        }
      }
      v68 += 152;
    }
    LODWORD(v45) = *((_DWORD *)a2 + 27);
  }
  if ((int)v45 >= 1)
  {
    v72 = 0;
    v73 = 0;
    v74 = -1;
    do
    {
      v75 = *((_QWORD *)a2 + 6) + v72;
      if (*(_DWORD *)(v75 + 24) == 1 && *(_BYTE *)(**(_QWORD **)(v75 + 32) + 65))
      {
        if (v74 == -1)
          v74 = v73;
      }
      else if (v74 != -1)
      {
        google::protobuf::DescriptorBuilder::AddError((uint64_t)this, *((_QWORD *)a2 + 1), *(_QWORD *)(*((_QWORD *)a3 + 20) + 8 * v73 + 8), 10, "Synthetic oneofs must be after all other oneofs");
        LODWORD(v45) = *((_DWORD *)a2 + 27);
      }
      ++v73;
      v72 += 48;
    }
    while (v73 < (int)v45);
    if (v74 != -1)
      LODWORD(v45) = v74;
  }
  *((_DWORD *)a2 + 28) = v45;
}

void sub_188882268(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *a25,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  if (a18 < 0)
    operator delete(__p);
  if (a30 < 0)
    operator delete(a25);
  if (a24 < 0)
    operator delete(a19);
  _Unwind_Resume(exception_object);
}

void google::protobuf::DescriptorBuilder::CrossLinkField(google::protobuf::DescriptorBuilder *this, google::protobuf::FieldDescriptor *a2, const google::protobuf::FieldDescriptorProto *a3)
{
  std::string::size_type v7;
  char *v8;
  const char *v9;
  uint64_t v10;
  uint64_t v11;
  const char *v12;
  uint64_t v13;
  unsigned int v14;
  unint64_t *v15;
  unint64_t v16;
  int v17;
  unint64_t *v18;
  unint64_t v19;
  char *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t *v23;
  char *v24;
  uint64_t v25;
  __int128 *v26;
  __int128 v27;
  int v28;
  uint64_t v29;
  char *v30;
  int v31;
  int v32;
  _BOOL4 v33;
  int8x8_t *v34;
  uint64_t v35;
  int8x8_t v36;
  int v37;
  unint64_t v38;
  uint8x8_t v39;
  uint64_t v40;
  uint64_t v41;
  AddrObjGoogle::protobuf *v42;
  uint64_t v43;
  _DWORD *v44;
  _QWORD *v45;
  int v46;
  uint64_t v47;
  std::string *v48;
  __int128 v49;
  unsigned __int8 *v50;
  int v51;
  int Symbol;
  uint64_t v53;
  uint64_t v54;
  int v55;
  uint64_t v56;
  uint64_t **v57;
  uint64_t *i;
  unint64_t v59;
  std::string::size_type *v61;
  __int128 *v62;
  __int128 v63;
  unint64_t v64;
  __int128 v65;
  unint64_t *v66;
  unint64_t v67;
  int v68;
  unint64_t *v69;
  unint64_t v70;
  uint64_t v71;
  std::string *v72;
  __int128 v73;
  uint64_t v74;
  std::string *v75;
  __int128 v76;
  uint64_t v77;
  std::string::size_type v78;
  int v79;
  uint64_t v80;
  int v81;
  uint64_t v82;
  std::string *v83;
  __int128 v84;
  void *v85;
  uint64_t *v86;
  const char *v87;
  const char *v88;
  uint64_t *v89;
  int v90;
  std::string *v91;
  std::string::size_type v92;
  int v93;
  uint64_t v94;
  int v95;
  std::string::size_type v96;
  int v97;
  uint64_t v98;
  int v99;
  uint64_t v100;
  int v101;
  std::string *v102;
  std::string::size_type v103;
  int v104;
  uint64_t v105;
  int v106;
  int v107;
  std::string *v108;
  std::string::size_type v109;
  int v110;
  uint64_t v111;
  int v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  std::string *v119;
  __int128 v120;
  unint64_t v121;
  int v122;
  const std::string::value_type *v123;
  std::string::size_type v124;
  std::string *v125;
  __int128 v126;
  std::string *v127;
  __int128 v128;
  __int128 v129;
  __int128 v130;
  __int128 v131;
  __int128 v132;
  std::string __p;
  uint64_t v134[2];
  uint64_t v135[2];
  std::string v136;
  uint64_t v137;
  int v138;
  uint64_t v139;
  int v140;
  uint64_t v141;
  int v142;
  uint64_t v143;
  int v144;
  uint64_t v145;
  int v146;
  uint64_t v147;
  int v148;
  std::string v149;
  std::string v150;
  std::string v151;
  std::string v152;
  uint64_t v153;

  v153 = *MEMORY[0x1E0C80C00];
  if (!*((_QWORD *)a2 + 15))
  {
    if (atomic_load(scc_info_FieldOptions_google_2fprotobuf_2fdescriptor_2eproto))
      google::protobuf::internal::InitSCCImpl(scc_info_FieldOptions_google_2fprotobuf_2fdescriptor_2eproto);
    *((_QWORD *)a2 + 15) = &google::protobuf::_FieldOptions_default_instance_;
  }
  if (*((_BYTE *)a2 + 67))
  {
    v7 = *((_QWORD *)a2 + 12);
    if (v7)
      goto LABEL_10;
    v8 = (char *)a2 + 40;
  }
  else
  {
    v8 = (char *)a2 + 80;
  }
  v7 = *(_QWORD *)v8;
LABEL_10:
  v9 = (const char *)*((_QWORD *)a2 + 2);
  if (v9[23] < 0)
    v9 = *(const char **)v9;
  v10 = *((_QWORD *)this + 11);
  v152.__r_.__value_.__r.__words[0] = v7;
  google::protobuf::StringPiece::StringPiece((google::protobuf::StringPiece *)&v152.__r_.__value_.__r.__words[1], v9);
  {
  }
  v12 = (const char *)*((_QWORD *)a2 + 3);
  if (v12[23] < 0)
    v12 = *(const char **)v12;
  v151.__r_.__value_.__r.__words[0] = v7;
  google::protobuf::StringPiece::StringPiece((google::protobuf::StringPiece *)&v151.__r_.__value_.__r.__words[1], v12);
  {
  }
  if ((*((_BYTE *)a3 + 16) & 2) == 0)
    goto LABEL_19;
  v28 = google::protobuf::DescriptorBuilder::LookupSymbol((uint64_t *)this, (std::string *)(*((_QWORD *)a3 + 4) & 0xFFFFFFFFFFFFFFFELL), *((_QWORD *)a2 + 1), 2, 0, 1);
  if (v28 != 1)
  {
    if (!v28)
    {
      google::protobuf::DescriptorBuilder::AddNotDefinedError((uint64_t)this, *((_QWORD *)a2 + 1), (uint64_t)a3, 3, *((_QWORD *)a3 + 4) & 0xFFFFFFFFFFFFFFFELL);
      return;
    }
    v47 = *((_QWORD *)a2 + 1);
    std::operator+<char>();
    v48 = std::string::append(&v151, "\" is not a message type.");
    v49 = *(_OWORD *)&v48->__r_.__value_.__l.__data_;
    v152.__r_.__value_.__r.__words[2] = v48->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v152.__r_.__value_.__l.__data_ = v49;
    v48->__r_.__value_.__l.__size_ = 0;
    v48->__r_.__value_.__r.__words[2] = 0;
    v48->__r_.__value_.__r.__words[0] = 0;
    google::protobuf::DescriptorBuilder::AddError((uint64_t)this, v47, (uint64_t)a3, 3, (uint64_t)&v152);
    goto LABEL_135;
  }
  v41 = v29;
  *((_QWORD *)a2 + 10) = v29;
  v42 = (AddrObjGoogle::protobuf *)*((unsigned int *)a2 + 17);
  v43 = *(unsigned int *)(v29 + 124);
  if ((int)v43 < 1)
  {
LABEL_56:
    if (*(_BYTE *)(*(_QWORD *)this + 42))
    {
      v45 = (_QWORD *)(*((_QWORD *)a3 + 4) & 0xFFFFFFFFFFFFFFFELL);
      v46 = *((char *)v45 + 23);
      if ((v46 & 0x80000000) == 0)
      {
        if (v46 != 33)
          goto LABEL_126;
LABEL_125:
        if (!memcmp(v45, "google.protobuf.bridge.MessageSet", 0x21uLL))
          goto LABEL_19;
        goto LABEL_126;
      }
      if (v45[1] == 33)
      {
        v45 = (_QWORD *)*v45;
        goto LABEL_125;
      }
    }
LABEL_126:
    v77 = *((_QWORD *)a2 + 1);
    v78 = *(_QWORD *)(v41 + 8);
    v79 = *(char *)(v78 + 23);
    v80 = *(_QWORD *)(v78 + 8);
    if (v79 < 0)
      v78 = *(_QWORD *)v78;
    v152.__r_.__value_.__r.__words[0] = v78;
    v81 = v79;
    if (v79 < 0)
      v81 = v80;
    LODWORD(v152.__r_.__value_.__r.__words[1]) = v81;
    v151.__r_.__value_.__r.__words[0] = (std::string::size_type)AddrObjGoogle::protobuf::FastInt32ToBuffer(v42, &v151.__r_.__value_.__s.__data_[12], v30);
    LODWORD(v151.__r_.__value_.__r.__words[1]) = strlen(v151.__r_.__value_.__l.__data_);
    v150.__r_.__value_.__r.__words[0] = 0;
    LODWORD(v150.__r_.__value_.__r.__words[1]) = -1;
    v149.__r_.__value_.__r.__words[0] = 0;
    LODWORD(v149.__r_.__value_.__r.__words[1]) = -1;
    v147 = 0;
    v148 = -1;
    v145 = 0;
    v146 = -1;
    v143 = 0;
    v144 = -1;
    v141 = 0;
    v142 = -1;
    v139 = 0;
    v140 = -1;
    v137 = 0;
    v138 = -1;
    *(_QWORD *)&v129 = &v141;
    *((_QWORD *)&v129 + 1) = &v139;
    google::protobuf::strings::Substitute("\"$0\" does not declare $1 as an extension number.", (uint64_t)&v152, (uint64_t)&v151, (uint64_t)&v150, (uint64_t)&v149, (uint64_t)&v147, (uint64_t)&v145, (uint64_t)&v143, &v136, v129, (uint64_t)&v137);
    google::protobuf::DescriptorBuilder::AddError((uint64_t)this, v77, (uint64_t)a3, 1, (uint64_t)&v136);
    if (SHIBYTE(v136.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v136.__r_.__value_.__l.__data_);
    goto LABEL_19;
  }
  v44 = (_DWORD *)(*(_QWORD *)(v29 + 72) + 4);
  while (*(v44 - 1) > (int)v42 || *v44 <= (int)v42)
  {
    v44 += 4;
    if (!--v43)
      goto LABEL_56;
  }
LABEL_19:
  if (*((_QWORD *)a2 + 11) && *((_DWORD *)a2 + 15) != 1)
    google::protobuf::DescriptorBuilder::AddError((uint64_t)this, *((_QWORD *)a2 + 1), (uint64_t)a3, 0, "Fields of oneofs must themselves have label LABEL_OPTIONAL.");
  v14 = *((_DWORD *)a3 + 4);
  if ((v14 & 4) == 0)
  {
    v15 = (unint64_t *)*((_QWORD *)a2 + 6);
    if (v15)
    {
      v150.__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FieldDescriptor::TypeOnceInit;
      v149.__r_.__value_.__r.__words[0] = (std::string::size_type)a2;
      v16 = atomic_load(v15);
      if (v16 != -1)
      {
        v152.__r_.__value_.__r.__words[0] = (std::string::size_type)&v150;
        v152.__r_.__value_.__l.__size_ = (std::string::size_type)&v149;
        v151.__r_.__value_.__r.__words[0] = (std::string::size_type)&v152;
        std::__call_once(v15, &v151, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
      }
    }
    v17 = *((_DWORD *)a2 + 14);
    if ((v17 & 0xFFFFFFFE) == 0xA)
      goto LABEL_32;
    v18 = (unint64_t *)*((_QWORD *)a2 + 6);
    if (v18)
    {
      v150.__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FieldDescriptor::TypeOnceInit;
      v149.__r_.__value_.__r.__words[0] = (std::string::size_type)a2;
      v19 = atomic_load(v18);
      if (v19 != -1)
      {
        v152.__r_.__value_.__r.__words[0] = (std::string::size_type)&v150;
        v152.__r_.__value_.__l.__size_ = (std::string::size_type)&v149;
        v151.__r_.__value_.__r.__words[0] = (std::string::size_type)&v152;
        std::__call_once(v18, &v151, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
      }
      v17 = *((_DWORD *)a2 + 14);
    }
    if (v17 == 14)
LABEL_32:
      google::protobuf::DescriptorBuilder::AddError((uint64_t)this, *((_QWORD *)a2 + 1), (uint64_t)a3, 2, "Field with message or enum type missing type_name.");
    goto LABEL_33;
  }
  v31 = (v14 >> 3) & 1;
  if (*((_DWORD *)a3 + 22) == 14)
    v32 = 1;
  else
    v32 = v31;
  if (*(_BYTE *)(*(_QWORD *)this + 43))
  {
    v33 = 0;
  }
  else
  {
    v50 = (unsigned __int8 *)&google::protobuf::_FieldOptions_default_instance_;
    if (*((_QWORD *)a3 + 8))
      v50 = (unsigned __int8 *)*((_QWORD *)a3 + 8);
    v33 = v50[79] != 0;
  }
  if (*(_BYTE *)(*(_QWORD *)this + 41))
    v51 = v33;
  else
    v51 = 1;
  Symbol = google::protobuf::DescriptorBuilder::LookupSymbol((uint64_t *)this, (std::string *)(*((_QWORD *)a3 + 5) & 0xFFFFFFFFFFFFFFFELL), *((_QWORD *)a2 + 1), v32, 1, v51);
  v54 = v53;
  if (Symbol)
  {
LABEL_68:
    if ((*((_BYTE *)a3 + 17) & 4) == 0)
    {
      if (Symbol == 1)
      {
        v55 = 11;
      }
      else
      {
        if (Symbol != 4)
        {
          v74 = *((_QWORD *)a2 + 1);
          std::operator+<char>();
          v75 = std::string::append(&v151, "\" is not a type.");
          v76 = *(_OWORD *)&v75->__r_.__value_.__l.__data_;
          v152.__r_.__value_.__r.__words[2] = v75->__r_.__value_.__r.__words[2];
          *(_OWORD *)&v152.__r_.__value_.__l.__data_ = v76;
          v75->__r_.__value_.__l.__size_ = 0;
          v75->__r_.__value_.__r.__words[2] = 0;
          v75->__r_.__value_.__r.__words[0] = 0;
          google::protobuf::DescriptorBuilder::AddError((uint64_t)this, v74, (uint64_t)a3, 2, (uint64_t)&v152);
          goto LABEL_135;
        }
        v55 = 14;
      }
      *((_DWORD *)a2 + 14) = v55;
    }
    v66 = (unint64_t *)*((_QWORD *)a2 + 6);
    if (v66)
    {
      v150.__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FieldDescriptor::TypeOnceInit;
      v149.__r_.__value_.__r.__words[0] = (std::string::size_type)a2;
      v67 = atomic_load(v66);
      if (v67 != -1)
      {
        v152.__r_.__value_.__r.__words[0] = (std::string::size_type)&v150;
        v152.__r_.__value_.__l.__size_ = (std::string::size_type)&v149;
        v151.__r_.__value_.__r.__words[0] = (std::string::size_type)&v152;
        std::__call_once(v66, &v151, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
      }
    }
    v68 = *((_DWORD *)a2 + 14);
    if ((v68 & 0xFFFFFFFE) == 0xA)
    {
      if (Symbol == 1)
      {
        *((_QWORD *)a2 + 13) = v54;
        if (*((_BYTE *)a2 + 64))
          google::protobuf::DescriptorBuilder::AddError((uint64_t)this, *((_QWORD *)a2 + 1), (uint64_t)a3, 4, "Messages can't have default values.");
        goto LABEL_33;
      }
      v71 = *((_QWORD *)a2 + 1);
      std::operator+<char>();
      v72 = std::string::append(&v151, "\" is not a message type.");
      v73 = *(_OWORD *)&v72->__r_.__value_.__l.__data_;
      v152.__r_.__value_.__r.__words[2] = v72->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v152.__r_.__value_.__l.__data_ = v73;
      v72->__r_.__value_.__l.__size_ = 0;
      v72->__r_.__value_.__r.__words[2] = 0;
      v72->__r_.__value_.__r.__words[0] = 0;
      google::protobuf::DescriptorBuilder::AddError((uint64_t)this, v71, (uint64_t)a3, 2, (uint64_t)&v152);
LABEL_135:
      if (SHIBYTE(v152.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v152.__r_.__value_.__l.__data_);
      if (SHIBYTE(v151.__r_.__value_.__r.__words[2]) < 0)
      {
        v85 = (void *)v151.__r_.__value_.__r.__words[0];
        goto LABEL_185;
      }
      return;
    }
    v69 = (unint64_t *)*((_QWORD *)a2 + 6);
    if (v69)
    {
      v150.__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FieldDescriptor::TypeOnceInit;
      v149.__r_.__value_.__r.__words[0] = (std::string::size_type)a2;
      v70 = atomic_load(v69);
      if (v70 != -1)
      {
        v152.__r_.__value_.__r.__words[0] = (std::string::size_type)&v150;
        v152.__r_.__value_.__l.__size_ = (std::string::size_type)&v149;
        v151.__r_.__value_.__r.__words[0] = (std::string::size_type)&v152;
        std::__call_once(v69, &v151, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
      }
      v68 = *((_DWORD *)a2 + 14);
    }
    if (v68 != 14)
    {
      google::protobuf::DescriptorBuilder::AddError((uint64_t)this, *((_QWORD *)a2 + 1), (uint64_t)a3, 2, "Field with primitive type has type_name.");
      goto LABEL_33;
    }
    if (Symbol != 4)
    {
      v82 = *((_QWORD *)a2 + 1);
      std::operator+<char>();
      v83 = std::string::append(&v151, "\" is not an enum type.");
      v84 = *(_OWORD *)&v83->__r_.__value_.__l.__data_;
      v152.__r_.__value_.__r.__words[2] = v83->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v152.__r_.__value_.__l.__data_ = v84;
      v83->__r_.__value_.__l.__size_ = 0;
      v83->__r_.__value_.__r.__words[2] = 0;
      v83->__r_.__value_.__r.__words[0] = 0;
      google::protobuf::DescriptorBuilder::AddError((uint64_t)this, v82, (uint64_t)a3, 2, (uint64_t)&v152);
      goto LABEL_135;
    }
    *((_QWORD *)a2 + 14) = v54;
    if (*(_BYTE *)(google::protobuf::FieldDescriptor::enum_type(a2) + 40))
    {
      *((_BYTE *)a2 + 64) = 0;
    }
    else if (*((_BYTE *)a2 + 64))
    {
      if (google::protobuf::io::Tokenizer::IsIdentifier(*((_QWORD *)a3 + 6) & 0xFFFFFFFFFFFFFFFELL))
      {
        v113 = *((_QWORD *)a3 + 6);
        v114 = google::protobuf::FieldDescriptor::enum_type(a2);
        if (google::protobuf::DescriptorBuilder::LookupSymbolNoPlaceholder((uint64_t)this, (std::string *)(v113 & 0xFFFFFFFFFFFFFFFELL), *(_QWORD *)(v114 + 8), 0, 1) == 5&& (v116 = v115, v117 = *(_QWORD *)(v115 + 24), v117 == google::protobuf::FieldDescriptor::enum_type(a2)))
        {
          *((_QWORD *)a2 + 18) = v116;
        }
        else
        {
          v118 = *((_QWORD *)a2 + 1);
          google::protobuf::FieldDescriptor::enum_type(a2);
          std::operator+<char>();
          v119 = std::string::append(&v149, "\" has no value named \"");
          v120 = *(_OWORD *)&v119->__r_.__value_.__l.__data_;
          v150.__r_.__value_.__r.__words[2] = v119->__r_.__value_.__r.__words[2];
          *(_OWORD *)&v150.__r_.__value_.__l.__data_ = v120;
          v119->__r_.__value_.__l.__size_ = 0;
          v119->__r_.__value_.__r.__words[2] = 0;
          v119->__r_.__value_.__r.__words[0] = 0;
          v121 = *((_QWORD *)a3 + 6) & 0xFFFFFFFFFFFFFFFELL;
          v122 = *(char *)(v121 + 23);
          if (v122 >= 0)
            v123 = (const std::string::value_type *)(*((_QWORD *)a3 + 6) & 0xFFFFFFFFFFFFFFFELL);
          else
            v123 = *(const std::string::value_type **)v121;
          if (v122 >= 0)
            v124 = *(unsigned __int8 *)(v121 + 23);
          else
            v124 = *(_QWORD *)(v121 + 8);
          v125 = std::string::append(&v150, v123, v124);
          v126 = *(_OWORD *)&v125->__r_.__value_.__l.__data_;
          v151.__r_.__value_.__r.__words[2] = v125->__r_.__value_.__r.__words[2];
          *(_OWORD *)&v151.__r_.__value_.__l.__data_ = v126;
          v125->__r_.__value_.__l.__size_ = 0;
          v125->__r_.__value_.__r.__words[2] = 0;
          v125->__r_.__value_.__r.__words[0] = 0;
          v127 = std::string::append(&v151, "\".");
          v128 = *(_OWORD *)&v127->__r_.__value_.__l.__data_;
          v152.__r_.__value_.__r.__words[2] = v127->__r_.__value_.__r.__words[2];
          *(_OWORD *)&v152.__r_.__value_.__l.__data_ = v128;
          v127->__r_.__value_.__l.__size_ = 0;
          v127->__r_.__value_.__r.__words[2] = 0;
          v127->__r_.__value_.__r.__words[0] = 0;
          google::protobuf::DescriptorBuilder::AddError((uint64_t)this, v118, (uint64_t)a3, 4, (uint64_t)&v152);
          if (SHIBYTE(v152.__r_.__value_.__r.__words[2]) < 0)
            operator delete(v152.__r_.__value_.__l.__data_);
          if (SHIBYTE(v151.__r_.__value_.__r.__words[2]) < 0)
            operator delete(v151.__r_.__value_.__l.__data_);
          if (SHIBYTE(v150.__r_.__value_.__r.__words[2]) < 0)
            operator delete(v150.__r_.__value_.__l.__data_);
          if (SHIBYTE(v149.__r_.__value_.__r.__words[2]) < 0)
            operator delete(v149.__r_.__value_.__l.__data_);
        }
      }
      else
      {
        google::protobuf::DescriptorBuilder::AddError((uint64_t)this, *((_QWORD *)a2 + 1), (uint64_t)a3, 4, "Default value for an enum field must be an identifier.");
      }
LABEL_33:
      if ((google::protobuf::FileDescriptorTables::AddFieldByNumber(*((google::protobuf::FileDescriptorTables **)this + 11), a2) & 1) == 0)
      {
        v34 = (int8x8_t *)*((_QWORD *)this + 11);
        v35 = *((_QWORD *)a2 + 10);
        v36 = v34[20];
        if (v36)
        {
          v37 = *((_DWORD *)a2 + 17);
          v38 = (16777619 * v37) ^ (16777499 * v35);
          v39 = (uint8x8_t)vcnt_s8(v36);
          v39.i16[0] = vaddlv_u8(v39);
          if (v39.u32[0] > 1uLL)
          {
            v40 = (16777619 * v37) ^ (16777499 * v35);
            if (v38 >= *(_QWORD *)&v36)
              v40 = v38 % *(_QWORD *)&v36;
          }
          else
          {
            v40 = v38 & (*(_QWORD *)&v36 - 1);
          }
          v57 = *(uint64_t ***)(*(_QWORD *)&v34[19] + 8 * v40);
          if (v57)
          {
            for (i = *v57; i; i = (uint64_t *)*i)
            {
              v59 = i[1];
              if (v38 == v59)
              {
                if (i[2] == v35 && *((_DWORD *)i + 6) == v37)
                {
                  v61 = (std::string::size_type *)i[4];
                  if (!v35)
                  {
LABEL_161:
                    std::string::basic_string[abi:ne180100]<0>(&v136, "unknown");
LABEL_162:
                    v100 = *((_QWORD *)a2 + 1);
                    if (*((_BYTE *)a2 + 67))
                    {
                      v152.__r_.__value_.__r.__words[0] = (std::string::size_type)AddrObjGoogle::protobuf::FastInt32ToBuffer((AddrObjGoogle::protobuf *)*((unsigned int *)a2 + 17), &v152.__r_.__value_.__s.__data_[12], v20);
                      LODWORD(v152.__r_.__value_.__r.__words[1]) = strlen(v152.__r_.__value_.__l.__data_);
                      v101 = HIBYTE(v136.__r_.__value_.__r.__words[2]);
                      v102 = &v136;
                      if ((v136.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
                        v102 = (std::string *)v136.__r_.__value_.__r.__words[0];
                      v151.__r_.__value_.__r.__words[0] = (std::string::size_type)v102;
                      if ((v136.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
                        v101 = v136.__r_.__value_.__r.__words[1];
                      LODWORD(v151.__r_.__value_.__r.__words[1]) = v101;
                      v103 = v61[1];
                      v104 = *(char *)(v103 + 23);
                      v105 = *(_QWORD *)(v103 + 8);
                      if (v104 < 0)
                        v103 = *(_QWORD *)v103;
                      v150.__r_.__value_.__r.__words[0] = v103;
                      v106 = v104;
                      if (v104 < 0)
                        v106 = v105;
                      LODWORD(v150.__r_.__value_.__r.__words[1]) = v106;
                      v149.__r_.__value_.__r.__words[0] = 0;
                      LODWORD(v149.__r_.__value_.__r.__words[1]) = -1;
                      v147 = 0;
                      v148 = -1;
                      v145 = 0;
                      v146 = -1;
                      v143 = 0;
                      v144 = -1;
                      v141 = 0;
                      v142 = -1;
                      v139 = 0;
                      v140 = -1;
                      v137 = 0;
                      v138 = -1;
                      *(_QWORD *)&v131 = &v141;
                      *((_QWORD *)&v131 + 1) = &v139;
                      google::protobuf::strings::Substitute("Extension number $0 has already been used in \"$1\" by extension \"$2\".", (uint64_t)&v152, (uint64_t)&v151, (uint64_t)&v150, (uint64_t)&v149, (uint64_t)&v147, (uint64_t)&v145, (uint64_t)&v143, &__p, v131, (uint64_t)&v137);
                      google::protobuf::DescriptorBuilder::AddError((uint64_t)this, v100, (uint64_t)a3, 1, (uint64_t)&__p);
                    }
                    else
                    {
                      v152.__r_.__value_.__r.__words[0] = (std::string::size_type)AddrObjGoogle::protobuf::FastInt32ToBuffer((AddrObjGoogle::protobuf *)*((unsigned int *)a2 + 17), &v152.__r_.__value_.__s.__data_[12], v20);
                      LODWORD(v152.__r_.__value_.__r.__words[1]) = strlen(v152.__r_.__value_.__l.__data_);
                      v107 = HIBYTE(v136.__r_.__value_.__r.__words[2]);
                      v108 = &v136;
                      if ((v136.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
                        v108 = (std::string *)v136.__r_.__value_.__r.__words[0];
                      v151.__r_.__value_.__r.__words[0] = (std::string::size_type)v108;
                      if ((v136.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
                        v107 = v136.__r_.__value_.__r.__words[1];
                      LODWORD(v151.__r_.__value_.__r.__words[1]) = v107;
                      v109 = *v61;
                      v110 = *(char *)(*v61 + 23);
                      v111 = *(_QWORD *)(*v61 + 8);
                      if (v110 < 0)
                        v109 = *(_QWORD *)*v61;
                      v150.__r_.__value_.__r.__words[0] = v109;
                      v112 = v110;
                      if (v110 < 0)
                        v112 = v111;
                      LODWORD(v150.__r_.__value_.__r.__words[1]) = v112;
                      v149.__r_.__value_.__r.__words[0] = 0;
                      LODWORD(v149.__r_.__value_.__r.__words[1]) = -1;
                      v147 = 0;
                      v148 = -1;
                      v145 = 0;
                      v146 = -1;
                      v143 = 0;
                      v144 = -1;
                      v141 = 0;
                      v142 = -1;
                      v139 = 0;
                      v140 = -1;
                      v137 = 0;
                      v138 = -1;
                      *(_QWORD *)&v132 = &v141;
                      *((_QWORD *)&v132 + 1) = &v139;
                      google::protobuf::strings::Substitute("Field number $0 has already been used in \"$1\" by field \"$2\".", (uint64_t)&v152, (uint64_t)&v151, (uint64_t)&v150, (uint64_t)&v149, (uint64_t)&v147, (uint64_t)&v145, (uint64_t)&v143, &__p, v132, (uint64_t)&v137);
                      google::protobuf::DescriptorBuilder::AddError((uint64_t)this, v100, (uint64_t)a3, 1, (uint64_t)&__p);
                    }
LABEL_181:
                    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
                      operator delete(__p.__r_.__value_.__l.__data_);
                    if (SHIBYTE(v136.__r_.__value_.__r.__words[2]) < 0)
                    {
                      v85 = (void *)v136.__r_.__value_.__r.__words[0];
LABEL_185:
                      operator delete(v85);
                    }
                    return;
                  }
LABEL_96:
                  v62 = *(__int128 **)(v35 + 8);
                  if (*((char *)v62 + 23) < 0)
                  {
                    std::string::__init_copy_ctor_external(&v136, *(const std::string::value_type **)v62, *((_QWORD *)v62 + 1));
                  }
                  else
                  {
                    v63 = *v62;
                    v136.__r_.__value_.__r.__words[2] = *((_QWORD *)v62 + 2);
                    *(_OWORD *)&v136.__r_.__value_.__l.__data_ = v63;
                  }
                  goto LABEL_162;
                }
              }
              else
              {
                if (v39.u32[0] > 1uLL)
                {
                  if (v59 >= *(_QWORD *)&v36)
                    v59 %= *(_QWORD *)&v36;
                }
                else
                {
                  v59 &= *(_QWORD *)&v36 - 1;
                }
                if (v59 != v40)
                  break;
              }
            }
          }
        }
        v61 = 0;
        if (!v35)
          goto LABEL_161;
        goto LABEL_96;
      }
      if (!*((_BYTE *)a2 + 67)
        || (google::protobuf::DescriptorPool::Tables::AddExtension(*((google::protobuf::DescriptorPool::Tables **)this + 1), a2) & 1) != 0)
      {
        return;
      }
      v21 = *((_QWORD *)this + 1);
      v22 = *((_QWORD *)a2 + 10);
      v23 = std::__tree<std::__value_type<std::pair<google::protobuf::Descriptor const*,int>,google::protobuf::FieldDescriptor const*>,std::__map_value_compare<std::pair<google::protobuf::Descriptor const*,int>,std::__value_type<std::pair<google::protobuf::Descriptor const*,int>,google::protobuf::FieldDescriptor const*>,std::less<std::pair<google::protobuf::Descriptor const*,int>>,true>,std::allocator<std::__value_type<std::pair<google::protobuf::Descriptor const*,int>,google::protobuf::FieldDescriptor const*>>>::find<std::pair<google::protobuf::Descriptor const*,int>>(v21 + 384, v22, *((_DWORD *)a2 + 17));
      if ((uint64_t *)(v21 + 392) == v23)
      {
        v25 = 0;
        if (v22)
        {
LABEL_38:
          v26 = *(__int128 **)(v22 + 8);
          if (*((char *)v26 + 23) < 0)
          {
            std::string::__init_copy_ctor_external(&v136, *(const std::string::value_type **)v26, *((_QWORD *)v26 + 1));
          }
          else
          {
            v27 = *v26;
            v136.__r_.__value_.__r.__words[2] = *((_QWORD *)v26 + 2);
            *(_OWORD *)&v136.__r_.__value_.__l.__data_ = v27;
          }
          goto LABEL_147;
        }
      }
      else
      {
        v25 = v23[6];
        if (v22)
          goto LABEL_38;
      }
      std::string::basic_string[abi:ne180100]<0>(&v136, "unknown");
LABEL_147:
      v152.__r_.__value_.__r.__words[0] = (std::string::size_type)AddrObjGoogle::protobuf::FastInt32ToBuffer((AddrObjGoogle::protobuf *)*((unsigned int *)a2 + 17), &v152.__r_.__value_.__s.__data_[12], v24);
      LODWORD(v152.__r_.__value_.__r.__words[1]) = strlen(v152.__r_.__value_.__l.__data_);
      v90 = HIBYTE(v136.__r_.__value_.__r.__words[2]);
      v91 = &v136;
      if ((v136.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
        v91 = (std::string *)v136.__r_.__value_.__r.__words[0];
      v151.__r_.__value_.__r.__words[0] = (std::string::size_type)v91;
      if ((v136.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
        v90 = v136.__r_.__value_.__r.__words[1];
      LODWORD(v151.__r_.__value_.__r.__words[1]) = v90;
      v92 = *(_QWORD *)(v25 + 8);
      v93 = *(char *)(v92 + 23);
      v94 = *(_QWORD *)(v92 + 8);
      if (v93 < 0)
        v92 = *(_QWORD *)v92;
      v150.__r_.__value_.__r.__words[0] = v92;
      v95 = v93;
      if (v93 < 0)
        v95 = v94;
      LODWORD(v150.__r_.__value_.__r.__words[1]) = v95;
      v96 = **(_QWORD **)(v25 + 40);
      v97 = *(char *)(v96 + 23);
      v98 = *(_QWORD *)(v96 + 8);
      if (v97 < 0)
        v96 = *(_QWORD *)v96;
      v149.__r_.__value_.__r.__words[0] = v96;
      v99 = v97;
      if (v97 < 0)
        v99 = v98;
      LODWORD(v149.__r_.__value_.__r.__words[1]) = v99;
      v147 = 0;
      v148 = -1;
      v145 = 0;
      v146 = -1;
      v143 = 0;
      v144 = -1;
      v141 = 0;
      v142 = -1;
      v139 = 0;
      v140 = -1;
      v137 = 0;
      v138 = -1;
      *(_QWORD *)&v130 = &v141;
      *((_QWORD *)&v130 + 1) = &v139;
      google::protobuf::strings::Substitute("Extension number $0 has already been used in \"$1\" by extension \"$2\" defined in $3.", (uint64_t)&v152, (uint64_t)&v151, (uint64_t)&v150, (uint64_t)&v149, (uint64_t)&v147, (uint64_t)&v145, (uint64_t)&v143, &__p, v130, (uint64_t)&v137);
      google::protobuf::DescriptorBuilder::AddWarning((uint64_t)this, *((_QWORD *)a2 + 1), (uint64_t)a3, 1, (uint64_t)&__p);
      goto LABEL_181;
    }
    if (*(int *)(google::protobuf::FieldDescriptor::enum_type(a2) + 44) >= 1)
      *((_QWORD *)a2 + 18) = *(_QWORD *)(google::protobuf::FieldDescriptor::enum_type(a2) + 48);
    goto LABEL_33;
  }
  if ((v51 & 1) != 0)
  {
    if (v33)
    {
      std::string::basic_string[abi:ne180100]<0>(&v152, "google.protobuf.Empty");
      Symbol = google::protobuf::DescriptorBuilder::FindSymbol((uint64_t)this, &v152, 1);
      v54 = v56;
      if (SHIBYTE(v152.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v152.__r_.__value_.__l.__data_);
    }
    if (!Symbol)
    {
      google::protobuf::DescriptorBuilder::AddNotDefinedError((uint64_t)this, *((_QWORD *)a2 + 1), (uint64_t)a3, 2, *((_QWORD *)a3 + 5) & 0xFFFFFFFFFFFFFFFELL);
      return;
    }
    goto LABEL_68;
  }
  v64 = *((_QWORD *)a3 + 5) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v64 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(&v152, *(const std::string::value_type **)v64, *(_QWORD *)(v64 + 8));
  }
  else
  {
    v65 = *(_OWORD *)v64;
    v152.__r_.__value_.__r.__words[2] = *(_QWORD *)(v64 + 16);
    *(_OWORD *)&v152.__r_.__value_.__l.__data_ = v65;
  }
  *((_QWORD *)a2 + 6) = google::protobuf::DescriptorPool::Tables::AllocateOnceDynamic(*((google::protobuf::DescriptorPool::Tables **)this
                                                                                      + 1));
  v86 = (uint64_t *)*((_QWORD *)this + 1);
  google::protobuf::StringPiece::StringPiece<std::allocator<char>>(v135, (uint64_t *)&v152, v87);
  *((_QWORD *)a2 + 16) = google::protobuf::DescriptorPool::Tables::AllocateString(v86, v135[0], v135[1]);
  if ((*((_BYTE *)a3 + 16) & 8) != 0)
  {
    v89 = (uint64_t *)*((_QWORD *)this + 1);
    google::protobuf::StringPiece::StringPiece<std::allocator<char>>(v134, (uint64_t *)(*((_QWORD *)a3 + 6) & 0xFFFFFFFFFFFFFFFELL), v88);
    *((_QWORD *)a2 + 17) = google::protobuf::DescriptorPool::Tables::AllocateString(v89, v134[0], v134[1]);
  }
  google::protobuf::FileDescriptorTables::AddFieldByNumber(*((google::protobuf::FileDescriptorTables **)this + 11), a2);
  if (*((_BYTE *)a2 + 67))
    google::protobuf::DescriptorPool::Tables::AddExtension(*((google::protobuf::DescriptorPool::Tables **)this + 1), a2);
  if (SHIBYTE(v152.__r_.__value_.__r.__words[2]) < 0)
  {
    v85 = (void *)v152.__r_.__value_.__r.__words[0];
    goto LABEL_185;
  }
}

void sub_188883294(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,void *__p,uint64_t a60,int a61,__int16 a62,char a63)
{
  char a64;
  uint64_t v64;

  if (*(char *)(v64 - 121) < 0)
    operator delete(*(void **)(v64 - 144));
  if (*(char *)(v64 - 169) < 0)
    operator delete(*(void **)(v64 - 192));
  if (*(char *)(v64 - 217) < 0)
    operator delete(*(void **)(v64 - 240));
  if (a64 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void google::protobuf::DescriptorBuilder::CrossLinkEnum(uint64_t a1)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if (!*(_QWORD *)(a1 + 32))
  {
    if (atomic_load(scc_info_EnumOptions_google_2fprotobuf_2fdescriptor_2eproto))
      google::protobuf::internal::InitSCCImpl(scc_info_EnumOptions_google_2fprotobuf_2fdescriptor_2eproto);
    *(_QWORD *)(a1 + 32) = &google::protobuf::_EnumOptions_default_instance_;
  }
  v3 = *(_DWORD *)(a1 + 44);
  if (v3 >= 1)
  {
    v4 = 0;
    v5 = 32;
    do
    {
      v6 = *(_QWORD *)(a1 + 48);
      if (!*(_QWORD *)(v6 + v5))
      {
        if (atomic_load(scc_info_EnumValueOptions_google_2fprotobuf_2fdescriptor_2eproto))
          google::protobuf::internal::InitSCCImpl(scc_info_EnumValueOptions_google_2fprotobuf_2fdescriptor_2eproto);
        *(_QWORD *)(v6 + v5) = &google::protobuf::_EnumValueOptions_default_instance_;
        v3 = *(_DWORD *)(a1 + 44);
      }
      ++v4;
      v5 += 40;
    }
    while (v4 < v3);
  }
}

_QWORD *google::protobuf::internal::LazyDescriptor::SetLazy(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  _QWORD *result;
  int v10;
  const char *v11;
  int v12;
  std::string __p;

  if (*a1)
  {
    v10 = 3;
    v11 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/descriptor.cc";
    v12 = 7417;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "CHECK failed: !descriptor_: ");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v10);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
  if (a1[3])
  {
    v10 = 3;
    v11 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/descriptor.cc";
    v12 = 7418;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "CHECK failed: !file_: ");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v10);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
  if (a1[1])
  {
    v10 = 3;
    v11 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/descriptor.cc";
    v12 = 7419;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "CHECK failed: !name_: ");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v10);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
  if (a1[2]
    && (v10 = 3,
        v11 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/descriptor.cc",
        v12 = 7420,
        memset(&__p, 0, sizeof(__p)),
        std::string::append(&__p, "CHECK failed: !once_: "),
        google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v10),
        SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0))
  {
    operator delete(__p.__r_.__value_.__l.__data_);
    if (a4)
    {
LABEL_13:
      v8 = *(_QWORD *)(a4 + 16);
      if (v8)
        goto LABEL_19;
    }
  }
  else if (a4)
  {
    goto LABEL_13;
  }
  v10 = 3;
  v11 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/descriptor.cc";
  v12 = 7421;
  memset(&__p, 0, sizeof(__p));
  std::string::append(&__p, "CHECK failed: file && file->pool_: ");
  google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v10);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  v8 = *(_QWORD *)(a4 + 16);
LABEL_19:
  if (!*(_BYTE *)(v8 + 41))
  {
    v10 = 3;
    v11 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/descriptor.cc";
    v12 = 7422;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "CHECK failed: file->pool_->lazily_build_dependencies_: ");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v10);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
  if (*(_BYTE *)(a4 + 65))
  {
    v10 = 3;
    v11 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/descriptor.cc";
    v12 = 7423;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "CHECK failed: !file->finished_building_: ");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v10);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
  a1[3] = a4;
  a1[1] = google::protobuf::DescriptorPool::Tables::AllocateString(*(uint64_t **)(*(_QWORD *)(a4 + 16) + 32), a2, a3);
  result = google::protobuf::DescriptorPool::Tables::AllocateOnceDynamic(*(google::protobuf::DescriptorPool::Tables **)(*(_QWORD *)(a4 + 16) + 32));
  a1[2] = result;
  return result;
}

void sub_188883710(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void google::protobuf::internal::LazyDescriptor::Set(google::protobuf::internal::LazyDescriptor *this, const google::protobuf::Descriptor *a2)
{
  int v4;
  const char *v5;
  int v6;
  std::string __p;

  if (*((_QWORD *)this + 1))
  {
    v4 = 3;
    v5 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/descriptor.cc";
    v6 = 7408;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "CHECK failed: !name_: ");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v4);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
  if (*((_QWORD *)this + 2))
  {
    v4 = 3;
    v5 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/descriptor.cc";
    v6 = 7409;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "CHECK failed: !once_: ");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v4);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
  if (*((_QWORD *)this + 3))
  {
    v4 = 3;
    v5 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/descriptor.cc";
    v6 = 7410;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "CHECK failed: !file_: ");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v4);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
  *(_QWORD *)this = a2;
}

void sub_18888388C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void google::protobuf::DescriptorBuilder::ValidateMessageOptions(google::protobuf::DescriptorBuilder *this, google::protobuf::Descriptor *a2, const google::protobuf::DescriptorProto *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  std::string __p;
  uint64_t v22;
  int v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  int v39;
  const char *v40;
  int v41;
  _BYTE v42[36];
  uint64_t v43;

  v43 = *MEMORY[0x1E0C80C00];
  if (*((int *)a2 + 26) >= 1)
  {
    v6 = 0;
    v7 = 0;
    do
    {
      google::protobuf::DescriptorBuilder::ValidateFieldOptions(this, (google::protobuf::FieldDescriptor *)(*((_QWORD *)a2 + 5) + v6), *(const google::protobuf::FieldDescriptorProto **)(*((_QWORD *)a3 + 5) + 8 * v7++ + 8));
      v6 += 152;
    }
    while (v7 < *((int *)a2 + 26));
  }
  if (*((int *)a2 + 29) >= 1)
  {
    v8 = 0;
    v9 = 0;
    do
    {
      google::protobuf::DescriptorBuilder::ValidateMessageOptions(this, (google::protobuf::Descriptor *)(*((_QWORD *)a2 + 7) + v8), *(const google::protobuf::DescriptorProto **)(*((_QWORD *)a3 + 8) + 8 * v9++ + 8));
      v8 += 144;
    }
    while (v9 < *((int *)a2 + 29));
  }
  if (*((int *)a2 + 30) >= 1)
  {
    v10 = 0;
    v11 = 0;
    do
    {
      google::protobuf::DescriptorBuilder::ValidateEnumOptions((uint64_t)this, *((_QWORD *)a2 + 8) + v10, *(_QWORD *)(*((_QWORD *)a3 + 11) + 8 * v11++ + 8));
      v10 += 80;
    }
    while (v11 < *((int *)a2 + 30));
  }
  if (*((int *)a2 + 32) >= 1)
  {
    v12 = 0;
    v13 = 0;
    do
    {
      google::protobuf::DescriptorBuilder::ValidateFieldOptions(this, (google::protobuf::FieldDescriptor *)(*((_QWORD *)a2 + 10) + v12), *(const google::protobuf::FieldDescriptorProto **)(*((_QWORD *)a3 + 17) + 8 * v13++ + 8));
      v12 += 152;
    }
    while (v13 < *((int *)a2 + 32));
  }
  if (*(_BYTE *)(*((_QWORD *)a2 + 4) + 72))
    v14 = 0x7FFFFFFFLL;
  else
    v14 = 0x1FFFFFFFLL;
  v15 = *((_DWORD *)a2 + 31);
  if (v15 >= 1)
  {
    v16 = 0;
    v17 = 4;
    do
    {
      if ((uint64_t)(v14 + 1) < *(int *)(*((_QWORD *)a2 + 9) + v17))
      {
        v18 = *((_QWORD *)a2 + 1);
        v19 = *(_QWORD *)(*((_QWORD *)a3 + 14) + 8 * v16 + 8);
        v40 = AddrObjGoogle::protobuf::FastInt64ToBuffer(v14, v42, (char *)a3);
        v41 = strlen(v40);
        v38 = 0;
        v39 = -1;
        v36 = 0;
        v37 = -1;
        v34 = 0;
        v35 = -1;
        v32 = 0;
        v33 = -1;
        v30 = 0;
        v31 = -1;
        v28 = 0;
        v29 = -1;
        v26 = 0;
        v27 = -1;
        v24 = 0;
        v25 = -1;
        v22 = 0;
        v23 = -1;
        *((_QWORD *)&v20 + 1) = &v24;
        *(_QWORD *)&v20 = &v26;
        google::protobuf::strings::Substitute("Extension numbers cannot be greater than $0.", (uint64_t)&v40, (uint64_t)&v38, (uint64_t)&v36, (uint64_t)&v34, (uint64_t)&v32, (uint64_t)&v30, (uint64_t)&v28, &__p, v20, (uint64_t)&v22);
        google::protobuf::DescriptorBuilder::AddError((uint64_t)this, v18, v19, 1, (uint64_t)&__p);
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
          operator delete(__p.__r_.__value_.__l.__data_);
        v15 = *((_DWORD *)a2 + 31);
      }
      ++v16;
      v17 += 16;
    }
    while (v16 < v15);
  }
}

void sub_188883B84(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  _Unwind_Resume(exception_object);
}

void google::protobuf::DescriptorBuilder::ValidateEnumOptions(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  int *v11;
  int v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t *v15;
  uint64_t *v16;
  int v17;
  uint64_t *v18;
  const std::string *v19;
  uint64_t **v20;
  std::string *v21;
  __int128 v22;
  uint64_t **v23;
  uint64_t **v24;
  const std::string::value_type *v25;
  uint64_t *v26;
  int v27;
  const std::string::value_type *v28;
  std::string::size_type v29;
  std::string *v30;
  __int128 v31;
  std::string *v32;
  __int128 v33;
  char *v34;
  int v35;
  std::string v36;
  std::string v37;
  std::string v38;
  void *__p[2];
  std::string::size_type v40;
  uint64_t *v41;
  _QWORD v42[2];
  int *v43;

  v6 = *(_QWORD *)(a2 + 32);
  if ((*(_BYTE *)(v6 + 40) & 1) == 0 || !*(_BYTE *)(v6 + 72))
  {
    v42[1] = 0;
    v41 = v42;
    v42[0] = 0;
    if (*(int *)(a2 + 44) < 1)
    {
      v34 = 0;
    }
    else
    {
      v7 = 0;
      do
      {
        v8 = *(_QWORD *)(a2 + 48);
        v9 = v8 + 40 * v7;
        v12 = *(_DWORD *)(v9 + 16);
        v11 = (int *)(v9 + 16);
        v10 = v12;
        v13 = v42[0];
        if (!v42[0])
          goto LABEL_14;
        v14 = v42;
        do
        {
          v15 = (uint64_t *)v13;
          v16 = v14;
          v17 = *(_DWORD *)(v13 + 32);
          v18 = (uint64_t *)(v13 + 8);
          if (v17 >= v10)
          {
            v18 = v15;
            v14 = v15;
          }
          v13 = *v18;
        }
        while (v13);
        if (v14 == v42)
          goto LABEL_14;
        if (v17 < v10)
          v15 = v16;
        if (v10 >= *((_DWORD *)v15 + 8))
        {
          std::operator+<char>();
          v21 = std::string::append(&v36, "\" uses the same enum value as \"");
          v22 = *(_OWORD *)&v21->__r_.__value_.__l.__data_;
          v37.__r_.__value_.__r.__words[2] = v21->__r_.__value_.__r.__words[2];
          *(_OWORD *)&v37.__r_.__value_.__l.__data_ = v22;
          v21->__r_.__value_.__l.__size_ = 0;
          v21->__r_.__value_.__r.__words[2] = 0;
          v21->__r_.__value_.__r.__words[0] = 0;
          v35 = *v11;
          v43 = &v35;
          v23 = std::__tree<std::__value_type<int,std::string>,std::__map_value_compare<int,std::__value_type<int,std::string>,std::less<int>,true>,std::allocator<std::__value_type<int,std::string>>>::__emplace_unique_key_args<int,std::piecewise_construct_t const&,std::tuple<int &&>,std::tuple<>>(&v41, &v35, (uint64_t)&std::piecewise_construct, &v43);
          v26 = v23[5];
          v24 = v23 + 5;
          v25 = (const std::string::value_type *)v26;
          v27 = *((char *)v24 + 23);
          if (v27 >= 0)
            v28 = (const std::string::value_type *)v24;
          else
            v28 = v25;
          if (v27 >= 0)
            v29 = *((unsigned __int8 *)v24 + 23);
          else
            v29 = (std::string::size_type)v24[1];
          v30 = std::string::append(&v37, v28, v29);
          v31 = *(_OWORD *)&v30->__r_.__value_.__l.__data_;
          v38.__r_.__value_.__r.__words[2] = v30->__r_.__value_.__r.__words[2];
          *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v31;
          v30->__r_.__value_.__l.__size_ = 0;
          v30->__r_.__value_.__r.__words[2] = 0;
          v30->__r_.__value_.__r.__words[0] = 0;
          v32 = std::string::append(&v38, "\". If this is intended, set 'option allow_alias = true;' to the enum definition.");
          v33 = *(_OWORD *)&v32->__r_.__value_.__l.__data_;
          v40 = v32->__r_.__value_.__r.__words[2];
          *(_OWORD *)__p = v33;
          v32->__r_.__value_.__l.__size_ = 0;
          v32->__r_.__value_.__r.__words[2] = 0;
          v32->__r_.__value_.__r.__words[0] = 0;
          if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
            operator delete(v38.__r_.__value_.__l.__data_);
          if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
            operator delete(v37.__r_.__value_.__l.__data_);
          if (SHIBYTE(v36.__r_.__value_.__r.__words[2]) < 0)
            operator delete(v36.__r_.__value_.__l.__data_);
          if (!*(_BYTE *)(*(_QWORD *)(a2 + 32) + 72))
            google::protobuf::DescriptorBuilder::AddError(a1, *(_QWORD *)(a2 + 8), *(_QWORD *)(*(_QWORD *)(a3 + 40) + 8 * v7 + 8), 1, (uint64_t)__p);
          if (SHIBYTE(v40) < 0)
            operator delete(__p[0]);
        }
        else
        {
LABEL_14:
          v19 = *(const std::string **)(v8 + 40 * v7 + 8);
          LODWORD(v38.__r_.__value_.__l.__data_) = v10;
          __p[0] = &v38;
          v20 = std::__tree<std::__value_type<int,std::string>,std::__map_value_compare<int,std::__value_type<int,std::string>,std::less<int>,true>,std::allocator<std::__value_type<int,std::string>>>::__emplace_unique_key_args<int,std::piecewise_construct_t const&,std::tuple<int &&>,std::tuple<>>(&v41, (int *)&v38, (uint64_t)&std::piecewise_construct, (_DWORD **)__p);
          std::string::operator=((std::string *)(v20 + 5), v19);
        }
        ++v7;
      }
      while (v7 < *(int *)(a2 + 44));
      v34 = (char *)v42[0];
    }
    std::__tree<std::__value_type<int,std::string>,std::__map_value_compare<int,std::__value_type<int,std::string>,std::less<int>,true>,std::allocator<std::__value_type<int,std::string>>>::destroy((uint64_t)&v41, v34);
  }
}

void sub_188883E28(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,void *__p,uint64_t a31,int a32,__int16 a33,char a34,char a35,char a36,char *a37)
{
  if (a35 < 0)
    operator delete(__p);
  std::__tree<std::__value_type<int,std::string>,std::__map_value_compare<int,std::__value_type<int,std::string>,std::less<int>,true>,std::allocator<std::__value_type<int,std::string>>>::destroy((uint64_t)&a36, a37);
  _Unwind_Resume(a1);
}

void google::protobuf::DescriptorBuilder::ValidateFieldOptions(google::protobuf::DescriptorBuilder *this, google::protobuf::FieldDescriptor *a2, const google::protobuf::FieldDescriptorProto *a3)
{
  unint64_t *v6;
  unint64_t v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  void *v11;
  unint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  char *v16;
  google::protobuf::DescriptorBuilder *v17;
  const google::protobuf::FieldDescriptorProto *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  unint64_t *v27;
  unint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  unsigned __int8 *v31;
  std::string *v32;
  BOOL v33;
  _DWORD *v34;
  google::protobuf::FieldDescriptor *v35;
  google::protobuf::FieldDescriptor *v36;
  unsigned __int16 *v37;
  int v38;
  int v39;
  int v40;
  BOOL v41;
  char *v42;
  unsigned int v43;
  unint64_t *v44;
  unint64_t v45;
  unsigned int v46;
  uint64_t v47;
  unsigned __int8 *v48;
  uint64_t v49;
  uint64_t v50;
  std::string::size_type size;
  int v52;
  std::string *p_p;
  uint64_t v54;
  int v55;
  int v56;
  int v57;
  _BOOL4 v58;
  unsigned int v60;
  google::protobuf::FieldDescriptor *v61;
  std::string v62;
  std::string __p;
  google::protobuf::FieldDescriptor *v64;
  uint64_t (*v65)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);

  if (*(_BYTE *)(*(_QWORD *)this + 41) && (!a2 || !google::protobuf::FieldDescriptor::message_type(a2)))
    return;
  if (*(_BYTE *)(*((_QWORD *)a2 + 15) + 77))
  {
    v6 = (unint64_t *)*((_QWORD *)a2 + 6);
    if (v6)
    {
      v64 = a2;
      v65 = google::protobuf::FieldDescriptor::TypeOnceInit;
      v7 = atomic_load(v6);
      if (v7 != -1)
      {
        __p.__r_.__value_.__r.__words[0] = (std::string::size_type)&v65;
        __p.__r_.__value_.__l.__size_ = (std::string::size_type)&v64;
        v62.__r_.__value_.__r.__words[0] = (std::string::size_type)&__p;
        std::__call_once(v6, &v62, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
      }
    }
    if (*((_DWORD *)a2 + 14) != 11)
      google::protobuf::DescriptorBuilder::AddError((uint64_t)this, *((_QWORD *)a2 + 1), (uint64_t)a3, 2, "[lazy = true] can only be specified for submessage fields.");
  }
  if (*(_BYTE *)(*((_QWORD *)a2 + 15) + 76))
  {
    if (*((_DWORD *)a2 + 15) != 3)
      goto LABEL_16;
    v8 = (unint64_t *)*((_QWORD *)a2 + 6);
    if (v8)
    {
      v64 = a2;
      v65 = google::protobuf::FieldDescriptor::TypeOnceInit;
      v9 = atomic_load(v8);
      if (v9 != -1)
      {
        __p.__r_.__value_.__r.__words[0] = (std::string::size_type)&v65;
        __p.__r_.__value_.__l.__size_ = (std::string::size_type)&v64;
        v62.__r_.__value_.__r.__words[0] = (std::string::size_type)&__p;
        std::__call_once(v8, &v62, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
      }
    }
    if ((*((_DWORD *)a2 + 14) - 13) >= 0xFFFFFFFC)
LABEL_16:
      google::protobuf::DescriptorBuilder::AddError((uint64_t)this, *((_QWORD *)a2 + 1), (uint64_t)a3, 2, "[packed = true] can only be specified for repeated primitive fields.");
  }
  v10 = *((_QWORD *)a2 + 10);
  if (v10)
  {
    v11 = *(void **)(v10 + 32);
    if (atomic_load(scc_info_MessageOptions_google_2fprotobuf_2fdescriptor_2eproto))
      google::protobuf::internal::InitSCCImpl(scc_info_MessageOptions_google_2fprotobuf_2fdescriptor_2eproto);
    if (v11 != &google::protobuf::_MessageOptions_default_instance_
      && *(_BYTE *)(*(_QWORD *)(*((_QWORD *)a2 + 10) + 32) + 72))
    {
      if (!*((_BYTE *)a2 + 67))
      {
        v15 = *((_QWORD *)a2 + 1);
        v16 = "MessageSets cannot have fields, only extensions.";
        v17 = this;
        v18 = a3;
        v19 = 0;
        goto LABEL_30;
      }
      if (*((_DWORD *)a2 + 15) != 1)
        goto LABEL_28;
      v13 = (unint64_t *)*((_QWORD *)a2 + 6);
      if (v13)
      {
        v64 = a2;
        v65 = google::protobuf::FieldDescriptor::TypeOnceInit;
        v14 = atomic_load(v13);
        if (v14 != -1)
        {
          __p.__r_.__value_.__r.__words[0] = (std::string::size_type)&v65;
          __p.__r_.__value_.__l.__size_ = (std::string::size_type)&v64;
          v62.__r_.__value_.__r.__words[0] = (std::string::size_type)&__p;
          std::__call_once(v13, &v62, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
        }
      }
      if (*((_DWORD *)a2 + 14) != 11)
      {
LABEL_28:
        v15 = *((_QWORD *)a2 + 1);
        v16 = "Extensions of MessageSets must be optional messages.";
        v17 = this;
        v18 = a3;
        v19 = 2;
LABEL_30:
        google::protobuf::DescriptorBuilder::AddError((uint64_t)v17, v15, (uint64_t)v18, v19, v16);
      }
    }
  }
  v20 = *((_QWORD *)a2 + 5);
  if (v20)
  {
    v21 = *(void **)(v20 + 136);
    if (atomic_load(scc_info_FileOptions_google_2fprotobuf_2fdescriptor_2eproto))
      google::protobuf::internal::InitSCCImpl(scc_info_FileOptions_google_2fprotobuf_2fdescriptor_2eproto);
    if (v21 != &google::protobuf::_FileOptions_default_instance_ && *(_DWORD *)(*(_QWORD *)(v20 + 136) + 160) == 3)
    {
      v23 = *((_QWORD *)a2 + 10);
      if (v23)
      {
        v24 = *(_QWORD *)(v23 + 16);
        if (!v24)
          goto LABEL_42;
        v25 = *(void **)(v24 + 136);
        if (atomic_load(scc_info_FileOptions_google_2fprotobuf_2fdescriptor_2eproto))
          google::protobuf::internal::InitSCCImpl(scc_info_FileOptions_google_2fprotobuf_2fdescriptor_2eproto);
        if (v25 == &google::protobuf::_FileOptions_default_instance_
          || *(_DWORD *)(*(_QWORD *)(v24 + 136) + 160) != 3)
        {
LABEL_42:
          google::protobuf::DescriptorBuilder::AddError((uint64_t)this, *((_QWORD *)a2 + 1), (uint64_t)a3, 3, "Extensions to non-lite types can only be declared in non-lite files.  Note that you cannot extend a non-lite type to contain a lite type, but the reverse is allowed.");
        }
      }
    }
  }
  v27 = (unint64_t *)*((_QWORD *)a2 + 6);
  if (v27)
  {
    v64 = a2;
    v65 = google::protobuf::FieldDescriptor::TypeOnceInit;
    v28 = atomic_load(v27);
    if (v28 != -1)
    {
      __p.__r_.__value_.__r.__words[0] = (std::string::size_type)&v65;
      __p.__r_.__value_.__l.__size_ = (std::string::size_type)&v64;
      v62.__r_.__value_.__r.__words[0] = (std::string::size_type)&__p;
      std::__call_once(v27, &v62, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  if (*((_DWORD *)a2 + 14) == 11 && *(_BYTE *)(*(_QWORD *)(*((_QWORD *)a2 + 13) + 32) + 75))
  {
    v29 = google::protobuf::FieldDescriptor::message_type(a2);
    if (*(_DWORD *)(v29 + 128))
      goto LABEL_80;
    if (*((_DWORD *)a2 + 15) != 3)
      goto LABEL_80;
    v30 = (_QWORD *)v29;
    if (*(_DWORD *)(v29 + 124) || *(_DWORD *)(v29 + 116) || *(_DWORD *)(v29 + 120) || *(_DWORD *)(v29 + 104) != 2)
      goto LABEL_80;
    v31 = *(unsigned __int8 **)v29;
    v32 = std::string::append(&v62, "Entry");
    __p = *v32;
    v32->__r_.__value_.__l.__size_ = 0;
    v32->__r_.__value_.__r.__words[2] = 0;
    v32->__r_.__value_.__r.__words[0] = 0;
    v33 = std::operator!=[abi:ne180100]<char,std::char_traits<char>,std::allocator<char>>(v31, (unsigned __int8 *)&__p)
       || *((_QWORD *)a2 + 10) != v30[3];
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
    if (SHIBYTE(v62.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v62.__r_.__value_.__l.__data_);
    if (v33)
      goto LABEL_80;
    if (*(_BYTE *)(v30[4] + 75))
    {
      v34 = (_DWORD *)v30[5];
      v35 = (google::protobuf::FieldDescriptor *)(v34 + 38);
    }
    else
    {
      v34 = 0;
      v35 = 0;
    }
    if (v34[15] != 1 || v34[17] != 1)
      goto LABEL_80;
    v61 = v35;
    v36 = (google::protobuf::FieldDescriptor *)v34;
    v37 = *(unsigned __int16 **)v34;
    v38 = *((char *)v37 + 23);
    if (v38 < 0)
    {
      if (*((_QWORD *)v37 + 1) != 3)
      {
LABEL_80:
        v42 = "map_entry should not be set explicitly. Use map<KeyType, ValueType> instead.";
LABEL_81:
        google::protobuf::DescriptorBuilder::AddError((uint64_t)this, *((_QWORD *)a2 + 1), (uint64_t)a3, 2, v42);
        goto LABEL_82;
      }
      v37 = *(unsigned __int16 **)v37;
    }
    else if (v38 != 3)
    {
      goto LABEL_80;
    }
    v39 = *v37;
    v40 = *((unsigned __int8 *)v37 + 2);
    v41 = v39 == 25963 && v40 == 121;
    if (!v41
      || *((_DWORD *)v61 + 15) != 1
      || *((_DWORD *)v61 + 17) != 2
      || std::operator!=[abi:ne180100]<char,std::char_traits<char>,std::allocator<char>>(*(_QWORD **)v61, "value"))
    {
      goto LABEL_80;
    }
    v60 = google::protobuf::FieldDescriptor::type(v36) - 1;
    if (v60 <= 0xD && ((0x2E03u >> v60) & 1) != 0)
      google::protobuf::DescriptorBuilder::AddError((uint64_t)this, *((_QWORD *)a2 + 1), (uint64_t)a3, 2, off_1E1BFF270[v60]);
    if (google::protobuf::FieldDescriptor::type(v61) == 14
      && *(_DWORD *)(*(_QWORD *)(google::protobuf::FieldDescriptor::enum_type(v61) + 48) + 16))
    {
      v42 = "Enum value in map must define 0 as the first value.";
      goto LABEL_81;
    }
  }
LABEL_82:
  v43 = *(_DWORD *)(*((_QWORD *)a2 + 15) + 80);
  if (v43)
  {
    v44 = (unint64_t *)*((_QWORD *)a2 + 6);
    if (v44)
    {
      v64 = a2;
      v65 = google::protobuf::FieldDescriptor::TypeOnceInit;
      v45 = atomic_load(v44);
      if (v45 != -1)
      {
        __p.__r_.__value_.__r.__words[0] = (std::string::size_type)&v65;
        __p.__r_.__value_.__l.__size_ = (std::string::size_type)&v64;
        v62.__r_.__value_.__r.__words[0] = (std::string::size_type)&__p;
        std::__call_once(v44, &v62, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
      }
    }
    v46 = *((_DWORD *)a2 + 14);
    if (v46 <= 0x12 && ((1 << v46) & 0x50058) != 0)
    {
      if (v43 >= 3)
      {
        v47 = *((_QWORD *)a2 + 1);
        google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0);
        std::operator+<char>();
        google::protobuf::DescriptorBuilder::AddError((uint64_t)this, v47, (uint64_t)a3, 2, (uint64_t)&__p);
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
          operator delete(__p.__r_.__value_.__l.__data_);
      }
    }
    else
    {
      google::protobuf::DescriptorBuilder::AddError((uint64_t)this, *((_QWORD *)a2 + 1), (uint64_t)a3, 2, "jstype is only allowed on int64, uint64, sint64, fixed64 or sfixed64 fields.");
    }
  }
  if (*((_BYTE *)a2 + 67) && *((_BYTE *)a2 + 66))
  {
    v48 = (unsigned __int8 *)*((_QWORD *)a2 + 4);
    v49 = v48[23];
    if ((v49 & 0x80u) == 0)
      v50 = v48[23];
    else
      v50 = *((_QWORD *)v48 + 1);
    size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    v52 = SHIBYTE(__p.__r_.__value_.__r.__words[2]);
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
      size = __p.__r_.__value_.__l.__size_;
    if (v50 == size)
    {
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        p_p = &__p;
      else
        p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
      if ((v49 & 0x80) != 0)
      {
        v58 = memcmp(*(const void **)v48, p_p, *((_QWORD *)v48 + 1)) != 0;
        goto LABEL_115;
      }
      if (v48[23])
      {
        v54 = v49 - 1;
        do
        {
          v56 = *v48++;
          v55 = v56;
          v57 = p_p->__r_.__value_.__s.__data_[0];
          p_p = (std::string *)((char *)p_p + 1);
          v58 = v55 != v57;
        }
        while (v55 == v57 && v54-- != 0);
LABEL_115:
        if ((v52 & 0x80000000) == 0)
          goto LABEL_117;
        goto LABEL_116;
      }
      v58 = 0;
      if ((SHIBYTE(__p.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_117:
        if (v58)
          google::protobuf::DescriptorBuilder::AddError((uint64_t)this, *((_QWORD *)a2 + 1), (uint64_t)a3, 7, "option json_name is not allowed on extension fields.");
        return;
      }
    }
    else
    {
      v58 = 1;
      if ((SHIBYTE(__p.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        goto LABEL_117;
    }
LABEL_116:
    operator delete(__p.__r_.__value_.__l.__data_);
    goto LABEL_117;
  }
}

void sub_1888845C8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void google::protobuf::DescriptorBuilder::ValidateProto3Field(google::protobuf::DescriptorBuilder *this, google::protobuf::FieldDescriptor *a2, const google::protobuf::FieldDescriptorProto *a3)
{
  const void **v6;
  unsigned __int8 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BOOL4 v12;
  uint64_t *v13;
  unint64_t *v14;
  unint64_t v15;
  uint64_t v16;
  std::string *v17;
  __int128 v18;
  uint64_t v19;
  int v20;
  const std::string::value_type *v21;
  std::string::size_type v22;
  std::string *v23;
  __int128 v24;
  std::string *v25;
  __int128 v26;
  unint64_t *v27;
  unint64_t v28;
  google::protobuf::_anonymous_namespace_ *v29;
  void (*v30)(const void *);
  const void *v31;
  std::string v32;
  std::string v33;
  std::string v34;
  void *__p[2];
  std::string::size_type v36;

  if (*((_BYTE *)a2 + 67))
  {
    v6 = *(const void ***)(*((_QWORD *)a2 + 10) + 8);
    v7 = atomic_load((unsigned __int8 *)&qword_1ECDBB710);
    if ((v7 & 1) == 0)
    {
      v29 = (google::protobuf::_anonymous_namespace_ *)__cxa_guard_acquire(&qword_1ECDBB710);
      if ((_DWORD)v29)
      {
        google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::OnShutdownDelete<std::set<std::string>>(std::set<std::string> *)::{lambda(void const*)#1}::__invoke, v30, v31);
        qword_1ECDBB708 = (uint64_t)v30;
        __cxa_guard_release(&qword_1ECDBB710);
      }
    }
    v8 = qword_1ECDBB708 + 8;
    v9 = *(_QWORD *)(qword_1ECDBB708 + 8);
    if (!v9)
      goto LABEL_10;
    v10 = qword_1ECDBB708 + 16;
    v11 = qword_1ECDBB708 + 8;
    do
    {
      v12 = std::less<std::string>::operator()[abi:ne180100](v10, (const void **)(v9 + 32), v6);
      v13 = (uint64_t *)(v9 + 8);
      if (!v12)
      {
        v13 = (uint64_t *)v9;
        v11 = v9;
      }
      v9 = *v13;
    }
    while (*v13);
    if (v11 == v8 || std::less<std::string>::operator()[abi:ne180100](v10, v6, (const void **)(v11 + 32)))
LABEL_10:
      v11 = v8;
    if (qword_1ECDBB708 + 8 == v11)
      google::protobuf::DescriptorBuilder::AddError((uint64_t)this, *((_QWORD *)a2 + 1), (uint64_t)a3, 3, "Extensions in proto3 are only allowed for defining options.");
  }
  if (*((_DWORD *)a2 + 15) == 2)
    google::protobuf::DescriptorBuilder::AddError((uint64_t)this, *((_QWORD *)a2 + 1), (uint64_t)a3, 2, "Required fields are not allowed in proto3.");
  if (*((_BYTE *)a2 + 64))
    google::protobuf::DescriptorBuilder::AddError((uint64_t)this, *((_QWORD *)a2 + 1), (uint64_t)a3, 4, "Explicit default values are not allowed in proto3.");
  v14 = (unint64_t *)*((_QWORD *)a2 + 6);
  if (v14)
  {
    v33.__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FieldDescriptor::TypeOnceInit;
    v32.__r_.__value_.__r.__words[0] = (std::string::size_type)a2;
    v15 = atomic_load(v14);
    if (v15 != -1)
    {
      __p[0] = &v33;
      __p[1] = &v32;
      v34.__r_.__value_.__r.__words[0] = (std::string::size_type)__p;
      std::__call_once(v14, &v34, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  if (*((_DWORD *)a2 + 14) == 14
    && google::protobuf::FieldDescriptor::enum_type(a2)
    && *(_DWORD *)(*(_QWORD *)(google::protobuf::FieldDescriptor::enum_type(a2) + 16) + 60) != 3
    && *(_DWORD *)(*(_QWORD *)(google::protobuf::FieldDescriptor::enum_type(a2) + 16) + 60))
  {
    v16 = *((_QWORD *)a2 + 1);
    google::protobuf::FieldDescriptor::enum_type(a2);
    std::operator+<char>();
    v17 = std::string::append(&v32, "\" is not a proto3 enum, but is used in \"");
    v18 = *(_OWORD *)&v17->__r_.__value_.__l.__data_;
    v33.__r_.__value_.__r.__words[2] = v17->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v33.__r_.__value_.__l.__data_ = v18;
    v17->__r_.__value_.__l.__size_ = 0;
    v17->__r_.__value_.__r.__words[2] = 0;
    v17->__r_.__value_.__r.__words[0] = 0;
    v19 = *(_QWORD *)(*((_QWORD *)a2 + 10) + 8);
    v20 = *(char *)(v19 + 23);
    if (v20 >= 0)
      v21 = *(const std::string::value_type **)(*((_QWORD *)a2 + 10) + 8);
    else
      v21 = *(const std::string::value_type **)v19;
    if (v20 >= 0)
      v22 = *(unsigned __int8 *)(v19 + 23);
    else
      v22 = *(_QWORD *)(v19 + 8);
    v23 = std::string::append(&v33, v21, v22);
    v24 = *(_OWORD *)&v23->__r_.__value_.__l.__data_;
    v34.__r_.__value_.__r.__words[2] = v23->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v34.__r_.__value_.__l.__data_ = v24;
    v23->__r_.__value_.__l.__size_ = 0;
    v23->__r_.__value_.__r.__words[2] = 0;
    v23->__r_.__value_.__r.__words[0] = 0;
    v25 = std::string::append(&v34, "\" which is a proto3 message type.");
    v26 = *(_OWORD *)&v25->__r_.__value_.__l.__data_;
    v36 = v25->__r_.__value_.__r.__words[2];
    *(_OWORD *)__p = v26;
    v25->__r_.__value_.__l.__size_ = 0;
    v25->__r_.__value_.__r.__words[2] = 0;
    v25->__r_.__value_.__r.__words[0] = 0;
    google::protobuf::DescriptorBuilder::AddError((uint64_t)this, v16, (uint64_t)a3, 2, (uint64_t)__p);
    if (SHIBYTE(v36) < 0)
      operator delete(__p[0]);
    if (SHIBYTE(v34.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v34.__r_.__value_.__l.__data_);
    if (SHIBYTE(v33.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v33.__r_.__value_.__l.__data_);
    if (SHIBYTE(v32.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v32.__r_.__value_.__l.__data_);
  }
  v27 = (unint64_t *)*((_QWORD *)a2 + 6);
  if (v27)
  {
    v33.__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FieldDescriptor::TypeOnceInit;
    v32.__r_.__value_.__r.__words[0] = (std::string::size_type)a2;
    v28 = atomic_load(v27);
    if (v28 != -1)
    {
      __p[0] = &v33;
      __p[1] = &v32;
      v34.__r_.__value_.__r.__words[0] = (std::string::size_type)__p;
      std::__call_once(v27, &v34, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  if (*((_DWORD *)a2 + 14) == 10)
    google::protobuf::DescriptorBuilder::AddError((uint64_t)this, *((_QWORD *)a2 + 1), (uint64_t)a3, 2, "Groups are not supported in proto3 syntax.");
}

void sub_188884978(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,void *__p,uint64_t a31,int a32,__int16 a33,char a34,char a35)
{
  __cxa_guard_abort(&qword_1ECDBB710);
  _Unwind_Resume(a1);
}

void google::protobuf::DescriptorBuilder::ValidateProto3Message(google::protobuf::DescriptorBuilder *this, google::protobuf::Descriptor *a2, const google::protobuf::DescriptorProto *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 *v15;
  int v16;
  unsigned __int8 *v17;
  uint64_t v18;
  int v19;
  char *v20;
  char **v21;
  char **v22;
  const void **v23;
  _BOOL4 v24;
  char **v25;
  const void **v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  std::string *v30;
  __int128 v31;
  uint64_t *v32;
  uint64_t v33;
  int v34;
  const std::string::value_type *v35;
  std::string::size_type v36;
  std::string *v37;
  __int128 v38;
  std::string *v39;
  __int128 v40;
  std::string *v41;
  __int128 v42;
  char *v43;
  std::string v44;
  std::string v45;
  std::string v46;
  std::string v47;
  void *__p[2];
  std::string::size_type v49;
  std::string v50;
  char **v51;
  char *v52;
  uint64_t v53;
  std::string *v54;

  if (*((int *)a2 + 29) >= 1)
  {
    v6 = 0;
    v7 = 0;
    do
    {
      google::protobuf::DescriptorBuilder::ValidateProto3Message(this, (google::protobuf::Descriptor *)(*((_QWORD *)a2 + 7) + v6), *(const google::protobuf::DescriptorProto **)(*((_QWORD *)a3 + 8) + 8 * v7++ + 8));
      v6 += 144;
    }
    while (v7 < *((int *)a2 + 29));
  }
  if (*((int *)a2 + 30) >= 1)
  {
    v8 = 0;
    v9 = 0;
    do
    {
      google::protobuf::DescriptorBuilder::ValidateProto3Enum((uint64_t)this, *((_QWORD *)a2 + 8) + v8, *(_QWORD *)(*(_QWORD *)(*((_QWORD *)a3 + 11) + 8 * v9++ + 8) + 40));
      v8 += 80;
    }
    while (v9 < *((int *)a2 + 30));
  }
  if (*((int *)a2 + 26) >= 1)
  {
    v10 = 0;
    v11 = 0;
    do
    {
      google::protobuf::DescriptorBuilder::ValidateProto3Field(this, (google::protobuf::FieldDescriptor *)(*((_QWORD *)a2 + 5) + v10), *(const google::protobuf::FieldDescriptorProto **)(*((_QWORD *)a3 + 5) + 8 * v11++ + 8));
      v10 += 152;
    }
    while (v11 < *((int *)a2 + 26));
  }
  if (*((int *)a2 + 32) >= 1)
  {
    v12 = 0;
    v13 = 0;
    do
    {
      google::protobuf::DescriptorBuilder::ValidateProto3Field(this, (google::protobuf::FieldDescriptor *)(*((_QWORD *)a2 + 10) + v12), *(const google::protobuf::FieldDescriptorProto **)(*((_QWORD *)a3 + 17) + 8 * v13++ + 8));
      v12 += 152;
    }
    while (v13 < *((int *)a2 + 32));
  }
  if (*((int *)a2 + 31) > 0)
    google::protobuf::DescriptorBuilder::AddError((uint64_t)this, *((_QWORD *)a2 + 1), *(_QWORD *)(*((_QWORD *)a3 + 14) + 8), 1, "Extension ranges are not allowed in proto3.");
  if (*(_BYTE *)(*((_QWORD *)a2 + 4) + 72))
    google::protobuf::DescriptorBuilder::AddError((uint64_t)this, *((_QWORD *)a2 + 1), (uint64_t)a3, 0, "MessageSet is not supported in proto3.");
  v52 = 0;
  v53 = 0;
  v51 = &v52;
  if (*((int *)a2 + 26) < 1)
  {
    v43 = 0;
  }
  else
  {
    v14 = 0;
    do
    {
      v15 = *(unsigned __int8 **)(*((_QWORD *)a2 + 5) + 152 * v14);
      memset(&v50, 0, sizeof(v50));
      v16 = (char)v15[23];
      if (v16 >= 0)
        v17 = v15;
      else
        v17 = *(unsigned __int8 **)v15;
      if (v16 >= 0)
        v18 = v15[23];
      else
        v18 = *((_QWORD *)v15 + 1);
      for (; v18; --v18)
      {
        v19 = *v17;
        if (v19 != 95)
        {
          if ((v19 - 65) < 0x1A)
            LOBYTE(v19) = v19 + 32;
          std::string::push_back(&v50, v19);
        }
        ++v17;
      }
      v20 = v52;
      if (!v52)
        goto LABEL_45;
      v21 = &v52;
      do
      {
        v22 = v21;
        v23 = (const void **)(v20 + 32);
        v24 = std::less<std::string>::operator()[abi:ne180100]((uint64_t)&v53, (const void **)v20 + 4, (const void **)&v50.__r_.__value_.__l.__data_);
        if (v24)
          v25 = (char **)(v20 + 8);
        else
          v25 = (char **)v20;
        if (v24)
          v21 = v22;
        else
          v21 = (char **)v20;
        v20 = *v25;
      }
      while (*v25);
      if (v21 == &v52
        || (!v24 ? (v26 = v23) : (v26 = (const void **)(v22 + 4)),
            std::less<std::string>::operator()[abi:ne180100]((uint64_t)&v53, (const void **)&v50.__r_.__value_.__l.__data_, v26)))
      {
LABEL_45:
        v27 = *((_QWORD *)a2 + 5);
        __p[0] = &v50;
        std::__tree<std::__value_type<std::string,google::protobuf::FieldDescriptor const*>,std::__map_value_compare<std::string,std::__value_type<std::string,google::protobuf::FieldDescriptor const*>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,google::protobuf::FieldDescriptor const*>>>::__emplace_unique_key_args<std::string,std::piecewise_construct_t const&,std::tuple<std::string const&>,std::tuple<>>((uint64_t **)&v51, (const void **)&v50.__r_.__value_.__l.__data_, (__int128 **)__p)[7] = v27 + 152 * v14;
      }
      else
      {
        v28 = *((_QWORD *)a2 + 1);
        v29 = *(_QWORD *)(*((_QWORD *)a3 + 5) + 8 * v14 + 8);
        std::operator+<char>();
        v30 = std::string::append(&v44, "\" conflicts with field \"");
        v31 = *(_OWORD *)&v30->__r_.__value_.__l.__data_;
        v45.__r_.__value_.__r.__words[2] = v30->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v45.__r_.__value_.__l.__data_ = v31;
        v30->__r_.__value_.__l.__size_ = 0;
        v30->__r_.__value_.__r.__words[2] = 0;
        v30->__r_.__value_.__r.__words[0] = 0;
        v54 = &v50;
        v32 = std::__tree<std::__value_type<std::string,google::protobuf::FieldDescriptor const*>,std::__map_value_compare<std::string,std::__value_type<std::string,google::protobuf::FieldDescriptor const*>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,google::protobuf::FieldDescriptor const*>>>::__emplace_unique_key_args<std::string,std::piecewise_construct_t const&,std::tuple<std::string const&>,std::tuple<>>((uint64_t **)&v51, (const void **)&v50.__r_.__value_.__l.__data_, (__int128 **)&v54);
        v33 = *(_QWORD *)v32[7];
        v34 = *(char *)(v33 + 23);
        if (v34 >= 0)
          v35 = *(const std::string::value_type **)v32[7];
        else
          v35 = *(const std::string::value_type **)v33;
        if (v34 >= 0)
          v36 = *(unsigned __int8 *)(v33 + 23);
        else
          v36 = *(_QWORD *)(v33 + 8);
        v37 = std::string::append(&v45, v35, v36);
        v38 = *(_OWORD *)&v37->__r_.__value_.__l.__data_;
        v46.__r_.__value_.__r.__words[2] = v37->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v46.__r_.__value_.__l.__data_ = v38;
        v37->__r_.__value_.__l.__size_ = 0;
        v37->__r_.__value_.__r.__words[2] = 0;
        v37->__r_.__value_.__r.__words[0] = 0;
        v39 = std::string::append(&v46, "\". This is not ");
        v40 = *(_OWORD *)&v39->__r_.__value_.__l.__data_;
        v47.__r_.__value_.__r.__words[2] = v39->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v47.__r_.__value_.__l.__data_ = v40;
        v39->__r_.__value_.__l.__size_ = 0;
        v39->__r_.__value_.__r.__words[2] = 0;
        v39->__r_.__value_.__r.__words[0] = 0;
        v41 = std::string::append(&v47, "allowed in proto3.");
        v42 = *(_OWORD *)&v41->__r_.__value_.__l.__data_;
        v49 = v41->__r_.__value_.__r.__words[2];
        *(_OWORD *)__p = v42;
        v41->__r_.__value_.__l.__size_ = 0;
        v41->__r_.__value_.__r.__words[2] = 0;
        v41->__r_.__value_.__r.__words[0] = 0;
        google::protobuf::DescriptorBuilder::AddError((uint64_t)this, v28, v29, 0, (uint64_t)__p);
        if (SHIBYTE(v49) < 0)
          operator delete(__p[0]);
        if (SHIBYTE(v47.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v47.__r_.__value_.__l.__data_);
        if (SHIBYTE(v46.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v46.__r_.__value_.__l.__data_);
        if (SHIBYTE(v45.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v45.__r_.__value_.__l.__data_);
        if (SHIBYTE(v44.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v44.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v50.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v50.__r_.__value_.__l.__data_);
      ++v14;
    }
    while (v14 < *((int *)a2 + 26));
    v43 = v52;
  }
  std::__tree<std::__value_type<std::string,BOOL>,std::__map_value_compare<std::string,std::__value_type<std::string,BOOL>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,BOOL>>>::destroy(v43);
}

void sub_188884E50(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,uint64_t a36,void *__p,uint64_t a38,int a39,__int16 a40,char a41,char a42)
{
  uint64_t v42;

  if (a42 < 0)
    operator delete(__p);
  if (a35 < 0)
    operator delete(a30);
  if (a28 < 0)
    operator delete(a23);
  if (a21 < 0)
    operator delete(a16);
  if (a15 < 0)
    operator delete(a10);
  if (*(char *)(v42 - 121) < 0)
    operator delete(*(void **)(v42 - 144));
  std::__tree<std::__value_type<std::string,BOOL>,std::__map_value_compare<std::string,std::__value_type<std::string,BOOL>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,BOOL>>>::destroy(*(char **)(v42 - 112));
  _Unwind_Resume(a1);
}

void google::protobuf::DescriptorBuilder::ValidateProto3Enum(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(int *)(a2 + 44) >= 1)
  {
    if (*(_DWORD *)(*(_QWORD *)(a2 + 48) + 16))
      google::protobuf::DescriptorBuilder::AddError(a1, *(_QWORD *)(a2 + 8), *(_QWORD *)(a3 + 8), 1, "The first enum value must be zero in proto3.");
  }
}

void google::protobuf::DescriptorBuilder::OptionInterpreter::~OptionInterpreter(google::protobuf::DescriptorBuilder::OptionInterpreter *this)
{
  google::protobuf::DynamicMessageFactory::~DynamicMessageFactory((google::protobuf::DescriptorBuilder::OptionInterpreter *)((char *)this + 72));
  std::__tree<std::__value_type<std::vector<int>,int>,std::__map_value_compare<std::vector<int>,std::__value_type<std::vector<int>,int>,std::less<std::vector<int>>,true>,std::allocator<std::__value_type<std::vector<int>,int>>>::destroy(*((_QWORD **)this + 7));
  std::__tree<std::__value_type<std::vector<int>,std::vector<int>>,std::__map_value_compare<std::vector<int>,std::__value_type<std::vector<int>,std::vector<int>>,std::less<std::vector<int>>,true>,std::allocator<std::__value_type<std::vector<int>,std::vector<int>>>>::destroy(*((_QWORD **)this + 4));
}

uint64_t google::protobuf::DescriptorBuilder::OptionInterpreter::InterpretSingleOption(uint64_t a1, google::protobuf::Message *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  unint64_t v9;
  int v10;
  unint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v16;
  uint64_t v17;
  const std::string::value_type **v18;
  const std::string::value_type **v19;
  uint64_t v20;
  std::string::size_type FieldByName;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  std::string::size_type v25;
  unint64_t v26;
  std::string *v27;
  __int128 v28;
  std::string *v29;
  std::string::size_type v30;
  std::string::size_type v31;
  int v32;
  const std::string::value_type *v33;
  std::string::size_type v34;
  const char *v35;
  uint64_t v36;
  int v37;
  char *v38;
  char *v39;
  char *v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t v44;
  char *v45;
  char *v46;
  int v47;
  uint64_t v48;
  unint64_t *v49;
  unint64_t v50;
  uint64_t *v51;
  uint64_t *v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  char *v56;
  std::string::size_type *v57;
  char *v58;
  char *v59;
  std::string::size_type v60;
  uint64_t *v61;
  uint64_t *v62;
  google::protobuf::UnknownFieldSet *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  google::protobuf::UnknownFieldSet *v67;
  unint64_t *v68;
  unint64_t v69;
  int v70;
  uint64_t v71;
  int v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  const char *v78;
  unint64_t **v79;
  google::protobuf::_anonymous_namespace_ **v80;
  const char *v81;
  uint64_t v82;
  std::string *v83;
  __int128 v84;
  int v85;
  const std::string::value_type *v86;
  std::string::size_type v87;
  std::string *v88;
  __int128 v89;
  std::string *v90;
  __int128 v91;
  void *v92;
  std::string *v93;
  __int128 v94;
  std::string *v95;
  __int128 v96;
  uint64_t v97;
  int v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  int v102;
  uint64_t v103;
  int v104;
  uint64_t v105;
  uint64_t v106;
  std::string *v107;
  __int128 v108;
  int v109;
  const std::string::value_type *v110;
  std::string::size_type v111;
  std::string *v112;
  __int128 v113;
  std::string *v114;
  __int128 v115;
  std::string *v116;
  std::string::size_type v117;
  std::string *v118;
  __int128 v119;
  std::string *v120;
  __int128 v121;
  std::string *v122;
  __int128 v123;
  std::string *v124;
  __int128 v125;
  double v126;
  unint64_t v127;
  unsigned int v128;
  uint64_t v129;
  unint64_t *v130;
  unint64_t v131;
  google::protobuf::DescriptorPool *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  const char *v136;
  unint64_t v137;
  __int128 *v138;
  __int128 v139;
  int64_t v140;
  uint64_t v141;
  unsigned int v142;
  unint64_t *v143;
  unint64_t v144;
  float v145;
  unint64_t v146;
  int v147;
  uint64_t v148;
  std::string *v149;
  unsigned int v150;
  unint64_t *v151;
  unint64_t v152;
  unint64_t v153;
  unsigned int v154;
  unint64_t *v155;
  unint64_t v156;
  uint64_t v157;
  int v158;
  int v159;
  uint64_t v161;
  uint64_t ValueByName;
  std::string::size_type size;
  uint64_t v164;
  int v165;
  const std::string::value_type *v166;
  std::string::size_type v167;
  uint64_t v168;
  std::string *v169;
  __int128 v170;
  int v171;
  const std::string::value_type *v172;
  std::string::size_type v173;
  std::string *v174;
  __int128 v175;
  std::string *v176;
  __int128 v177;
  uint64_t v178;
  int v179;
  const std::string::value_type *v180;
  std::string::size_type v181;
  std::string *v182;
  __int128 v183;
  std::string *v184;
  __int128 v185;
  char v186;
  std::string *v187;
  __int128 v188;
  int v189;
  const std::string::value_type *v190;
  std::string::size_type v191;
  std::string *v192;
  __int128 v193;
  std::string *v194;
  __int128 v195;
  uint64_t v196;
  int v197;
  const std::string::value_type *v198;
  std::string::size_type v199;
  std::string *v200;
  __int128 v201;
  std::string *v202;
  __int128 v203;
  void *v204;
  std::string *v205;
  __int128 v206;
  uint64_t *v207;
  const google::protobuf::UnknownFieldSet *v208;
  google::protobuf::UnknownFieldSet *v209;
  std::string::size_type v210;
  unint64_t *v211;
  unint64_t v212;
  int v213;
  _QWORD *v214;
  google::protobuf::io::EpsCopyOutputStream *v215;
  std::string *v216;
  std::string::size_type v217;
  void **v218;
  uint64_t v219;
  uint64_t *v220;
  void **v221;
  char *v222;
  void *v223;
  uint64_t *v224;
  uint64_t **v225;
  uint64_t **v226;
  uint64_t *v227;
  uint64_t *v228;
  uint64_t *v229;
  char *v230;
  int v231;
  int v232;
  BOOL v233;
  char *v234;
  int v235;
  int v236;
  BOOL v237;
  _DWORD *v238;
  std::string::size_type v239;
  unint64_t *v240;
  unint64_t v241;
  uint64_t v242;
  uint64_t *v243;
  int v244;
  char *v245;
  char *v246;
  uint64_t v247;
  unint64_t v248;
  uint64_t v249;
  unint64_t v250;
  char *v251;
  char *v252;
  char *v253;
  int v254;
  char *v255;
  uint64_t v256;
  std::string::size_type v257;
  uint64_t **v258;
  std::string::size_type v259;
  int *v260;
  int *v261;
  int *v262;
  char *v263;
  int v264;
  int v265;
  char *v267;
  int v268;
  int v269;
  BOOL v270;
  uint64_t *v271;
  uint64_t v272;
  char *v273;
  char *v274;
  size_t v275;
  unint64_t v276;
  uint64_t v277;
  char *v278;
  uint64_t v279;
  unint64_t v280;
  void **v281;
  char *v282;
  char *v283;
  char *v284;
  size_t v285;
  unint64_t v286;
  char *v287;
  void *v288;
  char *v289;
  uint64_t v291;
  google::protobuf::Message *v292;
  std::string v293;
  std::string __p;
  void *v295;
  char *v296;
  char *v297;
  std::string __str;
  void *v299;
  uint64_t *v300;
  char *v301;
  char v302;
  std::string v303;
  std::string v304;
  std::string v305;
  std::string v306;
  std::string v307;
  std::string v308;
  std::string v309;
  char v310;
  const google::protobuf::UnknownFieldSet *v311;
  char v312;
  uint64_t v313;

  v313 = *MEMORY[0x1E0C80C00];
  v5 = *(_QWORD *)(a1 + 16);
  if (!*(_DWORD *)(v5 + 32))
  {
    std::string::basic_string[abi:ne180100]<0>(&v308, "Option must have a name.");
    google::protobuf::DescriptorBuilder::AddError(*(_QWORD *)a1, *(_QWORD *)(a1 + 8) + 24, *(_QWORD *)(a1 + 16), 7, (uint64_t)&v308);
LABEL_107:
    if (SHIBYTE(v308.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v308.__r_.__value_.__l.__data_);
    return 0;
  }
  v9 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v5 + 40) + 8) + 24) & 0xFFFFFFFFFFFFFFFELL;
  v10 = *(char *)(v9 + 23);
  if (v10 < 0)
  {
    if (*(_QWORD *)(v9 + 8) != 20)
      goto LABEL_15;
    v9 = *(_QWORD *)v9;
  }
  else if (v10 != 20)
  {
    goto LABEL_15;
  }
  v11 = *(_QWORD *)v9;
  v12 = *(_QWORD *)(v9 + 8);
  v13 = *(_DWORD *)(v9 + 16);
  if (v11 == 0x707265746E696E75 && v12 == 0x706F5F6465746572 && v13 == 1852795252)
  {
    std::string::basic_string[abi:ne180100]<0>(&v308, "Option must not use reserved name \"uninterpreted_option\".");
    google::protobuf::DescriptorBuilder::AddError(*(_QWORD *)a1, *(_QWORD *)(a1 + 8) + 24, *(_QWORD *)(a1 + 16), 7, (uint64_t)&v308);
    goto LABEL_107;
  }
LABEL_15:
  v16 = *(_QWORD *)a1;
  v17 = (*(uint64_t (**)(google::protobuf::Message *))(*(_QWORD *)a2 + 152))(a2);
  if (google::protobuf::DescriptorBuilder::FindSymbolNotEnforcingDeps(v16, *(uint64_t **)(v17 + 8), 1) == 1)
  {
    v19 = v18;
    if (v18)
      goto LABEL_21;
  }
  else
  {
    v19 = (const std::string::value_type **)(*(uint64_t (**)(google::protobuf::Message *))(*(_QWORD *)a2 + 152))(a2);
    if (v19)
      goto LABEL_21;
  }
  LODWORD(v308.__r_.__value_.__l.__data_) = 3;
  v308.__r_.__value_.__l.__size_ = (std::string::size_type)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf"
                                                           "/src/google/protobuf/descriptor.cc";
  LODWORD(v308.__r_.__value_.__r.__words[2]) = 6505;
  memset(&v309, 0, sizeof(v309));
  std::string::append(&v309, "CHECK failed: options_descriptor: ");
  google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v308);
  if (SHIBYTE(v309.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v309.__r_.__value_.__l.__data_);
LABEL_21:
  v299 = 0;
  v300 = 0;
  v301 = 0;
  std::string::basic_string[abi:ne180100]<0>(&__str, "");
  v295 = 0;
  v296 = 0;
  v297 = 0;
  std::vector<int>::__init_with_size[abi:ne180100]<int *,int *>(&v295, *(const void **)a4, *(_QWORD *)(a4 + 8), (uint64_t)(*(_QWORD *)(a4 + 8) - *(_QWORD *)a4) >> 2);
  v292 = a2;
  v291 = a3;
  if (*(int *)(*(_QWORD *)(a1 + 16) + 32) < 1)
  {
    FieldByName = 0;
LABEL_95:
    if (*(_DWORD *)(FieldByName + 60) != 3)
    {
      v61 = (uint64_t *)v299;
      v62 = v300;
      v63 = (google::protobuf::UnknownFieldSet *)(*(uint64_t (**)(google::protobuf::Message *))(*(_QWORD *)v292 + 152))(v292);
      v65 = *(_QWORD *)((char *)v292 + *(unsigned int *)(v64 + 36));
      v66 = (v65 & 1) != 0 ? (v65 & 0xFFFFFFFFFFFFFFFELL) + 8 : google::protobuf::UnknownFieldSet::default_instance(v63);
      if (!google::protobuf::DescriptorBuilder::OptionInterpreter::ExamineIfOptionIsSet((uint64_t *)a1, v61, v62, FieldByName, (uint64_t)&__str, v66))goto LABEL_199;
    }
    v67 = (google::protobuf::UnknownFieldSet *)operator new();
    *(_QWORD *)v67 = 0;
    *((_QWORD *)v67 + 1) = 0;
    *((_QWORD *)v67 + 2) = 0;
    v68 = *(unint64_t **)(FieldByName + 48);
    if (v68)
    {
      v307.__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FieldDescriptor::TypeOnceInit;
      v306.__r_.__value_.__r.__words[0] = FieldByName;
      v69 = atomic_load(v68);
      if (v69 != -1)
      {
        v308.__r_.__value_.__r.__words[0] = (std::string::size_type)&v307;
        v308.__r_.__value_.__l.__size_ = (std::string::size_type)&v306;
        v293.__r_.__value_.__r.__words[0] = (std::string::size_type)&v308;
        std::__call_once(v68, &v293, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
      }
    }
    v70 = *(_DWORD *)(FieldByName + 56);
    switch(v70)
    {
      case 1:
        v97 = *(_QWORD *)(a1 + 16);
        v98 = *(_DWORD *)(v97 + 16);
        if ((v98 & 0x20) != 0)
        {
          v126 = *(double *)(v97 + 88);
        }
        else if ((v98 & 8) != 0)
        {
          v126 = (double)*(unint64_t *)(v97 + 72);
        }
        else
        {
          if ((v98 & 0x10) == 0)
            goto LABEL_330;
          v126 = (double)*(uint64_t *)(v97 + 80);
        }
        google::protobuf::UnknownFieldSet::AddFixed64(v67, *(_DWORD *)(FieldByName + 68), *(uint64_t *)&v126);
        goto LABEL_338;
      case 2:
        v103 = *(_QWORD *)(a1 + 16);
        v104 = *(_DWORD *)(v103 + 16);
        if ((v104 & 0x20) != 0)
        {
          v145 = *(double *)(v103 + 88);
        }
        else if ((v104 & 8) != 0)
        {
          v145 = (float)*(unint64_t *)(v103 + 72);
        }
        else
        {
          if ((v104 & 0x10) == 0)
            goto LABEL_330;
          v145 = (float)*(uint64_t *)(v103 + 80);
        }
        google::protobuf::UnknownFieldSet::AddFixed32(v67, *(_DWORD *)(FieldByName + 68), SLODWORD(v145));
        goto LABEL_338;
      case 3:
      case 16:
      case 18:
        v101 = *(_QWORD *)(a1 + 16);
        v102 = *(_DWORD *)(v101 + 16);
        if ((v102 & 8) == 0)
        {
          if ((v102 & 0x10) == 0)
            goto LABEL_330;
          v142 = *(_DWORD *)(FieldByName + 68);
          v141 = *(_QWORD *)(v101 + 80);
          v143 = *(unint64_t **)(FieldByName + 48);
          if (!v143)
            goto LABEL_235;
          v307.__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FieldDescriptor::TypeOnceInit;
          v306.__r_.__value_.__r.__words[0] = FieldByName;
          v153 = atomic_load(v143);
          if (v153 == -1)
            goto LABEL_234;
          goto LABEL_233;
        }
        v141 = *(_QWORD *)(v101 + 72);
        if ((v141 & 0x8000000000000000) == 0)
        {
          v142 = *(_DWORD *)(FieldByName + 68);
          v143 = *(unint64_t **)(FieldByName + 48);
          if (!v143)
          {
LABEL_235:
            google::protobuf::DescriptorBuilder::OptionInterpreter::SetInt64(v142, v141, v70, v67);
            goto LABEL_338;
          }
          v307.__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FieldDescriptor::TypeOnceInit;
          v306.__r_.__value_.__r.__words[0] = FieldByName;
          v144 = atomic_load(v143);
          if (v144 == -1)
          {
LABEL_234:
            v70 = *(_DWORD *)(FieldByName + 56);
            goto LABEL_235;
          }
LABEL_233:
          v308.__r_.__value_.__r.__words[0] = (std::string::size_type)&v307;
          v308.__r_.__value_.__l.__size_ = (std::string::size_type)&v306;
          v293.__r_.__value_.__r.__words[0] = (std::string::size_type)&v308;
          std::__call_once(v143, &v293, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
          goto LABEL_234;
        }
        goto LABEL_330;
      case 4:
      case 6:
        v100 = *(_QWORD *)(a1 + 16);
        if ((*(_BYTE *)(v100 + 16) & 8) == 0)
          goto LABEL_330;
        v128 = *(_DWORD *)(FieldByName + 68);
        v129 = *(_QWORD *)(v100 + 72);
        v130 = *(unint64_t **)(FieldByName + 48);
        if (v130)
        {
          v307.__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FieldDescriptor::TypeOnceInit;
          v306.__r_.__value_.__r.__words[0] = FieldByName;
          v131 = atomic_load(v130);
          if (v131 != -1)
          {
            v308.__r_.__value_.__r.__words[0] = (std::string::size_type)&v307;
            v308.__r_.__value_.__l.__size_ = (std::string::size_type)&v306;
            v293.__r_.__value_.__r.__words[0] = (std::string::size_type)&v308;
            std::__call_once(v130, &v293, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
          }
          v70 = *(_DWORD *)(FieldByName + 56);
        }
        google::protobuf::DescriptorBuilder::OptionInterpreter::SetUInt64(v128, v129, v70, v67);
        goto LABEL_338;
      case 5:
      case 15:
      case 17:
        v71 = *(_QWORD *)(a1 + 16);
        v72 = *(_DWORD *)(v71 + 16);
        if ((v72 & 8) != 0)
        {
          v140 = *(_QWORD *)(v71 + 72);
          if ((unint64_t)v140 >> 31)
            goto LABEL_330;
          v154 = *(_DWORD *)(FieldByName + 68);
          v155 = *(unint64_t **)(FieldByName + 48);
          if (v155)
          {
            v307.__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FieldDescriptor::TypeOnceInit;
            v306.__r_.__value_.__r.__words[0] = FieldByName;
            v156 = atomic_load(v155);
            if (v156 != -1)
            {
              v308.__r_.__value_.__r.__words[0] = (std::string::size_type)&v307;
              v308.__r_.__value_.__l.__size_ = (std::string::size_type)&v306;
              v293.__r_.__value_.__r.__words[0] = (std::string::size_type)&v308;
              std::__call_once(v155, &v293, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
            }
            v70 = *(_DWORD *)(FieldByName + 56);
          }
        }
        else
        {
          if ((v72 & 0x10) == 0)
            goto LABEL_330;
          v140 = *(_QWORD *)(v71 + 80);
          if (v140 <= (uint64_t)0xFFFFFFFF7FFFFFFFLL)
            goto LABEL_330;
          v154 = *(_DWORD *)(FieldByName + 68);
          v70 = google::protobuf::FieldDescriptor::type((google::protobuf::FieldDescriptor *)FieldByName);
        }
        google::protobuf::DescriptorBuilder::OptionInterpreter::SetInt32(v154, v140, v70, v67);
        goto LABEL_338;
      case 7:
      case 13:
        v99 = *(_QWORD *)(a1 + 16);
        if ((*(_BYTE *)(v99 + 16) & 8) == 0)
          goto LABEL_330;
        v127 = *(_QWORD *)(v99 + 72);
        if (HIDWORD(v127))
          goto LABEL_330;
        v150 = *(_DWORD *)(FieldByName + 68);
        v151 = *(unint64_t **)(FieldByName + 48);
        if (v151)
        {
          v307.__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FieldDescriptor::TypeOnceInit;
          v306.__r_.__value_.__r.__words[0] = FieldByName;
          v152 = atomic_load(v151);
          if (v152 != -1)
          {
            v308.__r_.__value_.__r.__words[0] = (std::string::size_type)&v307;
            v308.__r_.__value_.__l.__size_ = (std::string::size_type)&v306;
            v293.__r_.__value_.__r.__words[0] = (std::string::size_type)&v308;
            std::__call_once(v151, &v293, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
          }
          v70 = *(_DWORD *)(FieldByName + 56);
        }
        google::protobuf::DescriptorBuilder::OptionInterpreter::SetUInt32(v150, v127, v70, v67);
        goto LABEL_338;
      case 8:
        v105 = *(_QWORD *)(a1 + 16);
        if ((*(_BYTE *)(v105 + 16) & 1) == 0)
          goto LABEL_330;
        v146 = *(_QWORD *)(v105 + 48) & 0xFFFFFFFFFFFFFFFELL;
        if (*(char *)(v146 + 23) < 0)
        {
          v157 = *(_QWORD *)(v146 + 8);
          if (v157 != 4)
          {
            if (v157 != 5)
              goto LABEL_330;
            v146 = *(_QWORD *)v146;
LABEL_245:
            v158 = *(_DWORD *)v146;
            v159 = *(unsigned __int8 *)(v146 + 4);
            if (v158 != 1936482662 || v159 != 101)
            {
LABEL_330:
              std::operator+<char>();
              v205 = std::string::append(&v293, "\".");
              v206 = *(_OWORD *)&v205->__r_.__value_.__l.__data_;
              v308.__r_.__value_.__r.__words[2] = v205->__r_.__value_.__r.__words[2];
              *(_OWORD *)&v308.__r_.__value_.__l.__data_ = v206;
              v205->__r_.__value_.__l.__size_ = 0;
              v205->__r_.__value_.__r.__words[2] = 0;
              v205->__r_.__value_.__r.__words[0] = 0;
              google::protobuf::DescriptorBuilder::AddError(*(_QWORD *)a1, *(_QWORD *)(a1 + 8) + 24, *(_QWORD *)(a1 + 16), 8, (uint64_t)&v308);
              if (SHIBYTE(v308.__r_.__value_.__r.__words[2]) < 0)
                operator delete(v308.__r_.__value_.__l.__data_);
              if (SHIBYTE(v293.__r_.__value_.__r.__words[2]) < 0)
              {
                v204 = (void *)v293.__r_.__value_.__r.__words[0];
                goto LABEL_334;
              }
              goto LABEL_461;
            }
            v161 = 0;
            goto LABEL_337;
          }
          v146 = *(_QWORD *)v146;
        }
        else
        {
          v147 = *(unsigned __int8 *)(v146 + 23);
          if (v147 != 4)
          {
            if (v147 != 5)
              goto LABEL_330;
            goto LABEL_245;
          }
        }
        if (*(_DWORD *)v146 != 1702195828)
          goto LABEL_330;
        v161 = 1;
        goto LABEL_337;
      case 9:
      case 12:
        v106 = *(_QWORD *)(a1 + 16);
        if ((*(_BYTE *)(v106 + 16) & 2) == 0)
          goto LABEL_330;
        v148 = *(_QWORD *)(v106 + 56);
        v149 = (std::string *)google::protobuf::UnknownFieldSet::AddLengthDelimited(v67, *(_DWORD *)(FieldByName + 68));
        std::string::operator=(v149, (const std::string *)(v148 & 0xFFFFFFFFFFFFFFFELL));
        goto LABEL_338;
      case 10:
      case 11:
        if ((google::protobuf::DescriptorBuilder::OptionInterpreter::SetAggregateOption((google::protobuf::DescriptorBuilder::OptionInterpreter *)a1, (const google::protobuf::FieldDescriptor *)FieldByName, v67) & 1) != 0)goto LABEL_338;
        goto LABEL_461;
      case 14:
        if ((*(_BYTE *)(*(_QWORD *)(a1 + 16) + 16) & 1) == 0)
          goto LABEL_330;
        v132 = (google::protobuf::DescriptorPool *)google::protobuf::FieldDescriptor::enum_type((google::protobuf::FieldDescriptor *)FieldByName);
        v133 = *(_QWORD *)(*(_QWORD *)(a1 + 16) + 48);
        v134 = *(_QWORD *)(*((_QWORD *)v132 + 2) + 16);
        v135 = google::protobuf::DescriptorPool::internal_generated_pool(v132);
        google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0);
        v137 = v133 & 0xFFFFFFFFFFFFFFFELL;
        if (v134 == v135)
        {
          ValueByName = google::protobuf::EnumDescriptor::FindValueByName((uint64_t)v132, (uint64_t *)v137, v136);
LABEL_302:
          if (!ValueByName)
          {
            google::protobuf::FieldDescriptor::enum_type((google::protobuf::FieldDescriptor *)FieldByName);
            std::operator+<char>();
            v187 = std::string::append(&v304, "\" has no value named \"");
            v188 = *(_OWORD *)&v187->__r_.__value_.__l.__data_;
            v305.__r_.__value_.__r.__words[2] = v187->__r_.__value_.__r.__words[2];
            *(_OWORD *)&v305.__r_.__value_.__l.__data_ = v188;
            v187->__r_.__value_.__l.__size_ = 0;
            v187->__r_.__value_.__r.__words[2] = 0;
            v187->__r_.__value_.__r.__words[0] = 0;
            v189 = *(char *)(v137 + 23);
            if (v189 >= 0)
              v190 = (const std::string::value_type *)v137;
            else
              v190 = *(const std::string::value_type **)v137;
            if (v189 >= 0)
              v191 = *(unsigned __int8 *)(v137 + 23);
            else
              v191 = *(_QWORD *)(v137 + 8);
            v192 = std::string::append(&v305, v190, v191);
            v193 = *(_OWORD *)&v192->__r_.__value_.__l.__data_;
            v306.__r_.__value_.__r.__words[2] = v192->__r_.__value_.__r.__words[2];
            *(_OWORD *)&v306.__r_.__value_.__l.__data_ = v193;
            v192->__r_.__value_.__l.__size_ = 0;
            v192->__r_.__value_.__r.__words[2] = 0;
            v192->__r_.__value_.__r.__words[0] = 0;
            v194 = std::string::append(&v306, "\" for option \"");
            v195 = *(_OWORD *)&v194->__r_.__value_.__l.__data_;
            v307.__r_.__value_.__r.__words[2] = v194->__r_.__value_.__r.__words[2];
            *(_OWORD *)&v307.__r_.__value_.__l.__data_ = v195;
            v194->__r_.__value_.__l.__size_ = 0;
            v194->__r_.__value_.__r.__words[2] = 0;
            v194->__r_.__value_.__r.__words[0] = 0;
            v196 = *(_QWORD *)(FieldByName + 8);
            v197 = *(char *)(v196 + 23);
            if (v197 >= 0)
              v198 = *(const std::string::value_type **)(FieldByName + 8);
            else
              v198 = *(const std::string::value_type **)v196;
            if (v197 >= 0)
              v199 = *(unsigned __int8 *)(v196 + 23);
            else
              v199 = *(_QWORD *)(v196 + 8);
            v200 = std::string::append(&v307, v198, v199);
            v201 = *(_OWORD *)&v200->__r_.__value_.__l.__data_;
            v293.__r_.__value_.__r.__words[2] = v200->__r_.__value_.__r.__words[2];
            *(_OWORD *)&v293.__r_.__value_.__l.__data_ = v201;
            v200->__r_.__value_.__l.__size_ = 0;
            v200->__r_.__value_.__r.__words[2] = 0;
            v200->__r_.__value_.__r.__words[0] = 0;
            v202 = std::string::append(&v293, "\".");
            v203 = *(_OWORD *)&v202->__r_.__value_.__l.__data_;
            v308.__r_.__value_.__r.__words[2] = v202->__r_.__value_.__r.__words[2];
            *(_OWORD *)&v308.__r_.__value_.__l.__data_ = v203;
            v202->__r_.__value_.__l.__size_ = 0;
            v202->__r_.__value_.__r.__words[2] = 0;
            v202->__r_.__value_.__r.__words[0] = 0;
            google::protobuf::DescriptorBuilder::AddError(*(_QWORD *)a1, *(_QWORD *)(a1 + 8) + 24, *(_QWORD *)(a1 + 16), 8, (uint64_t)&v308);
            if (SHIBYTE(v308.__r_.__value_.__r.__words[2]) < 0)
              operator delete(v308.__r_.__value_.__l.__data_);
            if (SHIBYTE(v293.__r_.__value_.__r.__words[2]) < 0)
              operator delete(v293.__r_.__value_.__l.__data_);
            if (SHIBYTE(v307.__r_.__value_.__r.__words[2]) < 0)
              operator delete(v307.__r_.__value_.__l.__data_);
            if (SHIBYTE(v306.__r_.__value_.__r.__words[2]) < 0)
              operator delete(v306.__r_.__value_.__l.__data_);
            if (SHIBYTE(v305.__r_.__value_.__r.__words[2]) < 0)
              operator delete(v305.__r_.__value_.__l.__data_);
            if (SHIBYTE(v304.__r_.__value_.__r.__words[2]) < 0)
            {
              v204 = (void *)v304.__r_.__value_.__r.__words[0];
LABEL_334:
              operator delete(v204);
            }
LABEL_461:
            std::default_delete<google::protobuf::UnknownFieldSet>::operator()[abi:ne180100](v67);
          }
          v161 = *(int *)(ValueByName + 16);
LABEL_337:
          google::protobuf::UnknownFieldSet::AddVarint(v67, *(_DWORD *)(FieldByName + 68), v161);
LABEL_338:
          v207 = v300;
          if (v300 != v299)
          {
            v208 = v67;
            v209 = (google::protobuf::UnknownFieldSet *)operator new();
            *(_QWORD *)v209 = 0;
            *((_QWORD *)v209 + 1) = 0;
            *((_QWORD *)v209 + 2) = 0;
            v210 = *(v207 - 1);
            v211 = *(unint64_t **)(v210 + 48);
            if (v211)
            {
              v307.__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FieldDescriptor::TypeOnceInit;
              v306.__r_.__value_.__r.__words[0] = v210;
              v212 = atomic_load(v211);
              if (v212 != -1)
              {
                v308.__r_.__value_.__r.__words[0] = (std::string::size_type)&v307;
                v308.__r_.__value_.__l.__size_ = (std::string::size_type)&v306;
                v293.__r_.__value_.__r.__words[0] = (std::string::size_type)&v308;
                std::__call_once(v211, &v293, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
              }
            }
            v213 = *(_DWORD *)(v210 + 56);
            if (v213 == 10)
            {
              v218 = (void **)google::protobuf::UnknownFieldSet::AddGroup(v209, *(_DWORD *)(*(v207 - 1) + 68));
              google::protobuf::UnknownFieldSet::InternalMergeFrom(v218, v208);
            }
            else
            {
              if (v213 != 11)
              {
                LODWORD(v293.__r_.__value_.__l.__data_) = 3;
                v293.__r_.__value_.__l.__size_ = (std::string::size_type)"/Library/Caches/com.apple.xbs/Sources/GeoServic"
                                                                         "es/libprotobuf/src/google/protobuf/descriptor.cc";
                LODWORD(v293.__r_.__value_.__r.__words[2]) = 6657;
                memset(&__p, 0, sizeof(__p));
                std::string::append(&__p, "Invalid wire type for CPPTYPE_MESSAGE: ");
                v239 = *(v207 - 1);
                v240 = *(unint64_t **)(v239 + 48);
                if (v240)
                {
                  v306.__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FieldDescriptor::TypeOnceInit;
                  v305.__r_.__value_.__r.__words[0] = v239;
                  v241 = atomic_load(v240);
                  if (v241 != -1)
                  {
                    v308.__r_.__value_.__r.__words[0] = (std::string::size_type)&v306;
                    v308.__r_.__value_.__l.__size_ = (std::string::size_type)&v305;
                    v307.__r_.__value_.__r.__words[0] = (std::string::size_type)&v308;
                    std::__call_once(v240, &v307, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
                  }
                }
                snprintf((char *)&v308, 0x80uLL, "%d", *(_DWORD *)(v239 + 56));
                v312 = 0;
                std::string::append(&__p, (const std::string::value_type *)&v308);
                google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v293);
                if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
                  operator delete(__p.__r_.__value_.__l.__data_);
                std::default_delete<google::protobuf::UnknownFieldSet>::operator()[abi:ne180100](v209);
              }
              v214 = google::protobuf::UnknownFieldSet::AddLengthDelimited(v209, *(_DWORD *)(*(v207 - 1) + 68));
              v307.__r_.__value_.__r.__words[0] = (std::string::size_type)&off_1E1BF87E8;
              v307.__r_.__value_.__l.__size_ = (std::string::size_type)v214;
              google::protobuf::io::CodedOutputStream::CodedOutputStream((uint64_t)&v308, (uint64_t)&v307, 1);
              v311 = google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray(v208, v311, (google::protobuf::io::EpsCopyOutputStream *)&v308, v215);
              v311 = (const google::protobuf::UnknownFieldSet *)google::protobuf::io::EpsCopyOutputStream::FlushAndResetBuffer((google::protobuf::io::EpsCopyOutputStream *)&v308, (unsigned __int8 *)v311);
              if (v310)
              {
                LODWORD(v293.__r_.__value_.__l.__data_) = 3;
                v293.__r_.__value_.__l.__size_ = (std::string::size_type)"/Library/Caches/com.apple.xbs/Sources/GeoServic"
                                                                         "es/libprotobuf/src/google/protobuf/descriptor.cc";
                LODWORD(v293.__r_.__value_.__r.__words[2]) = 6644;
                memset(&__p, 0, sizeof(__p));
                std::string::append(&__p, "CHECK failed: !out.HadError(): ");
                std::string::append(&__p, "Unexpected failure while serializing option submessage ");
                v216 = (__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
                     ? &__str
                     : (std::string *)__str.__r_.__value_.__r.__words[0];
                v217 = (__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
                     ? HIBYTE(__str.__r_.__value_.__r.__words[2])
                     : __str.__r_.__value_.__l.__size_;
                std::string::append(&__p, (const std::string::value_type *)v216, v217);
                std::string::append(&__p, "\".");
                google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v293);
                if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
                  operator delete(__p.__r_.__value_.__l.__data_);
              }
              google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)&v308);
            }
            std::default_delete<google::protobuf::UnknownFieldSet>::operator()[abi:ne180100](v208);
          }
          (*(void (**)(google::protobuf::Message *))(*(_QWORD *)v292 + 152))(v292);
          v220 = (uint64_t *)((char *)v292 + *(unsigned int *)(v219 + 36));
          if ((*v220 & 1) != 0)
            v221 = (void **)((*v220 & 0xFFFFFFFFFFFFFFFELL) + 8);
          else
            v221 = (void **)google::protobuf::internal::InternalMetadata::mutable_unknown_fields_slow<google::protobuf::UnknownFieldSet>(v220);
          google::protobuf::UnknownFieldSet::InternalMergeFrom(v221, v67);
          if (*(_DWORD *)(FieldByName + 60) != 3)
            goto LABEL_412;
          v223 = v295;
          v222 = v296;
          v225 = (uint64_t **)(a1 + 56);
          v224 = *(uint64_t **)(a1 + 56);
          if (v224)
          {
            while (1)
            {
              while (1)
              {
                v226 = (uint64_t **)v224;
                v227 = (uint64_t *)v224[4];
                v228 = v226[5];
                if (v227 == v228)
                  break;
                v229 = (uint64_t *)((char *)v227 + 4);
                v230 = (char *)v295;
                while (v230 != v296)
                {
                  v231 = *(_DWORD *)v230;
                  v232 = *((_DWORD *)v229 - 1);
                  if (*(_DWORD *)v230 < v232)
                    break;
                  v230 += 4;
                  v233 = v232 < v231 || v229 == v228;
                  v229 = (uint64_t *)((char *)v229 + 4);
                  if (v233)
                    goto LABEL_369;
                }
                v224 = *v226;
                v225 = v226;
                if (!*v226)
                  goto LABEL_392;
              }
LABEL_369:
              if (v295 == v296)
                break;
              v234 = (char *)v295 + 4;
              while (v227 != v228)
              {
                v235 = *(_DWORD *)v227;
                v236 = *((_DWORD *)v234 - 1);
                if (*(_DWORD *)v227 < v236)
                  break;
                v227 = (uint64_t *)((char *)v227 + 4);
                v237 = v236 < v235 || v234 == v296;
                v234 += 4;
                if (v237)
                  goto LABEL_383;
              }
              v225 = v226 + 1;
              v224 = v226[1];
              if (!v224)
                goto LABEL_392;
            }
LABEL_383:
            if (v226)
            {
              v238 = v226;
LABEL_395:
              v244 = v238[14];
              v238[14] = v244 + 1;
              if (v222 >= v297)
              {
                v246 = (char *)v295;
                v247 = (v222 - (_BYTE *)v295) >> 2;
                v248 = v247 + 1;
                if ((unint64_t)(v247 + 1) >> 62)
                  std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
                v249 = v297 - (_BYTE *)v295;
                if ((v297 - (_BYTE *)v295) >> 1 > v248)
                  v248 = v249 >> 1;
                if ((unint64_t)v249 >= 0x7FFFFFFFFFFFFFFCLL)
                  v250 = 0x3FFFFFFFFFFFFFFFLL;
                else
                  v250 = v248;
                if (v250)
                {
                  v251 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<unsigned int>>((uint64_t)&v297, v250);
                  v246 = (char *)v295;
                  v222 = v296;
                }
                else
                {
                  v251 = 0;
                }
                v252 = &v251[4 * v247];
                v253 = &v251[4 * v250];
                *(_DWORD *)v252 = v244;
                v245 = v252 + 4;
                while (v222 != v246)
                {
                  v254 = *((_DWORD *)v222 - 1);
                  v222 -= 4;
                  *((_DWORD *)v252 - 1) = v254;
                  v252 -= 4;
                }
                v295 = v252;
                v296 = v245;
                v297 = v253;
                if (v246)
                  operator delete(v246);
              }
              else
              {
                *(_DWORD *)v222 = v244;
                v245 = v222 + 4;
              }
              v296 = v245;
LABEL_412:
              v255 = *(char **)v291;
              v256 = *(_QWORD *)(v291 + 8);
              v257 = *(_QWORD *)(a1 + 32);
              v258 = (uint64_t **)(a1 + 32);
              v259 = a1 + 32;
              if (!v257)
                goto LABEL_438;
              v258 = (uint64_t **)(a1 + 32);
              while (1)
              {
                while (1)
                {
                  v259 = v257;
                  v260 = *(int **)(v257 + 32);
                  v261 = *(int **)(v259 + 40);
                  if (v260 == v261)
                    break;
                  v262 = v260 + 1;
                  v263 = *(char **)v291;
                  while (v263 != (char *)v256)
                  {
                    v264 = *(_DWORD *)v263;
                    v265 = *(v262 - 1);
                    if (*(_DWORD *)v263 < v265)
                      break;
                    v263 += 4;
                    if (v265 < v264 || v262++ == v261)
                      goto LABEL_423;
                  }
                  v257 = *(_QWORD *)v259;
                  v258 = (uint64_t **)v259;
                  if (!*(_QWORD *)v259)
                    goto LABEL_438;
                }
LABEL_423:
                if (v255 == (char *)v256)
                  break;
                v267 = v255 + 4;
                while (v260 != v261)
                {
                  v268 = *v260;
                  v269 = *((_DWORD *)v267 - 1);
                  if (*v260 < v269)
                    break;
                  ++v260;
                  v270 = v269 < v268 || v267 == (char *)v256;
                  v267 += 4;
                  if (v270)
                    goto LABEL_437;
                }
                v258 = (uint64_t **)(v259 + 8);
                v257 = *(_QWORD *)(v259 + 8);
                if (!v257)
                  goto LABEL_438;
              }
LABEL_437:
              if (!v259)
              {
LABEL_438:
                v271 = (uint64_t *)operator new(0x50uLL);
                v308.__r_.__value_.__r.__words[0] = (std::string::size_type)v271;
                v308.__r_.__value_.__l.__size_ = a1 + 32;
                v308.__r_.__value_.__s.__data_[16] = 0;
                v271[5] = 0;
                v271[6] = 0;
                v271[4] = 0;
                std::vector<int>::__init_with_size[abi:ne180100]<int *,int *>(v271 + 4, v255, v256, (v256 - (uint64_t)v255) >> 2);
                v271[8] = 0;
                v271[9] = 0;
                v271[7] = 0;
                v308.__r_.__value_.__s.__data_[16] = 1;
                *v271 = 0;
                v271[1] = 0;
                v271[2] = v259;
                *v258 = v271;
                v272 = **(_QWORD **)(a1 + 24);
                if (v272)
                {
                  *(_QWORD *)(a1 + 24) = v272;
                  v271 = *v258;
                }
                std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(*(uint64_t **)(a1 + 32), v271);
                ++*(_QWORD *)(a1 + 40);
                v259 = v308.__r_.__value_.__r.__words[0];
                v308.__r_.__value_.__r.__words[0] = 0;
                std::unique_ptr<std::__tree_node<std::__value_type<std::vector<int>,std::vector<int>>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<std::vector<int>,std::vector<int>>,void *>>>>::reset[abi:ne180100]((uint64_t)&v308);
              }
              if ((void **)(v259 + 56) == &v295)
                goto LABEL_461;
              v273 = (char *)v295;
              v274 = v296;
              v275 = v296 - (_BYTE *)v295;
              v276 = (v296 - (_BYTE *)v295) >> 2;
              v277 = *(_QWORD *)(v259 + 72);
              v278 = *(char **)(v259 + 56);
              if (v276 <= (v277 - (uint64_t)v278) >> 2)
              {
                v284 = *(char **)(v259 + 64);
                v281 = (void **)(v259 + 64);
                v283 = v284;
                v285 = v284 - v278;
                v286 = (v284 - v278) >> 2;
                if (v286 < v276)
                {
                  v287 = (char *)v295 + 4 * v286;
                  if (v283 != v278)
                  {
                    memmove(v278, v295, v285);
                    v278 = (char *)*v281;
                  }
                  v275 = v274 - v287;
                  if (v274 == v287)
                    goto LABEL_460;
                  v288 = v278;
                  v289 = v287;
                  goto LABEL_459;
                }
              }
              else
              {
                if (v278)
                {
                  *(_QWORD *)(v259 + 64) = v278;
                  operator delete(v278);
                  v277 = 0;
                  *(_QWORD *)(v259 + 56) = 0;
                  *(_QWORD *)(v259 + 64) = 0;
                  *(_QWORD *)(v259 + 72) = 0;
                }
                if ((v275 & 0x8000000000000000) != 0)
                  std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
                v279 = v277 >> 1;
                if (v277 >> 1 <= v276)
                  v279 = v276;
                if ((unint64_t)v277 >= 0x7FFFFFFFFFFFFFFCLL)
                  v280 = 0x3FFFFFFFFFFFFFFFLL;
                else
                  v280 = v279;
                std::vector<int>::__vallocate[abi:ne180100]((_QWORD *)(v259 + 56), v280);
                v282 = *(char **)(v259 + 64);
                v281 = (void **)(v259 + 64);
                v278 = v282;
              }
              if (v274 == v273)
              {
LABEL_460:
                *v281 = &v278[v275];
                goto LABEL_461;
              }
              v288 = v278;
              v289 = v273;
LABEL_459:
              memmove(v288, v289, v275);
              goto LABEL_460;
            }
          }
          else
          {
            v226 = (uint64_t **)(a1 + 56);
          }
LABEL_392:
          v238 = operator new(0x40uLL);
          *((_QWORD *)v238 + 4) = 0;
          *((_QWORD *)v238 + 5) = 0;
          *((_QWORD *)v238 + 6) = 0;
          std::vector<int>::__init_with_size[abi:ne180100]<int *,int *>((_QWORD *)v238 + 4, v223, (uint64_t)v222, (v222 - (_BYTE *)v223) >> 2);
          v238[14] = 0;
          *(_QWORD *)v238 = 0;
          *((_QWORD *)v238 + 1) = 0;
          *((_QWORD *)v238 + 2) = v226;
          *v225 = (uint64_t *)v238;
          v242 = **(_QWORD **)(a1 + 48);
          v243 = (uint64_t *)v238;
          if (v242)
          {
            *(_QWORD *)(a1 + 48) = v242;
            v243 = *v225;
          }
          std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(*(uint64_t **)(a1 + 56), v243);
          ++*(_QWORD *)(a1 + 64);
          v222 = v296;
          goto LABEL_395;
        }
        v138 = (__int128 *)*((_QWORD *)v132 + 1);
        if (*((char *)v138 + 23) < 0)
        {
          std::string::__init_copy_ctor_external(&v308, *(const std::string::value_type **)v138, *((_QWORD *)v138 + 1));
        }
        else
        {
          v139 = *v138;
          v308.__r_.__value_.__r.__words[2] = *((_QWORD *)v138 + 2);
          *(_OWORD *)&v308.__r_.__value_.__l.__data_ = v139;
        }
        size = HIBYTE(v308.__r_.__value_.__r.__words[2]);
        if ((v308.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
          size = v308.__r_.__value_.__l.__size_;
        if (*(char *)(*(_QWORD *)v132 + 23) < 0)
          v164 = *(_QWORD *)(*(_QWORD *)v132 + 8);
        else
          v164 = *(unsigned __int8 *)(*(_QWORD *)v132 + 23);
        std::string::resize(&v308, size - v164, 0);
        v165 = *(char *)(v137 + 23);
        if (v165 >= 0)
          v166 = (const std::string::value_type *)v137;
        else
          v166 = *(const std::string::value_type **)v137;
        if (v165 >= 0)
          v167 = *(unsigned __int8 *)(v137 + 23);
        else
          v167 = *(_QWORD *)(v137 + 8);
        std::string::append(&v308, v166, v167);
        if (google::protobuf::DescriptorBuilder::FindSymbolNotEnforcingDeps(*(_QWORD *)a1, (uint64_t *)&v308, 1) == 5)
        {
          ValueByName = v168;
          if (*(google::protobuf::DescriptorPool **)(v168 + 24) != v132)
          {
            std::operator+<char>();
            v169 = std::string::append(&v303, "\" has no value named \"");
            v170 = *(_OWORD *)&v169->__r_.__value_.__l.__data_;
            v304.__r_.__value_.__r.__words[2] = v169->__r_.__value_.__r.__words[2];
            *(_OWORD *)&v304.__r_.__value_.__l.__data_ = v170;
            v169->__r_.__value_.__l.__size_ = 0;
            v169->__r_.__value_.__r.__words[2] = 0;
            v169->__r_.__value_.__r.__words[0] = 0;
            v171 = *(char *)(v137 + 23);
            if (v171 >= 0)
              v172 = (const std::string::value_type *)v137;
            else
              v172 = *(const std::string::value_type **)v137;
            if (v171 >= 0)
              v173 = *(unsigned __int8 *)(v137 + 23);
            else
              v173 = *(_QWORD *)(v137 + 8);
            v174 = std::string::append(&v304, v172, v173);
            v175 = *(_OWORD *)&v174->__r_.__value_.__l.__data_;
            v305.__r_.__value_.__r.__words[2] = v174->__r_.__value_.__r.__words[2];
            *(_OWORD *)&v305.__r_.__value_.__l.__data_ = v175;
            v174->__r_.__value_.__l.__size_ = 0;
            v174->__r_.__value_.__r.__words[2] = 0;
            v174->__r_.__value_.__r.__words[0] = 0;
            v176 = std::string::append(&v305, "\" for option \"");
            v177 = *(_OWORD *)&v176->__r_.__value_.__l.__data_;
            v306.__r_.__value_.__r.__words[2] = v176->__r_.__value_.__r.__words[2];
            *(_OWORD *)&v306.__r_.__value_.__l.__data_ = v177;
            v176->__r_.__value_.__l.__size_ = 0;
            v176->__r_.__value_.__r.__words[2] = 0;
            v176->__r_.__value_.__r.__words[0] = 0;
            v178 = *(_QWORD *)(FieldByName + 8);
            v179 = *(char *)(v178 + 23);
            if (v179 >= 0)
              v180 = *(const std::string::value_type **)(FieldByName + 8);
            else
              v180 = *(const std::string::value_type **)v178;
            if (v179 >= 0)
              v181 = *(unsigned __int8 *)(v178 + 23);
            else
              v181 = *(_QWORD *)(v178 + 8);
            v182 = std::string::append(&v306, v180, v181);
            v183 = *(_OWORD *)&v182->__r_.__value_.__l.__data_;
            v307.__r_.__value_.__r.__words[2] = v182->__r_.__value_.__r.__words[2];
            *(_OWORD *)&v307.__r_.__value_.__l.__data_ = v183;
            v182->__r_.__value_.__l.__size_ = 0;
            v182->__r_.__value_.__r.__words[2] = 0;
            v182->__r_.__value_.__r.__words[0] = 0;
            v184 = std::string::append(&v307, "\". This appears to be a value from a sibling type.");
            v185 = *(_OWORD *)&v184->__r_.__value_.__l.__data_;
            v293.__r_.__value_.__r.__words[2] = v184->__r_.__value_.__r.__words[2];
            *(_OWORD *)&v293.__r_.__value_.__l.__data_ = v185;
            v184->__r_.__value_.__l.__size_ = 0;
            v184->__r_.__value_.__r.__words[2] = 0;
            v184->__r_.__value_.__r.__words[0] = 0;
            google::protobuf::DescriptorBuilder::AddError(*(_QWORD *)a1, *(_QWORD *)(a1 + 8) + 24, *(_QWORD *)(a1 + 16), 8, (uint64_t)&v293);
            if (SHIBYTE(v293.__r_.__value_.__r.__words[2]) < 0)
              operator delete(v293.__r_.__value_.__l.__data_);
            if (SHIBYTE(v307.__r_.__value_.__r.__words[2]) < 0)
              operator delete(v307.__r_.__value_.__l.__data_);
            if (SHIBYTE(v306.__r_.__value_.__r.__words[2]) < 0)
              operator delete(v306.__r_.__value_.__l.__data_);
            if (SHIBYTE(v305.__r_.__value_.__r.__words[2]) < 0)
              operator delete(v305.__r_.__value_.__l.__data_);
            if (SHIBYTE(v304.__r_.__value_.__r.__words[2]) < 0)
              operator delete(v304.__r_.__value_.__l.__data_);
            if (SHIBYTE(v303.__r_.__value_.__r.__words[2]) < 0)
              operator delete(v303.__r_.__value_.__l.__data_);
            v186 = 0;
            ValueByName = 0;
LABEL_299:
            if (SHIBYTE(v308.__r_.__value_.__r.__words[2]) < 0)
              operator delete(v308.__r_.__value_.__l.__data_);
            if ((v186 & 1) == 0)
              goto LABEL_461;
            goto LABEL_302;
          }
        }
        else
        {
          ValueByName = 0;
        }
        v186 = 1;
        goto LABEL_299;
      default:
        goto LABEL_338;
    }
  }
  v20 = 0;
  FieldByName = 0;
  while (1)
  {
    v22 = *(_QWORD *)a1;
    if (*(char *)(*(_QWORD *)a1 + 199) < 0)
    {
      **(_BYTE **)(v22 + 176) = 0;
      *(_QWORD *)(v22 + 184) = 0;
    }
    else
    {
      *(_BYTE *)(v22 + 176) = 0;
      *(_BYTE *)(v22 + 199) = 0;
    }
    v23 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 16) + 40) + 8 * v20 + 8);
    v24 = *(_QWORD *)(v23 + 24);
    v25 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
    if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
      v25 = __str.__r_.__value_.__l.__size_;
    if (v25)
    {
      std::string::append(&__str, ".");
      v23 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 16) + 40) + 8 * v20 + 8);
    }
    v26 = v24 & 0xFFFFFFFFFFFFFFFELL;
    if (*(_BYTE *)(v23 + 32))
      break;
    v32 = *(char *)(v26 + 23);
    if (v32 >= 0)
      v33 = (const std::string::value_type *)v26;
    else
      v33 = *(const std::string::value_type **)v26;
    if (v32 >= 0)
      v34 = *(unsigned __int8 *)(v26 + 23);
    else
      v34 = *(_QWORD *)(v26 + 8);
    std::string::append(&__str, v33, v34);
    FieldByName = google::protobuf::Descriptor::FindFieldByName((uint64_t)v19, (uint64_t *)v26, v35);
    if (!FieldByName)
      goto LABEL_110;
LABEL_52:
    v36 = *(_QWORD *)(FieldByName + 80);
    if ((const std::string::value_type **)v36 != v19)
    {
      if (v36 && *(_BYTE *)(v36 + 140))
        goto LABEL_115;
      std::operator+<char>();
      v83 = std::string::append(&v306, "\" is not a field or extension of message \"");
      v84 = *(_OWORD *)&v83->__r_.__value_.__l.__data_;
      v307.__r_.__value_.__r.__words[2] = v83->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v307.__r_.__value_.__l.__data_ = v84;
      v83->__r_.__value_.__l.__size_ = 0;
      v83->__r_.__value_.__r.__words[2] = 0;
      v83->__r_.__value_.__r.__words[0] = 0;
      v85 = (*v19)[23];
      if (v85 >= 0)
        v86 = *v19;
      else
        v86 = *(const std::string::value_type **)*v19;
      if (v85 >= 0)
        v87 = *((unsigned __int8 *)*v19 + 23);
      else
        v87 = *((_QWORD *)*v19 + 1);
      v88 = std::string::append(&v307, v86, v87);
      v89 = *(_OWORD *)&v88->__r_.__value_.__l.__data_;
      v293.__r_.__value_.__r.__words[2] = v88->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v293.__r_.__value_.__l.__data_ = v89;
      v88->__r_.__value_.__l.__size_ = 0;
      v88->__r_.__value_.__r.__words[2] = 0;
      v88->__r_.__value_.__r.__words[0] = 0;
      v90 = std::string::append(&v293, "\".");
      v91 = *(_OWORD *)&v90->__r_.__value_.__l.__data_;
      v308.__r_.__value_.__r.__words[2] = v90->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v308.__r_.__value_.__l.__data_ = v91;
      v90->__r_.__value_.__l.__size_ = 0;
      v90->__r_.__value_.__r.__words[2] = 0;
      v90->__r_.__value_.__r.__words[0] = 0;
      google::protobuf::DescriptorBuilder::AddError(*(_QWORD *)a1, *(_QWORD *)(a1 + 8) + 24, *(_QWORD *)(a1 + 16), 7, (uint64_t)&v308);
      if (SHIBYTE(v308.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v308.__r_.__value_.__l.__data_);
      if (SHIBYTE(v293.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v293.__r_.__value_.__l.__data_);
      if (SHIBYTE(v307.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v307.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v306.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        goto LABEL_199;
      v92 = (void *)v306.__r_.__value_.__r.__words[0];
      goto LABEL_198;
    }
    v37 = *(_DWORD *)(FieldByName + 68);
    v38 = v296;
    if (v296 >= v297)
    {
      v40 = (char *)v295;
      v41 = (v296 - (_BYTE *)v295) >> 2;
      v42 = v41 + 1;
      if ((unint64_t)(v41 + 1) >> 62)
        std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
      v43 = v297 - (_BYTE *)v295;
      if ((v297 - (_BYTE *)v295) >> 1 > v42)
        v42 = v43 >> 1;
      if ((unint64_t)v43 >= 0x7FFFFFFFFFFFFFFCLL)
        v44 = 0x3FFFFFFFFFFFFFFFLL;
      else
        v44 = v42;
      if (v44)
      {
        v45 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<unsigned int>>((uint64_t)&v297, v44);
        v40 = (char *)v295;
        v38 = v296;
      }
      else
      {
        v45 = 0;
      }
      v46 = &v45[4 * v41];
      *(_DWORD *)v46 = v37;
      v39 = v46 + 4;
      while (v38 != v40)
      {
        v47 = *((_DWORD *)v38 - 1);
        v38 -= 4;
        *((_DWORD *)v46 - 1) = v47;
        v46 -= 4;
      }
      v295 = v46;
      v296 = v39;
      v297 = &v45[4 * v44];
      if (v40)
        operator delete(v40);
    }
    else
    {
      *(_DWORD *)v296 = v37;
      v39 = v38 + 4;
    }
    v296 = v39;
    v48 = *(int *)(*(_QWORD *)(a1 + 16) + 32);
    if (v20 >= v48 - 1)
      goto LABEL_92;
    v49 = *(unint64_t **)(FieldByName + 48);
    if (v49)
    {
      v307.__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FieldDescriptor::TypeOnceInit;
      v306.__r_.__value_.__r.__words[0] = FieldByName;
      v50 = atomic_load(v49);
      if (v50 != -1)
      {
        v308.__r_.__value_.__r.__words[0] = (std::string::size_type)&v307;
        v308.__r_.__value_.__l.__size_ = (std::string::size_type)&v306;
        v293.__r_.__value_.__r.__words[0] = (std::string::size_type)&v308;
        std::__call_once(v49, &v293, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
      }
    }
    if ((*(_DWORD *)(FieldByName + 56) & 0xFFFFFFFE) != 0xA)
    {
      std::operator+<char>();
      v93 = std::string::append(&v293, "\" is an atomic type, not a message.");
      v94 = *(_OWORD *)&v93->__r_.__value_.__l.__data_;
      v308.__r_.__value_.__r.__words[2] = v93->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v308.__r_.__value_.__l.__data_ = v94;
      v93->__r_.__value_.__l.__size_ = 0;
      v93->__r_.__value_.__r.__words[2] = 0;
      v93->__r_.__value_.__r.__words[0] = 0;
      google::protobuf::DescriptorBuilder::AddError(*(_QWORD *)a1, *(_QWORD *)(a1 + 8) + 24, *(_QWORD *)(a1 + 16), 7, (uint64_t)&v308);
      goto LABEL_137;
    }
    if (*(_DWORD *)(FieldByName + 60) == 3)
    {
      std::operator+<char>();
      v95 = std::string::append(&v293, "\" is a repeated message. Repeated message options must be initialized using an aggregate value.");
      v96 = *(_OWORD *)&v95->__r_.__value_.__l.__data_;
      v308.__r_.__value_.__r.__words[2] = v95->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v308.__r_.__value_.__l.__data_ = v96;
      v95->__r_.__value_.__l.__size_ = 0;
      v95->__r_.__value_.__r.__words[2] = 0;
      v95->__r_.__value_.__r.__words[0] = 0;
      google::protobuf::DescriptorBuilder::AddError(*(_QWORD *)a1, *(_QWORD *)(a1 + 8) + 24, *(_QWORD *)(a1 + 16), 7, (uint64_t)&v308);
LABEL_137:
      if (SHIBYTE(v308.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v308.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v293.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        goto LABEL_199;
      v92 = (void *)v293.__r_.__value_.__r.__words[0];
LABEL_198:
      operator delete(v92);
      goto LABEL_199;
    }
    v51 = v300;
    if (v300 >= (uint64_t *)v301)
    {
      v53 = ((char *)v300 - (_BYTE *)v299) >> 3;
      if ((unint64_t)(v53 + 1) >> 61)
        std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
      v54 = (v301 - (_BYTE *)v299) >> 2;
      if (v54 <= v53 + 1)
        v54 = v53 + 1;
      if ((unint64_t)(v301 - (_BYTE *)v299) >= 0x7FFFFFFFFFFFFFF8)
        v55 = 0x1FFFFFFFFFFFFFFFLL;
      else
        v55 = v54;
      if (v55)
        v56 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<zilch::StringList::Entry>>((uint64_t)&v301, v55);
      else
        v56 = 0;
      v57 = (std::string::size_type *)&v56[8 * v53];
      *v57 = FieldByName;
      v52 = (uint64_t *)(v57 + 1);
      v59 = (char *)v299;
      v58 = (char *)v300;
      if (v300 != v299)
      {
        do
        {
          v60 = *((_QWORD *)v58 - 1);
          v58 -= 8;
          *--v57 = v60;
        }
        while (v58 != v59);
        v58 = (char *)v299;
      }
      v299 = v57;
      v300 = v52;
      v301 = &v56[8 * v55];
      if (v58)
        operator delete(v58);
    }
    else
    {
      *v300 = FieldByName;
      v52 = v51 + 1;
    }
    v300 = v52;
    v19 = (const std::string::value_type **)google::protobuf::FieldDescriptor::message_type((google::protobuf::FieldDescriptor *)FieldByName);
    LODWORD(v48) = *(_DWORD *)(*(_QWORD *)(a1 + 16) + 32);
LABEL_92:
    if (++v20 >= (int)v48)
      goto LABEL_95;
  }
  std::operator+<char>();
  v27 = std::string::append(&v293, ")");
  v28 = *(_OWORD *)&v27->__r_.__value_.__l.__data_;
  v308.__r_.__value_.__r.__words[2] = v27->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v308.__r_.__value_.__l.__data_ = v28;
  v27->__r_.__value_.__l.__size_ = 0;
  v27->__r_.__value_.__r.__words[2] = 0;
  v27->__r_.__value_.__r.__words[0] = 0;
  if ((v308.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v29 = &v308;
  else
    v29 = (std::string *)v308.__r_.__value_.__r.__words[0];
  if ((v308.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v30 = HIBYTE(v308.__r_.__value_.__r.__words[2]);
  else
    v30 = v308.__r_.__value_.__l.__size_;
  std::string::append(&__str, (const std::string::value_type *)v29, v30);
  if (SHIBYTE(v308.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v308.__r_.__value_.__l.__data_);
  if (SHIBYTE(v293.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v293.__r_.__value_.__l.__data_);
  if (google::protobuf::DescriptorBuilder::LookupSymbol(*(uint64_t **)a1, (std::string *)v26, *(_QWORD *)(a1 + 8), 0, 0, 1) == 2)FieldByName = v31;
  if (FieldByName)
    goto LABEL_52;
LABEL_110:
  v74 = *(_QWORD *)a1;
  if (*(_BYTE *)(**(_QWORD **)a1 + 42))
  {
LABEL_115:
    v76 = *(_QWORD *)(a1 + 16);
    v77 = (*(uint64_t (**)(google::protobuf::Message *))(*(_QWORD *)v292 + 152))(v292);
    std::string::basic_string[abi:ne180100]<0>(&v308, "uninterpreted_option");
    v79 = (unint64_t **)google::protobuf::Descriptor::FindFieldByName(v77, (uint64_t *)&v308, v78);
    if (SHIBYTE(v308.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v308.__r_.__value_.__l.__data_);
    if (!v79)
    {
      LODWORD(v308.__r_.__value_.__l.__data_) = 3;
      v308.__r_.__value_.__l.__size_ = (std::string::size_type)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libprot"
                                                               "obuf/src/google/protobuf/descriptor.cc";
      LODWORD(v308.__r_.__value_.__r.__words[2]) = 6776;
      memset(&v309, 0, sizeof(v309));
      std::string::append(&v309, "CHECK failed: field != nullptr: ");
      google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v308);
      if (SHIBYTE(v309.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v309.__r_.__value_.__l.__data_);
    }
    (*(void (**)(google::protobuf::Message *))(*(_QWORD *)v292 + 152))(v292);
    v82 = google::protobuf::Reflection::AddMessage(v80, v292, v79, 0, v81);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v82 + 112))(v82, v76);
    v73 = 1;
    goto LABEL_462;
  }
  if (*(char *)(v74 + 199) < 0)
    v75 = *(_QWORD *)(v74 + 184);
  else
    v75 = *(unsigned __int8 *)(v74 + 199);
  if (v75)
  {
    std::operator+<char>();
    v107 = std::string::append(&v304, "\" is resolved to \"(");
    v108 = *(_OWORD *)&v107->__r_.__value_.__l.__data_;
    v305.__r_.__value_.__r.__words[2] = v107->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v305.__r_.__value_.__l.__data_ = v108;
    v107->__r_.__value_.__l.__size_ = 0;
    v107->__r_.__value_.__r.__words[2] = 0;
    v107->__r_.__value_.__r.__words[0] = 0;
    v109 = *(char *)(*(_QWORD *)a1 + 199);
    if (v109 >= 0)
      v110 = (const std::string::value_type *)(*(_QWORD *)a1 + 176);
    else
      v110 = *(const std::string::value_type **)(*(_QWORD *)a1 + 176);
    if (v109 >= 0)
      v111 = *(unsigned __int8 *)(*(_QWORD *)a1 + 199);
    else
      v111 = *(_QWORD *)(*(_QWORD *)a1 + 184);
    v112 = std::string::append(&v305, v110, v111);
    v113 = *(_OWORD *)&v112->__r_.__value_.__l.__data_;
    v306.__r_.__value_.__r.__words[2] = v112->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v306.__r_.__value_.__l.__data_ = v113;
    v112->__r_.__value_.__l.__size_ = 0;
    v112->__r_.__value_.__r.__words[2] = 0;
    v112->__r_.__value_.__r.__words[0] = 0;
    v114 = std::string::append(&v306, ")\", which is not defined. The innermost scope is searched first in name resolution. Consider using a leading '.'(i.e., \"(.");
    v115 = *(_OWORD *)&v114->__r_.__value_.__l.__data_;
    v307.__r_.__value_.__r.__words[2] = v114->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v307.__r_.__value_.__l.__data_ = v115;
    v114->__r_.__value_.__l.__size_ = 0;
    v114->__r_.__value_.__r.__words[2] = 0;
    v114->__r_.__value_.__r.__words[0] = 0;
    std::string::basic_string(&v303, &__str, 1uLL, 0xFFFFFFFFFFFFFFFFLL, (std::allocator<char> *)&v302);
    if ((v303.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v116 = &v303;
    else
      v116 = (std::string *)v303.__r_.__value_.__r.__words[0];
    if ((v303.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v117 = HIBYTE(v303.__r_.__value_.__r.__words[2]);
    else
      v117 = v303.__r_.__value_.__l.__size_;
    v118 = std::string::append(&v307, (const std::string::value_type *)v116, v117);
    v119 = *(_OWORD *)&v118->__r_.__value_.__l.__data_;
    v293.__r_.__value_.__r.__words[2] = v118->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v293.__r_.__value_.__l.__data_ = v119;
    v118->__r_.__value_.__l.__size_ = 0;
    v118->__r_.__value_.__r.__words[2] = 0;
    v118->__r_.__value_.__r.__words[0] = 0;
    v120 = std::string::append(&v293, "\") to start from the outermost scope.");
    v121 = *(_OWORD *)&v120->__r_.__value_.__l.__data_;
    v308.__r_.__value_.__r.__words[2] = v120->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v308.__r_.__value_.__l.__data_ = v121;
    v120->__r_.__value_.__l.__size_ = 0;
    v120->__r_.__value_.__r.__words[2] = 0;
    v120->__r_.__value_.__r.__words[0] = 0;
    google::protobuf::DescriptorBuilder::AddError(*(_QWORD *)a1, *(_QWORD *)(a1 + 8) + 24, *(_QWORD *)(a1 + 16), 7, (uint64_t)&v308);
    if (SHIBYTE(v308.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v308.__r_.__value_.__l.__data_);
    if (SHIBYTE(v293.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v293.__r_.__value_.__l.__data_);
    if (SHIBYTE(v303.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v303.__r_.__value_.__l.__data_);
    if (SHIBYTE(v307.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v307.__r_.__value_.__l.__data_);
    if (SHIBYTE(v306.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v306.__r_.__value_.__l.__data_);
    if (SHIBYTE(v305.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v305.__r_.__value_.__l.__data_);
    if (SHIBYTE(v304.__r_.__value_.__r.__words[2]) < 0)
    {
      v92 = (void *)v304.__r_.__value_.__r.__words[0];
      goto LABEL_198;
    }
  }
  else
  {
    std::operator+<char>();
    v122 = std::string::append(&v307, "\" unknown. Ensure that your proto");
    v123 = *(_OWORD *)&v122->__r_.__value_.__l.__data_;
    v293.__r_.__value_.__r.__words[2] = v122->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v293.__r_.__value_.__l.__data_ = v123;
    v122->__r_.__value_.__l.__size_ = 0;
    v122->__r_.__value_.__r.__words[2] = 0;
    v122->__r_.__value_.__r.__words[0] = 0;
    v124 = std::string::append(&v293, " definition file imports the proto which defines the option.");
    v125 = *(_OWORD *)&v124->__r_.__value_.__l.__data_;
    v308.__r_.__value_.__r.__words[2] = v124->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v308.__r_.__value_.__l.__data_ = v125;
    v124->__r_.__value_.__l.__size_ = 0;
    v124->__r_.__value_.__r.__words[2] = 0;
    v124->__r_.__value_.__r.__words[0] = 0;
    google::protobuf::DescriptorBuilder::AddError(*(_QWORD *)a1, *(_QWORD *)(a1 + 8) + 24, *(_QWORD *)(a1 + 16), 7, (uint64_t)&v308);
    if (SHIBYTE(v308.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v308.__r_.__value_.__l.__data_);
    if (SHIBYTE(v293.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v293.__r_.__value_.__l.__data_);
    if (SHIBYTE(v307.__r_.__value_.__r.__words[2]) < 0)
    {
      v92 = (void *)v307.__r_.__value_.__r.__words[0];
      goto LABEL_198;
    }
  }
LABEL_199:
  v73 = 0;
LABEL_462:
  if (v295)
  {
    v296 = (char *)v295;
    operator delete(v295);
  }
  if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__str.__r_.__value_.__l.__data_);
  if (v299)
  {
    v300 = (uint64_t *)v299;
    operator delete(v299);
  }
  return v73;
}

void sub_188886FCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, void *a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23,uint64_t a24,uint64_t a25,void *a26,uint64_t a27,uint64_t a28,void *a29,uint64_t a30,uint64_t a31,uint64_t a32,void *a33,uint64_t a34,int a35,__int16 a36,char a37,char a38,void *a39,uint64_t a40,int a41,__int16 a42,char a43,char a44,uint64_t a45,void *a46,uint64_t a47,int a48,__int16 a49,char a50,char a51,uint64_t a52,void *a53,uint64_t a54,int a55,__int16 a56,char a57,char a58)
{
  google::protobuf::UnknownFieldSet *v58;
  uint64_t v59;

  if (a18 < 0)
    operator delete(__p);
  if (*(char *)(v59 - 233) < 0)
    operator delete(*(void **)(v59 - 256));
  if (a58 < 0)
    operator delete(a53);
  if (a51 < 0)
    operator delete(a46);
  if (a44 < 0)
    operator delete(a39);
  if (a38 < 0)
    operator delete(a33);
  if (*(char *)(v59 - 201) < 0)
    operator delete(*(void **)(v59 - 224));
  std::default_delete<google::protobuf::UnknownFieldSet>::operator()[abi:ne180100](v58);
}

BOOL google::protobuf::DescriptorBuilder::OptionInterpreter::ExamineIfOptionIsSet(uint64_t *a1, uint64_t *a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _DWORD *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  int v20;
  _DWORD *v21;
  uint64_t *v22;
  int v23;
  int v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _DWORD *v29;
  int v30;
  _BOOL8 v31;
  uint64_t v33;
  uint64_t v34;
  int *v35;
  uint64_t v36;
  int v37;
  std::string *v38;
  __int128 v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  std::string __p;
  std::string v45;
  uint64_t v46;
  uint64_t (*v47)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);
  std::string::value_type __s[16];
  std::string::size_type v49;
  uint64_t v50;
  char v51;
  uint64_t v52;

  v52 = *MEMORY[0x1E0C80C00];
  v9 = *(_DWORD **)a6;
  v10 = *(_QWORD *)(a6 + 8) - *(_QWORD *)a6;
  v11 = (unint64_t)v10 >> 4;
  if (a2 != a3)
  {
    if ((int)v11 >= 1)
    {
      v15 = 0;
      v16 = a2 + 1;
      do
      {
        v17 = *a2;
        if (v9[4 * v15] == *(_DWORD *)(*a2 + 68))
        {
          v18 = *(unint64_t **)(v17 + 48);
          if (v18)
          {
            v46 = *a2;
            v47 = google::protobuf::FieldDescriptor::TypeOnceInit;
            v19 = atomic_load(v18);
            if (v19 != -1)
            {
              *(_QWORD *)__s = &v47;
              *(_QWORD *)&__s[8] = &v46;
              __p.__r_.__value_.__r.__words[0] = (std::string::size_type)__s;
              std::__call_once(v18, &__p, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
            }
          }
          v20 = *(_DWORD *)(v17 + 56);
          if (v20 == 10)
          {
            v29 = &v9[4 * v15];
            if (v29[1] == 4
              && (google::protobuf::DescriptorBuilder::OptionInterpreter::ExamineIfOptionIsSet(a1, v16, a3, a4, a5, *((_QWORD *)v29 + 1)) & 1) == 0)
            {
              return 0;
            }
          }
          else
          {
            if (v20 != 11)
            {
              LODWORD(__p.__r_.__value_.__l.__data_) = 3;
              __p.__r_.__value_.__l.__size_ = (std::string::size_type)"/Library/Caches/com.apple.xbs/Sources/GeoServices/"
                                                                      "libprotobuf/src/google/protobuf/descriptor.cc";
              LODWORD(__p.__r_.__value_.__r.__words[2]) = 6836;
              memset(&v45, 0, sizeof(v45));
              std::string::append(&v45, "Invalid wire type for CPPTYPE_MESSAGE: ");
              snprintf(__s, 0x80uLL, "%d", v20);
              v51 = 0;
              std::string::append(&v45, __s);
              google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&__p);
              if ((SHIBYTE(v45.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
                return 0;
              v40 = (void *)v45.__r_.__value_.__r.__words[0];
              goto LABEL_47;
            }
            v21 = &v9[4 * v15];
            if (v21[1] == 3)
            {
              memset(&__p, 0, sizeof(__p));
              v22 = (uint64_t *)*((_QWORD *)v21 + 1);
              v23 = *((unsigned __int8 *)v22 + 23);
              v24 = *((_DWORD *)v22 + 2);
              if ((v23 & 0x80u) != 0)
              {
                v22 = (uint64_t *)*v22;
                v23 = v24;
              }
              *(_QWORD *)__s = &off_1E1BF87A8;
              *(_QWORD *)&__s[8] = v22;
              LODWORD(v49) = v23;
              HIDWORD(v49) = v23;
              v50 = 0;
              if (google::protobuf::UnknownFieldSet::ParseFromZeroCopyStream((google::protobuf::UnknownFieldSet *)&__p, __s)&& (google::protobuf::DescriptorBuilder::OptionInterpreter::ExamineIfOptionIsSet(a1, v16, a3, a4, a5, &__p) & 1) == 0)
              {
                v40 = (void *)__p.__r_.__value_.__r.__words[0];
                if (__p.__r_.__value_.__r.__words[0] != __p.__r_.__value_.__l.__size_)
                {
                  v41 = (int)((uint64_t)(__p.__r_.__value_.__l.__size_ - __p.__r_.__value_.__r.__words[0]) >> 4);
                  v42 = v41 + 1;
                  v43 = 16 * v41 - 16;
                  do
                  {
                    google::protobuf::UnknownField::Delete(__p.__r_.__value_.__r.__words[0] + v43);
                    --v42;
                    v43 -= 16;
                  }
                  while (v42 > 1);
                  v40 = (void *)__p.__r_.__value_.__r.__words[0];
                }
                if (v40)
                {
                  __p.__r_.__value_.__l.__size_ = (std::string::size_type)v40;
LABEL_47:
                  operator delete(v40);
                }
                return 0;
              }
              v25 = (void *)__p.__r_.__value_.__r.__words[0];
              if (__p.__r_.__value_.__r.__words[0] != __p.__r_.__value_.__l.__size_)
              {
                v26 = (int)((uint64_t)(__p.__r_.__value_.__l.__size_ - __p.__r_.__value_.__r.__words[0]) >> 4);
                v27 = v26 + 1;
                v28 = 16 * v26 - 16;
                do
                {
                  google::protobuf::UnknownField::Delete(__p.__r_.__value_.__r.__words[0] + v28);
                  --v27;
                  v28 -= 16;
                }
                while (v27 > 1);
                v25 = (void *)__p.__r_.__value_.__r.__words[0];
              }
              if (v25)
              {
                __p.__r_.__value_.__l.__size_ = (std::string::size_type)v25;
                operator delete(v25);
              }
            }
          }
        }
        ++v15;
        v9 = *(_DWORD **)a6;
      }
      while (v15 < (int)((*(_QWORD *)(a6 + 8) - *(_QWORD *)a6) >> 4));
    }
    return 1;
  }
  if ((int)v11 < 1)
    return 1;
  v30 = *(_DWORD *)(a4 + 68);
  if (*v9 == v30)
  {
    v31 = 0;
  }
  else
  {
    v33 = (int)(v10 >> 4);
    v34 = ((unint64_t)v10 >> 4);
    v35 = v9 + 4;
    v36 = 1;
    do
    {
      if (v34 == v36)
        return v36 >= v33;
      v37 = *v35;
      v35 += 4;
      ++v36;
    }
    while (v37 != v30);
    v31 = v36 - 1 >= v33;
  }
  std::operator+<char>();
  v38 = std::string::append(&__p, "\" was already set.");
  v39 = *(_OWORD *)&v38->__r_.__value_.__l.__data_;
  v49 = v38->__r_.__value_.__r.__words[2];
  *(_OWORD *)__s = v39;
  v38->__r_.__value_.__l.__size_ = 0;
  v38->__r_.__value_.__r.__words[2] = 0;
  v38->__r_.__value_.__r.__words[0] = 0;
  google::protobuf::DescriptorBuilder::AddError(*a1, a1[1] + 24, a1[2], 7, (uint64_t)__s);
  if (SHIBYTE(v49) < 0)
    operator delete(*(void **)__s);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  return v31;
}

void sub_188887880(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22,uint64_t a23,uint64_t a24,void *a25,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  if (a22 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void google::protobuf::DescriptorBuilder::OptionInterpreter::SetInt32(unsigned int a1, int a2, int a3, google::protobuf::UnknownFieldSet *this)
{
  uint64_t v5;
  int v6;
  const char *v7;
  int v8;
  std::string __p;
  char __str[128];
  uint64_t v11;

  v11 = *MEMORY[0x1E0C80C00];
  switch(a3)
  {
    case 17:
      v5 = (2 * a2) ^ (a2 >> 31);
      goto LABEL_6;
    case 15:
      google::protobuf::UnknownFieldSet::AddFixed32(this, a1, a2);
      break;
    case 5:
      v5 = a2;
LABEL_6:
      google::protobuf::UnknownFieldSet::AddVarint(this, a1, v5);
      return;
    default:
      v6 = 3;
      v7 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/descriptor.cc";
      v8 = 7198;
      memset(&__p, 0, sizeof(__p));
      std::string::append(&__p, "Invalid wire type for CPPTYPE_INT32: ");
      snprintf(__str, 0x80uLL, "%d", a3);
      __str[127] = 0;
      std::string::append(&__p, __str);
      google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v6);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__p.__r_.__value_.__l.__data_);
      break;
  }
}

void sub_188887A50(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void google::protobuf::DescriptorBuilder::OptionInterpreter::SetInt64(unsigned int a1, uint64_t a2, int a3, google::protobuf::UnknownFieldSet *this)
{
  uint64_t v5;
  int v6;
  const char *v7;
  int v8;
  std::string __p;
  char __str[128];
  uint64_t v11;

  v5 = a2;
  v11 = *MEMORY[0x1E0C80C00];
  switch(a3)
  {
    case 18:
      v5 = (2 * a2) ^ (a2 >> 63);
LABEL_6:
      google::protobuf::UnknownFieldSet::AddVarint(this, a1, v5);
      return;
    case 16:
      google::protobuf::UnknownFieldSet::AddFixed64(this, a1, a2);
      break;
    case 3:
      goto LABEL_6;
    default:
      v6 = 3;
      v7 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/descriptor.cc";
      v8 = 7221;
      memset(&__p, 0, sizeof(__p));
      std::string::append(&__p, "Invalid wire type for CPPTYPE_INT64: ");
      snprintf(__str, 0x80uLL, "%d", a3);
      __str[127] = 0;
      std::string::append(&__p, __str);
      google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v6);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__p.__r_.__value_.__l.__data_);
      break;
  }
}

void sub_188887BD8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void google::protobuf::DescriptorBuilder::OptionInterpreter::SetUInt32(unsigned int a1, unsigned int a2, int a3, google::protobuf::UnknownFieldSet *this)
{
  int v5;
  const char *v6;
  int v7;
  std::string __p;
  char __str[128];
  uint64_t v10;

  v10 = *MEMORY[0x1E0C80C00];
  if (a3 == 7)
  {
    google::protobuf::UnknownFieldSet::AddFixed32(this, a1, a2);
  }
  else if (a3 == 13)
  {
    google::protobuf::UnknownFieldSet::AddVarint(this, a1, a2);
  }
  else
  {
    v5 = 3;
    v6 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/descriptor.cc";
    v7 = 7239;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "Invalid wire type for CPPTYPE_UINT32: ");
    snprintf(__str, 0x80uLL, "%d", a3);
    __str[127] = 0;
    std::string::append(&__p, __str);
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v5);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
}

void sub_188887D38(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void google::protobuf::DescriptorBuilder::OptionInterpreter::SetUInt64(unsigned int a1, uint64_t a2, int a3, google::protobuf::UnknownFieldSet *this)
{
  int v5;
  const char *v6;
  int v7;
  std::string __p;
  char __str[128];
  uint64_t v10;

  v10 = *MEMORY[0x1E0C80C00];
  if (a3 == 6)
  {
    google::protobuf::UnknownFieldSet::AddFixed64(this, a1, a2);
  }
  else if (a3 == 4)
  {
    google::protobuf::UnknownFieldSet::AddVarint(this, a1, a2);
  }
  else
  {
    v5 = 3;
    v6 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/descriptor.cc";
    v7 = 7257;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "Invalid wire type for CPPTYPE_UINT64: ");
    snprintf(__str, 0x80uLL, "%d", a3);
    __str[127] = 0;
    std::string::append(&__p, __str);
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v5);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
}

void sub_188887E94(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::DescriptorBuilder::OptionInterpreter::SetAggregateOption(google::protobuf::DescriptorBuilder::OptionInterpreter *this, const google::protobuf::FieldDescriptor *a2, google::protobuf::UnknownFieldSet *a3)
{
  std::string *v5;
  __int128 v6;
  int v7;
  const std::string::value_type *v8;
  std::string::size_type v9;
  std::string *v10;
  __int128 v11;
  std::string *v12;
  __int128 v13;
  int v14;
  const std::string::value_type *v15;
  std::string::size_type v16;
  std::string *v17;
  __int128 v18;
  std::string *v19;
  __int128 v20;
  uint64_t v21;
  const google::protobuf::Descriptor *v23;
  _QWORD *Prototype;
  char *v25;
  uint64_t **v26;
  int v27;
  uint64_t *v28;
  int v29;
  int v30;
  std::string *v31;
  std::string::size_type size;
  std::string::size_type v33;
  unint64_t *v34;
  unint64_t v35;
  int v36;
  std::string *v37;
  std::string *v38;
  __int128 v39;
  const std::string::value_type *v40;
  std::string::size_type v41;
  std::string *v42;
  __int128 v43;
  void *v44;
  unint64_t *v45;
  unint64_t v46;
  google::protobuf::UnknownFieldSet *v47;
  std::string *p_str;
  int v49;
  __int128 v51;
  std::string v52;
  int v53;
  const char *v54;
  int v55;
  std::string __p;
  __int16 v57;
  char v58;
  uint64_t v59;
  int v60;
  uint64_t v61;
  int v62;
  const google::protobuf::FieldDescriptor *v63;
  int v64;
  uint64_t (*v65)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);
  int v66;
  std::string v67;
  std::string v68;
  std::string __str;
  std::string v70;
  uint64_t v71;
  std::string v72;
  uint64_t v73;
  int v74;
  __int128 v75;
  std::string::size_type v76;
  std::string v77;
  uint64_t v78;

  v78 = *MEMORY[0x1E0C80C00];
  if ((*(_BYTE *)(*((_QWORD *)this + 2) + 16) & 4) == 0)
  {
    std::operator+<char>();
    v5 = std::string::append(&v67, "\" is a message. To set the entire message, use syntax like \"");
    v6 = *(_OWORD *)&v5->__r_.__value_.__l.__data_;
    v68.__r_.__value_.__r.__words[2] = v5->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v68.__r_.__value_.__l.__data_ = v6;
    v5->__r_.__value_.__l.__size_ = 0;
    v5->__r_.__value_.__r.__words[2] = 0;
    v5->__r_.__value_.__r.__words[0] = 0;
    v7 = *(char *)(*(_QWORD *)a2 + 23);
    if (v7 >= 0)
      v8 = *(const std::string::value_type **)a2;
    else
      v8 = **(const std::string::value_type ***)a2;
    if (v7 >= 0)
      v9 = *(unsigned __int8 *)(*(_QWORD *)a2 + 23);
    else
      v9 = *(_QWORD *)(*(_QWORD *)a2 + 8);
    v10 = std::string::append(&v68, v8, v9);
    v11 = *(_OWORD *)&v10->__r_.__value_.__l.__data_;
    __str.__r_.__value_.__r.__words[2] = v10->__r_.__value_.__r.__words[2];
    *(_OWORD *)&__str.__r_.__value_.__l.__data_ = v11;
    v10->__r_.__value_.__l.__size_ = 0;
    v10->__r_.__value_.__r.__words[2] = 0;
    v10->__r_.__value_.__r.__words[0] = 0;
    v12 = std::string::append(&__str, " = { <proto text format> }\". To set fields within it, use syntax like \"");
    v13 = *(_OWORD *)&v12->__r_.__value_.__l.__data_;
    v70.__r_.__value_.__r.__words[2] = v12->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v70.__r_.__value_.__l.__data_ = v13;
    v12->__r_.__value_.__l.__size_ = 0;
    v12->__r_.__value_.__r.__words[2] = 0;
    v12->__r_.__value_.__r.__words[0] = 0;
    v14 = *(char *)(*(_QWORD *)a2 + 23);
    if (v14 >= 0)
      v15 = *(const std::string::value_type **)a2;
    else
      v15 = **(const std::string::value_type ***)a2;
    if (v14 >= 0)
      v16 = *(unsigned __int8 *)(*(_QWORD *)a2 + 23);
    else
      v16 = *(_QWORD *)(*(_QWORD *)a2 + 8);
    v17 = std::string::append(&v70, v15, v16);
    v18 = *(_OWORD *)&v17->__r_.__value_.__l.__data_;
    v72.__r_.__value_.__r.__words[2] = v17->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v72.__r_.__value_.__l.__data_ = v18;
    v17->__r_.__value_.__l.__size_ = 0;
    v17->__r_.__value_.__r.__words[2] = 0;
    v17->__r_.__value_.__r.__words[0] = 0;
    v19 = std::string::append(&v72, ".foo = value\".");
    v20 = *(_OWORD *)&v19->__r_.__value_.__l.__data_;
    v76 = v19->__r_.__value_.__r.__words[2];
    v75 = v20;
    v19->__r_.__value_.__l.__size_ = 0;
    v19->__r_.__value_.__r.__words[2] = 0;
    v19->__r_.__value_.__r.__words[0] = 0;
    google::protobuf::DescriptorBuilder::AddError(*(_QWORD *)this, *((_QWORD *)this + 1) + 24, *((_QWORD *)this + 2), 8, (uint64_t)&v75);
    if (SHIBYTE(v76) < 0)
      operator delete((void *)v75);
    if (SHIBYTE(v72.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v72.__r_.__value_.__l.__data_);
    if (SHIBYTE(v70.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v70.__r_.__value_.__l.__data_);
    if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__str.__r_.__value_.__l.__data_);
    if (SHIBYTE(v68.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v68.__r_.__value_.__l.__data_);
    if (SHIBYTE(v67.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v67.__r_.__value_.__l.__data_);
    return 0;
  }
  v23 = (const google::protobuf::Descriptor *)google::protobuf::FieldDescriptor::message_type(a2);
  Prototype = google::protobuf::DynamicMessageFactory::GetPrototype((float **)this + 9, v23);
  v25 = (char *)(*(uint64_t (**)(_QWORD *))(*Prototype + 24))(Prototype);
  if (!v25)
  {
    v53 = 3;
    v54 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/descriptor.cc";
    v55 = 7151;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "CHECK failed: dynamic.get() != nullptr: ");
    std::string::append(&__p, "Could not create an instance of ");
    v57 = 0;
    v58 = 0;
    memset(&v52, 0, sizeof(v52));
    if (*((_BYTE *)a2 + 67))
    {
      v26 = *(uint64_t ***)(*((_QWORD *)a2 + 10) + 8);
      v27 = *((char *)v26 + 23);
      v28 = v26[1];
      if (v27 < 0)
        v26 = (uint64_t **)*v26;
      *(_QWORD *)&v75 = v26;
      v29 = v27;
      if (v27 < 0)
        v29 = (int)v28;
      DWORD2(v75) = v29;
      v72.__r_.__value_.__r.__words[0] = 0;
      LODWORD(v72.__r_.__value_.__r.__words[1]) = -1;
      v70.__r_.__value_.__r.__words[0] = 0;
      LODWORD(v70.__r_.__value_.__r.__words[1]) = -1;
      __str.__r_.__value_.__r.__words[0] = 0;
      LODWORD(__str.__r_.__value_.__r.__words[1]) = -1;
      v68.__r_.__value_.__r.__words[0] = 0;
      LODWORD(v68.__r_.__value_.__r.__words[1]) = -1;
      v67.__r_.__value_.__r.__words[0] = 0;
      LODWORD(v67.__r_.__value_.__r.__words[1]) = -1;
      v65 = 0;
      v66 = -1;
      v63 = 0;
      v64 = -1;
      v61 = 0;
      v62 = -1;
      v59 = 0;
      v60 = -1;
      *(_QWORD *)&v51 = &v65;
      *((_QWORD *)&v51 + 1) = &v63;
      google::protobuf::strings::SubstituteAndAppend(&v52, "extend .$0 {\n", (uint64_t)&v75, (uint64_t)&v72, (uint64_t)&v70, (uint64_t)&__str, (uint64_t)&v68, (uint64_t)&v67, v51, (uint64_t)&v61, (uint64_t)&v59);
      v30 = 1;
    }
    else
    {
      v30 = 0;
    }
    google::protobuf::FieldDescriptor::DebugString((uint64_t)a2, v30, &v52, (uint64_t)&v57);
    if (*((_BYTE *)a2 + 67))
      std::string::append(&v52, "}\n");
    if ((v52.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v31 = &v52;
    else
      v31 = (std::string *)v52.__r_.__value_.__r.__words[0];
    if ((v52.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      size = HIBYTE(v52.__r_.__value_.__r.__words[2]);
    else
      size = v52.__r_.__value_.__l.__size_;
    std::string::append(&__p, (const std::string::value_type *)v31, size);
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v53);
    if (SHIBYTE(v52.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v52.__r_.__value_.__l.__data_);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
  v70.__r_.__value_.__r.__words[0] = (std::string::size_type)off_1E1BF7758;
  *(_OWORD *)&v70.__r_.__value_.__r.__words[1] = 0uLL;
  v71 = 0;
  v33 = *(_QWORD *)this;
  v67.__r_.__value_.__r.__words[0] = (std::string::size_type)&off_1E1BF7CA8;
  v67.__r_.__value_.__l.__size_ = v33;
  v72.__r_.__value_.__r.__words[2] = 0;
  v73 = 0;
  v74 = 0x7FFFFFFF;
  v72.__r_.__value_.__r.__words[0] = (std::string::size_type)&v70;
  v72.__r_.__value_.__l.__size_ = (std::string::size_type)&v67;
  v21 = google::protobuf::TextFormat::Parser::ParseFromString(&v72.__r_.__value_.__l.__data_, *(_QWORD *)(*((_QWORD *)this + 2) + 64) & 0xFFFFFFFFFFFFFFFELL, v25);
  if ((v21 & 1) != 0)
  {
    memset(&__str, 0, sizeof(__str));
    google::protobuf::MessageLite::AppendPartialToString((uint64_t)v25, &__str);
    v34 = (unint64_t *)*((_QWORD *)a2 + 6);
    if (v34)
    {
      v65 = google::protobuf::FieldDescriptor::TypeOnceInit;
      v63 = a2;
      v35 = atomic_load(v34);
      if (v35 != -1)
      {
        *(_QWORD *)&v75 = &v65;
        *((_QWORD *)&v75 + 1) = &v63;
        v68.__r_.__value_.__r.__words[0] = (std::string::size_type)&v75;
        std::__call_once(v34, &v68, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
      }
    }
    v36 = *((_DWORD *)a2 + 14);
    if (v36 == 11)
    {
      v37 = (std::string *)google::protobuf::UnknownFieldSet::AddLengthDelimited(a3, *((_DWORD *)a2 + 17));
      std::string::operator=(v37, &__str);
    }
    else
    {
      v45 = (unint64_t *)*((_QWORD *)a2 + 6);
      if (v45)
      {
        v65 = google::protobuf::FieldDescriptor::TypeOnceInit;
        v63 = a2;
        v46 = atomic_load(v45);
        if (v46 != -1)
        {
          *(_QWORD *)&v75 = &v65;
          *((_QWORD *)&v75 + 1) = &v63;
          v68.__r_.__value_.__r.__words[0] = (std::string::size_type)&v75;
          std::__call_once(v45, &v68, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
        }
        v36 = *((_DWORD *)a2 + 14);
      }
      if (v36 != 10)
      {
        LODWORD(v75) = 3;
        *((_QWORD *)&v75 + 1) = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/descriptor.cc";
        LODWORD(v76) = 7171;
        memset(&v77, 0, sizeof(v77));
        std::string::append(&v77, "CHECK failed: (option_field->type()) == (FieldDescriptor::TYPE_GROUP): ");
        google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v75);
        if (SHIBYTE(v77.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v77.__r_.__value_.__l.__data_);
      }
      v47 = (google::protobuf::UnknownFieldSet *)google::protobuf::UnknownFieldSet::AddGroup(a3, *((_DWORD *)a2 + 17));
      p_str = (std::string *)__str.__r_.__value_.__r.__words[0];
      if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        p_str = &__str;
      v49 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
      if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
        v49 = __str.__r_.__value_.__r.__words[1];
      *(_QWORD *)&v75 = &off_1E1BF87A8;
      *((_QWORD *)&v75 + 1) = p_str;
      LODWORD(v76) = v49;
      HIDWORD(v76) = v49;
      v77.__r_.__value_.__r.__words[0] = 0;
      google::protobuf::UnknownFieldSet::ParseFromZeroCopyStream(v47, (char *)&v75);
    }
    if ((SHIBYTE(__str.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      goto LABEL_80;
    v44 = (void *)__str.__r_.__value_.__r.__words[0];
  }
  else
  {
    std::operator+<char>();
    v38 = std::string::append(&v68, "\": ");
    v39 = *(_OWORD *)&v38->__r_.__value_.__l.__data_;
    __str.__r_.__value_.__r.__words[2] = v38->__r_.__value_.__r.__words[2];
    *(_OWORD *)&__str.__r_.__value_.__l.__data_ = v39;
    v38->__r_.__value_.__l.__size_ = 0;
    v38->__r_.__value_.__r.__words[2] = 0;
    v38->__r_.__value_.__r.__words[0] = 0;
    if (v71 >= 0)
      v40 = &v70.__r_.__value_.__s.__data_[8];
    else
      v40 = (const std::string::value_type *)v70.__r_.__value_.__l.__size_;
    if (v71 >= 0)
      v41 = HIBYTE(v71);
    else
      v41 = v70.__r_.__value_.__r.__words[2];
    v42 = std::string::append(&__str, v40, v41);
    v43 = *(_OWORD *)&v42->__r_.__value_.__l.__data_;
    v76 = v42->__r_.__value_.__r.__words[2];
    v75 = v43;
    v42->__r_.__value_.__l.__size_ = 0;
    v42->__r_.__value_.__r.__words[2] = 0;
    v42->__r_.__value_.__r.__words[0] = 0;
    google::protobuf::DescriptorBuilder::AddError(*(_QWORD *)this, *((_QWORD *)this + 1) + 24, *((_QWORD *)this + 2), 8, (uint64_t)&v75);
    if (SHIBYTE(v76) < 0)
      operator delete((void *)v75);
    if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__str.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v68.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      goto LABEL_80;
    v44 = (void *)v68.__r_.__value_.__r.__words[0];
  }
  operator delete(v44);
LABEL_80:
  v70.__r_.__value_.__r.__words[0] = (std::string::size_type)off_1E1BF7758;
  if (SHIBYTE(v71) < 0)
    operator delete((void *)v70.__r_.__value_.__l.__size_);
  if (v25)
    (*(void (**)(char *))(*(_QWORD *)v25 + 8))(v25);
  return v21;
}

void sub_188888534(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,void *a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,void *__p,uint64_t a60,int a61,__int16 a62,char a63)
{
  char a64;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;

  if (*(char *)(v66 - 81) < 0)
    operator delete(*(void **)(v66 - 104));
  if (a64 < 0)
    operator delete(__p);
  *(_QWORD *)(v66 - 224) = v65;
  if (*(char *)(v66 - 193) < 0)
    operator delete(*(void **)(v66 - 216));
  if (v64)
    (*(void (**)(uint64_t))(*(_QWORD *)v64 + 8))(v64);
  _Unwind_Resume(a1);
}

void google::protobuf::`anonymous namespace'::AggregateErrorCollector::~AggregateErrorCollector(void **this)
{
  *this = off_1E1BF7758;
  if (*((char *)this + 31) < 0)
    operator delete(this[1]);
}

{
  *this = off_1E1BF7758;
  if (*((char *)this + 31) < 0)
    operator delete(this[1]);
  JUMPOUT(0x18D76437CLL);
}

unint64_t google::protobuf::DescriptorPool::CrossLinkOnDemandHelper(uint64_t a1, uint64_t a2, uint64_t a3)
{
  const char *v4;
  std::string *p_str;
  _QWORD *v6;
  unint64_t v7;
  char *v9[2];
  std::string v10;
  std::string __str;
  _QWORD v12[2];
  char v13;

  v12[0] = a2;
  v12[1] = a3;
  google::protobuf::StringPiece::ToString((google::protobuf::StringPiece *)v12, &__str);
  if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
  {
    if (!__str.__r_.__value_.__l.__size_)
      goto LABEL_10;
    p_str = (std::string *)__str.__r_.__value_.__r.__words[0];
  }
  else
  {
    if (!*((_BYTE *)&__str.__r_.__value_.__s + 23))
      goto LABEL_10;
    p_str = &__str;
  }
  if (p_str->__r_.__value_.__s.__data_[0] == 46)
  {
    std::string::basic_string(&v10, &__str, 1uLL, 0xFFFFFFFFFFFFFFFFLL, (std::allocator<char> *)&v13);
    if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__str.__r_.__value_.__l.__data_);
    __str = v10;
  }
LABEL_10:
  v6 = *(_QWORD **)(a1 + 32);
  google::protobuf::StringPiece::StringPiece<std::allocator<char>>(v9, (uint64_t *)&__str, v4);
  v7 = google::protobuf::DescriptorPool::Tables::FindByNameHelper(v6, a1, v9[0], (uint64_t)v9[1]);
  if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__str.__r_.__value_.__l.__data_);
  return v7;
}

void sub_1888887D0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a20 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void google::protobuf::FieldDescriptor::TypeOnceInit(google::protobuf::FieldDescriptor *this, const google::protobuf::FieldDescriptor *a2, const char *a3)
{
  uint64_t *v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  __int128 *v10;
  __int128 v11;
  std::string::size_type v12;
  std::string *v13;
  __int128 v14;
  uint64_t v15;
  int v16;
  const std::string::value_type *v17;
  std::string::size_type v18;
  std::string *v19;
  const char *v20;
  std::string::size_type v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  std::string v25;
  std::string v26;
  uint64_t v27[2];
  std::string __str;
  std::string __p;
  char v30;
  _QWORD v31[3];

  v31[2] = *MEMORY[0x1E0C80C00];
  if (!*(_BYTE *)(*((_QWORD *)this + 5) + 65))
  {
    LODWORD(__str.__r_.__value_.__l.__data_) = 3;
    __str.__r_.__value_.__l.__size_ = (std::string::size_type)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libproto"
                                                              "buf/src/google/protobuf/descriptor.cc";
    LODWORD(__str.__r_.__value_.__r.__words[2]) = 7299;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "CHECK failed: file()->finished_building_ == true: ");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&__str);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
  v4 = (uint64_t *)*((_QWORD *)this + 16);
  if (v4)
  {
    v5 = *(_QWORD *)(*((_QWORD *)this + 5) + 16);
    google::protobuf::StringPiece::StringPiece<std::allocator<char>>(v27, v4, a3);
    v6 = google::protobuf::DescriptorPool::CrossLinkOnDemandHelper(v5, v27[0], v27[1]);
    if (v6 == 4)
    {
      *((_DWORD *)this + 14) = 14;
      v8 = (char *)this + 112;
      goto LABEL_9;
    }
    if (v6 == 1)
    {
      *((_DWORD *)this + 14) = 11;
      v8 = (char *)this + 104;
LABEL_9:
      *(_QWORD *)v8 = v7;
    }
  }
  v9 = *((_QWORD *)this + 14);
  if (!v9 || *((_QWORD *)this + 18))
    return;
  if (!*((_QWORD *)this + 17))
    goto LABEL_36;
  v10 = *(__int128 **)(v9 + 8);
  if (*((char *)v10 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(&__str, *(const std::string::value_type **)v10, *((_QWORD *)v10 + 1));
  }
  else
  {
    v11 = *v10;
    __str.__r_.__value_.__r.__words[2] = *((_QWORD *)v10 + 2);
    *(_OWORD *)&__str.__r_.__value_.__l.__data_ = v11;
  }
  v12 = std::string::rfind(&__str, 46, 0xFFFFFFFFFFFFFFFFLL);
  if (v12 == -1)
  {
    std::string::operator=(&__str, *((const std::string **)this + 17));
  }
  else
  {
    std::string::basic_string(&v25, &__str, 0, v12, (std::allocator<char> *)&v30);
    v13 = std::string::append(&v25, ".");
    v14 = *(_OWORD *)&v13->__r_.__value_.__l.__data_;
    v26.__r_.__value_.__r.__words[2] = v13->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v26.__r_.__value_.__l.__data_ = v14;
    v13->__r_.__value_.__l.__size_ = 0;
    v13->__r_.__value_.__r.__words[2] = 0;
    v13->__r_.__value_.__r.__words[0] = 0;
    v15 = *((_QWORD *)this + 17);
    v16 = *(char *)(v15 + 23);
    if (v16 >= 0)
      v17 = (const std::string::value_type *)*((_QWORD *)this + 17);
    else
      v17 = *(const std::string::value_type **)v15;
    if (v16 >= 0)
      v18 = *(unsigned __int8 *)(v15 + 23);
    else
      v18 = *(_QWORD *)(v15 + 8);
    v19 = std::string::append(&v26, v17, v18);
    v21 = v19->__r_.__value_.__r.__words[0];
    v31[0] = v19->__r_.__value_.__l.__size_;
    *(_QWORD *)((char *)v31 + 7) = *(std::string::size_type *)((char *)&v19->__r_.__value_.__r.__words[1] + 7);
    v22 = HIBYTE(v19->__r_.__value_.__r.__words[2]);
    v19->__r_.__value_.__l.__size_ = 0;
    v19->__r_.__value_.__r.__words[2] = 0;
    v19->__r_.__value_.__r.__words[0] = 0;
    if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__str.__r_.__value_.__l.__data_);
    __str.__r_.__value_.__r.__words[0] = v21;
    __str.__r_.__value_.__l.__size_ = v31[0];
    *(std::string::size_type *)((char *)&__str.__r_.__value_.__r.__words[1] + 7) = *(_QWORD *)((char *)v31 + 7);
    *((_BYTE *)&__str.__r_.__value_.__s + 23) = v22;
    if (SHIBYTE(v26.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v26.__r_.__value_.__l.__data_);
    if (SHIBYTE(v25.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v25.__r_.__value_.__l.__data_);
  }
  v23 = *(_QWORD *)(*((_QWORD *)this + 5) + 16);
  google::protobuf::StringPiece::StringPiece<std::allocator<char>>(&v26, (uint64_t *)&__str, v20);
  if (google::protobuf::DescriptorPool::CrossLinkOnDemandHelper(v23, (uint64_t)v26.__r_.__value_.__l.__data_, v26.__r_.__value_.__l.__size_) == 5)*((_QWORD *)this + 18) = v24;
  if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__str.__r_.__value_.__l.__data_);
  if (!*((_QWORD *)this + 18))
  {
    v9 = *((_QWORD *)this + 14);
LABEL_36:
    if (!*(_DWORD *)(v9 + 44))
    {
      LODWORD(__str.__r_.__value_.__l.__data_) = 3;
      __str.__r_.__value_.__l.__size_ = (std::string::size_type)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libpro"
                                                                "tobuf/src/google/protobuf/descriptor.cc";
      LODWORD(__str.__r_.__value_.__r.__words[2]) = 7331;
      memset(&__p, 0, sizeof(__p));
      std::string::append(&__p, "CHECK failed: enum_type_->value_count(): ");
      google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&__str);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__p.__r_.__value_.__l.__data_);
      v9 = *((_QWORD *)this + 14);
    }
    *((_QWORD *)this + 18) = *(_QWORD *)(v9 + 48);
  }
}

void sub_188888AD8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,int a27,__int16 a28,char a29,char a30,void *__p,uint64_t a32,int a33,__int16 a34,char a35,char a36)
{
  if (a36 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::FieldDescriptor::PrintableNameForExtension(google::protobuf::FieldDescriptor *this)
{
  unint64_t *v2;
  unint64_t v3;
  uint64_t v4;
  char *v5;
  google::protobuf::FieldDescriptor *v7;
  void (*v8)(google::protobuf::FieldDescriptor *, const google::protobuf::FieldDescriptor *, const char *);
  _QWORD *v9;
  _QWORD v10[2];

  if (!*((_BYTE *)this + 67) || !*(_BYTE *)(*(_QWORD *)(*((_QWORD *)this + 10) + 32) + 72))
    goto LABEL_9;
  v2 = (unint64_t *)*((_QWORD *)this + 6);
  if (v2)
  {
    v7 = this;
    v8 = google::protobuf::FieldDescriptor::TypeOnceInit;
    v3 = atomic_load(v2);
    if (v3 != -1)
    {
      v10[0] = &v8;
      v10[1] = &v7;
      v9 = v10;
      std::__call_once(v2, &v9, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  if (*((_DWORD *)this + 14) == 11
    && *((_DWORD *)this + 15) == 1
    && (v4 = *((_QWORD *)this + 12), v4 == google::protobuf::FieldDescriptor::message_type(this)))
  {
    v5 = (char *)(google::protobuf::FieldDescriptor::message_type(this) + 8);
  }
  else
  {
LABEL_9:
    v5 = (char *)this + 8;
  }
  return *(_QWORD *)v5;
}

void google::protobuf::FileDescriptor::DependenciesOnceInit(google::protobuf::FileDescriptor *this, const google::protobuf::FileDescriptor *a2, const char *a3)
{
  int v4;
  uint64_t i;
  uint64_t *v6;
  int v7;
  const char *v8;
  int v9;
  std::string __p;

  if (!*((_BYTE *)this + 65))
  {
    v7 = 3;
    v8 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/descriptor.cc";
    v9 = 7375;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "CHECK failed: finished_building_ == true: ");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v7);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
  v4 = *((_DWORD *)this + 8);
  if (v4 >= 1)
  {
    for (i = 0; i < v4; ++i)
    {
      v6 = *(uint64_t **)(*((_QWORD *)this + 10) + 8 * i);
      if (v6)
      {
        *(_QWORD *)(*((_QWORD *)this + 9) + 8 * i) = google::protobuf::DescriptorPool::FindFileByName(*((_QWORD *)this + 2), v6, a3);
        v4 = *((_DWORD *)this + 8);
      }
    }
  }
}

void sub_188888CD0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void google::protobuf::internal::LazyDescriptor::Once(google::protobuf::internal::LazyDescriptor *this)
{
  unint64_t *v2;
  unint64_t v3;
  google::protobuf::internal::LazyDescriptor *v4;
  _QWORD *v5;
  _QWORD v6[2];

  v2 = (unint64_t *)*((_QWORD *)this + 2);
  if (v2)
  {
    v4 = this;
    v3 = atomic_load(v2);
    if (v3 != -1)
    {
      v6[0] = google::protobuf::internal::LazyDescriptor::OnceStatic;
      v6[1] = &v4;
      v5 = v6;
      std::__call_once(v2, &v5, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (&)(google::protobuf::internal::LazyDescriptor *),google::protobuf::internal::LazyDescriptor *&&>>);
    }
  }
}

void google::protobuf::internal::LazyDescriptor::OnceStatic(google::protobuf::internal::LazyDescriptor *this, google::protobuf::internal::LazyDescriptor *a2, const char *a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  const char *v8;
  int v9;
  std::string __p;

  if (!*(_BYTE *)(*((_QWORD *)this + 3) + 65))
  {
    LODWORD(v7) = 3;
    v8 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/descriptor.cc";
    v9 = 7438;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "CHECK failed: file_->finished_building_: ");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v7);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
  if (!*(_QWORD *)this)
  {
    v4 = (uint64_t *)*((_QWORD *)this + 1);
    if (v4)
    {
      v5 = *(_QWORD *)(*((_QWORD *)this + 3) + 16);
      google::protobuf::StringPiece::StringPiece<std::allocator<char>>(&v7, v4, a3);
      if (google::protobuf::DescriptorPool::CrossLinkOnDemandHelper(v5, v7, v8) == 1)
        *(_QWORD *)this = v6;
    }
  }
}

void sub_188888E08(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

_QWORD *std::__hash_table<std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>,std::__unordered_map_hasher<google::protobuf::StringPiece,std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>,google::protobuf::hash<google::protobuf::StringPiece>,std::equal_to<google::protobuf::StringPiece>,true>,std::__unordered_map_equal<google::protobuf::StringPiece,std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>,std::equal_to<google::protobuf::StringPiece>,google::protobuf::hash<google::protobuf::StringPiece>,true>,std::allocator<std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>>>::find<google::protobuf::StringPiece>(_QWORD *a1, char **a2)
{
  uint64_t v3;
  unint64_t v4;
  char *v5;
  unint64_t v6;
  uint64_t v7;
  int8x8_t v8;
  uint8x8_t v9;
  unint64_t v10;
  unint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  unint64_t v15;

  v3 = (uint64_t)a2[1];
  if (v3 < 1)
  {
    v4 = 0;
  }
  else
  {
    v4 = 0;
    v5 = *a2;
    v6 = (unint64_t)&(*a2)[v3];
    do
    {
      v7 = *v5++;
      v4 = 5 * v4 + v7;
    }
    while ((unint64_t)v5 < v6);
  }
  v8 = (int8x8_t)a1[1];
  if (!*(_QWORD *)&v8)
    return 0;
  v9 = (uint8x8_t)vcnt_s8(v8);
  v9.i16[0] = vaddlv_u8(v9);
  v10 = v9.u32[0];
  if (v9.u32[0] > 1uLL)
  {
    v11 = v4;
    if (v4 >= *(_QWORD *)&v8)
      v11 = v4 % *(_QWORD *)&v8;
  }
  else
  {
    v11 = (*(_QWORD *)&v8 - 1) & v4;
  }
  v12 = *(_QWORD **)(*a1 + 8 * v11);
  if (!v12)
    return 0;
  v13 = (_QWORD *)*v12;
  if (*v12)
  {
    v14 = (uint64_t)(a1 + 4);
    do
    {
      v15 = v13[1];
      if (v4 == v15)
      {
        if (std::equal_to<google::protobuf::StringPiece>::operator()[abi:ne180100](v14, (uint64_t)(v13 + 2), (uint64_t)a2))
        {
          return v13;
        }
      }
      else
      {
        if (v10 > 1)
        {
          if (v15 >= *(_QWORD *)&v8)
            v15 %= *(_QWORD *)&v8;
        }
        else
        {
          v15 &= *(_QWORD *)&v8 - 1;
        }
        if (v15 != v11)
          return 0;
      }
      v13 = (_QWORD *)*v13;
    }
    while (v13);
  }
  return v13;
}

BOOL std::equal_to<google::protobuf::StringPiece>::operator()[abi:ne180100](uint64_t a1, uint64_t a2, uint64_t a3)
{
  int64_t v4;
  const void *v5;
  const void *v6;

  v4 = *(_QWORD *)(a2 + 8);
  if (v4 != *(_QWORD *)(a3 + 8))
    return 0;
  v5 = *(const void **)a2;
  v6 = *(const void **)a3;
  return v4 < 1 || v5 == v6 || memcmp(v5, v6, v4) == 0;
}

uint64_t google::protobuf::internal::OnShutdownDelete<google::protobuf::EncodedDescriptorDatabase>(google::protobuf::EncodedDescriptorDatabase *)::{lambda(void const*)#1}::__invoke(uint64_t result)
{
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

uint64_t *std::__tree<std::__value_type<std::pair<google::protobuf::Descriptor const*,int>,google::protobuf::FieldDescriptor const*>,std::__map_value_compare<std::pair<google::protobuf::Descriptor const*,int>,std::__value_type<std::pair<google::protobuf::Descriptor const*,int>,google::protobuf::FieldDescriptor const*>,std::less<std::pair<google::protobuf::Descriptor const*,int>>,true>,std::allocator<std::__value_type<std::pair<google::protobuf::Descriptor const*,int>,google::protobuf::FieldDescriptor const*>>>::find<std::pair<google::protobuf::Descriptor const*,int>>(uint64_t a1, unint64_t a2, int a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t *v5;
  uint64_t *v6;
  unint64_t v7;
  unint64_t v8;

  v5 = *(uint64_t **)(a1 + 8);
  v3 = (uint64_t *)(a1 + 8);
  v4 = v5;
  if (!v5)
    return v3;
  v6 = v3;
  do
  {
    v7 = v4[4];
    if (v7 >= a2)
    {
      if (v7 <= a2)
      {
        if (*((_DWORD *)v4 + 10) < a3)
          ++v4;
        else
          v6 = v4;
      }
      else
      {
        v6 = v4;
      }
    }
    else
    {
      ++v4;
    }
    v4 = (uint64_t *)*v4;
  }
  while (v4);
  if (v6 == v3)
    return v3;
  v8 = v6[4];
  if (v8 > a2 || v8 >= a2 && *((_DWORD *)v6 + 10) > a3)
    return v3;
  return v6;
}

uint64_t std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FileDescriptorTables const*),google::protobuf::FileDescriptorTables const*&&>>(uint64_t a1)
{
  return (***(uint64_t (****)(_QWORD))a1)(**(_QWORD **)(*(_QWORD *)a1 + 8));
}

BOOL std::equal_to<std::pair<void const*,google::protobuf::StringPiece>>::operator()[abi:ne180100](_QWORD *a1, _QWORD *a2)
{
  int64_t v2;
  const void *v3;
  const void *v4;

  if (*a1 != *a2)
    return 0;
  v2 = a1[2];
  if (v2 != a2[2])
    return 0;
  v3 = (const void *)a1[1];
  v4 = (const void *)a2[1];
  return v2 < 1 || v3 == v4 || memcmp(v3, v4, v2) == 0;
}

uint64_t google::protobuf::FindPtrOrNull<std::unordered_map<std::pair<google::protobuf::EnumDescriptor const*,int>,google::protobuf::EnumValueDescriptor const*,google::protobuf::`anonymous namespace'::PointerIntegerPairHash<std::pair<google::protobuf::EnumDescriptor const*,int>>,std::equal_to<std::pair<google::protobuf::EnumDescriptor const*,int>>,std::allocator<std::pair<std::pair<google::protobuf::EnumDescriptor const*,int> const,google::protobuf::EnumValueDescriptor const*>>>>(_QWORD *a1, uint64_t a2)
{
  int8x8_t v2;
  int v3;
  unint64_t v4;
  uint8x8_t v5;
  uint64_t v6;
  uint64_t **v7;
  uint64_t *i;
  unint64_t v9;

  v2 = (int8x8_t)a1[1];
  if (v2)
  {
    v3 = *(_DWORD *)(a2 + 8);
    v4 = (16777619 * v3) ^ (16777499 * *(_QWORD *)a2);
    v5 = (uint8x8_t)vcnt_s8(v2);
    v5.i16[0] = vaddlv_u8(v5);
    if (v5.u32[0] > 1uLL)
    {
      v6 = (16777619 * v3) ^ (16777499 * *(_QWORD *)a2);
      if (v4 >= *(_QWORD *)&v2)
        v6 = v4 % *(_QWORD *)&v2;
    }
    else
    {
      v6 = v4 & (*(_QWORD *)&v2 - 1);
    }
    v7 = *(uint64_t ***)(*a1 + 8 * v6);
    if (v7)
    {
      for (i = *v7; i; i = (uint64_t *)*i)
      {
        v9 = i[1];
        if (v4 == v9)
        {
          if (i[2] == *(_QWORD *)a2 && *((_DWORD *)i + 6) == v3)
            return i[4];
        }
        else
        {
          if (v5.u32[0] > 1uLL)
          {
            if (v9 >= *(_QWORD *)&v2)
              v9 %= *(_QWORD *)&v2;
          }
          else
          {
            v9 &= *(_QWORD *)&v2 - 1;
          }
          if (v9 != v6)
            return 0;
        }
      }
    }
  }
  return 0;
}

uint64_t google::protobuf::FindPtrOrNull<std::unordered_map<std::pair<google::protobuf::EnumDescriptor const*,int>,google::protobuf::EnumValueDescriptor const*,google::protobuf::`anonymous namespace'::PointerIntegerPairHash<std::pair<google::protobuf::EnumDescriptor const*,int>>,std::equal_to<std::pair<google::protobuf::EnumDescriptor const*,int>>,std::allocator<std::pair<std::pair<google::protobuf::EnumDescriptor const*,int> const,google::protobuf::EnumValueDescriptor const*>>>>(uint64_t a1, unint64_t a2, uint64_t a3, int a4)
{
  unint64_t v4;
  uint8x8_t v5;
  uint64_t v6;
  uint64_t **v7;
  uint64_t *i;
  unint64_t v9;

  if (a2)
  {
    v4 = (16777619 * a4) ^ (16777499 * a3);
    v5 = (uint8x8_t)vcnt_s8((int8x8_t)a2);
    v5.i16[0] = vaddlv_u8(v5);
    if (v5.u32[0] > 1uLL)
    {
      v6 = (16777619 * a4) ^ (16777499 * a3);
      if (v4 >= a2)
        v6 = v4 % a2;
    }
    else
    {
      v6 = v4 & (a2 - 1);
    }
    v7 = *(uint64_t ***)(a1 + 8 * v6);
    if (v7)
    {
      for (i = *v7; i; i = (uint64_t *)*i)
      {
        v9 = i[1];
        if (v9 == v4)
        {
          if (i[2] == a3 && *((_DWORD *)i + 6) == a4)
            return i[4];
        }
        else
        {
          if (v5.u32[0] > 1uLL)
          {
            if (v9 >= a2)
              v9 %= a2;
          }
          else
          {
            v9 &= a2 - 1;
          }
          if (v9 != v6)
            return 0;
        }
      }
    }
  }
  return 0;
}

void google::protobuf::`anonymous namespace'::SourceLocationCommentPrinter::FormatComment(std::string *a1, uint64_t a2, uint64_t a3)
{
  const char *v5;
  std::vector<std::string>::pointer begin;
  std::vector<std::string>::pointer i;
  int v8;
  BOOL v9;
  void **v10;
  uint64_t v11;
  std::string::size_type size;
  std::vector<std::string>::pointer v13;
  BOOL v14;
  __int128 v15;
  unsigned __int8 *v16[2];
  std::vector<std::string> v17;
  std::string v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  int v34;
  std::vector<std::string>::pointer v35;
  int v36;
  std::vector<std::string> *v37;
  int v38;
  uint64_t v39;

  v39 = *MEMORY[0x1E0C80C00];
  if (*(char *)(a3 + 23) < 0)
    std::string::__init_copy_ctor_external(&v18, *(const std::string::value_type **)a3, *(_QWORD *)(a3 + 8));
  else
    v18 = *(std::string *)a3;
  google::protobuf::StripWhitespace(&v18);
  google::protobuf::StringPiece::StringPiece<std::allocator<char>>(v16, (uint64_t *)&v18, v5);
  memset(&v17, 0, sizeof(v17));
  google::protobuf::SplitStringUsing(v16[0], (unint64_t)v16[1], "\n", &v17);
  a1->__r_.__value_.__r.__words[0] = 0;
  a1->__r_.__value_.__l.__size_ = 0;
  a1->__r_.__value_.__r.__words[2] = 0;
  begin = v17.__begin_;
  for (i = v17.__end_; begin != i; ++begin)
  {
    v8 = *(char *)(a2 + 127);
    v9 = v8 < 0;
    v10 = *(void ***)(a2 + 104);
    v11 = *(_QWORD *)(a2 + 112);
    if (v8 >= 0)
      v10 = (void **)(a2 + 104);
    v37 = (std::vector<std::string> *)v10;
    v8 = v8;
    if (v9)
      v8 = v11;
    v38 = v8;
    LODWORD(size) = SHIBYTE(begin->__r_.__value_.__r.__words[2]);
    v13 = (std::vector<std::string>::pointer)begin->__r_.__value_.__r.__words[0];
    v14 = (size & 0x80000000) != 0;
    if ((size & 0x80000000) == 0)
      v13 = begin;
    v35 = v13;
    LODWORD(size) = size;
    if (v14)
      size = begin->__r_.__value_.__l.__size_;
    v36 = size;
    v33 = 0;
    v34 = -1;
    v31 = 0;
    v32 = -1;
    v29 = 0;
    v30 = -1;
    v27 = 0;
    v28 = -1;
    v25 = 0;
    v26 = -1;
    v23 = 0;
    v24 = -1;
    v21 = 0;
    v22 = -1;
    v19 = 0;
    v20 = -1;
    *(_QWORD *)&v15 = &v25;
    *((_QWORD *)&v15 + 1) = &v23;
    google::protobuf::strings::SubstituteAndAppend(a1, "$0// $1\n", (uint64_t)&v37, (uint64_t)&v35, (uint64_t)&v33, (uint64_t)&v31, (uint64_t)&v29, (uint64_t)&v27, v15, (uint64_t)&v21, (uint64_t)&v19);
  }
  v37 = &v17;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&v37);
  if (SHIBYTE(v18.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v18.__r_.__value_.__l.__data_);
}

void sub_188889430(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16, uint64_t a17, uint64_t a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  _Unwind_Resume(exception_object);
}

BOOL google::protobuf::`anonymous namespace'::RetrieveOptions(int a1, const google::protobuf::Message *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  const char *v9;
  uint64_t MessageTypeByName;
  const google::protobuf::Descriptor *v11;
  uint64_t v12;
  _QWORD *Prototype;
  google::protobuf::MessageLite *v14;
  char v15;
  const google::protobuf::Message *v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  const std::string::value_type *v20;
  std::string::size_type v21;
  _BOOL8 OptionsAssumingRightPool;
  void *__p[2];
  int v25;
  char v26;
  std::string v27;
  float *v28[2];
  char v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;

  v36 = *MEMORY[0x1E0C80C00];
  if (*(_QWORD *)(*(_QWORD *)((*(uint64_t (**)(const google::protobuf::Message *))(*(_QWORD *)a2 + 152))(a2)
                             + 16)
                 + 16) == a3)
  v8 = (*(uint64_t (**)(const google::protobuf::Message *))(*(_QWORD *)a2 + 152))(a2);
  MessageTypeByName = google::protobuf::DescriptorPool::FindMessageTypeByName(a3, *(uint64_t **)(v8 + 8), v9);
  if (!MessageTypeByName)
  v11 = (const google::protobuf::Descriptor *)MessageTypeByName;
  v28[0] = (float *)&off_1E1BF81B8;
  v28[1] = 0;
  v29 = 0;
  v12 = operator new();
  *(_OWORD *)v12 = 0u;
  *(_OWORD *)(v12 + 16) = 0u;
  *(_DWORD *)(v12 + 32) = 1065353216;
  v30 = v12;
  v31 = 850045863;
  v32 = 0u;
  v33 = 0u;
  v34 = 0u;
  v35 = 0;
  Prototype = google::protobuf::DynamicMessageFactory::GetPrototype(v28, v11);
  v14 = (google::protobuf::MessageLite *)(*(uint64_t (**)(_QWORD *))(*Prototype + 24))(Prototype);
  google::protobuf::MessageLite::SerializeAsString(a2, (uint64_t)__p);
  v15 = google::protobuf::MessageLite::ParseFrom<(google::protobuf::MessageLite::ParseFlags)1,std::string>(v14, (uint64_t *)__p);
  if (v26 < 0)
    operator delete(__p[0]);
  v16 = v14;
  if ((v15 & 1) == 0)
  {
    LODWORD(__p[0]) = 2;
    __p[1] = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/descriptor.cc";
    v25 = 2344;
    memset(&v27, 0, sizeof(v27));
    std::string::append(&v27, "Found invalid proto option data for: ");
    v17 = (*(uint64_t (**)(const google::protobuf::Message *))(*(_QWORD *)a2 + 152))(a2);
    v18 = *(_QWORD *)(v17 + 8);
    v19 = *(char *)(v18 + 23);
    if (v19 >= 0)
      v20 = *(const std::string::value_type **)(v17 + 8);
    else
      v20 = *(const std::string::value_type **)v18;
    if (v19 >= 0)
      v21 = *(unsigned __int8 *)(v18 + 23);
    else
      v21 = *(_QWORD *)(v18 + 8);
    std::string::append(&v27, v20, v21);
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)__p);
    if (SHIBYTE(v27.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v27.__r_.__value_.__l.__data_);
    v16 = a2;
  }
  if (v14)
    (*(void (**)(google::protobuf::MessageLite *))(*(_QWORD *)v14 + 8))(v14);
  google::protobuf::DynamicMessageFactory::~DynamicMessageFactory((google::protobuf::DynamicMessageFactory *)v28);
  return OptionsAssumingRightPool;
}

void sub_1888896D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,char a22)
{
  uint64_t v22;

  if (a21 < 0)
    operator delete(__p);
  if (v22)
    (*(void (**)(uint64_t))(*(_QWORD *)v22 + 8))(v22);
  google::protobuf::DynamicMessageFactory::~DynamicMessageFactory((google::protobuf::DynamicMessageFactory *)&a22);
  _Unwind_Resume(a1);
}

BOOL google::protobuf::`anonymous namespace'::RetrieveOptionsAssumingRightPool(int a1, const google::protobuf::Message *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  const char *v8;
  char *v9;
  uint64_t v10;
  int v11;
  int v12;
  unsigned int i;
  unint64_t *v14;
  unint64_t v15;
  uint64_t v16;
  std::string *p_p;
  std::string::size_type size;
  std::string *value;
  uint64_t v20;
  std::string *v21;
  std::string::size_type v22;
  char v23;
  std::string::size_type v24;
  std::string *v25;
  std::string *v26;
  std::string *v27;
  std::string::size_type v28;
  std::string *v29;
  std::string::size_type v30;
  char v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  std::string *v39;
  std::string *v40;
  uint64_t v41;
  uint64_t v42;
  google::protobuf::_anonymous_namespace_ **v44;
  char *v45;
  char *v46;
  std::string::size_type __n;
  int v48;
  google::protobuf::Message *v49;
  std::__split_buffer<std::string> v50;
  _QWORD *v51;
  _QWORD *v52[4];
  std::string __p;
  std::string v54;
  char *v55;
  char *v56;
  uint64_t v57;
  std::string v58;
  _QWORD v59[4];

  v59[2] = *MEMORY[0x1E0C80C00];
  std::vector<std::string>::__clear[abi:ne180100]((uint64_t *)a3);
  (*(void (**)(const google::protobuf::Message *))(*(_QWORD *)a2 + 152))(a2);
  v55 = 0;
  v56 = 0;
  v57 = 0;
  v44 = (google::protobuf::_anonymous_namespace_ **)v6;
  v49 = a2;
  google::protobuf::Reflection::ListFieldsMayFailOnStripped(v6, a2, 0, (uint64_t)&v55);
  v9 = v55;
  v45 = v56;
  if (v55 != v56)
  {
    v48 = a1 + 1;
    __n = 2 * a1;
    while (1)
    {
      v10 = *(_QWORD *)v9;
      v11 = *(_DWORD *)(*(_QWORD *)v9 + 60);
      v46 = v9;
      if (v11 != 3)
        break;
      v12 = google::protobuf::Reflection::FieldSize(v44, v49, (const google::protobuf::FieldDescriptor *)v10, v7, v8);
      if (v12 >= 1)
        goto LABEL_7;
LABEL_71:
      v9 = v46 + 8;
      if (v46 + 8 == v45)
      {
        v9 = v55;
        goto LABEL_73;
      }
    }
    v12 = 1;
LABEL_7:
    for (i = 0; i != v12; ++i)
    {
      memset(&v54, 0, sizeof(v54));
      v14 = *(unint64_t **)(v10 + 48);
      if (v14)
      {
        v58.__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FieldDescriptor::TypeOnceInit;
        v59[0] = v10;
        v15 = atomic_load(v14);
        if (v15 != -1)
        {
          v50.__first_ = &v58;
          v50.__begin_ = (std::__split_buffer<std::string>::pointer)v59;
          __p.__r_.__value_.__r.__words[0] = (std::string::size_type)&v50;
          std::__call_once(v14, &__p, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
        }
      }
      if ((*(_DWORD *)(v10 + 56) & 0xFFFFFFFE) == 0xA)
      {
        memset(&__p, 0, sizeof(__p));
        google::protobuf::TextFormat::Printer::Printer((google::protobuf::TextFormat::Printer *)&v50);
        LODWORD(v50.__first_) = v48;
        if (v11 == 3)
          v16 = i;
        else
          v16 = 0xFFFFFFFFLL;
        google::protobuf::TextFormat::Printer::PrintFieldValueToString((google::protobuf::TextFormat::Printer *)&v50, v49, (const google::protobuf::FieldDescriptor *)v10, (const char *)v16, (uint64_t)&__p);
        std::string::append(&v54, "{\n");
        if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          p_p = &__p;
        else
          p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
        if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
        else
          size = __p.__r_.__value_.__l.__size_;
        std::string::append(&v54, (const std::string::value_type *)p_p, size);
        std::string::append(&v54, __n, 32);
        std::string::append(&v54, "}");
        std::__tree<std::__value_type<google::protobuf::Descriptor const*,std::unique_ptr<google::protobuf::TextFormat::MessagePrinter const>>,std::__map_value_compare<google::protobuf::Descriptor const*,std::__value_type<google::protobuf::Descriptor const*,std::unique_ptr<google::protobuf::TextFormat::MessagePrinter const>>,std::less<google::protobuf::Descriptor const*>,true>,std::allocator<std::__value_type<google::protobuf::Descriptor const*,std::unique_ptr<google::protobuf::TextFormat::MessagePrinter const>>>>::destroy((uint64_t)v52, v52[1]);
        std::__tree<std::__value_type<google::protobuf::Descriptor const*,std::unique_ptr<google::protobuf::TextFormat::MessagePrinter const>>,std::__map_value_compare<google::protobuf::Descriptor const*,std::__value_type<google::protobuf::Descriptor const*,std::unique_ptr<google::protobuf::TextFormat::MessagePrinter const>>,std::less<google::protobuf::Descriptor const*>,true>,std::allocator<std::__value_type<google::protobuf::Descriptor const*,std::unique_ptr<google::protobuf::TextFormat::MessagePrinter const>>>>::destroy((uint64_t)&v50.__end_cap_.std::__compressed_pair_elem<std::allocator<std::string> &, 1, false>, v51);
        value = v50.__end_cap_.__value_;
        v50.__end_cap_.__value_ = 0;
        if (value)
          (*(void (**)(std::string *))(value->__r_.__value_.__r.__words[0] + 8))(value);
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
          operator delete(__p.__r_.__value_.__l.__data_);
      }
      else
      {
        if (v11 == 3)
          v20 = i;
        else
          v20 = 0xFFFFFFFFLL;
        google::protobuf::TextFormat::PrintFieldValueToString(v49, (const google::protobuf::FieldDescriptor *)v10, (const char *)v20, (uint64_t)&v54);
      }
      memset(&__p, 0, sizeof(__p));
      if (*(_BYTE *)(v10 + 67))
      {
        std::operator+<char>();
        v21 = std::string::append((std::string *)&v50, ")");
        v22 = v21->__r_.__value_.__r.__words[0];
        v58.__r_.__value_.__r.__words[0] = v21->__r_.__value_.__l.__size_;
        *(std::string::size_type *)((char *)v58.__r_.__value_.__r.__words + 7) = *(std::string::size_type *)((char *)&v21->__r_.__value_.__r.__words[1] + 7);
        v23 = HIBYTE(v21->__r_.__value_.__r.__words[2]);
        v21->__r_.__value_.__l.__size_ = 0;
        v21->__r_.__value_.__r.__words[2] = 0;
        v21->__r_.__value_.__r.__words[0] = 0;
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
          operator delete(__p.__r_.__value_.__l.__data_);
        __p.__r_.__value_.__r.__words[0] = v22;
        __p.__r_.__value_.__l.__size_ = v58.__r_.__value_.__r.__words[0];
        *(std::string::size_type *)((char *)&__p.__r_.__value_.__r.__words[1] + 7) = *(std::string::size_type *)((char *)v58.__r_.__value_.__r.__words + 7);
        *((_BYTE *)&__p.__r_.__value_.__s + 23) = v23;
        if (SHIBYTE(v50.__end_) < 0)
          operator delete(v50.__first_);
      }
      else
      {
        std::string::operator=(&__p, *(const std::string **)v10);
      }
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v24 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
      else
        v24 = __p.__r_.__value_.__l.__size_;
      std::string::basic_string[abi:ne180100]((uint64_t)&v58, v24 + 3);
      if ((v58.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v25 = &v58;
      else
        v25 = (std::string *)v58.__r_.__value_.__r.__words[0];
      if (v24)
      {
        if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          v26 = &__p;
        else
          v26 = (std::string *)__p.__r_.__value_.__r.__words[0];
        memmove(v25, v26, v24);
      }
      *(_DWORD *)((char *)&v25->__r_.__value_.__l.__data_ + v24) = 2112800;
      if ((v54.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v27 = &v54;
      else
        v27 = (std::string *)v54.__r_.__value_.__r.__words[0];
      if ((v54.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v28 = HIBYTE(v54.__r_.__value_.__r.__words[2]);
      else
        v28 = v54.__r_.__value_.__l.__size_;
      v29 = std::string::append(&v58, (const std::string::value_type *)v27, v28);
      v30 = v29->__r_.__value_.__r.__words[0];
      v59[0] = v29->__r_.__value_.__l.__size_;
      *(_QWORD *)((char *)v59 + 7) = *(std::string::size_type *)((char *)&v29->__r_.__value_.__r.__words[1] + 7);
      v31 = HIBYTE(v29->__r_.__value_.__r.__words[2]);
      v29->__r_.__value_.__l.__size_ = 0;
      v29->__r_.__value_.__r.__words[2] = 0;
      v29->__r_.__value_.__r.__words[0] = 0;
      v32 = *(_QWORD *)(a3 + 8);
      v33 = *(_QWORD *)(a3 + 16);
      if (v32 >= v33)
      {
        v35 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v32 - *(_QWORD *)a3) >> 3);
        v36 = v35 + 1;
        if (v35 + 1 > 0xAAAAAAAAAAAAAAALL)
          std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
        v37 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v33 - *(_QWORD *)a3) >> 3);
        if (2 * v37 > v36)
          v36 = 2 * v37;
        if (v37 >= 0x555555555555555)
          v38 = 0xAAAAAAAAAAAAAAALL;
        else
          v38 = v36;
        v50.__end_cap_.__value_ = (std::allocator<std::string> *)(a3 + 16);
        if (v38)
          v39 = (std::string *)std::__allocate_at_least[abi:ne180100]<std::allocator<zilch::TrafficDynamicTile::Flow>>(a3 + 16, v38);
        else
          v39 = 0;
        v40 = v39 + v35;
        v50.__first_ = v39;
        v50.__begin_ = v40;
        v50.__end_cap_.__value_ = &v39[v38];
        v40->__r_.__value_.__r.__words[0] = v30;
        v40->__r_.__value_.__l.__size_ = v59[0];
        *(std::string::size_type *)((char *)&v40->__r_.__value_.__r.__words[1] + 7) = *(_QWORD *)((char *)v59 + 7);
        *((_BYTE *)&v40->__r_.__value_.__s + 23) = v31;
        v50.__end_ = v40 + 1;
        std::vector<std::string>::__swap_out_circular_buffer((std::vector<std::string> *)a3, &v50);
        v34 = *(_QWORD *)(a3 + 8);
        std::__split_buffer<std::string>::~__split_buffer(&v50);
      }
      else
      {
        *(_QWORD *)v32 = v30;
        *(_QWORD *)(v32 + 8) = v59[0];
        *(_QWORD *)(v32 + 15) = *(_QWORD *)((char *)v59 + 7);
        *(_BYTE *)(v32 + 23) = v31;
        v34 = v32 + 24;
        *(_QWORD *)(a3 + 8) = v32 + 24;
      }
      *(_QWORD *)(a3 + 8) = v34;
      if (SHIBYTE(v58.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v58.__r_.__value_.__l.__data_);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__p.__r_.__value_.__l.__data_);
      if (SHIBYTE(v54.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v54.__r_.__value_.__l.__data_);
    }
    goto LABEL_71;
  }
LABEL_73:
  v42 = *(_QWORD *)a3;
  v41 = *(_QWORD *)(a3 + 8);
  if (v9)
  {
    v56 = v9;
    operator delete(v9);
  }
  return v42 != v41;
}

void sub_188889C54(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, std::__split_buffer<std::string> *a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30,void *a31,void *__pa,int a33,__int16 a34,char a35,char a36)
{
  uint64_t v36;
  void *v38;

  v38 = *(void **)(v36 - 160);
  if (v38)
  {
    *(_QWORD *)(v36 - 152) = v38;
    operator delete(v38);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::TextFormat::Printer::~Printer(google::protobuf::TextFormat::Printer *this)
{
  uint64_t v2;

  std::__tree<std::__value_type<google::protobuf::Descriptor const*,std::unique_ptr<google::protobuf::TextFormat::MessagePrinter const>>,std::__map_value_compare<google::protobuf::Descriptor const*,std::__value_type<google::protobuf::Descriptor const*,std::unique_ptr<google::protobuf::TextFormat::MessagePrinter const>>,std::less<google::protobuf::Descriptor const*>,true>,std::allocator<std::__value_type<google::protobuf::Descriptor const*,std::unique_ptr<google::protobuf::TextFormat::MessagePrinter const>>>>::destroy((uint64_t)this + 56, *((_QWORD **)this + 8));
  std::__tree<std::__value_type<google::protobuf::Descriptor const*,std::unique_ptr<google::protobuf::TextFormat::MessagePrinter const>>,std::__map_value_compare<google::protobuf::Descriptor const*,std::__value_type<google::protobuf::Descriptor const*,std::unique_ptr<google::protobuf::TextFormat::MessagePrinter const>>,std::less<google::protobuf::Descriptor const*>,true>,std::allocator<std::__value_type<google::protobuf::Descriptor const*,std::unique_ptr<google::protobuf::TextFormat::MessagePrinter const>>>>::destroy((uint64_t)this + 32, *((_QWORD **)this + 5));
  v2 = *((_QWORD *)this + 3);
  *((_QWORD *)this + 3) = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
}

void std::__tree<std::__value_type<google::protobuf::Descriptor const*,std::unique_ptr<google::protobuf::TextFormat::MessagePrinter const>>,std::__map_value_compare<google::protobuf::Descriptor const*,std::__value_type<google::protobuf::Descriptor const*,std::unique_ptr<google::protobuf::TextFormat::MessagePrinter const>>,std::less<google::protobuf::Descriptor const*>,true>,std::allocator<std::__value_type<google::protobuf::Descriptor const*,std::unique_ptr<google::protobuf::TextFormat::MessagePrinter const>>>>::destroy(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;

  if (a2)
  {
    std::__tree<std::__value_type<google::protobuf::Descriptor const*,std::unique_ptr<google::protobuf::TextFormat::MessagePrinter const>>,std::__map_value_compare<google::protobuf::Descriptor const*,std::__value_type<google::protobuf::Descriptor const*,std::unique_ptr<google::protobuf::TextFormat::MessagePrinter const>>,std::less<google::protobuf::Descriptor const*>,true>,std::allocator<std::__value_type<google::protobuf::Descriptor const*,std::unique_ptr<google::protobuf::TextFormat::MessagePrinter const>>>>::destroy(a1, *a2);
    std::__tree<std::__value_type<google::protobuf::Descriptor const*,std::unique_ptr<google::protobuf::TextFormat::MessagePrinter const>>,std::__map_value_compare<google::protobuf::Descriptor const*,std::__value_type<google::protobuf::Descriptor const*,std::unique_ptr<google::protobuf::TextFormat::MessagePrinter const>>,std::less<google::protobuf::Descriptor const*>,true>,std::allocator<std::__value_type<google::protobuf::Descriptor const*,std::unique_ptr<google::protobuf::TextFormat::MessagePrinter const>>>>::destroy(a1, a2[1]);
    v4 = a2[5];
    a2[5] = 0;
    if (v4)
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
    operator delete(a2);
  }
}

std::string *google::protobuf::Join<std::vector<std::string>>@<X0>(std::string::value_type *__s@<X1>, std::string **a2@<X0>, std::string *a3@<X8>)
{
  a3->__r_.__value_.__r.__words[0] = 0;
  a3->__r_.__value_.__l.__size_ = 0;
  a3->__r_.__value_.__r.__words[2] = 0;
  return google::protobuf::Join<std::__wrap_iter<std::string const*>>(*a2, a2[1], __s, a3);
}

void sub_188889DF4(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (*(char *)(v1 + 23) < 0)
    operator delete(*(void **)v1);
  _Unwind_Resume(exception_object);
}

std::string *google::protobuf::Join<std::__wrap_iter<std::string const*>>(std::string *result, std::string *a2, std::string::value_type *__s, std::string *this)
{
  uint64_t v7;
  uint64_t v8;
  int v9;
  const std::string::value_type *v10;
  std::string::size_type v11;

  if (result != a2)
  {
    v7 = (uint64_t)result;
    v8 = 0;
    do
    {
      if (v8)
        std::string::append(this, __s);
      v9 = *(char *)(v7 + 23);
      if (v9 >= 0)
        v10 = (const std::string::value_type *)v7;
      else
        v10 = *(const std::string::value_type **)v7;
      if (v9 >= 0)
        v11 = *(unsigned __int8 *)(v7 + 23);
      else
        v11 = *(_QWORD *)(v7 + 8);
      result = std::string::append(this, v10, v11);
      v7 += 24;
      v8 -= 24;
    }
    while ((std::string *)v7 != a2);
  }
  return result;
}

google::protobuf::FileDescriptorTables *google::protobuf::internal::OnShutdownDelete<google::protobuf::FileDescriptorTables>(google::protobuf::FileDescriptorTables *)::{lambda(void const*)#1}::__invoke(google::protobuf::FileDescriptorTables *result)
{
  if (result)
  {
    google::protobuf::FileDescriptorTables::~FileDescriptorTables(result);
    JUMPOUT(0x18D76437CLL);
  }
  return result;
}

uint64_t google::protobuf::`anonymous namespace'::NewAllowedProto3Extendee(google::protobuf::_anonymous_namespace_ *this)
{
  uint64_t v1;
  uint64_t v2;
  const std::string::value_type *v3;
  std::string *v4;
  __int128 v5;
  std::string *v6;
  __int128 v7;
  std::string *v8;
  __int128 v9;
  std::string v11;
  std::string v12;
  void *__p[2];
  std::string::size_type v14;

  v1 = operator new();
  v2 = 0;
  *(_QWORD *)(v1 + 8) = 0;
  *(_QWORD *)(v1 + 16) = 0;
  *(_QWORD *)v1 = v1 + 8;
  do
  {
    v3 = off_1E1BFF1D8[v2];
    std::string::basic_string[abi:ne180100]<0>(&v12, "google.protobuf.");
    v4 = std::string::append(&v12, v3);
    v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
    v14 = v4->__r_.__value_.__r.__words[2];
    *(_OWORD *)__p = v5;
    v4->__r_.__value_.__l.__size_ = 0;
    v4->__r_.__value_.__r.__words[2] = 0;
    v4->__r_.__value_.__r.__words[0] = 0;
    std::__tree<std::string>::__emplace_unique_key_args<std::string,std::string>((uint64_t **)v1, (const void **)__p, (uint64_t)__p);
    if (SHIBYTE(v14) < 0)
      operator delete(__p[0]);
    if (SHIBYTE(v12.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v12.__r_.__value_.__l.__data_);
    std::string::basic_string[abi:ne180100]<0>(&v11, "proto");
    v6 = std::string::append(&v11, "2.");
    v7 = *(_OWORD *)&v6->__r_.__value_.__l.__data_;
    v12.__r_.__value_.__r.__words[2] = v6->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v12.__r_.__value_.__l.__data_ = v7;
    v6->__r_.__value_.__l.__size_ = 0;
    v6->__r_.__value_.__r.__words[2] = 0;
    v6->__r_.__value_.__r.__words[0] = 0;
    v8 = std::string::append(&v12, v3);
    v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
    v14 = v8->__r_.__value_.__r.__words[2];
    *(_OWORD *)__p = v9;
    v8->__r_.__value_.__l.__size_ = 0;
    v8->__r_.__value_.__r.__words[2] = 0;
    v8->__r_.__value_.__r.__words[0] = 0;
    std::__tree<std::string>::__emplace_unique_key_args<std::string,std::string>((uint64_t **)v1, (const void **)__p, (uint64_t)__p);
    if (SHIBYTE(v14) < 0)
      operator delete(__p[0]);
    if (SHIBYTE(v12.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v12.__r_.__value_.__l.__data_);
    if (SHIBYTE(v11.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v11.__r_.__value_.__l.__data_);
    ++v2;
  }
  while (v2 != 8);
  return v1;
}

void sub_18888A050(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,void *__p,uint64_t a24,int a25,__int16 a26,char a27,char a28)
{
  if (a28 < 0)
    operator delete(__p);
  if (a21 < 0)
    operator delete(a16);
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::internal::OnShutdownDelete<std::set<std::string>>(std::set<std::string> *)::{lambda(void const*)#1}::__invoke(uint64_t result)
{
  if (result)
  {
    std::__tree<std::__value_type<std::pair<std::string,int>,std::pair<void const*,int>>,std::__map_value_compare<std::pair<std::string,int>,std::__value_type<std::pair<std::string,int>,std::pair<void const*,int>>,std::less<std::pair<std::string,int>>,true>,std::allocator<std::__value_type<std::pair<std::string,int>,std::pair<void const*,int>>>>::destroy(result, *(char **)(result + 8));
    JUMPOUT(0x18D76437CLL);
  }
  return result;
}

std::string *google::protobuf::`anonymous namespace'::AggregateErrorCollector::AddError(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  std::string *v5;
  int v6;
  const std::string::value_type *v7;
  std::string::size_type v8;

  v5 = (std::string *)(a1 + 8);
  if ((*(char *)(a1 + 31) & 0x80000000) == 0)
  {
    if (!*(_BYTE *)(a1 + 31))
      goto LABEL_4;
    goto LABEL_3;
  }
  if (*(_QWORD *)(a1 + 16))
LABEL_3:
    std::string::append((std::string *)(a1 + 8), "; ");
LABEL_4:
  v6 = *(char *)(a4 + 23);
  if (v6 >= 0)
    v7 = (const std::string::value_type *)a4;
  else
    v7 = *(const std::string::value_type **)a4;
  if (v6 >= 0)
    v8 = *(unsigned __int8 *)(a4 + 23);
  else
    v8 = *(_QWORD *)(a4 + 8);
  return std::string::append(v5, v7, v8);
}

void google::protobuf::DescriptorBuilder::OptionInterpreter::AggregateOptionFinder::~AggregateOptionFinder(google::protobuf::DescriptorBuilder::OptionInterpreter::AggregateOptionFinder *this)
{
  JUMPOUT(0x18D76437CLL);
}

uint64_t google::protobuf::DescriptorBuilder::OptionInterpreter::AggregateOptionFinder::FindExtension(uint64_t a1, uint64_t a2, std::string *a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t *v12;
  unint64_t v13;
  uint64_t v15;
  void (*v16)(google::protobuf::FieldDescriptor *, const google::protobuf::FieldDescriptor *, const char *);
  _QWORD *v17;
  _QWORD v18[2];

  v5 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a2 + 152))(a2);
  v6 = google::protobuf::DescriptorBuilder::LookupSymbolNoPlaceholder(*(_QWORD *)(a1 + 8), a3, *(_QWORD *)(v5 + 8), 0, 1);
  v8 = v7;
  if (v6 == 1)
  {
    if (!*(_BYTE *)(*(_QWORD *)(v5 + 32) + 72) || *(int *)(v7 + 128) < 1)
      return 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *(_QWORD *)(v8 + 80);
      if (*(_QWORD *)(v11 + v9 + 80) == v5)
      {
        v12 = *(unint64_t **)(v11 + v9 + 48);
        if (v12)
        {
          v15 = v11 + v9;
          v16 = google::protobuf::FieldDescriptor::TypeOnceInit;
          v13 = atomic_load(v12);
          if (v13 != -1)
          {
            v18[0] = &v16;
            v18[1] = &v15;
            v17 = v18;
            std::__call_once(v12, &v17, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
          }
        }
        if (*(_DWORD *)(v11 + v9 + 56) == 11
          && *(_DWORD *)(v11 + v9 + 60) == 1
          && google::protobuf::FieldDescriptor::message_type((google::protobuf::FieldDescriptor *)(v11 + v9)) == v8)
        {
          break;
        }
      }
      ++v10;
      v9 += 152;
      if (v10 >= *(int *)(v8 + 128))
        return 0;
    }
    return v11 + v9;
  }
  else if (v6 != 2 || !*(_BYTE *)(v7 + 67))
  {
    return 0;
  }
  return v8;
}

uint64_t google::protobuf::DescriptorBuilder::OptionInterpreter::AggregateOptionFinder::FindAnyType(uint64_t a1, uint64_t a2, uint64_t *a3, std::string *a4)
{
  int v4;
  BOOL v7;
  uint64_t v10;

  v4 = *((char *)a3 + 23);
  if (v4 < 0)
  {
    if (a3[1] != 20)
      return 0;
    a3 = (uint64_t *)*a3;
  }
  else if (v4 != 20)
  {
    return 0;
  }
  if (*a3 != *(_QWORD *)"type.googleapis.com/"
    || a3[1] != *(_QWORD *)"gleapis.com/"
    || *((_DWORD *)a3 + 4) != (unint64_t)*(unsigned int *)"com/")
  {
    v7 = *a3 == *(_QWORD *)"type.googleprod.com/" && a3[1] == *(_QWORD *)"gleprod.com/";
    if (!v7 || *((_DWORD *)a3 + 4) != (unint64_t)*(unsigned int *)"com/")
      return 0;
  }
  if (google::protobuf::DescriptorBuilder::FindSymbol(*(_QWORD *)(a1 + 8), a4, 1) == 1)
    return v10;
  else
    return 0;
}

void std::vector<std::vector<char>>::__destroy_vector::operator()[abi:ne180100](void ***a1)
{
  void **v1;
  char *v2;
  char *v4;
  void *v5;
  char *v6;
  void *v7;
  void *v8;

  v1 = *a1;
  v2 = (char *)**a1;
  if (v2)
  {
    v4 = (char *)v1[1];
    v5 = **a1;
    if (v4 != v2)
    {
      v6 = (char *)v1[1];
      do
      {
        v8 = (void *)*((_QWORD *)v6 - 3);
        v6 -= 24;
        v7 = v8;
        if (v8)
        {
          *((_QWORD *)v4 - 2) = v7;
          operator delete(v7);
        }
        v4 = v6;
      }
      while (v6 != v2);
      v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

void std::vector<std::unique_ptr<std::string>>::__destroy_vector::operator()[abi:ne180100](void ***a1)
{
  void **v2;

  v2 = *a1;
  if (*v2)
  {
    std::vector<std::unique_ptr<std::string>>::__base_destruct_at_end[abi:ne180100]((uint64_t)v2, (uint64_t *)*v2);
    operator delete(**a1);
  }
}

void std::vector<std::unique_ptr<std::string>>::__base_destruct_at_end[abi:ne180100](uint64_t a1, uint64_t *a2)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v6;

  v4 = *(uint64_t **)(a1 + 8);
  if (v4 != a2)
  {
    v5 = v4 - 1;
    do
    {
      v6 = *v5;
      *v5 = 0;
      if (v6)
        std::default_delete<std::string>::operator()[abi:ne180100]((uint64_t)v5, v6);
    }
    while (v5-- != a2);
  }
  *(_QWORD *)(a1 + 8) = a2;
}

void std::vector<std::unique_ptr<google::protobuf::Message>>::__destroy_vector::operator()[abi:ne180100](void ***a1)
{
  void **v1;
  _QWORD *v2;
  _QWORD *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *a1;
  v2 = **a1;
  if (v2)
  {
    v4 = v1[1];
    v5 = **a1;
    if (v4 != v2)
    {
      do
      {
        v7 = *--v4;
        v6 = v7;
        *v4 = 0;
        if (v7)
          (*(void (**)(uint64_t))(*(_QWORD *)v6 + 8))(v6);
      }
      while (v4 != v2);
      v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

void std::vector<std::unique_ptr<std::once_flag>>::__destroy_vector::operator()[abi:ne180100](void ***a1)
{
  void **v2;

  v2 = *a1;
  if (*v2)
  {
    std::vector<std::unique_ptr<std::once_flag>>::__base_destruct_at_end[abi:ne180100]((uint64_t)v2, *v2);
    operator delete(**a1);
  }
}

uint64_t std::vector<std::unique_ptr<std::once_flag>>::__base_destruct_at_end[abi:ne180100](uint64_t result, _QWORD *a2)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  v3 = result;
  v4 = *(_QWORD **)(result + 8);
  while (v4 != a2)
  {
    v5 = *--v4;
    result = v5;
    *v4 = 0;
    if (v5)
      result = MEMORY[0x18D76437C](result, 0x1000C4000313F17);
  }
  *(_QWORD *)(v3 + 8) = a2;
  return result;
}

void std::vector<std::unique_ptr<google::protobuf::FileDescriptorTables>>::__destroy_vector::operator()[abi:ne180100](void ***a1)
{
  void **v1;
  google::protobuf::FileDescriptorTables **v2;
  google::protobuf::FileDescriptorTables **v4;
  void *v5;

  v1 = *a1;
  v2 = (google::protobuf::FileDescriptorTables **)**a1;
  if (v2)
  {
    v4 = (google::protobuf::FileDescriptorTables **)v1[1];
    v5 = **a1;
    if (v4 != v2)
    {
      do
        std::unique_ptr<google::protobuf::FileDescriptorTables>::reset[abi:ne180100](--v4);
      while (v4 != v2);
      v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

google::protobuf::FileDescriptorTables *std::unique_ptr<google::protobuf::FileDescriptorTables>::reset[abi:ne180100](google::protobuf::FileDescriptorTables **a1)
{
  google::protobuf::FileDescriptorTables *result;

  result = *a1;
  *a1 = 0;
  if (result)
  {
    google::protobuf::FileDescriptorTables::~FileDescriptorTables(result);
    JUMPOUT(0x18D76437CLL);
  }
  return result;
}

void std::__tree<std::__value_type<std::pair<google::protobuf::Descriptor const*,int>,google::protobuf::FieldDescriptor const*>,std::__map_value_compare<std::pair<google::protobuf::Descriptor const*,int>,std::__value_type<std::pair<google::protobuf::Descriptor const*,int>,google::protobuf::FieldDescriptor const*>,std::less<std::pair<google::protobuf::Descriptor const*,int>>,true>,std::allocator<std::__value_type<std::pair<google::protobuf::Descriptor const*,int>,google::protobuf::FieldDescriptor const*>>>::destroy(_QWORD *a1)
{
  if (a1)
  {
    std::__tree<std::__value_type<std::pair<google::protobuf::Descriptor const*,int>,google::protobuf::FieldDescriptor const*>,std::__map_value_compare<std::pair<google::protobuf::Descriptor const*,int>,std::__value_type<std::pair<google::protobuf::Descriptor const*,int>,google::protobuf::FieldDescriptor const*>,std::less<std::pair<google::protobuf::Descriptor const*,int>>,true>,std::allocator<std::__value_type<std::pair<google::protobuf::Descriptor const*,int>,google::protobuf::FieldDescriptor const*>>>::destroy(*a1);
    std::__tree<std::__value_type<std::pair<google::protobuf::Descriptor const*,int>,google::protobuf::FieldDescriptor const*>,std::__map_value_compare<std::pair<google::protobuf::Descriptor const*,int>,std::__value_type<std::pair<google::protobuf::Descriptor const*,int>,google::protobuf::FieldDescriptor const*>,std::less<std::pair<google::protobuf::Descriptor const*,int>>,true>,std::allocator<std::__value_type<std::pair<google::protobuf::Descriptor const*,int>,google::protobuf::FieldDescriptor const*>>>::destroy(a1[1]);
    operator delete(a1);
  }
}

void std::__hash_node_destructor<std::allocator<std::__hash_node<std::__hash_value_type<std::string,google::protobuf::Descriptor::WellKnownType>,void *>>>::operator()[abi:ne180100](char a1, void **__p)
{
  if (a1)
  {
    if (*((char *)__p + 39) < 0)
      operator delete(__p[2]);
  }
  else if (!__p)
  {
    return;
  }
  operator delete(__p);
}

uint64_t std::unique_ptr<std::unordered_map<std::pair<void const*,google::protobuf::StringPiece>,google::protobuf::FieldDescriptor const*,google::protobuf::`anonymous namespace'::PointerStringPairHash,std::equal_to<std::pair<void const*,google::protobuf::StringPiece>>,std::allocator<std::pair<std::pair<void const*,google::protobuf::StringPiece> const,google::protobuf::FieldDescriptor const*>>>>::reset[abi:ne180100](uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  *a1 = 0;
  if (result)
  {
    std::__hash_table<std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>>>::~__hash_table(result);
    JUMPOUT(0x18D76437CLL);
  }
  return result;
}

void *std::__allocate_at_least[abi:ne180100]<std::allocator<std::pair<google::protobuf::Descriptor const*,int>>>(unint64_t a1)
{
  if (a1 >> 60)
    std::__throw_bad_array_new_length[abi:ne180100]();
  return operator new(16 * a1);
}

uint64_t std::vector<std::unique_ptr<std::string>>::__swap_out_circular_buffer(uint64_t *a1, _QWORD *a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  result = std::__uninitialized_allocator_move_if_noexcept[abi:ne180100]<std::allocator<std::unique_ptr<std::string>>,std::reverse_iterator<std::unique_ptr<std::string>*>,std::reverse_iterator<std::unique_ptr<std::string>*>,std::reverse_iterator<std::unique_ptr<std::string>*>>((uint64_t)(a1 + 2), a1[1], (_QWORD *)a1[1], *a1, (_QWORD *)*a1, a2[1], a2[1]);
  a2[1] = v5;
  v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

uint64_t std::__uninitialized_allocator_move_if_noexcept[abi:ne180100]<std::allocator<std::unique_ptr<std::string>>,std::reverse_iterator<std::unique_ptr<std::string>*>,std::reverse_iterator<std::unique_ptr<std::string>*>,std::reverse_iterator<std::unique_ptr<std::string>*>>(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t a4, _QWORD *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[3];
  char v14;
  __int128 v15;
  __int128 v16;

  v7 = a7;
  *(_QWORD *)&v16 = a6;
  *((_QWORD *)&v16 + 1) = a7;
  v15 = v16;
  v13[0] = a1;
  v13[1] = &v15;
  v13[2] = &v16;
  if (a3 == a5)
  {
    v11 = a6;
  }
  else
  {
    v8 = (_QWORD *)(a7 - 8);
    v9 = (_QWORD *)(a7 - 8);
    do
    {
      v10 = *--a3;
      *a3 = 0;
      *v9-- = v10;
      *((_QWORD *)&v16 + 1) = v8;
      v7 -= 8;
      v8 = v9;
    }
    while (a3 != a5);
    v11 = v16;
  }
  v14 = 1;
  std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::unique_ptr<std::string>>,std::reverse_iterator<std::unique_ptr<std::string>*>>>::~__exception_guard_exceptions[abi:ne180100]((uint64_t)v13);
  return v11;
}

uint64_t std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::unique_ptr<std::string>>,std::reverse_iterator<std::unique_ptr<std::string>*>>>::~__exception_guard_exceptions[abi:ne180100](uint64_t a1)
{
  if (!*(_BYTE *)(a1 + 24))
    std::_AllocatorDestroyRangeReverse<std::allocator<std::unique_ptr<std::string>>,std::reverse_iterator<std::unique_ptr<std::string>*>>::operator()[abi:ne180100](a1);
  return a1;
}

void std::_AllocatorDestroyRangeReverse<std::allocator<std::unique_ptr<std::string>>,std::reverse_iterator<std::unique_ptr<std::string>*>>::operator()[abi:ne180100](uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;

  v1 = *(uint64_t **)(*(_QWORD *)(a1 + 16) + 8);
  v2 = *(uint64_t **)(*(_QWORD *)(a1 + 8) + 8);
  while (v1 != v2)
  {
    v3 = *v1;
    *v1 = 0;
    if (v3)
      std::default_delete<std::string>::operator()[abi:ne180100]((uint64_t)v1, v3);
    ++v1;
  }
}

uint64_t std::__split_buffer<std::unique_ptr<std::string>>::~__split_buffer(uint64_t a1)
{
  std::__split_buffer<std::unique_ptr<std::string>>::__destruct_at_end[abi:ne180100](a1, *(_QWORD *)(a1 + 8));
  if (*(_QWORD *)a1)
    operator delete(*(void **)a1);
  return a1;
}

void std::__split_buffer<std::unique_ptr<std::string>>::__destruct_at_end[abi:ne180100](uint64_t a1, uint64_t a2)
{
  uint64_t i;
  uint64_t v5;

  for (i = *(_QWORD *)(a1 + 16); i != a2; i = *(_QWORD *)(a1 + 16))
  {
    *(_QWORD *)(a1 + 16) = i - 8;
    v5 = *(_QWORD *)(i - 8);
    *(_QWORD *)(i - 8) = 0;
    if (v5)
      std::default_delete<std::string>::operator()[abi:ne180100](i - 8, v5);
  }
}

void *std::__allocate_at_least[abi:ne180100]<std::allocator<std::unique_ptr<google::protobuf::Message>>>(unint64_t a1)
{
  if (a1 >> 61)
    std::__throw_bad_array_new_length[abi:ne180100]();
  return operator new(8 * a1);
}

uint64_t std::__split_buffer<std::unique_ptr<google::protobuf::Message>>::~__split_buffer(uint64_t a1)
{
  uint64_t i;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a1 + 8);
  for (i = *(_QWORD *)(a1 + 16); i != v3; i = *(_QWORD *)(a1 + 16))
  {
    *(_QWORD *)(a1 + 16) = i - 8;
    v4 = *(_QWORD *)(i - 8);
    *(_QWORD *)(i - 8) = 0;
    if (v4)
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
  }
  if (*(_QWORD *)a1)
    operator delete(*(void **)a1);
  return a1;
}

uint64_t std::__split_buffer<std::unique_ptr<std::once_flag>>::~__split_buffer(uint64_t a1)
{
  uint64_t i;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a1 + 8);
  for (i = *(_QWORD *)(a1 + 16); i != v3; i = *(_QWORD *)(a1 + 16))
  {
    *(_QWORD *)(a1 + 16) = i - 8;
    v4 = *(_QWORD *)(i - 8);
    *(_QWORD *)(i - 8) = 0;
    if (v4)
      MEMORY[0x18D76437C](v4, 0x1000C4000313F17);
  }
  if (*(_QWORD *)a1)
    operator delete(*(void **)a1);
  return a1;
}

uint64_t std::__split_buffer<std::unique_ptr<google::protobuf::FileDescriptorTables>>::~__split_buffer(uint64_t a1)
{
  uint64_t i;
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 8);
  for (i = *(_QWORD *)(a1 + 16); i != v3; i = *(_QWORD *)(a1 + 16))
  {
    *(_QWORD *)(a1 + 16) = i - 8;
    std::unique_ptr<google::protobuf::FileDescriptorTables>::reset[abi:ne180100]((google::protobuf::FileDescriptorTables **)(i - 8));
  }
  if (*(_QWORD *)a1)
    operator delete(*(void **)a1);
  return a1;
}

_QWORD *std::vector<std::vector<char>>::__swap_out_circular_buffer(_QWORD *result, _QWORD *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  __int128 v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;

  v3 = (_QWORD *)*result;
  v2 = (_QWORD *)result[1];
  v4 = a2[1];
  while (v2 != v3)
  {
    *(_QWORD *)(v4 - 24) = 0;
    *(_QWORD *)(v4 - 16) = 0;
    v4 -= 24;
    *(_QWORD *)(v4 + 16) = 0;
    v5 = *(_OWORD *)(v2 - 3);
    v2 -= 3;
    *(_OWORD *)v4 = v5;
    *(_QWORD *)(v4 + 16) = v2[2];
    *v2 = 0;
    v2[1] = 0;
    v2[2] = 0;
  }
  a2[1] = v4;
  v6 = (_QWORD *)*result;
  *result = v4;
  a2[1] = v6;
  v7 = result[1];
  result[1] = a2[2];
  a2[2] = v7;
  v8 = result[2];
  result[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

void *std::__allocate_at_least[abi:ne180100]<std::allocator<std::vector<char>>>(unint64_t a1)
{
  if (a1 >= 0xAAAAAAAAAAAAAABLL)
    std::__throw_bad_array_new_length[abi:ne180100]();
  return operator new(24 * a1);
}

uint64_t std::__split_buffer<std::vector<char>>::~__split_buffer(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v3 = *(_QWORD *)(a1 + 8);
  v2 = *(_QWORD *)(a1 + 16);
  while (v2 != v3)
  {
    v4 = *(void **)(v2 - 24);
    *(_QWORD *)(a1 + 16) = v2 - 24;
    if (v4)
    {
      *(_QWORD *)(v2 - 16) = v4;
      operator delete(v4);
      v2 = *(_QWORD *)(a1 + 16);
    }
    else
    {
      v2 -= 24;
    }
  }
  if (*(_QWORD *)a1)
    operator delete(*(void **)a1);
  return a1;
}

void std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::clear(uint64_t a1)
{
  uint64_t v2;
  uint64_t i;

  if (*(_QWORD *)(a1 + 24))
  {
    std::__hash_table<std::string,AddrObjGoogle::protobuf::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::__deallocate_node(a1, *(void ***)(a1 + 16));
    *(_QWORD *)(a1 + 16) = 0;
    v2 = *(_QWORD *)(a1 + 8);
    if (v2)
    {
      for (i = 0; i != v2; ++i)
        *(_QWORD *)(*(_QWORD *)a1 + 8 * i) = 0;
    }
    *(_QWORD *)(a1 + 24) = 0;
  }
}

uint64_t std::__call_once_proxy[abi:ne180100]<std::tuple<void (&)(std::pair<google::protobuf::FileDescriptorTables const*,google::protobuf::SourceCodeInfo const*> *),std::pair<google::protobuf::FileDescriptorTables const*,google::protobuf::SourceCodeInfo const*> *&&>>(uint64_t a1)
{
  return (**(uint64_t (***)(_QWORD))a1)(**(_QWORD **)(*(_QWORD *)a1 + 8));
}

void std::__tree<std::__value_type<std::string,BOOL>,std::__map_value_compare<std::string,std::__value_type<std::string,BOOL>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,BOOL>>>::destroy(char *a1)
{
  if (a1)
  {
    std::__tree<std::__value_type<std::string,BOOL>,std::__map_value_compare<std::string,std::__value_type<std::string,BOOL>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,BOOL>>>::destroy(*(_QWORD *)a1);
    std::__tree<std::__value_type<std::string,BOOL>,std::__map_value_compare<std::string,std::__value_type<std::string,BOOL>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,BOOL>>>::destroy(*((_QWORD *)a1 + 1));
    if (a1[55] < 0)
      operator delete(*((void **)a1 + 4));
    operator delete(a1);
  }
}

std::mutex **google::protobuf::internal::OnShutdownDelete<google::protobuf::DescriptorPool>(google::protobuf::DescriptorPool *)::{lambda(void const*)#1}::__invoke(std::mutex **result)
{
  std::mutex **v1;
  std::mutex *v2;
  std::mutex *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void **v8;

  if (result)
  {
    v1 = result;
    v2 = *result;
    if (v2)
    {
      std::mutex::~mutex(v2);
      MEMORY[0x18D76437C]();
    }
    std::__tree<std::__value_type<std::string,BOOL>,std::__map_value_compare<std::string,std::__value_type<std::string,BOOL>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,BOOL>>>::destroy((char *)v1[7]);
    v3 = v1[4];
    v1[4] = 0;
    if (v3)
    {
      v4 = *(void **)&v3[7].__m_.__opaque[24];
      if (v4)
      {
        *(_QWORD *)&v3[7].__m_.__opaque[32] = v4;
        operator delete(v4);
      }
      v5 = *(void **)v3[7].__m_.__opaque;
      if (v5)
      {
        *(_QWORD *)&v3[7].__m_.__opaque[8] = v5;
        operator delete(v5);
      }
      v6 = *(void **)&v3[6].__m_.__opaque[40];
      if (v6)
      {
        *(_QWORD *)&v3[6].__m_.__opaque[48] = v6;
        operator delete(v6);
      }
      v7 = *(void **)&v3[6].__m_.__opaque[16];
      if (v7)
      {
        *(_QWORD *)&v3[6].__m_.__opaque[24] = v7;
        operator delete(v7);
      }
      std::__tree<std::__value_type<std::pair<google::protobuf::Descriptor const*,int>,google::protobuf::FieldDescriptor const*>,std::__map_value_compare<std::pair<google::protobuf::Descriptor const*,int>,std::__value_type<std::pair<google::protobuf::Descriptor const*,int>,google::protobuf::FieldDescriptor const*>,std::less<std::pair<google::protobuf::Descriptor const*,int>>,true>,std::allocator<std::__value_type<std::pair<google::protobuf::Descriptor const*,int>,google::protobuf::FieldDescriptor const*>>>::destroy(*(_QWORD **)v3[6].__m_.__opaque);
      std::__hash_table<std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>>>::~__hash_table((uint64_t)&v3[5].__m_.__opaque[16]);
      std::__hash_table<std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>>>::~__hash_table((uint64_t)&v3[4].__m_.__opaque[40]);
      v8 = (void **)&v3[4].__m_.__opaque[16];
      std::vector<std::unique_ptr<google::protobuf::FileDescriptorTables>>::__destroy_vector::operator()[abi:ne180100](&v8);
      v8 = (void **)&v3[4];
      std::vector<std::unique_ptr<std::once_flag>>::__destroy_vector::operator()[abi:ne180100](&v8);
      v8 = (void **)&v3[3].__m_.__opaque[32];
      std::vector<std::unique_ptr<google::protobuf::Message>>::__destroy_vector::operator()[abi:ne180100](&v8);
      v8 = (void **)&v3[3].__m_.__opaque[8];
      std::vector<std::unique_ptr<std::string>>::__destroy_vector::operator()[abi:ne180100](&v8);
      v8 = (void **)&v3[2].__m_.__opaque[48];
      std::vector<std::vector<char>>::__destroy_vector::operator()[abi:ne180100](&v8);
      std::__hash_table<std::__hash_value_type<std::string,google::protobuf::Descriptor::WellKnownType>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,google::protobuf::Descriptor::WellKnownType>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,google::protobuf::Descriptor::WellKnownType>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,google::protobuf::Descriptor::WellKnownType>>>::~__hash_table((uint64_t)&v3[2].__m_.__opaque[8]);
      std::__hash_table<std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>>>::~__hash_table((uint64_t)&v3[1].__m_.__opaque[32]);
      std::__hash_table<std::string,AddrObjGoogle::protobuf::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table((uint64_t)&v3[1]);
      std::__hash_table<std::string,AddrObjGoogle::protobuf::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table((uint64_t)&v3->__m_.__opaque[16]);
      v8 = (void **)v3;
      std::vector<std::string>::__destroy_vector::operator()[abi:ne180100](&v8);
      MEMORY[0x18D76437C](v3, 0x10A0C40292B2256);
    }
    JUMPOUT(0x18D76437CLL);
  }
  return result;
}

void *std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::__emplace_unique_key_args<std::string,std::string>(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  unint64_t v3;
  _QWORD *v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint8x8_t v11;
  unint64_t v12;
  void **v13;
  void *i;
  unint64_t v15;
  _QWORD *v16;
  float v17;
  float v18;
  _BOOL8 v19;
  unint64_t v20;
  unint64_t v21;
  size_t v22;
  uint64_t v23;
  _QWORD *v24;
  unint64_t v25;

  v7 = (_QWORD *)(a1 + 24);
  v8 = std::__string_hash<char>::operator()[abi:ne180100](a1 + 24, (uint64_t)a2);
  v9 = v8;
  v10 = *(_QWORD *)(a1 + 8);
  if (v10)
  {
    v11 = (uint8x8_t)vcnt_s8((int8x8_t)v10);
    v11.i16[0] = vaddlv_u8(v11);
    v12 = v11.u32[0];
    if (v11.u32[0] > 1uLL)
    {
      v3 = v8;
      if (v8 >= v10)
        v3 = v8 % v10;
    }
    else
    {
      v3 = (v10 - 1) & v8;
    }
    v13 = *(void ***)(*(_QWORD *)a1 + 8 * v3);
    if (v13)
    {
      for (i = *v13; i; i = *(void **)i)
      {
        v15 = *((_QWORD *)i + 1);
        if (v15 == v9)
        {
          if ((std::equal_to<std::string>::operator()[abi:ne180100](a1 + 32, (unsigned __int8 *)i + 16, a2) & 1) != 0)
            return i;
        }
        else
        {
          if (v12 > 1)
          {
            if (v15 >= v10)
              v15 %= v10;
          }
          else
          {
            v15 &= v10 - 1;
          }
          if (v15 != v3)
            break;
        }
      }
    }
  }
  v16 = (_QWORD *)(a1 + 16);
  i = operator new(0x28uLL);
  *(_QWORD *)i = 0;
  *((_QWORD *)i + 1) = v9;
  *((_OWORD *)i + 1) = *(_OWORD *)a3;
  *((_QWORD *)i + 4) = *(_QWORD *)(a3 + 16);
  *(_QWORD *)a3 = 0;
  *(_QWORD *)(a3 + 8) = 0;
  *(_QWORD *)(a3 + 16) = 0;
  v17 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v18 = *(float *)(a1 + 32);
  if (!v10 || (float)(v18 * (float)v10) < v17)
  {
    v19 = 1;
    if (v10 >= 3)
      v19 = (v10 & (v10 - 1)) != 0;
    v20 = v19 | (2 * v10);
    v21 = vcvtps_u32_f32(v17 / v18);
    if (v20 <= v21)
      v22 = v21;
    else
      v22 = v20;
    std::__hash_table<std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>>>::__rehash<true>(a1, v22);
    v10 = *(_QWORD *)(a1 + 8);
    if ((v10 & (v10 - 1)) != 0)
    {
      if (v9 >= v10)
        v3 = v9 % v10;
      else
        v3 = v9;
    }
    else
    {
      v3 = (v10 - 1) & v9;
    }
  }
  v23 = *(_QWORD *)a1;
  v24 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v3);
  if (v24)
  {
    *(_QWORD *)i = *v24;
LABEL_38:
    *v24 = i;
    goto LABEL_39;
  }
  *(_QWORD *)i = *v16;
  *v16 = i;
  *(_QWORD *)(v23 + 8 * v3) = v16;
  if (*(_QWORD *)i)
  {
    v25 = *(_QWORD *)(*(_QWORD *)i + 8);
    if ((v10 & (v10 - 1)) != 0)
    {
      if (v25 >= v10)
        v25 %= v10;
    }
    else
    {
      v25 &= v10 - 1;
    }
    v24 = (_QWORD *)(*(_QWORD *)a1 + 8 * v25);
    goto LABEL_38;
  }
LABEL_39:
  ++*v7;
  return i;
}

void sub_18888B084(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  void **v10;
  uint64_t v11;

  std::__hash_node_destructor<std::allocator<std::__hash_node<std::string,void *>>>::operator()[abi:ne180100](v11, v10);
  _Unwind_Resume(a1);
}

uint64_t *std::__tree<google::protobuf::Descriptor const*>::__emplace_unique_key_args<google::protobuf::Descriptor const*,google::protobuf::Descriptor const*>(uint64_t *result, unint64_t a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t **v6;
  uint64_t **v7;
  unint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t *v11;

  v4 = result;
  v6 = (uint64_t **)(result + 1);
  v5 = (uint64_t *)result[1];
  if (v5)
  {
    while (1)
    {
      while (1)
      {
        v7 = (uint64_t **)v5;
        v8 = v5[4];
        if (v8 <= a2)
          break;
        v5 = *v7;
        v6 = v7;
        if (!*v7)
          goto LABEL_9;
      }
      if (v8 >= a2)
        break;
      v5 = v7[1];
      if (!v5)
      {
        v6 = v7 + 1;
        goto LABEL_9;
      }
    }
  }
  else
  {
    v7 = (uint64_t **)(result + 1);
LABEL_9:
    v9 = (uint64_t *)operator new(0x28uLL);
    v9[4] = a3;
    *v9 = 0;
    v9[1] = 0;
    v9[2] = (uint64_t)v7;
    *v6 = v9;
    v10 = *(_QWORD *)*v4;
    if (v10)
    {
      *v4 = v10;
      v11 = *v6;
    }
    else
    {
      v11 = v9;
    }
    result = std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>((uint64_t *)v4[1], v11);
    ++v4[2];
  }
  return result;
}

std::string *std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::string>,google::protobuf::internal::RepeatedPtrIterator<std::string const>,google::protobuf::internal::RepeatedPtrIterator<std::string const>,std::string*>(uint64_t a1, __int128 **a2, __int128 **a3, std::string *this)
{
  std::string *v4;
  __int128 **v6;
  __int128 *v7;
  __int128 v8;
  _QWORD v10[3];
  char v11;
  std::string *v12;
  std::string *v13;

  v4 = this;
  v12 = this;
  v13 = this;
  v10[0] = a1;
  v10[1] = &v12;
  v10[2] = &v13;
  v11 = 0;
  if (a2 != a3)
  {
    v6 = a2;
    do
    {
      v7 = *v6;
      if (*((char *)*v6 + 23) < 0)
      {
        std::string::__init_copy_ctor_external(v4, *(const std::string::value_type **)v7, *((_QWORD *)v7 + 1));
        v4 = v13;
      }
      else
      {
        v8 = *v7;
        v4->__r_.__value_.__r.__words[2] = *((_QWORD *)v7 + 2);
        *(_OWORD *)&v4->__r_.__value_.__l.__data_ = v8;
      }
      ++v6;
      v13 = ++v4;
    }
    while (v6 != a3);
  }
  v11 = 1;
  std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::string>,std::string*>>::~__exception_guard_exceptions[abi:ne180100]((uint64_t)v10);
  return v4;
}

void sub_18888B200(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::string>,std::string*>>::~__exception_guard_exceptions[abi:ne180100]((uint64_t)&a9);
  _Unwind_Resume(a1);
}

_QWORD *std::vector<int>::__init_with_size[abi:ne180100]<int *,int *>(_QWORD *result, const void *a2, uint64_t a3, unint64_t a4)
{
  _QWORD *v6;
  uint64_t v7;
  size_t v8;

  if (a4)
  {
    v6 = result;
    result = std::vector<int>::__vallocate[abi:ne180100](result, a4);
    v7 = v6[1];
    v8 = a3 - (_QWORD)a2;
    if (v8)
      result = memmove((void *)v6[1], a2, v8);
    v6[1] = v7 + v8;
  }
  return result;
}

void sub_18888B270(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

void std::allocator_traits<std::allocator<google::protobuf::`anonymous namespace'::OptionsToInterpret>>::destroy[abi:ne180100]<google::protobuf::`anonymous namespace'::OptionsToInterpret,void>(uint64_t a1)
{
  void *v2;

  v2 = *(void **)(a1 + 48);
  if (v2)
  {
    *(_QWORD *)(a1 + 56) = v2;
    operator delete(v2);
  }
  if (*(char *)(a1 + 47) < 0)
    operator delete(*(void **)(a1 + 24));
  if (*(char *)(a1 + 23) < 0)
    operator delete(*(void **)a1);
}

void google::protobuf::`anonymous namespace'::OptionsToInterpret::~OptionsToInterpret(google::protobuf::_anonymous_namespace_::OptionsToInterpret *this)
{
  void *v2;

  v2 = (void *)*((_QWORD *)this + 6);
  if (v2)
  {
    *((_QWORD *)this + 7) = v2;
    operator delete(v2);
  }
  if (*((char *)this + 47) < 0)
    operator delete(*((void **)this + 3));
  if (*((char *)this + 23) < 0)
    operator delete(*(void **)this);
}

uint64_t std::__tree<google::protobuf::FileDescriptor const*>::__emplace_unique_key_args<google::protobuf::FileDescriptor const*,google::protobuf::FileDescriptor const* const&>(uint64_t **a1, unint64_t a2, uint64_t a3)
{
  uint64_t *v5;
  uint64_t **v6;
  uint64_t **v7;
  unint64_t v8;
  uint64_t *v9;
  uint64_t *v10;
  uint64_t *v11;

  v6 = a1 + 1;
  v5 = a1[1];
  if (v5)
  {
    while (1)
    {
      while (1)
      {
        v7 = (uint64_t **)v5;
        v8 = v5[4];
        if (v8 <= a2)
          break;
        v5 = *v7;
        v6 = v7;
        if (!*v7)
          goto LABEL_9;
      }
      if (v8 >= a2)
        return 0;
      v5 = v7[1];
      if (!v5)
      {
        v6 = v7 + 1;
        goto LABEL_9;
      }
    }
  }
  else
  {
    v7 = a1 + 1;
LABEL_9:
    v9 = (uint64_t *)operator new(0x28uLL);
    v9[4] = a3;
    *v9 = 0;
    v9[1] = 0;
    v9[2] = (uint64_t)v7;
    *v6 = v9;
    v10 = (uint64_t *)**a1;
    if (v10)
    {
      *a1 = v10;
      v11 = *v6;
    }
    else
    {
      v11 = v9;
    }
    std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(a1[1], v11);
    a1[2] = (uint64_t *)((char *)a1[2] + 1);
    return 1;
  }
}

void std::__tree<google::protobuf::FileDescriptor const*>::__erase_unique<google::protobuf::FileDescriptor const*>(uint64_t **a1, unint64_t a2)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t *v5;
  uint64_t *v6;
  unint64_t v7;
  BOOL v8;
  uint64_t **v9;
  uint64_t *v10;
  uint64_t *v11;
  uint64_t *v12;
  BOOL v13;

  v4 = (uint64_t *)(a1 + 1);
  v3 = a1[1];
  if (v3)
  {
    v5 = v4;
    v6 = v3;
    do
    {
      v7 = v6[4];
      v8 = v7 >= a2;
      if (v7 >= a2)
        v9 = (uint64_t **)v6;
      else
        v9 = (uint64_t **)(v6 + 1);
      if (v8)
        v5 = v6;
      v6 = *v9;
    }
    while (*v9);
    if (v5 != v4 && v5[4] <= a2)
    {
      v10 = (uint64_t *)v5[1];
      if (v10)
      {
        do
        {
          v11 = v10;
          v10 = (uint64_t *)*v10;
        }
        while (v10);
      }
      else
      {
        v12 = v5;
        do
        {
          v11 = (uint64_t *)v12[2];
          v13 = *v11 == (_QWORD)v12;
          v12 = v11;
        }
        while (!v13);
      }
      if (*a1 == v5)
        *a1 = v11;
      a1[2] = (uint64_t *)((char *)a1[2] - 1);
      std::__tree_remove[abi:ne180100]<std::__tree_node_base<void *> *>(v3, v5);
      operator delete(v5);
    }
  }
}

void std::vector<google::protobuf::`anonymous namespace'::OptionsToInterpret>::push_back[abi:ne180100](void **a1, __int128 *a2)
{
  char *v4;
  char *v5;
  __int128 v6;
  __int128 v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  char *v13;
  char *v14;
  char *v15;
  __int128 v16;
  char *v17;
  char *v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;

  v4 = (char *)a1[1];
  v5 = (char *)a1[2];
  if (v4 >= v5)
  {
    v9 = 0x2E8BA2E8BA2E8BA3 * ((v4 - (_BYTE *)*a1) >> 3);
    v10 = v9 + 1;
    if ((unint64_t)(v9 + 1) > 0x2E8BA2E8BA2E8BALL)
      std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
    v11 = 0x2E8BA2E8BA2E8BA3 * ((v5 - (_BYTE *)*a1) >> 3);
    if (2 * v11 > v10)
      v10 = 2 * v11;
    if (v11 >= 0x1745D1745D1745DLL)
      v12 = 0x2E8BA2E8BA2E8BALL;
    else
      v12 = v10;
    if (v12)
    {
      if (v12 > 0x2E8BA2E8BA2E8BALL)
        std::__throw_bad_array_new_length[abi:ne180100]();
      v13 = (char *)operator new(88 * v12);
    }
    else
    {
      v13 = 0;
    }
    v14 = &v13[88 * v9];
    *((_QWORD *)v14 + 2) = *((_QWORD *)a2 + 2);
    *(_OWORD *)v14 = *a2;
    v15 = &v13[88 * v12];
    *(_QWORD *)a2 = 0;
    *((_QWORD *)a2 + 1) = 0;
    v16 = *(__int128 *)((char *)a2 + 24);
    *((_QWORD *)a2 + 2) = 0;
    *((_QWORD *)a2 + 3) = 0;
    *(_OWORD *)(v14 + 24) = v16;
    *((_QWORD *)v14 + 5) = *((_QWORD *)a2 + 5);
    *((_QWORD *)a2 + 4) = 0;
    *((_QWORD *)a2 + 5) = 0;
    *((_QWORD *)v14 + 8) = 0;
    *((_OWORD *)v14 + 3) = a2[3];
    *((_QWORD *)v14 + 8) = *((_QWORD *)a2 + 8);
    *((_QWORD *)a2 + 6) = 0;
    *((_QWORD *)a2 + 7) = 0;
    *((_QWORD *)a2 + 8) = 0;
    *(_OWORD *)(v14 + 72) = *(__int128 *)((char *)a2 + 72);
    v8 = v14 + 88;
    v17 = (char *)*a1;
    v18 = (char *)a1[1];
    if (v18 == *a1)
    {
      *a1 = v14;
      a1[1] = v8;
      a1[2] = v15;
    }
    else
    {
      do
      {
        v19 = *(_OWORD *)(v18 - 88);
        *((_QWORD *)v14 - 9) = *((_QWORD *)v18 - 9);
        *(_OWORD *)(v14 - 88) = v19;
        *((_QWORD *)v18 - 10) = 0;
        *((_QWORD *)v18 - 9) = 0;
        *((_QWORD *)v18 - 11) = 0;
        v20 = *((_OWORD *)v18 - 4);
        *((_QWORD *)v14 - 6) = *((_QWORD *)v18 - 6);
        *((_OWORD *)v14 - 4) = v20;
        *((_QWORD *)v18 - 7) = 0;
        *((_QWORD *)v18 - 6) = 0;
        *((_QWORD *)v18 - 8) = 0;
        *((_QWORD *)v14 - 5) = 0;
        *((_QWORD *)v14 - 4) = 0;
        *((_QWORD *)v14 - 3) = 0;
        *(_OWORD *)(v14 - 40) = *(_OWORD *)(v18 - 40);
        *((_QWORD *)v14 - 3) = *((_QWORD *)v18 - 3);
        *((_QWORD *)v18 - 5) = 0;
        *((_QWORD *)v18 - 4) = 0;
        *((_QWORD *)v18 - 3) = 0;
        *((_OWORD *)v14 - 1) = *((_OWORD *)v18 - 1);
        v14 -= 88;
        v18 -= 88;
      }
      while (v18 != v17);
      v18 = (char *)*a1;
      v21 = (uint64_t)a1[1];
      *a1 = v14;
      a1[1] = v8;
      a1[2] = v15;
      while ((char *)v21 != v18)
      {
        v21 -= 88;
      }
    }
    if (v18)
      operator delete(v18);
  }
  else
  {
    v6 = *a2;
    *((_QWORD *)v4 + 2) = *((_QWORD *)a2 + 2);
    *(_OWORD *)v4 = v6;
    *((_QWORD *)a2 + 1) = 0;
    *((_QWORD *)a2 + 2) = 0;
    *(_QWORD *)a2 = 0;
    v7 = *(__int128 *)((char *)a2 + 24);
    *((_QWORD *)v4 + 5) = *((_QWORD *)a2 + 5);
    *(_OWORD *)(v4 + 24) = v7;
    *((_QWORD *)a2 + 4) = 0;
    *((_QWORD *)a2 + 5) = 0;
    *((_QWORD *)a2 + 3) = 0;
    *((_QWORD *)v4 + 6) = 0;
    *((_QWORD *)v4 + 7) = 0;
    *((_QWORD *)v4 + 8) = 0;
    *((_OWORD *)v4 + 3) = a2[3];
    *((_QWORD *)v4 + 8) = *((_QWORD *)a2 + 8);
    *((_QWORD *)a2 + 6) = 0;
    *((_QWORD *)a2 + 7) = 0;
    *((_QWORD *)a2 + 8) = 0;
    *(_OWORD *)(v4 + 72) = *(__int128 *)((char *)a2 + 72);
    v8 = v4 + 88;
  }
  a1[1] = v8;
}

std::string *google::protobuf::`anonymous namespace'::OptionsToInterpret::OptionsToInterpret(std::string *this, __int128 *a2, __int128 *a3, uint64_t a4, std::string::size_type a5, std::string::size_type a6)
{
  __int128 v11;
  __int128 v12;

  if (*((char *)a2 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(this, *(const std::string::value_type **)a2, *((_QWORD *)a2 + 1));
  }
  else
  {
    v11 = *a2;
    this->__r_.__value_.__r.__words[2] = *((_QWORD *)a2 + 2);
    *(_OWORD *)&this->__r_.__value_.__l.__data_ = v11;
  }
  if (*((char *)a3 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(this + 1, *(const std::string::value_type **)a3, *((_QWORD *)a3 + 1));
  }
  else
  {
    v12 = *a3;
    this[1].__r_.__value_.__r.__words[2] = *((_QWORD *)a3 + 2);
    *(_OWORD *)&this[1].__r_.__value_.__l.__data_ = v12;
  }
  this[2].__r_.__value_.__r.__words[0] = 0;
  this[2].__r_.__value_.__l.__size_ = 0;
  this[2].__r_.__value_.__r.__words[2] = 0;
  std::vector<int>::__init_with_size[abi:ne180100]<int *,int *>(this[2].__r_.__value_.__r.__words, *(const void **)a4, *(_QWORD *)(a4 + 8), (uint64_t)(*(_QWORD *)(a4 + 8) - *(_QWORD *)a4) >> 2);
  this[3].__r_.__value_.__r.__words[0] = a5;
  this[3].__r_.__value_.__l.__size_ = a6;
  return this;
}

void sub_18888B7A8(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (*(char *)(v1 + 23) < 0)
    operator delete(*(void **)v1);
  _Unwind_Resume(exception_object);
}

uint64_t *std::__tree<std::__value_type<std::string,google::protobuf::FieldDescriptor const*>,std::__map_value_compare<std::string,std::__value_type<std::string,google::protobuf::FieldDescriptor const*>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,google::protobuf::FieldDescriptor const*>>>::__emplace_unique_key_args<std::string,std::piecewise_construct_t const&,std::tuple<std::string const&>,std::tuple<>>(uint64_t **a1, const void **a2, __int128 **a3)
{
  uint64_t *v5;
  uint64_t **v6;
  uint64_t **v8;
  const void **v9;
  __int128 *v10;
  uint64_t *v11;
  std::string *v12;
  __int128 v13;
  uint64_t *v14;
  uint64_t *v15;

  v6 = a1 + 1;
  v5 = a1[1];
  if (!v5)
  {
    v8 = a1 + 1;
LABEL_9:
    v10 = *a3;
    v11 = (uint64_t *)operator new(0x40uLL);
    v12 = (std::string *)(v11 + 4);
    if (*((char *)v10 + 23) < 0)
    {
      std::string::__init_copy_ctor_external(v12, *(const std::string::value_type **)v10, *((_QWORD *)v10 + 1));
    }
    else
    {
      v13 = *v10;
      v11[6] = *((_QWORD *)v10 + 2);
      *(_OWORD *)&v12->__r_.__value_.__l.__data_ = v13;
    }
    v11[7] = 0;
    *v11 = 0;
    v11[1] = 0;
    v11[2] = (uint64_t)v8;
    *v6 = v11;
    v14 = (uint64_t *)**a1;
    v15 = v11;
    if (v14)
    {
      *a1 = v14;
      v15 = *v6;
    }
    std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(a1[1], v15);
    a1[2] = (uint64_t *)((char *)a1[2] + 1);
    return v11;
  }
  while (1)
  {
    while (1)
    {
      v8 = (uint64_t **)v5;
      v9 = (const void **)(v5 + 4);
      if (!std::less<std::string>::operator()[abi:ne180100]((uint64_t)(a1 + 2), a2, (const void **)v5 + 4))
        break;
      v5 = *v8;
      v6 = v8;
      if (!*v8)
        goto LABEL_9;
    }
    if (!std::less<std::string>::operator()[abi:ne180100]((uint64_t)(a1 + 2), v9, a2))
      break;
    v6 = v8 + 1;
    v5 = v8[1];
    if (!v5)
      goto LABEL_9;
  }
  v11 = *v6;
  if (!*v6)
    goto LABEL_9;
  return v11;
}

void sub_18888BA00(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

void std::__tree<std::__value_type<std::vector<int>,std::vector<int>>,std::__map_value_compare<std::vector<int>,std::__value_type<std::vector<int>,std::vector<int>>,std::less<std::vector<int>>,true>,std::allocator<std::__value_type<std::vector<int>,std::vector<int>>>>::destroy(_QWORD *a1)
{
  if (a1)
  {
    std::__tree<std::__value_type<std::vector<int>,std::vector<int>>,std::__map_value_compare<std::vector<int>,std::__value_type<std::vector<int>,std::vector<int>>,std::less<std::vector<int>>,true>,std::allocator<std::__value_type<std::vector<int>,std::vector<int>>>>::destroy(*a1);
    std::__tree<std::__value_type<std::vector<int>,std::vector<int>>,std::__map_value_compare<std::vector<int>,std::__value_type<std::vector<int>,std::vector<int>>,std::less<std::vector<int>>,true>,std::allocator<std::__value_type<std::vector<int>,std::vector<int>>>>::destroy(a1[1]);
    std::__destroy_at[abi:ne180100]<std::pair<std::vector<int> const,std::vector<int>>,0>((uint64_t)(a1 + 4));
    operator delete(a1);
  }
}

void std::__destroy_at[abi:ne180100]<std::pair<std::vector<int> const,std::vector<int>>,0>(uint64_t a1)
{
  void *v2;
  void *v3;

  v2 = *(void **)(a1 + 24);
  if (v2)
  {
    *(_QWORD *)(a1 + 32) = v2;
    operator delete(v2);
  }
  v3 = *(void **)a1;
  if (*(_QWORD *)a1)
  {
    *(_QWORD *)(a1 + 8) = v3;
    operator delete(v3);
  }
}

void std::__tree<std::__value_type<std::vector<int>,int>,std::__map_value_compare<std::vector<int>,std::__value_type<std::vector<int>,int>,std::less<std::vector<int>>,true>,std::allocator<std::__value_type<std::vector<int>,int>>>::destroy(_QWORD *a1)
{
  void *v2;

  if (a1)
  {
    std::__tree<std::__value_type<std::vector<int>,int>,std::__map_value_compare<std::vector<int>,std::__value_type<std::vector<int>,int>,std::less<std::vector<int>>,true>,std::allocator<std::__value_type<std::vector<int>,int>>>::destroy(*a1);
    std::__tree<std::__value_type<std::vector<int>,int>,std::__map_value_compare<std::vector<int>,std::__value_type<std::vector<int>,int>,std::less<std::vector<int>>,true>,std::allocator<std::__value_type<std::vector<int>,int>>>::destroy(a1[1]);
    v2 = (void *)a1[4];
    if (v2)
    {
      a1[5] = v2;
      operator delete(v2);
    }
    operator delete(a1);
  }
}

void std::default_delete<google::protobuf::UnknownFieldSet>::operator()[abi:ne180100](google::protobuf::UnknownFieldSet *a1)
{
  void *v2;

  v2 = *(void **)a1;
  if (v2 != *((void **)a1 + 1))
  {
    google::protobuf::UnknownFieldSet::ClearFallback(a1);
    v2 = *(void **)a1;
  }
  if (v2)
  {
    *((_QWORD *)a1 + 1) = v2;
    operator delete(v2);
  }
  JUMPOUT(0x18D76437CLL);
}

void std::unique_ptr<std::__tree_node<std::__value_type<std::vector<int>,std::vector<int>>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<std::vector<int>,std::vector<int>>,void *>>>>::reset[abi:ne180100](uint64_t a1)
{
  void *v1;

  v1 = *(void **)a1;
  *(_QWORD *)a1 = 0;
  if (v1)
  {
    if (*(_BYTE *)(a1 + 16))
      std::__destroy_at[abi:ne180100]<std::pair<std::vector<int> const,std::vector<int>>,0>((uint64_t)v1 + 32);
    operator delete(v1);
  }
}

void google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<google::protobuf::SourceCodeInfo_Location>::TypeHandler>(_QWORD *a1)
{
  google::protobuf::SourceCodeInfo_Location **v2;
  google::protobuf::SourceCodeInfo_Location **v3;
  uint64_t v4;

  v2 = (google::protobuf::SourceCodeInfo_Location **)a1[2];
  if (v2 && !*a1)
  {
    v3 = v2 + 1;
    v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          google::protobuf::SourceCodeInfo_Location::~SourceCodeInfo_Location(*v3);
          MEMORY[0x18D76437C]();
        }
        ++v3;
        --v4;
      }
      while (v4);
      v2 = (google::protobuf::SourceCodeInfo_Location **)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<google::protobuf::SourceCodeInfo_Location>::TypeHandler>(google::protobuf::internal::ArenaImpl **a1, google::protobuf::SourceCodeInfo_Location **a2, const google::protobuf::SourceCodeInfo_Location **a3, unsigned int a4, unsigned int a5)
{
  uint64_t v10;
  const google::protobuf::SourceCodeInfo_Location **v11;
  google::protobuf::SourceCodeInfo_Location **v12;
  const google::protobuf::SourceCodeInfo_Location *v13;
  const google::protobuf::SourceCodeInfo_Location *v14;
  google::protobuf::SourceCodeInfo_Location *v15;
  BOOL v16;
  int v17;
  google::protobuf::internal::ArenaImpl *v18;
  google::protobuf::SourceCodeInfo_Location **v19;
  const google::protobuf::SourceCodeInfo_Location **v20;
  const google::protobuf::SourceCodeInfo_Location *v21;
  google::protobuf::SourceCodeInfo_Location *v22;

  if ((int)a5 >= (int)a4)
    v10 = a4;
  else
    v10 = a5;
  if ((int)v10 >= 1)
  {
    v11 = a3;
    v12 = a2;
    do
    {
      v14 = *v11++;
      v13 = v14;
      v15 = *v12++;
      google::protobuf::internal::GenericTypeHandler<google::protobuf::SourceCodeInfo_Location>::Merge(v13, v15);
      --v10;
    }
    while (v10);
  }
  v16 = __OFSUB__(a4, a5);
  v17 = a4 - a5;
  if (!((v17 < 0) ^ v16 | (v17 == 0)))
  {
    v18 = *a1;
    v19 = &a2[a5];
    v20 = &a3[a5];
    do
    {
      v21 = *v20++;
      v22 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::SourceCodeInfo_Location>(v18);
      google::protobuf::internal::GenericTypeHandler<google::protobuf::SourceCodeInfo_Location>::Merge(v21, v22);
      *v19++ = v22;
      --v17;
    }
    while (v17);
  }
}

void google::protobuf::internal::GenericTypeHandler<google::protobuf::SourceCodeInfo_Location>::Merge(const google::protobuf::SourceCodeInfo_Location *a1, google::protobuf::SourceCodeInfo_Location *a2)
{
  google::protobuf::SourceCodeInfo_Location::MergeFrom(a2, a1);
}

uint64_t std::__call_once_proxy[abi:ne180100]<std::tuple<void (&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>(uint64_t a1)
{
  return (**(uint64_t (***)(_QWORD))a1)(**(_QWORD **)(*(_QWORD *)a1 + 8));
}

uint64_t std::__call_once_proxy[abi:ne180100]<std::tuple<void (&)(google::protobuf::FileDescriptor const*),google::protobuf::FileDescriptor const*&&>>(uint64_t a1)
{
  return (**(uint64_t (***)(_QWORD))a1)(**(_QWORD **)(*(_QWORD *)a1 + 8));
}

uint64_t std::__call_once_proxy[abi:ne180100]<std::tuple<void (&)(google::protobuf::internal::LazyDescriptor *),google::protobuf::internal::LazyDescriptor *&&>>(uint64_t a1)
{
  return (**(uint64_t (***)(_QWORD))a1)(**(_QWORD **)(*(_QWORD *)a1 + 8));
}

BOOL google::protobuf::TextFormat::Printer::PrintToString(google::protobuf::TextFormat::Printer *a1, const google::protobuf::Message *a2, uint64_t a3)
{
  _QWORD v4[2];

  if (*(char *)(a3 + 23) < 0)
  {
    **(_BYTE **)a3 = 0;
    *(_QWORD *)(a3 + 8) = 0;
  }
  else
  {
    *(_BYTE *)a3 = 0;
    *(_BYTE *)(a3 + 23) = 0;
  }
  v4[0] = &off_1E1BF87E8;
  v4[1] = a3;
  return google::protobuf::TextFormat::Printer::Print(a1, a2, (google::protobuf::io::ZeroCopyOutputStream *)v4);
}

uint64_t google::protobuf::Message::ShortDebugString@<X0>(google::protobuf::Message *this@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  _BYTE v8[24];
  uint64_t v9;
  _QWORD *v10[3];
  _QWORD *v11[4];

  *(_QWORD *)a2 = 0;
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0;
  google::protobuf::TextFormat::Printer::Printer((google::protobuf::TextFormat::Printer *)v8);
  v8[4] = 1;
  v8[9] = 1;
  google::protobuf::TextFormat::Printer::PrintToString((google::protobuf::TextFormat::Printer *)v8, this, a2);
  v4 = *(unsigned __int8 *)(a2 + 23);
  if (*(char *)(a2 + 23) < 0)
  {
    v5 = *(_QWORD *)(a2 + 8);
    if (!v5)
      goto LABEL_11;
  }
  else
  {
    if (!*(_BYTE *)(a2 + 23))
      goto LABEL_11;
    v5 = *(unsigned __int8 *)(a2 + 23);
  }
  v6 = v5 - 1;
  if ((v4 & 0x80) != 0)
  {
    if (*(_BYTE *)(*(_QWORD *)a2 + v6) != 32)
      goto LABEL_11;
    v4 = *(_QWORD *)(a2 + 8);
    goto LABEL_10;
  }
  if (*(_BYTE *)(a2 + v6) == 32)
LABEL_10:
    std::string::resize((std::string *)a2, v4 - 1, 0);
LABEL_11:
  std::__tree<std::__value_type<google::protobuf::Descriptor const*,std::unique_ptr<google::protobuf::TextFormat::MessagePrinter const>>,std::__map_value_compare<google::protobuf::Descriptor const*,std::__value_type<google::protobuf::Descriptor const*,std::unique_ptr<google::protobuf::TextFormat::MessagePrinter const>>,std::less<google::protobuf::Descriptor const*>,true>,std::allocator<std::__value_type<google::protobuf::Descriptor const*,std::unique_ptr<google::protobuf::TextFormat::MessagePrinter const>>>>::destroy((uint64_t)v11, v11[1]);
  std::__tree<std::__value_type<google::protobuf::Descriptor const*,std::unique_ptr<google::protobuf::TextFormat::MessagePrinter const>>,std::__map_value_compare<google::protobuf::Descriptor const*,std::__value_type<google::protobuf::Descriptor const*,std::unique_ptr<google::protobuf::TextFormat::MessagePrinter const>>,std::less<google::protobuf::Descriptor const*>,true>,std::allocator<std::__value_type<google::protobuf::Descriptor const*,std::unique_ptr<google::protobuf::TextFormat::MessagePrinter const>>>>::destroy((uint64_t)v10, v10[1]);
  result = v9;
  v9 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_18888BE14(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  va_list va;

  va_start(va, a2);
  google::protobuf::TextFormat::Printer::~Printer((google::protobuf::TextFormat::Printer *)va);
  if (*(char *)(v2 + 23) < 0)
    operator delete(*(void **)v2);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::TextFormat::Finder::FindExtensionByNumber(google::protobuf::TextFormat::Finder *this, const google::protobuf::Descriptor *a2, uint64_t a3)
{
  return google::protobuf::DescriptorPool::FindExtensionByNumber(*(std::mutex ***)(*((_QWORD *)a2 + 2) + 16), a2, a3);
}

uint64_t google::protobuf::`anonymous namespace'::DefaultFinderFindAnyType(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  int v4;
  BOOL v7;
  uint64_t v10;
  const char *v11;

  v4 = *((char *)a2 + 23);
  if (v4 < 0)
  {
    if (a2[1] != 20)
      return 0;
    a2 = (uint64_t *)*a2;
  }
  else if (v4 != 20)
  {
    return 0;
  }
  if (*a2 != *(_QWORD *)"type.googleapis.com/"
    || a2[1] != *(_QWORD *)"gleapis.com/"
    || *((_DWORD *)a2 + 4) != (unint64_t)*(unsigned int *)"com/")
  {
    v7 = *a2 == *(_QWORD *)"type.googleprod.com/" && a2[1] == *(_QWORD *)"gleprod.com/";
    if (!v7 || *((_DWORD *)a2 + 4) != (unint64_t)*(unsigned int *)"com/")
      return 0;
  }
  v10 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 152))(a1);
  return google::protobuf::DescriptorPool::FindMessageTypeByName(*(_QWORD *)(*(_QWORD *)(v10 + 16) + 16), a3, v11);
}

uint64_t google::protobuf::TextFormat::Finder::FindExtensionFactory(google::protobuf::TextFormat::Finder *this, const google::protobuf::FieldDescriptor *a2)
{
  return 0;
}

uint64_t google::protobuf::TextFormat::Parser::Parse(uint64_t a1, uint64_t a2, google::protobuf::Message *a3)
{
  _BOOL4 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE v11[40];
  uint64_t v12;

  (*(void (**)(google::protobuf::Message *))(*(_QWORD *)a3 + 40))(a3);
  v6 = *(_BYTE *)(a1 + 31) == 0;
  v7 = (*(uint64_t (**)(google::protobuf::Message *))(*(_QWORD *)a3 + 152))(a3);
  google::protobuf::TextFormat::Parser::ParserImpl::ParserImpl((uint64_t)v11, v7, a2, *(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), v6, *(_BYTE *)(a1 + 25), *(_BYTE *)(a1 + 26), *(_DWORD *)(a1 + 27), BYTE1(*(_DWORD *)(a1 + 27)), BYTE2(*(_DWORD *)(a1 + 27)), HIBYTE(*(_DWORD *)(a1 + 27)), *(_BYTE *)(a1 + 24), *(_DWORD *)(a1 + 32));
  v9 = google::protobuf::TextFormat::Parser::MergeUsingImpl(a1, v8, a3, (uint64_t)v11);
  google::protobuf::io::Tokenizer::~Tokenizer((google::protobuf::io::Tokenizer *)&v12);
  return v9;
}

void sub_18888BFD0(_Unwind_Exception *a1)
{
  uint64_t v1;

  google::protobuf::io::Tokenizer::~Tokenizer((google::protobuf::io::Tokenizer *)(v1 + 40));
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::TextFormat::Parser::MergeUsingImpl(uint64_t a1, uint64_t a2, google::protobuf::Message *a3, uint64_t a4)
{
  std::string *v8;
  __int128 v9;
  std::string v10;
  void *__p[2];
  std::string::size_type v12;
  std::string *v13[3];

  while (*(_DWORD *)(a4 + 40) != 1)
  {
    if ((google::protobuf::TextFormat::Parser::ParserImpl::ConsumeField((google::protobuf::TextFormat::Parser::ParserImpl *)a4, a3) & 1) == 0)return 0;
  }
  if (*(_BYTE *)(a4 + 244))
    return 0;
  if (!*(_BYTE *)(a1 + 24)
    && ((*(uint64_t (**)(google::protobuf::Message *))(*(_QWORD *)a3 + 48))(a3) & 1) == 0)
  {
    memset(v13, 0, sizeof(v13));
    google::protobuf::Message::FindInitializationErrors(a3, (uint64_t)v13);
    google::protobuf::Join<std::vector<std::string>>(", ", v13, &v10);
    v8 = std::string::insert(&v10, 0, "Message missing required fields: ");
    v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
    v12 = v8->__r_.__value_.__r.__words[2];
    *(_OWORD *)__p = v9;
    v8->__r_.__value_.__l.__size_ = 0;
    v8->__r_.__value_.__r.__words[2] = 0;
    v8->__r_.__value_.__r.__words[0] = 0;
    google::protobuf::TextFormat::Parser::ParserImpl::ReportError((uint64_t *)a4, 0xFFFFFFFFLL, 0, (uint64_t)__p);
    if (SHIBYTE(v12) < 0)
      operator delete(__p[0]);
    if (SHIBYTE(v10.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v10.__r_.__value_.__l.__data_);
    __p[0] = v13;
    std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)__p);
    return 0;
  }
  return 1;
}

void sub_18888C104(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, char *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,char a22)
{
  if (a21 < 0)
    operator delete(__p);
  if (a15 < 0)
    operator delete(a10);
  __p = &a22;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&__p);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::TextFormat::Parser::ParseFromString(char **a1, uint64_t a2, char *a3)
{
  uint64_t result;
  int v7;
  uint64_t v8;
  BOOL v9;
  int v10;
  _QWORD v11[2];
  int v12;
  int v13;
  uint64_t v14;
  _QWORD v15[2];

  google::protobuf::StringPiece::StringPiece<std::allocator<char>>(v15, (uint64_t *)a2, a3);
  if ((_DWORD)result)
  {
    v7 = *(char *)(a2 + 23);
    v8 = *(_QWORD *)a2;
    v9 = v7 < 0;
    if (v7 >= 0)
      v8 = a2;
    v10 = *(unsigned __int8 *)(a2 + 23);
    if (v9)
      v10 = *(_DWORD *)(a2 + 8);
    v11[0] = &off_1E1BF87A8;
    v11[1] = v8;
    v12 = v10;
    v13 = v10;
    v14 = 0;
    return google::protobuf::TextFormat::Parser::Parse((uint64_t)a1, (uint64_t)v11, (google::protobuf::Message *)a3);
  }
  return result;
}

BOOL google::protobuf::`anonymous namespace'::CheckParseInputSize(int a1, google::protobuf *this, char *a3)
{
  char *v5;
  void *__p[2];
  char v8;
  _QWORD v9[6];
  _QWORD v10[2];
  _BYTE v11[32];
  _QWORD v12[6];
  _QWORD v13[6];
  _QWORD v14[2];
  _BYTE v15[32];
  _QWORD v16[7];

  v16[6] = *MEMORY[0x1E0C80C00];
  if ((uint64_t)this >= 0x80000000)
  {
    v16[0] = "Input size too large: ";
    v16[1] = 22;
    v14[0] = v15;
    v14[1] = google::protobuf::FastUInt64ToBufferLeft(this, v15, a3) - v15;
    v13[0] = " bytes";
    v13[1] = 6;
    v12[0] = " > ";
    v12[1] = 3;
    v10[0] = v11;
    v10[1] = google::protobuf::FastUInt32ToBufferLeft((google::protobuf *)0x7FFFFFFF, v11, v5) - v11;
    v9[0] = " bytes.";
    v9[1] = 7;
    google::protobuf::StrCat((uint64_t)v16, (uint64_t)v14, (uint64_t)v13, (uint64_t)v12, (uint64_t)v10, (uint64_t)v9, (uint64_t)__p);
    (*(void (**)(char *, uint64_t, _QWORD, void **))(*(_QWORD *)a3 + 16))(a3, 0xFFFFFFFFLL, 0, __p);
    if (v8 < 0)
      operator delete(__p[0]);
  }
  return (uint64_t)this < 0x80000000;
}

void sub_18888C320(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void google::protobuf::TextFormat::Parser::ParserImpl::ReportError(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v5;
  int v6;
  uint64_t v8;
  uint64_t v9;
  int v10;
  const std::string::value_type *v11;
  std::string::size_type v12;
  int v13;
  const std::string::value_type *v14;
  std::string::size_type v15;
  void *v16;
  uint64_t v17;
  int v18;
  const std::string::value_type *v19;
  std::string::size_type v20;
  int v21;
  const std::string::value_type *v22;
  std::string::size_type v23;
  int v24;
  const char *v25;
  int v26;
  std::string v27;
  std::string::value_type __str[8];
  const char *v29;
  int v30;
  std::string __p[4];
  char v32;
  uint64_t v33;

  v5 = a3;
  v6 = a2;
  v33 = *MEMORY[0x1E0C80C00];
  *((_BYTE *)a1 + 244) = 1;
  v8 = *a1;
  if (v8)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)v8 + 16))(v8, a2, a3, a4);
    return;
  }
  if ((a2 & 0x80000000) != 0)
  {
    *(_DWORD *)__str = 2;
    v29 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/text_format.cc";
    v30 = 323;
    memset(__p, 0, 24);
    std::string::append(__p, "Error parsing text-format ");
    v17 = *(_QWORD *)(a1[27] + 8);
    v18 = *(char *)(v17 + 23);
    if (v18 >= 0)
      v19 = *(const std::string::value_type **)(a1[27] + 8);
    else
      v19 = *(const std::string::value_type **)v17;
    if (v18 >= 0)
      v20 = *(unsigned __int8 *)(v17 + 23);
    else
      v20 = *(_QWORD *)(v17 + 8);
    std::string::append(__p, v19, v20);
    std::string::append(__p, ": ");
    v21 = *(char *)(a4 + 23);
    if (v21 >= 0)
      v22 = (const std::string::value_type *)a4;
    else
      v22 = *(const std::string::value_type **)a4;
    if (v21 >= 0)
      v23 = *(unsigned __int8 *)(a4 + 23);
    else
      v23 = *(_QWORD *)(a4 + 8);
    std::string::append(__p, v22, v23);
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)__str);
    if (SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) < 0)
    {
      v16 = (void *)__p[0].__r_.__value_.__r.__words[0];
      goto LABEL_32;
    }
  }
  else
  {
    v24 = 2;
    v25 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/text_format.cc";
    v26 = 319;
    memset(&v27, 0, sizeof(v27));
    std::string::append(&v27, "Error parsing text-format ");
    v9 = *(_QWORD *)(a1[27] + 8);
    v10 = *(char *)(v9 + 23);
    if (v10 >= 0)
      v11 = *(const std::string::value_type **)(a1[27] + 8);
    else
      v11 = *(const std::string::value_type **)v9;
    if (v10 >= 0)
      v12 = *(unsigned __int8 *)(v9 + 23);
    else
      v12 = *(_QWORD *)(v9 + 8);
    std::string::append(&v27, v11, v12);
    std::string::append(&v27, ": ");
    snprintf(__str, 0x80uLL, "%d", v6 + 1);
    v32 = 0;
    std::string::append(&v27, __str);
    std::string::append(&v27, ":");
    snprintf(__str, 0x80uLL, "%d", v5 + 1);
    v32 = 0;
    std::string::append(&v27, __str);
    std::string::append(&v27, ": ");
    v13 = *(char *)(a4 + 23);
    if (v13 >= 0)
      v14 = (const std::string::value_type *)a4;
    else
      v14 = *(const std::string::value_type **)a4;
    if (v13 >= 0)
      v15 = *(unsigned __int8 *)(a4 + 23);
    else
      v15 = *(_QWORD *)(a4 + 8);
    std::string::append(&v27, v14, v15);
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v24);
    if (SHIBYTE(v27.__r_.__value_.__r.__words[2]) < 0)
    {
      v16 = (void *)v27.__r_.__value_.__r.__words[0];
LABEL_32:
      operator delete(v16);
    }
  }
}

void sub_18888C5D4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, uint64_t a20,uint64_t a21,void *__p,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a27 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::TextFormat::FastFieldValuePrinter::PrintBool(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t (*v3)(uint64_t, const char *, uint64_t);

  v3 = *(uint64_t (**)(uint64_t, const char *, uint64_t))(*(_QWORD *)a3 + 40);
  if (a2)
    return v3(a3, "true", 4);
  else
    return v3(a3, "false", 5);
}

void google::protobuf::TextFormat::FastFieldValuePrinter::PrintInt32(uint64_t a1, google::protobuf *a2, char *a3)
{
  google::protobuf *v4;
  char *v5;
  void **v6;
  unint64_t v7;
  void *__p[2];
  unsigned __int8 v9;
  void *__src;
  size_t v11;
  char v12;
  _BYTE v13[39];

  v4 = a2;
  *(_QWORD *)&v13[31] = *MEMORY[0x1E0C80C00];
  __src = &v12;
  if ((a2 & 0x80000000) != 0)
  {
    v5 = v13;
    v12 = 45;
    v4 = (google::protobuf *)-(int)v4;
  }
  else
  {
    v5 = &v12;
  }
  v11 = google::protobuf::FastUInt32ToBufferLeft(v4, v5, a3) - &v12;
  std::string::basic_string[abi:ne180100](__p, __src, v11);
  if ((v9 & 0x80u) == 0)
    v6 = __p;
  else
    v6 = (void **)__p[0];
  if ((v9 & 0x80u) == 0)
    v7 = v9;
  else
    v7 = (unint64_t)__p[1];
  (*(void (**)(char *, void **, unint64_t))(*(_QWORD *)a3 + 40))(a3, v6, v7);
  if ((char)v9 < 0)
    operator delete(__p[0]);
}

void sub_18888C710(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void google::protobuf::TextFormat::FastFieldValuePrinter::PrintUInt32(int a1, google::protobuf *this, char *a3)
{
  void **v4;
  unint64_t v5;
  void *__p[2];
  unsigned __int8 v7;
  void *__src;
  size_t v9;
  _BYTE v10[32];
  uint64_t v11;

  v11 = *MEMORY[0x1E0C80C00];
  __src = v10;
  v9 = google::protobuf::FastUInt32ToBufferLeft(this, v10, a3) - v10;
  std::string::basic_string[abi:ne180100](__p, v10, v9);
  if ((v7 & 0x80u) == 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  if ((v7 & 0x80u) == 0)
    v5 = v7;
  else
    v5 = (unint64_t)__p[1];
  (*(void (**)(char *, void **, unint64_t))(*(_QWORD *)a3 + 40))(a3, v4, v5);
  if ((char)v7 < 0)
    operator delete(__p[0]);
}

void sub_18888C7F8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void google::protobuf::TextFormat::FastFieldValuePrinter::PrintInt64(uint64_t a1, uint64_t a2, char *a3)
{
  uint64_t v4;
  char *v5;
  void **v6;
  unint64_t v7;
  void *__p[2];
  unsigned __int8 v9;
  void *__src;
  size_t v11;
  char v12;
  _BYTE v13[39];

  v4 = a2;
  *(_QWORD *)&v13[31] = *MEMORY[0x1E0C80C00];
  __src = &v12;
  if (a2 < 0)
  {
    v5 = v13;
    v12 = 45;
    v4 = -v4;
  }
  else
  {
    v5 = &v12;
  }
  v11 = google::protobuf::FastUInt64ToBufferLeft((google::protobuf *)v4, v5, a3) - &v12;
  std::string::basic_string[abi:ne180100](__p, __src, v11);
  if ((v9 & 0x80u) == 0)
    v6 = __p;
  else
    v6 = (void **)__p[0];
  if ((v9 & 0x80u) == 0)
    v7 = v9;
  else
    v7 = (unint64_t)__p[1];
  (*(void (**)(char *, void **, unint64_t))(*(_QWORD *)a3 + 40))(a3, v6, v7);
  if ((char)v9 < 0)
    operator delete(__p[0]);
}

void sub_18888C8EC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void google::protobuf::TextFormat::FastFieldValuePrinter::PrintUInt64(int a1, google::protobuf *this, char *a3)
{
  void **v4;
  unint64_t v5;
  void *__p[2];
  unsigned __int8 v7;
  void *__src;
  size_t v9;
  _BYTE v10[32];
  uint64_t v11;

  v11 = *MEMORY[0x1E0C80C00];
  __src = v10;
  v9 = google::protobuf::FastUInt64ToBufferLeft(this, v10, a3) - v10;
  std::string::basic_string[abi:ne180100](__p, v10, v9);
  if ((v7 & 0x80u) == 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  if ((v7 & 0x80u) == 0)
    v5 = v7;
  else
    v5 = (unint64_t)__p[1];
  (*(void (**)(char *, void **, unint64_t))(*(_QWORD *)a3 + 40))(a3, v4, v5);
  if ((char)v7 < 0)
    operator delete(__p[0]);
}

void sub_18888C9C8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void google::protobuf::TextFormat::FastFieldValuePrinter::PrintFloat(float a1, uint64_t a2, char *a3)
{
  void **v4;
  unint64_t v5;
  void *__p[2];
  unsigned __int8 v7;
  char __s[24];
  uint64_t v9;

  v9 = *MEMORY[0x1E0C80C00];
  google::protobuf::FloatToBuffer((google::protobuf *)__s, a1, a3);
  std::string::basic_string[abi:ne180100]<0>(__p, __s);
  if ((v7 & 0x80u) == 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  if ((v7 & 0x80u) == 0)
    v5 = v7;
  else
    v5 = (unint64_t)__p[1];
  (*(void (**)(char *, void **, unint64_t))(*(_QWORD *)a3 + 40))(a3, v4, v5);
  if ((char)v7 < 0)
    operator delete(__p[0]);
}

void sub_18888CAA8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void google::protobuf::TextFormat::FastFieldValuePrinter::PrintDouble(double a1, uint64_t a2, char *a3)
{
  void **v4;
  unint64_t v5;
  void *__p[2];
  unsigned __int8 v7;
  char __s[32];
  uint64_t v9;

  v9 = *MEMORY[0x1E0C80C00];
  google::protobuf::DoubleToBuffer((google::protobuf *)__s, a1, a3);
  std::string::basic_string[abi:ne180100]<0>(__p, __s);
  if ((v7 & 0x80u) == 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  if ((v7 & 0x80u) == 0)
    v5 = v7;
  else
    v5 = (unint64_t)__p[1];
  (*(void (**)(char *, void **, unint64_t))(*(_QWORD *)a3 + 40))(a3, v4, v5);
  if ((char)v7 < 0)
    operator delete(__p[0]);
}

void sub_18888CB88(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::TextFormat::FastFieldValuePrinter::PrintString(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  const char *v5;
  std::string *p_p;
  std::string::size_type size;
  std::string __p;

  (*(void (**)(uint64_t, const char *, uint64_t))(*(_QWORD *)a3 + 40))(a3, "\"", 1);
  google::protobuf::CEscape(a2, v5, &__p);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    p_p = &__p;
  else
    p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  else
    size = __p.__r_.__value_.__l.__size_;
  (*(void (**)(uint64_t, std::string *, std::string::size_type))(*(_QWORD *)a3 + 40))(a3, p_p, size);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  return (*(uint64_t (**)(uint64_t, const char *, uint64_t))(*(_QWORD *)a3 + 40))(a3, "\"", 1);
}

void sub_18888CC5C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::TextFormat::FastFieldValuePrinter::PrintEnum(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  int v4;
  uint64_t *v5;
  uint64_t v6;

  v4 = *((char *)a3 + 23);
  if (v4 >= 0)
    v5 = a3;
  else
    v5 = (uint64_t *)*a3;
  if (v4 >= 0)
    v6 = *((unsigned __int8 *)a3 + 23);
  else
    v6 = a3[1];
  return (*(uint64_t (**)(uint64_t, uint64_t *, uint64_t))(*(_QWORD *)a4 + 40))(a4, v5, v6);
}

uint64_t google::protobuf::TextFormat::FastFieldValuePrinter::PrintFieldName(int a1, int a2, int a3, unint64_t **this, uint64_t a5)
{
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t *v12;
  unint64_t v13;
  unint64_t *v14;
  int v15;
  unint64_t v16;
  unint64_t v17;
  google::protobuf::FieldDescriptor *v18;
  void (*v19)(google::protobuf::FieldDescriptor *, const google::protobuf::FieldDescriptor *, const char *);
  _QWORD *v20;
  _QWORD v21[2];

  if (*((_BYTE *)this + 67))
  {
    (*(void (**)(uint64_t, const char *, uint64_t))(*(_QWORD *)a5 + 40))(a5, "[", 1);
    v7 = google::protobuf::FieldDescriptor::PrintableNameForExtension((google::protobuf::FieldDescriptor *)this);
    v8 = *(char *)(v7 + 23);
    if (v8 >= 0)
      v9 = v7;
    else
      v9 = *(_QWORD *)v7;
    if (v8 >= 0)
      v10 = *(unsigned __int8 *)(v7 + 23);
    else
      v10 = *(_QWORD *)(v7 + 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)a5 + 40))(a5, v9, v10);
    return (*(uint64_t (**)(uint64_t, const char *, uint64_t))(*(_QWORD *)a5 + 40))(a5, "]", 1);
  }
  else
  {
    v12 = this[6];
    if (v12)
    {
      v18 = (google::protobuf::FieldDescriptor *)this;
      v19 = google::protobuf::FieldDescriptor::TypeOnceInit;
      v13 = atomic_load(v12);
      if (v13 != -1)
      {
        v21[0] = &v19;
        v21[1] = &v18;
        v20 = v21;
        std::__call_once(v12, &v20, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
      }
    }
    if (*((_DWORD *)this + 14) == 10)
      v14 = *(unint64_t **)google::protobuf::FieldDescriptor::message_type((google::protobuf::FieldDescriptor *)this);
    else
      v14 = *this;
    v15 = *((char *)v14 + 23);
    if (v15 >= 0)
      v16 = (unint64_t)v14;
    else
      v16 = *v14;
    if (v15 >= 0)
      v17 = *((unsigned __int8 *)v14 + 23);
    else
      v17 = v14[1];
    return (*(uint64_t (**)(uint64_t, unint64_t, unint64_t))(*(_QWORD *)a5 + 40))(a5, v16, v17);
  }
}

uint64_t google::protobuf::TextFormat::FastFieldValuePrinter::PrintMessageStart(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6)
{
  const char *v6;

  if (a5)
    v6 = " { ";
  else
    v6 = " {\n";
  return (*(uint64_t (**)(uint64_t, const char *, uint64_t))(*(_QWORD *)a6 + 40))(a6, v6, 3);
}

uint64_t google::protobuf::TextFormat::FastFieldValuePrinter::PrintMessageEnd(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6)
{
  const char *v6;

  if (a5)
    v6 = "} ";
  else
    v6 = "}\n";
  return (*(uint64_t (**)(uint64_t, const char *, uint64_t))(*(_QWORD *)a6 + 40))(a6, v6, 2);
}

void google::protobuf::TextFormat::FastFieldValuePrinter::~FastFieldValuePrinter(google::protobuf::TextFormat::FastFieldValuePrinter *this)
{
  JUMPOUT(0x18D76437CLL);
}

uint64_t google::protobuf::TextFormat::FastFieldValuePrinter::PrintBytes(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 72))(a1);
}

uint64_t google::protobuf::TextFormat::FastFieldValuePrinter::PrintFieldName(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)a1 + 104))(a1, a2, a5, a6, a7);
}

uint64_t google::protobuf::TextFormat::FastFieldValuePrinter::PrintMessageContent()
{
  return 0;
}

google::protobuf::TextFormat::Printer *google::protobuf::TextFormat::Printer::Printer(google::protobuf::TextFormat::Printer *this)
{
  _QWORD *v2;
  uint64_t v3;

  *((_QWORD *)this + 5) = 0;
  *((_QWORD *)this + 4) = (char *)this + 40;
  *((_QWORD *)this + 6) = 0;
  *(_QWORD *)this = 0;
  *((_WORD *)this + 4) = 0;
  *((_QWORD *)this + 8) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  *((_QWORD *)this + 7) = (char *)this + 64;
  *((_QWORD *)this + 9) = 0;
  *((_QWORD *)this + 10) = 0;
  v2 = (_QWORD *)operator new();
  *v2 = &off_1E1BF7390;
  v3 = *((_QWORD *)this + 3);
  *((_QWORD *)this + 3) = v2;
  if (v3)
    (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
  return this;
}

void sub_18888CF04(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v4 = v3;
  std::__tree<std::__value_type<google::protobuf::Descriptor const*,std::unique_ptr<google::protobuf::TextFormat::MessagePrinter const>>,std::__map_value_compare<google::protobuf::Descriptor const*,std::__value_type<google::protobuf::Descriptor const*,std::unique_ptr<google::protobuf::TextFormat::MessagePrinter const>>,std::less<google::protobuf::Descriptor const*>,true>,std::allocator<std::__value_type<google::protobuf::Descriptor const*,std::unique_ptr<google::protobuf::TextFormat::MessagePrinter const>>>>::destroy(v4, *(_QWORD **)(v1 + 64));
  std::__tree<std::__value_type<google::protobuf::Descriptor const*,std::unique_ptr<google::protobuf::TextFormat::MessagePrinter const>>,std::__map_value_compare<google::protobuf::Descriptor const*,std::__value_type<google::protobuf::Descriptor const*,std::unique_ptr<google::protobuf::TextFormat::MessagePrinter const>>,std::less<google::protobuf::Descriptor const*>,true>,std::allocator<std::__value_type<google::protobuf::Descriptor const*,std::unique_ptr<google::protobuf::TextFormat::MessagePrinter const>>>>::destroy(v2, *(_QWORD **)(v1 + 40));
  v6 = *(_QWORD *)(v1 + 24);
  *(_QWORD *)(v1 + 24) = 0;
  if (v6)
    (*(void (**)(uint64_t))(*(_QWORD *)v6 + 8))(v6);
  _Unwind_Resume(a1);
}

BOOL google::protobuf::TextFormat::Printer::Print(google::protobuf::TextFormat::Printer *this, const google::protobuf::Message *a2, google::protobuf::io::ZeroCopyOutputStream *a3)
{
  int v3;
  _BOOL8 v4;
  _QWORD v6[3];
  int v7;
  __int16 v8;
  int v9;
  int v10;

  v3 = *(_DWORD *)this;
  v6[0] = &off_1E1BF7458;
  v6[1] = a3;
  v6[2] = 0;
  v7 = 0;
  v8 = 1;
  v9 = v3;
  v10 = v3;
  google::protobuf::TextFormat::Printer::Print(this, a2, (google::protobuf::TextFormat::Printer::TextGenerator *)v6);
  v4 = HIBYTE(v8) == 0;
  google::protobuf::TextFormat::Printer::TextGenerator::~TextGenerator((google::protobuf::TextFormat::Printer::TextGenerator *)v6);
  return v4;
}

void sub_18888CFA8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  google::protobuf::TextFormat::Printer::TextGenerator::~TextGenerator((google::protobuf::TextFormat::Printer::TextGenerator *)va);
  _Unwind_Resume(a1);
}

void google::protobuf::TextFormat::Printer::Print(google::protobuf::TextFormat::Printer *this, const google::protobuf::Message *a2, google::protobuf::TextFormat::Printer::TextGenerator *a3)
{
  const google::protobuf::Message *v4;
  google::protobuf::Reflection *v6;
  unint64_t v7;
  const google::protobuf::FieldDescriptor **v8;
  unint64_t v9;
  _QWORD *v10;
  char *v11;
  unint64_t v12;
  BOOL v13;
  _QWORD *v14;
  uint64_t *v15;
  int v16;
  int v17;
  std::string *v18;
  const google::protobuf::FieldDescriptor *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t *v32;
  google::protobuf::UnknownFieldSet *v33;
  uint64_t v34;
  const char *v35;
  uint64_t *v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t *v40;
  unint64_t v41;
  int v42;
  uint64_t v44;
  _OWORD *v45;
  unint64_t *v46;
  unint64_t v47;
  unsigned int v48;
  uint64_t *RawRepeatedField;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  char *v56;
  char *v57;
  char *v58;
  char *v59;
  uint64_t v60;
  int v61;
  int v62;
  google::protobuf::Message *v63;
  uint64_t v64;
  google::protobuf::_anonymous_namespace_ **v65;
  google::protobuf::_anonymous_namespace_ **v66;
  unint64_t *v67;
  unint64_t v68;
  void *v69;
  int UInt32Value;
  const char *v71;
  uint64_t UInt64Value;
  const char *v73;
  google::protobuf::MapKey *StringValue;
  const char *v75;
  __int128 v76;
  int Int32Value;
  const char *v78;
  uint64_t Int64Value;
  const char *v80;
  char BoolValue;
  const char *v82;
  uint64_t v83;
  google::protobuf::_anonymous_namespace_ **v84;
  google::protobuf::_anonymous_namespace_ **v85;
  unint64_t *v86;
  unint64_t v87;
  int v88;
  const char *v89;
  double DoubleValue;
  uint64_t v91;
  const char *v92;
  uint64_t MessageValue;
  google::protobuf::Message *v94;
  uint64_t v95;
  const char *v96;
  int v97;
  const char *v98;
  uint64_t v99;
  const char *v100;
  int EnumValue;
  const char *v102;
  uint64_t v103;
  const char *v104;
  float FloatValue;
  uint64_t v106;
  const char *v107;
  char v108;
  const char *v109;
  uint64_t v110;
  const char *v111;
  __int128 v112;
  google::protobuf::Message **v113;
  google::protobuf::Message **v114;
  uint64_t v115;
  unint64_t v116;
  unint64_t v117;
  char *v118;
  google::protobuf::Message **v119;
  char *v120;
  char *v121;
  google::protobuf::Message *v122;
  uint64_t v123;
  const google::protobuf::Message **v124;
  const google::protobuf::Message **v125;
  const google::protobuf::Message **v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  const char *v131;
  unint64_t *v132;
  unint64_t v133;
  char *v134;
  _QWORD *v135;
  char *v136;
  unint64_t v137;
  BOOL v138;
  _QWORD *v139;
  unint64_t v140;
  char *v141;
  uint64_t v142;
  const google::protobuf::Message *v143;
  const char *v144;
  uint64_t RepeatedMessage;
  google::protobuf::Message **v146;
  google::protobuf::Message **v147;
  unint64_t *v148;
  unint64_t v149;
  uint64_t v150;
  int v151;
  int i;
  const char *v153;
  uint64_t v154;
  const google::protobuf::UnknownFieldSet *v155;
  google::protobuf::_anonymous_namespace_ **v156;
  google::protobuf::_anonymous_namespace_ **v157;
  const char *v158;
  const char *v159;
  uint64_t v160;
  uint64_t AnyType;
  const google::protobuf::Descriptor *v162;
  _OWORD *v163;
  _QWORD *Prototype;
  google::protobuf::MessageLite *v165;
  const char *v166;
  char v167;
  std::string *v168;
  std::string::size_type size;
  _QWORD *v170;
  _QWORD *v171;
  unint64_t v172;
  BOOL v173;
  _QWORD *v174;
  _QWORD *v175;
  uint64_t v176;
  std::string *v177;
  std::string::size_type v178;
  std::string *v179;
  std::string::size_type v180;
  char *v181;
  BOOL v182;
  uint64_t *v183;
  uint64_t v184;
  uint64_t v185;
  char *v186;
  google::protobuf::Message *v187;
  google::protobuf::Reflection *v188;
  std::string v189;
  uint64_t v190[2];
  void *v191;
  char *v192;
  uint64_t *v193;
  google::protobuf::FieldDescriptor *v194;
  void *__p;
  google::protobuf::Message **v196;
  char *v197;
  google::protobuf::FieldDescriptor *v198;
  void (**v199)(google::protobuf::io::ArrayInputStream *__hidden);
  void **p_p;
  int v201;
  int v202;
  void *v203;
  uint64_t v204;
  __int128 v205;
  __int128 v206;
  __int128 v207;
  uint64_t v208;
  std::string v209;
  std::string v210[2];
  const google::protobuf::FieldDescriptor *v211;
  const google::protobuf::FieldDescriptor *v212;
  uint64_t v213;
  std::string v214;
  _QWORD v215[5];

  v4 = a2;
  v215[2] = *MEMORY[0x1E0C80C00];
  (*(void (**)(const google::protobuf::Message *))(*(_QWORD *)a2 + 152))(a2);
  v188 = v6;
  if (v6)
  {
    v7 = (*(uint64_t (**)(const google::protobuf::Message *))(*(_QWORD *)v4 + 152))(v4);
    v9 = v7;
    v10 = (_QWORD *)*((_QWORD *)this + 8);
    if (v10)
    {
      v11 = (char *)this + 64;
      do
      {
        v12 = v10[4];
        v13 = v12 >= v7;
        if (v12 >= v7)
          v14 = v10;
        else
          v14 = v10 + 1;
        if (v13)
          v11 = (char *)v10;
        v10 = (_QWORD *)*v14;
      }
      while (*v14);
      if (v11 != (char *)this + 64 && *((_QWORD *)v11 + 4) <= v7)
      {
        (*(void (**)(_QWORD, const google::protobuf::Message *, _QWORD, google::protobuf::TextFormat::Printer::TextGenerator *))(**((_QWORD **)v11 + 5) + 16))(*((_QWORD *)v11 + 5), v4, *((unsigned __int8 *)this + 4), a3);
        return;
      }
    }
    v15 = *(uint64_t **)(v7 + 8);
    v16 = *((char *)v15 + 23);
    if (v16 < 0)
    {
      if (v15[1] != 19)
        goto LABEL_38;
      v15 = (uint64_t *)*v15;
    }
    else if (v16 != 19)
    {
      goto LABEL_38;
    }
    v23 = (uint64_t *)*v15;
    v24 = v15[1];
    v25 = *(uint64_t *)((char *)v15 + 11);
    v27 = v23 == *(uint64_t **)"google.protobuf.Any" && v24 == *(_QWORD *)"rotobuf.Any" && v25 == *(_QWORD *)"obuf.Any";
    if (!v27
      || !*((_BYTE *)this + 9)
      || (v198 = 0,
          v194 = 0,
          !google::protobuf::internal::GetAnyFieldDescriptors(v4, (const google::protobuf::Message *)&v198, &v194, v8)))
    {
LABEL_38:
      v191 = 0;
      v192 = 0;
      v193 = 0;
      v187 = v4;
      if (*(_BYTE *)(*(_QWORD *)(v9 + 32) + 75))
      {
        v28 = *(_QWORD *)(v9 + 40);
        v29 = (uint64_t *)operator new(8uLL);
        *v29 = v28;
        v191 = v29;
        v193 = v29 + 1;
        v30 = *(_QWORD *)(v9 + 40);
        v31 = (uint64_t *)operator new(0x10uLL);
        *v31 = v28;
        v31[1] = v30 + 152;
        v32 = v31 + 2;
        v191 = v31;
        v192 = (char *)(v31 + 2);
        v193 = v31 + 2;
        operator delete(v29);
        v192 = (char *)v32;
        v4 = v187;
      }
      else
      {
        google::protobuf::Reflection::ListFieldsMayFailOnStripped((uint64_t)v188, v4, 0, (uint64_t)&v191);
        v33 = (google::protobuf::UnknownFieldSet *)(*(uint64_t (**)(const google::protobuf::Message *))(*(_QWORD *)v4 + 152))(v4);
      }
      v36 = (uint64_t *)v191;
      if (*((_BYTE *)this + 8))
      {
        v37 = 126 - 2 * __clz((v192 - (_BYTE *)v191) >> 3);
        if (v192 == v191)
          v38 = 0;
        else
          v38 = v37;
        v36 = (uint64_t *)v191;
      }
      v181 = v192;
      if (v36 != (uint64_t *)v192)
      {
        v186 = (char *)this + 40;
        while (1)
        {
          v39 = *v36;
          if (!*((_BYTE *)this + 6) || *(_DWORD *)(v39 + 60) != 3)
            break;
          v40 = *(unint64_t **)(v39 + 48);
          if (v40)
          {
            v209.__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FieldDescriptor::TypeOnceInit;
            __p = (void *)v39;
            v41 = atomic_load(v40);
            if (v41 != -1)
            {
              v199 = (void (**)(google::protobuf::io::ArrayInputStream *__hidden))&v209;
              p_p = &__p;
              v211 = (const google::protobuf::FieldDescriptor *)&v199;
              std::__call_once(v40, &v211, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
            }
          }
          v42 = *(_DWORD *)(v39 + 56);
          if (v42 == 9 || v42 == 12)
            break;
          v148 = *(unint64_t **)(v39 + 48);
          if (v148)
          {
            v209.__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FieldDescriptor::TypeOnceInit;
            __p = (void *)v39;
            v149 = atomic_load(v148);
            if (v149 != -1)
            {
              v199 = (void (**)(google::protobuf::io::ArrayInputStream *__hidden))&v209;
              p_p = &__p;
              v211 = (const google::protobuf::FieldDescriptor *)&v199;
              std::__call_once(v148, &v211, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
            }
            v42 = *(_DWORD *)(v39 + 56);
          }
          if ((v42 & 0xFFFFFFFE) == 0xA)
            break;
          v150 = google::protobuf::Reflection::FieldSize((google::protobuf::_anonymous_namespace_ **)v188, v4, (const google::protobuf::FieldDescriptor *)v39, v34, v35);
          v151 = v150;
          google::protobuf::TextFormat::Printer::PrintFieldName((uint64_t)this, (uint64_t)v4, (char *)0xFFFFFFFFLL, v150, (uint64_t)v188, v39, (uint64_t)a3);
          (*(void (**)(google::protobuf::TextFormat::Printer::TextGenerator *, const char *, uint64_t))(*(_QWORD *)a3 + 40))(a3, ": [", 3);
          if (v151 >= 1)
          {
            for (i = 0; i != v151; ++i)
            {
              if (i)
                (*(void (**)(google::protobuf::TextFormat::Printer::TextGenerator *, const char *, uint64_t))(*(_QWORD *)a3 + 40))(a3, ", ", 2);
              google::protobuf::TextFormat::Printer::PrintFieldValue(this, v4, v188, (const google::protobuf::FieldDescriptor *)v39, i, a3);
            }
          }
          if (*((_BYTE *)this + 4))
            v153 = "] ";
          else
            v153 = "]\n";
          v33 = (google::protobuf::UnknownFieldSet *)(*(uint64_t (**)(google::protobuf::TextFormat::Printer::TextGenerator *, const char *, uint64_t))(*(_QWORD *)a3 + 40))(a3, v153, 2);
LABEL_197:
          if (++v36 == (uint64_t *)v181)
            goto LABEL_214;
        }
        if (*(_DWORD *)(v39 + 60) == 3)
          v44 = google::protobuf::Reflection::FieldSize((google::protobuf::_anonymous_namespace_ **)v188, v4, (const google::protobuf::FieldDescriptor *)v39, v34, v35);
        else
          v44 = (google::protobuf::Reflection::HasField((google::protobuf::_anonymous_namespace_ **)v188, v4, (const google::protobuf::FieldDescriptor *)v39, v34, v35) & 1) != 0|| *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v39 + 80) + 32) + 75);
        v199 = &off_1E1BF81B8;
        p_p = 0;
        LOBYTE(v201) = 0;
        v45 = (_OWORD *)operator new();
        *v45 = 0u;
        v45[1] = 0u;
        *((_DWORD *)v45 + 8) = 1065353216;
        v203 = v45;
        v204 = 850045863;
        v205 = 0u;
        v206 = 0u;
        v207 = 0u;
        v208 = 0;
        __p = 0;
        v196 = 0;
        v197 = 0;
        v46 = *(unint64_t **)(v39 + 48);
        if (v46)
        {
          v189.__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FieldDescriptor::TypeOnceInit;
          v190[0] = v39;
          v47 = atomic_load(v46);
          if (v47 != -1)
          {
            v211 = (const google::protobuf::FieldDescriptor *)&v189;
            v212 = (const google::protobuf::FieldDescriptor *)v190;
            v209.__r_.__value_.__r.__words[0] = (std::string::size_type)&v211;
            std::__call_once(v46, &v209, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
          }
        }
        v183 = v36;
        if (*(_DWORD *)(v39 + 56) == 11 && *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v39 + 104) + 32) + 75))
        {
          v48 = atomic_load((unsigned int *)(google::protobuf::Reflection::MutableMapData(v188, v4, (const google::protobuf::FieldDescriptor *)v39)+ 88));
          v182 = v48 == 0;
          if (v48)
          {
            RawRepeatedField = google::protobuf::Reflection::GetRawRepeatedField((uint64_t)v188, (uint64_t)v4, (google::protobuf::Descriptor *)v39, 10, (const char *)0xFFFFFFFFLL, 0);
            if (*((int *)RawRepeatedField + 2) >= 1)
            {
              v50 = 0;
              v51 = (char *)v196;
              do
              {
                v52 = *(_QWORD *)(RawRepeatedField[2] + 8 * v50 + 8);
                if (v51 >= v197)
                {
                  v53 = (v51 - (_BYTE *)__p) >> 3;
                  if ((unint64_t)(v53 + 1) >> 61)
                    std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
                  v54 = (v197 - (_BYTE *)__p) >> 2;
                  if (v54 <= v53 + 1)
                    v54 = v53 + 1;
                  if ((unint64_t)(v197 - (_BYTE *)__p) >= 0x7FFFFFFFFFFFFFF8)
                    v55 = 0x1FFFFFFFFFFFFFFFLL;
                  else
                    v55 = v54;
                  if (v55)
                    v56 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<zilch::StringList::Entry>>((uint64_t)&v197, v55);
                  else
                    v56 = 0;
                  v57 = &v56[8 * v53];
                  *(_QWORD *)v57 = v52;
                  v51 = v57 + 8;
                  v59 = (char *)__p;
                  v58 = (char *)v196;
                  if (v196 != __p)
                  {
                    do
                    {
                      v60 = *((_QWORD *)v58 - 1);
                      v58 -= 8;
                      *((_QWORD *)v57 - 1) = v60;
                      v57 -= 8;
                    }
                    while (v58 != v59);
                    v58 = (char *)__p;
                  }
                  __p = v57;
                  v196 = (google::protobuf::Message **)v51;
                  v197 = &v56[8 * v55];
                  if (v58)
                    operator delete(v58);
                }
                else
                {
                  *(_QWORD *)v51 = v52;
                  v51 += 8;
                }
                v196 = (google::protobuf::Message **)v51;
                ++v50;
              }
              while (v50 < *((int *)RawRepeatedField + 2));
            }
          }
          else
          {
            v185 = google::protobuf::FieldDescriptor::message_type((google::protobuf::FieldDescriptor *)v39);
            v184 = ((uint64_t (*)(void (***)(google::protobuf::io::ArrayInputStream *__hidden), uint64_t))v199[2])(&v199, v185);
            google::protobuf::Reflection::MapBegin((google::protobuf::_anonymous_namespace_ **)v188, v4, (const google::protobuf::FieldDescriptor *)v39, (google::protobuf::MapIterator *)&v211);
            while (1)
            {
              google::protobuf::Reflection::MapEnd((google::protobuf::_anonymous_namespace_ **)v188, v4, (const google::protobuf::FieldDescriptor *)v39, (google::protobuf::MapIterator *)&v209);
              v62 = (*(uint64_t (**)(const google::protobuf::FieldDescriptor *, const google::protobuf::FieldDescriptor **, std::string *))(*(_QWORD *)v212 + 48))(v212, &v211, &v209);
              google::protobuf::MapIterator::~MapIterator((google::protobuf::MapIterator *)&v209);
              if (v62)
                break;
              v63 = (google::protobuf::Message *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v184 + 24))(v184);
              v64 = *(_QWORD *)(v185 + 40);
              (*(void (**)(google::protobuf::Message *))(*(_QWORD *)v63 + 152))(v63);
              v66 = v65;
              v67 = *(unint64_t **)(v64 + 48);
              if (v67)
              {
                v190[0] = (uint64_t)google::protobuf::FieldDescriptor::TypeOnceInit;
                v198 = (google::protobuf::FieldDescriptor *)v64;
                v68 = atomic_load(v67);
                if (v68 != -1)
                {
                  v209.__r_.__value_.__r.__words[0] = (std::string::size_type)v190;
                  v209.__r_.__value_.__l.__size_ = (std::string::size_type)&v198;
                  v189.__r_.__value_.__r.__words[0] = (std::string::size_type)&v209;
                  std::__call_once(v67, &v189, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
                }
              }
              switch(*(_DWORD *)(v64 + 56))
              {
                case 1:
                case 2:
                case 0xA:
                case 0xB:
                case 0xE:
                  LODWORD(v209.__r_.__value_.__l.__data_) = 2;
                  v209.__r_.__value_.__l.__size_ = (std::string::size_type)"/Library/Caches/com.apple.xbs/Sources/GeoServ"
                                                                           "ices/libprotobuf/src/google/protobuf/text_format.cc";
                  LODWORD(v209.__r_.__value_.__r.__words[2]) = 2186;
                  memset(v210, 0, 24);
                  std::string::append(v210, "Not supported.");
                  google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v209);
                  if (SHIBYTE(v210[0].__r_.__value_.__r.__words[2]) < 0)
                  {
                    v69 = (void *)v210[0].__r_.__value_.__r.__words[0];
                    goto LABEL_98;
                  }
                  break;
                case 3:
                case 0x10:
                case 0x12:
                  Int64Value = google::protobuf::MapKey::GetInt64Value((google::protobuf::MapKey *)&v213);
                  google::protobuf::Reflection::SetInt64(v66, v63, (const google::protobuf::FieldDescriptor *)v64, Int64Value, v80);
                  break;
                case 4:
                case 6:
                  UInt64Value = google::protobuf::MapKey::GetUInt64Value((google::protobuf::MapKey *)&v213);
                  google::protobuf::Reflection::SetUInt64(v66, v63, (const google::protobuf::FieldDescriptor *)v64, UInt64Value, v73);
                  break;
                case 5:
                case 0xF:
                case 0x11:
                  Int32Value = google::protobuf::MapKey::GetInt32Value((google::protobuf::MapKey *)&v213);
                  google::protobuf::Reflection::SetInt32(v66, v63, (const google::protobuf::FieldDescriptor *)v64, Int32Value, v78);
                  break;
                case 7:
                case 0xD:
                  UInt32Value = google::protobuf::MapKey::GetUInt32Value((google::protobuf::MapKey *)&v213);
                  google::protobuf::Reflection::SetUInt32(v66, v63, (const google::protobuf::FieldDescriptor *)v64, UInt32Value, v71);
                  break;
                case 8:
                  BoolValue = google::protobuf::MapKey::GetBoolValue((google::protobuf::MapKey *)&v213);
                  google::protobuf::Reflection::SetBool(v66, v63, (const google::protobuf::FieldDescriptor *)v64, BoolValue, v82);
                  break;
                case 9:
                case 0xC:
                  StringValue = google::protobuf::MapKey::GetStringValue((google::protobuf::MapKey *)&v213);
                  if (*((char *)StringValue + 23) < 0)
                  {
                    std::string::__init_copy_ctor_external(&v209, *(const std::string::value_type **)StringValue, *((_QWORD *)StringValue + 1));
                  }
                  else
                  {
                    v76 = *(_OWORD *)StringValue;
                    v209.__r_.__value_.__r.__words[2] = *((_QWORD *)StringValue + 2);
                    *(_OWORD *)&v209.__r_.__value_.__l.__data_ = v76;
                  }
                  google::protobuf::Reflection::SetString((uint64_t)v66, v63, (google::protobuf::FieldDescriptor *)v64, (uint64_t)&v209, v75);
                  if (SHIBYTE(v209.__r_.__value_.__r.__words[2]) < 0)
                  {
                    v69 = (void *)v209.__r_.__value_.__r.__words[0];
LABEL_98:
                    operator delete(v69);
                  }
                  break;
                default:
                  break;
              }
              v83 = *(_QWORD *)(v185 + 40);
              (*(void (**)(google::protobuf::Message *))(*(_QWORD *)v63 + 152))(v63);
              v85 = v84;
              v86 = *(unint64_t **)(v83 + 200);
              if (v86)
              {
                v190[0] = (uint64_t)google::protobuf::FieldDescriptor::TypeOnceInit;
                v198 = (google::protobuf::FieldDescriptor *)(v83 + 152);
                v87 = atomic_load(v86);
                if (v87 != -1)
                {
                  v209.__r_.__value_.__r.__words[0] = (std::string::size_type)v190;
                  v209.__r_.__value_.__l.__size_ = (std::string::size_type)&v198;
                  v189.__r_.__value_.__r.__words[0] = (std::string::size_type)&v209;
                  std::__call_once(v86, &v189, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
                }
              }
              switch(*(_DWORD *)(v83 + 208))
              {
                case 1:
                  DoubleValue = google::protobuf::MapValueConstRef::GetDoubleValue((google::protobuf::MapValueConstRef *)v215);
                  google::protobuf::Reflection::SetDouble(v85, v63, (const google::protobuf::FieldDescriptor *)(v83 + 152), DoubleValue, v91, v92);
                  break;
                case 2:
                  FloatValue = google::protobuf::MapValueConstRef::GetFloatValue((google::protobuf::MapValueConstRef *)v215);
                  google::protobuf::Reflection::SetFloat(v85, v63, (const google::protobuf::FieldDescriptor *)(v83 + 152), FloatValue, v106, v107);
                  break;
                case 3:
                case 0x10:
                case 0x12:
                  v103 = google::protobuf::MapValueConstRef::GetInt64Value((google::protobuf::MapValueConstRef *)v215);
                  google::protobuf::Reflection::SetInt64(v85, v63, (const google::protobuf::FieldDescriptor *)(v83 + 152), v103, v104);
                  break;
                case 4:
                case 6:
                  v99 = google::protobuf::MapValueConstRef::GetUInt64Value((google::protobuf::MapValueConstRef *)v215);
                  google::protobuf::Reflection::SetUInt64(v85, v63, (const google::protobuf::FieldDescriptor *)(v83 + 152), v99, v100);
                  break;
                case 5:
                case 0xF:
                case 0x11:
                  v88 = google::protobuf::MapValueConstRef::GetInt32Value((google::protobuf::MapValueConstRef *)v215);
                  google::protobuf::Reflection::SetInt32(v85, v63, (const google::protobuf::FieldDescriptor *)(v83 + 152), v88, v89);
                  break;
                case 7:
                case 0xD:
                  v97 = google::protobuf::MapValueConstRef::GetUInt32Value((google::protobuf::MapValueConstRef *)v215);
                  google::protobuf::Reflection::SetUInt32(v85, v63, (const google::protobuf::FieldDescriptor *)(v83 + 152), v97, v98);
                  break;
                case 8:
                  v108 = google::protobuf::MapValueConstRef::GetBoolValue((google::protobuf::MapValueConstRef *)v215);
                  google::protobuf::Reflection::SetBool(v85, v63, (const google::protobuf::FieldDescriptor *)(v83 + 152), v108, v109);
                  break;
                case 9:
                case 0xC:
                  v110 = google::protobuf::MapValueConstRef::GetStringValue((google::protobuf::MapValueConstRef *)v215);
                  if (*(char *)(v110 + 23) < 0)
                  {
                    std::string::__init_copy_ctor_external(&v209, *(const std::string::value_type **)v110, *(_QWORD *)(v110 + 8));
                  }
                  else
                  {
                    v112 = *(_OWORD *)v110;
                    v209.__r_.__value_.__r.__words[2] = *(_QWORD *)(v110 + 16);
                    *(_OWORD *)&v209.__r_.__value_.__l.__data_ = v112;
                  }
                  google::protobuf::Reflection::SetString((uint64_t)v85, v63, (google::protobuf::FieldDescriptor *)(v83 + 152), (uint64_t)&v209, v111);
                  if (SHIBYTE(v209.__r_.__value_.__r.__words[2]) < 0)
                    operator delete(v209.__r_.__value_.__l.__data_);
                  break;
                case 0xA:
                case 0xB:
                  MessageValue = google::protobuf::MapValueConstRef::GetMessageValue((google::protobuf::MapValueConstRef *)v215);
                  v94 = (google::protobuf::Message *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)MessageValue + 24))(MessageValue);
                  v95 = google::protobuf::MapValueConstRef::GetMessageValue((google::protobuf::MapValueConstRef *)v215);
                  (*(void (**)(google::protobuf::Message *, uint64_t))(*(_QWORD *)v94 + 112))(v94, v95);
                  google::protobuf::Reflection::SetAllocatedMessage(v85, v63, v94, (const google::protobuf::FieldDescriptor *)(v83 + 152), v96);
                  break;
                case 0xE:
                  EnumValue = google::protobuf::MapValueConstRef::GetEnumValue((google::protobuf::MapValueConstRef *)v215);
                  google::protobuf::Reflection::SetEnumValue(v85, v63, (const google::protobuf::FieldDescriptor *)(v83 + 152), EnumValue, v102);
                  break;
                default:
                  break;
              }
              v113 = v196;
              if (v196 >= (google::protobuf::Message **)v197)
              {
                v115 = ((char *)v196 - (_BYTE *)__p) >> 3;
                if ((unint64_t)(v115 + 1) >> 61)
                  std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
                v116 = (v197 - (_BYTE *)__p) >> 2;
                if (v116 <= v115 + 1)
                  v116 = v115 + 1;
                if ((unint64_t)(v197 - (_BYTE *)__p) >= 0x7FFFFFFFFFFFFFF8)
                  v117 = 0x1FFFFFFFFFFFFFFFLL;
                else
                  v117 = v116;
                if (v117)
                  v118 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<zilch::StringList::Entry>>((uint64_t)&v197, v117);
                else
                  v118 = 0;
                v119 = (google::protobuf::Message **)&v118[8 * v115];
                *v119 = v63;
                v114 = v119 + 1;
                v121 = (char *)__p;
                v120 = (char *)v196;
                if (v196 != __p)
                {
                  do
                  {
                    v122 = (google::protobuf::Message *)*((_QWORD *)v120 - 1);
                    v120 -= 8;
                    *--v119 = v122;
                  }
                  while (v120 != v121);
                  v120 = (char *)__p;
                }
                __p = v119;
                v196 = v114;
                v197 = &v118[8 * v117];
                if (v120)
                  operator delete(v120);
              }
              else
              {
                *v196 = v63;
                v114 = v113 + 1;
              }
              v196 = v114;
              (*(void (**)(const google::protobuf::FieldDescriptor *, const google::protobuf::FieldDescriptor **))(*(_QWORD *)v212 + 152))(v212, &v211);
            }
            google::protobuf::MapIterator::~MapIterator((google::protobuf::MapIterator *)&v211);
          }
          v123 = google::protobuf::FieldDescriptor::message_type((google::protobuf::FieldDescriptor *)v39);
          v124 = (const google::protobuf::Message **)__p;
          v125 = v196;
          v211 = *(const google::protobuf::FieldDescriptor **)(v123 + 40);
          if ((char *)v196 - (_BYTE *)__p < 1025)
          {
            v126 = 0;
            v128 = 0;
          }
          else
          {
            v126 = (const google::protobuf::Message **)std::get_temporary_buffer[abi:ne180100]<google::protobuf::Message const*>(((char *)v196 - (_BYTE *)__p) >> 3);
            v128 = v127;
          }
          std::__stable_sort<std::_ClassicAlgPolicy,google::protobuf::MapEntryMessageComparator &,std::__wrap_iter<google::protobuf::Message const**>>(v124, v125, &v211, v125 - v124, v126, v128);
          if (v126)
            operator delete(v126);
          v61 = 1;
        }
        else
        {
          v61 = 0;
          v182 = 0;
        }
        if ((int)v44 < 1)
        {
LABEL_187:
          v146 = (google::protobuf::Message **)__p;
          if (v182)
          {
            v147 = v196;
            v4 = v187;
            if (__p != v196)
            {
              do
              {
                if (*v146)
                  (*(void (**)(google::protobuf::Message *))(*(_QWORD *)*v146 + 8))(*v146);
                ++v146;
              }
              while (v146 != v147);
              v146 = (google::protobuf::Message **)__p;
            }
          }
          else
          {
            v4 = v187;
          }
          v36 = v183;
          if (v146)
          {
            v196 = v146;
            operator delete(v146);
          }
          google::protobuf::DynamicMessageFactory::~DynamicMessageFactory((google::protobuf::DynamicMessageFactory *)&v199);
          goto LABEL_197;
        }
        v129 = 0;
        while (1)
        {
          if (*(_DWORD *)(v39 + 60) == 3)
            v130 = v129;
          else
            v130 = 0xFFFFFFFFLL;
          google::protobuf::TextFormat::Printer::PrintFieldName((uint64_t)this, (uint64_t)v187, (char *)v130, v44, (uint64_t)v188, v39, (uint64_t)a3);
          v132 = *(unint64_t **)(v39 + 48);
          if (v132)
          {
            v189.__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FieldDescriptor::TypeOnceInit;
            v190[0] = v39;
            v133 = atomic_load(v132);
            if (v133 != -1)
            {
              v211 = (const google::protobuf::FieldDescriptor *)&v189;
              v212 = (const google::protobuf::FieldDescriptor *)v190;
              v209.__r_.__value_.__r.__words[0] = (std::string::size_type)&v211;
              std::__call_once(v132, &v209, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
            }
          }
          if ((*(_DWORD *)(v39 + 56) & 0xFFFFFFFE) == 0xA)
            break;
          (*(void (**)(google::protobuf::TextFormat::Printer::TextGenerator *, const char *, uint64_t))(*(_QWORD *)a3 + 40))(a3, ": ", 2);
          google::protobuf::TextFormat::Printer::PrintFieldValue(this, v187, v188, (const google::protobuf::FieldDescriptor *)v39, v130, a3);
          if (*((_BYTE *)this + 4))
            v144 = " ";
          else
            v144 = "\n";
          (*(void (**)(google::protobuf::TextFormat::Printer::TextGenerator *, const char *, uint64_t))(*(_QWORD *)a3 + 40))(a3, v144, 1);
LABEL_186:
          if (++v129 == v44)
            goto LABEL_187;
        }
        v134 = (char *)this + 24;
        v135 = *(_QWORD **)v186;
        if (*(_QWORD *)v186)
        {
          v136 = (char *)this + 40;
          do
          {
            v137 = v135[4];
            v138 = v137 >= v39;
            if (v137 >= v39)
              v139 = v135;
            else
              v139 = v135 + 1;
            if (v138)
              v136 = (char *)v135;
            v135 = (_QWORD *)*v139;
          }
          while (*v139);
          v134 = (char *)this + 24;
          if (v136 != v186)
          {
            v140 = *((_QWORD *)v136 + 4);
            v141 = v136 + 40;
            if (v140 <= v39)
              v134 = v141;
            else
              v134 = (char *)this + 24;
          }
        }
        v142 = *(_QWORD *)v134;
        if (*(_DWORD *)(v39 + 60) == 3)
        {
          if (v61)
          {
            v143 = (const google::protobuf::Message *)*((_QWORD *)__p + v129);
LABEL_183:
            (*(void (**)(uint64_t, const google::protobuf::Message *, uint64_t, uint64_t, _QWORD, google::protobuf::TextFormat::Printer::TextGenerator *))(*(_QWORD *)v142 + 112))(v142, v143, v130, v44, *((unsigned __int8 *)this + 4), a3);
            (*(void (**)(google::protobuf::TextFormat::Printer::TextGenerator *))(*(_QWORD *)a3 + 16))(a3);
            if (((*(uint64_t (**)(uint64_t, const google::protobuf::Message *, uint64_t, uint64_t, _QWORD, google::protobuf::TextFormat::Printer::TextGenerator *))(*(_QWORD *)v142 + 120))(v142, v143, v130, v44, *((unsigned __int8 *)this + 4), a3) & 1) == 0)google::protobuf::TextFormat::Printer::Print(this, v143, a3);
            (*(void (**)(google::protobuf::TextFormat::Printer::TextGenerator *))(*(_QWORD *)a3 + 24))(a3);
            (*(void (**)(uint64_t, const google::protobuf::Message *, uint64_t, uint64_t, _QWORD, google::protobuf::TextFormat::Printer::TextGenerator *))(*(_QWORD *)v142 + 128))(v142, v143, v130, v44, *((unsigned __int8 *)this + 4), a3);
            goto LABEL_186;
          }
          RepeatedMessage = google::protobuf::Reflection::GetRepeatedMessage((google::protobuf::_anonymous_namespace_ **)v188, v187, (const google::protobuf::FieldDescriptor *)v39, v129, v131);
        }
        else
        {
          RepeatedMessage = google::protobuf::Reflection::GetMessage((google::protobuf::_anonymous_namespace_ **)v188, v187, (const google::protobuf::FieldDescriptor *)v39, 0, v131);
        }
        v143 = (const google::protobuf::Message *)RepeatedMessage;
        goto LABEL_183;
      }
LABEL_214:
      if (!*((_BYTE *)this + 7))
      {
        v154 = *(_QWORD *)((char *)v4 + *((unsigned int *)v188 + 9));
        if ((v154 & 1) != 0)
          v155 = (const google::protobuf::UnknownFieldSet *)((v154 & 0xFFFFFFFFFFFFFFFELL) + 8);
        else
          v155 = (const google::protobuf::UnknownFieldSet *)google::protobuf::UnknownFieldSet::default_instance(v33);
        google::protobuf::TextFormat::Printer::PrintUnknownFields(this, v155, a3, 10);
      }
      v19 = (const google::protobuf::FieldDescriptor *)v191;
      if (v191)
      {
        v192 = (char *)v191;
        goto LABEL_220;
      }
      return;
    }
    (*(void (**)(const google::protobuf::Message *))(*(_QWORD *)v4 + 152))(v4);
    v157 = v156;
    google::protobuf::Reflection::GetString(v156, v4, v198, v158, &v209);
    __p = 0;
    v196 = 0;
    v197 = 0;
    v191 = 0;
    v192 = 0;
    v193 = 0;
    google::protobuf::StringPiece::StringPiece<std::allocator<char>>(v190, (uint64_t *)&v209, v159);
    if ((google::protobuf::internal::ParseAnyTypeUrl(v190[0], v190[1], (uint64_t)&__p, (uint64_t)&v191) & 1) != 0)
    {
      v160 = *((_QWORD *)this + 10);
      if (v160)
        AnyType = (*(uint64_t (**)(uint64_t, const google::protobuf::Message *, void **, void **))(*(_QWORD *)v160 + 32))(v160, v4, &__p, &v191);
      else
      v162 = (const google::protobuf::Descriptor *)AnyType;
      if (AnyType)
      {
        v199 = &off_1E1BF81B8;
        p_p = 0;
        LOBYTE(v201) = 0;
        v163 = (_OWORD *)operator new();
        *v163 = 0u;
        v163[1] = 0u;
        *((_DWORD *)v163 + 8) = 1065353216;
        v203 = v163;
        v204 = 850045863;
        v205 = 0u;
        v206 = 0u;
        v207 = 0u;
        v208 = 0;
        Prototype = google::protobuf::DynamicMessageFactory::GetPrototype((float **)&v199, v162);
        v165 = (google::protobuf::MessageLite *)(*(uint64_t (**)(_QWORD *))(*Prototype + 24))(Prototype);
        google::protobuf::Reflection::GetString(v157, v4, v194, v166, &v189);
        v167 = google::protobuf::MessageLite::ParseFrom<(google::protobuf::MessageLite::ParseFlags)1,std::string>(v165, (uint64_t *)&v189);
        if ((v167 & 1) != 0)
        {
          (*(void (**)(google::protobuf::TextFormat::Printer::TextGenerator *, const char *, uint64_t))(*(_QWORD *)a3 + 40))(a3, "[", 1);
          if ((v209.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
            v168 = &v209;
          else
            v168 = (std::string *)v209.__r_.__value_.__r.__words[0];
          if ((v209.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
            size = HIBYTE(v209.__r_.__value_.__r.__words[2]);
          else
            size = v209.__r_.__value_.__l.__size_;
          (*(void (**)(google::protobuf::TextFormat::Printer::TextGenerator *, std::string *, std::string::size_type))(*(_QWORD *)a3 + 40))(a3, v168, size);
          (*(void (**)(google::protobuf::TextFormat::Printer::TextGenerator *, const char *, uint64_t))(*(_QWORD *)a3 + 40))(a3, "]", 1);
          v170 = (_QWORD *)*((_QWORD *)this + 5);
          if (!v170)
            goto LABEL_248;
          v171 = (_QWORD *)((char *)this + 40);
          do
          {
            v172 = v170[4];
            v173 = v172 >= (unint64_t)v194;
            if (v172 >= (unint64_t)v194)
              v174 = v170;
            else
              v174 = v170 + 1;
            if (v173)
              v171 = v170;
            v170 = (_QWORD *)*v174;
          }
          while (*v174);
          if (v171 != (_QWORD *)((char *)this + 40) && v171[4] <= (unint64_t)v194)
            v175 = v171 + 5;
          else
LABEL_248:
            v175 = (_QWORD *)((char *)this + 24);
          v176 = *v175;
          (*(void (**)(_QWORD, const google::protobuf::Message *, uint64_t, _QWORD, _QWORD, google::protobuf::TextFormat::Printer::TextGenerator *))(*(_QWORD *)*v175 + 112))(*v175, v4, 0xFFFFFFFFLL, 0, *((unsigned __int8 *)this + 4), a3);
          (*(void (**)(google::protobuf::TextFormat::Printer::TextGenerator *))(*(_QWORD *)a3 + 16))(a3);
          google::protobuf::TextFormat::Printer::Print(this, v165, a3);
          (*(void (**)(google::protobuf::TextFormat::Printer::TextGenerator *))(*(_QWORD *)a3 + 24))(a3);
          (*(void (**)(uint64_t, const google::protobuf::Message *, uint64_t, _QWORD, _QWORD, google::protobuf::TextFormat::Printer::TextGenerator *))(*(_QWORD *)v176 + 128))(v176, v4, 0xFFFFFFFFLL, 0, *((unsigned __int8 *)this + 4), a3);
        }
        else
        {
          LODWORD(v211) = 1;
          v212 = (const google::protobuf::FieldDescriptor *)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobu"
                                                            "f/src/google/protobuf/text_format.cc";
          LODWORD(v213) = 2001;
          memset(&v214, 0, sizeof(v214));
          if ((v209.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
            v179 = &v209;
          else
            v179 = (std::string *)v209.__r_.__value_.__r.__words[0];
          if ((v209.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
            v180 = HIBYTE(v209.__r_.__value_.__r.__words[2]);
          else
            v180 = v209.__r_.__value_.__l.__size_;
          std::string::append(&v214, (const std::string::value_type *)v179, v180);
          std::string::append(&v214, ": failed to parse contents");
          google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v211);
          if (SHIBYTE(v214.__r_.__value_.__r.__words[2]) < 0)
            operator delete(v214.__r_.__value_.__l.__data_);
        }
        if (SHIBYTE(v189.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v189.__r_.__value_.__l.__data_);
        if (v165)
          (*(void (**)(google::protobuf::MessageLite *))(*(_QWORD *)v165 + 8))(v165);
        google::protobuf::DynamicMessageFactory::~DynamicMessageFactory((google::protobuf::DynamicMessageFactory *)&v199);
LABEL_272:
        if (SHIBYTE(v193) < 0)
          operator delete(v191);
        if (SHIBYTE(v197) < 0)
          operator delete(__p);
        if (SHIBYTE(v209.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v209.__r_.__value_.__l.__data_);
        if ((v167 & 1) != 0)
          return;
        goto LABEL_38;
      }
      LODWORD(v199) = 1;
      p_p = (void **)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/text_format.cc";
      v201 = 1992;
      v204 = 0;
      *(_QWORD *)&v205 = 0;
      v203 = 0;
      std::string::append((std::string *)&v203, "Can't print proto content: proto type ");
      if ((v209.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v177 = &v209;
      else
        v177 = (std::string *)v209.__r_.__value_.__r.__words[0];
      if ((v209.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v178 = HIBYTE(v209.__r_.__value_.__r.__words[2]);
      else
        v178 = v209.__r_.__value_.__l.__size_;
      std::string::append((std::string *)&v203, (const std::string::value_type *)v177, v178);
      std::string::append((std::string *)&v203, " not found");
      google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v199);
      if (SBYTE7(v205) < 0)
        operator delete(v203);
    }
    v167 = 0;
    goto LABEL_272;
  }
  v211 = 0;
  v212 = 0;
  v213 = 0;
  google::protobuf::MessageLite::SerializeAsString(v4, (uint64_t)&v209);
  v17 = HIBYTE(v209.__r_.__value_.__r.__words[2]);
  if ((v209.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v18 = &v209;
  else
    v18 = (std::string *)v209.__r_.__value_.__r.__words[0];
  if ((v209.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    v17 = v209.__r_.__value_.__r.__words[1];
  v199 = &off_1E1BF87A8;
  p_p = (void **)&v18->__r_.__value_.__l.__data_;
  v201 = v17;
  v202 = v17;
  v203 = 0;
  google::protobuf::UnknownFieldSet::ParseFromZeroCopyStream((google::protobuf::UnknownFieldSet *)&v211, (char *)&v199);
  if (SHIBYTE(v209.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v209.__r_.__value_.__l.__data_);
  google::protobuf::TextFormat::Printer::PrintUnknownFields(this, (const google::protobuf::UnknownFieldSet *)&v211, a3, 10);
  v19 = v211;
  if (v211 != v212)
  {
    v20 = (int)((v212 - v211) >> 4);
    v21 = v20 + 1;
    v22 = 16 * v20 - 16;
    do
    {
      google::protobuf::UnknownField::Delete((uint64_t)v211 + v22);
      --v21;
      v22 -= 16;
    }
    while (v21 > 1);
    v19 = v211;
  }
  if (v19)
  {
    v212 = v19;
LABEL_220:
    operator delete(v19);
  }
}

void sub_18888E3F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,void *__p,uint64_t a25,int a26,__int16 a27,char a28,char a29,uint64_t a30,uint64_t a31,void *a32,uint64_t a33,int a34,__int16 a35,char a36,char a37,uint64_t a38,void *a39,uint64_t a40,int a41,__int16 a42,char a43,char a44,uint64_t a45,char a46,uint64_t a47,uint64_t a48,void *a49,uint64_t a50,int a51,__int16 a52,char a53,char a54)
{
  uint64_t v54;
  uint64_t v55;

  if (*(char *)(v55 - 121) < 0)
    operator delete(*(void **)(v55 - 144));
  if (a29 < 0)
    operator delete(__p);
  if (v54)
    (*(void (**)(uint64_t))(*(_QWORD *)v54 + 8))(v54);
  google::protobuf::DynamicMessageFactory::~DynamicMessageFactory((google::protobuf::DynamicMessageFactory *)&a46);
  if (a37 < 0)
    operator delete(a32);
  if (a44 < 0)
    operator delete(a39);
  if (*(char *)(v55 - 217) < 0)
    operator delete(*(void **)(v55 - 240));
  _Unwind_Resume(a1);
}

void google::protobuf::TextFormat::Printer::PrintUnknownFields(google::protobuf::TextFormat::Printer *this, const google::protobuf::UnknownFieldSet *a2, google::protobuf::TextFormat::Printer::TextGenerator *a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  const google::protobuf::UnknownFieldSet *v7;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t *v12;
  void *p_dst;
  uint64_t v14;
  google::protobuf *v15;
  char *v16;
  void *p_p;
  _BYTE *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  BOOL v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  void (**v30)(google::protobuf::TextFormat::Printer::TextGenerator *, const char *, uint64_t);
  const char *v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  google::protobuf::UnknownFieldSet *v35;
  google::protobuf::UnknownFieldSet *v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  void *v40;
  uint64_t v41;
  void (*v42)(google::protobuf::TextFormat::Printer::TextGenerator *, const char *, uint64_t);
  uint64_t v43;
  uint64_t v44;
  void (*v45)(google::protobuf::TextFormat::Printer::TextGenerator *, const char *, uint64_t);
  const char *v46;
  std::string *v47;
  std::string::size_type size;
  void (**v49)(google::protobuf::TextFormat::Printer::TextGenerator *, const char *, uint64_t);
  const char *v50;
  _BYTE *v51;
  google::protobuf::TextFormat::Printer *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  std::string v60;
  void *__p;
  _BYTE *v62;
  uint64_t v63;
  void *__dst;
  uint64_t v65;
  unsigned __int8 v66;
  void *__src;
  size_t v68;
  uint64_t v69;
  int v70;
  uint64_t v71;
  __int16 v72;
  int v73;
  uint64_t v74;
  int v75;
  int v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;

  v79 = *MEMORY[0x1E0C80C00];
  v4 = *(_QWORD *)a2;
  if ((int)((*((_QWORD *)a2 + 1) - *(_QWORD *)a2) >> 4) >= 1)
  {
    v5 = a4;
    v7 = a2;
    v9 = 0;
    v10 = (a4 - 1);
    do
    {
      v11 = *(unsigned int *)(v4 + 16 * v9);
      __src = &v69;
      v12 = &v69;
      if ((v11 & 0x80000000) != 0)
      {
        LOBYTE(v69) = 45;
        v11 = -(int)v11;
        v12 = (uint64_t *)((char *)&v69 + 1);
      }
      v68 = google::protobuf::FastUInt32ToBufferLeft((google::protobuf *)v11, v12, (char *)a3) - (_BYTE *)&v69;
      std::string::basic_string[abi:ne180100](&__dst, __src, v68);
      switch(*(_DWORD *)(v4 + 16 * v9 + 4))
      {
        case 0:
          if ((v66 & 0x80u) == 0)
            p_dst = &__dst;
          else
            p_dst = __dst;
          if ((v66 & 0x80u) == 0)
            v14 = v66;
          else
            v14 = v65;
          (*(void (**)(google::protobuf::TextFormat::Printer::TextGenerator *, void *, uint64_t))(*(_QWORD *)a3 + 40))(a3, p_dst, v14);
          (*(void (**)(google::protobuf::TextFormat::Printer::TextGenerator *, const char *, uint64_t))(*(_QWORD *)a3 + 40))(a3, ": ", 2);
          v15 = *(google::protobuf **)(v4 + 16 * v9 + 8);
          __src = &v69;
          v68 = google::protobuf::FastUInt64ToBufferLeft(v15, &v69, v16) - (_BYTE *)&v69;
          std::string::basic_string[abi:ne180100](&__p, __src, v68);
          if (v63 >= 0)
            p_p = &__p;
          else
            p_p = __p;
          if (v63 >= 0)
            v18 = (_BYTE *)HIBYTE(v63);
          else
            v18 = v62;
          goto LABEL_46;
        case 1:
          if ((v66 & 0x80u) == 0)
            v19 = &__dst;
          else
            v19 = __dst;
          if ((v66 & 0x80u) == 0)
            v20 = v66;
          else
            v20 = v65;
          (*(void (**)(google::protobuf::TextFormat::Printer::TextGenerator *, void *, uint64_t))(*(_QWORD *)a3 + 40))(a3, v19, v20);
          (*(void (**)(google::protobuf::TextFormat::Printer::TextGenerator *, const char *, uint64_t))(*(_QWORD *)a3 + 40))(a3, ": 0x", 4);
          v21 = 0;
          v22 = *(unsigned int *)(v4 + 16 * v9 + 8);
          v23 = v22 | 0x10000000;
          do
          {
            *((_BYTE *)&v74 + v21 + 3) = google::protobuf::strings::AlphaNum::AlphaNum(google::protobuf::strings::Hex)::hexdigits[v22 & 0xF];
            v22 >>= 4;
            --v21;
            v24 = v23 > 0xF;
            v23 >>= 4;
          }
          while (v24);
          __src = (char *)&v74 + v21 + 4;
          v68 = -v21;
          std::string::basic_string[abi:ne180100](&__p, (char *)&v74 + v21 + 4, -v21);
          if (v63 >= 0)
            p_p = &__p;
          else
            p_p = __p;
          if (v63 >= 0)
            v18 = (_BYTE *)HIBYTE(v63);
          else
            v18 = v62;
          goto LABEL_46;
        case 2:
          if ((v66 & 0x80u) == 0)
            v25 = &__dst;
          else
            v25 = __dst;
          if ((v66 & 0x80u) == 0)
            v26 = v66;
          else
            v26 = v65;
          (*(void (**)(google::protobuf::TextFormat::Printer::TextGenerator *, void *, uint64_t))(*(_QWORD *)a3 + 40))(a3, v25, v26);
          (*(void (**)(google::protobuf::TextFormat::Printer::TextGenerator *, const char *, uint64_t))(*(_QWORD *)a3 + 40))(a3, ": 0x", 4);
          v27 = 0;
          v28 = *(_QWORD *)(v4 + 16 * v9 + 8);
          v29 = v28 | 0x1000000000000000;
          do
          {
            *((_BYTE *)&v74 + v27 + 3) = google::protobuf::strings::AlphaNum::AlphaNum(google::protobuf::strings::Hex)::hexdigits[v28 & 0xF];
            v28 >>= 4;
            --v27;
            v24 = v29 > 0xF;
            v29 >>= 4;
          }
          while (v24);
          __src = (char *)&v74 + v27 + 4;
          v68 = -v27;
          std::string::basic_string[abi:ne180100](&__p, (char *)&v74 + v27 + 4, -v27);
          if (v63 >= 0)
            p_p = &__p;
          else
            p_p = __p;
          if (v63 >= 0)
            v18 = (_BYTE *)HIBYTE(v63);
          else
            v18 = v62;
LABEL_46:
          (*(void (**)(google::protobuf::TextFormat::Printer::TextGenerator *, void *, _BYTE *))(*(_QWORD *)a3 + 40))(a3, p_p, v18);
          if (SHIBYTE(v63) < 0)
            operator delete(__p);
          v30 = (void (**)(google::protobuf::TextFormat::Printer::TextGenerator *, const char *, uint64_t))(*(_QWORD *)a3 + 40);
          if (*((_BYTE *)this + 4))
            v31 = " ";
          else
            v31 = "\n";
          v32 = 1;
          goto LABEL_100;
        case 3:
          if ((v66 & 0x80u) == 0)
            v33 = &__dst;
          else
            v33 = __dst;
          if ((v66 & 0x80u) == 0)
            v34 = v66;
          else
            v34 = v65;
          (*(void (**)(google::protobuf::TextFormat::Printer::TextGenerator *, void *, uint64_t))(*(_QWORD *)a3 + 40))(a3, v33, v34);
          v37 = *(_QWORD *)(v4 + 16 * v9 + 8);
          if (*(char *)(v37 + 23) < 0)
          {
            v39 = *(void **)v37;
            v38 = *(_QWORD *)(v37 + 8);
          }
          else
          {
            LODWORD(v38) = *(unsigned __int8 *)(v37 + 23);
            v39 = (void *)v37;
          }
          __src = v39;
          v68 = (size_t)v39 + (int)v38;
          v69 = 0;
          v71 = 0;
          v72 = 0;
          v70 = v38;
          v73 = v38;
          v74 = 0x7FFFFFFF00000000;
          v77 = 0;
          v78 = 0;
          v75 = v5;
          v76 = v5;
          v62 = 0;
          v63 = 0;
          __p = 0;
          if (*(char *)(v37 + 23) < 0)
            v43 = *(_QWORD *)(v37 + 8);
          else
            v43 = *(unsigned __int8 *)(v37 + 23);
          if ((int)v5 >= 1
            && v43
            && google::protobuf::UnknownFieldSet::ParseFromCodedStream((google::protobuf::UnknownFieldSet *)&__p, (char **)&__src, v35, v36))
          {
            v45 = *(void (**)(google::protobuf::TextFormat::Printer::TextGenerator *, const char *, uint64_t))(*(_QWORD *)a3 + 40);
            if (*((_BYTE *)this + 4))
            {
              v45(a3, " { ", 3);
            }
            else
            {
              v45(a3, " {\n", 3);
              (*(void (**)(google::protobuf::TextFormat::Printer::TextGenerator *))(*(_QWORD *)a3 + 16))(a3);
            }
            google::protobuf::TextFormat::Printer::PrintUnknownFields(this, (const google::protobuf::UnknownFieldSet *)&__p, a3, v10);
            v58 = *(_QWORD *)a3;
            if (*((_BYTE *)this + 4))
            {
              v49 = (void (**)(google::protobuf::TextFormat::Printer::TextGenerator *, const char *, uint64_t))(v58 + 40);
              v50 = "} ";
            }
            else
            {
              (*(void (**)(google::protobuf::TextFormat::Printer::TextGenerator *))(v58 + 24))(a3);
              v49 = (void (**)(google::protobuf::TextFormat::Printer::TextGenerator *, const char *, uint64_t))(*(_QWORD *)a3 + 40);
              v50 = "}\n";
            }
          }
          else
          {
            (*(void (**)(google::protobuf::TextFormat::Printer::TextGenerator *, const char *, uint64_t))(*(_QWORD *)a3 + 40))(a3, ": \"", 3);
            google::protobuf::CEscape((uint64_t *)v37, v46, &v60);
            if ((v60.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
              v47 = &v60;
            else
              v47 = (std::string *)v60.__r_.__value_.__r.__words[0];
            if ((v60.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
              size = HIBYTE(v60.__r_.__value_.__r.__words[2]);
            else
              size = v60.__r_.__value_.__l.__size_;
            (*(void (**)(google::protobuf::TextFormat::Printer::TextGenerator *, std::string *, std::string::size_type))(*(_QWORD *)a3 + 40))(a3, v47, size);
            if (SHIBYTE(v60.__r_.__value_.__r.__words[2]) < 0)
              operator delete(v60.__r_.__value_.__l.__data_);
            v49 = (void (**)(google::protobuf::TextFormat::Printer::TextGenerator *, const char *, uint64_t))(*(_QWORD *)a3 + 40);
            if (*((_BYTE *)this + 4))
              v50 = "\" ";
            else
              v50 = "\"\n";
          }
          (*v49)(a3, v50, 2);
          v51 = __p;
          if (__p != v62)
          {
            v52 = this;
            v53 = v5;
            v54 = v10;
            v55 = (int)((v62 - (_BYTE *)__p) >> 4);
            v56 = v55 + 1;
            v57 = 16 * v55 - 16;
            do
            {
              google::protobuf::UnknownField::Delete((uint64_t)__p + v57);
              --v56;
              v57 -= 16;
            }
            while (v56 > 1);
            v51 = __p;
            v10 = v54;
            v5 = v53;
            this = v52;
            v7 = a2;
          }
          if (v51)
          {
            v62 = v51;
            operator delete(v51);
          }
          google::protobuf::io::CodedInputStream::~CodedInputStream((google::protobuf::io::CodedInputStream *)&__src);
          break;
        case 4:
          if ((v66 & 0x80u) == 0)
            v40 = &__dst;
          else
            v40 = __dst;
          if ((v66 & 0x80u) == 0)
            v41 = v66;
          else
            v41 = v65;
          (*(void (**)(google::protobuf::TextFormat::Printer::TextGenerator *, void *, uint64_t))(*(_QWORD *)a3 + 40))(a3, v40, v41);
          v42 = *(void (**)(google::protobuf::TextFormat::Printer::TextGenerator *, const char *, uint64_t))(*(_QWORD *)a3 + 40);
          if (*((_BYTE *)this + 4))
          {
            v42(a3, " { ", 3);
          }
          else
          {
            v42(a3, " {\n", 3);
            (*(void (**)(google::protobuf::TextFormat::Printer::TextGenerator *))(*(_QWORD *)a3 + 16))(a3);
          }
          google::protobuf::TextFormat::Printer::PrintUnknownFields(this, *(const google::protobuf::UnknownFieldSet **)(v4 + 16 * v9 + 8), a3, v10);
          v44 = *(_QWORD *)a3;
          if (*((_BYTE *)this + 4))
          {
            v30 = (void (**)(google::protobuf::TextFormat::Printer::TextGenerator *, const char *, uint64_t))(v44 + 40);
            v31 = "} ";
          }
          else
          {
            (*(void (**)(google::protobuf::TextFormat::Printer::TextGenerator *))(v44 + 24))(a3);
            v30 = (void (**)(google::protobuf::TextFormat::Printer::TextGenerator *, const char *, uint64_t))(*(_QWORD *)a3 + 40);
            v31 = "}\n";
          }
          v32 = 2;
LABEL_100:
          (*v30)(a3, v31, v32);
          break;
        default:
          break;
      }
      if ((char)v66 < 0)
        operator delete(__dst);
      ++v9;
      v4 = *(_QWORD *)v7;
    }
    while (v9 < (int)((*((_QWORD *)v7 + 1) - *(_QWORD *)v7) >> 4));
  }
}

void sub_18888ECB4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,void *a26,uint64_t a27,int a28,__int16 a29,char a30,char a31,char a32)
{
  if (a19 < 0)
    operator delete(__p);
  google::protobuf::UnknownFieldSet::~UnknownFieldSet((google::protobuf::UnknownFieldSet *)&a20);
  google::protobuf::io::CodedInputStream::~CodedInputStream((google::protobuf::io::CodedInputStream *)&a32);
  if (a31 < 0)
    operator delete(a26);
  _Unwind_Resume(a1);
}

void google::protobuf::TextFormat::Printer::PrintFieldValueToString(google::protobuf::TextFormat::Printer *a1, const google::protobuf::Message *a2, const google::protobuf::FieldDescriptor *a3, const char *a4, uint64_t a5)
{
  int v9;
  google::protobuf::_anonymous_namespace_ **v10;
  _QWORD v11[3];
  int v12;
  __int16 v13;
  int v14;
  int v15;
  _QWORD v16[2];

  if (*(char *)(a5 + 23) < 0)
  {
    **(_BYTE **)a5 = 0;
    *(_QWORD *)(a5 + 8) = 0;
  }
  else
  {
    *(_BYTE *)a5 = 0;
    *(_BYTE *)(a5 + 23) = 0;
  }
  v16[0] = &off_1E1BF87E8;
  v16[1] = a5;
  v9 = *(_DWORD *)a1;
  v11[0] = &off_1E1BF7458;
  v11[1] = v16;
  v11[2] = 0;
  v12 = 0;
  v13 = 1;
  v14 = v9;
  v15 = v9;
  (*(void (**)(const google::protobuf::Message *))(*(_QWORD *)a2 + 152))(a2);
  google::protobuf::TextFormat::Printer::PrintFieldValue(a1, a2, v10, a3, a4, (google::protobuf::TextFormat::Printer::TextGenerator *)v11);
  google::protobuf::TextFormat::Printer::TextGenerator::~TextGenerator((google::protobuf::TextFormat::Printer::TextGenerator *)v11);
}

void sub_18888EDF8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  google::protobuf::TextFormat::Printer::TextGenerator::~TextGenerator((google::protobuf::TextFormat::Printer::TextGenerator *)va);
  _Unwind_Resume(a1);
}

void google::protobuf::TextFormat::Printer::PrintFieldValue(google::protobuf::TextFormat::Printer *this, const google::protobuf::Message *a2, google::protobuf::_anonymous_namespace_ **a3, const google::protobuf::FieldDescriptor *a4, const char *a5, google::protobuf::TextFormat::Printer::TextGenerator *a6)
{
  int v7;
  _QWORD *v12;
  _QWORD *v13;
  unint64_t v14;
  BOOL v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  unint64_t *v19;
  unint64_t v20;
  uint64_t RepeatedInt32;
  uint64_t RepeatedInt64;
  uint64_t RepeatedUInt32;
  uint64_t RepeatedUInt64;
  __n128 v25;
  __n128 v26;
  uint64_t RepeatedBool;
  uint64_t RepeatedEnumValue;
  unint64_t RepeatedStringReference;
  const google::protobuf::Message *RepeatedMessage;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  _QWORD *v34;
  char *v35;
  void **p_p;
  int64_t v37;
  unint64_t v38;
  _BYTE *v39;
  uint64_t v40;
  void *v41;
  std::string *v42;
  void *v43;
  char v44;
  unint64_t *v45;
  unint64_t v46;
  uint64_t v47;
  std::string v48;
  void *__p;
  __int128 v50;
  const google::protobuf::FieldDescriptor *v51;
  uint64_t (*v52)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);
  void *__src;
  size_t v54;
  _QWORD v55[4];
  _BYTE v56[15];
  uint64_t v57;

  v7 = (int)a5;
  v57 = *MEMORY[0x1E0C80C00];
  v12 = (_QWORD *)*((_QWORD *)this + 5);
  if (!v12)
    goto LABEL_12;
  v13 = (_QWORD *)((char *)this + 40);
  do
  {
    v14 = v12[4];
    v15 = v14 >= (unint64_t)a4;
    if (v14 >= (unint64_t)a4)
      v16 = v12;
    else
      v16 = v12 + 1;
    if (v15)
      v13 = v12;
    v12 = (_QWORD *)*v16;
  }
  while (*v16);
  if (v13 != (_QWORD *)((char *)this + 40) && v13[4] <= (unint64_t)a4)
    v17 = v13 + 5;
  else
LABEL_12:
    v17 = (uint64_t *)((char *)this + 24);
  v18 = *v17;
  v19 = (unint64_t *)*((_QWORD *)a4 + 6);
  if (v19)
  {
    v48.__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FieldDescriptor::TypeOnceInit;
    *(_QWORD *)v56 = a4;
    v20 = atomic_load(v19);
    if (v20 != -1)
    {
      __src = &v48;
      v54 = (size_t)v56;
      __p = &__src;
      std::__call_once(v19, &__p, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  switch(*((_DWORD *)a4 + 14))
  {
    case 1:
      if (*((_DWORD *)a4 + 15) == 3)
        v25.n128_f64[0] = google::protobuf::Reflection::GetRepeatedDouble(a3, a2, a4, v7, a5);
      else
        v25.n128_f64[0] = google::protobuf::Reflection::GetDouble(a3, a2, a4, (uint64_t)a4, a5);
      (*(void (**)(uint64_t, google::protobuf::TextFormat::Printer::TextGenerator *, __n128))(*(_QWORD *)v18 + 64))(v18, a6, v25);
      break;
    case 2:
      if (*((_DWORD *)a4 + 15) == 3)
        v26.n128_f32[0] = google::protobuf::Reflection::GetRepeatedFloat(a3, a2, a4, v7, a5);
      else
        v26.n128_f32[0] = google::protobuf::Reflection::GetFloat(a3, a2, a4, (uint64_t)a4, a5);
      (*(void (**)(uint64_t, google::protobuf::TextFormat::Printer::TextGenerator *, __n128))(*(_QWORD *)v18 + 56))(v18, a6, v26);
      break;
    case 3:
    case 0x10:
    case 0x12:
      if (*((_DWORD *)a4 + 15) == 3)
        RepeatedInt64 = google::protobuf::Reflection::GetRepeatedInt64(a3, a2, a4, v7, a5);
      else
        RepeatedInt64 = google::protobuf::Reflection::GetInt64(a3, a2, a4, (uint64_t)a4, a5);
      (*(void (**)(uint64_t, uint64_t, google::protobuf::TextFormat::Printer::TextGenerator *))(*(_QWORD *)v18 + 40))(v18, RepeatedInt64, a6);
      break;
    case 4:
    case 6:
      if (*((_DWORD *)a4 + 15) == 3)
        RepeatedUInt64 = google::protobuf::Reflection::GetRepeatedUInt64(a3, a2, a4, v7, a5);
      else
        RepeatedUInt64 = google::protobuf::Reflection::GetUInt64(a3, a2, a4, (uint64_t)a4, a5);
      (*(void (**)(uint64_t, uint64_t, google::protobuf::TextFormat::Printer::TextGenerator *))(*(_QWORD *)v18 + 48))(v18, RepeatedUInt64, a6);
      break;
    case 5:
    case 0xF:
    case 0x11:
      if (*((_DWORD *)a4 + 15) == 3)
        RepeatedInt32 = google::protobuf::Reflection::GetRepeatedInt32(a3, a2, a4, v7, a5);
      else
        RepeatedInt32 = google::protobuf::Reflection::GetInt32(a3, a2, a4, (uint64_t)a4, a5);
      (*(void (**)(uint64_t, uint64_t, google::protobuf::TextFormat::Printer::TextGenerator *))(*(_QWORD *)v18 + 24))(v18, RepeatedInt32, a6);
      break;
    case 7:
    case 0xD:
      if (*((_DWORD *)a4 + 15) == 3)
        RepeatedUInt32 = google::protobuf::Reflection::GetRepeatedUInt32(a3, a2, a4, v7, a5);
      else
        RepeatedUInt32 = google::protobuf::Reflection::GetUInt32(a3, a2, a4, (uint64_t)a4, a5);
      (*(void (**)(uint64_t, uint64_t, google::protobuf::TextFormat::Printer::TextGenerator *))(*(_QWORD *)v18 + 32))(v18, RepeatedUInt32, a6);
      break;
    case 8:
      if (*((_DWORD *)a4 + 15) == 3)
        RepeatedBool = google::protobuf::Reflection::GetRepeatedBool(a3, a2, a4, v7, a5);
      else
        RepeatedBool = google::protobuf::Reflection::GetBool(a3, a2, a4, (uint64_t)a4, a5);
      (*(void (**)(uint64_t, uint64_t, google::protobuf::TextFormat::Printer::TextGenerator *))(*(_QWORD *)v18 + 16))(v18, RepeatedBool, a6);
      break;
    case 9:
    case 0xC:
      __src = 0;
      v54 = 0;
      v55[0] = 0;
      if (*((_DWORD *)a4 + 15) == 3)
        RepeatedStringReference = google::protobuf::Reflection::GetRepeatedStringReference((uint64_t)a3, (uint64_t)a2, a4, v7, (const char *)&__src);
      else
        RepeatedStringReference = google::protobuf::Reflection::GetStringReference((uint64_t)a3, (uint64_t)a2, a4, (uint64_t)&__src, a5);
      p_p = (void **)RepeatedStringReference;
      __p = 0;
      v50 = 0uLL;
      v37 = *((_QWORD *)this + 2);
      if (v37 >= 1)
      {
        v38 = *(char *)(RepeatedStringReference + 23) < 0
            ? *(_QWORD *)(RepeatedStringReference + 8)
            : *(unsigned __int8 *)(RepeatedStringReference + 23);
        if (v37 < v38)
        {
          std::string::basic_string(&v48, (const std::string *)RepeatedStringReference, 0, v37, (std::allocator<char> *)&v52);
          v42 = std::string::append(&v48, "...<truncated>...");
          v43 = (void *)v42->__r_.__value_.__r.__words[0];
          *(_QWORD *)v56 = v42->__r_.__value_.__l.__size_;
          *(_QWORD *)&v56[7] = *(std::string::size_type *)((char *)&v42->__r_.__value_.__r.__words[1] + 7);
          v44 = HIBYTE(v42->__r_.__value_.__r.__words[2]);
          v42->__r_.__value_.__l.__size_ = 0;
          v42->__r_.__value_.__r.__words[2] = 0;
          v42->__r_.__value_.__r.__words[0] = 0;
          *(_QWORD *)((char *)&v50 + 7) = *(_QWORD *)&v56[7];
          __p = v43;
          *(_QWORD *)&v50 = *(_QWORD *)v56;
          HIBYTE(v50) = v44;
          if (SHIBYTE(v48.__r_.__value_.__r.__words[2]) < 0)
            operator delete(v48.__r_.__value_.__l.__data_);
          p_p = &__p;
        }
      }
      v45 = (unint64_t *)*((_QWORD *)a4 + 6);
      if (v45)
      {
        v51 = a4;
        v52 = google::protobuf::FieldDescriptor::TypeOnceInit;
        v46 = atomic_load(v45);
        if (v46 != -1)
        {
          v48.__r_.__value_.__r.__words[0] = (std::string::size_type)&v52;
          v48.__r_.__value_.__l.__size_ = (std::string::size_type)&v51;
          *(_QWORD *)v56 = &v48;
          std::__call_once(v45, v56, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
        }
      }
      v47 = 80;
      if (*((_DWORD *)a4 + 14) == 9)
        v47 = 72;
      (*(void (**)(uint64_t, void **, google::protobuf::TextFormat::Printer::TextGenerator *))(*(_QWORD *)v18 + v47))(v18, p_p, a6);
      if (SHIBYTE(v50) < 0)
        operator delete(__p);
      if (SHIBYTE(v55[0]) < 0)
      {
        v41 = __src;
        goto LABEL_79;
      }
      break;
    case 0xA:
    case 0xB:
      if (*((_DWORD *)a4 + 15) == 3)
        RepeatedMessage = (const google::protobuf::Message *)google::protobuf::Reflection::GetRepeatedMessage(a3, a2, a4, v7, a5);
      else
        RepeatedMessage = (const google::protobuf::Message *)google::protobuf::Reflection::GetMessage(a3, a2, a4, 0, a5);
      google::protobuf::TextFormat::Printer::Print(this, RepeatedMessage, a6);
      break;
    case 0xE:
      if (*((_DWORD *)a4 + 15) == 3)
        RepeatedEnumValue = google::protobuf::Reflection::GetRepeatedEnumValue(a3, a2, a4, v7, a5);
      else
        RepeatedEnumValue = google::protobuf::Reflection::GetEnumValue(a3, a2, a4, (uint64_t)a4, a5);
      v31 = RepeatedEnumValue;
      v32 = (_QWORD *)google::protobuf::FieldDescriptor::enum_type(a4);
      v33 = (_QWORD *)(*(_QWORD *)(v32[2] + 144) + 192);
      __src = v32;
      v54 = v31;
      if (v34)
      {
        (*(void (**)(uint64_t, uint64_t, _QWORD, google::protobuf::TextFormat::Printer::TextGenerator *))(*(_QWORD *)v18 + 88))(v18, v31, *v34, a6);
      }
      else
      {
        __src = v55;
        v39 = v55;
        v40 = v31;
        if ((v31 & 0x80000000) != 0)
        {
          v39 = (char *)v55 + 1;
          LOBYTE(v55[0]) = 45;
          v40 = -(int)v31;
        }
        v54 = google::protobuf::FastUInt32ToBufferLeft((google::protobuf *)v40, v39, v35) - (_BYTE *)v55;
        std::string::basic_string[abi:ne180100](&__p, __src, v54);
        (*(void (**)(uint64_t, uint64_t, void **, google::protobuf::TextFormat::Printer::TextGenerator *))(*(_QWORD *)v18 + 88))(v18, v31, &__p, a6);
        if (SHIBYTE(v50) < 0)
        {
          v41 = __p;
LABEL_79:
          operator delete(v41);
        }
      }
      break;
    default:
      return;
  }
}

void sub_18888F444(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,uint64_t a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29)
{
  if (a15 < 0)
    operator delete(__p);
  if (a29 < 0)
    operator delete(a24);
  _Unwind_Resume(exception_object);
}

void google::protobuf::TextFormat::Printer::PrintFieldName(uint64_t a1, uint64_t a2, char *a3, uint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7)
{
  unint64_t v8;
  char *v9;
  _QWORD *v10;
  _QWORD *v11;
  unint64_t v12;
  BOOL v13;
  _QWORD *v14;
  _QWORD *v15;
  void **v16;
  unint64_t v17;
  void *__p[2];
  unsigned __int8 v19;
  void *__src;
  size_t v21;
  char v22;
  _BYTE v23[39];

  *(_QWORD *)&v23[31] = *MEMORY[0x1E0C80C00];
  if (*(_BYTE *)(a1 + 5))
  {
    v8 = *(unsigned int *)(a6 + 68);
    __src = &v22;
    if ((v8 & 0x80000000) != 0)
    {
      v9 = v23;
      v22 = 45;
      v8 = -(int)v8;
    }
    else
    {
      v9 = &v22;
    }
    v21 = google::protobuf::FastUInt32ToBufferLeft((google::protobuf *)v8, v9, a3) - &v22;
    std::string::basic_string[abi:ne180100](__p, __src, v21);
    if ((v19 & 0x80u) == 0)
      v16 = __p;
    else
      v16 = (void **)__p[0];
    if ((v19 & 0x80u) == 0)
      v17 = v19;
    else
      v17 = (unint64_t)__p[1];
    (*(void (**)(uint64_t, void **, unint64_t))(*(_QWORD *)a7 + 40))(a7, v16, v17);
    if ((char)v19 < 0)
      operator delete(__p[0]);
  }
  else
  {
    v10 = *(_QWORD **)(a1 + 40);
    if (!v10)
      goto LABEL_15;
    v11 = (_QWORD *)(a1 + 40);
    do
    {
      v12 = v10[4];
      v13 = v12 >= a6;
      if (v12 >= a6)
        v14 = v10;
      else
        v14 = v10 + 1;
      if (v13)
        v11 = v10;
      v10 = (_QWORD *)*v14;
    }
    while (*v14);
    if (v11 != (_QWORD *)(a1 + 40) && v11[4] <= a6)
      v15 = v11 + 5;
    else
LABEL_15:
      v15 = (_QWORD *)(a1 + 24);
    (*(void (**)(void))(*(_QWORD *)*v15 + 96))();
  }
}

void sub_18888F608(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::TextFormat::PrintFieldValueToString(const google::protobuf::Message *a1, const google::protobuf::FieldDescriptor *a2, const char *a3, uint64_t a4)
{
  uint64_t result;
  _BYTE v9[24];
  uint64_t v10;
  _QWORD *v11[3];
  _QWORD *v12[4];

  google::protobuf::TextFormat::Printer::Printer((google::protobuf::TextFormat::Printer *)v9);
  google::protobuf::TextFormat::Printer::PrintFieldValueToString((google::protobuf::TextFormat::Printer *)v9, a1, a2, a3, a4);
  std::__tree<std::__value_type<google::protobuf::Descriptor const*,std::unique_ptr<google::protobuf::TextFormat::MessagePrinter const>>,std::__map_value_compare<google::protobuf::Descriptor const*,std::__value_type<google::protobuf::Descriptor const*,std::unique_ptr<google::protobuf::TextFormat::MessagePrinter const>>,std::less<google::protobuf::Descriptor const*>,true>,std::allocator<std::__value_type<google::protobuf::Descriptor const*,std::unique_ptr<google::protobuf::TextFormat::MessagePrinter const>>>>::destroy((uint64_t)v12, v12[1]);
  std::__tree<std::__value_type<google::protobuf::Descriptor const*,std::unique_ptr<google::protobuf::TextFormat::MessagePrinter const>>,std::__map_value_compare<google::protobuf::Descriptor const*,std::__value_type<google::protobuf::Descriptor const*,std::unique_ptr<google::protobuf::TextFormat::MessagePrinter const>>,std::less<google::protobuf::Descriptor const*>,true>,std::allocator<std::__value_type<google::protobuf::Descriptor const*,std::unique_ptr<google::protobuf::TextFormat::MessagePrinter const>>>>::destroy((uint64_t)v11, v11[1]);
  result = v10;
  v10 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_18888F6C0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  google::protobuf::TextFormat::Printer::~Printer((google::protobuf::TextFormat::Printer *)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::TextFormat::Parser::ParserImpl::ParserImpl(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, char a8, char a9, char a10, char a11, char a12, char a13, char a14, int a15)
{
  google::protobuf::io::Tokenizer *v18;

  *(_QWORD *)a1 = a4;
  *(_QWORD *)(a1 + 8) = a5;
  *(_QWORD *)(a1 + 16) = a6;
  *(_QWORD *)(a1 + 24) = &off_1E1BF7428;
  v18 = (google::protobuf::io::Tokenizer *)(a1 + 40);
  *(_QWORD *)(a1 + 32) = a1;
  google::protobuf::io::Tokenizer::Tokenizer(a1 + 40, a3, a1 + 24);
  *(_QWORD *)(a1 + 216) = a2;
  *(_DWORD *)(a1 + 224) = a7;
  *(_BYTE *)(a1 + 228) = a8;
  *(_BYTE *)(a1 + 229) = a9;
  *(_BYTE *)(a1 + 230) = a10;
  *(_BYTE *)(a1 + 231) = a11;
  *(_BYTE *)(a1 + 232) = a12;
  *(_BYTE *)(a1 + 233) = a14;
  *(_DWORD *)(a1 + 236) = a15;
  *(_DWORD *)(a1 + 240) = a15;
  *(_BYTE *)(a1 + 244) = 0;
  *(_BYTE *)(a1 + 204) = 1;
  *(_DWORD *)(a1 + 208) = 1;
  if (a13)
    *(_WORD *)(a1 + 212) = 256;
  google::protobuf::io::Tokenizer::Next(v18);
  return a1;
}

void sub_18888F7C8(_Unwind_Exception *a1)
{
  google::protobuf::io::Tokenizer *v1;

  google::protobuf::io::Tokenizer::~Tokenizer(v1);
  _Unwind_Resume(a1);
}

void google::protobuf::TextFormat::Parser::ParserImpl::ParserErrorCollector::~ParserErrorCollector(google::protobuf::TextFormat::Parser::ParserImpl::ParserErrorCollector *this)
{
  JUMPOUT(0x18D76437CLL);
}

void google::protobuf::TextFormat::Parser::ParserImpl::ParserErrorCollector::AddError(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  google::protobuf::TextFormat::Parser::ParserImpl::ReportError(*(uint64_t **)(a1 + 8), a2, a3, a4);
}

void google::protobuf::TextFormat::Parser::ParserImpl::ParserErrorCollector::AddWarning(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  google::protobuf::TextFormat::Parser::ParserImpl::ReportWarning(*(uint64_t **)(a1 + 8), a2, a3, a4);
}

void google::protobuf::TextFormat::Parser::ParserImpl::ReportWarning(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v5;
  int v6;
  uint64_t v8;
  uint64_t v9;
  int v10;
  const std::string::value_type *v11;
  std::string::size_type v12;
  int v13;
  const std::string::value_type *v14;
  std::string::size_type v15;
  void *v16;
  uint64_t v17;
  int v18;
  const std::string::value_type *v19;
  std::string::size_type v20;
  int v21;
  const std::string::value_type *v22;
  std::string::size_type v23;
  int v24;
  const char *v25;
  int v26;
  std::string v27;
  std::string::value_type __str[8];
  const char *v29;
  int v30;
  std::string __p[4];
  char v32;
  uint64_t v33;

  v5 = a3;
  v6 = a2;
  v33 = *MEMORY[0x1E0C80C00];
  v8 = *a1;
  if (v8)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)v8 + 24))(v8, a2, a3, a4);
    return;
  }
  if ((a2 & 0x80000000) != 0)
  {
    *(_DWORD *)__str = 1;
    v29 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/text_format.cc";
    v30 = 338;
    memset(__p, 0, 24);
    std::string::append(__p, "Warning parsing text-format ");
    v17 = *(_QWORD *)(a1[27] + 8);
    v18 = *(char *)(v17 + 23);
    if (v18 >= 0)
      v19 = *(const std::string::value_type **)(a1[27] + 8);
    else
      v19 = *(const std::string::value_type **)v17;
    if (v18 >= 0)
      v20 = *(unsigned __int8 *)(v17 + 23);
    else
      v20 = *(_QWORD *)(v17 + 8);
    std::string::append(__p, v19, v20);
    std::string::append(__p, ": ");
    v21 = *(char *)(a4 + 23);
    if (v21 >= 0)
      v22 = (const std::string::value_type *)a4;
    else
      v22 = *(const std::string::value_type **)a4;
    if (v21 >= 0)
      v23 = *(unsigned __int8 *)(a4 + 23);
    else
      v23 = *(_QWORD *)(a4 + 8);
    std::string::append(__p, v22, v23);
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)__str);
    if (SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) < 0)
    {
      v16 = (void *)__p[0].__r_.__value_.__r.__words[0];
      goto LABEL_32;
    }
  }
  else
  {
    v24 = 1;
    v25 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/text_format.cc";
    v26 = 334;
    memset(&v27, 0, sizeof(v27));
    std::string::append(&v27, "Warning parsing text-format ");
    v9 = *(_QWORD *)(a1[27] + 8);
    v10 = *(char *)(v9 + 23);
    if (v10 >= 0)
      v11 = *(const std::string::value_type **)(a1[27] + 8);
    else
      v11 = *(const std::string::value_type **)v9;
    if (v10 >= 0)
      v12 = *(unsigned __int8 *)(v9 + 23);
    else
      v12 = *(_QWORD *)(v9 + 8);
    std::string::append(&v27, v11, v12);
    std::string::append(&v27, ": ");
    snprintf(__str, 0x80uLL, "%d", v6 + 1);
    v32 = 0;
    std::string::append(&v27, __str);
    std::string::append(&v27, ":");
    snprintf(__str, 0x80uLL, "%d", v5 + 1);
    v32 = 0;
    std::string::append(&v27, __str);
    std::string::append(&v27, ": ");
    v13 = *(char *)(a4 + 23);
    if (v13 >= 0)
      v14 = (const std::string::value_type *)a4;
    else
      v14 = *(const std::string::value_type **)a4;
    if (v13 >= 0)
      v15 = *(unsigned __int8 *)(a4 + 23);
    else
      v15 = *(_QWORD *)(a4 + 8);
    std::string::append(&v27, v14, v15);
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v24);
    if (SHIBYTE(v27.__r_.__value_.__r.__words[2]) < 0)
    {
      v16 = (void *)v27.__r_.__value_.__r.__words[0];
LABEL_32:
      operator delete(v16);
    }
  }
}

void sub_18888FA8C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, uint64_t a20,uint64_t a21,void *__p,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a27 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::TextFormat::Parser::ParserImpl::ConsumeField(google::protobuf::TextFormat::Parser::ParserImpl *this, google::protobuf::Message *a2)
{
  google::protobuf::_anonymous_namespace_ **v4;
  google::protobuf::_anonymous_namespace_ **v5;
  uint64_t v6;
  uint64_t v7;
  const google::protobuf::FieldDescriptor **v8;
  int v9;
  int v10;
  int v11;
  char v12;
  std::string *v13;
  std::string::size_type v14;
  int v15;
  int v16;
  char v17;
  char v18;
  const char *v19;
  uint64_t v20;
  _DWORD *v21;
  uint64_t v22;
  _DWORD *v23;
  uint64_t FieldByNumber;
  uint64_t v25;
  const char *v26;
  unint64_t FieldByName;
  BOOL v28;
  const char *v29;
  uint64_t v30;
  uint64_t ExtensionByPrintableName;
  char v32;
  char v33;
  uint64_t v34;
  uint64_t AnyType;
  uint64_t v36;
  uint64_t v37;
  std::string *v38;
  __int128 v39;
  uint64_t v40;
  int v41;
  const std::string::value_type *v42;
  std::string::size_type v43;
  std::string *v44;
  __int128 v45;
  std::string *v46;
  __int128 v47;
  std::string *v48;
  std::string *v49;
  int v50;
  uint64_t v51;
  const char *v52;
  unint64_t *v53;
  unint64_t v54;
  unint64_t *v55;
  unint64_t v56;
  uint64_t v57;
  const void **v58;
  uint64_t v59;
  uint64_t v60;
  std::string::size_type v61;
  std::string *v62;
  uint64_t v63;
  std::string *v64;
  std::string *v65;
  int v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  __int128 v71;
  std::string::size_type v72;
  unsigned __int8 **v73;
  unsigned __int8 *v74;
  int v75;
  unsigned __int8 *v76;
  std::string *v77;
  uint64_t v78;
  unint64_t v79;
  int v80;
  std::string *v81;
  __int128 v82;
  std::string *v83;
  std::string::size_type v84;
  std::string *v85;
  __int128 v86;
  std::string *v87;
  __int128 v88;
  std::string *v89;
  __int128 v90;
  void *v91;
  const std::string::value_type **v92;
  uint64_t v93;
  const char *v94;
  const std::string::value_type ***OneofFieldDescriptor;
  std::string *v96;
  __int128 v97;
  int v98;
  const std::string::value_type *v99;
  std::string::size_type v100;
  std::string *v101;
  __int128 v102;
  std::string *v103;
  __int128 v104;
  int v105;
  const std::string::value_type *v106;
  std::string::size_type v107;
  std::string *v108;
  __int128 v109;
  std::string *v110;
  __int128 v111;
  unint64_t *v112;
  unint64_t v113;
  uint64_t v114;
  unsigned int *v115;
  int v116;
  const char *v117;
  BOOL v118;
  uint64_t v119;
  google::protobuf::MessageFactory *v120;
  char v121;
  int v122;
  char v123;
  unint64_t *v124;
  unint64_t v125;
  char v126;
  char v127;
  unint64_t *v128;
  unint64_t v129;
  std::string *v130;
  __int128 v131;
  std::string *v132;
  std::string::size_type v133;
  std::string *v134;
  __int128 v135;
  std::string *v136;
  __int128 v137;
  uint64_t v138;
  char *v139;
  int v140;
  uint64_t v141;
  std::string *v142;
  __int128 v143;
  uint64_t v144;
  int v145;
  const std::string::value_type *v146;
  std::string::size_type v147;
  std::string *v148;
  __int128 v149;
  std::string *v150;
  __int128 v151;
  const google::protobuf::Descriptor *v153;
  _OWORD *v154;
  _QWORD *Prototype;
  google::protobuf::Message *v156;
  std::string *p_p;
  std::string::size_type size;
  std::string *v159;
  __int128 v160;
  std::string *v161;
  __int128 v162;
  void *v163;
  google::protobuf::MessageLite *v164;
  uint64_t v165;
  std::string *v166;
  __int128 v167;
  uint64_t **v168;
  uint64_t *v169;
  uint64_t **v170;
  uint64_t **v171;
  unint64_t v172;
  uint64_t *v173;
  uint64_t *v174;
  uint64_t *v175;
  unint64_t v176;
  _QWORD *v177;
  _QWORD *v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  unint64_t v183;
  char *v184;
  char *v185;
  char *v186;
  char *v187;
  char *v188;
  uint64_t v189;
  char v190;
  int v191;
  std::string *v192;
  __int128 v193;
  uint64_t v194;
  const char *v195;
  google::protobuf::FieldDescriptor *v196;
  const char *v197;
  const char *v198;
  google::protobuf::FieldDescriptor *v199;
  uint64_t v200;
  google::protobuf::_anonymous_namespace_ **v201;
  uint64_t v202;
  std::string v203;
  void *v204[2];
  char v205;
  std::string v206;
  std::string v207;
  std::string __p;
  google::protobuf::FieldDescriptor *v209;
  google::protobuf::FieldDescriptor *v210;
  std::string v211;
  std::string v212;
  std::string v213;
  std::string v214;
  std::string v215;
  std::string v216;
  void *v217;
  uint64_t v218;
  __int128 v219;
  __int128 v220;
  __int128 v221;
  uint64_t v222;
  uint64_t v223;

  v223 = *MEMORY[0x1E0C80C00];
  (*(void (**)(google::protobuf::Message *))(*(_QWORD *)a2 + 152))(a2);
  v5 = v4;
  v6 = (*(uint64_t (**)(google::protobuf::Message *))(*(_QWORD *)a2 + 152))(a2);
  memset(&v211, 0, sizeof(v211));
  v7 = *((_QWORD *)this + 9);
  v209 = 0;
  v210 = 0;
  if (google::protobuf::internal::GetAnyFieldDescriptors(a2, (const google::protobuf::Message *)&v210, &v209, v8))
  {
    std::string::basic_string[abi:ne180100]<0>(&v216, "[");
    v9 = google::protobuf::TextFormat::Parser::ParserImpl::TryConsume((uint64_t)this, (unsigned __int8 *)&v216);
    v10 = v9;
    if (SHIBYTE(v216.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(v216.__r_.__value_.__l.__data_);
      if (v10)
        goto LABEL_4;
    }
    else if (v9)
    {
LABEL_4:
      memset(&__p, 0, sizeof(__p));
      memset(&v207, 0, sizeof(v207));
      if (!google::protobuf::TextFormat::Parser::ParserImpl::ConsumeIdentifier((uint64_t)this, &v207))
        goto LABEL_62;
      while (1)
      {
        std::string::basic_string[abi:ne180100]<0>(&v216, ".");
        v11 = google::protobuf::TextFormat::Parser::ParserImpl::TryConsume((uint64_t)this, (unsigned __int8 *)&v216);
        if (SHIBYTE(v216.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v216.__r_.__value_.__l.__data_);
        if (!v11)
          break;
        memset(&v216, 0, sizeof(v216));
        v12 = google::protobuf::TextFormat::Parser::ParserImpl::ConsumeIdentifier((uint64_t)this, &v216);
        if ((v12 & 1) != 0)
        {
          std::operator+<char>();
          v13 = (v215.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
              ? &v215
              : (std::string *)v215.__r_.__value_.__r.__words[0];
          v14 = (v215.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
              ? HIBYTE(v215.__r_.__value_.__r.__words[2])
              : v215.__r_.__value_.__l.__size_;
          std::string::append(&v207, (const std::string::value_type *)v13, v14);
          if (SHIBYTE(v215.__r_.__value_.__r.__words[2]) < 0)
            operator delete(v215.__r_.__value_.__l.__data_);
        }
        if (SHIBYTE(v216.__r_.__value_.__r.__words[2]) < 0)
        {
          operator delete(v216.__r_.__value_.__l.__data_);
          if ((v12 & 1) == 0)
            goto LABEL_62;
        }
        else if ((v12 & 1) == 0)
        {
          goto LABEL_62;
        }
      }
      std::string::basic_string[abi:ne180100]<0>(&v216, "/");
      v32 = google::protobuf::TextFormat::Parser::ParserImpl::Consume((uint64_t)this, (unsigned __int8 *)&v216);
      if (SHIBYTE(v216.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v216.__r_.__value_.__l.__data_);
      if ((v32 & 1) == 0)
        goto LABEL_62;
      std::string::append(&v207, "/");
      if ((google::protobuf::TextFormat::Parser::ParserImpl::ConsumeFullTypeName((uint64_t)this, &__p) & 1) == 0)
        goto LABEL_62;
      std::string::basic_string[abi:ne180100]<0>(&v216, "]");
      v33 = google::protobuf::TextFormat::Parser::ParserImpl::Consume((uint64_t)this, (unsigned __int8 *)&v216);
      if (SHIBYTE(v216.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v216.__r_.__value_.__l.__data_);
      if ((v33 & 1) == 0)
      {
LABEL_62:
        v36 = 0;
LABEL_63:
        if (SHIBYTE(v207.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v207.__r_.__value_.__l.__data_);
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
          operator delete(__p.__r_.__value_.__l.__data_);
        goto LABEL_291;
      }
      std::string::basic_string[abi:ne180100]<0>(&v216, ":");
      google::protobuf::TextFormat::Parser::ParserImpl::TryConsume((uint64_t)this, (unsigned __int8 *)&v216);
      if (SHIBYTE(v216.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v216.__r_.__value_.__l.__data_);
      memset(&v206, 0, sizeof(v206));
      v34 = *((_QWORD *)this + 1);
      if (v34)
        AnyType = (*(uint64_t (**)(uint64_t, google::protobuf::Message *, std::string *, std::string *))(*(_QWORD *)v34 + 32))(v34, a2, &v207, &__p);
      else
      v153 = (const google::protobuf::Descriptor *)AnyType;
      if (!AnyType)
      {
        std::operator+<char>();
        if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          p_p = &__p;
        else
          p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
        if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
        else
          size = __p.__r_.__value_.__l.__size_;
        v159 = std::string::append(&v214, (const std::string::value_type *)p_p, size);
        v160 = *(_OWORD *)&v159->__r_.__value_.__l.__data_;
        v215.__r_.__value_.__r.__words[2] = v159->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v215.__r_.__value_.__l.__data_ = v160;
        v159->__r_.__value_.__l.__size_ = 0;
        v159->__r_.__value_.__r.__words[2] = 0;
        v159->__r_.__value_.__r.__words[0] = 0;
        v161 = std::string::append(&v215, "\" stored in google.protobuf.Any.");
        v162 = *(_OWORD *)&v161->__r_.__value_.__l.__data_;
        v216.__r_.__value_.__r.__words[2] = v161->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v216.__r_.__value_.__l.__data_ = v162;
        v161->__r_.__value_.__l.__size_ = 0;
        v161->__r_.__value_.__r.__words[2] = 0;
        v161->__r_.__value_.__r.__words[0] = 0;
        google::protobuf::TextFormat::Parser::ParserImpl::ReportError((uint64_t *)this, *((unsigned int *)this + 18), *((unsigned int *)this + 19), (uint64_t)&v216);
        if (SHIBYTE(v216.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v216.__r_.__value_.__l.__data_);
        if (SHIBYTE(v215.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v215.__r_.__value_.__l.__data_);
        if ((SHIBYTE(v214.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
          goto LABEL_386;
        v163 = (void *)v214.__r_.__value_.__r.__words[0];
        goto LABEL_313;
      }
      v216.__r_.__value_.__r.__words[0] = (std::string::size_type)&off_1E1BF81B8;
      v216.__r_.__value_.__l.__size_ = 0;
      v216.__r_.__value_.__s.__data_[16] = 0;
      v154 = (_OWORD *)operator new();
      *v154 = 0u;
      v154[1] = 0u;
      *((_DWORD *)v154 + 8) = 1065353216;
      v217 = v154;
      v218 = 850045863;
      v219 = 0u;
      v220 = 0u;
      v221 = 0u;
      v222 = 0;
      Prototype = google::protobuf::DynamicMessageFactory::GetPrototype((float **)&v216, v153);
      if (!Prototype)
      {
        google::protobuf::DynamicMessageFactory::~DynamicMessageFactory((google::protobuf::DynamicMessageFactory *)&v216);
        goto LABEL_386;
      }
      v156 = (google::protobuf::Message *)(*(uint64_t (**)(_QWORD *))(*Prototype + 24))(Prototype);
      memset(&v215, 0, sizeof(v215));
      if ((google::protobuf::TextFormat::Parser::ParserImpl::ConsumeMessageDelimiter((uint64_t)this, (uint64_t)&v215) & 1) != 0)
      {
        if (SHIBYTE(v215.__r_.__value_.__r.__words[2]) < 0)
          std::string::__init_copy_ctor_external(&v214, v215.__r_.__value_.__l.__data_, v215.__r_.__value_.__l.__size_);
        else
          v214 = v215;
        v190 = google::protobuf::TextFormat::Parser::ParserImpl::ConsumeMessage(this, v156, (unsigned __int8 *)&v214);
        if (SHIBYTE(v214.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v214.__r_.__value_.__l.__data_);
        if ((v190 & 1) != 0)
        {
          if (*((_BYTE *)this + 233)
            || ((*(uint64_t (**)(google::protobuf::Message *))(*(_QWORD *)v156 + 48))(v156) & 1) != 0)
          {
            google::protobuf::MessageLite::AppendPartialToString((uint64_t)v156, &v206);
            v191 = 1;
LABEL_374:
            if (SHIBYTE(v215.__r_.__value_.__r.__words[2]) < 0)
              operator delete(v215.__r_.__value_.__l.__data_);
            if (v156)
            {
              (*(void (**)(google::protobuf::Message *))(*(_QWORD *)v156 + 8))(v156);
              google::protobuf::DynamicMessageFactory::~DynamicMessageFactory((google::protobuf::DynamicMessageFactory *)&v216);
              if ((v191 & 1) == 0)
                goto LABEL_386;
            }
            else
            {
              google::protobuf::DynamicMessageFactory::~DynamicMessageFactory((google::protobuf::DynamicMessageFactory *)&v216);
              if (!v191)
                goto LABEL_386;
            }
            if (*((_DWORD *)this + 56) != 1
              || (*((_DWORD *)v210 + 15) == 3
               || (google::protobuf::Reflection::HasField(v5, a2, v210, v194, v195) & 1) == 0)
              && (*((_DWORD *)v209 + 15) == 3
               || !google::protobuf::Reflection::HasField(v5, a2, v209, v194, v195)))
            {
              v196 = v210;
              std::operator+[abi:ne180100]<char,std::char_traits<char>,std::allocator<char>>((const void **)&v207.__r_.__value_.__l.__data_, (const void **)&__p.__r_.__value_.__l.__data_, (uint64_t)v204);
              google::protobuf::Reflection::SetString((uint64_t)v5, a2, v196, (uint64_t)v204, v197);
              if (v205 < 0)
                operator delete(v204[0]);
              v199 = v209;
              if (SHIBYTE(v206.__r_.__value_.__r.__words[2]) < 0)
                std::string::__init_copy_ctor_external(&v203, v206.__r_.__value_.__l.__data_, v206.__r_.__value_.__l.__size_);
              else
                v203 = v206;
              google::protobuf::Reflection::SetString((uint64_t)v5, a2, v199, (uint64_t)&v203, v198);
              if (SHIBYTE(v203.__r_.__value_.__r.__words[2]) < 0)
                operator delete(v203.__r_.__value_.__l.__data_);
              v36 = 1;
              goto LABEL_387;
            }
            std::string::basic_string[abi:ne180100]<0>(&v216, "Non-repeated Any specified multiple times.");
            google::protobuf::TextFormat::Parser::ParserImpl::ReportError((uint64_t *)this, *((unsigned int *)this + 18), *((unsigned int *)this + 19), (uint64_t)&v216);
            if ((SHIBYTE(v216.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
            {
LABEL_386:
              v36 = 0;
LABEL_387:
              if (SHIBYTE(v206.__r_.__value_.__r.__words[2]) < 0)
                operator delete(v206.__r_.__value_.__l.__data_);
              goto LABEL_63;
            }
            v163 = (void *)v216.__r_.__value_.__r.__words[0];
LABEL_313:
            operator delete(v163);
            goto LABEL_386;
          }
          std::operator+<char>();
          v192 = std::string::append(&v212, "\" stored in google.protobuf.Any has missing required fields");
          v193 = *(_OWORD *)&v192->__r_.__value_.__l.__data_;
          v213.__r_.__value_.__r.__words[2] = v192->__r_.__value_.__r.__words[2];
          *(_OWORD *)&v213.__r_.__value_.__l.__data_ = v193;
          v192->__r_.__value_.__l.__size_ = 0;
          v192->__r_.__value_.__r.__words[2] = 0;
          v192->__r_.__value_.__r.__words[0] = 0;
          google::protobuf::TextFormat::Parser::ParserImpl::ReportError((uint64_t *)this, *((unsigned int *)this + 18), *((unsigned int *)this + 19), (uint64_t)&v213);
          if (SHIBYTE(v213.__r_.__value_.__r.__words[2]) < 0)
            operator delete(v213.__r_.__value_.__l.__data_);
          if (SHIBYTE(v212.__r_.__value_.__r.__words[2]) < 0)
            operator delete(v212.__r_.__value_.__l.__data_);
        }
      }
      v191 = 0;
      goto LABEL_374;
    }
  }
  std::string::basic_string[abi:ne180100]<0>(&v216, "[");
  v15 = google::protobuf::TextFormat::Parser::ParserImpl::TryConsume((uint64_t)this, (unsigned __int8 *)&v216);
  v16 = v15;
  if (SHIBYTE(v216.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v216.__r_.__value_.__l.__data_);
    if (v16)
      goto LABEL_25;
LABEL_30:
    if (!google::protobuf::TextFormat::Parser::ParserImpl::ConsumeIdentifier((uint64_t)this, &v211))
      goto LABEL_290;
    LODWORD(__p.__r_.__value_.__l.__data_) = 0;
    if (*((_BYTE *)this + 232) && google::protobuf::safe_strto32((uint64_t)&v211, (int *)&__p))
    {
      v20 = *(unsigned int *)(v6 + 124);
      if ((int)v20 < 1)
      {
LABEL_38:
        v22 = *(unsigned int *)(v6 + 132);
        if ((int)v22 >= 1)
        {
          v23 = (_DWORD *)(*(_QWORD *)(v6 + 88) + 4);
          while (*(v23 - 1) > SLODWORD(__p.__r_.__value_.__l.__data_)
               || *v23 <= SLODWORD(__p.__r_.__value_.__l.__data_))
          {
            v23 += 2;
            if (!--v22)
              goto LABEL_43;
          }
          v28 = 1;
LABEL_256:
          if (!*((_BYTE *)this + 229) && !v28 && *((_BYTE *)this + 230) == 0)
          {
            LODWORD(v216.__r_.__value_.__l.__data_) = 3;
            v216.__r_.__value_.__l.__size_ = (std::string::size_type)"/Library/Caches/com.apple.xbs/Sources/GeoServices/l"
                                                                     "ibprotobuf/src/google/protobuf/text_format.cc";
            LODWORD(v216.__r_.__value_.__r.__words[2]) = 516;
            v218 = 0;
            *(_QWORD *)&v219 = 0;
            v217 = 0;
            std::string::append((std::string *)&v217, "CHECK failed: allow_unknown_field_ || allow_unknown_extension_ || reserved_field: ");
            google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v216);
            if (SBYTE7(v219) < 0)
              operator delete(v217);
          }
          std::string::basic_string[abi:ne180100]<0>(&v216, ":");
          if (google::protobuf::TextFormat::Parser::ParserImpl::TryConsume((uint64_t)this, (unsigned __int8 *)&v216))
          {
            std::string::basic_string[abi:ne180100]<0>(&v215, "{");
            if ((AddrObjGoogle::protobuf::TextFormat::Parser::ParserImpl::LookingAt((uint64_t)this, (unsigned __int8 *)&v215) & 1) != 0)
            {
              v140 = 0;
            }
            else
            {
              std::string::basic_string[abi:ne180100]<0>(&v214, "<");
              v140 = AddrObjGoogle::protobuf::TextFormat::Parser::ParserImpl::LookingAt((uint64_t)this, (unsigned __int8 *)&v214) ^ 1;
              if (SHIBYTE(v214.__r_.__value_.__r.__words[2]) < 0)
                operator delete(v214.__r_.__value_.__l.__data_);
            }
            if (SHIBYTE(v215.__r_.__value_.__r.__words[2]) < 0)
              operator delete(v215.__r_.__value_.__l.__data_);
          }
          else
          {
            v140 = 0;
          }
          if (SHIBYTE(v216.__r_.__value_.__r.__words[2]) < 0)
          {
            operator delete(v216.__r_.__value_.__l.__data_);
            if (v140)
              goto LABEL_270;
          }
          else if (v140)
          {
LABEL_270:
            v141 = google::protobuf::TextFormat::Parser::ParserImpl::SkipFieldValue(this, v138, v139);
LABEL_273:
            v36 = v141;
            goto LABEL_291;
          }
          v141 = google::protobuf::TextFormat::Parser::ParserImpl::SkipFieldMessage(this, v138, v139);
          goto LABEL_273;
        }
LABEL_43:
        FieldByNumber = google::protobuf::Descriptor::FindFieldByNumber((google::protobuf::Descriptor *)v6, (int)__p.__r_.__value_.__l.__data_);
      }
      else
      {
        v21 = (_DWORD *)(*(_QWORD *)(v6 + 72) + 4);
        while (*(v21 - 1) > SLODWORD(__p.__r_.__value_.__l.__data_) || *v21 <= SLODWORD(__p.__r_.__value_.__l.__data_))
        {
          v21 += 4;
          if (!--v20)
            goto LABEL_38;
        }
        v63 = *((_QWORD *)this + 1);
        if (v63)
          FieldByNumber = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v63 + 24))(v63, v6);
        else
          FieldByNumber = google::protobuf::DescriptorPool::FindExtensionByNumber(*(std::mutex ***)(*(_QWORD *)(v6 + 16) + 16), (const google::protobuf::Descriptor *)v6, LODWORD(__p.__r_.__value_.__l.__data_));
      }
      FieldByName = FieldByNumber;
      v28 = 0;
    }
    else
    {
      FieldByName = google::protobuf::Descriptor::FindFieldByName(v6, (uint64_t *)&v211, v19);
      if (FieldByName)
        goto LABEL_95;
      if (SHIBYTE(v211.__r_.__value_.__r.__words[2]) < 0)
        std::string::__init_copy_ctor_external(&v216, v211.__r_.__value_.__l.__data_, v211.__r_.__value_.__l.__size_);
      else
        v216 = v211;
      v48 = (std::string *)((char *)&v216 + HIBYTE(v216.__r_.__value_.__r.__words[2]));
      if ((v216.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      {
        v49 = &v216;
      }
      else
      {
        v48 = (std::string *)(v216.__r_.__value_.__r.__words[0] + v216.__r_.__value_.__l.__size_);
        v49 = (std::string *)v216.__r_.__value_.__r.__words[0];
      }
      while (v49 != v48)
      {
        v50 = v49->__r_.__value_.__s.__data_[0];
        if ((v50 - 65) <= 0x19)
          v49->__r_.__value_.__s.__data_[0] = v50 + 32;
        v49 = (std::string *)((char *)v49 + 1);
      }
      v51 = google::protobuf::Descriptor::FindFieldByName(v6, (uint64_t *)&v216, v29);
      FieldByName = v51;
      if (v51)
      {
        v53 = *(unint64_t **)(v51 + 48);
        if (v53)
        {
          v213.__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FieldDescriptor::TypeOnceInit;
          v212.__r_.__value_.__r.__words[0] = FieldByName;
          v54 = atomic_load(v53);
          if (v54 != -1)
          {
            v215.__r_.__value_.__r.__words[0] = (std::string::size_type)&v213;
            v215.__r_.__value_.__l.__size_ = (std::string::size_type)&v212;
            v214.__r_.__value_.__r.__words[0] = (std::string::size_type)&v215;
            std::__call_once(v53, &v214, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
          }
        }
        if (*(_DWORD *)(FieldByName + 56) != 10)
          FieldByName = 0;
      }
      if (SHIBYTE(v216.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v216.__r_.__value_.__l.__data_);
      if (FieldByName)
      {
LABEL_95:
        v55 = *(unint64_t **)(FieldByName + 48);
        if (v55)
        {
          v214.__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FieldDescriptor::TypeOnceInit;
          v213.__r_.__value_.__r.__words[0] = FieldByName;
          v56 = atomic_load(v55);
          if (v56 != -1)
          {
            v216.__r_.__value_.__r.__words[0] = (std::string::size_type)&v214;
            v216.__r_.__value_.__l.__size_ = (std::string::size_type)&v213;
            v215.__r_.__value_.__r.__words[0] = (std::string::size_type)&v216;
            std::__call_once(v55, &v215, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
          }
        }
        if (*(_DWORD *)(FieldByName + 56) != 10)
          goto LABEL_171;
        v57 = google::protobuf::FieldDescriptor::message_type((google::protobuf::FieldDescriptor *)FieldByName);
        v58 = *(const void ***)v57;
        v59 = *(unsigned __int8 *)(*(_QWORD *)v57 + 23);
        v52 = *(const char **)(*(_QWORD *)v57 + 8);
        if ((v59 & 0x80u) == 0)
          v60 = *(unsigned __int8 *)(*(_QWORD *)v57 + 23);
        else
          v60 = *(_QWORD *)(*(_QWORD *)v57 + 8);
        v61 = HIBYTE(v211.__r_.__value_.__r.__words[2]);
        if ((v211.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
          v61 = v211.__r_.__value_.__l.__size_;
        if (v60 == v61)
        {
          if ((v211.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
            v62 = &v211;
          else
            v62 = (std::string *)v211.__r_.__value_.__r.__words[0];
          if ((v59 & 0x80) != 0)
          {
            if (!memcmp(*v58, v62, (size_t)v52))
              goto LABEL_171;
          }
          else
          {
            if (!*(_BYTE *)(*(_QWORD *)v57 + 23))
              goto LABEL_171;
            while (*(unsigned __int8 *)v58 == v62->__r_.__value_.__s.__data_[0])
            {
              v58 = (const void **)((char *)v58 + 1);
              v62 = (std::string *)((char *)v62 + 1);
              if (!--v59)
                goto LABEL_171;
            }
          }
        }
      }
      if (*((_BYTE *)this + 228))
      {
        if (SHIBYTE(v211.__r_.__value_.__r.__words[2]) < 0)
          std::string::__init_copy_ctor_external(&v216, v211.__r_.__value_.__l.__data_, v211.__r_.__value_.__l.__size_);
        else
          v216 = v211;
        v64 = (std::string *)((char *)&v216 + HIBYTE(v216.__r_.__value_.__r.__words[2]));
        if ((v216.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        {
          v65 = &v216;
        }
        else
        {
          v64 = (std::string *)(v216.__r_.__value_.__r.__words[0] + v216.__r_.__value_.__l.__size_);
          v65 = (std::string *)v216.__r_.__value_.__r.__words[0];
        }
        while (v65 != v64)
        {
          v66 = v65->__r_.__value_.__s.__data_[0];
          if ((v66 - 65) <= 0x19)
            v65->__r_.__value_.__s.__data_[0] = v66 + 32;
          v65 = (std::string *)((char *)v65 + 1);
        }
        FieldByName = google::protobuf::Descriptor::FindFieldByLowercaseName(v6, (uint64_t *)&v216, v52);
        if (SHIBYTE(v216.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v216.__r_.__value_.__l.__data_);
        if (FieldByName)
          goto LABEL_171;
      }
      v202 = v7;
      v67 = *(unsigned int *)(v6 + 136);
      if ((int)v67 < 1)
      {
        v28 = 0;
        FieldByName = 0;
      }
      else
      {
        v201 = v5;
        v68 = 0;
        v69 = *(_QWORD *)(v6 + 96);
        v70 = HIBYTE(v211.__r_.__value_.__r.__words[2]);
        v71 = *(_OWORD *)&v211.__r_.__value_.__l.__data_;
        if ((v211.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          v72 = HIBYTE(v211.__r_.__value_.__r.__words[2]);
        else
          v72 = v211.__r_.__value_.__l.__size_;
        v28 = 1;
        do
        {
          v73 = *(unsigned __int8 ***)(v69 + 8 * v68);
          v74 = (unsigned __int8 *)*((unsigned __int8 *)v73 + 23);
          v75 = (char)v74;
          if ((char)v74 < 0)
            v74 = v73[1];
          if ((unsigned __int8 *)v72 == v74)
          {
            if (v75 >= 0)
              v76 = *(unsigned __int8 **)(v69 + 8 * v68);
            else
              v76 = *v73;
            if ((v70 & 0x80) != 0)
            {
              v200 = v6;
              v79 = v67;
              v80 = memcmp((const void *)v71, v76, *((size_t *)&v71 + 1));
              v67 = v79;
              v6 = v200;
              if (!v80)
                break;
            }
            else
            {
              if (!(_DWORD)v70)
                break;
              v77 = &v211;
              v78 = v70;
              while (v77->__r_.__value_.__s.__data_[0] == *v76)
              {
                v77 = (std::string *)((char *)v77 + 1);
                ++v76;
                if (!--v78)
                  goto LABEL_149;
              }
            }
          }
          v28 = ++v68 < v67;
        }
        while (v68 != v67);
LABEL_149:
        FieldByName = 0;
        v5 = v201;
      }
      v7 = v202;
      if (v28)
        goto LABEL_170;
    }
    if (!FieldByName)
    {
      if (*((_BYTE *)this + 229))
      {
        std::operator+<char>();
        v81 = std::string::append(&v213, "\" has no field named \"");
        v82 = *(_OWORD *)&v81->__r_.__value_.__l.__data_;
        v214.__r_.__value_.__r.__words[2] = v81->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v214.__r_.__value_.__l.__data_ = v82;
        v81->__r_.__value_.__l.__size_ = 0;
        v81->__r_.__value_.__r.__words[2] = 0;
        v81->__r_.__value_.__r.__words[0] = 0;
        if ((v211.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          v83 = &v211;
        else
          v83 = (std::string *)v211.__r_.__value_.__r.__words[0];
        if ((v211.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          v84 = HIBYTE(v211.__r_.__value_.__r.__words[2]);
        else
          v84 = v211.__r_.__value_.__l.__size_;
        v85 = std::string::append(&v214, (const std::string::value_type *)v83, v84);
        v86 = *(_OWORD *)&v85->__r_.__value_.__l.__data_;
        v215.__r_.__value_.__r.__words[2] = v85->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v215.__r_.__value_.__l.__data_ = v86;
        v85->__r_.__value_.__l.__size_ = 0;
        v85->__r_.__value_.__r.__words[2] = 0;
        v85->__r_.__value_.__r.__words[0] = 0;
        v87 = std::string::append(&v215, "\".");
        v88 = *(_OWORD *)&v87->__r_.__value_.__l.__data_;
        v216.__r_.__value_.__r.__words[2] = v87->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v216.__r_.__value_.__l.__data_ = v88;
        v87->__r_.__value_.__l.__size_ = 0;
        v87->__r_.__value_.__r.__words[2] = 0;
        v87->__r_.__value_.__r.__words[0] = 0;
        google::protobuf::TextFormat::Parser::ParserImpl::ReportWarning((uint64_t *)this, *((unsigned int *)this + 18), *((unsigned int *)this + 19), (uint64_t)&v216);
        goto LABEL_161;
      }
      std::operator+<char>();
      v130 = std::string::append(&v213, "\" has no field named \"");
      v131 = *(_OWORD *)&v130->__r_.__value_.__l.__data_;
      v214.__r_.__value_.__r.__words[2] = v130->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v214.__r_.__value_.__l.__data_ = v131;
      v130->__r_.__value_.__l.__size_ = 0;
      v130->__r_.__value_.__r.__words[2] = 0;
      v130->__r_.__value_.__r.__words[0] = 0;
      if ((v211.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v132 = &v211;
      else
        v132 = (std::string *)v211.__r_.__value_.__r.__words[0];
      if ((v211.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v133 = HIBYTE(v211.__r_.__value_.__r.__words[2]);
      else
        v133 = v211.__r_.__value_.__l.__size_;
      v134 = std::string::append(&v214, (const std::string::value_type *)v132, v133);
      v135 = *(_OWORD *)&v134->__r_.__value_.__l.__data_;
      v215.__r_.__value_.__r.__words[2] = v134->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v215.__r_.__value_.__l.__data_ = v135;
      v134->__r_.__value_.__l.__size_ = 0;
      v134->__r_.__value_.__r.__words[2] = 0;
      v134->__r_.__value_.__r.__words[0] = 0;
      v136 = std::string::append(&v215, "\".");
      v137 = *(_OWORD *)&v136->__r_.__value_.__l.__data_;
      v216.__r_.__value_.__r.__words[2] = v136->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v216.__r_.__value_.__l.__data_ = v137;
      v136->__r_.__value_.__l.__size_ = 0;
      v136->__r_.__value_.__r.__words[2] = 0;
      v136->__r_.__value_.__r.__words[0] = 0;
      google::protobuf::TextFormat::Parser::ParserImpl::ReportError((uint64_t *)this, *((unsigned int *)this + 18), *((unsigned int *)this + 19), (uint64_t)&v216);
      goto LABEL_281;
    }
LABEL_170:
    if (!FieldByName)
      goto LABEL_256;
    goto LABEL_171;
  }
  if (!v15)
    goto LABEL_30;
LABEL_25:
  if ((google::protobuf::TextFormat::Parser::ParserImpl::ConsumeFullTypeName((uint64_t)this, &v211) & 1) == 0)
    goto LABEL_290;
  std::string::basic_string[abi:ne180100]<0>(&v216, "]");
  v17 = google::protobuf::TextFormat::Parser::ParserImpl::Consume((uint64_t)this, (unsigned __int8 *)&v216);
  v18 = v17;
  if (SHIBYTE(v216.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v216.__r_.__value_.__l.__data_);
    if ((v18 & 1) == 0)
      goto LABEL_290;
  }
  else if ((v17 & 1) == 0)
  {
    goto LABEL_290;
  }
  v30 = *((_QWORD *)this + 1);
  if (v30)
  {
    ExtensionByPrintableName = (*(uint64_t (**)(uint64_t, google::protobuf::Message *, std::string *))(*(_QWORD *)v30 + 16))(v30, a2, &v211);
  }
  else
  {
    v37 = (*(uint64_t (**)(google::protobuf::Message *))(*(_QWORD *)a2 + 152))(a2);
    ExtensionByPrintableName = google::protobuf::DescriptorPool::FindExtensionByPrintableName(*(_QWORD *)(*(_QWORD *)(v37 + 16) + 16), v37, (uint64_t *)&v211);
  }
  FieldByName = ExtensionByPrintableName;
  if (!ExtensionByPrintableName)
  {
    if (*((_BYTE *)this + 229) || *((_BYTE *)this + 230))
    {
      std::operator+<char>();
      v38 = std::string::append(&v213, "\" which is not defined or is not an extension of \"");
      v39 = *(_OWORD *)&v38->__r_.__value_.__l.__data_;
      v214.__r_.__value_.__r.__words[2] = v38->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v214.__r_.__value_.__l.__data_ = v39;
      v38->__r_.__value_.__l.__size_ = 0;
      v38->__r_.__value_.__r.__words[2] = 0;
      v38->__r_.__value_.__r.__words[0] = 0;
      v40 = *(_QWORD *)(v6 + 8);
      v41 = *(char *)(v40 + 23);
      if (v41 >= 0)
        v42 = *(const std::string::value_type **)(v6 + 8);
      else
        v42 = *(const std::string::value_type **)v40;
      if (v41 >= 0)
        v43 = *(unsigned __int8 *)(v40 + 23);
      else
        v43 = *(_QWORD *)(v40 + 8);
      v44 = std::string::append(&v214, v42, v43);
      v45 = *(_OWORD *)&v44->__r_.__value_.__l.__data_;
      v215.__r_.__value_.__r.__words[2] = v44->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v215.__r_.__value_.__l.__data_ = v45;
      v44->__r_.__value_.__l.__size_ = 0;
      v44->__r_.__value_.__r.__words[2] = 0;
      v44->__r_.__value_.__r.__words[0] = 0;
      v46 = std::string::append(&v215, "\".");
      v47 = *(_OWORD *)&v46->__r_.__value_.__l.__data_;
      v216.__r_.__value_.__r.__words[2] = v46->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v216.__r_.__value_.__l.__data_ = v47;
      v46->__r_.__value_.__l.__size_ = 0;
      v46->__r_.__value_.__r.__words[2] = 0;
      v46->__r_.__value_.__r.__words[0] = 0;
      google::protobuf::TextFormat::Parser::ParserImpl::ReportWarning((uint64_t *)this, *((unsigned int *)this + 18), *((unsigned int *)this + 19), (uint64_t)&v216);
LABEL_161:
      if (SHIBYTE(v216.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v216.__r_.__value_.__l.__data_);
      if (SHIBYTE(v215.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v215.__r_.__value_.__l.__data_);
      if (SHIBYTE(v214.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v214.__r_.__value_.__l.__data_);
      if (SHIBYTE(v213.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v213.__r_.__value_.__l.__data_);
      v28 = 0;
      goto LABEL_256;
    }
    std::operator+<char>();
    v142 = std::string::append(&v213, "\" is not defined or is not an extension of \"");
    v143 = *(_OWORD *)&v142->__r_.__value_.__l.__data_;
    v214.__r_.__value_.__r.__words[2] = v142->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v214.__r_.__value_.__l.__data_ = v143;
    v142->__r_.__value_.__l.__size_ = 0;
    v142->__r_.__value_.__r.__words[2] = 0;
    v142->__r_.__value_.__r.__words[0] = 0;
    v144 = *(_QWORD *)(v6 + 8);
    v145 = *(char *)(v144 + 23);
    if (v145 >= 0)
      v146 = *(const std::string::value_type **)(v6 + 8);
    else
      v146 = *(const std::string::value_type **)v144;
    if (v145 >= 0)
      v147 = *(unsigned __int8 *)(v144 + 23);
    else
      v147 = *(_QWORD *)(v144 + 8);
    v148 = std::string::append(&v214, v146, v147);
    v149 = *(_OWORD *)&v148->__r_.__value_.__l.__data_;
    v215.__r_.__value_.__r.__words[2] = v148->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v215.__r_.__value_.__l.__data_ = v149;
    v148->__r_.__value_.__l.__size_ = 0;
    v148->__r_.__value_.__r.__words[2] = 0;
    v148->__r_.__value_.__r.__words[0] = 0;
    v150 = std::string::append(&v215, "\".");
    v151 = *(_OWORD *)&v150->__r_.__value_.__l.__data_;
    v216.__r_.__value_.__r.__words[2] = v150->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v216.__r_.__value_.__l.__data_ = v151;
    v150->__r_.__value_.__l.__size_ = 0;
    v150->__r_.__value_.__r.__words[2] = 0;
    v150->__r_.__value_.__r.__words[0] = 0;
    google::protobuf::TextFormat::Parser::ParserImpl::ReportError((uint64_t *)this, *((unsigned int *)this + 18), *((unsigned int *)this + 19), (uint64_t)&v216);
LABEL_281:
    if (SHIBYTE(v216.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v216.__r_.__value_.__l.__data_);
    if (SHIBYTE(v215.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v215.__r_.__value_.__l.__data_);
    if (SHIBYTE(v214.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v214.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v213.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      goto LABEL_290;
    v91 = (void *)v213.__r_.__value_.__r.__words[0];
    goto LABEL_289;
  }
LABEL_171:
  if (*((_DWORD *)this + 56) == 1)
  {
    if (*(_DWORD *)(FieldByName + 60) != 3
      && google::protobuf::Reflection::HasField(v5, a2, (const google::protobuf::FieldDescriptor *)FieldByName, v25, v26))
    {
      std::operator+<char>();
      v89 = std::string::append(&v215, "\" is specified multiple times.");
      v90 = *(_OWORD *)&v89->__r_.__value_.__l.__data_;
      v216.__r_.__value_.__r.__words[2] = v89->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v216.__r_.__value_.__l.__data_ = v90;
      v89->__r_.__value_.__l.__size_ = 0;
      v89->__r_.__value_.__r.__words[2] = 0;
      v89->__r_.__value_.__r.__words[0] = 0;
      google::protobuf::TextFormat::Parser::ParserImpl::ReportError((uint64_t *)this, *((unsigned int *)this + 18), *((unsigned int *)this + 19), (uint64_t)&v216);
      if (SHIBYTE(v216.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v216.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v215.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        goto LABEL_290;
      v91 = (void *)v215.__r_.__value_.__r.__words[0];
      goto LABEL_289;
    }
    v92 = *(const std::string::value_type ***)(FieldByName + 88);
    if (v92
      && google::protobuf::Reflection::HasOneof((uint64_t)v5, a2, *(_QWORD *)(FieldByName + 88), v25, v26))
    {
      OneofFieldDescriptor = (const std::string::value_type ***)google::protobuf::Reflection::GetOneofFieldDescriptor((uint64_t)v5, a2, (uint64_t)v92, v93, v94);
      std::operator+<char>();
      v96 = std::string::append(&__p, "\" is specified along with field \"");
      v97 = *(_OWORD *)&v96->__r_.__value_.__l.__data_;
      v212.__r_.__value_.__r.__words[2] = v96->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v212.__r_.__value_.__l.__data_ = v97;
      v96->__r_.__value_.__l.__size_ = 0;
      v96->__r_.__value_.__r.__words[2] = 0;
      v96->__r_.__value_.__r.__words[0] = 0;
      v98 = *((char *)*OneofFieldDescriptor + 23);
      if (v98 >= 0)
        v99 = (const std::string::value_type *)*OneofFieldDescriptor;
      else
        v99 = **OneofFieldDescriptor;
      if (v98 >= 0)
        v100 = *((unsigned __int8 *)*OneofFieldDescriptor + 23);
      else
        v100 = (std::string::size_type)(*OneofFieldDescriptor)[1];
      v101 = std::string::append(&v212, v99, v100);
      v102 = *(_OWORD *)&v101->__r_.__value_.__l.__data_;
      v213.__r_.__value_.__r.__words[2] = v101->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v213.__r_.__value_.__l.__data_ = v102;
      v101->__r_.__value_.__l.__size_ = 0;
      v101->__r_.__value_.__r.__words[2] = 0;
      v101->__r_.__value_.__r.__words[0] = 0;
      v103 = std::string::append(&v213, "\", another member of oneof \"");
      v104 = *(_OWORD *)&v103->__r_.__value_.__l.__data_;
      v214.__r_.__value_.__r.__words[2] = v103->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v214.__r_.__value_.__l.__data_ = v104;
      v103->__r_.__value_.__l.__size_ = 0;
      v103->__r_.__value_.__r.__words[2] = 0;
      v103->__r_.__value_.__r.__words[0] = 0;
      v105 = (*v92)[23];
      if (v105 >= 0)
        v106 = *v92;
      else
        v106 = *(const std::string::value_type **)*v92;
      if (v105 >= 0)
        v107 = *((unsigned __int8 *)*v92 + 23);
      else
        v107 = *((_QWORD *)*v92 + 1);
      v108 = std::string::append(&v214, v106, v107);
      v109 = *(_OWORD *)&v108->__r_.__value_.__l.__data_;
      v215.__r_.__value_.__r.__words[2] = v108->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v215.__r_.__value_.__l.__data_ = v109;
      v108->__r_.__value_.__l.__size_ = 0;
      v108->__r_.__value_.__r.__words[2] = 0;
      v108->__r_.__value_.__r.__words[0] = 0;
      v110 = std::string::append(&v215, "\".");
      v111 = *(_OWORD *)&v110->__r_.__value_.__l.__data_;
      v216.__r_.__value_.__r.__words[2] = v110->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v216.__r_.__value_.__l.__data_ = v111;
      v110->__r_.__value_.__l.__size_ = 0;
      v110->__r_.__value_.__r.__words[2] = 0;
      v110->__r_.__value_.__r.__words[0] = 0;
      google::protobuf::TextFormat::Parser::ParserImpl::ReportError((uint64_t *)this, *((unsigned int *)this + 18), *((unsigned int *)this + 19), (uint64_t)&v216);
      if (SHIBYTE(v216.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v216.__r_.__value_.__l.__data_);
      if (SHIBYTE(v215.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v215.__r_.__value_.__l.__data_);
      if (SHIBYTE(v214.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v214.__r_.__value_.__l.__data_);
      if (SHIBYTE(v213.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v213.__r_.__value_.__l.__data_);
      if (SHIBYTE(v212.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v212.__r_.__value_.__l.__data_);
      if ((SHIBYTE(__p.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        goto LABEL_290;
      v91 = (void *)__p.__r_.__value_.__r.__words[0];
LABEL_289:
      operator delete(v91);
      goto LABEL_290;
    }
  }
  v112 = *(unint64_t **)(FieldByName + 48);
  if (v112)
  {
    v214.__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FieldDescriptor::TypeOnceInit;
    v213.__r_.__value_.__r.__words[0] = FieldByName;
    v113 = atomic_load(v112);
    if (v113 != -1)
    {
      v216.__r_.__value_.__r.__words[0] = (std::string::size_type)&v214;
      v216.__r_.__value_.__l.__size_ = (std::string::size_type)&v213;
      v215.__r_.__value_.__r.__words[0] = (std::string::size_type)&v216;
      std::__call_once(v112, &v215, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  if ((*(_DWORD *)(FieldByName + 56) & 0xFFFFFFFE) != 0xA)
  {
    std::string::basic_string[abi:ne180100]<0>(&v216, ":");
    v121 = google::protobuf::TextFormat::Parser::ParserImpl::Consume((uint64_t)this, (unsigned __int8 *)&v216);
    if (SHIBYTE(v216.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v216.__r_.__value_.__l.__data_);
    if ((v121 & 1) == 0)
      goto LABEL_290;
LABEL_219:
    if (*(_DWORD *)(FieldByName + 60) == 3)
    {
      std::string::basic_string[abi:ne180100]<0>(&v216, "[");
      v122 = google::protobuf::TextFormat::Parser::ParserImpl::TryConsume((uint64_t)this, (unsigned __int8 *)&v216);
      if (SHIBYTE(v216.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v216.__r_.__value_.__l.__data_);
      if (v122)
      {
        std::string::basic_string[abi:ne180100]<0>(&v216, "]");
        v123 = google::protobuf::TextFormat::Parser::ParserImpl::TryConsume((uint64_t)this, (unsigned __int8 *)&v216);
        if (SHIBYTE(v216.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v216.__r_.__value_.__l.__data_);
        if ((v123 & 1) == 0)
        {
          while (1)
          {
            v124 = *(unint64_t **)(FieldByName + 48);
            if (v124)
            {
              v214.__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FieldDescriptor::TypeOnceInit;
              v213.__r_.__value_.__r.__words[0] = FieldByName;
              v125 = atomic_load(v124);
              if (v125 != -1)
              {
                v216.__r_.__value_.__r.__words[0] = (std::string::size_type)&v214;
                v216.__r_.__value_.__l.__size_ = (std::string::size_type)&v213;
                v215.__r_.__value_.__r.__words[0] = (std::string::size_type)&v216;
                std::__call_once(v124, &v215, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
              }
            }
            if ((*(_DWORD *)(FieldByName + 56) & 0xFFFFFFFE) == 0xA)
            {
              if ((google::protobuf::TextFormat::Parser::ParserImpl::ConsumeFieldMessage(this, a2, v5, (unint64_t **)FieldByName) & 1) == 0)goto LABEL_290;
            }
            else if (!google::protobuf::TextFormat::Parser::ParserImpl::ConsumeFieldValue(this, a2, v5, (const google::protobuf::FieldDescriptor *)FieldByName))
            {
              goto LABEL_290;
            }
            std::string::basic_string[abi:ne180100]<0>(&v216, "]");
            v126 = google::protobuf::TextFormat::Parser::ParserImpl::TryConsume((uint64_t)this, (unsigned __int8 *)&v216);
            if (SHIBYTE(v216.__r_.__value_.__r.__words[2]) < 0)
              operator delete(v216.__r_.__value_.__l.__data_);
            if ((v126 & 1) != 0)
              break;
            std::string::basic_string[abi:ne180100]<0>(&v216, ",");
            v127 = google::protobuf::TextFormat::Parser::ParserImpl::Consume((uint64_t)this, (unsigned __int8 *)&v216);
            if (SHIBYTE(v216.__r_.__value_.__r.__words[2]) < 0)
              operator delete(v216.__r_.__value_.__l.__data_);
            v36 = 0;
            if ((v127 & 1) == 0)
              goto LABEL_291;
          }
        }
        goto LABEL_319;
      }
    }
    v128 = *(unint64_t **)(FieldByName + 48);
    if (v128)
    {
      v214.__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FieldDescriptor::TypeOnceInit;
      v213.__r_.__value_.__r.__words[0] = FieldByName;
      v129 = atomic_load(v128);
      if (v129 != -1)
      {
        v216.__r_.__value_.__r.__words[0] = (std::string::size_type)&v214;
        v216.__r_.__value_.__l.__size_ = (std::string::size_type)&v213;
        v215.__r_.__value_.__r.__words[0] = (std::string::size_type)&v216;
        std::__call_once(v128, &v215, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
      }
    }
    if ((*(_DWORD *)(FieldByName + 56) & 0xFFFFFFFE) == 0xA)
    {
      if ((google::protobuf::TextFormat::Parser::ParserImpl::ConsumeFieldMessage(this, a2, v5, (unint64_t **)FieldByName) & 1) != 0)goto LABEL_319;
    }
    else if (google::protobuf::TextFormat::Parser::ParserImpl::ConsumeFieldValue(this, a2, v5, (const google::protobuf::FieldDescriptor *)FieldByName))
    {
      goto LABEL_319;
    }
LABEL_290:
    v36 = 0;
    goto LABEL_291;
  }
  std::string::basic_string[abi:ne180100]<0>(&v216, ":");
  v116 = google::protobuf::TextFormat::Parser::ParserImpl::TryConsume((uint64_t)this, (unsigned __int8 *)&v216);
  if (SHIBYTE(v216.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v216.__r_.__value_.__l.__data_);
  if (!v116 || !*(_BYTE *)(*(_QWORD *)(FieldByName + 120) + 79) || *((_DWORD *)this + 10) != 5)
    goto LABEL_219;
  memset(&v216, 0, sizeof(v216));
  v118 = google::protobuf::TextFormat::Parser::ParserImpl::ConsumeString((uint64_t)this, &v216, v114, v115);
  if (v118)
  {
    v119 = *((_QWORD *)this + 1);
    if (v119)
      v120 = (google::protobuf::MessageFactory *)(*(uint64_t (**)(uint64_t, unint64_t))(*(_QWORD *)v119 + 40))(v119, FieldByName);
    else
      v120 = 0;
    v164 = (google::protobuf::MessageLite *)google::protobuf::Reflection::MutableMessage(v5, a2, (const google::protobuf::FieldDescriptor *)FieldByName, v120, v117);
    google::protobuf::MessageLite::ParseFrom<(google::protobuf::MessageLite::ParseFlags)1,std::string>(v164, (uint64_t *)&v216);
  }
  if (SHIBYTE(v216.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v216.__r_.__value_.__l.__data_);
  if (!v118)
    goto LABEL_290;
LABEL_319:
  std::string::basic_string[abi:ne180100]<0>(&v216, ";");
  v165 = v7;
  if ((google::protobuf::TextFormat::Parser::ParserImpl::TryConsume((uint64_t)this, (unsigned __int8 *)&v216) & 1) == 0)
  {
    std::string::basic_string[abi:ne180100]<0>(&v215, ",");
    google::protobuf::TextFormat::Parser::ParserImpl::TryConsume((uint64_t)this, (unsigned __int8 *)&v215);
    if (SHIBYTE(v215.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v215.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v216.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v216.__r_.__value_.__l.__data_);
  if (*(_BYTE *)(*(_QWORD *)(FieldByName + 120) + 78))
  {
    std::operator+<char>();
    v166 = std::string::append(&v215, "\"");
    v167 = *(_OWORD *)&v166->__r_.__value_.__l.__data_;
    v216.__r_.__value_.__r.__words[2] = v166->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v216.__r_.__value_.__l.__data_ = v167;
    v166->__r_.__value_.__l.__size_ = 0;
    v166->__r_.__value_.__r.__words[2] = 0;
    v166->__r_.__value_.__r.__words[0] = 0;
    google::protobuf::TextFormat::Parser::ParserImpl::ReportWarning((uint64_t *)this, *((unsigned int *)this + 18), *((unsigned int *)this + 19), (uint64_t)&v216);
    if (SHIBYTE(v216.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v216.__r_.__value_.__l.__data_);
    if (SHIBYTE(v215.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v215.__r_.__value_.__l.__data_);
  }
  v168 = (uint64_t **)*((_QWORD *)this + 2);
  if (v168)
  {
    v170 = v168 + 1;
    v169 = v168[1];
    if (v169)
    {
      while (1)
      {
        while (1)
        {
          v171 = (uint64_t **)v169;
          v172 = v169[4];
          if (v172 <= FieldByName)
            break;
          v169 = *v171;
          v170 = v171;
          if (!*v171)
            goto LABEL_338;
        }
        if (v172 >= FieldByName)
          break;
        v169 = v171[1];
        if (!v169)
        {
          v170 = v171 + 1;
          goto LABEL_338;
        }
      }
      v173 = (uint64_t *)v171;
    }
    else
    {
      v171 = v168 + 1;
LABEL_338:
      v173 = (uint64_t *)operator new(0x40uLL);
      v173[4] = FieldByName;
      v173[5] = 0;
      v173[6] = 0;
      v173[7] = 0;
      *v173 = 0;
      v173[1] = 0;
      v173[2] = (uint64_t)v171;
      *v170 = v173;
      v174 = (uint64_t *)**v168;
      v175 = v173;
      if (v174)
      {
        *v168 = v174;
        v175 = *v170;
      }
      std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(v168[1], v175);
      v168[2] = (uint64_t *)((char *)v168[2] + 1);
    }
    v177 = (_QWORD *)v173[6];
    v176 = v173[7];
    if ((unint64_t)v177 >= v176)
    {
      v179 = v173[5];
      v180 = ((uint64_t)v177 - v179) >> 3;
      if ((unint64_t)(v180 + 1) >> 61)
        std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
      v181 = v176 - v179;
      v182 = v181 >> 2;
      if (v181 >> 2 <= (unint64_t)(v180 + 1))
        v182 = v180 + 1;
      if ((unint64_t)v181 >= 0x7FFFFFFFFFFFFFF8)
        v183 = 0x1FFFFFFFFFFFFFFFLL;
      else
        v183 = v182;
      if (v183)
      {
        if (v183 >> 61)
          std::__throw_bad_array_new_length[abi:ne180100]();
        v184 = (char *)operator new(8 * v183);
      }
      else
      {
        v184 = 0;
      }
      v185 = &v184[8 * v180];
      v186 = &v184[8 * v183];
      *(_QWORD *)v185 = v165;
      v178 = v185 + 8;
      v188 = (char *)v173[5];
      v187 = (char *)v173[6];
      if (v187 != v188)
      {
        do
        {
          v189 = *((_QWORD *)v187 - 1);
          v187 -= 8;
          *((_QWORD *)v185 - 1) = v189;
          v185 -= 8;
        }
        while (v187 != v188);
        v187 = (char *)v173[5];
      }
      v173[5] = (uint64_t)v185;
      v173[6] = (uint64_t)v178;
      v173[7] = (uint64_t)v186;
      if (v187)
        operator delete(v187);
    }
    else
    {
      *v177 = v165;
      v178 = v177 + 1;
    }
    v173[6] = (uint64_t)v178;
  }
  v36 = 1;
LABEL_291:
  if (SHIBYTE(v211.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v211.__r_.__value_.__l.__data_);
  return v36;
}

void sub_188891308(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *a25,uint64_t a26,int a27,__int16 a28,char a29,char a30,void *a31,uint64_t a32,int a33,__int16 a34,char a35,char a36,uint64_t a37,uint64_t a38,void *a39,uint64_t a40,int a41,__int16 a42,char a43,char a44,void *a45,uint64_t a46,int a47,__int16 a48,char a49,char a50,uint64_t a51,void *__p,uint64_t a53,int a54,__int16 a55,char a56,char a57)
{
  uint64_t v57;
  uint64_t v58;

  if (a57 < 0)
    operator delete(__p);
  if (a50 < 0)
    operator delete(a45);
  if (*(char *)(v58 - 217) < 0)
    operator delete(*(void **)(v58 - 240));
  if (v57)
    (*(void (**)(uint64_t))(*(_QWORD *)v57 + 8))(v57);
  google::protobuf::DynamicMessageFactory::~DynamicMessageFactory((google::protobuf::DynamicMessageFactory *)(v58 - 208));
  if (a24 < 0)
    operator delete(a19);
  if (a30 < 0)
    operator delete(a25);
  if (a36 < 0)
    operator delete(a31);
  if (a44 < 0)
    operator delete(a39);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::TextFormat::Parser::ParserImpl::TryConsume(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  const void **v7;

  v2 = *(unsigned __int8 *)(a1 + 71);
  if ((v2 & 0x80u) == 0)
    v3 = *(unsigned __int8 *)(a1 + 71);
  else
    v3 = *(_QWORD *)(a1 + 56);
  v4 = a2[23];
  v5 = (char)v4;
  if ((v4 & 0x80u) != 0)
    v4 = *((_QWORD *)a2 + 1);
  if (v3 != v4)
    return 0;
  v7 = (const void **)(a1 + 48);
  if (v5 < 0)
    a2 = *(unsigned __int8 **)a2;
  if ((v2 & 0x80) != 0)
  {
    if (!memcmp(*v7, a2, *(_QWORD *)(a1 + 56)))
      goto LABEL_16;
    return 0;
  }
  if (*(_BYTE *)(a1 + 71))
  {
    while (*(unsigned __int8 *)v7 == *a2)
    {
      v7 = (const void **)((char *)v7 + 1);
      ++a2;
      if (!--v2)
        goto LABEL_16;
    }
    return 0;
  }
LABEL_16:
  google::protobuf::io::Tokenizer::Next((google::protobuf::io::Tokenizer *)(a1 + 40));
  return 1;
}

uint64_t google::protobuf::TextFormat::Parser::ParserImpl::Consume(uint64_t a1, unsigned __int8 *a2)
{
  const void **v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  unsigned __int8 *v8;
  std::string *v9;
  __int128 v10;
  int v11;
  const std::string::value_type *v12;
  std::string::size_type v13;
  std::string *v14;
  __int128 v15;
  std::string *v16;
  __int128 v17;
  std::string v19;
  std::string v20;
  std::string v21;
  __int128 v22;
  std::string::size_type v23;

  v3 = (const void **)(a1 + 48);
  v4 = *(unsigned __int8 *)(a1 + 71);
  if ((v4 & 0x80u) == 0)
    v5 = *(unsigned __int8 *)(a1 + 71);
  else
    v5 = *(_QWORD *)(a1 + 56);
  v6 = a2[23];
  v7 = (char)v6;
  if ((v6 & 0x80u) != 0)
    v6 = *((_QWORD *)a2 + 1);
  if (v5 == v6)
  {
    if (v7 < 0)
      a2 = *(unsigned __int8 **)a2;
    if ((v4 & 0x80) == 0)
    {
      if (*(_BYTE *)(a1 + 71))
      {
        v8 = (unsigned __int8 *)(a1 + 48);
        while (*v8 == *a2)
        {
          ++v8;
          ++a2;
          if (!--v4)
            goto LABEL_31;
        }
        goto LABEL_16;
      }
LABEL_31:
      google::protobuf::io::Tokenizer::Next((google::protobuf::io::Tokenizer *)(a1 + 40));
      return 1;
    }
    if (!memcmp(*v3, a2, *(_QWORD *)(a1 + 56)))
      goto LABEL_31;
  }
LABEL_16:
  std::operator+<char>();
  v9 = std::string::append(&v19, "\", found \"");
  v10 = *(_OWORD *)&v9->__r_.__value_.__l.__data_;
  v20.__r_.__value_.__r.__words[2] = v9->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v20.__r_.__value_.__l.__data_ = v10;
  v9->__r_.__value_.__l.__size_ = 0;
  v9->__r_.__value_.__r.__words[2] = 0;
  v9->__r_.__value_.__r.__words[0] = 0;
  v11 = *(char *)(a1 + 71);
  if (v11 >= 0)
    v12 = (const std::string::value_type *)v3;
  else
    v12 = *(const std::string::value_type **)(a1 + 48);
  if (v11 >= 0)
    v13 = *(unsigned __int8 *)(a1 + 71);
  else
    v13 = *(_QWORD *)(a1 + 56);
  v14 = std::string::append(&v20, v12, v13);
  v15 = *(_OWORD *)&v14->__r_.__value_.__l.__data_;
  v21.__r_.__value_.__r.__words[2] = v14->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v21.__r_.__value_.__l.__data_ = v15;
  v14->__r_.__value_.__l.__size_ = 0;
  v14->__r_.__value_.__r.__words[2] = 0;
  v14->__r_.__value_.__r.__words[0] = 0;
  v16 = std::string::append(&v21, "\".");
  v17 = *(_OWORD *)&v16->__r_.__value_.__l.__data_;
  v23 = v16->__r_.__value_.__r.__words[2];
  v22 = v17;
  v16->__r_.__value_.__l.__size_ = 0;
  v16->__r_.__value_.__r.__words[2] = 0;
  v16->__r_.__value_.__r.__words[0] = 0;
  google::protobuf::TextFormat::Parser::ParserImpl::ReportError((uint64_t *)a1, *(unsigned int *)(a1 + 72), *(unsigned int *)(a1 + 76), (uint64_t)&v22);
  if (SHIBYTE(v23) < 0)
    operator delete((void *)v22);
  if (SHIBYTE(v21.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v21.__r_.__value_.__l.__data_);
  if (SHIBYTE(v20.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v20.__r_.__value_.__l.__data_);
  if (SHIBYTE(v19.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v19.__r_.__value_.__l.__data_);
  return 0;
}

void sub_18889193C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,void *__p,uint64_t a24,int a25,__int16 a26,char a27,char a28)
{
  uint64_t v28;

  if (*(char *)(v28 - 41) < 0)
    operator delete(*(void **)(v28 - 64));
  if (a28 < 0)
    operator delete(__p);
  if (a21 < 0)
    operator delete(a16);
  if (a15 < 0)
    operator delete(a10);
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::TextFormat::Parser::ParserImpl::ConsumeFullTypeName(uint64_t a1, std::string *a2)
{
  uint64_t result;
  int v5;
  char v6;
  std::string *p_p;
  std::string::size_type size;
  std::string __p;

  result = google::protobuf::TextFormat::Parser::ParserImpl::ConsumeIdentifier(a1, a2);
  if ((_DWORD)result)
  {
    while (1)
    {
      std::string::basic_string[abi:ne180100]<0>(&__p, ".");
      v5 = google::protobuf::TextFormat::Parser::ParserImpl::TryConsume(a1, (unsigned __int8 *)&__p);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__p.__r_.__value_.__l.__data_);
      if (!v5)
        break;
      memset(&__p, 0, sizeof(__p));
      v6 = google::protobuf::TextFormat::Parser::ParserImpl::ConsumeIdentifier(a1, &__p);
      if ((v6 & 1) != 0)
      {
        std::string::append(a2, ".");
        if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          p_p = &__p;
        else
          p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
        if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
        else
          size = __p.__r_.__value_.__l.__size_;
        std::string::append(a2, (const std::string::value_type *)p_p, size);
      }
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      {
        operator delete(__p.__r_.__value_.__l.__data_);
        if ((v6 & 1) == 0)
          return v5 ^ 1u;
      }
      else if ((v6 & 1) == 0)
      {
        return v5 ^ 1u;
      }
    }
    return v5 ^ 1u;
  }
  return result;
}

void sub_188891A84(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::TextFormat::Parser::ParserImpl::ConsumeIdentifier(uint64_t a1, std::string *this)
{
  int v3;
  google::protobuf::io::Tokenizer *v4;
  void *__p;
  char v8;

  v4 = (google::protobuf::io::Tokenizer *)(a1 + 40);
  v3 = *(_DWORD *)(a1 + 40);
  if (v3 == 2)
    goto LABEL_5;
  if (*(_BYTE *)(a1 + 232) || *(_BYTE *)(a1 + 229))
  {
    if (v3 == 3)
    {
LABEL_5:
      std::string::operator=(this, (const std::string *)(a1 + 48));
      google::protobuf::io::Tokenizer::Next(v4);
      return 1;
    }
  }
  else if (v3 == 3 && *(_BYTE *)(a1 + 230) != 0)
  {
    goto LABEL_5;
  }
  std::operator+<char>();
  google::protobuf::TextFormat::Parser::ParserImpl::ReportError((uint64_t *)a1, *(unsigned int *)(a1 + 72), *(unsigned int *)(a1 + 76), (uint64_t)&__p);
  if (v8 < 0)
    operator delete(__p);
  return 0;
}

void sub_188891B58(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::TextFormat::Parser::ParserImpl::SkipFieldValue(google::protobuf::TextFormat::Parser::ParserImpl *this, uint64_t a2, char *a3)
{
  int v4;
  _DWORD *v5;
  unint64_t v6;
  char *v7;
  int v8;
  int v9;
  uint64_t v10;
  char *v11;
  int v12;
  int v13;
  uint64_t result;
  char v15;
  char v16;
  void *v17;
  int v18;
  int v19;
  std::string *v20;
  std::string *v21;
  int v22;
  std::string *v23;
  int data_low;
  int v25;
  std::string v27;
  _QWORD v28[6];
  void *__p[2];
  char v30;
  _BYTE v31[7];
  std::string v32;
  uint64_t v33;

  v33 = *MEMORY[0x1E0C80C00];
  v4 = *((_DWORD *)this + 60);
  *((_DWORD *)this + 60) = v4 - 1;
  if (v4 <= 0)
  {
    v32.__r_.__value_.__r.__words[0] = (std::string::size_type)"Message is too deep, the parser exceeded the configured r"
                                                               "ecursion limit of ";
    v32.__r_.__value_.__l.__size_ = 75;
    v6 = *((unsigned int *)this + 59);
    __p[0] = &v30;
    if ((v6 & 0x80000000) != 0)
    {
      v7 = v31;
      v30 = 45;
      v6 = -(int)v6;
    }
    else
    {
      v7 = &v30;
    }
    __p[1] = (void *)(google::protobuf::FastUInt32ToBufferLeft((google::protobuf *)v6, v7, a3) - &v30);
    v28[0] = ".";
    v28[1] = 1;
    google::protobuf::StrCat((uint64_t)&v32, (uint64_t)__p, (uint64_t)v28, &v27);
    google::protobuf::TextFormat::Parser::ParserImpl::ReportError((uint64_t *)this, *((unsigned int *)this + 18), *((unsigned int *)this + 19), (uint64_t)&v27);
    if ((SHIBYTE(v27.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      return 0;
    v17 = (void *)v27.__r_.__value_.__r.__words[0];
LABEL_30:
    operator delete(v17);
    return 0;
  }
  v5 = (_DWORD *)((char *)this + 40);
  if (*((_DWORD *)this + 10) == 5)
  {
    do
      google::protobuf::io::Tokenizer::Next((google::protobuf::TextFormat::Parser::ParserImpl *)((char *)this + 40));
    while (*v5 == 5);
    goto LABEL_37;
  }
  std::string::basic_string[abi:ne180100]<0>(&v32, "[");
  v8 = google::protobuf::TextFormat::Parser::ParserImpl::TryConsume((uint64_t)this, (unsigned __int8 *)&v32);
  v9 = v8;
  if (SHIBYTE(v32.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v32.__r_.__value_.__l.__data_);
    if (!v9)
      goto LABEL_33;
    while (1)
    {
LABEL_9:
      std::string::basic_string[abi:ne180100]<0>(&v32, "{");
      if ((AddrObjGoogle::protobuf::TextFormat::Parser::ParserImpl::LookingAt((uint64_t)this, (unsigned __int8 *)&v32) & 1) != 0)
      {
        v12 = 0;
      }
      else
      {
        std::string::basic_string[abi:ne180100]<0>(__p, "<");
        v13 = AddrObjGoogle::protobuf::TextFormat::Parser::ParserImpl::LookingAt((uint64_t)this, (unsigned __int8 *)__p);
        if ((v31[6] & 0x80000000) != 0)
          operator delete(__p[0]);
        v12 = v13 ^ 1;
      }
      if (SHIBYTE(v32.__r_.__value_.__r.__words[2]) < 0)
      {
        operator delete(v32.__r_.__value_.__l.__data_);
        if (v12)
        {
LABEL_16:
          if ((google::protobuf::TextFormat::Parser::ParserImpl::SkipFieldValue(this) & 1) == 0)
            return 0;
          goto LABEL_20;
        }
      }
      else if (v12)
      {
        goto LABEL_16;
      }
      result = google::protobuf::TextFormat::Parser::ParserImpl::SkipFieldMessage(this, v10, v11);
      if (!(_DWORD)result)
        return result;
LABEL_20:
      std::string::basic_string[abi:ne180100]<0>(&v32, "]");
      v15 = google::protobuf::TextFormat::Parser::ParserImpl::TryConsume((uint64_t)this, (unsigned __int8 *)&v32);
      if (SHIBYTE(v32.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v32.__r_.__value_.__l.__data_);
      if ((v15 & 1) != 0)
        goto LABEL_37;
      std::string::basic_string[abi:ne180100]<0>(&v32, ",");
      v16 = google::protobuf::TextFormat::Parser::ParserImpl::Consume((uint64_t)this, (unsigned __int8 *)&v32);
      if (SHIBYTE(v32.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v32.__r_.__value_.__l.__data_);
      if ((v16 & 1) == 0)
        return 0;
    }
  }
  if (v8)
    goto LABEL_9;
LABEL_33:
  std::string::basic_string[abi:ne180100]<0>(&v32, "-");
  v18 = google::protobuf::TextFormat::Parser::ParserImpl::TryConsume((uint64_t)this, (unsigned __int8 *)&v32);
  if (SHIBYTE(v32.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v32.__r_.__value_.__l.__data_);
  if ((*v5 - 3) < 2)
    goto LABEL_36;
  if (*v5 != 2)
  {
    if (*((char *)this + 71) < 0)
      std::string::__init_copy_ctor_external(&v32, *((const std::string::value_type **)this + 6), *((_QWORD *)this + 7));
    else
      v32 = *(std::string *)((_BYTE *)this + 2);
LABEL_46:
    std::operator+<char>();
    google::protobuf::TextFormat::Parser::ParserImpl::ReportError((uint64_t *)this, *((unsigned int *)this + 18), *((unsigned int *)this + 19), (uint64_t)__p);
    if ((v31[6] & 0x80000000) != 0)
      operator delete(__p[0]);
    ++*((_DWORD *)this + 60);
    if ((SHIBYTE(v32.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      return 0;
    v17 = (void *)v32.__r_.__value_.__r.__words[0];
    goto LABEL_30;
  }
  if (v18)
  {
    if (*((char *)this + 71) < 0)
      std::string::__init_copy_ctor_external(&v32, *((const std::string::value_type **)this + 6), *((_QWORD *)this + 7));
    else
      v32 = *(std::string *)((_BYTE *)this + 2);
    v19 = HIBYTE(v32.__r_.__value_.__r.__words[2]);
    v20 = (std::string *)v32.__r_.__value_.__r.__words[0];
    if ((v32.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v21 = (std::string *)((char *)&v32 + HIBYTE(v32.__r_.__value_.__r.__words[2]));
    else
      v21 = (std::string *)(v32.__r_.__value_.__r.__words[0] + v32.__r_.__value_.__l.__size_);
    if ((v32.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v20 = &v32;
    if (v20 != v21)
    {
      do
      {
        v22 = v20->__r_.__value_.__s.__data_[0];
        if ((v22 - 65) <= 0x19)
          v20->__r_.__value_.__s.__data_[0] = v22 + 32;
        v20 = (std::string *)((char *)v20 + 1);
      }
      while (v20 != v21);
      v19 = HIBYTE(v32.__r_.__value_.__r.__words[2]);
    }
    if ((v19 & 0x80) != 0)
    {
      if (v32.__r_.__value_.__l.__size_ == 3)
      {
        v23 = (std::string *)v32.__r_.__value_.__r.__words[0];
LABEL_66:
        data_low = LOWORD(v23->__r_.__value_.__l.__data_);
        v25 = v23->__r_.__value_.__s.__data_[2];
        if (data_low == 28265 && v25 == 102)
        {
LABEL_72:
          if (SHIBYTE(v32.__r_.__value_.__r.__words[2]) < 0)
            operator delete(v32.__r_.__value_.__l.__data_);
          goto LABEL_36;
        }
      }
    }
    else if (v19 == 3)
    {
      v23 = &v32;
      goto LABEL_66;
    }
    if (!std::operator!=[abi:ne180100]<char,std::char_traits<char>,std::allocator<char>>(&v32, "infinity")
      || !std::operator!=[abi:ne180100]<char,std::char_traits<char>,std::allocator<char>>(&v32, "nan"))
    {
      goto LABEL_72;
    }
    goto LABEL_46;
  }
LABEL_36:
  google::protobuf::io::Tokenizer::Next((google::protobuf::TextFormat::Parser::ParserImpl *)((char *)this + 40));
LABEL_37:
  ++*((_DWORD *)this + 60);
  return 1;
}

void sub_188891FEC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *__p,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  uint64_t v27;

  if (a27 < 0)
    operator delete(__p);
  if (*(char *)(v27 - 89) < 0)
    operator delete(*(void **)(v27 - 112));
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::TextFormat::Parser::ParserImpl::SkipFieldMessage(google::protobuf::TextFormat::Parser::ParserImpl *this, uint64_t a2, char *a3)
{
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  char v10;
  int v11;
  char v12;
  int v13;
  int v14;
  unint64_t v15;
  char *v16;
  uint64_t v17;
  std::string v19;
  void *v20[2];
  char v21;
  void *__p[2];
  char v23;
  _BYTE v24[7];
  std::string v25;
  uint64_t v26;

  v26 = *MEMORY[0x1E0C80C00];
  v4 = *((_DWORD *)this + 60);
  *((_DWORD *)this + 60) = v4 - 1;
  if (v4 <= 0)
  {
    v25.__r_.__value_.__r.__words[0] = (std::string::size_type)"Message is too deep, the parser exceeded the configured r"
                                                               "ecursion limit of ";
    v25.__r_.__value_.__l.__size_ = 75;
    v15 = *((unsigned int *)this + 59);
    __p[0] = &v23;
    if ((v15 & 0x80000000) != 0)
    {
      v16 = v24;
      v23 = 45;
      v15 = -(int)v15;
    }
    else
    {
      v16 = &v23;
    }
    __p[1] = (void *)(google::protobuf::FastUInt32ToBufferLeft((google::protobuf *)v15, v16, a3) - &v23);
    v20[0] = ".";
    v20[1] = (void *)1;
    google::protobuf::StrCat((uint64_t)&v25, (uint64_t)__p, (uint64_t)v20, &v19);
    google::protobuf::TextFormat::Parser::ParserImpl::ReportError((uint64_t *)this, *((unsigned int *)this + 18), *((unsigned int *)this + 19), (uint64_t)&v19);
    if (SHIBYTE(v19.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v19.__r_.__value_.__l.__data_);
    return 0;
  }
  memset(&v19, 0, sizeof(v19));
  if (!google::protobuf::TextFormat::Parser::ParserImpl::ConsumeMessageDelimiter((uint64_t)this, (uint64_t)&v19))goto LABEL_63;
  while (1)
  {
    std::string::basic_string[abi:ne180100]<0>(&v25, ">");
    if ((AddrObjGoogle::protobuf::TextFormat::Parser::ParserImpl::LookingAt((uint64_t)this, (unsigned __int8 *)&v25) & 1) != 0)
    {
      v5 = 0;
    }
    else
    {
      std::string::basic_string[abi:ne180100]<0>(__p, "}");
      v6 = AddrObjGoogle::protobuf::TextFormat::Parser::ParserImpl::LookingAt((uint64_t)this, (unsigned __int8 *)__p);
      if ((v24[6] & 0x80000000) != 0)
        operator delete(__p[0]);
      v5 = v6 ^ 1;
    }
    if (SHIBYTE(v25.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v25.__r_.__value_.__l.__data_);
    if (!v5)
      break;
    std::string::basic_string[abi:ne180100]<0>(&v25, "[");
    v7 = google::protobuf::TextFormat::Parser::ParserImpl::TryConsume((uint64_t)this, (unsigned __int8 *)&v25);
    v8 = v7;
    if (SHIBYTE(v25.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(v25.__r_.__value_.__l.__data_);
      if (v8)
      {
LABEL_13:
        memset(&v25, 0, sizeof(v25));
        if (google::protobuf::TextFormat::Parser::ParserImpl::ConsumeIdentifier((uint64_t)this, &v25))
        {
          do
          {
            std::string::basic_string[abi:ne180100]<0>(__p, ".");
            if ((google::protobuf::TextFormat::Parser::ParserImpl::TryConsume((uint64_t)this, (unsigned __int8 *)__p) & 1) != 0)
            {
              v9 = 1;
            }
            else
            {
              std::string::basic_string[abi:ne180100]<0>(v20, "/");
              v9 = google::protobuf::TextFormat::Parser::ParserImpl::TryConsume((uint64_t)this, (unsigned __int8 *)v20);
              if (v21 < 0)
                operator delete(v20[0]);
            }
            if ((v24[6] & 0x80000000) != 0)
              operator delete(__p[0]);
          }
          while (v9
               && (google::protobuf::TextFormat::Parser::ParserImpl::ConsumeIdentifier((uint64_t)this, &v25) & 1) != 0);
          v10 = v9 ^ 1;
        }
        else
        {
          v10 = 0;
        }
        if (SHIBYTE(v25.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v25.__r_.__value_.__l.__data_);
        if ((v10 & 1) == 0)
          goto LABEL_63;
        std::string::basic_string[abi:ne180100]<0>(&v25, "]");
        v12 = google::protobuf::TextFormat::Parser::ParserImpl::Consume((uint64_t)this, (unsigned __int8 *)&v25);
        if (SHIBYTE(v25.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v25.__r_.__value_.__l.__data_);
        if ((v12 & 1) == 0)
          goto LABEL_63;
        goto LABEL_35;
      }
    }
    else if (v7)
    {
      goto LABEL_13;
    }
    memset(&v25, 0, sizeof(v25));
    v11 = google::protobuf::TextFormat::Parser::ParserImpl::ConsumeIdentifier((uint64_t)this, &v25);
    if (SHIBYTE(v25.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v25.__r_.__value_.__l.__data_);
    if (!v11)
      goto LABEL_63;
LABEL_35:
    std::string::basic_string[abi:ne180100]<0>(&v25, ":");
    if (google::protobuf::TextFormat::Parser::ParserImpl::TryConsume((uint64_t)this, (unsigned __int8 *)&v25))
    {
      std::string::basic_string[abi:ne180100]<0>(__p, "{");
      if ((AddrObjGoogle::protobuf::TextFormat::Parser::ParserImpl::LookingAt((uint64_t)this, (unsigned __int8 *)__p) & 1) != 0)
      {
        v13 = 0;
      }
      else
      {
        std::string::basic_string[abi:ne180100]<0>(v20, "<");
        v14 = AddrObjGoogle::protobuf::TextFormat::Parser::ParserImpl::LookingAt((uint64_t)this, (unsigned __int8 *)v20);
        if (v21 < 0)
          operator delete(v20[0]);
        v13 = v14 ^ 1;
      }
      if ((v24[6] & 0x80000000) != 0)
        operator delete(__p[0]);
    }
    else
    {
      v13 = 0;
    }
    if (SHIBYTE(v25.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(v25.__r_.__value_.__l.__data_);
      if (v13)
      {
LABEL_46:
        if ((google::protobuf::TextFormat::Parser::ParserImpl::SkipFieldValue(this) & 1) == 0)
          goto LABEL_63;
        goto LABEL_50;
      }
    }
    else if (v13)
    {
      goto LABEL_46;
    }
    if (!google::protobuf::TextFormat::Parser::ParserImpl::SkipFieldMessage(this))
      goto LABEL_63;
LABEL_50:
    std::string::basic_string[abi:ne180100]<0>(&v25, ";");
    if ((google::protobuf::TextFormat::Parser::ParserImpl::TryConsume((uint64_t)this, (unsigned __int8 *)&v25) & 1) == 0)
    {
      std::string::basic_string[abi:ne180100]<0>(__p, ",");
      google::protobuf::TextFormat::Parser::ParserImpl::TryConsume((uint64_t)this, (unsigned __int8 *)__p);
      if ((v24[6] & 0x80000000) != 0)
        operator delete(__p[0]);
    }
    if (SHIBYTE(v25.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v25.__r_.__value_.__l.__data_);
  }
  if (!google::protobuf::TextFormat::Parser::ParserImpl::Consume((uint64_t)this, (unsigned __int8 *)&v19))
  {
LABEL_63:
    v17 = 0;
    goto LABEL_64;
  }
  ++*((_DWORD *)this + 60);
  v17 = 1;
LABEL_64:
  if (SHIBYTE(v19.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v19.__r_.__value_.__l.__data_);
  return v17;
}

void sub_1888924CC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,void *a25,uint64_t a26,int a27,__int16 a28,char a29,char a30,uint64_t a31,uint64_t a32,uint64_t a33,void *a34,uint64_t a35,int a36,__int16 a37,char a38,char a39)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

BOOL google::protobuf::TextFormat::Parser::ParserImpl::ConsumeString(uint64_t a1, std::string *this, uint64_t a3, unsigned int *a4)
{
  google::protobuf::io::Tokenizer *v5;
  int v6;
  unsigned __int8 *v8;
  void *__p;
  char v11;

  v5 = (google::protobuf::io::Tokenizer *)(a1 + 40);
  v6 = *(_DWORD *)(a1 + 40);
  if (v6 == 5)
  {
    if (SHIBYTE(this->__r_.__value_.__r.__words[2]) < 0)
    {
      *this->__r_.__value_.__l.__data_ = 0;
      this->__r_.__value_.__l.__size_ = 0;
    }
    else
    {
      this->__r_.__value_.__s.__data_[0] = 0;
      *((_BYTE *)&this->__r_.__value_.__s + 23) = 0;
    }
    if (*(_DWORD *)v5 == 5)
    {
      v8 = (unsigned __int8 *)(a1 + 48);
      do
      {
        google::protobuf::io::Tokenizer::ParseStringAppend(v8, this, a3, a4);
        google::protobuf::io::Tokenizer::Next(v5);
      }
      while (*(_DWORD *)v5 == 5);
    }
  }
  else
  {
    std::operator+<char>();
    google::protobuf::TextFormat::Parser::ParserImpl::ReportError((uint64_t *)a1, *(unsigned int *)(a1 + 72), *(unsigned int *)(a1 + 76), (uint64_t)&__p);
    if (v11 < 0)
      operator delete(__p);
  }
  return v6 == 5;
}

void sub_188892648(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::TextFormat::Parser::ParserImpl::ConsumeFieldMessage(google::protobuf::TextFormat::Parser::ParserImpl *this, google::protobuf::Message *a2, google::protobuf::_anonymous_namespace_ **a3, unint64_t **a4)
{
  int v5;
  uint64_t v9;
  uint64_t *v10;
  uint64_t **v11;
  uint64_t **v12;
  unint64_t v13;
  unint64_t v14;
  char *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  unint64_t v22;
  uint64_t *v23;
  uint64_t *v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t *v31;
  char *v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t *v35;
  const char *v36;
  uint64_t v37;
  google::protobuf::MessageFactory *v38;
  google::protobuf::Message *v39;
  google::protobuf::Message *v40;
  char v41;
  void *v42;
  std::string v44;
  std::string v45;
  std::string __p;
  _QWORD v47[6];
  _QWORD v48[2];
  char v49;
  _BYTE v50[7];
  std::string v51[2];
  uint64_t v52;

  v52 = *MEMORY[0x1E0C80C00];
  v5 = *((_DWORD *)this + 60);
  *((_DWORD *)this + 60) = v5 - 1;
  if (v5 > 0)
  {
    v9 = *((_QWORD *)this + 2);
    if (v9)
    {
      v11 = (uint64_t **)(v9 + 32);
      v10 = *(uint64_t **)(v9 + 32);
      if (v10)
      {
        while (1)
        {
          while (1)
          {
            v12 = (uint64_t **)v10;
            v13 = v10[4];
            if (v13 <= (unint64_t)a4)
              break;
            v10 = *v12;
            v11 = v12;
            if (!*v12)
              goto LABEL_13;
          }
          if (v13 >= (unint64_t)a4)
            break;
          v10 = v12[1];
          if (!v10)
          {
            v11 = v12 + 1;
            goto LABEL_13;
          }
        }
      }
      else
      {
        v12 = (uint64_t **)(v9 + 32);
LABEL_13:
        v16 = (uint64_t *)v12;
        v12 = (uint64_t **)operator new(0x40uLL);
        v12[4] = (uint64_t *)a4;
        v12[5] = 0;
        v12[6] = 0;
        v12[7] = 0;
        *v12 = 0;
        v12[1] = 0;
        v12[2] = v16;
        *v11 = (uint64_t *)v12;
        v17 = **(_QWORD **)(v9 + 24);
        v18 = (uint64_t *)v12;
        if (v17)
        {
          *(_QWORD *)(v9 + 24) = v17;
          v18 = *v11;
        }
        std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(*(uint64_t **)(v9 + 32), v18);
        ++*(_QWORD *)(v9 + 40);
      }
      v19 = operator new();
      v20 = v19;
      *(_OWORD *)v19 = 0u;
      *(_OWORD *)(v19 + 16) = 0u;
      *(_QWORD *)v19 = v19 + 8;
      *(_QWORD *)(v19 + 40) = 0;
      *(_QWORD *)(v19 + 32) = 0;
      *(_QWORD *)(v19 + 24) = v19 + 32;
      v21 = v12[6];
      v22 = (unint64_t)v12[7];
      if ((unint64_t)v21 >= v22)
      {
        v24 = v12[5];
        v25 = v21 - v24;
        v26 = v25 + 1;
        if ((unint64_t)(v25 + 1) >> 61)
          std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
        v27 = v22 - (_QWORD)v24;
        if (v27 >> 2 > v26)
          v26 = v27 >> 2;
        if ((unint64_t)v27 >= 0x7FFFFFFFFFFFFFF8)
          v28 = 0x1FFFFFFFFFFFFFFFLL;
        else
          v28 = v26;
        if (v28)
        {
          if (v28 >> 61)
            std::__throw_bad_array_new_length[abi:ne180100]();
          v29 = (char *)operator new(8 * v28);
          v24 = v12[5];
          v21 = v12[6];
        }
        else
        {
          v29 = 0;
        }
        v31 = (uint64_t *)&v29[8 * v25];
        v32 = &v29[8 * v28];
        *v31 = v20;
        v23 = v31 + 1;
        while (v21 != v24)
        {
          v33 = *--v21;
          *v21 = 0;
          *--v31 = v33;
        }
        v34 = v12[5];
        v35 = v12[6];
        v12[5] = v31;
        v12[6] = v23;
        v12[7] = (uint64_t *)v32;
        while (v35 != v34)
          std::unique_ptr<google::protobuf::TextFormat::ParseInfoTree>::reset[abi:ne180100](--v35);
        if (v34)
          operator delete(v34);
      }
      else
      {
        *v21 = v19;
        v23 = v21 + 1;
      }
      v12[6] = v23;
      *((_QWORD *)this + 2) = *(v23 - 1);
    }
    memset(v51, 0, 24);
    if ((google::protobuf::TextFormat::Parser::ParserImpl::ConsumeMessageDelimiter((uint64_t)this, (uint64_t)v51) & 1) == 0)
      goto LABEL_59;
    v37 = *((_QWORD *)this + 1);
    if (v37)
      v38 = (google::protobuf::MessageFactory *)(*(uint64_t (**)(uint64_t, unint64_t **))(*(_QWORD *)v37 + 40))(v37, a4);
    else
      v38 = 0;
    if (*((_DWORD *)a4 + 15) == 3)
    {
      v39 = (google::protobuf::Message *)google::protobuf::Reflection::AddMessage(a3, a2, a4, v38, v36);
      if (SHIBYTE(v51[0].__r_.__value_.__r.__words[2]) < 0)
        std::string::__init_copy_ctor_external(&v45, v51[0].__r_.__value_.__l.__data_, v51[0].__r_.__value_.__l.__size_);
      else
        v45 = v51[0];
      v41 = google::protobuf::TextFormat::Parser::ParserImpl::ConsumeMessage(this, v39, (unsigned __int8 *)&v45);
      if (SHIBYTE(v45.__r_.__value_.__r.__words[2]) < 0)
      {
        v42 = (void *)v45.__r_.__value_.__r.__words[0];
        goto LABEL_58;
      }
    }
    else
    {
      v40 = (google::protobuf::Message *)google::protobuf::Reflection::MutableMessage(a3, a2, (const google::protobuf::FieldDescriptor *)a4, v38, v36);
      if (SHIBYTE(v51[0].__r_.__value_.__r.__words[2]) < 0)
        std::string::__init_copy_ctor_external(&v44, v51[0].__r_.__value_.__l.__data_, v51[0].__r_.__value_.__l.__size_);
      else
        v44 = v51[0];
      v41 = google::protobuf::TextFormat::Parser::ParserImpl::ConsumeMessage(this, v40, (unsigned __int8 *)&v44);
      if (SHIBYTE(v44.__r_.__value_.__r.__words[2]) < 0)
      {
        v42 = (void *)v44.__r_.__value_.__r.__words[0];
LABEL_58:
        operator delete(v42);
        if ((v41 & 1) == 0)
          goto LABEL_59;
        goto LABEL_56;
      }
    }
    if ((v41 & 1) == 0)
    {
LABEL_59:
      v30 = 0;
LABEL_60:
      if (SHIBYTE(v51[0].__r_.__value_.__r.__words[2]) < 0)
        operator delete(v51[0].__r_.__value_.__l.__data_);
      return v30;
    }
LABEL_56:
    ++*((_DWORD *)this + 60);
    *((_QWORD *)this + 2) = v9;
    v30 = 1;
    goto LABEL_60;
  }
  v51[0].__r_.__value_.__r.__words[0] = (std::string::size_type)"Message is too deep, the parser exceeded the configured "
                                                                "recursion limit of ";
  v51[0].__r_.__value_.__l.__size_ = 75;
  v14 = *((unsigned int *)this + 59);
  v48[0] = &v49;
  if ((v14 & 0x80000000) != 0)
  {
    v15 = v50;
    v49 = 45;
    v14 = -(int)v14;
  }
  else
  {
    v15 = &v49;
  }
  v48[1] = google::protobuf::FastUInt32ToBufferLeft((google::protobuf *)v14, v15, (char *)a3) - &v49;
  v47[0] = ".";
  v47[1] = 1;
  google::protobuf::StrCat((uint64_t)v51, (uint64_t)v48, (uint64_t)v47, &__p);
  google::protobuf::TextFormat::Parser::ParserImpl::ReportError((uint64_t *)this, *((unsigned int *)this + 18), *((unsigned int *)this + 19), (uint64_t)&__p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  return 0;
}

void sub_188892A80(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,int a25,__int16 a26,char a27,char a28)
{
  uint64_t v28;

  if (a14 < 0)
    operator delete(__p);
  if (*(char *)(v28 - 113) < 0)
    operator delete(*(void **)(v28 - 136));
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::TextFormat::Parser::ParserImpl::ConsumeFieldValue(google::protobuf::TextFormat::Parser::ParserImpl *this, google::protobuf::Message *a2, google::protobuf::_anonymous_namespace_ **a3, const google::protobuf::FieldDescriptor *a4)
{
  const std::string::value_type ***v4;
  unint64_t *v8;
  unint64_t v9;
  const char *v10;
  uint64_t v11;
  const char *v12;
  const char *v13;
  const char *v14;
  const char *v15;
  uint64_t v16;
  const char *v17;
  uint64_t ValueByName;
  uint64_t v19;
  const char *v20;
  int v21;
  const char *v22;
  const char *v23;
  BOOL v24;
  const char *v25;
  std::string *v26;
  int v27;
  char *v28;
  uint64_t v29;
  std::string::value_type *v30;
  uint64_t v31;
  _QWORD *v32;
  const char *v33;
  char v34;
  float v35;
  void *v36;
  std::string *v37;
  int v38;
  char v39;
  char v40;
  std::string *v41;
  __int128 v42;
  int v43;
  const std::string::value_type *v44;
  std::string::size_type v45;
  std::string *v46;
  __int128 v47;
  std::string *v48;
  __int128 v49;
  std::string *v50;
  __int128 v51;
  int v52;
  const std::string::value_type *v53;
  std::string::size_type v54;
  std::string *v55;
  __int128 v56;
  std::string *v57;
  __int128 v58;
  std::string *v59;
  __int128 v60;
  std::string *v61;
  std::string::size_type size;
  std::string *v63;
  __int128 v64;
  std::string *v65;
  __int128 v66;
  uint64_t v68;
  std::string v69;
  std::string v70;
  std::string __dst;
  std::string __p;
  std::string v73;
  std::string v74;
  std::string v75;
  std::string v76;
  uint64_t v77;

  v4 = (const std::string::value_type ***)a4;
  v77 = *MEMORY[0x1E0C80C00];
  v8 = (unint64_t *)*((_QWORD *)a4 + 6);
  if (v8)
  {
    __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FieldDescriptor::TypeOnceInit;
    v70.__r_.__value_.__r.__words[0] = (std::string::size_type)a4;
    v9 = atomic_load(v8);
    if (v9 != -1)
    {
      v75.__r_.__value_.__r.__words[0] = (std::string::size_type)&__dst;
      v75.__r_.__value_.__l.__size_ = (std::string::size_type)&v70;
      __p.__r_.__value_.__r.__words[0] = (std::string::size_type)&v75;
      std::__call_once(v8, &__p, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  switch(*((_DWORD *)v4 + 14))
  {
    case 1:
      v75.__r_.__value_.__r.__words[0] = 0;
      if (!google::protobuf::TextFormat::Parser::ParserImpl::ConsumeDouble(this, (double *)&v75))
        goto LABEL_165;
      if (*((_DWORD *)v4 + 15) == 3)
        google::protobuf::Reflection::AddDouble(a3, a2, (const google::protobuf::FieldDescriptor *)v4, *(double *)&v75.__r_.__value_.__l.__data_, v11, v12);
      else
        google::protobuf::Reflection::SetDouble(a3, a2, (const google::protobuf::FieldDescriptor *)v4, *(double *)&v75.__r_.__value_.__l.__data_, v11, v12);
      goto LABEL_164;
    case 2:
      v75.__r_.__value_.__r.__words[0] = 0;
      if (!google::protobuf::TextFormat::Parser::ParserImpl::ConsumeDouble(this, (double *)&v75))
        goto LABEL_165;
      if (*(double *)&v75.__r_.__value_.__l.__data_ <= 3.40282347e38)
      {
        if (*(double *)&v75.__r_.__value_.__l.__data_ >= -3.40282347e38)
        {
          v35 = *(double *)&v75.__r_.__value_.__l.__data_;
          goto LABEL_116;
        }
        if (*(double *)&v75.__r_.__value_.__l.__data_ >= -3.40282357e38)
          v21 = -8388609;
        else
          v21 = -8388608;
      }
      else if (*(double *)&v75.__r_.__value_.__l.__data_ <= 3.40282357e38)
      {
        v21 = 2139095039;
      }
      else
      {
        v21 = 2139095040;
      }
      v35 = *(float *)&v21;
LABEL_116:
      if (*((_DWORD *)v4 + 15) == 3)
        google::protobuf::Reflection::AddFloat(a3, a2, (const google::protobuf::FieldDescriptor *)v4, v35, v19, v20);
      else
        google::protobuf::Reflection::SetFloat(a3, a2, (const google::protobuf::FieldDescriptor *)v4, v35, v19, v20);
      goto LABEL_164;
    case 3:
    case 0x10:
    case 0x12:
      v75.__r_.__value_.__r.__words[0] = 0;
      if (!google::protobuf::TextFormat::Parser::ParserImpl::ConsumeSignedInteger(this, (uint64_t *)&v75, 0x7FFFFFFFFFFFFFFFLL))goto LABEL_165;
      if (*((_DWORD *)v4 + 15) == 3)
        google::protobuf::Reflection::AddInt64(a3, a2, (const google::protobuf::FieldDescriptor *)v4, (uint64_t)v75.__r_.__value_.__l.__data_, v14);
      else
        google::protobuf::Reflection::SetInt64(a3, a2, (const google::protobuf::FieldDescriptor *)v4, (uint64_t)v75.__r_.__value_.__l.__data_, v14);
      goto LABEL_164;
    case 4:
    case 6:
      v75.__r_.__value_.__r.__words[0] = 0;
      if (!google::protobuf::TextFormat::Parser::ParserImpl::ConsumeUnsignedInteger(this, (unint64_t *)&v75, 0xFFFFFFFFFFFFFFFFLL))goto LABEL_165;
      if (*((_DWORD *)v4 + 15) == 3)
        google::protobuf::Reflection::AddUInt64(a3, a2, (const google::protobuf::FieldDescriptor *)v4, (uint64_t)v75.__r_.__value_.__l.__data_, v15);
      else
        google::protobuf::Reflection::SetUInt64(a3, a2, (const google::protobuf::FieldDescriptor *)v4, (uint64_t)v75.__r_.__value_.__l.__data_, v15);
      goto LABEL_164;
    case 5:
    case 0xF:
    case 0x11:
      v75.__r_.__value_.__r.__words[0] = 0;
      if (!google::protobuf::TextFormat::Parser::ParserImpl::ConsumeSignedInteger(this, (uint64_t *)&v75, 0x7FFFFFFFLL))goto LABEL_165;
      if (*((_DWORD *)v4 + 15) == 3)
        google::protobuf::Reflection::AddInt32(a3, a2, (const google::protobuf::FieldDescriptor *)v4, (int)v75.__r_.__value_.__l.__data_, v10);
      else
        google::protobuf::Reflection::SetInt32(a3, a2, (const google::protobuf::FieldDescriptor *)v4, (int)v75.__r_.__value_.__l.__data_, v10);
      goto LABEL_164;
    case 7:
    case 0xD:
      v75.__r_.__value_.__r.__words[0] = 0;
      if (!google::protobuf::TextFormat::Parser::ParserImpl::ConsumeUnsignedInteger(this, (unint64_t *)&v75, 0xFFFFFFFFuLL))goto LABEL_165;
      if (*((_DWORD *)v4 + 15) == 3)
        google::protobuf::Reflection::AddUInt32(a3, a2, (const google::protobuf::FieldDescriptor *)v4, (int)v75.__r_.__value_.__l.__data_, v13);
      else
        google::protobuf::Reflection::SetUInt32(a3, a2, (const google::protobuf::FieldDescriptor *)v4, (int)v75.__r_.__value_.__l.__data_, v13);
      goto LABEL_164;
    case 8:
      if (*((_DWORD *)this + 10) == 3)
      {
        v75.__r_.__value_.__r.__words[0] = 0;
        if (!google::protobuf::TextFormat::Parser::ParserImpl::ConsumeUnsignedInteger(this, (unint64_t *)&v75, 1uLL))goto LABEL_165;
        if (*((_DWORD *)v4 + 15) == 3)
          google::protobuf::Reflection::AddBool(a3, a2, (const google::protobuf::FieldDescriptor *)v4, v75.__r_.__value_.__r.__words[0] != 0, v22);
        else
          google::protobuf::Reflection::SetBool(a3, a2, (const google::protobuf::FieldDescriptor *)v4, v75.__r_.__value_.__r.__words[0] != 0, v22);
        goto LABEL_164;
      }
      memset(&v75, 0, sizeof(v75));
      if ((google::protobuf::TextFormat::Parser::ParserImpl::ConsumeIdentifier((uint64_t)this, &v75) & 1) == 0)
        goto LABEL_160;
      if (SHIBYTE(v75.__r_.__value_.__r.__words[2]) < 0)
      {
        if (v75.__r_.__value_.__l.__size_ != 4)
          goto LABEL_79;
        v26 = (std::string *)v75.__r_.__value_.__r.__words[0];
      }
      else
      {
        if (SHIBYTE(v75.__r_.__value_.__r.__words[2]) != 4)
          goto LABEL_79;
        v26 = &v75;
      }
      if (LODWORD(v26->__r_.__value_.__l.__data_) == 1702195828)
      {
LABEL_81:
        v38 = *((_DWORD *)v4 + 15);
        v39 = 1;
LABEL_82:
        if (v38 == 3)
          google::protobuf::Reflection::AddBool(a3, a2, (const google::protobuf::FieldDescriptor *)v4, v39, v25);
        else
          google::protobuf::Reflection::SetBool(a3, a2, (const google::protobuf::FieldDescriptor *)v4, v39, v25);
        v40 = 1;
        goto LABEL_161;
      }
LABEL_79:
      if (std::operator==[abi:ne180100]<char,std::char_traits<char>,std::allocator<char>>(&v75, "True")
        || std::operator==[abi:ne180100]<char,std::char_traits<char>,std::allocator<char>>(&v75, "t"))
      {
        goto LABEL_81;
      }
      if (std::operator==[abi:ne180100]<char,std::char_traits<char>,std::allocator<char>>(&v75, "false")
        || std::operator==[abi:ne180100]<char,std::char_traits<char>,std::allocator<char>>(&v75, "False")
        || std::operator==[abi:ne180100]<char,std::char_traits<char>,std::allocator<char>>(&v75, "f"))
      {
        v39 = 0;
        v38 = *((_DWORD *)v4 + 15);
        goto LABEL_82;
      }
      std::operator+<char>();
      v59 = std::string::append(&v69, "\". Value: \"");
      v60 = *(_OWORD *)&v59->__r_.__value_.__l.__data_;
      v70.__r_.__value_.__r.__words[2] = v59->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v70.__r_.__value_.__l.__data_ = v60;
      v59->__r_.__value_.__l.__size_ = 0;
      v59->__r_.__value_.__r.__words[2] = 0;
      v59->__r_.__value_.__r.__words[0] = 0;
      if ((v75.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v61 = &v75;
      else
        v61 = (std::string *)v75.__r_.__value_.__r.__words[0];
      if ((v75.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        size = HIBYTE(v75.__r_.__value_.__r.__words[2]);
      else
        size = v75.__r_.__value_.__l.__size_;
      v63 = std::string::append(&v70, (const std::string::value_type *)v61, size);
      v64 = *(_OWORD *)&v63->__r_.__value_.__l.__data_;
      __dst.__r_.__value_.__r.__words[2] = v63->__r_.__value_.__r.__words[2];
      *(_OWORD *)&__dst.__r_.__value_.__l.__data_ = v64;
      v63->__r_.__value_.__l.__size_ = 0;
      v63->__r_.__value_.__r.__words[2] = 0;
      v63->__r_.__value_.__r.__words[0] = 0;
      v65 = std::string::append(&__dst, "\".");
      v66 = *(_OWORD *)&v65->__r_.__value_.__l.__data_;
      __p.__r_.__value_.__r.__words[2] = v65->__r_.__value_.__r.__words[2];
      *(_OWORD *)&__p.__r_.__value_.__l.__data_ = v66;
      v65->__r_.__value_.__l.__size_ = 0;
      v65->__r_.__value_.__r.__words[2] = 0;
      v65->__r_.__value_.__r.__words[0] = 0;
      google::protobuf::TextFormat::Parser::ParserImpl::ReportError((uint64_t *)this, *((unsigned int *)this + 18), *((unsigned int *)this + 19), (uint64_t)&__p);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__p.__r_.__value_.__l.__data_);
      if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__dst.__r_.__value_.__l.__data_);
      if (SHIBYTE(v70.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v70.__r_.__value_.__l.__data_);
      if (SHIBYTE(v69.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v69.__r_.__value_.__l.__data_);
LABEL_160:
      v40 = 0;
LABEL_161:
      if (SHIBYTE(v75.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v75.__r_.__value_.__l.__data_);
      if ((v40 & 1) == 0)
        goto LABEL_165;
      goto LABEL_164;
    case 9:
    case 0xC:
      memset(&v75, 0, sizeof(v75));
      v24 = google::protobuf::TextFormat::Parser::ParserImpl::ConsumeString((uint64_t)this, &v75, (uint64_t)a3, (unsigned int *)a4);
      if (!v24)
        goto LABEL_90;
      if (*((_DWORD *)v4 + 15) == 3)
      {
        if (SHIBYTE(v75.__r_.__value_.__r.__words[2]) < 0)
          std::string::__init_copy_ctor_external(&v74, v75.__r_.__value_.__l.__data_, v75.__r_.__value_.__l.__size_);
        else
          v74 = v75;
        google::protobuf::Reflection::AddString((uint64_t)a3, (uint64_t)a2, (google::protobuf::FieldDescriptor *)v4, (uint64_t)&v74, v23);
        if (SHIBYTE(v74.__r_.__value_.__r.__words[2]) < 0)
        {
          v37 = &v74;
LABEL_89:
          operator delete(v37->__r_.__value_.__l.__data_);
        }
      }
      else
      {
        if (SHIBYTE(v75.__r_.__value_.__r.__words[2]) < 0)
          std::string::__init_copy_ctor_external(&v73, v75.__r_.__value_.__l.__data_, v75.__r_.__value_.__l.__size_);
        else
          v73 = v75;
        google::protobuf::Reflection::SetString((uint64_t)a3, a2, (google::protobuf::FieldDescriptor *)v4, (uint64_t)&v73, v23);
        if (SHIBYTE(v73.__r_.__value_.__r.__words[2]) < 0)
        {
          v37 = &v73;
          goto LABEL_89;
        }
      }
LABEL_90:
      if (SHIBYTE(v75.__r_.__value_.__r.__words[2]) < 0)
      {
        operator delete(v75.__r_.__value_.__l.__data_);
        if (v24)
          goto LABEL_164;
      }
      else if (v24)
      {
        goto LABEL_164;
      }
LABEL_165:
      LOBYTE(v4) = 0;
      return v4 & 1;
    case 0xA:
    case 0xB:
      LODWORD(v75.__r_.__value_.__l.__data_) = 3;
      v75.__r_.__value_.__l.__size_ = (std::string::size_type)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libproto"
                                                              "buf/src/google/protobuf/text_format.cc";
      LODWORD(v75.__r_.__value_.__r.__words[2]) = 834;
      memset(&v76, 0, sizeof(v76));
      std::string::append(&v76, "Reached an unintended state: CPPTYPE_MESSAGE");
      google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v75);
      if (SHIBYTE(v76.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v76.__r_.__value_.__l.__data_);
      goto LABEL_164;
    case 0xE:
      memset(&__p, 0, sizeof(__p));
      v68 = 0x7FFFFFFFFFFFFFFFLL;
      v16 = google::protobuf::FieldDescriptor::enum_type((google::protobuf::FieldDescriptor *)v4);
      if (*((_DWORD *)this + 10) == 2)
      {
        if ((google::protobuf::TextFormat::Parser::ParserImpl::ConsumeIdentifier((uint64_t)this, &__p) & 1) == 0)
          goto LABEL_134;
        ValueByName = google::protobuf::EnumDescriptor::FindValueByName(v16, (uint64_t *)&__p, v17);
        if (!ValueByName)
          goto LABEL_99;
      }
      else
      {
        std::string::basic_string[abi:ne180100]<0>(&v75, "-");
        if ((AddrObjGoogle::protobuf::TextFormat::Parser::ParserImpl::LookingAt((uint64_t)this, (unsigned __int8 *)&v75) & 1) != 0)
        {
          if (SHIBYTE(v75.__r_.__value_.__r.__words[2]) < 0)
            operator delete(v75.__r_.__value_.__l.__data_);
        }
        else
        {
          v27 = *((_DWORD *)this + 10);
          if (SHIBYTE(v75.__r_.__value_.__r.__words[2]) < 0)
            operator delete(v75.__r_.__value_.__l.__data_);
          if (v27 != 3)
          {
            std::operator+<char>();
            google::protobuf::TextFormat::Parser::ParserImpl::ReportError((uint64_t *)this, *((unsigned int *)this + 18), *((unsigned int *)this + 19), (uint64_t)&v75);
            if (SHIBYTE(v75.__r_.__value_.__r.__words[2]) < 0)
            {
              v36 = (void *)v75.__r_.__value_.__r.__words[0];
LABEL_133:
              operator delete(v36);
            }
LABEL_134:
            LOBYTE(v4) = 0;
LABEL_135:
            v34 = 1;
            goto LABEL_136;
          }
        }
        if ((google::protobuf::TextFormat::Parser::ParserImpl::ConsumeSignedInteger(this, &v68, 0x7FFFFFFFLL) & 1) == 0)
          goto LABEL_134;
        v29 = v68;
        v75.__r_.__value_.__r.__words[0] = (std::string::size_type)&v75.__r_.__value_.__r.__words[2];
        v30 = &v75.__r_.__value_.__s.__data_[16];
        v31 = v68;
        if (v68 < 0)
        {
          v30 = &v75.__r_.__value_.__s.__data_[17];
          v75.__r_.__value_.__s.__data_[16] = 45;
          v31 = -v68;
        }
        v75.__r_.__value_.__l.__size_ = google::protobuf::FastUInt64ToBufferLeft((google::protobuf *)v31, v30, v28)
                                      - (_BYTE *)&v75.__r_.__value_.__r.__words[2];
        std::string::basic_string[abi:ne180100](&__dst, v75.__r_.__value_.__l.__data_, v75.__r_.__value_.__l.__size_);
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
          operator delete(__p.__r_.__value_.__l.__data_);
        __p = __dst;
        v32 = (_QWORD *)(*(_QWORD *)(*(_QWORD *)(v16 + 16) + 144) + 192);
        v75.__r_.__value_.__r.__words[0] = v16;
        v75.__r_.__value_.__l.__size_ = v29;
        if (!ValueByName)
        {
          if (v29 != 0x7FFFFFFFFFFFFFFFLL && *(_DWORD *)(*((_QWORD *)*a3 + 2) + 60) == 3)
          {
            if (*((_DWORD *)v4 + 15) == 3)
              google::protobuf::Reflection::AddEnumValue(a3, a2, (const google::protobuf::FieldDescriptor *)v4, v29, v33);
            else
              google::protobuf::Reflection::SetEnumValue(a3, a2, (const google::protobuf::FieldDescriptor *)v4, v29, v33);
LABEL_145:
            LOBYTE(v4) = 1;
            goto LABEL_135;
          }
LABEL_99:
          if (*((_BYTE *)this + 231))
          {
            std::operator+<char>();
            v41 = std::string::append(&v69, "\" for field \"");
            v42 = *(_OWORD *)&v41->__r_.__value_.__l.__data_;
            v70.__r_.__value_.__r.__words[2] = v41->__r_.__value_.__r.__words[2];
            *(_OWORD *)&v70.__r_.__value_.__l.__data_ = v42;
            v41->__r_.__value_.__l.__size_ = 0;
            v41->__r_.__value_.__r.__words[2] = 0;
            v41->__r_.__value_.__r.__words[0] = 0;
            v43 = *((char *)*v4 + 23);
            if (v43 >= 0)
              v44 = (const std::string::value_type *)*v4;
            else
              v44 = **v4;
            if (v43 >= 0)
              v45 = *((unsigned __int8 *)*v4 + 23);
            else
              v45 = (std::string::size_type)(*v4)[1];
            v46 = std::string::append(&v70, v44, v45);
            v47 = *(_OWORD *)&v46->__r_.__value_.__l.__data_;
            __dst.__r_.__value_.__r.__words[2] = v46->__r_.__value_.__r.__words[2];
            *(_OWORD *)&__dst.__r_.__value_.__l.__data_ = v47;
            v46->__r_.__value_.__l.__size_ = 0;
            v46->__r_.__value_.__r.__words[2] = 0;
            v46->__r_.__value_.__r.__words[0] = 0;
            v48 = std::string::append(&__dst, "\".");
            v49 = *(_OWORD *)&v48->__r_.__value_.__l.__data_;
            v75.__r_.__value_.__r.__words[2] = v48->__r_.__value_.__r.__words[2];
            *(_OWORD *)&v75.__r_.__value_.__l.__data_ = v49;
            v48->__r_.__value_.__l.__size_ = 0;
            v48->__r_.__value_.__r.__words[2] = 0;
            v48->__r_.__value_.__r.__words[0] = 0;
            google::protobuf::TextFormat::Parser::ParserImpl::ReportWarning((uint64_t *)this, *((unsigned int *)this + 18), *((unsigned int *)this + 19), (uint64_t)&v75);
            if (SHIBYTE(v75.__r_.__value_.__r.__words[2]) < 0)
              operator delete(v75.__r_.__value_.__l.__data_);
            if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
              operator delete(__dst.__r_.__value_.__l.__data_);
            if (SHIBYTE(v70.__r_.__value_.__r.__words[2]) < 0)
              operator delete(v70.__r_.__value_.__l.__data_);
            if (SHIBYTE(v69.__r_.__value_.__r.__words[2]) < 0)
              operator delete(v69.__r_.__value_.__l.__data_);
            goto LABEL_145;
          }
          std::operator+<char>();
          v50 = std::string::append(&v69, "\" for field \"");
          v51 = *(_OWORD *)&v50->__r_.__value_.__l.__data_;
          v70.__r_.__value_.__r.__words[2] = v50->__r_.__value_.__r.__words[2];
          *(_OWORD *)&v70.__r_.__value_.__l.__data_ = v51;
          v50->__r_.__value_.__l.__size_ = 0;
          v50->__r_.__value_.__r.__words[2] = 0;
          v50->__r_.__value_.__r.__words[0] = 0;
          v52 = *((char *)*v4 + 23);
          if (v52 >= 0)
            v53 = (const std::string::value_type *)*v4;
          else
            v53 = **v4;
          if (v52 >= 0)
            v54 = *((unsigned __int8 *)*v4 + 23);
          else
            v54 = (std::string::size_type)(*v4)[1];
          v55 = std::string::append(&v70, v53, v54);
          v56 = *(_OWORD *)&v55->__r_.__value_.__l.__data_;
          __dst.__r_.__value_.__r.__words[2] = v55->__r_.__value_.__r.__words[2];
          *(_OWORD *)&__dst.__r_.__value_.__l.__data_ = v56;
          v55->__r_.__value_.__l.__size_ = 0;
          v55->__r_.__value_.__r.__words[2] = 0;
          v55->__r_.__value_.__r.__words[0] = 0;
          v57 = std::string::append(&__dst, "\".");
          v58 = *(_OWORD *)&v57->__r_.__value_.__l.__data_;
          v75.__r_.__value_.__r.__words[2] = v57->__r_.__value_.__r.__words[2];
          *(_OWORD *)&v75.__r_.__value_.__l.__data_ = v58;
          v57->__r_.__value_.__l.__size_ = 0;
          v57->__r_.__value_.__r.__words[2] = 0;
          v57->__r_.__value_.__r.__words[0] = 0;
          google::protobuf::TextFormat::Parser::ParserImpl::ReportError((uint64_t *)this, *((unsigned int *)this + 18), *((unsigned int *)this + 19), (uint64_t)&v75);
          if (SHIBYTE(v75.__r_.__value_.__r.__words[2]) < 0)
            operator delete(v75.__r_.__value_.__l.__data_);
          if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
            operator delete(__dst.__r_.__value_.__l.__data_);
          if (SHIBYTE(v70.__r_.__value_.__r.__words[2]) < 0)
            operator delete(v70.__r_.__value_.__l.__data_);
          if (SHIBYTE(v69.__r_.__value_.__r.__words[2]) < 0)
          {
            v36 = (void *)v69.__r_.__value_.__r.__words[0];
            goto LABEL_133;
          }
          goto LABEL_134;
        }
      }
      if (*((_DWORD *)v4 + 15) == 3)
        google::protobuf::Reflection::AddEnum((uint64_t *)a3, a2, (google::protobuf::FieldDescriptor *)v4, ValueByName);
      else
        google::protobuf::Reflection::SetEnum((uint64_t *)a3, a2, (google::protobuf::FieldDescriptor *)v4, ValueByName);
      v34 = 0;
LABEL_136:
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__p.__r_.__value_.__l.__data_);
      if ((v34 & 1) == 0)
LABEL_164:
        LOBYTE(v4) = 1;
      return v4 & 1;
    default:
      goto LABEL_164;
  }
}

void sub_1888935E4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,void *__p,uint64_t a31,int a32,__int16 a33,char a34,char a35,uint64_t a36,uint64_t a37,uint64_t a38,int a39,__int16 a40,char a41,char a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,__int16 a47,char a48,char a49)
{
  uint64_t v49;

  if (a35 < 0)
    operator delete(__p);
  if (a28 < 0)
    operator delete(a23);
  if (a21 < 0)
    operator delete(a16);
  if (a15 < 0)
    operator delete(a10);
  if (*(char *)(v49 - 105) < 0)
    operator delete(*(void **)(v49 - 128));
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::TextFormat::Parser::ParserImpl::ConsumeMessageDelimiter(uint64_t a1, uint64_t a2)
{
  char v4;
  char v5;
  const char *v6;
  char v7;
  char v8;
  void *__p[2];
  char v11;

  std::string::basic_string[abi:ne180100]<0>(__p, "<");
  v4 = google::protobuf::TextFormat::Parser::ParserImpl::TryConsume(a1, (unsigned __int8 *)__p);
  v5 = v4;
  if (v11 < 0)
  {
    operator delete(__p[0]);
    if ((v5 & 1) != 0)
      goto LABEL_3;
  }
  else if ((v4 & 1) != 0)
  {
LABEL_3:
    v6 = ">";
LABEL_8:
    MEMORY[0x18D7640AC](a2, v6);
    return 1;
  }
  std::string::basic_string[abi:ne180100]<0>(__p, "{");
  v7 = google::protobuf::TextFormat::Parser::ParserImpl::Consume(a1, (unsigned __int8 *)__p);
  v8 = v7;
  if (v11 < 0)
  {
    operator delete(__p[0]);
    if ((v8 & 1) != 0)
      goto LABEL_7;
  }
  else if ((v7 & 1) != 0)
  {
LABEL_7:
    v6 = "}";
    goto LABEL_8;
  }
  return 0;
}

void sub_188893828(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::TextFormat::Parser::ParserImpl::ConsumeMessage(google::protobuf::TextFormat::Parser::ParserImpl *a1, google::protobuf::Message *a2, unsigned __int8 *a3)
{
  int v6;
  int v7;
  void *__p[2];
  char v10;
  void *v11[2];
  char v12;

  while (1)
  {
    std::string::basic_string[abi:ne180100]<0>(v11, ">");
    if ((AddrObjGoogle::protobuf::TextFormat::Parser::ParserImpl::LookingAt((uint64_t)a1, (unsigned __int8 *)v11) & 1) != 0)
    {
      v6 = 0;
    }
    else
    {
      std::string::basic_string[abi:ne180100]<0>(__p, "}");
      v7 = AddrObjGoogle::protobuf::TextFormat::Parser::ParserImpl::LookingAt((uint64_t)a1, (unsigned __int8 *)__p);
      if (v10 < 0)
        operator delete(__p[0]);
      v6 = v7 ^ 1;
    }
    if (v12 < 0)
      operator delete(v11[0]);
    if (!v6)
      break;
    if ((google::protobuf::TextFormat::Parser::ParserImpl::ConsumeField(a1, a2) & 1) == 0)
      return 0;
  }
  return google::protobuf::TextFormat::Parser::ParserImpl::Consume((uint64_t)a1, a3);
}

void sub_188893920(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::TextFormat::Parser::ParserImpl::ConsumeSignedInteger(google::protobuf::TextFormat::Parser::ParserImpl *this, uint64_t *a2, uint64_t a3)
{
  unsigned int v6;
  uint64_t result;
  uint64_t v8;
  void *__p[2];
  char v10;

  std::string::basic_string[abi:ne180100]<0>(__p, "-");
  v6 = google::protobuf::TextFormat::Parser::ParserImpl::TryConsume((uint64_t)this, (unsigned __int8 *)__p);
  if (v10 < 0)
    operator delete(__p[0]);
  __p[0] = 0;
  result = google::protobuf::TextFormat::Parser::ParserImpl::ConsumeUnsignedInteger(this, (unint64_t *)__p, a3 + v6);
  if ((result & 1) != 0)
  {
    v8 = (uint64_t)__p[0];
    if (v6)
      v8 = -(uint64_t)__p[0];
    *a2 = v8;
  }
  return result;
}

void sub_1888939C8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::TextFormat::Parser::ParserImpl::ConsumeUnsignedInteger(google::protobuf::TextFormat::Parser::ParserImpl *this, unint64_t *a2, unint64_t a3)
{
  google::protobuf::io::Tokenizer *v4;
  void *v6;
  std::string *v7;
  __int128 v8;
  std::string v9;
  void *__p[2];
  std::string::size_type v11;

  v4 = (google::protobuf::TextFormat::Parser::ParserImpl *)((char *)this + 40);
  if (*((_DWORD *)this + 10) == 3)
  {
    if ((google::protobuf::io::Tokenizer::ParseInteger((unsigned __int8 *)this + 48, a3, a2) & 1) != 0)
    {
      google::protobuf::io::Tokenizer::Next(v4);
      return 1;
    }
    std::operator+<char>();
    v7 = std::string::append(&v9, ")");
    v8 = *(_OWORD *)&v7->__r_.__value_.__l.__data_;
    v11 = v7->__r_.__value_.__r.__words[2];
    *(_OWORD *)__p = v8;
    v7->__r_.__value_.__l.__size_ = 0;
    v7->__r_.__value_.__r.__words[2] = 0;
    v7->__r_.__value_.__r.__words[0] = 0;
    google::protobuf::TextFormat::Parser::ParserImpl::ReportError((uint64_t *)this, *((unsigned int *)this + 18), *((unsigned int *)this + 19), (uint64_t)__p);
    if (SHIBYTE(v11) < 0)
      operator delete(__p[0]);
    if (SHIBYTE(v9.__r_.__value_.__r.__words[2]) < 0)
    {
      v6 = (void *)v9.__r_.__value_.__r.__words[0];
      goto LABEL_10;
    }
  }
  else
  {
    std::operator+<char>();
    google::protobuf::TextFormat::Parser::ParserImpl::ReportError((uint64_t *)this, *((unsigned int *)this + 18), *((unsigned int *)this + 19), (uint64_t)__p);
    if (SHIBYTE(v11) < 0)
    {
      v6 = __p[0];
LABEL_10:
      operator delete(v6);
    }
  }
  return 0;
}

void sub_188893AF0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0)
    operator delete(__p);
  if (a15 < 0)
    operator delete(a10);
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::TextFormat::Parser::ParserImpl::ConsumeDouble(google::protobuf::TextFormat::Parser::ParserImpl *this, double *a2)
{
  uint64_t v4;
  char **v5;
  int v6;
  int v7;
  char *v9;
  unsigned int v10;
  char v11;
  std::string *p_p;
  std::string *v13;
  int v14;
  std::string::size_type v15;
  uint64_t v16;
  char **v17;
  double v18;
  std::string *v20;
  int data_low;
  int v23;
  uint64_t v25;
  void *v26;
  char v27;
  std::string __p;

  std::string::basic_string[abi:ne180100]<0>(&__p, "-");
  v6 = google::protobuf::TextFormat::Parser::ParserImpl::TryConsume((uint64_t)this, (unsigned __int8 *)&__p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  v7 = *((_DWORD *)this + 10);
  if (v7 == 2)
  {
    if (*((char *)this + 71) < 0)
      std::string::__init_copy_ctor_external(&__p, *((const std::string::value_type **)this + 6), *((_QWORD *)this + 7));
    else
      __p = *(std::string *)((_BYTE *)this + 2);
    v11 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
    v13 = (std::string *)((char *)&__p + HIBYTE(__p.__r_.__value_.__r.__words[2]));
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      p_p = &__p;
    else
      v13 = (std::string *)(__p.__r_.__value_.__r.__words[0] + __p.__r_.__value_.__l.__size_);
    if (p_p != v13)
    {
      do
      {
        v14 = p_p->__r_.__value_.__s.__data_[0];
        if ((v14 - 65) <= 0x19)
          p_p->__r_.__value_.__s.__data_[0] = v14 + 32;
        p_p = (std::string *)((char *)p_p + 1);
      }
      while (p_p != v13);
      v11 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    }
    if (v11 < 0)
    {
      if (__p.__r_.__value_.__l.__size_ != 3)
      {
        if (__p.__r_.__value_.__l.__size_ != 8)
          goto LABEL_61;
        v15 = *(_QWORD *)__p.__r_.__value_.__l.__data_;
        goto LABEL_43;
      }
      v20 = (std::string *)__p.__r_.__value_.__r.__words[0];
      if (*(_WORD *)__p.__r_.__value_.__l.__data_ == 28265 && *(_BYTE *)(__p.__r_.__value_.__r.__words[0] + 2) == 102)
        goto LABEL_66;
    }
    else
    {
      if (v11 != 3)
      {
        if (v11 != 8)
          goto LABEL_61;
        v15 = __p.__r_.__value_.__r.__words[0];
LABEL_43:
        if (v15 == 0x7974696E69666E69)
        {
LABEL_66:
          v25 = 0x7FF0000000000000;
          goto LABEL_68;
        }
LABEL_61:
        std::operator+<char>();
        google::protobuf::TextFormat::Parser::ParserImpl::ReportError((uint64_t *)this, *((unsigned int *)this + 18), *((unsigned int *)this + 19), (uint64_t)&v26);
        if (v27 < 0)
          operator delete(v26);
        goto LABEL_63;
      }
      if (LOWORD(__p.__r_.__value_.__l.__data_) == 28265 && __p.__r_.__value_.__s.__data_[2] == 102)
        goto LABEL_66;
      v20 = &__p;
    }
    data_low = LOWORD(v20->__r_.__value_.__l.__data_);
    v23 = v20->__r_.__value_.__s.__data_[2];
    if (data_low == 24942 && v23 == 110)
    {
      v25 = 0x7FF8000000000000;
LABEL_68:
      *(_QWORD *)a2 = v25;
      google::protobuf::io::Tokenizer::Next((google::protobuf::TextFormat::Parser::ParserImpl *)((char *)this + 40));
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__p.__r_.__value_.__l.__data_);
LABEL_7:
      if (!v6)
        return 1;
LABEL_8:
      *a2 = -*a2;
      return 1;
    }
    goto LABEL_61;
  }
  if (v7 != 3)
  {
    if (v7 == 4)
    {
      *a2 = google::protobuf::io::Tokenizer::ParseFloat((uint64_t)this + 48, v4, v5);
      google::protobuf::io::Tokenizer::Next((google::protobuf::TextFormat::Parser::ParserImpl *)((char *)this + 40));
      goto LABEL_7;
    }
    goto LABEL_37;
  }
  v9 = (char *)this + 48;
  if (*((char *)this + 71) < 0)
  {
    if (*((_QWORD *)this + 7) <= 1uLL || **(_BYTE **)v9 != 48)
      goto LABEL_38;
    v10 = *(unsigned __int8 *)(*(_QWORD *)v9 + 1);
    if ((v10 | 0x20) == 0x78)
      goto LABEL_37;
    if ((char)v10 < 48)
      goto LABEL_38;
  }
  else
  {
    if (*((unsigned __int8 *)this + 71) < 2u || *v9 != 48)
      goto LABEL_38;
    v10 = *((unsigned __int8 *)this + 49);
    if ((v10 | 0x20) == 0x78)
      goto LABEL_37;
    if ((char)v10 <= 47)
    {
LABEL_38:
      __p.__r_.__value_.__r.__words[0] = 0;
      if (google::protobuf::io::Tokenizer::ParseInteger((unsigned __int8 *)this + 48, 0xFFFFFFFFFFFFFFFFLL, (unint64_t *)&__p))v18 = (double)__p.__r_.__value_.__r.__words[0];
      else
        v18 = google::protobuf::io::Tokenizer::ParseFloat((uint64_t)this + 48, v16, v17);
      *a2 = v18;
      google::protobuf::io::Tokenizer::Next((google::protobuf::TextFormat::Parser::ParserImpl *)((char *)this + 40));
      if ((v6 & 1) == 0)
        return 1;
      goto LABEL_8;
    }
  }
  if (v10 > 0x37)
    goto LABEL_38;
LABEL_37:
  std::operator+<char>();
  google::protobuf::TextFormat::Parser::ParserImpl::ReportError((uint64_t *)this, *((unsigned int *)this + 18), *((unsigned int *)this + 19), (uint64_t)&__p);
LABEL_63:
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  return 0;
}

void sub_188893EB0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void google::protobuf::TextFormat::Printer::TextGenerator::~TextGenerator(google::protobuf::TextFormat::Printer::TextGenerator *this)
{
  google::protobuf::TextFormat::Printer::TextGenerator::~TextGenerator(this);
  JUMPOUT(0x18D76437CLL);
}

{
  *(_QWORD *)this = &off_1E1BF7458;
  if (!*((_BYTE *)this + 29) && *((int *)this + 6) >= 1)
    (*(void (**)(_QWORD))(**((_QWORD **)this + 1) + 24))(*((_QWORD *)this + 1));
}

uint64_t google::protobuf::TextFormat::Printer::TextGenerator::Indent(uint64_t this)
{
  ++*(_DWORD *)(this + 32);
  return this;
}

void google::protobuf::TextFormat::Printer::TextGenerator::Outdent(google::protobuf::TextFormat::Printer::TextGenerator *this)
{
  int v1;
  int v2;
  const char *v3;
  int v4;
  std::string __p;

  v1 = *((_DWORD *)this + 8);
  if (v1 && v1 >= *((_DWORD *)this + 9))
  {
    *((_DWORD *)this + 8) = v1 - 1;
  }
  else
  {
    v2 = 2;
    v3 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/text_format.cc";
    v4 = 1268;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, " Outdent() without matching Indent().");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v2);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
}

void sub_188893FB8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::TextFormat::Printer::TextGenerator::GetCurrentIndentationSize(google::protobuf::TextFormat::Printer::TextGenerator *this)
{
  return 2 * *((int *)this + 8);
}

uint64_t google::protobuf::TextFormat::Printer::TextGenerator::Print(google::protobuf::TextFormat::Printer::TextGenerator *this, const char *__src, size_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  if (*((int *)this + 8) < 1)
  {
    result = google::protobuf::TextFormat::Printer::TextGenerator::Write((uint64_t)this, __src, a3);
    if (a3 && __src[a3 - 1] == 10)
      *((_BYTE *)this + 28) = 1;
  }
  else
  {
    if (a3)
    {
      v6 = 0;
      v7 = 0;
      do
      {
        if (__src[v6] == 10)
        {
          google::protobuf::TextFormat::Printer::TextGenerator::Write((uint64_t)this, &__src[v7], ++v6 - v7);
          *((_BYTE *)this + 28) = 1;
          v7 = v6;
        }
        else
        {
          ++v6;
        }
      }
      while (v6 != a3);
    }
    else
    {
      v7 = 0;
    }
    return google::protobuf::TextFormat::Printer::TextGenerator::Write((uint64_t)this, &__src[v7], a3 - v7);
  }
  return result;
}

uint64_t google::protobuf::TextFormat::Printer::TextGenerator::Write(uint64_t this, const char *__src, size_t a3)
{
  uint64_t v3;
  size_t v4;
  int v6;
  int v7;
  void *v8;
  int v9;
  size_t v10;
  uint64_t v11;
  void *v12;
  void *v13;

  if (!a3)
    return this;
  v3 = this;
  if (*(_BYTE *)(this + 29))
    return this;
  v4 = a3;
  if (!*(_BYTE *)(this + 28))
    goto LABEL_13;
  *(_BYTE *)(this + 28) = 0;
  if (!*(_DWORD *)(this + 32))
    goto LABEL_13;
  v6 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)this + 32))(this);
  v7 = *(_DWORD *)(v3 + 24);
  if (v7 < v6)
  {
    while (1)
    {
      if (v7 >= 1)
      {
        memset(*(void **)(v3 + 16), 32, v7);
        v7 = *(_DWORD *)(v3 + 24);
      }
      v13 = 0;
      this = (*(uint64_t (**)(_QWORD, void **, uint64_t))(**(_QWORD **)(v3 + 8) + 16))(*(_QWORD *)(v3 + 8), &v13, v3 + 24);
      *(_BYTE *)(v3 + 29) = this ^ 1;
      if (((this ^ 1) & 1) != 0)
        return this;
      v6 -= v7;
      v8 = v13;
      *(_QWORD *)(v3 + 16) = v13;
      v7 = *(_DWORD *)(v3 + 24);
      if (v6 <= v7)
        goto LABEL_12;
    }
  }
  v8 = *(void **)(v3 + 16);
LABEL_12:
  this = (uint64_t)memset(v8, 32, v6);
  *(_QWORD *)(v3 + 16) += v6;
  *(_DWORD *)(v3 + 24) -= v6;
  if (!*(_BYTE *)(v3 + 29))
  {
LABEL_13:
    v9 = *(_DWORD *)(v3 + 24);
    v10 = v9;
    if (v9 >= v4)
    {
      v12 = *(void **)(v3 + 16);
LABEL_20:
      this = (uint64_t)memcpy(v12, __src, v4);
      *(_QWORD *)(v3 + 16) += v4;
      *(_DWORD *)(v3 + 24) -= v4;
    }
    else
    {
      while (1)
      {
        if (v9 >= 1)
        {
          memcpy(*(void **)(v3 + 16), __src, v10);
          v11 = *(int *)(v3 + 24);
          __src += v11;
          v4 -= v11;
        }
        v13 = 0;
        this = (*(uint64_t (**)(_QWORD, void **, uint64_t))(**(_QWORD **)(v3 + 8) + 16))(*(_QWORD *)(v3 + 8), &v13, v3 + 24);
        *(_BYTE *)(v3 + 29) = this ^ 1;
        if ((this & 1) == 0)
          break;
        v12 = v13;
        *(_QWORD *)(v3 + 16) = v13;
        v9 = *(_DWORD *)(v3 + 24);
        v10 = v9;
        if (v4 <= v9)
          goto LABEL_20;
      }
    }
  }
  return this;
}

uint64_t *std::unique_ptr<google::protobuf::TextFormat::ParseInfoTree>::reset[abi:ne180100](uint64_t *result)
{
  uint64_t v1;

  v1 = *result;
  *result = 0;
  if (v1)
  {
    std::__tree<std::__value_type<google::protobuf::FieldDescriptor const*,std::vector<std::unique_ptr<google::protobuf::TextFormat::ParseInfoTree>>>,std::__map_value_compare<google::protobuf::FieldDescriptor const*,std::__value_type<google::protobuf::FieldDescriptor const*,std::vector<std::unique_ptr<google::protobuf::TextFormat::ParseInfoTree>>>,std::less<google::protobuf::FieldDescriptor const*>,true>,std::allocator<std::__value_type<google::protobuf::FieldDescriptor const*,std::vector<std::unique_ptr<google::protobuf::TextFormat::ParseInfoTree>>>>>::destroy(*(_QWORD **)(v1 + 32));
    std::__tree<std::__value_type<google::protobuf::FieldDescriptor const*,std::vector<google::protobuf::TextFormat::ParseLocation>>,std::__map_value_compare<google::protobuf::FieldDescriptor const*,std::__value_type<google::protobuf::FieldDescriptor const*,std::vector<google::protobuf::TextFormat::ParseLocation>>,std::less<google::protobuf::FieldDescriptor const*>,true>,std::allocator<std::__value_type<google::protobuf::FieldDescriptor const*,std::vector<google::protobuf::TextFormat::ParseLocation>>>>::destroy(*(_QWORD **)(v1 + 8));
    JUMPOUT(0x18D76437CLL);
  }
  return result;
}

void std::__tree<std::__value_type<google::protobuf::FieldDescriptor const*,std::vector<std::unique_ptr<google::protobuf::TextFormat::ParseInfoTree>>>,std::__map_value_compare<google::protobuf::FieldDescriptor const*,std::__value_type<google::protobuf::FieldDescriptor const*,std::vector<std::unique_ptr<google::protobuf::TextFormat::ParseInfoTree>>>,std::less<google::protobuf::FieldDescriptor const*>,true>,std::allocator<std::__value_type<google::protobuf::FieldDescriptor const*,std::vector<std::unique_ptr<google::protobuf::TextFormat::ParseInfoTree>>>>>::destroy(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  if (a1)
  {
    std::__tree<std::__value_type<google::protobuf::FieldDescriptor const*,std::vector<std::unique_ptr<google::protobuf::TextFormat::ParseInfoTree>>>,std::__map_value_compare<google::protobuf::FieldDescriptor const*,std::__value_type<google::protobuf::FieldDescriptor const*,std::vector<std::unique_ptr<google::protobuf::TextFormat::ParseInfoTree>>>,std::less<google::protobuf::FieldDescriptor const*>,true>,std::allocator<std::__value_type<google::protobuf::FieldDescriptor const*,std::vector<std::unique_ptr<google::protobuf::TextFormat::ParseInfoTree>>>>>::destroy(*a1);
    std::__tree<std::__value_type<google::protobuf::FieldDescriptor const*,std::vector<std::unique_ptr<google::protobuf::TextFormat::ParseInfoTree>>>,std::__map_value_compare<google::protobuf::FieldDescriptor const*,std::__value_type<google::protobuf::FieldDescriptor const*,std::vector<std::unique_ptr<google::protobuf::TextFormat::ParseInfoTree>>>,std::less<google::protobuf::FieldDescriptor const*>,true>,std::allocator<std::__value_type<google::protobuf::FieldDescriptor const*,std::vector<std::unique_ptr<google::protobuf::TextFormat::ParseInfoTree>>>>>::destroy(a1[1]);
    v2 = a1[5];
    if (v2)
    {
      v3 = a1[6];
      v4 = (void *)a1[5];
      if (v3 != v2)
      {
        do
        {
          v3 -= 8;
          std::unique_ptr<google::protobuf::TextFormat::ParseInfoTree>::reset[abi:ne180100](v3);
        }
        while (v3 != v2);
        v4 = (void *)a1[5];
      }
      a1[6] = v2;
      operator delete(v4);
    }
    operator delete(a1);
  }
}

void std::__tree<std::__value_type<google::protobuf::FieldDescriptor const*,std::vector<google::protobuf::TextFormat::ParseLocation>>,std::__map_value_compare<google::protobuf::FieldDescriptor const*,std::__value_type<google::protobuf::FieldDescriptor const*,std::vector<google::protobuf::TextFormat::ParseLocation>>,std::less<google::protobuf::FieldDescriptor const*>,true>,std::allocator<std::__value_type<google::protobuf::FieldDescriptor const*,std::vector<google::protobuf::TextFormat::ParseLocation>>>>::destroy(_QWORD *a1)
{
  void *v2;

  if (a1)
  {
    std::__tree<std::__value_type<google::protobuf::FieldDescriptor const*,std::vector<google::protobuf::TextFormat::ParseLocation>>,std::__map_value_compare<google::protobuf::FieldDescriptor const*,std::__value_type<google::protobuf::FieldDescriptor const*,std::vector<google::protobuf::TextFormat::ParseLocation>>,std::less<google::protobuf::FieldDescriptor const*>,true>,std::allocator<std::__value_type<google::protobuf::FieldDescriptor const*,std::vector<google::protobuf::TextFormat::ParseLocation>>>>::destroy(*a1);
    std::__tree<std::__value_type<google::protobuf::FieldDescriptor const*,std::vector<google::protobuf::TextFormat::ParseLocation>>,std::__map_value_compare<google::protobuf::FieldDescriptor const*,std::__value_type<google::protobuf::FieldDescriptor const*,std::vector<google::protobuf::TextFormat::ParseLocation>>,std::less<google::protobuf::FieldDescriptor const*>,true>,std::allocator<std::__value_type<google::protobuf::FieldDescriptor const*,std::vector<google::protobuf::TextFormat::ParseLocation>>>>::destroy(a1[1]);
    v2 = (void *)a1[5];
    if (v2)
    {
      a1[6] = v2;
      operator delete(v2);
    }
    operator delete(a1);
  }
}

uint64_t std::__introsort<std::_ClassicAlgPolicy,google::protobuf::`anonymous namespace'::FieldIndexSorter &,google::protobuf::FieldDescriptor const**,false>(uint64_t result, uint64_t *a2, uint64_t a3, char a4)
{
  uint64_t *v6;
  uint64_t *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  BOOL v48;
  char v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t *v56;
  int64_t v57;
  int64_t v58;
  int64_t v59;
  uint64_t v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _BOOL4 v65;
  uint64_t *v66;
  uint64_t v67;
  uint64_t *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _BOOL4 v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t *v76;
  uint64_t *v77;
  uint64_t *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t *v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t *v90;
  BOOL v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t *v94;
  int64_t v95;
  uint64_t *v96;
  uint64_t *v97;
  uint64_t v98;

  v6 = (uint64_t *)result;
LABEL_2:
  v7 = a2;
  v97 = a2 - 1;
  v8 = v6;
  while (2)
  {
    v6 = v8;
    v9 = (char *)v7 - (char *)v8;
    v10 = v9 >> 3;
    switch(v10)
    {
      case 0:
      case 1:
        return result;
      case 2:
        v37 = *(a2 - 1);
        v38 = *v6;
        if ((_DWORD)result)
        {
          *v6 = v37;
          *(a2 - 1) = v38;
        }
        return result;
      case 3:
      case 4:
      case 5:
        v39 = v6 + 2;
        v40 = v6 + 3;
        v41 = *(a2 - 1);
        v42 = v6[3];
        if ((_DWORD)result)
        {
          *v40 = v41;
          *(a2 - 1) = v42;
          v43 = *v40;
          v44 = *v39;
          if ((_DWORD)result)
          {
            *v39 = v43;
            *v40 = v44;
            v45 = v6[1];
            if ((_DWORD)result)
            {
              v6[1] = v43;
              v6[2] = v45;
              v46 = *v6;
              if ((_DWORD)result)
              {
                *v6 = v43;
                v6[1] = v46;
              }
            }
          }
        }
        return result;
      default:
        if (v9 <= 191)
        {
          v47 = v6 + 1;
          v48 = v6 == v7 || v47 == v7;
          v49 = v48;
          if ((a4 & 1) != 0)
          {
            if ((v49 & 1) == 0)
            {
              v50 = 8;
              v51 = v6;
              do
              {
                v53 = *v51;
                v52 = v51[1];
                v51 = v47;
                if ((_DWORD)result)
                {
                  v54 = v50;
                  while (1)
                  {
                    *(uint64_t *)((char *)v6 + v54) = v53;
                    v55 = v54 - 8;
                    if (v54 == 8)
                      break;
                    v53 = *(uint64_t *)((char *)v6 + v54 - 16);
                    v54 = v55;
                    if ((result & 1) == 0)
                    {
                      v56 = (uint64_t *)((char *)v6 + v55);
                      goto LABEL_79;
                    }
                  }
                  v56 = v6;
LABEL_79:
                  *v56 = v52;
                }
                v47 = v51 + 1;
                v50 += 8;
              }
              while (v51 + 1 != a2);
            }
          }
          else if ((v49 & 1) == 0)
          {
            do
            {
              v93 = *v6;
              v92 = v6[1];
              v6 = v47;
              if ((_DWORD)result)
              {
                v94 = v6;
                do
                {
                  *v94 = v93;
                  v93 = *(v94 - 2);
                  --v94;
                }
                while ((result & 1) != 0);
                *v94 = v92;
              }
              v47 = v6 + 1;
            }
            while (v6 + 1 != a2);
          }
          return result;
        }
        if (!a3)
        {
          if (v6 != v7)
          {
            v57 = (unint64_t)(v10 - 2) >> 1;
            v58 = v57;
            do
            {
              v59 = v58;
              if (v57 >= v58)
              {
                v60 = (2 * v58) | 1;
                v61 = &v6[v60];
                v62 = 2 * v58 + 2;
                v63 = *v61;
                if (v62 < v10)
                {
                  v64 = v61[1];
                  if (v65)
                    v63 = v64;
                  v57 = (unint64_t)(v10 - 2) >> 1;
                  if (v65)
                  {
                    ++v61;
                    v60 = v62;
                  }
                }
                v66 = &v6[v59];
                v67 = *v66;
                if ((result & 1) == 0)
                {
                  v98 = v67;
                  v95 = v59;
                  do
                  {
                    v68 = v61;
                    *v66 = v63;
                    if (v57 < v60)
                      break;
                    v69 = (2 * v60) | 1;
                    v61 = &v6[v69];
                    v70 = 2 * v60 + 2;
                    v63 = *v61;
                    if (v70 < v10)
                    {
                      v71 = v61[1];
                      if (v72)
                      {
                        v63 = v71;
                        ++v61;
                      }
                      v57 = (unint64_t)(v10 - 2) >> 1;
                      if (v72)
                        v69 = v70;
                    }
                    v66 = v68;
                    v60 = v69;
                  }
                  while (!(_DWORD)result);
                  *v68 = v98;
                  v59 = v95;
                }
              }
              v58 = v59 - 1;
            }
            while (v59);
            v73 = (unint64_t)v9 >> 3;
            v96 = v6;
            do
            {
              v74 = 0;
              v75 = *v6;
              v76 = v6;
              do
              {
                v77 = &v76[v74];
                v80 = v77[1];
                v78 = v77 + 1;
                v79 = v80;
                v81 = (2 * v74) | 1;
                v82 = 2 * v74 + 2;
                if (v82 < v73)
                {
                  v83 = v78[1];
                  if ((_DWORD)result)
                  {
                    v79 = v83;
                    ++v78;
                    v81 = v82;
                  }
                }
                *v76 = v79;
                v76 = v78;
                v74 = v81;
              }
              while (v81 <= (uint64_t)((unint64_t)(v73 - 2) >> 1));
              v84 = a2 - 1;
              v48 = v78 == --a2;
              if (v48)
              {
                *v78 = v75;
              }
              else
              {
                *v78 = *v84;
                *v84 = v75;
                v85 = (char *)v78 - (char *)v96 + 8;
                if (v85 >= 9)
                {
                  v86 = (((unint64_t)v85 >> 3) - 2) >> 1;
                  v87 = &v96[v86];
                  v88 = *v87;
                  v89 = *v78;
                  if ((_DWORD)result)
                  {
                    do
                    {
                      v90 = v87;
                      *v78 = v88;
                      if (!v86)
                        break;
                      v86 = (v86 - 1) >> 1;
                      v87 = &v96[v86];
                      v88 = *v87;
                      v78 = v90;
                    }
                    while ((result & 1) != 0);
                    *v90 = v89;
                  }
                }
              }
              v91 = v73-- <= 2;
              v6 = v96;
            }
            while (!v91);
          }
          return result;
        }
        v11 = (unint64_t)v10 >> 1;
        v12 = &v6[(unint64_t)v10 >> 1];
        if ((unint64_t)v9 < 0x401)
        {
        }
        else
        {
          v13 = *v6;
          *v6 = *v12;
          *v12 = v13;
        }
        --a3;
        v14 = *v6;
        {
          if ((result & 1) != 0)
          {
            v8 = v6;
            do
            {
              v28 = v8[1];
              ++v8;
            }
            while ((result & 1) == 0);
          }
          else
          {
            v29 = v6 + 1;
            do
            {
              v8 = v29;
              if (v29 >= v7)
                break;
              ++v29;
            }
            while (!(_DWORD)result);
          }
          v30 = v7;
          if (v8 < v7)
          {
            v30 = v7;
            do
            {
              v31 = *--v30;
            }
            while ((result & 1) != 0);
          }
          if (v8 < v30)
          {
            v32 = *v8;
            v33 = *v30;
            do
            {
              *v8 = v33;
              *v30 = v32;
              do
              {
                v34 = v8[1];
                ++v8;
                v32 = v34;
              }
              do
              {
                v35 = *--v30;
                v33 = v35;
              }
              while ((result & 1) != 0);
            }
            while (v8 < v30);
          }
          v36 = v8 - 1;
          if (v8 - 1 != v6)
            *v6 = *v36;
          a4 = 0;
          *v36 = v14;
          continue;
        }
        v15 = 0;
        do
          v16 = v6[++v15];
        v17 = &v6[v15];
        v18 = v7;
        if (v15 == 1)
        {
          v18 = v7;
          do
          {
            if (v17 >= v18)
              break;
            v20 = *--v18;
          }
        }
        else
        {
          do
            v19 = *--v18;
        }
        if (v17 >= v18)
        {
          v26 = v17 - 1;
        }
        else
        {
          v21 = *v18;
          v22 = &v6[v15];
          v23 = v18;
          do
          {
            *v22 = v21;
            *v23 = v16;
            do
            {
              v24 = v22[1];
              ++v22;
              v16 = v24;
            }
            do
            {
              v25 = *--v23;
              v21 = v25;
            }
          }
          while (v22 < v23);
          v26 = v22 - 1;
          v7 = a2;
        }
        if (v26 != v6)
          *v6 = *v26;
        *v26 = v14;
        if (v17 < v18)
        {
LABEL_32:
          a4 = 0;
          v8 = v26 + 1;
          continue;
        }
        v8 = v26 + 1;
        if (!(_DWORD)result)
        {
          if (v27)
            continue;
          goto LABEL_32;
        }
        a2 = v26;
        if (!v27)
          goto LABEL_2;
        return result;
    }
  }
}

BOOL google::protobuf::`anonymous namespace'::FieldIndexSorter::operator()(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;

  if (*(_BYTE *)(a1 + 67))
  {
    if (!*(_BYTE *)(a2 + 67))
      return 0;
    v2 = *(_DWORD *)(a1 + 68);
    v3 = *(_DWORD *)(a2 + 68);
  }
  else
  {
    if (*(_BYTE *)(a2 + 67))
      return 1;
    v2 = 678152731 * ((unint64_t)(a1 - *(_QWORD *)(*(_QWORD *)(a1 + 80) + 40)) >> 3);
    v3 = 678152731 * ((unint64_t)(a2 - *(_QWORD *)(*(_QWORD *)(a2 + 80) + 40)) >> 3);
  }
  return v2 < v3;
}

BOOL std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::`anonymous namespace'::FieldIndexSorter &,google::protobuf::FieldDescriptor const**>(uint64_t *a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  _BOOL8 result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = *a2;
  v7 = *a1;
  v9 = *a3;
  if (v8)
  {
    if (result)
    {
      *a1 = v9;
    }
    else
    {
      *a1 = v6;
      *a2 = v7;
      v13 = *a3;
      if (!result)
        return result;
      *a2 = v13;
    }
    *a3 = v7;
  }
  else if (result)
  {
    *a2 = v9;
    *a3 = v6;
    v11 = *a2;
    v12 = *a1;
    if (result)
    {
      *a1 = v11;
      *a2 = v12;
    }
  }
  return result;
}

BOOL std::__insertion_sort_incomplete[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::`anonymous namespace'::FieldIndexSorter &,google::protobuf::FieldDescriptor const**>(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  _BOOL8 result;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t *v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t *v17;
  uint64_t *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v4 = a2 - a1;
  result = 1;
  switch(v4)
  {
    case 0:
    case 1:
      return result;
    case 2:
      v6 = *(a2 - 1);
      v7 = *a1;
      {
        *a1 = v6;
        *(a2 - 1) = v7;
      }
      return 1;
    case 3:
      return 1;
    case 4:
      return 1;
    case 5:
      v18 = a1 + 2;
      v19 = a1 + 3;
      v20 = *(a2 - 1);
      v21 = a1[3];
      {
        *v19 = v20;
        *(a2 - 1) = v21;
        v22 = *v19;
        v23 = *v18;
        {
          *v18 = v22;
          *v19 = v23;
          v24 = a1[1];
          {
            a1[1] = v22;
            a1[2] = v24;
            v25 = *a1;
            {
              *a1 = v22;
              a1[1] = v25;
            }
          }
        }
      }
      return 1;
    default:
      v8 = a1 + 2;
      v9 = a1 + 3;
      if (a1 + 3 == a2)
        return 1;
      v10 = 0;
      v11 = 24;
      break;
  }
  while (1)
  {
    v12 = *v9;
    v13 = *v8;
    {
      v14 = v11;
      while (1)
      {
        *(uint64_t *)((char *)a1 + v14) = v13;
        v15 = v14 - 8;
        if (v14 == 8)
          break;
        v13 = *(uint64_t *)((char *)a1 + v14 - 16);
        v14 = v15;
        if (!v16)
        {
          v17 = (uint64_t *)((char *)a1 + v15);
          goto LABEL_13;
        }
      }
      v17 = a1;
LABEL_13:
      *v17 = v12;
      if (++v10 == 8)
        return v9 + 1 == a2;
    }
    v8 = v9;
    v11 += 8;
    if (++v9 == a2)
      return 1;
  }
}

BOOL std::__sort4[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::`anonymous namespace'::FieldIndexSorter &,google::protobuf::FieldDescriptor const**>(uint64_t *a1, uint64_t *a2, uint64_t *a3, uint64_t *a4)
{
  uint64_t v8;
  uint64_t v9;
  _BOOL8 result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v8 = *a4;
  v9 = *a3;
  if (result)
  {
    *a3 = v8;
    *a4 = v9;
    v11 = *a3;
    v12 = *a2;
    if (result)
    {
      *a2 = v11;
      *a3 = v12;
      v13 = *a2;
      v14 = *a1;
      if (result)
      {
        *a1 = v13;
        *a2 = v14;
      }
    }
  }
  return result;
}

void *std::get_temporary_buffer[abi:ne180100]<google::protobuf::Message const*>(uint64_t a1)
{
  unint64_t v1;
  const std::nothrow_t *v2;
  void *result;
  BOOL v4;

  if (a1 < 1)
    return 0;
  if (a1 >= 0xFFFFFFFFFFFFFFFLL)
    v1 = 0xFFFFFFFFFFFFFFFLL;
  else
    v1 = a1;
  v2 = (const std::nothrow_t *)MEMORY[0x1E0DE4E10];
  while (1)
  {
    result = operator new(8 * v1, v2);
    if (result)
      break;
    v4 = v1 > 1;
    v1 >>= 1;
    if (!v4)
      return 0;
  }
  return result;
}

const google::protobuf::Message **std::__stable_sort<std::_ClassicAlgPolicy,google::protobuf::MapEntryMessageComparator &,std::__wrap_iter<google::protobuf::Message const**>>(const google::protobuf::Message **result, const google::protobuf::Message **a2, const google::protobuf::FieldDescriptor **a3, unint64_t a4, const google::protobuf::Message **a5, uint64_t a6)
{
  const google::protobuf::Message **v8;
  const google::protobuf::Message *v9;
  const google::protobuf::Message **v11;
  uint64_t v12;
  const google::protobuf::Message **v13;
  const google::protobuf::Message *v14;
  const google::protobuf::Message *v15;
  uint64_t v16;
  const google::protobuf::Message **v17;
  const google::protobuf::Message **v19;
  unint64_t v20;
  const google::protobuf::Message **v21;
  unint64_t v22;
  const google::protobuf::Message **v23;
  const google::protobuf::Message **v24;
  const google::protobuf::Message **v25;
  const google::protobuf::Message **v26;
  uint64_t v27;
  uint64_t v28;

  if (a4 >= 2)
  {
    v8 = result;
    if (a4 == 2)
    {
      result = (const google::protobuf::Message **)google::protobuf::MapEntryMessageComparator::operator()(a3, *(a2 - 1), *result);
      if ((_DWORD)result)
      {
        v9 = *v8;
        *v8 = *(a2 - 1);
        *(a2 - 1) = v9;
      }
    }
    else if ((uint64_t)a4 > 128)
    {
      v19 = a5;
      v20 = a4 >> 1;
      v21 = &result[a4 >> 1];
      v22 = a4 >> 1;
      if ((uint64_t)a4 <= a6)
      {
        std::__stable_sort_move<std::_ClassicAlgPolicy,google::protobuf::MapEntryMessageComparator &,std::__wrap_iter<google::protobuf::Message const**>>(result, v21, a3, v22, a5);
        v23 = &v19[v20];
        result = std::__stable_sort_move<std::_ClassicAlgPolicy,google::protobuf::MapEntryMessageComparator &,std::__wrap_iter<google::protobuf::Message const**>>(&v8[a4 >> 1], a2, a3, a4 - (a4 >> 1), v23);
        v24 = &v19[a4];
        v25 = v23;
        while (v25 != v24)
        {
          result = (const google::protobuf::Message **)google::protobuf::MapEntryMessageComparator::operator()(a3, *v25, *v19);
          if ((_DWORD)result)
            v26 = v25;
          else
            v26 = v19;
          v19 += result ^ 1;
          v25 += result;
          *v8++ = *v26;
          if (v19 == v23)
          {
            if (v25 != v24)
            {
              v27 = 0;
              do
              {
                v8[v27] = v25[v27];
                ++v27;
              }
              while (&v25[v27] != v24);
            }
            return result;
          }
        }
        if (v19 != v23)
        {
          v28 = 0;
          do
          {
            v8[v28] = v19[v28];
            ++v28;
          }
          while (&v19[v28] != v23);
        }
      }
      else
      {
        std::__stable_sort<std::_ClassicAlgPolicy,google::protobuf::MapEntryMessageComparator &,std::__wrap_iter<google::protobuf::Message const**>>(result, v21, a3, v22, a5, a6);
        std::__stable_sort<std::_ClassicAlgPolicy,google::protobuf::MapEntryMessageComparator &,std::__wrap_iter<google::protobuf::Message const**>>(&v8[a4 >> 1], a2, a3, a4 - (a4 >> 1), v19, a6);
        return (const google::protobuf::Message **)std::__inplace_merge<std::_ClassicAlgPolicy,google::protobuf::MapEntryMessageComparator &,std::__wrap_iter<google::protobuf::Message const**>>((uint64_t)v8, &v8[a4 >> 1], a2, a3, a4 >> 1, a4 - (a4 >> 1), v19, a6);
      }
    }
    else if (result != a2)
    {
      v11 = result + 1;
      if (result + 1 != a2)
      {
        v12 = 0;
        v13 = result;
        do
        {
          v14 = *v13;
          v13 = v11;
          result = (const google::protobuf::Message **)google::protobuf::MapEntryMessageComparator::operator()(a3, *v11, v14);
          if ((_DWORD)result)
          {
            v15 = *v13;
            v16 = v12;
            while (1)
            {
              *(const google::protobuf::Message **)((char *)v8 + v16 + 8) = *(const google::protobuf::Message **)((char *)v8 + v16);
              if (!v16)
                break;
              result = (const google::protobuf::Message **)google::protobuf::MapEntryMessageComparator::operator()(a3, v15, *(const google::protobuf::Message **)((char *)v8 + v16 - 8));
              v16 -= 8;
              if ((result & 1) == 0)
              {
                v17 = (const google::protobuf::Message **)((char *)v8 + v16 + 8);
                goto LABEL_15;
              }
            }
            v17 = v8;
LABEL_15:
            *v17 = v15;
          }
          v11 = v13 + 1;
          v12 += 8;
        }
        while (v13 + 1 != a2);
      }
    }
  }
  return result;
}

BOOL google::protobuf::MapEntryMessageComparator::operator()(const google::protobuf::FieldDescriptor **a1, const google::protobuf::Message *a2, const google::protobuf::Message *a3)
{
  uint64_t v6;
  const char *v7;
  google::protobuf::_anonymous_namespace_ **v8;
  google::protobuf::_anonymous_namespace_ **v9;
  const google::protobuf::FieldDescriptor *v10;
  unint64_t *v11;
  unint64_t v12;
  int Int32;
  uint64_t v14;
  const char *v15;
  unsigned int UInt32;
  uint64_t v18;
  const char *v19;
  BOOL v20;
  uint64_t Int64;
  uint64_t v22;
  const char *v23;
  uint64_t v24;
  unint64_t UInt64;
  uint64_t v26;
  const char *v27;
  _BOOL4 Bool;
  uint64_t v29;
  const char *v30;
  const char *v31;
  int v32;
  void *v33;
  char v34;
  std::string::size_type size;
  std::string *v36;
  std::string::size_type v37;
  std::string *v38;
  size_t v39;
  int v40;
  std::string v42;
  std::string __p;
  std::string v44;
  const google::protobuf::FieldDescriptor *v45;
  uint64_t (*v46)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);

  (*(void (**)(const google::protobuf::Message *))(*(_QWORD *)a2 + 152))(a2);
  v9 = v8;
  v10 = *a1;
  v11 = (unint64_t *)*((_QWORD *)*a1 + 6);
  if (v11)
  {
    v45 = *a1;
    v46 = google::protobuf::FieldDescriptor::TypeOnceInit;
    v12 = atomic_load(v11);
    if (v12 != -1)
    {
      v42.__r_.__value_.__r.__words[0] = (std::string::size_type)&v46;
      v42.__r_.__value_.__l.__size_ = (std::string::size_type)&v45;
      v44.__r_.__value_.__r.__words[0] = (std::string::size_type)&v42;
      std::__call_once(v11, &v44, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  switch(*((_DWORD *)v10 + 14))
  {
    case 3:
      Int64 = google::protobuf::Reflection::GetInt64(v9, a2, *a1, v6, v7);
      return Int64 < google::protobuf::Reflection::GetInt64(v9, a3, *a1, v22, v23);
    case 4:
    case 6:
      UInt64 = google::protobuf::Reflection::GetUInt64(v9, a2, *a1, v6, v7);
      v20 = UInt64 >= google::protobuf::Reflection::GetUInt64(v9, a3, *a1, v26, v27);
      goto LABEL_12;
    case 5:
      Int32 = google::protobuf::Reflection::GetInt32(v9, a2, *a1, v6, v7);
      return Int32 < (int)google::protobuf::Reflection::GetInt32(v9, a3, *a1, v14, v15);
    case 7:
      UInt32 = google::protobuf::Reflection::GetUInt32(v9, a2, *a1, v6, v7);
      v20 = UInt32 >= google::protobuf::Reflection::GetUInt32(v9, a3, *a1, v18, v19);
LABEL_12:
      v24 = !v20;
      break;
    case 8:
      Bool = google::protobuf::Reflection::GetBool(v9, a2, *a1, v6, v7);
      v24 = google::protobuf::Reflection::GetBool(v9, a3, *a1, v29, v30) && !Bool;
      break;
    case 9:
      google::protobuf::Reflection::GetString(v9, a2, *a1, v7, &v42);
      google::protobuf::Reflection::GetString(v9, a3, *a1, v31, &v44);
      v32 = SHIBYTE(v44.__r_.__value_.__r.__words[2]);
      v33 = (void *)v44.__r_.__value_.__r.__words[0];
      v34 = HIBYTE(v42.__r_.__value_.__r.__words[2]);
      if ((v42.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        size = HIBYTE(v42.__r_.__value_.__r.__words[2]);
      else
        size = v42.__r_.__value_.__l.__size_;
      if ((v42.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v36 = &v42;
      else
        v36 = (std::string *)v42.__r_.__value_.__r.__words[0];
      if ((v44.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v37 = HIBYTE(v44.__r_.__value_.__r.__words[2]);
      else
        v37 = v44.__r_.__value_.__l.__size_;
      if ((v44.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v38 = &v44;
      else
        v38 = (std::string *)v44.__r_.__value_.__r.__words[0];
      if (v37 >= size)
        v39 = size;
      else
        v39 = v37;
      v40 = memcmp(v36, v38, v39);
      if (v40)
        v24 = v40 < 0;
      else
        v24 = size < v37;
      if (v32 < 0)
      {
        operator delete(v33);
        v34 = HIBYTE(v42.__r_.__value_.__r.__words[2]);
      }
      if (v34 < 0)
        operator delete(v42.__r_.__value_.__l.__data_);
      break;
    default:
      LODWORD(v42.__r_.__value_.__l.__data_) = 2;
      v42.__r_.__value_.__l.__size_ = (std::string::size_type)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libproto"
                                                              "buf/src/google/protobuf/text_format.cc";
      LODWORD(v42.__r_.__value_.__r.__words[2]) = 2116;
      memset(&__p, 0, sizeof(__p));
      std::string::append(&__p, "Invalid key for map field.");
      google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v42);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__p.__r_.__value_.__l.__data_);
      v24 = 1;
      break;
  }
  return v24;
}

void sub_188895484(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

const google::protobuf::Message **std::__stable_sort_move<std::_ClassicAlgPolicy,google::protobuf::MapEntryMessageComparator &,std::__wrap_iter<google::protobuf::Message const**>>(const google::protobuf::Message **result, const google::protobuf::Message **a2, const google::protobuf::FieldDescriptor **a3, unint64_t a4, const google::protobuf::Message **a5)
{
  const google::protobuf::Message **v5;
  const google::protobuf::Message **v7;
  const google::protobuf::Message **v10;
  const google::protobuf::Message **v11;
  const google::protobuf::Message **v12;
  uint64_t v13;
  const google::protobuf::Message **v14;
  const google::protobuf::Message **v15;
  const google::protobuf::Message *v16;
  const google::protobuf::Message **v17;
  uint64_t v18;
  const google::protobuf::Message *v19;
  const google::protobuf::Message **v20;
  const google::protobuf::Message **v21;
  const google::protobuf::Message **v22;
  uint64_t v23;
  uint64_t v24;

  if (a4)
  {
    v5 = a5;
    v7 = result;
    if (a4 == 1)
    {
LABEL_9:
      *v5 = *v7;
      return result;
    }
    if (a4 == 2)
    {
      v10 = a2 - 1;
      result = (const google::protobuf::Message **)google::protobuf::MapEntryMessageComparator::operator()(a3, *(a2 - 1), *result);
      if ((_DWORD)result)
        v11 = v10;
      else
        v11 = v7;
      *v5++ = *v11;
      if (!(_DWORD)result)
        v7 = v10;
      goto LABEL_9;
    }
    if ((uint64_t)a4 > 8)
    {
      v20 = &result[a4 >> 1];
      std::__stable_sort<std::_ClassicAlgPolicy,google::protobuf::MapEntryMessageComparator &,std::__wrap_iter<google::protobuf::Message const**>>(result, v20, a3, a4 >> 1, a5, a4 >> 1);
      result = (const google::protobuf::Message **)std::__stable_sort<std::_ClassicAlgPolicy,google::protobuf::MapEntryMessageComparator &,std::__wrap_iter<google::protobuf::Message const**>>(&v7[a4 >> 1], a2, a3, a4 - (a4 >> 1), &v5[a4 >> 1], a4 - (a4 >> 1));
      v21 = &v7[a4 >> 1];
      while (v21 != a2)
      {
        result = (const google::protobuf::Message **)google::protobuf::MapEntryMessageComparator::operator()(a3, *v21, *v7);
        if ((_DWORD)result)
          v22 = v21;
        else
          v22 = v7;
        v21 += result;
        v7 += result ^ 1;
        *v5++ = *v22;
        if (v7 == v20)
        {
          if (v21 != a2)
          {
            v23 = 0;
            do
            {
              v5[v23] = v21[v23];
              ++v23;
            }
            while (&v21[v23] != a2);
          }
          return result;
        }
      }
      if (v7 != v20)
      {
        v24 = 0;
        do
        {
          v5[v24] = v7[v24];
          ++v24;
        }
        while (&v7[v24] != v20);
      }
    }
    else if (result != a2)
    {
      v12 = result + 1;
      *a5 = *result;
      if (result + 1 != a2)
      {
        v13 = 0;
        v14 = a5;
        do
        {
          v15 = v14;
          v16 = *v14++;
          result = (const google::protobuf::Message **)google::protobuf::MapEntryMessageComparator::operator()(a3, *v12, v16);
          v17 = v14;
          if ((_DWORD)result)
          {
            v15[1] = *v15;
            v17 = v5;
            if (v15 != v5)
            {
              v18 = v13;
              while (1)
              {
                v17 = (const google::protobuf::Message **)((char *)v5 + v18);
                result = (const google::protobuf::Message **)google::protobuf::MapEntryMessageComparator::operator()(a3, *v12, *(const google::protobuf::Message **)((char *)v5 + v18 - 8));
                if (!(_DWORD)result)
                  break;
                *v17 = *(v17 - 1);
                v18 -= 8;
                if (!v18)
                {
                  v17 = v5;
                  break;
                }
              }
            }
          }
          v19 = *v12++;
          *v17 = v19;
          v13 += 8;
        }
        while (v12 != a2);
      }
    }
  }
  return result;
}

uint64_t std::__inplace_merge<std::_ClassicAlgPolicy,google::protobuf::MapEntryMessageComparator &,std::__wrap_iter<google::protobuf::Message const**>>(uint64_t result, const google::protobuf::Message **a2, const google::protobuf::Message **a3, const google::protobuf::FieldDescriptor **a4, uint64_t a5, uint64_t a6, const google::protobuf::Message **a7, uint64_t a8)
{
  const google::protobuf::Message **v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  const google::protobuf::Message **v22;
  const google::protobuf::Message **v23;
  unint64_t v24;
  const google::protobuf::Message **v25;
  const google::protobuf::Message **v26;
  const google::protobuf::Message *v27;
  uint64_t v28;
  const google::protobuf::Message **v29;
  unint64_t v30;
  const google::protobuf::Message **v31;
  const google::protobuf::Message **v32;
  const google::protobuf::Message *v33;
  _BOOL4 v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  const google::protobuf::Message **v43;
  uint64_t v44;
  uint64_t v45;
  const google::protobuf::Message **v46;
  const google::protobuf::Message **v47;
  const google::protobuf::Message **v48;
  uint64_t v49;
  const google::protobuf::Message **v50;
  const google::protobuf::Message **v51;
  const google::protobuf::Message *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  const google::protobuf::Message **v58;
  const google::protobuf::Message **v59;
  uint64_t v60;
  uint64_t v61;
  const google::protobuf::FieldDescriptor *v62;

  v60 = a6;
  if (a6)
  {
    v14 = (const google::protobuf::Message **)result;
    while (a5 > a8 && v60 > a8)
    {
      if (!a5)
        return result;
      v15 = 0;
      v16 = -a5;
      while (1)
      {
        result = google::protobuf::MapEntryMessageComparator::operator()(a4, *a2, v14[v15 / 8]);
        if ((result & 1) != 0)
          break;
        v15 += 8;
        if (__CFADD__(v16++, 1))
          return result;
      }
      v18 = -v16;
      v19 = v60;
      v58 = a7;
      v59 = a3;
      v56 = (char *)&v14[v15 / 8];
      v57 = a8;
      if (-v16 >= v60)
      {
        if (v16 == -1)
        {
          v52 = v14[v15 / 8];
          v14[v15 / 8] = *a2;
          *a2 = v52;
          return result;
        }
        if (v16 > 0)
          v18 = 1 - v16;
        v28 = v18 >> 1;
        v29 = a3;
        v23 = (const google::protobuf::Message **)((char *)&v14[v18 >> 1] + v15);
        v62 = *a4;
        v22 = a2;
        if (a2 != v29)
        {
          v55 = v18 >> 1;
          v30 = v59 - a2;
          v22 = a2;
          do
          {
            v31 = &v22[v30 >> 1];
            v33 = *v31;
            v32 = v31 + 1;
            v34 = google::protobuf::MapEntryMessageComparator::operator()(&v62, v33, *v23);
            if (v34)
              v30 += ~(v30 >> 1);
            else
              v30 >>= 1;
            if (v34)
              v22 = v32;
          }
          while (v30);
          v19 = v60;
          v28 = v55;
        }
        v21 = v22 - a2;
      }
      else
      {
        if (v60 >= 0)
          v20 = v60;
        else
          v20 = v60 + 1;
        v21 = v20 >> 1;
        v22 = &a2[v20 >> 1];
        v23 = a2;
        if ((char *)a2 - (char *)v14 != v15)
        {
          v54 = v20 >> 1;
          v24 = (uint64_t)((char *)a2 - (char *)v14 - v15) >> 3;
          v23 = &v14[v15 / 8];
          do
          {
            v25 = &v23[v24 >> 1];
            v27 = *v25;
            v26 = v25 + 1;
            if (google::protobuf::MapEntryMessageComparator::operator()(a4, *v22, v27))
            {
              v24 >>= 1;
            }
            else
            {
              v23 = v26;
              v24 += ~(v24 >> 1);
            }
          }
          while (v24);
          v19 = v60;
          v21 = v54;
        }
        v28 = (uint64_t)((char *)v23 - (char *)v14 - v15) >> 3;
      }
      a5 = -v28 - v16;
      v61 = v19 - v21;
      v35 = (char *)a2;
      v36 = v19;
      v37 = v28;
      v38 = std::__rotate[abi:ne180100]<std::_ClassicAlgPolicy,std::__wrap_iter<google::protobuf::Message const**>,std::__wrap_iter<google::protobuf::Message const**>>((char *)v23, v35, (char *)v22);
      v39 = v21;
      v40 = v38;
      if (v37 + v39 >= v36 - (v37 + v39) - v16)
      {
        v43 = v22;
        v44 = v37;
        v42 = v39;
        a8 = v57;
        a7 = v58;
        result = std::__inplace_merge<std::_ClassicAlgPolicy,google::protobuf::MapEntryMessageComparator &,std::__wrap_iter<google::protobuf::Message const**>>(v38, v43, v59, a4, a5, v61, v58, v57);
        a2 = v23;
        a5 = v44;
        a3 = (const google::protobuf::Message **)v40;
        v40 = v56;
      }
      else
      {
        v41 = v37;
        a7 = v58;
        result = std::__inplace_merge<std::_ClassicAlgPolicy,google::protobuf::MapEntryMessageComparator &,std::__wrap_iter<google::protobuf::Message const**>>(&v14[v15 / 8], v23, v38, a4, v41, v39, v58, v57);
        a2 = v22;
        a8 = v57;
        a3 = v59;
        v42 = v61;
      }
      v60 = v42;
      v14 = (const google::protobuf::Message **)v40;
      if (!v42)
        return result;
    }
    if (a5 <= v60)
    {
      if (v14 != a2)
      {
        v49 = 0;
        do
        {
          a7[v49] = v14[v49];
          ++v49;
        }
        while (&v14[v49] != a2);
        if (v49 * 8)
        {
          v50 = a7;
          while (a2 != a3)
          {
            result = google::protobuf::MapEntryMessageComparator::operator()(a4, *a2, *v50);
            if ((_DWORD)result)
              v51 = a2;
            else
              v51 = v50;
            a2 += result;
            v50 += result ^ 1;
            *v14++ = *v51;
            if (&a7[v49] == v50)
              return result;
          }
          return (uint64_t)memmove(v14, v50, (char *)a7 - (char *)v50 + v49 * 8);
        }
      }
    }
    else if (a3 != a2)
    {
      v45 = 0;
      do
      {
        a7[v45] = a2[v45];
        ++v45;
      }
      while (&a2[v45] != a3);
      if (v45 * 8)
      {
        v46 = &a7[v45];
        v47 = a3 - 1;
        while (a2 != v14)
        {
          result = google::protobuf::MapEntryMessageComparator::operator()(a4, *(v46 - 1), *(a2 - 1));
          if ((_DWORD)result)
            v48 = a2;
          else
            v48 = v46;
          if ((_DWORD)result)
            --a2;
          else
            --v46;
          *v47-- = *(v48 - 1);
          if (v46 == a7)
            return result;
        }
        v53 = 0;
        do
        {
          v47[v53] = v46[v53 - 1];
          --v53;
        }
        while (&v46[v53] != a7);
      }
    }
  }
  return result;
}

char *std::__rotate[abi:ne180100]<std::_ClassicAlgPolicy,std::__wrap_iter<google::protobuf::Message const**>,std::__wrap_iter<google::protobuf::Message const**>>(char *__src, char *a2, char *a3)
{
  char *v4;
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  size_t v9;

  v4 = a3;
  if (__src != a2)
  {
    if (a2 == a3)
    {
      return __src;
    }
    else if (__src + 8 == a2)
    {
      v6 = *(_QWORD *)__src;
      v7 = a3 - a2;
      memmove(__src, a2, a3 - a2);
      v4 = &__src[v7];
      *(_QWORD *)v4 = v6;
    }
    else if (a2 + 8 == a3)
    {
      v8 = *((_QWORD *)a3 - 1);
      v4 = __src + 8;
      v9 = a3 - 8 - __src;
      if (a3 - 8 != __src)
        memmove(__src + 8, __src, v9);
      *(_QWORD *)__src = v8;
    }
    else
    {
      return (char *)std::__rotate_gcd[abi:ne180100]<std::_ClassicAlgPolicy,std::__wrap_iter<google::protobuf::Message const**>>(__src, a2, a3);
    }
  }
  return v4;
}

_QWORD *std::__rotate_gcd[abi:ne180100]<std::_ClassicAlgPolicy,std::__wrap_iter<google::protobuf::Message const**>>(_QWORD *a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  _QWORD *v16;
  _QWORD *v17;
  BOOL v18;
  char v19;
  uint64_t v20;

  v3 = a2 - a1;
  if (v3 == a3 - a2)
  {
    if (a1 != a2 && a2 != a3)
    {
      v4 = a1 + 1;
      v5 = a2 + 1;
      do
      {
        v6 = *(v4 - 1);
        *(v4 - 1) = *(v5 - 1);
        *(v5 - 1) = v6;
        if (v4 == a2)
          break;
        ++v4;
      }
      while (v5++ != a3);
    }
  }
  else
  {
    v8 = a3 - a2;
    v9 = a2 - a1;
    do
    {
      v10 = v9;
      v9 = v8;
      v8 = v10 % v8;
    }
    while (v8);
    if (v9)
    {
      v11 = &a1[v9];
      do
      {
        v13 = *--v11;
        v12 = v13;
        v14 = &v11[v3];
        v15 = v11;
        do
        {
          v16 = v14;
          *v15 = *v14;
          v17 = &v14[v3];
          v18 = __OFSUB__(v3, a3 - v14);
          v20 = v3 - (a3 - v14);
          v19 = (v20 < 0) ^ v18;
          v14 = &a1[v20];
          if (v19)
            v14 = v17;
          v15 = v16;
        }
        while (v14 != v11);
        *v16 = v12;
      }
      while (v11 != a1);
    }
    return &a1[a3 - a2];
  }
  return a2;
}

uint64_t google::protobuf::io::ZeroCopyOutputStream::AllowsAliasing(google::protobuf::io::ZeroCopyOutputStream *this)
{
  return 0;
}

void google::protobuf::RepeatedField<BOOL>::Reserve(unsigned int *a1, int a2)
{
  int v2;
  uint64_t v4;
  _QWORD *v5;
  unsigned int v6;
  int v7;
  unint64_t v8;
  _QWORD *Aligned;
  void *v10;
  size_t v11;

  v2 = a1[1];
  if (v2 >= a2)
    return;
  if (v2 < 1)
  {
    v4 = *((_QWORD *)a1 + 1);
    v5 = 0;
    if (!v2)
    {
      if (a2 < 4)
        goto LABEL_6;
LABEL_10:
      v7 = 2 * v2;
      if (v7 <= a2)
        v6 = a2;
      else
        v6 = v7;
      goto LABEL_13;
    }
  }
  else
  {
    v4 = *((_QWORD *)a1 + 1);
    v5 = (_QWORD *)(v4 - 8);
  }
  v4 = *(_QWORD *)(v4 - 8);
  if (a2 >= 4)
  {
    if (v2 > 0x3FFFFFFF)
    {
      v6 = 0x7FFFFFFF;
      goto LABEL_13;
    }
    goto LABEL_10;
  }
LABEL_6:
  v6 = 4;
LABEL_13:
  if (v4)
  {
    v8 = (v6 + 15) & 0x1FFFFFFF8;
    if ((*(_BYTE *)(v4 + 24) & 1) != 0)
      (*(void (**)(_QWORD, _QWORD, unint64_t))(**(_QWORD **)(*(_QWORD *)(v4 + 32) + 32) + 40))(*(_QWORD *)(*(_QWORD *)(v4 + 32) + 32), MEMORY[0x1E0DE4EC8], v8);
    Aligned = google::protobuf::internal::ArenaImpl::AllocateAligned((google::protobuf::internal::ArenaImpl *)v4, v8);
  }
  else
  {
    Aligned = operator new(v6 + 8);
  }
  *Aligned = v4;
  v10 = Aligned + 1;
  a1[1] = v6;
  *((_QWORD *)a1 + 1) = v10;
  v11 = *a1;
  if ((int)v11 >= 1)
    memcpy(v10, v5 + 1, v11);
  if (v5)
  {
    if (!*v5)
      operator delete(v5);
  }
}

uint64_t google::protobuf::RepeatedField<BOOL>::RepeatedField(uint64_t a1, int *a2)
{
  int v4;
  void *v5;

  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  v4 = *a2;
  if (v4)
  {
    google::protobuf::RepeatedField<BOOL>::Reserve((unsigned int *)a1, v4);
    v5 = *(void **)(a1 + 8);
    *(_DWORD *)a1 += *a2;
    memcpy(v5, *((const void **)a2 + 1), *a2);
  }
  return a1;
}

void google::protobuf::RepeatedField<BOOL>::Swap(int *a1, int *a2)
{
  void **v4;
  _QWORD *v5;
  _QWORD *v6;
  size_t v7;
  void *v8;
  unint64_t v9;
  void *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *__dst[2];

  if (a1 != a2)
  {
    v4 = (void **)(a1 + 2);
    if (a1[1])
      v4 = (void **)((char *)*v4 - 8);
    v5 = *v4;
    v6 = (_QWORD *)*((_QWORD *)a2 + 1);
    if (a2[1])
      v6 = (_QWORD *)*(v6 - 1);
    if (v5 == v6)
    {
      v12 = *(_QWORD *)a1;
      v13 = *((_QWORD *)a1 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_QWORD *)a2 = v12;
      *((_QWORD *)a2 + 1) = v13;
    }
    else
    {
      __dst[0] = 0;
      __dst[1] = v6;
      if (*a1)
      {
        google::protobuf::RepeatedField<BOOL>::Reserve((unsigned int *)__dst, *a1);
        v7 = *a1;
        LODWORD(__dst[0]) += v7;
        memcpy(__dst[1], *((const void **)a1 + 1), v7);
      }
      *a1 = 0;
      if (*a2)
      {
        google::protobuf::RepeatedField<BOOL>::Reserve((unsigned int *)a1, *a2);
        v8 = (void *)*((_QWORD *)a1 + 1);
        *a1 += *a2;
        memcpy(v8, *((const void **)a2 + 1), *a2);
      }
      if (__dst == (void **)a2)
      {
        LODWORD(v11) = HIDWORD(__dst[0]);
      }
      else
      {
        v9 = *(_QWORD *)a2;
        v10 = (void *)*((_QWORD *)a2 + 1);
        *(_OWORD *)a2 = *(_OWORD *)__dst;
        __dst[0] = (void *)v9;
        __dst[1] = v10;
        v11 = HIDWORD(v9);
      }
      if ((int)v11 >= 1 && !*((_QWORD *)__dst[1] - 1))
        operator delete((char *)__dst[1] - 8);
    }
  }
}

void sub_188895EC8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, uint64_t a11)
{
  if (a10 >= 1 && !*(_QWORD *)(a11 - 8))
    operator delete((void *)(a11 - 8));
  _Unwind_Resume(exception_object);
}

void google::protobuf::RepeatedField<int>::Reserve(unsigned int *a1, int a2)
{
  int v2;
  uint64_t v4;
  _QWORD *v5;
  unsigned int v6;
  int v7;
  uint64_t v8;
  unint64_t v9;
  _QWORD *Aligned;
  void *v11;
  uint64_t v12;

  v2 = a1[1];
  if (v2 >= a2)
    return;
  if (v2 < 1)
  {
    v4 = *((_QWORD *)a1 + 1);
    v5 = 0;
    if (!v2)
    {
      if (a2 < 4)
        goto LABEL_6;
LABEL_10:
      v7 = 2 * v2;
      if (v7 <= a2)
        v6 = a2;
      else
        v6 = v7;
      goto LABEL_13;
    }
  }
  else
  {
    v4 = *((_QWORD *)a1 + 1);
    v5 = (_QWORD *)(v4 - 8);
  }
  v4 = *(_QWORD *)(v4 - 8);
  if (a2 >= 4)
  {
    if (v2 > 0x3FFFFFFF)
    {
      v6 = 0x7FFFFFFF;
      goto LABEL_13;
    }
    goto LABEL_10;
  }
LABEL_6:
  v6 = 4;
LABEL_13:
  v8 = 4 * v6;
  if (v4)
  {
    v9 = (v8 + 15) & 0x7FFFFFFF8;
    if ((*(_BYTE *)(v4 + 24) & 1) != 0)
      (*(void (**)(_QWORD, _QWORD, unint64_t))(**(_QWORD **)(*(_QWORD *)(v4 + 32) + 32) + 40))(*(_QWORD *)(*(_QWORD *)(v4 + 32) + 32), MEMORY[0x1E0DE4EC8], v9);
    Aligned = google::protobuf::internal::ArenaImpl::AllocateAligned((google::protobuf::internal::ArenaImpl *)v4, v9);
  }
  else
  {
    Aligned = operator new(v8 + 8);
  }
  *Aligned = v4;
  v11 = Aligned + 1;
  a1[1] = v6;
  *((_QWORD *)a1 + 1) = v11;
  v12 = *a1;
  if ((int)v12 >= 1)
    memcpy(v11, v5 + 1, 4 * v12);
  if (v5)
  {
    if (!*v5)
      operator delete(v5);
  }
}

uint64_t google::protobuf::RepeatedField<int>::RepeatedField(uint64_t a1, int *a2)
{
  int v4;
  void *v5;

  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  v4 = *a2;
  if (v4)
  {
    google::protobuf::RepeatedField<int>::Reserve((unsigned int *)a1, v4);
    v5 = *(void **)(a1 + 8);
    *(_DWORD *)a1 += *a2;
    memcpy(v5, *((const void **)a2 + 1), 4 * *a2);
  }
  return a1;
}

void google::protobuf::RepeatedField<int>::Swap(int *a1, int *a2)
{
  void **v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  void *v8;
  unint64_t v9;
  void *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *__dst[2];

  if (a1 != a2)
  {
    v4 = (void **)(a1 + 2);
    if (a1[1])
      v4 = (void **)((char *)*v4 - 8);
    v5 = *v4;
    v6 = (_QWORD *)*((_QWORD *)a2 + 1);
    if (a2[1])
      v6 = (_QWORD *)*(v6 - 1);
    if (v5 == v6)
    {
      v12 = *(_QWORD *)a1;
      v13 = *((_QWORD *)a1 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_QWORD *)a2 = v12;
      *((_QWORD *)a2 + 1) = v13;
    }
    else
    {
      __dst[0] = 0;
      __dst[1] = v6;
      if (*a1)
      {
        google::protobuf::RepeatedField<int>::Reserve((unsigned int *)__dst, *a1);
        v7 = *a1;
        LODWORD(__dst[0]) += v7;
        memcpy(__dst[1], *((const void **)a1 + 1), 4 * v7);
      }
      *a1 = 0;
      if (*a2)
      {
        google::protobuf::RepeatedField<int>::Reserve((unsigned int *)a1, *a2);
        v8 = (void *)*((_QWORD *)a1 + 1);
        *a1 += *a2;
        memcpy(v8, *((const void **)a2 + 1), 4 * *a2);
      }
      if (__dst == (void **)a2)
      {
        LODWORD(v11) = HIDWORD(__dst[0]);
      }
      else
      {
        v9 = *(_QWORD *)a2;
        v10 = (void *)*((_QWORD *)a2 + 1);
        *(_OWORD *)a2 = *(_OWORD *)__dst;
        __dst[0] = (void *)v9;
        __dst[1] = v10;
        v11 = HIDWORD(v9);
      }
      if ((int)v11 >= 1 && !*((_QWORD *)__dst[1] - 1))
        operator delete((char *)__dst[1] - 8);
    }
  }
}

void sub_18889619C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, uint64_t a11)
{
  if (a10 >= 1 && !*(_QWORD *)(a11 - 8))
    operator delete((void *)(a11 - 8));
  _Unwind_Resume(exception_object);
}

void google::protobuf::RepeatedField<unsigned int>::Swap(int *a1, int *a2)
{
  void **v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  void *v8;
  unint64_t v9;
  void *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *__dst[2];

  if (a1 != a2)
  {
    v4 = (void **)(a1 + 2);
    if (a1[1])
      v4 = (void **)((char *)*v4 - 8);
    v5 = *v4;
    v6 = (_QWORD *)*((_QWORD *)a2 + 1);
    if (a2[1])
      v6 = (_QWORD *)*(v6 - 1);
    if (v5 == v6)
    {
      v12 = *(_QWORD *)a1;
      v13 = *((_QWORD *)a1 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_QWORD *)a2 = v12;
      *((_QWORD *)a2 + 1) = v13;
    }
    else
    {
      __dst[0] = 0;
      __dst[1] = v6;
      if (*a1)
      {
        google::protobuf::RepeatedField<int>::Reserve((unsigned int *)__dst, *a1);
        v7 = *a1;
        LODWORD(__dst[0]) += v7;
        memcpy(__dst[1], *((const void **)a1 + 1), 4 * v7);
      }
      *a1 = 0;
      if (*a2)
      {
        google::protobuf::RepeatedField<int>::Reserve((unsigned int *)a1, *a2);
        v8 = (void *)*((_QWORD *)a1 + 1);
        *a1 += *a2;
        memcpy(v8, *((const void **)a2 + 1), 4 * *a2);
      }
      if (__dst == (void **)a2)
      {
        LODWORD(v11) = HIDWORD(__dst[0]);
      }
      else
      {
        v9 = *(_QWORD *)a2;
        v10 = (void *)*((_QWORD *)a2 + 1);
        *(_OWORD *)a2 = *(_OWORD *)__dst;
        __dst[0] = (void *)v9;
        __dst[1] = v10;
        v11 = HIDWORD(v9);
      }
      if ((int)v11 >= 1 && !*((_QWORD *)__dst[1] - 1))
        operator delete((char *)__dst[1] - 8);
    }
  }
}

void sub_1888962E4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, uint64_t a11)
{
  if (a10 >= 1 && !*(_QWORD *)(a11 - 8))
    operator delete((void *)(a11 - 8));
  _Unwind_Resume(exception_object);
}

void google::protobuf::RepeatedField<long long>::Reserve(unsigned int *a1, int a2)
{
  int v2;
  uint64_t v4;
  _QWORD *v5;
  unsigned int v6;
  int v7;
  uint64_t v8;
  unint64_t v9;
  _QWORD *Aligned;
  void *v11;
  uint64_t v12;

  v2 = a1[1];
  if (v2 >= a2)
    return;
  if (v2 < 1)
  {
    v4 = *((_QWORD *)a1 + 1);
    v5 = 0;
    if (!v2)
    {
      if (a2 < 4)
        goto LABEL_6;
LABEL_10:
      v7 = 2 * v2;
      if (v7 <= a2)
        v6 = a2;
      else
        v6 = v7;
      goto LABEL_13;
    }
  }
  else
  {
    v4 = *((_QWORD *)a1 + 1);
    v5 = (_QWORD *)(v4 - 8);
  }
  v4 = *(_QWORD *)(v4 - 8);
  if (a2 >= 4)
  {
    if (v2 > 0x3FFFFFFF)
    {
      v6 = 0x7FFFFFFF;
      goto LABEL_13;
    }
    goto LABEL_10;
  }
LABEL_6:
  v6 = 4;
LABEL_13:
  v8 = 8 * v6;
  if (v4)
  {
    v9 = (v8 + 15) & 0xFFFFFFFF8;
    if ((*(_BYTE *)(v4 + 24) & 1) != 0)
      (*(void (**)(_QWORD, _QWORD, unint64_t))(**(_QWORD **)(*(_QWORD *)(v4 + 32) + 32) + 40))(*(_QWORD *)(*(_QWORD *)(v4 + 32) + 32), MEMORY[0x1E0DE4EC8], v9);
    Aligned = google::protobuf::internal::ArenaImpl::AllocateAligned((google::protobuf::internal::ArenaImpl *)v4, v9);
  }
  else
  {
    Aligned = operator new(v8 + 8);
  }
  *Aligned = v4;
  v11 = Aligned + 1;
  a1[1] = v6;
  *((_QWORD *)a1 + 1) = v11;
  v12 = *a1;
  if ((int)v12 >= 1)
    memcpy(v11, v5 + 1, 8 * v12);
  if (v5)
  {
    if (!*v5)
      operator delete(v5);
  }
}

uint64_t google::protobuf::RepeatedField<long long>::RepeatedField(uint64_t a1, int *a2)
{
  int v4;
  void *v5;

  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  v4 = *a2;
  if (v4)
  {
    google::protobuf::RepeatedField<long long>::Reserve((unsigned int *)a1, v4);
    v5 = *(void **)(a1 + 8);
    *(_DWORD *)a1 += *a2;
    memcpy(v5, *((const void **)a2 + 1), 8 * *a2);
  }
  return a1;
}

void google::protobuf::RepeatedField<long long>::Swap(int *a1, int *a2)
{
  void **v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  void *v8;
  unint64_t v9;
  void *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *__dst[2];

  if (a1 != a2)
  {
    v4 = (void **)(a1 + 2);
    if (a1[1])
      v4 = (void **)((char *)*v4 - 8);
    v5 = *v4;
    v6 = (_QWORD *)*((_QWORD *)a2 + 1);
    if (a2[1])
      v6 = (_QWORD *)*(v6 - 1);
    if (v5 == v6)
    {
      v12 = *(_QWORD *)a1;
      v13 = *((_QWORD *)a1 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_QWORD *)a2 = v12;
      *((_QWORD *)a2 + 1) = v13;
    }
    else
    {
      __dst[0] = 0;
      __dst[1] = v6;
      if (*a1)
      {
        google::protobuf::RepeatedField<long long>::Reserve((unsigned int *)__dst, *a1);
        v7 = *a1;
        LODWORD(__dst[0]) += v7;
        memcpy(__dst[1], *((const void **)a1 + 1), 8 * v7);
      }
      *a1 = 0;
      if (*a2)
      {
        google::protobuf::RepeatedField<long long>::Reserve((unsigned int *)a1, *a2);
        v8 = (void *)*((_QWORD *)a1 + 1);
        *a1 += *a2;
        memcpy(v8, *((const void **)a2 + 1), 8 * *a2);
      }
      if (__dst == (void **)a2)
      {
        LODWORD(v11) = HIDWORD(__dst[0]);
      }
      else
      {
        v9 = *(_QWORD *)a2;
        v10 = (void *)*((_QWORD *)a2 + 1);
        *(_OWORD *)a2 = *(_OWORD *)__dst;
        __dst[0] = (void *)v9;
        __dst[1] = v10;
        v11 = HIDWORD(v9);
      }
      if ((int)v11 >= 1 && !*((_QWORD *)__dst[1] - 1))
        operator delete((char *)__dst[1] - 8);
    }
  }
}

void sub_1888965B8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, uint64_t a11)
{
  if (a10 >= 1 && !*(_QWORD *)(a11 - 8))
    operator delete((void *)(a11 - 8));
  _Unwind_Resume(exception_object);
}

void google::protobuf::RepeatedField<unsigned long long>::Swap(int *a1, int *a2)
{
  void **v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  void *v8;
  unint64_t v9;
  void *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *__dst[2];

  if (a1 != a2)
  {
    v4 = (void **)(a1 + 2);
    if (a1[1])
      v4 = (void **)((char *)*v4 - 8);
    v5 = *v4;
    v6 = (_QWORD *)*((_QWORD *)a2 + 1);
    if (a2[1])
      v6 = (_QWORD *)*(v6 - 1);
    if (v5 == v6)
    {
      v12 = *(_QWORD *)a1;
      v13 = *((_QWORD *)a1 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_QWORD *)a2 = v12;
      *((_QWORD *)a2 + 1) = v13;
    }
    else
    {
      __dst[0] = 0;
      __dst[1] = v6;
      if (*a1)
      {
        google::protobuf::RepeatedField<long long>::Reserve((unsigned int *)__dst, *a1);
        v7 = *a1;
        LODWORD(__dst[0]) += v7;
        memcpy(__dst[1], *((const void **)a1 + 1), 8 * v7);
      }
      *a1 = 0;
      if (*a2)
      {
        google::protobuf::RepeatedField<long long>::Reserve((unsigned int *)a1, *a2);
        v8 = (void *)*((_QWORD *)a1 + 1);
        *a1 += *a2;
        memcpy(v8, *((const void **)a2 + 1), 8 * *a2);
      }
      if (__dst == (void **)a2)
      {
        LODWORD(v11) = HIDWORD(__dst[0]);
      }
      else
      {
        v9 = *(_QWORD *)a2;
        v10 = (void *)*((_QWORD *)a2 + 1);
        *(_OWORD *)a2 = *(_OWORD *)__dst;
        __dst[0] = (void *)v9;
        __dst[1] = v10;
        v11 = HIDWORD(v9);
      }
      if ((int)v11 >= 1 && !*((_QWORD *)__dst[1] - 1))
        operator delete((char *)__dst[1] - 8);
    }
  }
}

void sub_188896700(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, uint64_t a11)
{
  if (a10 >= 1 && !*(_QWORD *)(a11 - 8))
    operator delete((void *)(a11 - 8));
  _Unwind_Resume(exception_object);
}

void google::protobuf::RepeatedField<float>::Swap(int *a1, int *a2)
{
  void **v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  void *v8;
  unint64_t v9;
  void *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *__dst[2];

  if (a1 != a2)
  {
    v4 = (void **)(a1 + 2);
    if (a1[1])
      v4 = (void **)((char *)*v4 - 8);
    v5 = *v4;
    v6 = (_QWORD *)*((_QWORD *)a2 + 1);
    if (a2[1])
      v6 = (_QWORD *)*(v6 - 1);
    if (v5 == v6)
    {
      v12 = *(_QWORD *)a1;
      v13 = *((_QWORD *)a1 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_QWORD *)a2 = v12;
      *((_QWORD *)a2 + 1) = v13;
    }
    else
    {
      __dst[0] = 0;
      __dst[1] = v6;
      if (*a1)
      {
        google::protobuf::RepeatedField<int>::Reserve((unsigned int *)__dst, *a1);
        v7 = *a1;
        LODWORD(__dst[0]) += v7;
        memcpy(__dst[1], *((const void **)a1 + 1), 4 * v7);
      }
      *a1 = 0;
      if (*a2)
      {
        google::protobuf::RepeatedField<int>::Reserve((unsigned int *)a1, *a2);
        v8 = (void *)*((_QWORD *)a1 + 1);
        *a1 += *a2;
        memcpy(v8, *((const void **)a2 + 1), 4 * *a2);
      }
      if (__dst == (void **)a2)
      {
        LODWORD(v11) = HIDWORD(__dst[0]);
      }
      else
      {
        v9 = *(_QWORD *)a2;
        v10 = (void *)*((_QWORD *)a2 + 1);
        *(_OWORD *)a2 = *(_OWORD *)__dst;
        __dst[0] = (void *)v9;
        __dst[1] = v10;
        v11 = HIDWORD(v9);
      }
      if ((int)v11 >= 1 && !*((_QWORD *)__dst[1] - 1))
        operator delete((char *)__dst[1] - 8);
    }
  }
}

void sub_188896848(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, uint64_t a11)
{
  if (a10 >= 1 && !*(_QWORD *)(a11 - 8))
    operator delete((void *)(a11 - 8));
  _Unwind_Resume(exception_object);
}

void google::protobuf::RepeatedField<double>::Swap(int *a1, int *a2)
{
  void **v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  void *v8;
  unint64_t v9;
  void *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *__dst[2];

  if (a1 != a2)
  {
    v4 = (void **)(a1 + 2);
    if (a1[1])
      v4 = (void **)((char *)*v4 - 8);
    v5 = *v4;
    v6 = (_QWORD *)*((_QWORD *)a2 + 1);
    if (a2[1])
      v6 = (_QWORD *)*(v6 - 1);
    if (v5 == v6)
    {
      v12 = *(_QWORD *)a1;
      v13 = *((_QWORD *)a1 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_QWORD *)a2 = v12;
      *((_QWORD *)a2 + 1) = v13;
    }
    else
    {
      __dst[0] = 0;
      __dst[1] = v6;
      if (*a1)
      {
        google::protobuf::RepeatedField<long long>::Reserve((unsigned int *)__dst, *a1);
        v7 = *a1;
        LODWORD(__dst[0]) += v7;
        memcpy(__dst[1], *((const void **)a1 + 1), 8 * v7);
      }
      *a1 = 0;
      if (*a2)
      {
        google::protobuf::RepeatedField<long long>::Reserve((unsigned int *)a1, *a2);
        v8 = (void *)*((_QWORD *)a1 + 1);
        *a1 += *a2;
        memcpy(v8, *((const void **)a2 + 1), 8 * *a2);
      }
      if (__dst == (void **)a2)
      {
        LODWORD(v11) = HIDWORD(__dst[0]);
      }
      else
      {
        v9 = *(_QWORD *)a2;
        v10 = (void *)*((_QWORD *)a2 + 1);
        *(_OWORD *)a2 = *(_OWORD *)__dst;
        __dst[0] = (void *)v9;
        __dst[1] = v10;
        v11 = HIDWORD(v9);
      }
      if ((int)v11 >= 1 && !*((_QWORD *)__dst[1] - 1))
        operator delete((char *)__dst[1] - 8);
    }
  }
}

void sub_188896990(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, uint64_t a11)
{
  if (a10 >= 1 && !*(_QWORD *)(a11 - 8))
    operator delete((void *)(a11 - 8));
  _Unwind_Resume(exception_object);
}

void google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>(_QWORD *a1)
{
  unsigned int *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    v3 = (uint64_t *)(v2 + 2);
    v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        v5 = *v3;
        if (*v3)
        {
          if (*(char *)(v5 + 23) < 0)
            operator delete(*(void **)v5);
          MEMORY[0x18D76437C](v5, 0x1012C40EC159624);
        }
        ++v3;
        --v4;
      }
      while (v4);
      v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

unsigned int *google::protobuf::internal::RepeatedPtrFieldBase::UnsafeArenaAddAllocated<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>(unsigned int *this, uint64_t a2)
{
  unsigned int *v3;
  int *v4;
  int v5;
  unsigned int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  int v11;
  uint64_t v12;

  v3 = this;
  v4 = (int *)*((_QWORD *)this + 2);
  if (!v4)
  {
    v7 = this[2];
    v5 = this[3];
    if (v7 > v5)
    {
      v4 = 0;
LABEL_16:
      v11 = *v4 + 1;
LABEL_17:
      *v4 = v11;
      goto LABEL_18;
    }
    goto LABEL_14;
  }
  v5 = this[2];
  v6 = this[3];
  v7 = v5;
  if (v5 == v6)
  {
LABEL_14:
    this = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)this, v5 - v7 + 1);
LABEL_15:
    v4 = (int *)*((_QWORD *)v3 + 2);
    goto LABEL_16;
  }
  v8 = *v4;
  if ((_DWORD)v8 != v6)
  {
    if (v5 >= (int)v8)
    {
      v11 = v8 + 1;
      goto LABEL_17;
    }
    *(_QWORD *)&v4[2 * v8 + 2] = *(_QWORD *)&v4[2 * v5 + 2];
    goto LABEL_15;
  }
  v9 = *(_QWORD *)&v4[2 * v5 + 2];
  if (v9)
    v10 = *(_QWORD *)this == 0;
  else
    v10 = 0;
  if (v10)
  {
    if (*(char *)(v9 + 23) < 0)
      operator delete(*(void **)v9);
    this = (unsigned int *)MEMORY[0x18D76437C](v9, 0x1012C40EC159624);
    v4 = (int *)*((_QWORD *)v3 + 2);
  }
LABEL_18:
  v12 = (int)v3[2];
  v3[2] = v12 + 1;
  *(_QWORD *)&v4[2 * v12 + 2] = a2;
  return this;
}

unsigned int *google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend(google::protobuf::internal::RepeatedPtrFieldBase *this, int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int *v5;
  uint64_t v7;
  int v8;
  unsigned int v9;
  uint64_t v10;
  unint64_t v11;
  unsigned int *Aligned;
  uint64_t v13;

  v2 = *((_DWORD *)this + 2);
  v3 = *((_DWORD *)this + 3);
  v4 = v2 + a2;
  v5 = (unsigned int *)*((_QWORD *)this + 2);
  if (v3 < v2 + a2)
  {
    v7 = *(_QWORD *)this;
    v8 = 2 * v3;
    if (2 * v3 <= v4)
      v8 = v4;
    if (v8 <= 4)
      v9 = 4;
    else
      v9 = v8;
    v10 = 8 * v9;
    if (v7)
    {
      v11 = (v10 + 15) & 0x7FFFFFFF8;
      if ((*(_BYTE *)(v7 + 24) & 1) != 0)
        (*(void (**)(_QWORD, _QWORD, unint64_t))(**(_QWORD **)(*(_QWORD *)(v7 + 32) + 32) + 40))(*(_QWORD *)(*(_QWORD *)(v7 + 32) + 32), MEMORY[0x1E0DE4EC8], v11);
      Aligned = (unsigned int *)google::protobuf::internal::ArenaImpl::AllocateAligned((google::protobuf::internal::ArenaImpl *)v7, v11);
    }
    else
    {
      Aligned = (unsigned int *)operator new(v10 + 8);
    }
    *((_QWORD *)this + 2) = Aligned;
    *((_DWORD *)this + 3) = v9;
    if (v5 && (v13 = *v5, (int)v13 >= 1))
    {
      memcpy(Aligned + 2, v5 + 2, 8 * v13);
      Aligned = (unsigned int *)*((_QWORD *)this + 2);
      *Aligned = *v5;
      if (!v7)
        goto LABEL_17;
    }
    else
    {
      *Aligned = 0;
      if (!v7)
      {
LABEL_17:
        operator delete(v5);
        Aligned = (unsigned int *)*((_QWORD *)this + 2);
      }
    }
    v2 = *((_DWORD *)this + 2);
    v5 = Aligned;
  }
  return &v5[2 * v2 + 2];
}

void google::protobuf::internal::RepeatedPtrFieldBase::SwapFallback<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>(uint64_t a1, unint64_t *a2)
{
  unint64_t v4;
  int v5;
  const std::string **v6;
  unsigned int *v7;
  int v8;
  int v9;
  std::string::size_type *v10;
  const std::string **v11;
  unsigned int *v12;
  int v13;
  int *v14;
  std::string::size_type v15;
  std::string::size_type v16;
  std::string v17;

  v4 = *a2;
  v17.__r_.__value_.__r.__words[2] = 0;
  *(_OWORD *)&v17.__r_.__value_.__l.__data_ = v4;
  v5 = *(_DWORD *)(a1 + 8);
  if (v5)
  {
    v6 = (const std::string **)(*(_QWORD *)(a1 + 16) + 8);
    v7 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)&v17, v5);
    google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>(&v17, (std::string **)v7, v6, v5, *(_DWORD *)v17.__r_.__value_.__r.__words[2] - LODWORD(v17.__r_.__value_.__r.__words[1]));
    v8 = LODWORD(v17.__r_.__value_.__r.__words[1]) + v5;
    LODWORD(v17.__r_.__value_.__r.__words[1]) = v8;
    if (*(_DWORD *)v17.__r_.__value_.__r.__words[2] < v8)
      *(_DWORD *)v17.__r_.__value_.__r.__words[2] = v8;
  }
  google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>(a1);
  v10 = a2 + 1;
  v9 = *((_DWORD *)a2 + 2);
  if (v9)
  {
    v11 = (const std::string **)(a2[2] + 8);
    v12 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)a1, v9);
    google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((std::string *)a1, (std::string **)v12, v11, v9, **(_DWORD **)(a1 + 16) - *(_DWORD *)(a1 + 8));
    v13 = *(_DWORD *)(a1 + 8) + v9;
    *(_DWORD *)(a1 + 8) = v13;
    v14 = *(int **)(a1 + 16);
    if (*v14 < v13)
      *v14 = v13;
  }
  v15 = *v10;
  v16 = v10[1];
  *(_OWORD *)v10 = *(_OWORD *)&v17.__r_.__value_.__r.__words[1];
  v17.__r_.__value_.__l.__size_ = v15;
  v17.__r_.__value_.__r.__words[2] = v16;
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>(&v17);
}

unsigned int *google::protobuf::internal::RepeatedPtrFieldBase::AddAllocatedInternal<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>(unsigned int *result, uint64_t a2)
{
  int *v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;

  if (*(_QWORD *)result)
    return google::protobuf::internal::RepeatedPtrFieldBase::AddAllocatedSlowWithCopy<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>(result, a2, 0, *(google::protobuf::internal::ArenaImpl **)result);
  v2 = (int *)*((_QWORD *)result + 2);
  if (!v2)
    return google::protobuf::internal::RepeatedPtrFieldBase::AddAllocatedSlowWithCopy<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>(result, a2, 0, *(google::protobuf::internal::ArenaImpl **)result);
  v3 = *v2;
  if ((int)v3 >= (int)result[3])
    return google::protobuf::internal::RepeatedPtrFieldBase::AddAllocatedSlowWithCopy<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>(result, a2, 0, *(google::protobuf::internal::ArenaImpl **)result);
  v4 = v2 + 2;
  v5 = (int)result[2];
  if ((int)v5 < (int)v3)
    *(_QWORD *)&v4[2 * v3] = *(_QWORD *)&v4[2 * v5];
  *(_QWORD *)&v4[2 * v5] = a2;
  result[2] = v5 + 1;
  ++**((_DWORD **)result + 2);
  return result;
}

unsigned int *google::protobuf::internal::RepeatedPtrFieldBase::AddAllocatedSlowWithCopy<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>(unsigned int *a1, uint64_t a2, google::protobuf::internal::ArenaImpl *a3, google::protobuf::internal::ArenaImpl *this)
{
  std::string *AlignedAndAddCleanup;
  uint64_t v9;

  if (!a3 && this)
  {
    google::protobuf::Arena::Own<std::string>((char *)this, (void *)a2);
LABEL_9:
    v9 = a2;
    return google::protobuf::internal::RepeatedPtrFieldBase::UnsafeArenaAddAllocated<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>(a1, v9);
  }
  if (this == a3)
    goto LABEL_9;
  if (this)
  {
    if ((*((_BYTE *)this + 24) & 1) != 0)
    AlignedAndAddCleanup = (std::string *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x18uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<std::string>);
  }
  else
  {
    AlignedAndAddCleanup = (std::string *)operator new();
  }
  v9 = (uint64_t)AlignedAndAddCleanup;
  AlignedAndAddCleanup->__r_.__value_.__r.__words[0] = 0;
  AlignedAndAddCleanup->__r_.__value_.__l.__size_ = 0;
  AlignedAndAddCleanup->__r_.__value_.__r.__words[2] = 0;
  std::string::operator=(AlignedAndAddCleanup, (const std::string *)a2);
  if (!a3)
  {
    if (*(char *)(a2 + 23) < 0)
      operator delete(*(void **)a2);
    MEMORY[0x18D76437C](a2, 0x1012C40EC159624);
  }
  return google::protobuf::internal::RepeatedPtrFieldBase::UnsafeArenaAddAllocated<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>(a1, v9);
}

char *google::protobuf::Arena::Own<std::string>(char *result, void *a2)
{
  if (a2)
    return google::protobuf::internal::ArenaImpl::AddCleanup((google::protobuf::internal::ArenaImpl *)result, a2, (void (*)(void *))google::protobuf::internal::arena_delete_object<std::string>);
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<std::string>(uint64_t result)
{
  if (result)
  {
    if (*(char *)(result + 23) < 0)
      operator delete(*(void **)result);
    JUMPOUT(0x18D76437CLL);
  }
  return result;
}

void google::protobuf::internal::VerifyVersion(google::protobuf::internal *this, int a2, const std::string::value_type *a3, const char *a4)
{
  int v5;
  const std::string::value_type *v7;
  std::string::size_type v8;
  const std::string::value_type *p_p;
  std::string::size_type v10;
  const std::string::value_type *v11;
  std::string::size_type v12;
  const std::string::value_type *v13;
  std::string::size_type v14;
  void *__p;
  std::string::size_type v16;
  unsigned __int8 v17;
  void *v18;
  std::string::size_type v19;
  unsigned __int8 v20;
  int v21;
  const char *v22;
  int v23;
  std::string v24;
  char __str[127];
  char v26;
  uint64_t v27;

  v5 = (int)this;
  v27 = *MEMORY[0x1E0C80C00];
  if (a2 > 3014000)
  {
    v21 = 3;
    v22 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/stubs/common.cc";
    v23 = 78;
    memset(&v24, 0, sizeof(v24));
    std::string::append(&v24, "This program requires version ");
    google::protobuf::internal::VersionString((google::protobuf::internal *)&v18, a2);
    if ((v20 & 0x80u) == 0)
      v7 = (const std::string::value_type *)&v18;
    else
      v7 = (const std::string::value_type *)v18;
    if ((v20 & 0x80u) == 0)
      v8 = v20;
    else
      v8 = v19;
    std::string::append(&v24, v7, v8);
    std::string::append(&v24, " of the Protocol Buffer runtime library, but the installed version is ");
    snprintf(__str, 0x80uLL, "%d.%d.%d", 3, 14, 0);
    v26 = 0;
    std::string::basic_string[abi:ne180100]<0>(&__p, __str);
    if ((v17 & 0x80u) == 0)
      p_p = (const std::string::value_type *)&__p;
    else
      p_p = (const std::string::value_type *)__p;
    if ((v17 & 0x80u) == 0)
      v10 = v17;
    else
      v10 = v16;
    std::string::append(&v24, p_p, v10);
    std::string::append(&v24, ".  Please update your library.  If you compiled the program yourself, make sure that your headers are from the same version of Protocol Buffers as your link-time library.  (Version verification failed in \"");
    std::string::append(&v24, a3);
    std::string::append(&v24, "\".)");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v21);
    if ((char)v17 < 0)
      operator delete(__p);
    if ((char)v20 < 0)
      operator delete(v18);
    if (SHIBYTE(v24.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v24.__r_.__value_.__l.__data_);
  }
  if (v5 < 3014000)
  {
    v21 = 3;
    v22 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/stubs/common.cc";
    v23 = 89;
    memset(&v24, 0, sizeof(v24));
    std::string::append(&v24, "This program was compiled against version ");
    google::protobuf::internal::VersionString((google::protobuf::internal *)&v18, v5);
    if ((v20 & 0x80u) == 0)
      v11 = (const std::string::value_type *)&v18;
    else
      v11 = (const std::string::value_type *)v18;
    if ((v20 & 0x80u) == 0)
      v12 = v20;
    else
      v12 = v19;
    std::string::append(&v24, v11, v12);
    std::string::append(&v24, " of the Protocol Buffer runtime library, which is not compatible with the installed version (");
    snprintf(__str, 0x80uLL, "%d.%d.%d", 3, 14, 0);
    v26 = 0;
    std::string::basic_string[abi:ne180100]<0>(&__p, __str);
    if ((v17 & 0x80u) == 0)
      v13 = (const std::string::value_type *)&__p;
    else
      v13 = (const std::string::value_type *)__p;
    if ((v17 & 0x80u) == 0)
      v14 = v17;
    else
      v14 = v16;
    std::string::append(&v24, v13, v14);
    std::string::append(&v24, ").  Contact the program author for an update.  If you compiled the program yourself, make sure that your headers are from the same version of Protocol Buffers as your link-time library.  (Version verification failed in \"");
    std::string::append(&v24, a3);
    std::string::append(&v24, "\".)");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v21);
    if ((char)v17 < 0)
      operator delete(__p);
    if ((char)v20 < 0)
      operator delete(v18);
    if (SHIBYTE(v24.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v24.__r_.__value_.__l.__data_);
  }
}

void sub_188897238(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32)
{
  if (a17 < 0)
    operator delete(__p);
  if (a23 < 0)
    operator delete(a18);
  if (a32 < 0)
    operator delete(a27);
  _Unwind_Resume(exception_object);
}

_QWORD *google::protobuf::internal::VersionString(google::protobuf::internal *this, int a2)
{
  char __str[128];
  uint64_t v5;

  v5 = *MEMORY[0x1E0C80C00];
  snprintf(__str, 0x80uLL, "%d.%d.%d", a2 / 1000000, a2 / 1000 % 1000, a2 % 1000);
  __str[127] = 0;
  return std::string::basic_string[abi:ne180100]<0>(this, __str);
}

uint64_t google::protobuf::internal::DefaultLogHandler(uint64_t result, const char *a2, int a3, uint64_t a4)
{
  FILE **v4;
  const char *v5;

  if ((result & 0x80000000) == 0)
  {
    v4 = (FILE **)MEMORY[0x1E0C80C10];
    if (*(char *)(a4 + 23) >= 0)
      v5 = (const char *)a4;
    else
      v5 = *(const char **)a4;
    fprintf((FILE *)*MEMORY[0x1E0C80C10], "[libprotobuf %s %s:%d] %s\n", google::protobuf::internal::DefaultLogHandler(google::protobuf::LogLevel,char const*,int,std::string const&)::level_names[result], a2, a3, v5);
    return fflush(*v4);
  }
  return result;
}

std::string *google::protobuf::internal::LogMessage::operator<<(std::string *a1, google::protobuf::StringPiece *this)
{
  void **v3;
  std::string::size_type v4;
  void *__p[2];
  unsigned __int8 v7;

  google::protobuf::StringPiece::ToString(this, __p);
  if ((v7 & 0x80u) == 0)
    v3 = __p;
  else
    v3 = (void **)__p[0];
  if ((v7 & 0x80u) == 0)
    v4 = v7;
  else
    v4 = (std::string::size_type)__p[1];
  std::string::append(a1 + 1, (const std::string::value_type *)v3, v4);
  if ((char)v7 < 0)
    operator delete(__p[0]);
  return a1;
}

void sub_188897444(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::internal::LogMessage::Finish(google::protobuf::internal::LogMessage *this)
{
  uint64_t result;
  void *exception;

  result = google::protobuf::internal::DefaultLogHandler(*(unsigned int *)this, *((const char **)this + 1), *((_DWORD *)this + 4), (uint64_t)this + 24);
  if (*(_DWORD *)this == 3)
  {
    exception = __cxa_allocate_exception(0x30uLL);
    google::protobuf::FatalException::FatalException(exception, *((_QWORD *)this + 1), *((unsigned int *)this + 4), (char *)this + 24);
  }
  return result;
}

void sub_1888974DC(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void google::protobuf::FatalException::~FatalException(std::exception *this)
{
  this->__vftable = (std::exception_vtbl *)&off_1E1BF7910;
  if (SHIBYTE(this[5].__vftable) < 0)
    operator delete(this[3].__vftable);
  std::exception::~exception(this);
}

{
  google::protobuf::FatalException::~FatalException(this);
  JUMPOUT(0x18D76437CLL);
}

uint64_t google::protobuf::FatalException::what(google::protobuf::FatalException *this)
{
  uint64_t result;

  result = (uint64_t)this + 24;
  if (*((char *)this + 47) < 0)
    return *(_QWORD *)result;
  return result;
}

uint64_t google::protobuf::FatalException::FatalException(uint64_t a1, uint64_t a2, int a3, __int128 *a4)
{
  std::string *v5;
  __int128 v6;

  *(_QWORD *)a1 = &off_1E1BF7910;
  *(_QWORD *)(a1 + 8) = a2;
  *(_DWORD *)(a1 + 16) = a3;
  v5 = (std::string *)(a1 + 24);
  if (*((char *)a4 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(v5, *(const std::string::value_type **)a4, *((_QWORD *)a4 + 1));
  }
  else
  {
    v6 = *a4;
    v5->__r_.__value_.__r.__words[2] = *((_QWORD *)a4 + 2);
    *(_OWORD *)&v5->__r_.__value_.__l.__data_ = v6;
  }
  return a1;
}

void sub_1888975CC(_Unwind_Exception *a1)
{
  std::exception *v1;

  std::exception::~exception(v1);
  _Unwind_Resume(a1);
}

std::string *google::protobuf::StripWhitespace(std::string *this)
{
  std::string *v1;
  std::string::size_type size;
  std::string::size_type v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  int v7;

  v1 = this;
  if (SHIBYTE(this->__r_.__value_.__r.__words[2]) < 0)
    size = this->__r_.__value_.__l.__size_;
  else
    LODWORD(size) = HIBYTE(this->__r_.__value_.__r.__words[2]);
  if ((int)size < 1)
  {
    if ((_DWORD)size)
      return this;
    goto LABEL_22;
  }
  v3 = 0;
  while (1)
  {
    this = (std::string *)std::string::at(v1, v3);
    v4 = this->__r_.__value_.__s.__data_[0];
    if ((v4 - 9) >= 5 && v4 != 32)
      break;
    if (size == ++v3)
      goto LABEL_22;
  }
  if ((_DWORD)size == (_DWORD)v3)
  {
LABEL_22:
    if (SHIBYTE(v1->__r_.__value_.__r.__words[2]) < 0)
    {
      *v1->__r_.__value_.__l.__data_ = 0;
      v1->__r_.__value_.__l.__size_ = 0;
    }
    else
    {
      v1->__r_.__value_.__s.__data_[0] = 0;
      *((_BYTE *)&v1->__r_.__value_.__s + 23) = 0;
    }
    return this;
  }
  if ((_DWORD)v3)
  {
    this = std::string::erase(v1, 0, v3);
    LODWORD(size) = size - v3;
  }
  v5 = (size - 1);
  if ((int)size >= 1)
  {
    v6 = 0;
    while (1)
    {
      this = (std::string *)std::string::at(v1, v5 + v6);
      v7 = this->__r_.__value_.__s.__data_[0];
      if ((v7 - 9) >= 5 && v7 != 32)
        break;
      --v6;
      if (v5 + v6 + 1 <= 0)
        return this;
    }
    if ((_DWORD)v6)
      return std::string::erase(v1, (v5 + v6 + 1), 0xFFFFFFFFFFFFFFFFLL);
  }
  return this;
}

void google::protobuf::SplitStringUsing(unsigned __int8 *__src, unint64_t a2, char *__s, std::vector<std::string> *a4)
{
  unsigned __int8 *v7;
  int v8;
  size_t v9;
  const char *v10;
  uint64_t v11;
  uint64_t first_not_of;
  unint64_t v13;
  size_t v14;
  const char *v15;
  uint64_t v16;
  uint64_t first_of;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  size_t v21;
  const char *v22;
  uint64_t v23;
  unint64_t v24;
  char *v25;
  char *v26;
  unsigned __int8 *v27;
  char *v28;
  int v29;
  std::vector<std::string> *v30;
  std::vector<std::string> *v31;
  unint64_t v32;
  void *__p[2];
  char v34;
  _QWORD v35[2];

  v7 = __src;
  v35[0] = __src;
  v35[1] = a2;
  v8 = *__s;
  if (*__s && !__s[1])
  {
    if (a2)
    {
      v25 = (char *)&__src[a2];
      v26 = (char *)&__src[a2];
      do
      {
        if (*v7 == v8)
        {
          v27 = v7 + 1;
        }
        else
        {
          v28 = (char *)(v7 + 1);
          while (v28 != v25)
          {
            v29 = *v28++;
            if (v29 == v8)
            {
              v27 = (unsigned __int8 *)(v28 - 1);
              goto LABEL_35;
            }
          }
          v27 = (unsigned __int8 *)v26;
LABEL_35:
          std::string::basic_string[abi:ne180100](__p, v7, v27 - v7);
          v31 = a4;
          std::back_insert_iterator<std::vector<std::string>>::operator=[abi:ne180100](&v31, (__int128 *)__p);
          if (v34 < 0)
            operator delete(__p[0]);
        }
        v7 = v27;
      }
      while (v27 != (unsigned __int8 *)v25);
    }
  }
  else
  {
    v9 = strlen(__s);
    v11 = v9;
    if ((v9 & 0x8000000000000000) != 0)
      google::protobuf::StringPiece::LogFatalSizeTooBig((google::protobuf::StringPiece *)v9, "size_t to int conversion", v10);
    first_not_of = google::protobuf::StringPiece::find_first_not_of(v35, (unsigned __int8 *)__s, v11, 0);
    if (first_not_of != -1)
    {
      v13 = first_not_of;
      while (1)
      {
        v14 = strlen(__s);
        v16 = v14;
        if ((v14 & 0x8000000000000000) != 0)
          google::protobuf::StringPiece::LogFatalSizeTooBig((google::protobuf::StringPiece *)v14, "size_t to int conversion", v15);
        first_of = google::protobuf::StringPiece::find_first_of((google::protobuf::StringPiece *)v35, (unsigned __int8 *)__s, v16, v13);
        if (first_of == -1)
          break;
        v18 = first_of;
        v19 = first_of - v13;
        if (a2 >= v13)
          v20 = v13;
        else
          v20 = a2;
        if (a2 - v20 < v19)
          v19 = a2 - v20;
        v31 = (std::vector<std::string> *)&v7[v20];
        v32 = v19;
        google::protobuf::StringPiece::ToString((google::protobuf::StringPiece *)&v31, __p);
        v30 = a4;
        std::back_insert_iterator<std::vector<std::string>>::operator=[abi:ne180100](&v30, (__int128 *)__p);
        if (v34 < 0)
          operator delete(__p[0]);
        v21 = strlen(__s);
        v23 = v21;
        if ((v21 & 0x8000000000000000) != 0)
          google::protobuf::StringPiece::LogFatalSizeTooBig((google::protobuf::StringPiece *)v21, "size_t to int conversion", v22);
        v13 = google::protobuf::StringPiece::find_first_not_of(v35, (unsigned __int8 *)__s, v23, v18);
        if (v13 == -1)
          return;
      }
      if (a2 >= v13)
        v24 = v13;
      else
        v24 = a2;
      v31 = (std::vector<std::string> *)&v7[v24];
      v32 = a2 - v24;
      google::protobuf::StringPiece::ToString((google::protobuf::StringPiece *)&v31, __p);
      v30 = a4;
      std::back_insert_iterator<std::vector<std::string>>::operator=[abi:ne180100](&v30, (__int128 *)__p);
      if (v34 < 0)
        operator delete(__p[0]);
    }
  }
}

void sub_18889793C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::UnescapeCEscapeSequences(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 *i;
  int v3;
  unsigned __int8 *v4;
  unsigned __int8 *v5;
  unsigned __int8 v6;
  char v7;
  unsigned __int8 v8;
  int v9;
  char v10;
  unsigned int v11;
  unsigned __int8 *v12;
  unsigned __int8 v13;
  unsigned __int8 v14;
  unsigned int v16;
  char v17;

  if (a1 == a2)
  {
    for (i = a1; *i && *i != 92; ++i)
      ;
    a1 = i;
  }
  else
  {
    i = a2;
  }
  while (1)
  {
    v3 = *a1;
    if (v3 != 92)
    {
      if (!*a1)
        goto LABEL_57;
      goto LABEL_55;
    }
    v4 = a1 + 1;
    v3 = (char)a1[1];
    if (v3 <= 62)
      break;
    if (v3 > 97)
    {
      switch(a1[1])
      {
        case 'n':
          LOBYTE(v3) = 10;
          goto LABEL_54;
        case 'o':
        case 'p':
        case 'q':
        case 's':
        case 'u':
        case 'w':
          goto LABEL_56;
        case 'r':
          LOBYTE(v3) = 13;
          goto LABEL_54;
        case 't':
          LOBYTE(v3) = 9;
          goto LABEL_54;
        case 'v':
          LOBYTE(v3) = 11;
          goto LABEL_54;
        case 'x':
          goto LABEL_28;
        default:
          if (v3 == 102)
          {
            LOBYTE(v3) = 12;
          }
          else
          {
            if (v3 != 98)
              goto LABEL_56;
            LOBYTE(v3) = 8;
          }
          break;
      }
      goto LABEL_54;
    }
    if (v3 > 91)
    {
      if (v3 != 92)
      {
        if (v3 != 97)
          goto LABEL_56;
        LOBYTE(v3) = 7;
      }
LABEL_54:
      a1 = v4;
LABEL_55:
      *i++ = v3;
      v4 = a1;
      goto LABEL_56;
    }
    if (v3 == 63)
      goto LABEL_54;
    if (v3 != 88)
      goto LABEL_56;
LABEL_28:
    if ((a1[2] - 48) < 0xAu || (v11 = a1[2] - 65, v11 <= 0x25) && ((1 << v11) & 0x3F0000003FLL) != 0)
    {
      LOBYTE(v3) = 0;
      v12 = a1 + 1;
      while (1)
      {
        v14 = *++v12;
        v13 = v14;
        if ((v14 - 48) >= 0xAu
          && (v13 - 65 > 0x25 || ((1 << (v13 - 65)) & 0x3F0000003FLL) == 0))
        {
          break;
        }
        v16 = v13;
        v17 = v13 + 9;
        if (v16 <= 0x39)
          v17 = v16;
        v4 = v12;
        LOBYTE(v3) = v17 & 0xF | (16 * v3);
      }
      goto LABEL_54;
    }
LABEL_56:
    a1 = v4 + 1;
  }
  if (v3 > 47)
  {
    if ((v3 - 48) >= 8)
      goto LABEL_56;
    LOBYTE(v3) = v3 - 48;
    v6 = a1[2];
    v5 = a1 + 2;
    v7 = v6 + 8 * v3 - 48;
    if ((v6 & 0xF8) == 0x30)
    {
      v4 = v5;
      LOBYTE(v3) = v7;
    }
    v8 = v4[1];
    v9 = v8 & 0xF8;
    v10 = v8 + 8 * v3 - 48;
    if (v9 == 48)
      a1 = v4 + 1;
    else
      a1 = v4;
    if (v9 == 48)
      LOBYTE(v3) = v10;
    goto LABEL_55;
  }
  if (v3 == 34 || v3 == 39)
    goto LABEL_54;
  if (a1[1])
    goto LABEL_56;
LABEL_57:
  *i = 0;
  return ((_DWORD)i - (_DWORD)a2);
}

void google::protobuf::UnescapeCEscapeString(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  unsigned __int8 *v4;
  unsigned __int8 *v5;
  int v6;

  v4 = (unsigned __int8 *)operator new[]();
  if (*(char *)(a1 + 23) >= 0)
    v5 = (unsigned __int8 *)a1;
  else
    v5 = *(unsigned __int8 **)a1;
  v6 = google::protobuf::UnescapeCEscapeSequences(v5, v4);
  std::string::basic_string[abi:ne180100](a2, v4, v6);
  JUMPOUT(0x18D764364);
}

void sub_188897C00(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x18D764364](v1, 0x1000C8077774924);
  _Unwind_Resume(a1);
}

void google::protobuf::CEscapeAndAppend(std::string::value_type *__s, int64_t __n, std::string *this)
{
  std::string *v3;
  uint64_t v4;
  std::string::value_type *v5;
  uint64_t v6;
  std::string::value_type *v7;
  int64_t v8;
  int v9;
  std::string::size_type size;
  _BYTE *v11;
  unsigned int v12;
  int v13;

  v3 = this;
  v4 = __n;
  v5 = __s;
  if (__n < 1)
  {
    v6 = 0;
  }
  else
  {
    v6 = 0;
    v7 = __s;
    v8 = __n;
    do
    {
      v9 = *v7++;
      v6 += google::protobuf::CEscapedLength(google::protobuf::StringPiece)::c_escaped_len[v9];
      --v8;
    }
    while (v8);
  }
  if (v6 == __n)
  {
    std::string::append(this, __s, __n);
    return;
  }
  if (SHIBYTE(this->__r_.__value_.__r.__words[2]) < 0)
    size = this->__r_.__value_.__l.__size_;
  else
    size = HIBYTE(this->__r_.__value_.__r.__words[2]);
  std::string::resize(this, size + v6, 0);
  if (SHIBYTE(v3->__r_.__value_.__r.__words[2]) < 0)
    v3 = (std::string *)v3->__r_.__value_.__r.__words[0];
  if (v4 >= 1)
  {
    v11 = (char *)v3 + size;
    do
    {
      v13 = *v5++;
      v12 = v13;
      if (v13 > 33)
      {
        switch(v12)
        {
          case '"':
            *(_WORD *)v11 = 8796;
            v11 += 2;
            break;
          case '\'':
            *(_WORD *)v11 = 10076;
            v11 += 2;
            break;
          case '\\':
            *(_WORD *)v11 = 23644;
            v11 += 2;
            break;
          default:
LABEL_28:
            if (v12 - 32 >= 0x5F)
            {
              *v11 = 92;
              v11[1] = (v12 >> 6) | 0x30;
              v11[2] = (v12 >> 3) & 7 | 0x30;
              v11[3] = v12 & 7 | 0x30;
              v11 += 4;
            }
            else
            {
              *v11++ = v12;
            }
            break;
        }
      }
      else
      {
        switch(v12)
        {
          case 9u:
            *(_WORD *)v11 = 29788;
            v11 += 2;
            break;
          case 0xAu:
            *(_WORD *)v11 = 28252;
            v11 += 2;
            break;
          case 0xDu:
            *(_WORD *)v11 = 29276;
            v11 += 2;
            break;
          default:
            goto LABEL_28;
        }
      }
      --v4;
    }
    while (v4);
  }
}

void google::protobuf::CEscape(uint64_t *a1@<X0>, const char *a2@<X2>, std::string *a3@<X8>)
{
  std::string::value_type *v4[2];

  a3->__r_.__value_.__r.__words[0] = 0;
  a3->__r_.__value_.__l.__size_ = 0;
  a3->__r_.__value_.__r.__words[2] = 0;
  google::protobuf::StringPiece::StringPiece<std::allocator<char>>(v4, a1, a2);
  google::protobuf::CEscapeAndAppend(v4[0], (int64_t)v4[1], a3);
}

void sub_188897DFC(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (*(char *)(v1 + 23) < 0)
    operator delete(*(void **)v1);
  _Unwind_Resume(exception_object);
}

_BYTE *google::protobuf::FastUInt32ToBufferLeft(google::protobuf *this, _BYTE *a2, char *a3)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  _BYTE *v7;

  if (this >= 0x3B9ACA00)
  {
    v3 = this / 0x5F5E100uLL;
    *(_WORD *)a2 = google::protobuf::two_ASCII_digits[v3];
    a2 += 2;
    goto LABEL_3;
  }
  if (this > 0x63)
  {
    if (this >> 4 <= 0x270)
    {
      if (this <= 0x3E7)
      {
        LODWORD(v6) = (unsigned __int16)this / 0x64u;
        *a2++ = v6 + 48;
        goto LABEL_9;
      }
LABEL_8:
      v6 = this / 0x64uLL;
      *(_WORD *)a2 = google::protobuf::two_ASCII_digits[v6];
      a2 += 2;
LABEL_9:
      LODWORD(this) = (_DWORD)this - 100 * v6;
      goto LABEL_10;
    }
    if (this < 0xF4240)
    {
      if (this >> 5 <= 0xC34)
      {
        LODWORD(v5) = this / 0x2710;
        *a2++ = this / 0x2710 + 48;
        goto LABEL_7;
      }
LABEL_6:
      v5 = this / 0x2710uLL;
      *(_WORD *)a2 = google::protobuf::two_ASCII_digits[v5];
      a2 += 2;
LABEL_7:
      LODWORD(this) = (_DWORD)this - 10000 * v5;
      goto LABEL_8;
    }
    if (this < 0x5F5E100)
    {
      if (this <= 0x98967F)
      {
        LODWORD(v4) = this / 0xF4240;
        *a2++ = this / 0xF4240 + 48;
        goto LABEL_5;
      }
LABEL_4:
      v4 = this / 0xF4240uLL;
      *(_WORD *)a2 = google::protobuf::two_ASCII_digits[v4];
      a2 += 2;
LABEL_5:
      LODWORD(this) = (_DWORD)this - 1000000 * v4;
      goto LABEL_6;
    }
    LODWORD(v3) = this / 0x5F5E100;
    *a2++ = this / 0x5F5E100 + 48;
LABEL_3:
    LODWORD(this) = (_DWORD)this - 100000000 * v3;
    goto LABEL_4;
  }
  if (this <= 9)
  {
    *a2 = (_BYTE)this + 48;
    v7 = a2 + 1;
    goto LABEL_11;
  }
LABEL_10:
  *(_WORD *)a2 = google::protobuf::two_ASCII_digits[this];
  v7 = a2 + 2;
LABEL_11:
  *v7 = 0;
  return v7;
}

_BYTE *google::protobuf::FastUInt64ToBufferLeft(google::protobuf *this, _BYTE *a2, char *a3)
{
  int v3;
  unint64_t v5;
  _WORD *v6;
  unsigned int v7;

  v3 = (int)this;
  if (!((unint64_t)this >> 32))
    return google::protobuf::FastUInt32ToBufferLeft(this, a2, a3);
  v5 = (unint64_t)this / 0x3B9ACA00;
  v6 = (_WORD *)google::protobuf::FastUInt64ToBufferLeft((google::protobuf *)((unint64_t)this / 0x3B9ACA00), (unint64_t)a2, a3);
  v7 = v3 - 1000000000 * v5;
  *v6 = google::protobuf::two_ASCII_digits[v7 / 0x989680uLL];
  v7 %= 0x989680u;
  v6[1] = google::protobuf::two_ASCII_digits[v7 / 0x186A0uLL];
  v7 %= 0x186A0u;
  v6[2] = google::protobuf::two_ASCII_digits[v7 / 0x3E8uLL];
  v7 %= 0x3E8u;
  v6[3] = google::protobuf::two_ASCII_digits[v7 / 0xAuLL];
  v6[4] = (v7 % 0xA + 48);
  return (char *)v6 + 9;
}

google::protobuf *google::protobuf::DoubleToBuffer(google::protobuf *this, double a2, char *a3)
{
  int v5;
  char **v7;
  char *v8;

  if (a2 == INFINITY)
  {
    v5 = 6712937;
LABEL_5:
    *(_DWORD *)this = v5;
    return this;
  }
  if (a2 == -INFINITY)
  {
    *((_BYTE *)this + 4) = 0;
    v5 = 1718511917;
    goto LABEL_5;
  }
  snprintf((char *)this, 0x20uLL, "%.*g", 15, a2);
  if (google::protobuf::internal::NoLocaleStrtod(this, 0, v7) != a2)
    snprintf((char *)this, 0x20uLL, "%.*g", 17, a2);
  AddrObjGoogle::protobuf::DelocalizeRadix(this, v8);
  return this;
}

google::protobuf *google::protobuf::FloatToBuffer(google::protobuf *this, float a2, char *a3)
{
  int v5;
  float *v7;
  char *v8;
  char v9[4];

  if (a2 == INFINITY)
  {
    v5 = 6712937;
LABEL_5:
    *(_DWORD *)this = v5;
    return this;
  }
  if (a2 == -INFINITY)
  {
    *((_BYTE *)this + 4) = 0;
    v5 = 1718511917;
    goto LABEL_5;
  }
  snprintf((char *)this, 0x18uLL, "%.*g", 6, a2);
  *(float *)v9 = 0.0;
  if (!AddrObjGoogle::protobuf::safe_strtof(this, (float *)v9, v7) || *(float *)v9 != a2)
    snprintf((char *)this, 0x18uLL, "%.*g", 9, a2);
  AddrObjGoogle::protobuf::DelocalizeRadix(this, v8);
  return this;
}

double google::protobuf::internal::NoLocaleStrtod(google::protobuf::internal *this, char *a2, char **a3)
{
  double v5;
  char *v6;
  int v7;
  size_t v8;
  const std::string::value_type *v9;
  std::string *v10;
  char v11;
  int v12;
  int v13;
  std::string v15;
  char *v16;
  char *v17;
  const char *v18;
  int v19;
  std::string __p;
  char __str;
  std::string::value_type v22[15];
  uint64_t v23;

  v23 = *MEMORY[0x1E0C80C00];
  v16 = 0;
  v5 = strtod((const char *)this, &v16);
  v6 = v16;
  if (a2)
    *(_QWORD *)a2 = v16;
  if (*v6 == 46)
  {
    v7 = snprintf(&__str, 0x10uLL, "%.1f", 1.5);
    if (__str != 49)
    {
      LODWORD(v17) = 3;
      v18 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/stubs/strutil.cc";
      v19 = 2425;
      memset(&__p, 0, sizeof(__p));
      std::string::append(&__p, "CHECK failed: (temp[0]) == ('1'): ");
      google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v17);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__p.__r_.__value_.__l.__data_);
    }
    if (v22[v7 - 2] != 53)
    {
      LODWORD(v17) = 3;
      v18 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/stubs/strutil.cc";
      v19 = 2426;
      memset(&__p, 0, sizeof(__p));
      std::string::append(&__p, "CHECK failed: (temp[size - 1]) == ('5'): ");
      google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v17);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__p.__r_.__value_.__l.__data_);
    }
    if (v7 >= 7)
    {
      LODWORD(v17) = 3;
      v18 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/stubs/strutil.cc";
      v19 = 2427;
      memset(&__p, 0, sizeof(__p));
      std::string::append(&__p, "CHECK failed: (size) <= (6): ");
      google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v17);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__p.__r_.__value_.__l.__data_);
    }
    memset(&v15, 0, sizeof(v15));
    v8 = strlen((const char *)this);
    std::string::reserve(&v15, v8 + v7 - 3);
    std::string::append[abi:ne180100]<char const*,0>(&v15, (char *)this, v6);
    std::string::append(&v15, v22, v7 - 2);
    v9 = v6 + 1;
    v10 = &v15;
    std::string::append(&v15, v9);
    if ((v15.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
      v10 = (std::string *)v15.__r_.__value_.__r.__words[0];
    v17 = 0;
    v5 = strtod((const char *)v10, &v17);
    v11 = HIBYTE(v15.__r_.__value_.__r.__words[2]);
    if (a2 && v17 - (char *)v10 > v16 - (char *)this)
    {
      v12 = strlen((const char *)this);
      if ((v15.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v13 = HIBYTE(v15.__r_.__value_.__r.__words[2]);
      else
        v13 = v15.__r_.__value_.__r.__words[1];
      *(_QWORD *)a2 = (char *)this + v17 - ((char *)v10 + v13 - v12);
    }
    if (v11 < 0)
      operator delete(v15.__r_.__value_.__l.__data_);
  }
  return v5;
}

void sub_188898520(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *__p,uint64_t a21,int a22,__int16 a23,char a24,char a25)
{
  if (a25 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::safe_strto32(uint64_t a1, int *a2)
{
  uint64_t v3;
  std::string __p;

  if (*(char *)(a1 + 23) < 0)
    std::string::__init_copy_ctor_external(&__p, *(const std::string::value_type **)a1, *(_QWORD *)(a1 + 8));
  else
    __p = *(std::string *)a1;
  v3 = google::protobuf::safe_int_internal<int>(&__p, a2);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  return v3;
}

void sub_1888985E0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::safe_int_internal<int>(std::string *__str, int *a2)
{
  std::string *v4;
  int64_t size;
  char *v6;
  std::string *v7;
  uint64_t v8;
  int v9;
  int v10;
  std::string *v11;
  unint64_t v12;
  int64_t v13;
  std::string *v14;
  int64_t v15;
  int v16;
  std::string *v17;
  int v18;
  int v19;
  uint64_t v20;
  int v22;
  void *v23;
  int64_t v24;
  std::string *v25;
  int v26;
  std::string *v27;
  int v28;
  int v29;
  std::string v30;
  std::string v31;
  char v32;

  *a2 = 0;
  if (SHIBYTE(__str->__r_.__value_.__r.__words[2]) < 0)
  {
    v4 = (std::string *)__str->__r_.__value_.__r.__words[0];
    size = __str->__r_.__value_.__l.__size_;
  }
  else
  {
    v4 = __str;
    size = HIBYTE(__str->__r_.__value_.__r.__words[2]);
  }
  v6 = (char *)v4 + size;
  v7 = v4;
  if (size >= 1)
  {
    v7 = v4;
    do
    {
      if (v7->__r_.__value_.__s.__data_[0] != 32)
        break;
      v7 = (std::string *)((char *)v7 + 1);
    }
    while (v7 < (std::string *)v6);
  }
  v8 = (uint64_t)v4->__r_.__value_.__r.__words + size + 1;
  do
  {
    if (v7 >= (std::string *)v6)
      return 0;
    v9 = *--v6;
    --v8;
  }
  while (v9 == 32);
  v10 = v7->__r_.__value_.__s.__data_[0];
  if (v10 == 45 || v10 == 43)
  {
    v7 = (std::string *)((char *)v7 + 1);
    if (v7 >= (std::string *)(v6 + 1))
      return 0;
  }
  v11 = __str;
  if ((*((_BYTE *)&__str->__r_.__value_.__s + 23) & 0x80) != 0)
    v11 = (std::string *)__str->__r_.__value_.__r.__words[0];
  std::string::basic_string(&v31, __str, (char *)v7 - (char *)v11, v8 - (_QWORD)v7, (std::allocator<char> *)&v32);
  if (SHIBYTE(__str->__r_.__value_.__r.__words[2]) < 0)
    operator delete(__str->__r_.__value_.__l.__data_);
  *(_OWORD *)&__str->__r_.__value_.__l.__data_ = *(_OWORD *)&v31.__r_.__value_.__l.__data_;
  v12 = v31.__r_.__value_.__r.__words[2];
  __str->__r_.__value_.__r.__words[2] = v31.__r_.__value_.__r.__words[2];
  v13 = HIBYTE(v12);
  if (v10 == 45)
  {
    if ((v13 & 0x80u) == 0)
      v14 = __str;
    else
      v14 = (std::string *)__str->__r_.__value_.__r.__words[0];
    if ((v13 & 0x80u) == 0)
      v15 = v13;
    else
      v15 = __str->__r_.__value_.__l.__size_;
    if (v15 < 1)
    {
      v16 = 0;
LABEL_37:
      v20 = 1;
    }
    else
    {
      v16 = 0;
      v17 = (std::string *)((char *)v14 + v15);
      while (1)
      {
        v18 = v14->__r_.__value_.__s.__data_[0];
        if ((v18 - 58) < 0xFFFFFFF6)
          break;
        if (v16 < -214748364 || (v19 = 10 * v16, v19 < v18 + 2147483600))
        {
          v20 = 0;
          v16 = 0x80000000;
          goto LABEL_54;
        }
        v16 = v19 - v18 + 48;
        v14 = (std::string *)((char *)v14 + 1);
        if (v14 >= v17)
          goto LABEL_37;
      }
      v20 = 0;
    }
LABEL_54:
    *a2 = v16;
  }
  else
  {
    if ((v13 & 0x80) != 0)
      std::string::__init_copy_ctor_external(&v30, __str->__r_.__value_.__l.__data_, __str->__r_.__value_.__l.__size_);
    else
      v30 = *__str;
    v22 = SHIBYTE(v30.__r_.__value_.__r.__words[2]);
    v24 = v30.__r_.__value_.__l.__size_;
    v23 = (void *)v30.__r_.__value_.__r.__words[0];
    v25 = &v30;
    if ((v30.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v24 = HIBYTE(v30.__r_.__value_.__r.__words[2]);
    else
      v25 = (std::string *)v30.__r_.__value_.__r.__words[0];
    if (v24 < 1)
    {
      v26 = 0;
LABEL_50:
      v20 = 1;
    }
    else
    {
      v26 = 0;
      v27 = (std::string *)((char *)v25 + v24);
      while (1)
      {
        v28 = v25->__r_.__value_.__s.__data_[0];
        if ((v28 - 58) < 0xFFFFFFF6)
          break;
        if (v26 > 214748364 || (v29 = 10 * v26, v29 > -2147483601 - v28))
        {
          v20 = 0;
          v26 = 0x7FFFFFFF;
          goto LABEL_56;
        }
        v26 = v29 + v28 - 48;
        v25 = (std::string *)((char *)v25 + 1);
        if (v25 >= v27)
          goto LABEL_50;
      }
      v20 = 0;
    }
LABEL_56:
    *a2 = v26;
    if (v22 < 0)
      operator delete(v23);
  }
  return v20;
}

void google::protobuf::StrCat(uint64_t a1@<X0>, uint64_t a2@<X1>, std::string *a3@<X8>)
{
  std::string *v5;
  size_t v6;
  size_t v7;

  v5 = a3;
  a3->__r_.__value_.__r.__words[0] = 0;
  a3->__r_.__value_.__l.__size_ = 0;
  a3->__r_.__value_.__r.__words[2] = 0;
  std::string::resize(a3, *(_QWORD *)(a2 + 8) + *(_QWORD *)(a1 + 8), 0);
  if ((v5->__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    v5 = (std::string *)v5->__r_.__value_.__r.__words[0];
  v6 = *(_QWORD *)(a1 + 8);
  if (v6)
  {
    memcpy(v5, *(const void **)a1, v6);
    v5 = (std::string *)((char *)v5 + *(_QWORD *)(a1 + 8));
  }
  v7 = *(_QWORD *)(a2 + 8);
  if (v7)
    memcpy(v5, *(const void **)a2, v7);
}

void sub_18889891C(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (*(char *)(v1 + 23) < 0)
    operator delete(*(void **)v1);
  _Unwind_Resume(exception_object);
}

void google::protobuf::StrCat(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, std::string *a4@<X8>)
{
  std::string *v7;
  size_t v8;
  size_t v9;
  size_t v10;

  v7 = a4;
  a4->__r_.__value_.__r.__words[0] = 0;
  a4->__r_.__value_.__l.__size_ = 0;
  a4->__r_.__value_.__r.__words[2] = 0;
  std::string::resize(a4, *(_QWORD *)(a2 + 8) + *(_QWORD *)(a1 + 8) + *(_QWORD *)(a3 + 8), 0);
  if ((v7->__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    v7 = (std::string *)v7->__r_.__value_.__r.__words[0];
  v8 = *(_QWORD *)(a1 + 8);
  if (v8)
  {
    memcpy(v7, *(const void **)a1, v8);
    v7 = (std::string *)((char *)v7 + *(_QWORD *)(a1 + 8));
  }
  v9 = *(_QWORD *)(a2 + 8);
  if (v9)
  {
    memcpy(v7, *(const void **)a2, v9);
    v7 = (std::string *)((char *)v7 + *(_QWORD *)(a2 + 8));
  }
  v10 = *(_QWORD *)(a3 + 8);
  if (v10)
    memcpy(v7, *(const void **)a3, v10);
}

void sub_1888989F8(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (*(char *)(v1 + 23) < 0)
    operator delete(*(void **)v1);
  _Unwind_Resume(exception_object);
}

char *google::protobuf::Append4(char *__dst, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v8;
  size_t v9;
  size_t v11;
  size_t v12;
  size_t v13;

  v8 = __dst;
  v9 = *(_QWORD *)(a2 + 8);
  if (v9)
  {
    memcpy(__dst, *(const void **)a2, v9);
    v8 += *(_QWORD *)(a2 + 8);
  }
  v11 = *(_QWORD *)(a3 + 8);
  if (v11)
  {
    memcpy(v8, *(const void **)a3, v11);
    v8 += *(_QWORD *)(a3 + 8);
  }
  v12 = *(_QWORD *)(a4 + 8);
  if (v12)
  {
    memcpy(v8, *(const void **)a4, v12);
    v8 += *(_QWORD *)(a4 + 8);
  }
  v13 = *(_QWORD *)(a5 + 8);
  if (v13)
  {
    memcpy(v8, *(const void **)a5, v13);
    v8 += *(_QWORD *)(a5 + 8);
  }
  return v8;
}

char *google::protobuf::StrCat@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  char *v14;
  char *result;
  char *v16;
  size_t v17;
  size_t v18;

  *(_QWORD *)a7 = 0;
  *(_QWORD *)(a7 + 8) = 0;
  *(_QWORD *)(a7 + 16) = 0;
  std::string::resize((std::string *)a7, *(_QWORD *)(a2 + 8)+ *(_QWORD *)(a1 + 8)+ *(_QWORD *)(a3 + 8)+ *(_QWORD *)(a4 + 8)+ *(_QWORD *)(a5 + 8)+ *(_QWORD *)(a6 + 8), 0);
  if (*(char *)(a7 + 23) >= 0)
    v14 = (char *)a7;
  else
    v14 = *(char **)a7;
  result = google::protobuf::Append4(v14, a1, a2, a3, a4);
  v16 = result;
  v17 = *(_QWORD *)(a5 + 8);
  if (v17)
  {
    result = (char *)memcpy(result, *(const void **)a5, v17);
    v16 += *(_QWORD *)(a5 + 8);
  }
  v18 = *(_QWORD *)(a6 + 8);
  if (v18)
    return (char *)memcpy(v16, *(const void **)a6, v18);
  return result;
}

void sub_188898BBC(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (*(char *)(v1 + 23) < 0)
    operator delete(*(void **)v1);
  _Unwind_Resume(exception_object);
}

void google::protobuf::Message::MergeFrom(google::protobuf::Message *this, const google::protobuf::Message *a2)
{
  uint64_t v4;
  google::protobuf::Message *v5;
  uint64_t v6;
  int v7;
  const std::string::value_type *v8;
  std::string::size_type v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  const std::string::value_type *v13;
  std::string::size_type v14;
  int v15;
  const char *v16;
  int v17;
  std::string __p;

  v4 = (*(uint64_t (**)(google::protobuf::Message *))(*(_QWORD *)this + 152))(this);
  if ((*(uint64_t (**)(const google::protobuf::Message *))(*(_QWORD *)a2 + 152))(a2) != v4)
  {
    v15 = 3;
    v16 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/message.cc";
    v17 = 83;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "CHECK failed: (from.GetDescriptor()) == (descriptor): ");
    std::string::append(&__p, ": Tried to merge from a message with a different type.  to: ");
    v6 = *(_QWORD *)(v4 + 8);
    v7 = *(char *)(v6 + 23);
    if (v7 >= 0)
      v8 = *(const std::string::value_type **)(v4 + 8);
    else
      v8 = *(const std::string::value_type **)v6;
    if (v7 >= 0)
      v9 = *(unsigned __int8 *)(v6 + 23);
    else
      v9 = *(_QWORD *)(v6 + 8);
    std::string::append(&__p, v8, v9);
    std::string::append(&__p, ", from: ");
    v10 = (*(uint64_t (**)(const google::protobuf::Message *))(*(_QWORD *)a2 + 152))(a2);
    v11 = *(_QWORD *)(v10 + 8);
    v12 = *(char *)(v11 + 23);
    if (v12 >= 0)
      v13 = *(const std::string::value_type **)(v10 + 8);
    else
      v13 = *(const std::string::value_type **)v11;
    if (v12 >= 0)
      v14 = *(unsigned __int8 *)(v11 + 23);
    else
      v14 = *(_QWORD *)(v11 + 8);
    std::string::append(&__p, v13, v14);
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v15);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
  google::protobuf::internal::ReflectionOps::Merge(a2, this, v5);
}

void sub_188898D08(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::Message::CheckTypeAndMergeFrom(google::protobuf::Message *this, const google::protobuf::MessageLite *a2)
{
  return (*(uint64_t (**)(google::protobuf::Message *, const google::protobuf::MessageLite *))(*(_QWORD *)this + 120))(this, a2);
}

void google::protobuf::Message::CopyFrom(google::protobuf::Message *this, const google::protobuf::Message *a2)
{
  uint64_t v4;
  google::protobuf::Message *v5;
  uint64_t v6;
  int v7;
  const std::string::value_type *v8;
  std::string::size_type v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  const std::string::value_type *v13;
  std::string::size_type v14;
  google::protobuf::Message *v15;
  int v16;
  const char *v17;
  int v18;
  std::string __p;

  v4 = (*(uint64_t (**)(google::protobuf::Message *))(*(_QWORD *)this + 152))(this);
  if ((*(uint64_t (**)(const google::protobuf::Message *))(*(_QWORD *)a2 + 152))(a2) != v4)
  {
    v16 = 3;
    v17 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/message.cc";
    v18 = 99;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "CHECK failed: (from.GetDescriptor()) == (descriptor): ");
    std::string::append(&__p, ": Tried to copy from a message with a different type. to: ");
    v6 = *(_QWORD *)(v4 + 8);
    v7 = *(char *)(v6 + 23);
    v8 = v7 >= 0 ? *(const std::string::value_type **)(v4 + 8) : *(const std::string::value_type **)v6;
    v9 = v7 >= 0 ? *(unsigned __int8 *)(v6 + 23) : *(_QWORD *)(v6 + 8);
    std::string::append(&__p, v8, v9);
    std::string::append(&__p, ", from: ");
    v10 = (*(uint64_t (**)(const google::protobuf::Message *))(*(_QWORD *)a2 + 152))(a2);
    v11 = *(_QWORD *)(v10 + 8);
    v12 = *(char *)(v11 + 23);
    v13 = v12 >= 0 ? *(const std::string::value_type **)(v10 + 8) : *(const std::string::value_type **)v11;
    v14 = v12 >= 0 ? *(unsigned __int8 *)(v11 + 23) : *(_QWORD *)(v11 + 8);
    std::string::append(&__p, v13, v14);
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v16);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
  if (a2 != this)
  {
    google::protobuf::internal::ReflectionOps::Clear(this, v5);
    google::protobuf::internal::ReflectionOps::Merge(a2, this, v15);
  }
}

void sub_188898E74(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void google::protobuf::Message::GetTypeName(google::protobuf::Message *this@<X0>, std::string *a2@<X8>)
{
  __int128 *v3;
  __int128 v4;

  v3 = *(__int128 **)((*(uint64_t (**)(google::protobuf::Message *))(*(_QWORD *)this + 152))(this) + 8);
  if (*((char *)v3 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(a2, *(const std::string::value_type **)v3, *((_QWORD *)v3 + 1));
  }
  else
  {
    v4 = *v3;
    a2->__r_.__value_.__r.__words[2] = *((_QWORD *)v3 + 2);
    *(_OWORD *)&a2->__r_.__value_.__l.__data_ = v4;
  }
}

void google::protobuf::Message::FindInitializationErrors(google::protobuf::internal *a1, uint64_t a2)
{
  void *__p[2];
  char v5;

  std::string::basic_string[abi:ne180100]<0>(__p, (char *)&str_5_2);
  google::protobuf::internal::ReflectionOps::FindInitializationErrors(a1, (const void **)__p, a2);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_188898F4C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void google::protobuf::Message::InitializationErrorString(google::protobuf::Message *this@<X0>, std::string *a2@<X8>)
{
  std::string *v3[3];
  std::string **v4;

  memset(v3, 0, sizeof(v3));
  google::protobuf::Message::FindInitializationErrors(this, (uint64_t)v3);
  google::protobuf::Join<std::vector<std::string>>(", ", v3, a2);
  v4 = v3;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&v4);
}

void sub_188898FCC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::Message::ByteSizeLong(google::protobuf::Message *this, const google::protobuf::Message *a2)
{
  uint64_t v3;

  v3 = google::protobuf::internal::WireFormat::ByteSize(this, a2);
  (*(void (**)(google::protobuf::Message *, uint64_t))(*(_QWORD *)this + 144))(this, v3);
  return v3;
}

uint64_t google::protobuf::Message::SpaceUsedLong(google::protobuf::Message *this)
{
  google::protobuf::Reflection *v2;

  (*(void (**)(google::protobuf::Message *))(*(_QWORD *)this + 152))(this);
  return google::protobuf::Reflection::SpaceUsedLong(v2, this);
}

uint64_t google::protobuf::`anonymous namespace'::GeneratedMessageFactory::singleton(google::protobuf::_anonymous_namespace_::GeneratedMessageFactory *this)
{
  unsigned __int8 v1;
  uint64_t v3;
  const void *v4;

  if ((v1 & 1) == 0
  {
    v3 = operator new();
    *(_QWORD *)v3 = &off_1E1BF7788;
    *(_OWORD *)(v3 + 8) = 0u;
    *(_OWORD *)(v3 + 24) = 0u;
    *(_DWORD *)(v3 + 40) = 1065353216;
    *(_QWORD *)(v3 + 48) = 850045863;
    *(_OWORD *)(v3 + 56) = 0u;
    *(_OWORD *)(v3 + 72) = 0u;
    *(_OWORD *)(v3 + 88) = 0u;
    *(_OWORD *)(v3 + 104) = 0u;
    *(_OWORD *)(v3 + 120) = 0u;
    *(_QWORD *)(v3 + 136) = 0;
    *(_DWORD *)(v3 + 144) = 1065353216;
  }
}

void sub_188899124(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void google::protobuf::MessageFactory::InternalRegisterGeneratedFile(const char **a1)
{
  float *v2;
  char v3;
  __int128 v4;
  const char **v5;
  std::string __p;
  __int128 v7;

               + 8);
  google::protobuf::StringPiece::StringPiece((google::protobuf::StringPiece *)&v7, a1[2]);
  v4 = v7;
  v5 = a1;
  std::__hash_table<std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::internal::DescriptorTable const*>,std::__unordered_map_hasher<google::protobuf::StringPiece,std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::internal::DescriptorTable const*>,google::protobuf::hash<google::protobuf::StringPiece>,std::equal_to<google::protobuf::StringPiece>,true>,std::__unordered_map_equal<google::protobuf::StringPiece,std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::internal::DescriptorTable const*>,std::equal_to<google::protobuf::StringPiece>,google::protobuf::hash<google::protobuf::StringPiece>,true>,std::allocator<std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::internal::DescriptorTable const*>>>::__emplace_unique_key_args<google::protobuf::StringPiece,std::pair<google::protobuf::StringPiece const,google::protobuf::internal::DescriptorTable const*> const&>(v2, (char **)&v4, (uint64_t)&v4);
  if ((v3 & 1) == 0)
  {
    LODWORD(v4) = 3;
    *((_QWORD *)&v4 + 1) = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/message.cc";
    LODWORD(v5) = 211;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "File is already registered: ");
    std::string::append(&__p, a1[2]);
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v4);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
}

void sub_1888991FC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(const std::string::value_type **this, const google::protobuf::Descriptor *a2, const google::protobuf::Message *a3)
{
  uint64_t v5;
  char v6;
  const std::string::value_type *v7;
  int v8;
  const std::string::value_type *v9;
  std::string::size_type v10;
  __int128 v11;
  int v12;
  std::string __p;

  *(_QWORD *)&v11 = this;
  *((_QWORD *)&v11 + 1) = a2;
  std::__hash_table<std::__hash_value_type<google::protobuf::Descriptor const*,google::protobuf::Message const*>,std::__unordered_map_hasher<google::protobuf::Descriptor const*,std::__hash_value_type<google::protobuf::Descriptor const*,google::protobuf::Message const*>,std::hash<google::protobuf::Descriptor const*>,std::equal_to<google::protobuf::Descriptor const*>,true>,std::__unordered_map_equal<google::protobuf::Descriptor const*,std::__hash_value_type<google::protobuf::Descriptor const*,google::protobuf::Message const*>,std::equal_to<google::protobuf::Descriptor const*>,std::hash<google::protobuf::Descriptor const*>,true>,std::allocator<std::__hash_value_type<google::protobuf::Descriptor const*,google::protobuf::Message const*>>>::__emplace_unique_key_args<google::protobuf::Descriptor const*,std::pair<google::protobuf::Descriptor const* const,google::protobuf::Message const*> const&>((float *)(v5 + 112), &v11, &v11);
  if ((v6 & 1) == 0)
  {
    LODWORD(v11) = 2;
    *((_QWORD *)&v11 + 1) = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/message.cc";
    v12 = 226;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "Type is already registered: ");
    v7 = this[1];
    v8 = v7[23];
    if (v8 >= 0)
      v9 = this[1];
    else
      v9 = *(const std::string::value_type **)v7;
    if (v8 >= 0)
      v10 = *((unsigned __int8 *)v7 + 23);
    else
      v10 = *((_QWORD *)v7 + 1);
    std::string::append(&__p, v9, v10);
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v11);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
}

void sub_1888992D8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t *google::protobuf::Reflection::RepeatedFieldAccessor(google::protobuf::Reflection *this, const google::protobuf::FieldDescriptor *a2)
{
  unint64_t *v3;
  unint64_t v4;
  int v5;
  uint64_t *result;
  unsigned __int8 v7;
  uint64_t *v8;
  uint64_t (**v9)();
  unsigned __int8 v10;
  unsigned __int8 v11;
  unsigned __int8 v12;
  unsigned __int8 v13;
  unsigned __int8 v14;
  unsigned __int8 v15;
  unint64_t *v16;
  unint64_t v17;
  unsigned __int8 v18;
  unsigned __int8 v19;
  void (**v20)(google::protobuf::FieldDescriptor *, const google::protobuf::FieldDescriptor *, const char *);
  const google::protobuf::FieldDescriptor **v21;
  int v22;
  std::string __p;
  const google::protobuf::FieldDescriptor *v24;
  void (*v25)(google::protobuf::FieldDescriptor *, const google::protobuf::FieldDescriptor *, const char *);
  void (***v26)(google::protobuf::FieldDescriptor *, const google::protobuf::FieldDescriptor *, const char *);

  if (*((_DWORD *)a2 + 15) != 3)
  {
    LODWORD(v20) = 3;
    v21 = (const google::protobuf::FieldDescriptor **)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/"
                                                      "google/protobuf/message.cc";
    v22 = 298;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "CHECK failed: field->is_repeated(): ");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v20);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
  v3 = (unint64_t *)*((_QWORD *)a2 + 6);
  if (v3)
  {
    v24 = a2;
    v25 = google::protobuf::FieldDescriptor::TypeOnceInit;
    v4 = atomic_load(v3);
    if (v4 != -1)
    {
      v20 = &v25;
      v21 = &v24;
      v26 = &v20;
      std::__call_once(v3, &v26, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  v5 = *((_DWORD *)a2 + 14);
  switch(v5)
  {
    case 1:
      result = &qword_1ECDBB778;
      v12 = atomic_load((unsigned __int8 *)&qword_1ECDBB780);
      if ((v12 & 1) == 0)
      {
        v8 = &qword_1ECDBB778;
        if (!__cxa_guard_acquire(&qword_1ECDBB780))
          return v8;
        v9 = off_1E1BF8CB0;
        goto LABEL_46;
      }
      return result;
    case 2:
      result = &qword_1ECDBB768;
      v13 = atomic_load((unsigned __int8 *)&qword_1ECDBB770);
      if ((v13 & 1) == 0)
      {
        v8 = &qword_1ECDBB768;
        if (!__cxa_guard_acquire(&qword_1ECDBB770))
          return v8;
        v9 = off_1E1BF8D50;
        goto LABEL_46;
      }
      return result;
    case 3:
    case 16:
    case 18:
      result = &qword_1ECDBB748;
      v7 = atomic_load((unsigned __int8 *)&qword_1ECDBB750);
      if ((v7 & 1) == 0)
      {
        v8 = &qword_1ECDBB748;
        if (!__cxa_guard_acquire(&qword_1ECDBB750))
          return v8;
        v9 = off_1E1BF8F30;
        goto LABEL_46;
      }
      return result;
    case 4:
    case 6:
      result = &qword_1ECDBB758;
      v11 = atomic_load((unsigned __int8 *)&qword_1ECDBB760);
      if ((v11 & 1) == 0)
      {
        v8 = &qword_1ECDBB758;
        if (!__cxa_guard_acquire(&qword_1ECDBB760))
          return v8;
        v9 = off_1E1BF8FD0;
        goto LABEL_46;
      }
      return result;
    case 5:
    case 14:
    case 15:
    case 17:
      return &_MergedGlobals_173;
    case 7:
    case 13:
      result = &qword_1ECDBB738;
      v10 = atomic_load((unsigned __int8 *)&qword_1ECDBB740);
      if ((v10 & 1) == 0)
      {
        v8 = &qword_1ECDBB738;
        if (!__cxa_guard_acquire(&qword_1ECDBB740))
          return v8;
        v9 = off_1E1BF8E90;
        goto LABEL_46;
      }
      return result;
    case 8:
      result = &qword_1ECDBB788;
      v14 = atomic_load((unsigned __int8 *)&qword_1ECDBB790);
      if ((v14 & 1) == 0)
      {
        v8 = &qword_1ECDBB788;
        if (!__cxa_guard_acquire(&qword_1ECDBB790))
          return v8;
        v9 = off_1E1BF8C10;
        goto LABEL_46;
      }
      return result;
    case 9:
    case 12:
      result = &qword_1ECDBB798;
      v15 = atomic_load((unsigned __int8 *)&qword_1ECDBB7A0);
      if ((v15 & 1) == 0)
      {
        v8 = &qword_1ECDBB798;
        if (!__cxa_guard_acquire(&qword_1ECDBB7A0))
          return v8;
        v9 = off_1E1BF9070;
        goto LABEL_46;
      }
      return result;
    case 10:
    case 11:
      v16 = (unint64_t *)*((_QWORD *)a2 + 6);
      if (v16)
      {
        v24 = a2;
        v25 = google::protobuf::FieldDescriptor::TypeOnceInit;
        v17 = atomic_load(v16);
        if (v17 != -1)
        {
          v20 = &v25;
          v21 = &v24;
          v26 = &v20;
          std::__call_once(v16, &v26, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
        }
        v5 = *((_DWORD *)a2 + 14);
      }
      if (v5 == 11 && *(_BYTE *)(*(_QWORD *)(*((_QWORD *)a2 + 13) + 32) + 75))
      {
        result = &qword_1ECDBB7A8;
        v18 = atomic_load((unsigned __int8 *)&qword_1ECDBB7B0);
        if ((v18 & 1) == 0)
        {
          v8 = &qword_1ECDBB7A8;
          if (__cxa_guard_acquire(&qword_1ECDBB7B0))
          {
            v9 = (uint64_t (**)())off_1E1BF8B08;
LABEL_46:
            *v8 = (uint64_t)v9;
            __cxa_guard_release(v8 + 1);
            return v8;
          }
          return v8;
        }
      }
      else
      {
        result = &qword_1ECDBB7B8;
        v19 = atomic_load((unsigned __int8 *)&qword_1ECDBB7C0);
        if ((v19 & 1) == 0)
        {
          v8 = &qword_1ECDBB7B8;
          if (__cxa_guard_acquire(&qword_1ECDBB7C0))
          {
            v9 = off_1E1BF9118;
            goto LABEL_46;
          }
          return v8;
        }
      }
      return result;
    default:
      LODWORD(v20) = 3;
      v21 = (const google::protobuf::FieldDescriptor **)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/sr"
                                                        "c/google/protobuf/message.cc";
      v22 = 326;
      memset(&__p, 0, sizeof(__p));
      std::string::append(&__p, "Should not reach here.");
      google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v20);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__p.__r_.__value_.__l.__data_);
      return 0;
  }
}

void sub_188899678(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void google::protobuf::`anonymous namespace'::GetSingleton<google::protobuf::internal::RepeatedFieldPrimitiveAccessor<int>>()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_1ECDBB730);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_1ECDBB730))
    {
      _MergedGlobals_173 = (uint64_t)off_1E1BF8DF0;
      __cxa_guard_release(&qword_1ECDBB730);
    }
  }
}

uint64_t google::protobuf::internal::OnShutdownDelete<google::protobuf::`anonymous namespace'::GeneratedMessageFactory>(google::protobuf::`anonymous namespace'::GeneratedMessageFactory *)::{lambda(void const*)#1}::__invoke(uint64_t result)
{
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void google::protobuf::`anonymous namespace'::GeneratedMessageFactory::~GeneratedMessageFactory(google::protobuf::_anonymous_namespace_::GeneratedMessageFactory *this)
{
  char *v2;

  *(_QWORD *)this = &off_1E1BF7788;
  v2 = (char *)this + 8;
  std::__hash_table<std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>>>::~__hash_table((uint64_t)this + 112);
  std::mutex::~mutex((std::mutex *)((char *)this + 48));
  std::__hash_table<std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>>>::~__hash_table((uint64_t)v2);
}

{
  char *v2;

  *(_QWORD *)this = &off_1E1BF7788;
  v2 = (char *)this + 8;
  std::__hash_table<std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>>>::~__hash_table((uint64_t)this + 112);
  std::mutex::~mutex((std::mutex *)((char *)this + 48));
  std::__hash_table<std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>>>::~__hash_table((uint64_t)v2);
  JUMPOUT(0x18D76437CLL);
}

uint64_t google::protobuf::`anonymous namespace'::GeneratedMessageFactory::GetPrototype(int8x8_t *this, const google::protobuf::Descriptor *a2)
{
  std::mutex *v4;
  int8x8_t *v5;
  _QWORD *v6;
  uint64_t v7;
  google::protobuf::DescriptorPool *v8;
  uint64_t v9;
  uint64_t v10;
  const char *v11;
  const void *v12;
  int64_t v13;
  unint64_t v14;
  char *v15;
  uint64_t v16;
  int8x8_t v17;
  uint8x8_t v18;
  unint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  unint64_t v23;
  const void *v24;
  uint64_t v25;
  int v26;
  const std::string::value_type *v27;
  std::string::size_type v28;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  int v34;
  const std::string::value_type *v35;
  std::string::size_type v36;
  char *v37;
  uint64_t v38;
  int v39;
  std::string __p;

  v4 = (std::mutex *)&this[6];
  std::mutex::lock((std::mutex *)&this[6]);
  v5 = this + 14;
  v6 = std::__hash_table<std::__hash_value_type<google::protobuf::Descriptor const*,google::protobuf::Message const*>,std::__unordered_map_hasher<google::protobuf::Descriptor const*,std::__hash_value_type<google::protobuf::Descriptor const*,google::protobuf::Message const*>,std::hash<google::protobuf::Descriptor const*>,std::equal_to<google::protobuf::Descriptor const*>,true>,std::__unordered_map_equal<google::protobuf::Descriptor const*,std::__hash_value_type<google::protobuf::Descriptor const*,google::protobuf::Message const*>,std::equal_to<google::protobuf::Descriptor const*>,std::hash<google::protobuf::Descriptor const*>,true>,std::allocator<std::__hash_value_type<google::protobuf::Descriptor const*,google::protobuf::Message const*>>>::find<google::protobuf::Descriptor const*>(&this[14], (unint64_t)a2);
  if (v6)
  {
    v7 = v6[3];
    std::mutex::unlock(v4);
    if (v7)
      return v7;
  }
  else
  {
    std::mutex::unlock(v4);
  }
  v9 = *(_QWORD *)(*((_QWORD *)a2 + 2) + 16);
  v10 = google::protobuf::DescriptorPool::internal_generated_pool(v8);
  google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0);
  if (v9 != v10)
    return 0;
  v11 = (const char *)**((_QWORD **)a2 + 2);
  if (v11[23] < 0)
    v11 = *(const char **)v11;
  google::protobuf::StringPiece::StringPiece((google::protobuf::StringPiece *)&v37, v11);
  v12 = v37;
  v13 = v38;
  if (v38 < 1)
  {
    v14 = 0;
  }
  else
  {
    v14 = 0;
    v15 = v37;
    do
    {
      v16 = *v15++;
      v14 = 5 * v14 + v16;
    }
    while (v15 < &v37[v38]);
  }
  v17 = this[2];
  if (!*(_QWORD *)&v17)
    goto LABEL_32;
  v18 = (uint8x8_t)vcnt_s8(v17);
  v18.i16[0] = vaddlv_u8(v18);
  v19 = v18.u32[0];
  if (v18.u32[0] > 1uLL)
  {
    v20 = v14;
    if (v14 >= *(_QWORD *)&v17)
      v20 = v14 % *(_QWORD *)&v17;
  }
  else
  {
    v20 = (*(_QWORD *)&v17 - 1) & v14;
  }
  v21 = *(_QWORD **)(*(_QWORD *)&this[1] + 8 * v20);
  if (!v21 || (v22 = (_QWORD *)*v21) == 0)
  {
LABEL_32:
    LODWORD(v37) = 2;
    v38 = (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/message.cc";
    v39 = 246;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "File appears to be in generated pool but wasn't registered: ");
    v25 = **((_QWORD **)a2 + 2);
    v26 = *(char *)(v25 + 23);
    if (v26 >= 0)
      v27 = (const std::string::value_type *)**((_QWORD **)a2 + 2);
    else
      v27 = *(const std::string::value_type **)v25;
    if (v26 >= 0)
      v28 = *(unsigned __int8 *)(v25 + 23);
    else
      v28 = *(_QWORD *)(v25 + 8);
    std::string::append(&__p, v27, v28);
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v37);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
    return 0;
  }
  while (1)
  {
    v23 = v22[1];
    if (v23 == v14)
      break;
    if (v19 > 1)
    {
      if (v23 >= *(_QWORD *)&v17)
        v23 %= *(_QWORD *)&v17;
    }
    else
    {
      v23 &= *(_QWORD *)&v17 - 1;
    }
    if (v23 != v20)
      goto LABEL_32;
LABEL_31:
    v22 = (_QWORD *)*v22;
    if (!v22)
      goto LABEL_32;
  }
  if (v22[3] != v13)
    goto LABEL_31;
  if (v13 >= 1)
  {
    v24 = (const void *)v22[2];
    if (v12 != v24)
    {
      if (memcmp(v24, v12, v13))
        goto LABEL_31;
    }
  }
  v30 = v22[4];
  if (!v30)
    goto LABEL_32;
  std::mutex::lock(v4);
  v31 = std::__hash_table<std::__hash_value_type<google::protobuf::Descriptor const*,google::protobuf::Message const*>,std::__unordered_map_hasher<google::protobuf::Descriptor const*,std::__hash_value_type<google::protobuf::Descriptor const*,google::protobuf::Message const*>,std::hash<google::protobuf::Descriptor const*>,std::equal_to<google::protobuf::Descriptor const*>,true>,std::__unordered_map_equal<google::protobuf::Descriptor const*,std::__hash_value_type<google::protobuf::Descriptor const*,google::protobuf::Message const*>,std::equal_to<google::protobuf::Descriptor const*>,std::hash<google::protobuf::Descriptor const*>,true>,std::allocator<std::__hash_value_type<google::protobuf::Descriptor const*,google::protobuf::Message const*>>>::find<google::protobuf::Descriptor const*>(v5, (unint64_t)a2);
  if (!v31 || (v7 = v31[3]) == 0)
  {
    google::protobuf::internal::RegisterFileLevelMetadata(v30);
    v32 = std::__hash_table<std::__hash_value_type<google::protobuf::Descriptor const*,google::protobuf::Message const*>,std::__unordered_map_hasher<google::protobuf::Descriptor const*,std::__hash_value_type<google::protobuf::Descriptor const*,google::protobuf::Message const*>,std::hash<google::protobuf::Descriptor const*>,std::equal_to<google::protobuf::Descriptor const*>,true>,std::__unordered_map_equal<google::protobuf::Descriptor const*,std::__hash_value_type<google::protobuf::Descriptor const*,google::protobuf::Message const*>,std::equal_to<google::protobuf::Descriptor const*>,std::hash<google::protobuf::Descriptor const*>,true>,std::allocator<std::__hash_value_type<google::protobuf::Descriptor const*,google::protobuf::Message const*>>>::find<google::protobuf::Descriptor const*>(v5, (unint64_t)a2);
    if (!v32 || (v7 = v32[3]) == 0)
    {
      LODWORD(v37) = 2;
      v38 = (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/message.cc";
      v39 = 264;
      memset(&__p, 0, sizeof(__p));
      std::string::append(&__p, "Type appears to be in generated pool but wasn't ");
      std::string::append(&__p, "registered: ");
      v33 = *((_QWORD *)a2 + 1);
      v34 = *(char *)(v33 + 23);
      if (v34 >= 0)
        v35 = (const std::string::value_type *)*((_QWORD *)a2 + 1);
      else
        v35 = *(const std::string::value_type **)v33;
      if (v34 >= 0)
        v36 = *(unsigned __int8 *)(v33 + 23);
      else
        v36 = *(_QWORD *)(v33 + 8);
      std::string::append(&__p, v35, v36);
      google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v37);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__p.__r_.__value_.__l.__data_);
      v7 = 0;
    }
  }
  std::mutex::unlock(v4);
  return v7;
}

void sub_188899AD0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  std::mutex *v19;

  if (a19 < 0)
    operator delete(__p);
  std::mutex::unlock(v19);
  _Unwind_Resume(a1);
}

_QWORD *std::__hash_table<std::__hash_value_type<google::protobuf::Descriptor const*,google::protobuf::Message const*>,std::__unordered_map_hasher<google::protobuf::Descriptor const*,std::__hash_value_type<google::protobuf::Descriptor const*,google::protobuf::Message const*>,std::hash<google::protobuf::Descriptor const*>,std::equal_to<google::protobuf::Descriptor const*>,true>,std::__unordered_map_equal<google::protobuf::Descriptor const*,std::__hash_value_type<google::protobuf::Descriptor const*,google::protobuf::Message const*>,std::equal_to<google::protobuf::Descriptor const*>,std::hash<google::protobuf::Descriptor const*>,true>,std::allocator<std::__hash_value_type<google::protobuf::Descriptor const*,google::protobuf::Message const*>>>::find<google::protobuf::Descriptor const*>(_QWORD *a1, unint64_t a2)
{
  int8x8_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint8x8_t v6;
  unint64_t v7;
  _QWORD *v8;
  _QWORD *result;
  unint64_t v10;

  v2 = (int8x8_t)a1[1];
  if (!*(_QWORD *)&v2)
    return 0;
  v3 = 0x9DDFEA08EB382D69 * (((8 * a2) + 8) ^ HIDWORD(a2));
  v4 = 0x9DDFEA08EB382D69 * (HIDWORD(a2) ^ (v3 >> 47) ^ v3);
  v5 = 0x9DDFEA08EB382D69 * (v4 ^ (v4 >> 47));
  v6 = (uint8x8_t)vcnt_s8(v2);
  v6.i16[0] = vaddlv_u8(v6);
  if (v6.u32[0] > 1uLL)
  {
    v7 = v5;
    if (v5 >= *(_QWORD *)&v2)
      v7 = v5 % *(_QWORD *)&v2;
  }
  else
  {
    v7 = (*(_QWORD *)&v2 - 1) & v5;
  }
  v8 = *(_QWORD **)(*a1 + 8 * v7);
  if (!v8)
    return 0;
  result = (_QWORD *)*v8;
  if (*v8)
  {
    do
    {
      v10 = result[1];
      if (v10 == v5)
      {
        if (result[2] == a2)
          return result;
      }
      else
      {
        if (v6.u32[0] > 1uLL)
        {
          if (v10 >= *(_QWORD *)&v2)
            v10 %= *(_QWORD *)&v2;
        }
        else
        {
          v10 &= *(_QWORD *)&v2 - 1;
        }
        if (v10 != v7)
          return 0;
      }
      result = (_QWORD *)*result;
    }
    while (result);
  }
  return result;
}

_QWORD *std::__hash_table<std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::internal::DescriptorTable const*>,std::__unordered_map_hasher<google::protobuf::StringPiece,std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::internal::DescriptorTable const*>,google::protobuf::hash<google::protobuf::StringPiece>,std::equal_to<google::protobuf::StringPiece>,true>,std::__unordered_map_equal<google::protobuf::StringPiece,std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::internal::DescriptorTable const*>,std::equal_to<google::protobuf::StringPiece>,google::protobuf::hash<google::protobuf::StringPiece>,true>,std::allocator<std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::internal::DescriptorTable const*>>>::__emplace_unique_key_args<google::protobuf::StringPiece,std::pair<google::protobuf::StringPiece const,google::protobuf::internal::DescriptorTable const*> const&>(float *a1, char **a2, uint64_t a3)
{
  unint64_t v3;
  uint64_t v7;
  unint64_t v8;
  char *v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint8x8_t v13;
  unint64_t v14;
  void **v15;
  _QWORD *v16;
  unint64_t v17;
  float v18;
  float v19;
  _BOOL8 v20;
  unint64_t v21;
  unint64_t v22;
  int8x8_t prime;
  void *v24;
  _QWORD *v25;
  uint64_t v26;
  _QWORD *v27;
  unint64_t v28;
  uint8x8_t v29;
  unint64_t v30;
  uint8x8_t v31;
  uint64_t v32;
  _QWORD *v33;
  unint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  unint64_t v37;
  _QWORD *v39;

  v7 = (uint64_t)a2[1];
  if (v7 < 1)
  {
    v8 = 0;
  }
  else
  {
    v8 = 0;
    v9 = *a2;
    v10 = (unint64_t)&(*a2)[v7];
    do
    {
      v11 = *v9++;
      v8 = 5 * v8 + v11;
    }
    while ((unint64_t)v9 < v10);
  }
  v12 = *((_QWORD *)a1 + 1);
  if (v12)
  {
    v13 = (uint8x8_t)vcnt_s8((int8x8_t)v12);
    v13.i16[0] = vaddlv_u8(v13);
    v14 = v13.u32[0];
    if (v13.u32[0] > 1uLL)
    {
      v3 = v8;
      if (v8 >= v12)
        v3 = v8 % v12;
    }
    else
    {
      v3 = (v12 - 1) & v8;
    }
    v15 = *(void ***)(*(_QWORD *)a1 + 8 * v3);
    if (v15)
    {
      v16 = *v15;
      if (*v15)
      {
        do
        {
          v17 = v16[1];
          if (v17 == v8)
          {
            if (std::equal_to<google::protobuf::StringPiece>::operator()[abi:ne180100]((uint64_t)(a1 + 8), (uint64_t)(v16 + 2), (uint64_t)a2))
            {
              return v16;
            }
          }
          else
          {
            if (v14 > 1)
            {
              if (v17 >= v12)
                v17 %= v12;
            }
            else
            {
              v17 &= v12 - 1;
            }
            if (v17 != v3)
              break;
          }
          v16 = (_QWORD *)*v16;
        }
        while (v16);
      }
    }
  }
  v16 = operator new(0x28uLL);
  *v16 = 0;
  v16[1] = v8;
  *((_OWORD *)v16 + 1) = *(_OWORD *)a3;
  v16[4] = *(_QWORD *)(a3 + 16);
  v18 = (float)(unint64_t)(*((_QWORD *)a1 + 3) + 1);
  v19 = a1[8];
  if (!v12 || (float)(v19 * (float)v12) < v18)
  {
    v20 = 1;
    if (v12 >= 3)
      v20 = (v12 & (v12 - 1)) != 0;
    v21 = v20 | (2 * v12);
    v22 = vcvtps_u32_f32(v18 / v19);
    if (v21 <= v22)
      prime = (int8x8_t)v22;
    else
      prime = (int8x8_t)v21;
    if (*(_QWORD *)&prime == 1)
    {
      prime = (int8x8_t)2;
    }
    else if ((*(_QWORD *)&prime & (*(_QWORD *)&prime - 1)) != 0)
    {
      prime = (int8x8_t)std::__next_prime(*(_QWORD *)&prime);
    }
    v12 = *((_QWORD *)a1 + 1);
    if (*(_QWORD *)&prime > v12)
      goto LABEL_35;
    if (*(_QWORD *)&prime < v12)
    {
      v30 = vcvtps_u32_f32((float)*((unint64_t *)a1 + 3) / a1[8]);
      if (v12 < 3 || (v31 = (uint8x8_t)vcnt_s8((int8x8_t)v12), v31.i16[0] = vaddlv_u8(v31), v31.u32[0] > 1uLL))
      {
        v30 = std::__next_prime(v30);
      }
      else
      {
        v32 = 1 << -(char)__clz(v30 - 1);
        if (v30 >= 2)
          v30 = v32;
      }
      if (*(_QWORD *)&prime <= v30)
        prime = (int8x8_t)v30;
      if (*(_QWORD *)&prime >= v12)
      {
        v12 = *((_QWORD *)a1 + 1);
      }
      else
      {
        if (prime)
        {
LABEL_35:
          if (*(_QWORD *)&prime >> 61)
            std::__throw_bad_array_new_length[abi:ne180100]();
          v24 = operator new(8 * *(_QWORD *)&prime);
          v25 = *(_QWORD **)a1;
          *(_QWORD *)a1 = v24;
          if (v25)
            operator delete(v25);
          v26 = 0;
          *((int8x8_t *)a1 + 1) = prime;
          do
            *(_QWORD *)(*(_QWORD *)a1 + 8 * v26++) = 0;
          while (*(_QWORD *)&prime != v26);
          v27 = (_QWORD *)*((_QWORD *)a1 + 2);
          if (v27)
          {
            v28 = v27[1];
            v29 = (uint8x8_t)vcnt_s8(prime);
            v29.i16[0] = vaddlv_u8(v29);
            if (v29.u32[0] > 1uLL)
            {
              if (v28 >= *(_QWORD *)&prime)
                v28 %= *(_QWORD *)&prime;
            }
            else
            {
              v28 &= *(_QWORD *)&prime - 1;
            }
            *(_QWORD *)(*(_QWORD *)a1 + 8 * v28) = a1 + 4;
            v33 = (_QWORD *)*v27;
            if (*v27)
            {
              do
              {
                v34 = v33[1];
                if (v29.u32[0] > 1uLL)
                {
                  if (v34 >= *(_QWORD *)&prime)
                    v34 %= *(_QWORD *)&prime;
                }
                else
                {
                  v34 &= *(_QWORD *)&prime - 1;
                }
                if (v34 != v28)
                {
                  if (!*(_QWORD *)(*(_QWORD *)a1 + 8 * v34))
                  {
                    *(_QWORD *)(*(_QWORD *)a1 + 8 * v34) = v27;
                    goto LABEL_60;
                  }
                  *v27 = *v33;
                  *v33 = **(_QWORD **)(*(_QWORD *)a1 + 8 * v34);
                  **(_QWORD **)(*(_QWORD *)a1 + 8 * v34) = v33;
                  v33 = v27;
                }
                v34 = v28;
LABEL_60:
                v27 = v33;
                v33 = (_QWORD *)*v33;
                v28 = v34;
              }
              while (v33);
            }
          }
          v12 = (unint64_t)prime;
          goto LABEL_64;
        }
        v39 = *(_QWORD **)a1;
        *(_QWORD *)a1 = 0;
        if (v39)
          operator delete(v39);
        v12 = 0;
        *((_QWORD *)a1 + 1) = 0;
      }
    }
LABEL_64:
    if ((v12 & (v12 - 1)) != 0)
    {
      if (v8 >= v12)
        v3 = v8 % v12;
      else
        v3 = v8;
    }
    else
    {
      v3 = (v12 - 1) & v8;
    }
  }
  v35 = *(_QWORD **)a1;
  v36 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v3);
  if (v36)
  {
    *v16 = *v36;
LABEL_77:
    *v36 = v16;
    goto LABEL_78;
  }
  *v16 = *((_QWORD *)a1 + 2);
  *((_QWORD *)a1 + 2) = v16;
  v35[v3] = a1 + 4;
  if (*v16)
  {
    v37 = *(_QWORD *)(*v16 + 8);
    if ((v12 & (v12 - 1)) != 0)
    {
      if (v37 >= v12)
        v37 %= v12;
    }
    else
    {
      v37 &= v12 - 1;
    }
    v36 = (_QWORD *)(*(_QWORD *)a1 + 8 * v37);
    goto LABEL_77;
  }
LABEL_78:
  ++*((_QWORD *)a1 + 3);
  return v16;
}

void sub_18889A03C(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

_QWORD *std::__hash_table<std::__hash_value_type<google::protobuf::Descriptor const*,google::protobuf::Message const*>,std::__unordered_map_hasher<google::protobuf::Descriptor const*,std::__hash_value_type<google::protobuf::Descriptor const*,google::protobuf::Message const*>,std::hash<google::protobuf::Descriptor const*>,std::equal_to<google::protobuf::Descriptor const*>,true>,std::__unordered_map_equal<google::protobuf::Descriptor const*,std::__hash_value_type<google::protobuf::Descriptor const*,google::protobuf::Message const*>,std::equal_to<google::protobuf::Descriptor const*>,std::hash<google::protobuf::Descriptor const*>,true>,std::allocator<std::__hash_value_type<google::protobuf::Descriptor const*,google::protobuf::Message const*>>>::__emplace_unique_key_args<google::protobuf::Descriptor const*,std::pair<google::protobuf::Descriptor const* const,google::protobuf::Message const*> const&>(float *a1, _QWORD *a2, _OWORD *a3)
{
  unint64_t v3;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint8x8_t v10;
  _QWORD **v11;
  _QWORD *i;
  unint64_t v13;
  float v14;
  float v15;
  _BOOL8 v16;
  unint64_t v17;
  unint64_t v18;
  int8x8_t prime;
  void *v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  unint64_t v24;
  uint8x8_t v25;
  unint64_t v26;
  uint8x8_t v27;
  uint64_t v28;
  _QWORD *v29;
  unint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  unint64_t v33;
  _QWORD *v35;

  v6 = 0x9DDFEA08EB382D69 * ((8 * *a2 + 8) ^ HIDWORD(*a2));
  v7 = 0x9DDFEA08EB382D69 * (HIDWORD(*a2) ^ (v6 >> 47) ^ v6);
  v8 = 0x9DDFEA08EB382D69 * (v7 ^ (v7 >> 47));
  v9 = *((_QWORD *)a1 + 1);
  if (v9)
  {
    v10 = (uint8x8_t)vcnt_s8((int8x8_t)v9);
    v10.i16[0] = vaddlv_u8(v10);
    if (v10.u32[0] > 1uLL)
    {
      v3 = 0x9DDFEA08EB382D69 * (v7 ^ (v7 >> 47));
      if (v8 >= v9)
        v3 = v8 % v9;
    }
    else
    {
      v3 = v8 & (v9 - 1);
    }
    v11 = *(_QWORD ***)(*(_QWORD *)a1 + 8 * v3);
    if (v11)
    {
      for (i = *v11; i; i = (_QWORD *)*i)
      {
        v13 = i[1];
        if (v13 == v8)
        {
          if (i[2] == *a2)
            return i;
        }
        else
        {
          if (v10.u32[0] > 1uLL)
          {
            if (v13 >= v9)
              v13 %= v9;
          }
          else
          {
            v13 &= v9 - 1;
          }
          if (v13 != v3)
            break;
        }
      }
    }
  }
  i = operator new(0x20uLL);
  *i = 0;
  i[1] = v8;
  *((_OWORD *)i + 1) = *a3;
  v14 = (float)(unint64_t)(*((_QWORD *)a1 + 3) + 1);
  v15 = a1[8];
  if (!v9 || (float)(v15 * (float)v9) < v14)
  {
    v16 = 1;
    if (v9 >= 3)
      v16 = (v9 & (v9 - 1)) != 0;
    v17 = v16 | (2 * v9);
    v18 = vcvtps_u32_f32(v14 / v15);
    if (v17 <= v18)
      prime = (int8x8_t)v18;
    else
      prime = (int8x8_t)v17;
    if (*(_QWORD *)&prime == 1)
    {
      prime = (int8x8_t)2;
    }
    else if ((*(_QWORD *)&prime & (*(_QWORD *)&prime - 1)) != 0)
    {
      prime = (int8x8_t)std::__next_prime(*(_QWORD *)&prime);
      v9 = *((_QWORD *)a1 + 1);
    }
    if (*(_QWORD *)&prime > v9)
      goto LABEL_30;
    if (*(_QWORD *)&prime < v9)
    {
      v26 = vcvtps_u32_f32((float)*((unint64_t *)a1 + 3) / a1[8]);
      if (v9 < 3 || (v27 = (uint8x8_t)vcnt_s8((int8x8_t)v9), v27.i16[0] = vaddlv_u8(v27), v27.u32[0] > 1uLL))
      {
        v26 = std::__next_prime(v26);
      }
      else
      {
        v28 = 1 << -(char)__clz(v26 - 1);
        if (v26 >= 2)
          v26 = v28;
      }
      if (*(_QWORD *)&prime <= v26)
        prime = (int8x8_t)v26;
      if (*(_QWORD *)&prime >= v9)
      {
        v9 = *((_QWORD *)a1 + 1);
      }
      else
      {
        if (prime)
        {
LABEL_30:
          if (*(_QWORD *)&prime >> 61)
            std::__throw_bad_array_new_length[abi:ne180100]();
          v20 = operator new(8 * *(_QWORD *)&prime);
          v21 = *(_QWORD **)a1;
          *(_QWORD *)a1 = v20;
          if (v21)
            operator delete(v21);
          v22 = 0;
          *((int8x8_t *)a1 + 1) = prime;
          do
            *(_QWORD *)(*(_QWORD *)a1 + 8 * v22++) = 0;
          while (*(_QWORD *)&prime != v22);
          v23 = (_QWORD *)*((_QWORD *)a1 + 2);
          if (v23)
          {
            v24 = v23[1];
            v25 = (uint8x8_t)vcnt_s8(prime);
            v25.i16[0] = vaddlv_u8(v25);
            if (v25.u32[0] > 1uLL)
            {
              if (v24 >= *(_QWORD *)&prime)
                v24 %= *(_QWORD *)&prime;
            }
            else
            {
              v24 &= *(_QWORD *)&prime - 1;
            }
            *(_QWORD *)(*(_QWORD *)a1 + 8 * v24) = a1 + 4;
            v29 = (_QWORD *)*v23;
            if (*v23)
            {
              do
              {
                v30 = v29[1];
                if (v25.u32[0] > 1uLL)
                {
                  if (v30 >= *(_QWORD *)&prime)
                    v30 %= *(_QWORD *)&prime;
                }
                else
                {
                  v30 &= *(_QWORD *)&prime - 1;
                }
                if (v30 != v24)
                {
                  if (!*(_QWORD *)(*(_QWORD *)a1 + 8 * v30))
                  {
                    *(_QWORD *)(*(_QWORD *)a1 + 8 * v30) = v23;
                    goto LABEL_55;
                  }
                  *v23 = *v29;
                  *v29 = **(_QWORD **)(*(_QWORD *)a1 + 8 * v30);
                  **(_QWORD **)(*(_QWORD *)a1 + 8 * v30) = v29;
                  v29 = v23;
                }
                v30 = v24;
LABEL_55:
                v23 = v29;
                v29 = (_QWORD *)*v29;
                v24 = v30;
              }
              while (v29);
            }
          }
          v9 = (unint64_t)prime;
          goto LABEL_59;
        }
        v35 = *(_QWORD **)a1;
        *(_QWORD *)a1 = 0;
        if (v35)
          operator delete(v35);
        v9 = 0;
        *((_QWORD *)a1 + 1) = 0;
      }
    }
LABEL_59:
    if ((v9 & (v9 - 1)) != 0)
    {
      if (v8 >= v9)
        v3 = v8 % v9;
      else
        v3 = v8;
    }
    else
    {
      v3 = (v9 - 1) & v8;
    }
  }
  v31 = *(_QWORD **)a1;
  v32 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v3);
  if (v32)
  {
    *i = *v32;
LABEL_72:
    *v32 = i;
    goto LABEL_73;
  }
  *i = *((_QWORD *)a1 + 2);
  *((_QWORD *)a1 + 2) = i;
  v31[v3] = a1 + 4;
  if (*i)
  {
    v33 = *(_QWORD *)(*i + 8);
    if ((v9 & (v9 - 1)) != 0)
    {
      if (v33 >= v9)
        v33 %= v9;
    }
    else
    {
      v33 &= v9 - 1;
    }
    v32 = (_QWORD *)(*(_QWORD *)a1 + 8 * v33);
    goto LABEL_72;
  }
LABEL_73:
  ++*((_QWORD *)a1 + 3);
  return i;
}

void sub_18889A468(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

BOOL google::protobuf::internal::RepeatedFieldWrapper<int>::IsEmpty(uint64_t a1, _DWORD *a2)
{
  return *a2 == 0;
}

uint64_t google::protobuf::internal::RepeatedFieldWrapper<int>::Size(uint64_t a1, unsigned int *a2)
{
  return *a2;
}

uint64_t google::protobuf::internal::RepeatedFieldWrapper<int>::Get(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)a1 + 136))(a1, *(_QWORD *)(a2 + 8) + 4 * a3, a4);
}

void google::protobuf::internal::RepeatedFieldWrapper<int>::Clear(uint64_t a1, _DWORD *a2)
{
  *a2 = 0;
}

uint64_t google::protobuf::internal::RepeatedFieldWrapper<int>::Set(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;

  result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 128))(a1, a4);
  *(_DWORD *)(*(_QWORD *)(a2 + 8) + 4 * a3) = result;
  return result;
}

void google::protobuf::internal::RepeatedFieldWrapper<int>::Add(uint64_t a1, unsigned int *a2, uint64_t a3)
{
  int v4;
  int v5;
  uint64_t v6;
  unsigned int v7;

  v4 = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 128))(a1, a3);
  v5 = v4;
  v6 = *a2;
  if ((_DWORD)v6 == a2[1])
  {
    v7 = v6 + 1;
    google::protobuf::RepeatedField<int>::Reserve(a2, v6 + 1);
    *(_DWORD *)(*((_QWORD *)a2 + 1) + 4 * v6) = v5;
  }
  else
  {
    *(_DWORD *)(*((_QWORD *)a2 + 1) + 4 * v6) = v4;
    v7 = v6 + 1;
  }
  *a2 = v7;
}

void google::protobuf::internal::RepeatedFieldWrapper<int>::RemoveLast(uint64_t a1, _DWORD *a2)
{
  --*a2;
}

void google::protobuf::internal::RepeatedFieldWrapper<int>::SwapElements(uint64_t a1, uint64_t a2, int a3, int a4)
{
  uint64_t v4;
  int v5;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_DWORD *)(v4 + 4 * a3);
  *(_DWORD *)(v4 + 4 * a3) = *(_DWORD *)(v4 + 4 * a4);
  *(_DWORD *)(v4 + 4 * a4) = v5;
}

void google::protobuf::internal::RepeatedFieldPrimitiveAccessor<int>::Swap(uint64_t a1, int *a2, uint64_t a3, int *a4)
{
  int v6;
  const char *v7;
  int v8;
  std::string __p;

  if (a1 != a3)
  {
    v6 = 3;
    v7 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/reflection_internal.h";
    v8 = 279;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "CHECK failed: this == other_mutator: ");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v6);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
  google::protobuf::RepeatedField<int>::Swap(a2, a4);
}

void sub_18889A610(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::internal::RandomAccessRepeatedFieldAccessor::BeginIterator(google::protobuf::internal::RandomAccessRepeatedFieldAccessor *this, const void *a2)
{
  return 0;
}

uint64_t google::protobuf::internal::RandomAccessRepeatedFieldAccessor::EndIterator(google::protobuf::internal::RandomAccessRepeatedFieldAccessor *this, const void *a2)
{
  return (*(int (**)(google::protobuf::internal::RandomAccessRepeatedFieldAccessor *, const void *))(*(_QWORD *)this + 8))(this, a2);
}

const void *google::protobuf::internal::RandomAccessRepeatedFieldAccessor::CopyIterator(google::protobuf::internal::RandomAccessRepeatedFieldAccessor *this, const void *a2, const void *a3)
{
  return a3;
}

uint64_t google::protobuf::internal::RandomAccessRepeatedFieldAccessor::AdvanceIterator(google::protobuf::internal::RandomAccessRepeatedFieldAccessor *this, const void *a2, void *a3)
{
  return (uint64_t)a3 + 1;
}

BOOL google::protobuf::internal::RandomAccessRepeatedFieldAccessor::EqualsIterator(google::protobuf::internal::RandomAccessRepeatedFieldAccessor *this, const void *a2, const void *a3, const void *a4)
{
  return a3 == a4;
}

uint64_t google::protobuf::internal::RandomAccessRepeatedFieldAccessor::GetIteratorValue(google::protobuf::internal::RandomAccessRepeatedFieldAccessor *this, const void *a2, const void *a3, void *a4)
{
  return (*(uint64_t (**)(google::protobuf::internal::RandomAccessRepeatedFieldAccessor *, const void *, const void *, void *))(*(_QWORD *)this + 16))(this, a2, a3, a4);
}

uint64_t google::protobuf::internal::RepeatedFieldPrimitiveAccessor<int>::ConvertToT(uint64_t a1, unsigned int *a2)
{
  return *a2;
}

uint64_t google::protobuf::internal::RepeatedFieldPrimitiveAccessor<int>::ConvertFromT(uint64_t a1, uint64_t a2)
{
  return a2;
}

BOOL google::protobuf::internal::RepeatedFieldWrapper<unsigned int>::IsEmpty(uint64_t a1, _DWORD *a2)
{
  return *a2 == 0;
}

uint64_t google::protobuf::internal::RepeatedFieldWrapper<unsigned int>::Size(uint64_t a1, unsigned int *a2)
{
  return *a2;
}

uint64_t google::protobuf::internal::RepeatedFieldWrapper<unsigned int>::Get(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)a1 + 136))(a1, *(_QWORD *)(a2 + 8) + 4 * a3, a4);
}

void google::protobuf::internal::RepeatedFieldWrapper<unsigned int>::Clear(uint64_t a1, _DWORD *a2)
{
  *a2 = 0;
}

uint64_t google::protobuf::internal::RepeatedFieldWrapper<unsigned int>::Set(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;

  result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 128))(a1, a4);
  *(_DWORD *)(*(_QWORD *)(a2 + 8) + 4 * a3) = result;
  return result;
}

void google::protobuf::internal::RepeatedFieldWrapper<unsigned int>::Add(uint64_t a1, unsigned int *a2, uint64_t a3)
{
  int v4;
  int v5;
  uint64_t v6;
  unsigned int v7;

  v4 = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 128))(a1, a3);
  v5 = v4;
  v6 = *a2;
  if ((_DWORD)v6 == a2[1])
  {
    v7 = v6 + 1;
    google::protobuf::RepeatedField<int>::Reserve(a2, v6 + 1);
    *(_DWORD *)(*((_QWORD *)a2 + 1) + 4 * v6) = v5;
  }
  else
  {
    *(_DWORD *)(*((_QWORD *)a2 + 1) + 4 * v6) = v4;
    v7 = v6 + 1;
  }
  *a2 = v7;
}

void google::protobuf::internal::RepeatedFieldWrapper<unsigned int>::RemoveLast(uint64_t a1, _DWORD *a2)
{
  --*a2;
}

void google::protobuf::internal::RepeatedFieldWrapper<unsigned int>::SwapElements(uint64_t a1, uint64_t a2, int a3, int a4)
{
  uint64_t v4;
  int v5;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_DWORD *)(v4 + 4 * a3);
  *(_DWORD *)(v4 + 4 * a3) = *(_DWORD *)(v4 + 4 * a4);
  *(_DWORD *)(v4 + 4 * a4) = v5;
}

void google::protobuf::internal::RepeatedFieldPrimitiveAccessor<unsigned int>::Swap(uint64_t a1, int *a2, uint64_t a3, int *a4)
{
  int v6;
  const char *v7;
  int v8;
  std::string __p;

  if (a1 != a3)
  {
    v6 = 3;
    v7 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/reflection_internal.h";
    v8 = 279;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "CHECK failed: this == other_mutator: ");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v6);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
  google::protobuf::RepeatedField<unsigned int>::Swap(a2, a4);
}

void sub_18889A828(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::internal::RepeatedFieldPrimitiveAccessor<unsigned int>::ConvertToT(uint64_t a1, unsigned int *a2)
{
  return *a2;
}

uint64_t google::protobuf::internal::RepeatedFieldPrimitiveAccessor<unsigned int>::ConvertFromT(uint64_t a1, uint64_t a2)
{
  return a2;
}

BOOL google::protobuf::internal::RepeatedFieldWrapper<long long>::IsEmpty(uint64_t a1, _DWORD *a2)
{
  return *a2 == 0;
}

uint64_t google::protobuf::internal::RepeatedFieldWrapper<long long>::Size(uint64_t a1, unsigned int *a2)
{
  return *a2;
}

uint64_t google::protobuf::internal::RepeatedFieldWrapper<long long>::Get(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)a1 + 136))(a1, *(_QWORD *)(a2 + 8) + 8 * a3, a4);
}

void google::protobuf::internal::RepeatedFieldWrapper<long long>::Clear(uint64_t a1, _DWORD *a2)
{
  *a2 = 0;
}

uint64_t google::protobuf::internal::RepeatedFieldWrapper<long long>::Set(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;

  result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 128))(a1, a4);
  *(_QWORD *)(*(_QWORD *)(a2 + 8) + 8 * a3) = result;
  return result;
}

void google::protobuf::internal::RepeatedFieldWrapper<long long>::Add(uint64_t a1, unsigned int *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;

  v4 = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 128))(a1, a3);
  v5 = v4;
  v6 = *a2;
  if ((_DWORD)v6 == a2[1])
  {
    v7 = v6 + 1;
    google::protobuf::RepeatedField<long long>::Reserve(a2, v6 + 1);
    *(_QWORD *)(*((_QWORD *)a2 + 1) + 8 * v6) = v5;
  }
  else
  {
    *(_QWORD *)(*((_QWORD *)a2 + 1) + 8 * v6) = v4;
    v7 = v6 + 1;
  }
  *a2 = v7;
}

void google::protobuf::internal::RepeatedFieldWrapper<long long>::RemoveLast(uint64_t a1, _DWORD *a2)
{
  --*a2;
}

void google::protobuf::internal::RepeatedFieldWrapper<long long>::SwapElements(uint64_t a1, uint64_t a2, int a3, int a4)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(v4 + 8 * a3);
  *(_QWORD *)(v4 + 8 * a3) = *(_QWORD *)(v4 + 8 * a4);
  *(_QWORD *)(v4 + 8 * a4) = v5;
}

void google::protobuf::internal::RepeatedFieldPrimitiveAccessor<long long>::Swap(uint64_t a1, int *a2, uint64_t a3, int *a4)
{
  int v6;
  const char *v7;
  int v8;
  std::string __p;

  if (a1 != a3)
  {
    v6 = 3;
    v7 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/reflection_internal.h";
    v8 = 279;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "CHECK failed: this == other_mutator: ");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v6);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
  google::protobuf::RepeatedField<long long>::Swap(a2, a4);
}

void sub_18889A9EC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::internal::RepeatedFieldPrimitiveAccessor<long long>::ConvertToT(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)a2;
}

uint64_t google::protobuf::internal::RepeatedFieldPrimitiveAccessor<long long>::ConvertFromT(uint64_t a1, uint64_t a2)
{
  return a2;
}

BOOL google::protobuf::internal::RepeatedFieldWrapper<unsigned long long>::IsEmpty(uint64_t a1, _DWORD *a2)
{
  return *a2 == 0;
}

uint64_t google::protobuf::internal::RepeatedFieldWrapper<unsigned long long>::Size(uint64_t a1, unsigned int *a2)
{
  return *a2;
}

uint64_t google::protobuf::internal::RepeatedFieldWrapper<unsigned long long>::Get(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)a1 + 136))(a1, *(_QWORD *)(a2 + 8) + 8 * a3, a4);
}

void google::protobuf::internal::RepeatedFieldWrapper<unsigned long long>::Clear(uint64_t a1, _DWORD *a2)
{
  *a2 = 0;
}

uint64_t google::protobuf::internal::RepeatedFieldWrapper<unsigned long long>::Set(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;

  result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 128))(a1, a4);
  *(_QWORD *)(*(_QWORD *)(a2 + 8) + 8 * a3) = result;
  return result;
}

void google::protobuf::internal::RepeatedFieldWrapper<unsigned long long>::Add(uint64_t a1, unsigned int *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;

  v4 = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 128))(a1, a3);
  v5 = v4;
  v6 = *a2;
  if ((_DWORD)v6 == a2[1])
  {
    v7 = v6 + 1;
    google::protobuf::RepeatedField<long long>::Reserve(a2, v6 + 1);
    *(_QWORD *)(*((_QWORD *)a2 + 1) + 8 * v6) = v5;
  }
  else
  {
    *(_QWORD *)(*((_QWORD *)a2 + 1) + 8 * v6) = v4;
    v7 = v6 + 1;
  }
  *a2 = v7;
}

void google::protobuf::internal::RepeatedFieldWrapper<unsigned long long>::RemoveLast(uint64_t a1, _DWORD *a2)
{
  --*a2;
}

void google::protobuf::internal::RepeatedFieldWrapper<unsigned long long>::SwapElements(uint64_t a1, uint64_t a2, int a3, int a4)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(v4 + 8 * a3);
  *(_QWORD *)(v4 + 8 * a3) = *(_QWORD *)(v4 + 8 * a4);
  *(_QWORD *)(v4 + 8 * a4) = v5;
}

void google::protobuf::internal::RepeatedFieldPrimitiveAccessor<unsigned long long>::Swap(uint64_t a1, int *a2, uint64_t a3, int *a4)
{
  int v6;
  const char *v7;
  int v8;
  std::string __p;

  if (a1 != a3)
  {
    v6 = 3;
    v7 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/reflection_internal.h";
    v8 = 279;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "CHECK failed: this == other_mutator: ");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v6);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
  google::protobuf::RepeatedField<unsigned long long>::Swap(a2, a4);
}

void sub_18889ABB0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::internal::RepeatedFieldPrimitiveAccessor<unsigned long long>::ConvertToT(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)a2;
}

uint64_t google::protobuf::internal::RepeatedFieldPrimitiveAccessor<unsigned long long>::ConvertFromT(uint64_t a1, uint64_t a2)
{
  return a2;
}

BOOL google::protobuf::internal::RepeatedFieldWrapper<float>::IsEmpty(uint64_t a1, _DWORD *a2)
{
  return *a2 == 0;
}

uint64_t google::protobuf::internal::RepeatedFieldWrapper<float>::Size(uint64_t a1, unsigned int *a2)
{
  return *a2;
}

uint64_t google::protobuf::internal::RepeatedFieldWrapper<float>::Get(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)a1 + 136))(a1, *(_QWORD *)(a2 + 8) + 4 * a3, a4);
}

void google::protobuf::internal::RepeatedFieldWrapper<float>::Clear(uint64_t a1, _DWORD *a2)
{
  *a2 = 0;
}

void google::protobuf::internal::RepeatedFieldWrapper<float>::Set(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  *(float *)(*(_QWORD *)(a2 + 8) + 4 * a3) = (*(float (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 128))(a1, a4);
}

void google::protobuf::internal::RepeatedFieldWrapper<float>::Add(uint64_t a1, unsigned int *a2, uint64_t a3)
{
  float v4;
  float v5;
  uint64_t v6;
  unsigned int v7;

  v4 = (*(float (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 128))(a1, a3);
  v5 = v4;
  v6 = *a2;
  if ((_DWORD)v6 == a2[1])
  {
    v7 = v6 + 1;
    google::protobuf::RepeatedField<int>::Reserve(a2, v6 + 1);
    *(float *)(*((_QWORD *)a2 + 1) + 4 * v6) = v5;
  }
  else
  {
    *(float *)(*((_QWORD *)a2 + 1) + 4 * v6) = v4;
    v7 = v6 + 1;
  }
  *a2 = v7;
}

void google::protobuf::internal::RepeatedFieldWrapper<float>::RemoveLast(uint64_t a1, _DWORD *a2)
{
  --*a2;
}

float google::protobuf::internal::RepeatedFieldWrapper<float>::SwapElements(uint64_t a1, uint64_t a2, int a3, int a4)
{
  uint64_t v4;
  float result;

  v4 = *(_QWORD *)(a2 + 8);
  result = *(float *)(v4 + 4 * a3);
  *(_DWORD *)(v4 + 4 * a3) = *(_DWORD *)(v4 + 4 * a4);
  *(float *)(v4 + 4 * a4) = result;
  return result;
}

void google::protobuf::internal::RepeatedFieldPrimitiveAccessor<float>::Swap(uint64_t a1, int *a2, uint64_t a3, int *a4)
{
  int v6;
  const char *v7;
  int v8;
  std::string __p;

  if (a1 != a3)
  {
    v6 = 3;
    v7 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/reflection_internal.h";
    v8 = 279;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "CHECK failed: this == other_mutator: ");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v6);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
  google::protobuf::RepeatedField<float>::Swap(a2, a4);
}

void sub_18889AD7C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

float google::protobuf::internal::RepeatedFieldPrimitiveAccessor<float>::ConvertToT(uint64_t a1, uint64_t a2)
{
  return *(float *)a2;
}

uint64_t google::protobuf::internal::RepeatedFieldPrimitiveAccessor<float>::ConvertFromT(uint64_t a1, uint64_t a2)
{
  return a2;
}

BOOL google::protobuf::internal::RepeatedFieldWrapper<double>::IsEmpty(uint64_t a1, _DWORD *a2)
{
  return *a2 == 0;
}

uint64_t google::protobuf::internal::RepeatedFieldWrapper<double>::Size(uint64_t a1, unsigned int *a2)
{
  return *a2;
}

uint64_t google::protobuf::internal::RepeatedFieldWrapper<double>::Get(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)a1 + 136))(a1, *(_QWORD *)(a2 + 8) + 8 * a3, a4);
}

void google::protobuf::internal::RepeatedFieldWrapper<double>::Clear(uint64_t a1, _DWORD *a2)
{
  *a2 = 0;
}

void google::protobuf::internal::RepeatedFieldWrapper<double>::Set(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  *(double *)(*(_QWORD *)(a2 + 8) + 8 * a3) = (*(double (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 128))(a1, a4);
}

void google::protobuf::internal::RepeatedFieldWrapper<double>::Add(uint64_t a1, unsigned int *a2, uint64_t a3)
{
  double v4;
  double v5;
  uint64_t v6;
  unsigned int v7;

  v4 = (*(double (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 128))(a1, a3);
  v5 = v4;
  v6 = *a2;
  if ((_DWORD)v6 == a2[1])
  {
    v7 = v6 + 1;
    google::protobuf::RepeatedField<long long>::Reserve(a2, v6 + 1);
    *(double *)(*((_QWORD *)a2 + 1) + 8 * v6) = v5;
  }
  else
  {
    *(double *)(*((_QWORD *)a2 + 1) + 8 * v6) = v4;
    v7 = v6 + 1;
  }
  *a2 = v7;
}

void google::protobuf::internal::RepeatedFieldWrapper<double>::RemoveLast(uint64_t a1, _DWORD *a2)
{
  --*a2;
}

double google::protobuf::internal::RepeatedFieldWrapper<double>::SwapElements(uint64_t a1, uint64_t a2, int a3, int a4)
{
  uint64_t v4;
  double result;

  v4 = *(_QWORD *)(a2 + 8);
  result = *(double *)(v4 + 8 * a3);
  *(_QWORD *)(v4 + 8 * a3) = *(_QWORD *)(v4 + 8 * a4);
  *(double *)(v4 + 8 * a4) = result;
  return result;
}

void google::protobuf::internal::RepeatedFieldPrimitiveAccessor<double>::Swap(uint64_t a1, int *a2, uint64_t a3, int *a4)
{
  int v6;
  const char *v7;
  int v8;
  std::string __p;

  if (a1 != a3)
  {
    v6 = 3;
    v7 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/reflection_internal.h";
    v8 = 279;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "CHECK failed: this == other_mutator: ");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v6);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
  google::protobuf::RepeatedField<double>::Swap(a2, a4);
}

void sub_18889AF48(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

double google::protobuf::internal::RepeatedFieldPrimitiveAccessor<double>::ConvertToT(uint64_t a1, uint64_t a2)
{
  return *(double *)a2;
}

uint64_t google::protobuf::internal::RepeatedFieldPrimitiveAccessor<double>::ConvertFromT(uint64_t a1, uint64_t a2)
{
  return a2;
}

BOOL google::protobuf::internal::RepeatedFieldWrapper<BOOL>::IsEmpty(uint64_t a1, _DWORD *a2)
{
  return *a2 == 0;
}

uint64_t google::protobuf::internal::RepeatedFieldWrapper<BOOL>::Size(uint64_t a1, unsigned int *a2)
{
  return *a2;
}

uint64_t google::protobuf::internal::RepeatedFieldWrapper<BOOL>::Get(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)a1 + 136))(a1, *(_QWORD *)(a2 + 8) + a3, a4);
}

void google::protobuf::internal::RepeatedFieldWrapper<BOOL>::Clear(uint64_t a1, _DWORD *a2)
{
  *a2 = 0;
}

uint64_t google::protobuf::internal::RepeatedFieldWrapper<BOOL>::Set(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;

  result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 128))(a1, a4);
  *(_BYTE *)(*(_QWORD *)(a2 + 8) + a3) = result;
  return result;
}

void google::protobuf::internal::RepeatedFieldWrapper<BOOL>::Add(uint64_t a1, unsigned int *a2, uint64_t a3)
{
  char v4;
  char v5;
  uint64_t v6;
  unsigned int v7;

  v4 = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 128))(a1, a3);
  v5 = v4;
  v6 = *a2;
  if ((_DWORD)v6 == a2[1])
  {
    v7 = v6 + 1;
    google::protobuf::RepeatedField<BOOL>::Reserve(a2, v6 + 1);
    *(_BYTE *)(*((_QWORD *)a2 + 1) + v6) = v5;
  }
  else
  {
    *(_BYTE *)(*((_QWORD *)a2 + 1) + v6) = v4;
    v7 = v6 + 1;
  }
  *a2 = v7;
}

void google::protobuf::internal::RepeatedFieldWrapper<BOOL>::RemoveLast(uint64_t a1, _DWORD *a2)
{
  --*a2;
}

void google::protobuf::internal::RepeatedFieldWrapper<BOOL>::SwapElements(uint64_t a1, uint64_t a2, int a3, int a4)
{
  uint64_t v4;
  char v5;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(v4 + a3);
  *(_BYTE *)(v4 + a3) = *(_BYTE *)(v4 + a4);
  *(_BYTE *)(v4 + a4) = v5;
}

void google::protobuf::internal::RepeatedFieldPrimitiveAccessor<BOOL>::Swap(uint64_t a1, int *a2, uint64_t a3, int *a4)
{
  int v6;
  const char *v7;
  int v8;
  std::string __p;

  if (a1 != a3)
  {
    v6 = 3;
    v7 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/reflection_internal.h";
    v8 = 279;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "CHECK failed: this == other_mutator: ");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v6);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
  google::protobuf::RepeatedField<BOOL>::Swap(a2, a4);
}

void sub_18889B10C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::internal::RepeatedFieldPrimitiveAccessor<BOOL>::ConvertToT(uint64_t a1, unsigned __int8 *a2)
{
  return *a2;
}

uint64_t google::protobuf::internal::RepeatedFieldPrimitiveAccessor<BOOL>::ConvertFromT(uint64_t a1, uint64_t a2)
{
  return a2;
}

BOOL google::protobuf::internal::RepeatedPtrFieldWrapper<std::string>::IsEmpty(uint64_t a1, uint64_t a2)
{
  return *(_DWORD *)(a2 + 8) == 0;
}

uint64_t google::protobuf::internal::RepeatedPtrFieldWrapper<std::string>::Size(uint64_t a1, uint64_t a2)
{
  return *(unsigned int *)(a2 + 8);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldWrapper<std::string>::Get(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)a1 + 144))(a1, *(_QWORD *)(*(_QWORD *)(a2 + 16) + 8 * a3 + 8), a4);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldWrapper<std::string>::Clear(uint64_t a1, uint64_t a2)
{
  return google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>(a2);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldWrapper<std::string>::Set(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a1 + 136))(a1, a4, *(_QWORD *)(*(_QWORD *)(a2 + 16) + 8 * a3 + 8));
}

unsigned int *google::protobuf::internal::RepeatedPtrFieldWrapper<std::string>::Add(uint64_t a1, unsigned int *a2, uint64_t a3)
{
  uint64_t v6;

  v6 = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 128))(a1, a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)a1 + 136))(a1, a3, v6);
  return google::protobuf::internal::RepeatedPtrFieldBase::AddAllocatedInternal<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>(a2, v6);
}

void google::protobuf::internal::RepeatedPtrFieldWrapper<std::string>::RemoveLast(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(a2 + 16);
  v3 = *(int *)(a2 + 8) - 1;
  *(_DWORD *)(a2 + 8) = v3;
  v4 = *(_QWORD *)(v2 + 8 * v3 + 8);
  if (*(char *)(v4 + 23) < 0)
  {
    **(_BYTE **)v4 = 0;
    *(_QWORD *)(v4 + 8) = 0;
  }
  else
  {
    *(_BYTE *)v4 = 0;
    *(_BYTE *)(v4 + 23) = 0;
  }
}

void google::protobuf::internal::RepeatedPtrFieldWrapper<std::string>::SwapElements(uint64_t a1, uint64_t a2, int a3, int a4)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 16) + 8;
  v5 = *(_QWORD *)(v4 + 8 * a3);
  *(_QWORD *)(v4 + 8 * a3) = *(_QWORD *)(v4 + 8 * a4);
  *(_QWORD *)(v4 + 8 * a4) = v5;
}

__n128 google::protobuf::internal::RepeatedPtrFieldStringAccessor::Swap(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  __n128 result;
  int v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  std::string v18;
  uint64_t v19;
  __int128 v20;
  void *__p[2];
  uint64_t v22;

  if (a1 == a3)
  {
    if (a2 != (unint64_t *)a4)
    {
      if (*(_QWORD *)a4 == *a2)
      {
        v16 = a2[1];
        v17 = a2[2];
        result = *(__n128 *)(a4 + 8);
        *(__n128 *)(a2 + 1) = result;
        *(_QWORD *)(a4 + 8) = v16;
        *(_QWORD *)(a4 + 16) = v17;
      }
      else
      {
        google::protobuf::internal::RepeatedPtrFieldBase::SwapFallback<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)a2, (unint64_t *)a4);
      }
    }
  }
  else
  {
    v19 = 0;
    v20 = 0uLL;
    if (&v19 != (uint64_t *)a2)
    {
      if (*a2)
      {
        google::protobuf::internal::RepeatedPtrFieldBase::SwapFallback<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)&v19, a2);
      }
      else
      {
        v20 = *(_OWORD *)(a2 + 1);
        a2[1] = 0;
        a2[2] = 0;
      }
    }
    v9 = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)a3 + 8))(a3, a4);
    if (v9 >= 1)
    {
      v10 = 0;
      do
      {
        __p[1] = 0;
        v22 = 0;
        __p[0] = 0;
        v11 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void **))(*(_QWORD *)a3 + 16))(a3, a4, v10, __p);
        if (*(char *)(v11 + 23) < 0)
        {
          std::string::__init_copy_ctor_external(&v18, *(const std::string::value_type **)v11, *(_QWORD *)(v11 + 8));
        }
        else
        {
          v12 = *(_OWORD *)v11;
          v18.__r_.__value_.__r.__words[2] = *(_QWORD *)(v11 + 16);
          *(_OWORD *)&v18.__r_.__value_.__l.__data_ = v12;
        }
        if (SHIBYTE(v22) < 0)
          operator delete(__p[0]);
        google::protobuf::internal::RepeatedFieldAccessor::Add<std::string,std::string>(a1, (uint64_t)a2, (uint64_t)&v18);
        if (SHIBYTE(v18.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v18.__r_.__value_.__l.__data_);
        v10 = (v10 + 1);
      }
      while (v9 != (_DWORD)v10);
    }
    v13 = *((unsigned int *)a2 + 2);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a3 + 24))(a3, a4);
    if ((int)v13 >= 1)
    {
      v14 = 0;
      v15 = 8 * v13;
      do
      {
        google::protobuf::internal::RepeatedFieldAccessor::Add<std::string,std::string>(a3, a4, *(_QWORD *)(*((_QWORD *)&v20 + 1) + v14 + 8));
        v14 += 8;
      }
      while (v15 != v14);
    }
    google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>(&v19);
  }
  return result;
}

void sub_18889B418(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>(&a16);
  _Unwind_Resume(a1);
}

_QWORD *google::protobuf::internal::RepeatedPtrFieldStringAccessor::New(google::protobuf::internal::RepeatedPtrFieldStringAccessor *this, const void *a2)
{
  _QWORD *result;

  result = (_QWORD *)operator new();
  result[1] = 0;
  result[2] = 0;
  *result = 0;
  return result;
}

std::string *google::protobuf::internal::RepeatedPtrFieldStringAccessor::ConvertToT(int a1, const std::string *a2, std::string *this)
{
  return std::string::operator=(this, a2);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldStringAccessor::ConvertFromT(uint64_t a1, uint64_t a2)
{
  return a2;
}

void google::protobuf::internal::RepeatedFieldAccessor::Add<std::string,std::string>(uint64_t a1, uint64_t a2, uint64_t a3)
{
  std::string __p;

  if (*(char *)(a3 + 23) < 0)
    std::string::__init_copy_ctor_external(&__p, *(const std::string::value_type **)a3, *(_QWORD *)(a3 + 8));
  else
    __p = *(std::string *)a3;
  (*(void (**)(uint64_t, uint64_t, std::string *))(*(_QWORD *)a1 + 40))(a1, a2, &__p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
}

void sub_18889B51C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

BOOL google::protobuf::internal::MapFieldAccessor::IsEmpty(google::protobuf::internal::MapFieldAccessor *this, google::protobuf::internal::MapFieldBase *a2)
{
  google::protobuf::internal::MapFieldBase::SyncRepeatedFieldWithMap(a2);
  return *(_DWORD *)(*((_QWORD *)a2 + 2) + 8) == 0;
}

uint64_t google::protobuf::internal::MapFieldAccessor::Size(google::protobuf::internal::MapFieldAccessor *this, google::protobuf::internal::MapFieldBase *a2)
{
  google::protobuf::internal::MapFieldBase::SyncRepeatedFieldWithMap(a2);
  return *(unsigned int *)(*((_QWORD *)a2 + 2) + 8);
}

uint64_t google::protobuf::internal::MapFieldAccessor::Get(google::protobuf::internal::MapFieldAccessor *this, google::protobuf::internal::MapFieldBase *a2, int a3, void *a4)
{
  google::protobuf::internal::MapFieldBase::SyncRepeatedFieldWithMap(a2);
  return *(_QWORD *)(*(_QWORD *)(*((_QWORD *)a2 + 2) + 16) + 8 * a3 + 8);
}

void google::protobuf::internal::MapFieldAccessor::Clear(google::protobuf::internal::MapFieldAccessor *this, google::protobuf::internal::MapFieldBase *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;

  google::protobuf::internal::MapFieldBase::SyncRepeatedFieldWithMap(a2);
  *((_DWORD *)a2 + 22) = 1;
  v3 = *((_QWORD *)a2 + 2);
  v4 = *(unsigned int *)(v3 + 8);
  if ((int)v4 >= 1)
  {
    v5 = (uint64_t *)(*(_QWORD *)(v3 + 16) + 8);
    do
    {
      v6 = *v5++;
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 40))(v6);
      --v4;
    }
    while (v4);
    *(_DWORD *)(v3 + 8) = 0;
  }
}

uint64_t google::protobuf::internal::MapFieldAccessor::Set(google::protobuf::internal::MapFieldAccessor *this, google::protobuf::internal::MapFieldBase *a2, int a3, const void *a4)
{
  uint64_t v7;

  google::protobuf::internal::MapFieldBase::SyncRepeatedFieldWithMap(a2);
  *((_DWORD *)a2 + 22) = 1;
  v7 = *(_QWORD *)(*(_QWORD *)(*((_QWORD *)a2 + 2) + 16) + 8 * a3 + 8);
  return (*(uint64_t (**)(uint64_t, const void *))(*(_QWORD *)v7 + 112))(v7, a4);
}

unsigned int *google::protobuf::internal::MapFieldAccessor::Add(google::protobuf::internal::MapFieldAccessor *this, unsigned int **a2, const void *a3)
{
  _QWORD *v5;

  v5 = (_QWORD *)(*(uint64_t (**)(const void *))(*(_QWORD *)a3 + 24))(a3);
  (*(void (**)(_QWORD *, const void *))(*v5 + 112))(v5, a3);
  google::protobuf::internal::MapFieldBase::SyncRepeatedFieldWithMap((google::protobuf::internal::MapFieldBase *)a2);
  *((_DWORD *)a2 + 22) = 1;
  return google::protobuf::internal::RepeatedPtrFieldBase::AddAllocatedInternal<google::protobuf::RepeatedPtrField<google::protobuf::Message>::TypeHandler>(a2[2], v5);
}

uint64_t google::protobuf::internal::MapFieldAccessor::RemoveLast(google::protobuf::internal::MapFieldAccessor *this, google::protobuf::internal::MapFieldBase *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  google::protobuf::internal::MapFieldBase::SyncRepeatedFieldWithMap(a2);
  *((_DWORD *)a2 + 22) = 1;
  v3 = *((_QWORD *)a2 + 2);
  v4 = *(_QWORD *)(v3 + 16);
  v5 = *(int *)(v3 + 8) - 1;
  *(_DWORD *)(v3 + 8) = v5;
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(v4 + 8 * v5 + 8) + 40))(*(_QWORD *)(v4 + 8 * v5 + 8));
}

void google::protobuf::internal::MapFieldAccessor::SwapElements(google::protobuf::internal::MapFieldAccessor *this, google::protobuf::internal::MapFieldBase *a2, int a3, int a4)
{
  uint64_t v7;
  uint64_t v8;

  google::protobuf::internal::MapFieldBase::SyncRepeatedFieldWithMap(a2);
  *((_DWORD *)a2 + 22) = 1;
  v7 = *(_QWORD *)(*((_QWORD *)a2 + 2) + 16) + 8;
  v8 = *(_QWORD *)(v7 + 8 * a3);
  *(_QWORD *)(v7 + 8 * a3) = *(_QWORD *)(v7 + 8 * a4);
  *(_QWORD *)(v7 + 8 * a4) = v8;
}

__n128 google::protobuf::internal::MapFieldAccessor::Swap(uint64_t a1, google::protobuf::internal::MapFieldBase *this, uint64_t a3, uint64_t a4)
{
  _QWORD *v6;
  __n128 result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  const char *v12;
  int v13;
  std::string __p;

  if (a1 != a3)
  {
    v11 = 3;
    v12 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/reflection_internal.h";
    v13 = 235;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "CHECK failed: this == other_mutator: ");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v11);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
  google::protobuf::internal::MapFieldBase::SyncRepeatedFieldWithMap(this);
  *((_DWORD *)this + 22) = 1;
  v6 = (_QWORD *)*((_QWORD *)this + 2);
  google::protobuf::internal::MapFieldBase::SyncRepeatedFieldWithMap((google::protobuf::internal::MapFieldBase *)a4);
  *(_DWORD *)(a4 + 88) = 1;
  v8 = *(_QWORD *)(a4 + 16);
  if (v6 != (_QWORD *)v8)
  {
    if (*(_QWORD *)v8 == *v6)
    {
      v9 = v6[1];
      v10 = v6[2];
      result = *(__n128 *)(v8 + 8);
      *(__n128 *)(v6 + 1) = result;
      *(_QWORD *)(v8 + 8) = v9;
      *(_QWORD *)(v8 + 16) = v10;
    }
    else
    {
      google::protobuf::internal::RepeatedPtrFieldBase::SwapFallback<google::protobuf::RepeatedPtrField<google::protobuf::Message>::TypeHandler>((google::protobuf::internal::RepeatedPtrFieldBase *)v6, (_QWORD *)v8);
    }
  }
  return result;
}

void sub_18889B880(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void google::protobuf::internal::MapFieldAccessor::~MapFieldAccessor(google::protobuf::internal::MapFieldAccessor *this)
{
  JUMPOUT(0x18D76437CLL);
}

uint64_t google::protobuf::internal::MapFieldAccessor::New(google::protobuf::internal::MapFieldAccessor *this, const void *a2)
{
  return (*(uint64_t (**)(const void *))(*(_QWORD *)a2 + 24))(a2);
}

uint64_t google::protobuf::internal::MapFieldAccessor::ConvertToEntry(google::protobuf::internal::MapFieldAccessor *this, const void *a2, google::protobuf::Message *a3)
{
  return (*(uint64_t (**)(google::protobuf::Message *, const void *))(*(_QWORD *)a3 + 112))(a3, a2);
}

const google::protobuf::Message *google::protobuf::internal::MapFieldAccessor::ConvertFromEntry(google::protobuf::internal::MapFieldAccessor *this, const google::protobuf::Message *a2, void *a3)
{
  return a2;
}

void google::protobuf::internal::RepeatedPtrFieldBase::SwapFallback<google::protobuf::RepeatedPtrField<google::protobuf::Message>::TypeHandler>(google::protobuf::internal::RepeatedPtrFieldBase *this, _QWORD *a2)
{
  uint64_t v4;
  unsigned int v5;
  uint64_t *v6;
  uint64_t *v7;
  _DWORD *v8;
  int v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  uint64_t *v15;
  uint64_t *v16;
  signed int v17;
  signed int *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;

  v4 = *a2;
  v22 = 0uLL;
  v21 = v4;
  v5 = *((_DWORD *)this + 2);
  if (v5)
  {
    v6 = (uint64_t *)(*((_QWORD *)this + 2) + 8);
    v7 = (uint64_t *)google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)&v21, v5);
    v8 = (_DWORD *)*((_QWORD *)&v22 + 1);
    v9 = v22;
    google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::internal::GenericTypeHandler<google::protobuf::Message>>((uint64_t)&v21, v7, v6, v5, **((_DWORD **)&v22 + 1) - v22);
    LODWORD(v22) = v9 + v5;
    if (*v8 < (signed int)(v9 + v5))
      *v8 = v9 + v5;
    v10 = *((unsigned int *)this + 2);
    if ((int)v10 >= 1)
    {
      v11 = (uint64_t *)(*((_QWORD *)this + 2) + 8);
      do
      {
        v12 = *v11++;
        (*(void (**)(uint64_t))(*(_QWORD *)v12 + 40))(v12);
        --v10;
      }
      while (v10);
      *((_DWORD *)this + 2) = 0;
    }
  }
  v14 = a2 + 1;
  v13 = *((_DWORD *)a2 + 2);
  if (v13)
  {
    v15 = (uint64_t *)(a2[2] + 8);
    v16 = (uint64_t *)google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend(this, v13);
    google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::internal::GenericTypeHandler<google::protobuf::Message>>((uint64_t)this, v16, v15, v13, **((_DWORD **)this + 2) - *((_DWORD *)this + 2));
    v17 = *((_DWORD *)this + 2) + v13;
    *((_DWORD *)this + 2) = v17;
    v18 = (signed int *)*((_QWORD *)this + 2);
    if (*v18 < v17)
      *v18 = v17;
  }
  v19 = *v14;
  v20 = v14[1];
  *(_OWORD *)v14 = v22;
  *(_QWORD *)&v22 = v19;
  *((_QWORD *)&v22 + 1) = v20;
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<google::protobuf::Message>::TypeHandler>(&v21);
}

BOOL google::protobuf::internal::RepeatedPtrFieldWrapper<google::protobuf::Message>::IsEmpty(uint64_t a1, uint64_t a2)
{
  return *(_DWORD *)(a2 + 8) == 0;
}

uint64_t google::protobuf::internal::RepeatedPtrFieldWrapper<google::protobuf::Message>::Size(uint64_t a1, uint64_t a2)
{
  return *(unsigned int *)(a2 + 8);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldWrapper<google::protobuf::Message>::Get(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)a1 + 144))(a1, *(_QWORD *)(*(_QWORD *)(a2 + 16) + 8 * a3 + 8), a4);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldWrapper<google::protobuf::Message>::Clear(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t result;

  v2 = *(unsigned int *)(a2 + 8);
  if ((int)v2 >= 1)
  {
    v4 = (uint64_t *)(*(_QWORD *)(a2 + 16) + 8);
    do
    {
      v5 = *v4++;
      result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
      --v2;
    }
    while (v2);
    *(_DWORD *)(a2 + 8) = 0;
  }
  return result;
}

uint64_t google::protobuf::internal::RepeatedPtrFieldWrapper<google::protobuf::Message>::Set(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a1 + 136))(a1, a4, *(_QWORD *)(*(_QWORD *)(a2 + 16) + 8 * a3 + 8));
}

unsigned int *google::protobuf::internal::RepeatedPtrFieldWrapper<google::protobuf::Message>::Add(uint64_t a1, unsigned int *a2, uint64_t a3)
{
  _QWORD *v6;

  v6 = (_QWORD *)(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 128))(a1, a3);
  (*(void (**)(uint64_t, uint64_t, _QWORD *))(*(_QWORD *)a1 + 136))(a1, a3, v6);
  return google::protobuf::internal::RepeatedPtrFieldBase::AddAllocatedInternal<google::protobuf::RepeatedPtrField<google::protobuf::Message>::TypeHandler>(a2, v6);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldWrapper<google::protobuf::Message>::RemoveLast(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a2 + 16);
  v3 = *(int *)(a2 + 8) - 1;
  *(_DWORD *)(a2 + 8) = v3;
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(v2 + 8 * v3 + 8) + 40))(*(_QWORD *)(v2 + 8 * v3 + 8));
}

void google::protobuf::internal::RepeatedPtrFieldWrapper<google::protobuf::Message>::SwapElements(uint64_t a1, uint64_t a2, int a3, int a4)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 16) + 8;
  v5 = *(_QWORD *)(v4 + 8 * a3);
  *(_QWORD *)(v4 + 8 * a3) = *(_QWORD *)(v4 + 8 * a4);
  *(_QWORD *)(v4 + 8 * a4) = v5;
}

__n128 google::protobuf::internal::RepeatedPtrFieldMessageAccessor::Swap(uint64_t a1, google::protobuf::internal::RepeatedPtrFieldBase *this, uint64_t a3, uint64_t a4)
{
  __n128 result;
  uint64_t v7;
  uint64_t v8;
  int v9;
  const char *v10;
  int v11;
  std::string __p;

  if (a1 != a3)
  {
    v9 = 3;
    v10 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/reflection_internal.h";
    v11 = 343;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "CHECK failed: this == other_mutator: ");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v9);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
  if (this != (google::protobuf::internal::RepeatedPtrFieldBase *)a4)
  {
    if (*(_QWORD *)a4 == *(_QWORD *)this)
    {
      v7 = *((_QWORD *)this + 1);
      v8 = *((_QWORD *)this + 2);
      result = *(__n128 *)(a4 + 8);
      *(__n128 *)((char *)this + 8) = result;
      *(_QWORD *)(a4 + 8) = v7;
      *(_QWORD *)(a4 + 16) = v8;
    }
    else
    {
      google::protobuf::internal::RepeatedPtrFieldBase::SwapFallback<google::protobuf::RepeatedPtrField<google::protobuf::Message>::TypeHandler>(this, (_QWORD *)a4);
    }
  }
  return result;
}

void sub_18889BC30(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldMessageAccessor::New(google::protobuf::internal::RepeatedPtrFieldMessageAccessor *this, const void *a2)
{
  return (*(uint64_t (**)(const void *))(*(_QWORD *)a2 + 24))(a2);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldMessageAccessor::ConvertToT(google::protobuf::internal::RepeatedPtrFieldMessageAccessor *this, const void *a2, google::protobuf::Message *a3)
{
  return (*(uint64_t (**)(google::protobuf::Message *, const void *))(*(_QWORD *)a3 + 112))(a3, a2);
}

const google::protobuf::Message *google::protobuf::internal::RepeatedPtrFieldMessageAccessor::ConvertFromT(google::protobuf::internal::RepeatedPtrFieldMessageAccessor *this, const google::protobuf::Message *a2, void *a3)
{
  return a2;
}

BOOL google::protobuf::io::ArrayInputStream::Next(google::protobuf::io::ArrayInputStream *this, const void **a2, int *a3)
{
  uint64_t v3;
  int v4;
  int v5;

  v3 = *((int *)this + 6);
  v4 = *((_DWORD *)this + 4);
  if ((int)v3 >= v4)
  {
    *((_DWORD *)this + 7) = 0;
  }
  else
  {
    v5 = v4 - v3;
    if (v4 - (int)v3 >= *((_DWORD *)this + 5))
      v5 = *((_DWORD *)this + 5);
    *((_DWORD *)this + 7) = v5;
    *a2 = (const void *)(*((_QWORD *)this + 1) + v3);
    *a3 = v5;
    *((_DWORD *)this + 6) += *((_DWORD *)this + 7);
  }
  return (int)v3 < v4;
}

void google::protobuf::io::ArrayInputStream::BackUp(google::protobuf::io::ArrayInputStream *this, int a2)
{
  int v4;
  int v5;
  const char *v6;
  int v7;
  std::string __p;

  v4 = *((_DWORD *)this + 7);
  if (v4 <= 0)
  {
    v5 = 3;
    v6 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/io/zero_copy_stream_impl_lite.cc";
    v7 = 80;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "CHECK failed: (last_returned_size_) > (0): ");
    std::string::append(&__p, "BackUp() can only be called after a successful Next().");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v5);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
    v4 = *((_DWORD *)this + 7);
  }
  if (v4 < a2
    && (v5 = 3,
        v6 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/io/zero_copy_stream_impl_lite.cc",
        v7 = 82,
        memset(&__p, 0, sizeof(__p)),
        std::string::append(&__p, "CHECK failed: (count) <= (last_returned_size_): "),
        google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v5),
        SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0))
  {
    operator delete(__p.__r_.__value_.__l.__data_);
    if ((a2 & 0x80000000) == 0)
      goto LABEL_11;
  }
  else if ((a2 & 0x80000000) == 0)
  {
    goto LABEL_11;
  }
  v5 = 3;
  v6 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/io/zero_copy_stream_impl_lite.cc";
  v7 = 83;
  memset(&__p, 0, sizeof(__p));
  std::string::append(&__p, "CHECK failed: (count) >= (0): ");
  google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v5);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
LABEL_11:
  *((_QWORD *)this + 3) = (*((_DWORD *)this + 6) - a2);
}

void sub_18889BE30(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

BOOL google::protobuf::io::ArrayInputStream::Skip(google::protobuf::io::ArrayInputStream *this, int a2)
{
  int v4;
  int v5;
  int v6;
  _BOOL8 result;
  int v8;
  int v9;
  const char *v10;
  int v11;
  std::string __p;

  if (a2 < 0)
  {
    v9 = 3;
    v10 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/io/zero_copy_stream_impl_lite.cc";
    v11 = 89;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "CHECK failed: (count) >= (0): ");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v9);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
  v4 = *((_DWORD *)this + 4);
  v5 = *((_DWORD *)this + 6);
  v6 = v4 - v5;
  result = v4 - v5 >= a2;
  v8 = v5 + a2;
  if (v6 >= a2)
    v4 = v8;
  *((_DWORD *)this + 6) = v4;
  *((_DWORD *)this + 7) = 0;
  return result;
}

void sub_18889BEFC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::io::ArrayInputStream::ByteCount(google::protobuf::io::ArrayInputStream *this)
{
  return *((int *)this + 6);
}

uint64_t google::protobuf::io::StringOutputStream::Next(google::protobuf::io::StringOutputStream *this, void **a2, int *a3)
{
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  std::string::size_type v9;
  uint64_t **v10;
  uint64_t v11;
  int v13;
  const char *v14;
  int v15;
  std::string __p;

  v6 = *((_QWORD *)this + 1);
  if (!v6)
  {
    v13 = 3;
    v14 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/io/zero_copy_stream_impl_lite.cc";
    v15 = 142;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "CHECK failed: target_ != NULL: ");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v13);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
    v6 = *((_QWORD *)this + 1);
  }
  if (*(char *)(v6 + 23) < 0)
  {
    v7 = *(_QWORD *)(v6 + 8);
    v8 = (*(_QWORD *)(v6 + 16) & 0x7FFFFFFFFFFFFFFFLL) - 1;
    if (v7 < v8)
      goto LABEL_10;
  }
  else
  {
    v7 = *(unsigned __int8 *)(v6 + 23);
    if (*(unsigned __int8 *)(v6 + 23) < 0x16u)
    {
      v8 = 22;
      goto LABEL_10;
    }
  }
  v8 = 2 * v7;
LABEL_10:
  if (v7 + 0x7FFFFFFF < v8)
    v8 = v7 + 0x7FFFFFFF;
  if (v8 <= 0x10)
    v9 = 16;
  else
    v9 = v8;
  std::string::resize((std::string *)v6, v9, 0);
  v10 = (uint64_t **)*((_QWORD *)this + 1);
  if (*((char *)v10 + 23) < 0)
    v10 = (uint64_t **)*v10;
  *a2 = (char *)v10 + v7;
  v11 = *((_QWORD *)this + 1);
  if (*(char *)(v11 + 23) < 0)
    v11 = *(_QWORD *)(v11 + 8);
  else
    LODWORD(v11) = *(unsigned __int8 *)(v11 + 23);
  *a3 = v11 - v7;
  return 1;
}

void sub_18889C048(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void google::protobuf::io::StringOutputStream::BackUp(google::protobuf::io::StringOutputStream *this, int a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int v7;
  const char *v8;
  int v9;
  std::string __p;

  if (a2 < 0)
  {
    v7 = 3;
    v8 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/io/zero_copy_stream_impl_lite.cc";
    v9 = 169;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "CHECK failed: (count) >= (0): ");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v7);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
  v4 = *((_QWORD *)this + 1);
  if (!v4)
  {
    v7 = 3;
    v8 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/io/zero_copy_stream_impl_lite.cc";
    v9 = 170;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "CHECK failed: target_ != NULL: ");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v7);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
    v4 = *((_QWORD *)this + 1);
  }
  LODWORD(v5) = *(char *)(v4 + 23);
  if ((v5 & 0x80000000) != 0)
    v6 = *(_QWORD *)(v4 + 8);
  else
    v6 = *(unsigned __int8 *)(v4 + 23);
  if (v6 < a2)
  {
    v7 = 3;
    v8 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/io/zero_copy_stream_impl_lite.cc";
    v9 = 171;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "CHECK failed: (count) <= (target_->size()): ");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v7);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
    v4 = *((_QWORD *)this + 1);
    LOBYTE(v5) = *(_BYTE *)(v4 + 23);
  }
  if ((v5 & 0x80) != 0)
    v5 = *(_QWORD *)(v4 + 8);
  else
    v5 = v5;
  std::string::resize((std::string *)v4, v5 - a2, 0);
}

void sub_18889C1D4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::io::StringOutputStream::ByteCount(google::protobuf::io::StringOutputStream *this)
{
  uint64_t v1;
  int v4;
  const char *v5;
  int v6;
  std::string __p;

  v1 = *((_QWORD *)this + 1);
  if (!v1)
  {
    v4 = 3;
    v5 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/io/zero_copy_stream_impl_lite.cc";
    v6 = 176;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "CHECK failed: target_ != NULL: ");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v4);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
    v1 = *((_QWORD *)this + 1);
  }
  if (*(char *)(v1 + 23) < 0)
    return *(_QWORD *)(v1 + 8);
  else
    return *(unsigned __int8 *)(v1 + 23);
}

void sub_18889C298(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void google::protobuf::io::ArrayInputStream::~ArrayInputStream(google::protobuf::io::ArrayInputStream *this)
{
  JUMPOUT(0x18D76437CLL);
}

void google::protobuf::io::StringOutputStream::~StringOutputStream(google::protobuf::io::StringOutputStream *this)
{
  JUMPOUT(0x18D76437CLL);
}

uint64_t google::protobuf::internal::MergeFromImpl<false>(_BYTE *a1, int64_t a2, google::protobuf::MessageLite *a3, char a4)
{
  _BYTE *v6;
  BOOL v7;
  _BYTE v9[32];
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  int v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v18 = *MEMORY[0x1E0C80C00];
  v10 = 0u;
  v11 = 0u;
  v12 = 0u;
  v13 = 0x7FFFFFFF00000000;
  v14 = google::protobuf::io::CodedInputStream::default_recursion_limit_;
  v15 = 0x80000000;
  v16 = 0;
  v17 = 0;
  v6 = google::protobuf::internal::EpsCopyInputStream::InitFrom((uint64_t)v9, a1, a2);
  if ((*(uint64_t (**)(google::protobuf::MessageLite *, _BYTE *, _BYTE *))(*(_QWORD *)a3 + 88))(a3, v6, v9))
    v7 = (_DWORD)v13 == 0;
  else
    v7 = 0;
  if (v7)
  {
    if ((a4 & 2) != 0
      || ((*(uint64_t (**)(google::protobuf::MessageLite *))(*(_QWORD *)a3 + 48))(a3) & 1) != 0)
    {
      return 1;
    }
    google::protobuf::MessageLite::LogInitializationErrorMessage(a3);
  }
  return 0;
}

void google::protobuf::MessageLite::LogInitializationErrorMessage(google::protobuf::MessageLite *this)
{
  const std::string::value_type *v2;
  std::string::size_type v3;
  const std::string::value_type *v4;
  std::string::size_type v5;
  std::string *p_p;
  std::string::size_type size;
  std::string __p;
  int v9;
  const char *v10;
  int v11;
  std::string v12;
  std::string::value_type *v13;
  std::string::size_type v14;
  unsigned __int8 v15;

  v9 = 2;
  v10 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/message_lite.cc";
  v11 = 133;
  memset(&v12, 0, sizeof(v12));
  memset(&__p, 0, sizeof(__p));
  std::string::append(&__p, "Can't ");
  std::string::append(&__p, "parse");
  std::string::append(&__p, " message of type \"");
  (*(void (**)(std::string::value_type **__return_ptr, google::protobuf::MessageLite *))(*(_QWORD *)this
                                                                                                  + 16))(&v13, this);
  if ((v15 & 0x80u) == 0)
    v2 = (const std::string::value_type *)&v13;
  else
    v2 = v13;
  if ((v15 & 0x80u) == 0)
    v3 = v15;
  else
    v3 = v14;
  std::string::append(&__p, v2, v3);
  if ((char)v15 < 0)
    operator delete(v13);
  std::string::append(&__p, "\" because it is missing required fields: ");
  (*(void (**)(std::string::value_type **__return_ptr, google::protobuf::MessageLite *))(*(_QWORD *)this
                                                                                                  + 56))(&v13, this);
  if ((v15 & 0x80u) == 0)
    v4 = (const std::string::value_type *)&v13;
  else
    v4 = v13;
  if ((v15 & 0x80u) == 0)
    v5 = v15;
  else
    v5 = v14;
  std::string::append(&__p, v4, v5);
  if ((char)v15 < 0)
    operator delete(v13);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    p_p = &__p;
  else
    p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  else
    size = __p.__r_.__value_.__l.__size_;
  std::string::append(&v12, (const std::string::value_type *)p_p, size);
  google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v9);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  if (SHIBYTE(v12.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v12.__r_.__value_.__l.__data_);
}

void sub_18889C53C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a14 < 0)
    operator delete(__p);
  if (a23 < 0)
    operator delete(a18);
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::MessageLite::ParseFrom<(google::protobuf::MessageLite::ParseFlags)1,std::string>(google::protobuf::MessageLite *a1, uint64_t *a2)
{
  const char *v4;
  _BYTE *v6[2];

  (*(void (**)(google::protobuf::MessageLite *))(*(_QWORD *)a1 + 40))(a1);
  google::protobuf::StringPiece::StringPiece<std::allocator<char>>(v6, a2, v4);
  return google::protobuf::internal::MergeFromImpl<false>(v6[0], (int64_t)v6[1], a1, 1);
}

BOOL google::protobuf::MessageLite::AppendPartialToString(uint64_t a1, std::string *a2)
{
  std::string *v2;
  std::string::size_type size;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  void **v8;
  std::string::size_type v9;
  void *__p[2];
  unsigned __int8 v12;
  int v13;
  const char *v14;
  int v15;
  std::string v16;
  char __str[8];
  uint64_t v18;
  uint64_t v19;
  __int16 v20;
  char v21;
  char v22;
  uint64_t v23;

  v2 = a2;
  v23 = *MEMORY[0x1E0C80C00];
  if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0)
    size = a2->__r_.__value_.__l.__size_;
  else
    size = HIBYTE(a2->__r_.__value_.__r.__words[2]);
  v5 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 72))(a1);
  v6 = v5;
  v7 = v5 >> 31;
  if (v5 >> 31)
  {
    v13 = 2;
    v14 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/message_lite.cc";
    v15 = 457;
    memset(&v16, 0, sizeof(v16));
    (*(void (**)(void **__return_ptr, uint64_t))(*(_QWORD *)a1 + 16))(__p, a1);
    if ((v12 & 0x80u) == 0)
      v8 = __p;
    else
      v8 = (void **)__p[0];
    if ((v12 & 0x80u) == 0)
      v9 = v12;
    else
      v9 = (std::string::size_type)__p[1];
    std::string::append(&v16, (const std::string::value_type *)v8, v9);
    std::string::append(&v16, " exceeded maximum protobuf size of 2GB: ");
    snprintf(__str, 0x80uLL, "%lu", v6);
    v22 = 0;
    std::string::append(&v16, __str);
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v13);
    if ((char)v12 < 0)
      operator delete(__p[0]);
    if (SHIBYTE(v16.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v16.__r_.__value_.__l.__data_);
  }
  else
  {
    std::string::resize(v2, v5 + size, 0);
    if (SHIBYTE(v2->__r_.__value_.__r.__words[2]) < 0)
      v2 = (std::string *)v2->__r_.__value_.__r.__words[0];
    *(_QWORD *)__str = (char *)v2 + size + v6;
    v18 = 0;
    v19 = 0;
    v20 = 0;
    v21 = google::protobuf::io::CodedOutputStream::default_serialization_deterministic_ & 1;
    (*(void (**)(uint64_t))(*(_QWORD *)a1 + 96))(a1);
  }
  return v7 == 0;
}

void sub_18889C79C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25)
{
  if (a16 < 0)
    operator delete(__p);
  if (a25 < 0)
    operator delete(a20);
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::MessageLite::SerializePartialToArray(google::protobuf::MessageLite *this, char *a2, int a3)
{
  unint64_t v6;
  unint64_t v7;
  void **v8;
  std::string::size_type v9;
  void *__p[2];
  unsigned __int8 v12;
  int v13;
  const char *v14;
  int v15;
  std::string v16;
  char __str[8];
  uint64_t v18;
  uint64_t v19;
  __int16 v20;
  char v21;
  char v22;
  uint64_t v23;

  v23 = *MEMORY[0x1E0C80C00];
  v6 = (*(uint64_t (**)(google::protobuf::MessageLite *))(*(_QWORD *)this + 72))(this);
  v7 = v6;
  if (v6 >> 31)
  {
    v13 = 2;
    v14 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/message_lite.cc";
    v15 = 487;
    memset(&v16, 0, sizeof(v16));
    (*(void (**)(void **__return_ptr, google::protobuf::MessageLite *))(*(_QWORD *)this + 16))(__p, this);
    if ((v12 & 0x80u) == 0)
      v8 = __p;
    else
      v8 = (void **)__p[0];
    if ((v12 & 0x80u) == 0)
      v9 = v12;
    else
      v9 = (std::string::size_type)__p[1];
    std::string::append(&v16, (const std::string::value_type *)v8, v9);
    std::string::append(&v16, " exceeded maximum protobuf size of 2GB: ");
    snprintf(__str, 0x80uLL, "%lu", v7);
    v22 = 0;
    std::string::append(&v16, __str);
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v13);
    if ((char)v12 < 0)
      operator delete(__p[0]);
    if (SHIBYTE(v16.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v16.__r_.__value_.__l.__data_);
    return 0;
  }
  if (v6 > a3)
    return 0;
  *(_QWORD *)__str = &a2[v6];
  v18 = 0;
  v19 = 0;
  v20 = 0;
  v21 = google::protobuf::io::CodedOutputStream::default_serialization_deterministic_ & 1;
  (*(void (**)(google::protobuf::MessageLite *, char *, char *))(*(_QWORD *)this + 96))(this, a2, __str);
  return 1;
}

void sub_18889C970(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25)
{
  _Unwind_Resume(exception_object);
}

BOOL google::protobuf::MessageLite::SerializeAsString@<W0>(google::protobuf::MessageLite *this@<X0>, uint64_t a2@<X8>)
{
  _BOOL8 result;

  *(_QWORD *)a2 = 0;
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0;
  result = google::protobuf::MessageLite::AppendPartialToString((uint64_t)this, (std::string *)a2);
  if (!result)
  {
    if (*(char *)(a2 + 23) < 0)
    {
      **(_BYTE **)a2 = 0;
      *(_QWORD *)(a2 + 8) = 0;
    }
    else
    {
      *(_BYTE *)a2 = 0;
      *(_BYTE *)(a2 + 23) = 0;
    }
  }
  return result;
}

void sub_18889CA00(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (*(char *)(v1 + 23) < 0)
    operator delete(*(void **)v1);
  _Unwind_Resume(exception_object);
}

std::string *google::protobuf::internal::GenericTypeHandler<std::string>::Merge(std::string *__str, std::string *this)
{
  return std::string::operator=(this, __str);
}

void google::protobuf::internal::OnShutdownRun(google::protobuf::internal *this, void (*a2)(const void *), const void *a3)
{
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char *v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;

  v5 = google::protobuf::internal::ShutdownData::get(this);
  std::mutex::lock((std::mutex *)(v5 + 24));
  v6 = *(_QWORD **)(v5 + 8);
  v7 = *(_QWORD *)(v5 + 16);
  if ((unint64_t)v6 >= v7)
  {
    v9 = ((uint64_t)v6 - *(_QWORD *)v5) >> 4;
    v10 = v9 + 1;
    if ((unint64_t)(v9 + 1) >> 60)
      std::vector<std::pair<void (*)(void const*),void const*>>::__throw_length_error[abi:ne180100]();
    v11 = v7 - *(_QWORD *)v5;
    if (v11 >> 3 > v10)
      v10 = v11 >> 3;
    if ((unint64_t)v11 >= 0x7FFFFFFFFFFFFFF0)
      v12 = 0xFFFFFFFFFFFFFFFLL;
    else
      v12 = v10;
    if (v12)
      v13 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::shared_ptr<zilch::TrafficDynamicTile::Incident>>>(v5 + 16, v12);
    else
      v13 = 0;
    v14 = &v13[16 * v9];
    v15 = &v13[16 * v12];
    *(_QWORD *)v14 = this;
    *((_QWORD *)v14 + 1) = a2;
    v8 = v14 + 16;
    v17 = *(char **)v5;
    v16 = *(char **)(v5 + 8);
    if (v16 != *(char **)v5)
    {
      do
      {
        *((_OWORD *)v14 - 1) = *((_OWORD *)v16 - 1);
        v14 -= 16;
        v16 -= 16;
      }
      while (v16 != v17);
      v16 = *(char **)v5;
    }
    *(_QWORD *)v5 = v14;
    *(_QWORD *)(v5 + 8) = v8;
    *(_QWORD *)(v5 + 16) = v15;
    if (v16)
      operator delete(v16);
  }
  else
  {
    *v6 = this;
    v6[1] = a2;
    v8 = v6 + 2;
  }
  *(_QWORD *)(v5 + 8) = v8;
  std::mutex::unlock((std::mutex *)(v5 + 24));
}

void sub_18889CB38(_Unwind_Exception *a1)
{
  std::mutex *v1;

  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::ShutdownData::get(google::protobuf::internal::ShutdownData *this)
{
  unsigned __int8 v1;
  uint64_t v3;

  if ((v1 & 1) == 0
  {
    v3 = operator new();
    *(_QWORD *)v3 = 0;
    *(_QWORD *)(v3 + 8) = 0;
    *(_QWORD *)(v3 + 16) = 0;
    *(_QWORD *)(v3 + 24) = 850045863;
    *(_OWORD *)(v3 + 32) = 0u;
    *(_OWORD *)(v3 + 48) = 0u;
    *(_OWORD *)(v3 + 64) = 0u;
    *(_QWORD *)(v3 + 80) = 0;
    google::protobuf::internal::ShutdownData::get(void)::data = v3;
  }
  return google::protobuf::internal::ShutdownData::get(void)::data;
}

void sub_18889CBD8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void std::vector<std::pair<void (*)(void const*),void const*>>::__throw_length_error[abi:ne180100]()
{
  std::__throw_length_error[abi:ne180100]("vector");
}

_QWORD *google::protobuf::internal::ArenaImpl::thread_cache(google::protobuf::internal::ArenaImpl *this)
{
  unsigned __int8 v1;
  pthread_key_t *v3;

  if ((v1 & 1) == 0
  {
    v3 = (pthread_key_t *)operator new();
    pthread_key_create(v3, (void (__cdecl *)(void *))google::protobuf::internal::ThreadLocalStorage<google::protobuf::internal::ArenaImpl::ThreadCache>::Delete);
    google::protobuf::internal::ArenaImpl::thread_cache(void)::thread_cache_ = (uint64_t)v3;
  }
  return google::protobuf::internal::ThreadLocalStorage<google::protobuf::internal::ArenaImpl::ThreadCache>::Get((pthread_key_t *)google::protobuf::internal::ArenaImpl::thread_cache(void)::thread_cache_);
}

void sub_18889CC9C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x18D76437C](v1, 0x1000C4000313F17);
  _Unwind_Resume(a1);
}

_QWORD *google::protobuf::internal::ThreadLocalStorage<google::protobuf::internal::ArenaImpl::ThreadCache>::Get(pthread_key_t *a1)
{
  _QWORD *v2;

  v2 = pthread_getspecific(*a1);
  if (!v2)
  {
    v2 = (_QWORD *)operator new();
    *(_OWORD *)v2 = xmmword_189CBDDE0;
    v2[2] = 0;
    pthread_setspecific(*a1, v2);
  }
  return v2;
}

void *google::protobuf::internal::ArenaImpl::NewBuffer(google::protobuf::internal::ArenaImpl *this, uint64_t a2, unint64_t a3)
{
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  size_t v8;
  void *result;
  unint64_t *v10;
  unint64_t v11;
  int v12;
  const char *v13;
  int v14;
  std::string __p;

  v5 = *((_QWORD *)this + 4);
  if (a2 == -1)
  {
    if (v5)
      v7 = *(_QWORD *)v5;
    else
      v7 = 256;
  }
  else
  {
    if (v5)
      v6 = *(_QWORD *)(v5 + 8);
    else
      v6 = 0x2000;
    if (v6 >= 2 * a2)
      v7 = 2 * a2;
    else
      v7 = v6;
  }
  if (a3 >= 0xFFFFFFFFFFFFFFE8)
  {
    v12 = 3;
    v13 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/arena.cc";
    v14 = 245;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "CHECK failed: (min_bytes) <= (std::numeric_limits<size_t>::max() - kBlockHeaderSize): ");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v12);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
    v5 = *((_QWORD *)this + 4);
  }
  if (v7 <= a3 + 24)
    v8 = a3 + 24;
  else
    v8 = v7;
  if (v5)
    result = (void *)(*(uint64_t (**)(size_t))(v5 + 16))(v8);
  else
    result = operator new(v8);
  v10 = (unint64_t *)((char *)this + 16);
  do
    v11 = __ldxr(v10);
  while (__stxr(v11 + v8, v10));
  return result;
}

void sub_18889CE44(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

char *google::protobuf::internal::SerialArena::AddCleanupFallback(google::protobuf::internal::SerialArena *this, void *a2, void (*a3)(void *))
{
  char *result;
  uint64_t v7;
  unint64_t v8;
  char *v9;
  char *v10;

  result = (char *)*((_QWORD *)this + 3);
  do
  {
    if (result)
    {
      if ((unint64_t)(2 * *(_QWORD *)result) >= 0x40)
        v7 = 64;
      else
        v7 = 2 * *(_QWORD *)result;
    }
    else
    {
      v7 = 8;
    }
    v8 = (16 * (_WORD)v7 + 23) & 0xFF0;
    v9 = (char *)*((_QWORD *)this + 5);
    if (*((_QWORD *)this + 6) - (_QWORD)v9 < v8)
    {
      result = google::protobuf::internal::SerialArena::AllocateAlignedFallback(this, v8);
      v10 = (char *)*((_QWORD *)this + 3);
    }
    else
    {
      *((_QWORD *)this + 5) = &v9[v8];
      v10 = result;
      result = v9;
    }
    *(_QWORD *)result = v7;
    *((_QWORD *)result + 1) = v10;
    *((_QWORD *)this + 3) = result;
    *((_QWORD *)this + 7) = result + 16;
    *((_QWORD *)this + 8) = &result[16 * v7 + 16];
  }
  while (!(16 * v7));
  *((_QWORD *)result + 2) = a2;
  *((_QWORD *)result + 3) = a3;
  *((_QWORD *)this + 7) = result + 32;
  return result;
}

char *google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(google::protobuf::internal::ArenaImpl *this, unint64_t a2, void (*a3)(void *))
{
  google::protobuf::internal::ArenaImpl *v6;
  google::protobuf::internal::SerialArena *v7;
  _QWORD *v9;

  v6 = (google::protobuf::internal::ArenaImpl *)google::protobuf::internal::ArenaImpl::thread_cache(this);
  if (*((_QWORD *)v6 + 1) == *((_QWORD *)this + 3))
  {
    v7 = (google::protobuf::internal::SerialArena *)*((_QWORD *)v6 + 2);
    return google::protobuf::internal::SerialArena::AllocateAlignedAndAddCleanup(v7, a2, a3);
  }
  v9 = google::protobuf::internal::ArenaImpl::thread_cache(v6);
  v7 = (google::protobuf::internal::SerialArena *)atomic_load((unint64_t *)this + 1);
  if (v7 && *((_QWORD **)v7 + 1) == v9)
    return google::protobuf::internal::SerialArena::AllocateAlignedAndAddCleanup(v7, a2, a3);
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanupFallback(this, a2, a3);
}

char *google::protobuf::internal::SerialArena::AllocateAlignedAndAddCleanup(google::protobuf::internal::SerialArena *this, unint64_t a2, void (*a3)(void *))
{
  char *AlignedFallback;
  char **v6;

  AlignedFallback = (char *)*((_QWORD *)this + 5);
  if (*((_QWORD *)this + 6) - (_QWORD)AlignedFallback < a2)
    AlignedFallback = google::protobuf::internal::SerialArena::AllocateAlignedFallback(this, a2);
  else
    *((_QWORD *)this + 5) = &AlignedFallback[a2];
  v6 = (char **)*((_QWORD *)this + 7);
  if (v6 == *((char ***)this + 8))
  {
    google::protobuf::internal::SerialArena::AddCleanupFallback(this, AlignedFallback, a3);
  }
  else
  {
    *v6 = AlignedFallback;
    v6[1] = (char *)a3;
    *((_QWORD *)this + 7) = v6 + 2;
  }
  return AlignedFallback;
}

char *google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanupFallback(google::protobuf::internal::ArenaImpl *this, unint64_t a2, void (*a3)(void *))
{
  _QWORD *v6;
  char *SerialArenaFallback;

  v6 = google::protobuf::internal::ArenaImpl::thread_cache(this);
  SerialArenaFallback = google::protobuf::internal::ArenaImpl::GetSerialArenaFallback(this, v6);
  return google::protobuf::internal::SerialArena::AllocateAlignedAndAddCleanup((google::protobuf::internal::SerialArena *)SerialArenaFallback, a2, a3);
}

char *google::protobuf::internal::ArenaImpl::AddCleanup(google::protobuf::internal::ArenaImpl *this, void *a2, void (*a3)(void *))
{
  google::protobuf::internal::ArenaImpl *v6;
  char *result;
  _QWORD *v8;
  _QWORD *v9;

  v6 = (google::protobuf::internal::ArenaImpl *)google::protobuf::internal::ArenaImpl::thread_cache(this);
  if (*((_QWORD *)v6 + 1) == *((_QWORD *)this + 3))
  {
    result = (char *)*((_QWORD *)v6 + 2);
  }
  else
  {
    v9 = google::protobuf::internal::ArenaImpl::thread_cache(v6);
    result = (char *)atomic_load((unint64_t *)this + 1);
    if (!result || *((_QWORD **)result + 1) != v9)
      return google::protobuf::internal::ArenaImpl::AddCleanupFallback(this, a2, a3);
  }
  v8 = (_QWORD *)*((_QWORD *)result + 7);
  if (v8 == *((_QWORD **)result + 8))
    return google::protobuf::internal::SerialArena::AddCleanupFallback((google::protobuf::internal::SerialArena *)result, a2, a3);
  *v8 = a2;
  v8[1] = a3;
  *((_QWORD *)result + 7) = v8 + 2;
  return result;
}

char *google::protobuf::internal::ArenaImpl::AddCleanupFallback(google::protobuf::internal::ArenaImpl *this, void *a2, void (*a3)(void *))
{
  _QWORD *v6;
  char *result;
  _QWORD *v8;

  v6 = google::protobuf::internal::ArenaImpl::thread_cache(this);
  result = google::protobuf::internal::ArenaImpl::GetSerialArenaFallback(this, v6);
  v8 = (_QWORD *)*((_QWORD *)result + 7);
  if (v8 == *((_QWORD **)result + 8))
    return google::protobuf::internal::SerialArena::AddCleanupFallback((google::protobuf::internal::SerialArena *)result, a2, a3);
  *v8 = a2;
  v8[1] = a3;
  *((_QWORD *)result + 7) = v8 + 2;
  return result;
}

char *google::protobuf::internal::ArenaImpl::AllocateAlignedFallback(google::protobuf::internal::ArenaImpl *this, unint64_t a2)
{
  _QWORD *v4;
  char *SerialArenaFallback;
  uint64_t v6;

  v4 = google::protobuf::internal::ArenaImpl::thread_cache(this);
  SerialArenaFallback = google::protobuf::internal::ArenaImpl::GetSerialArenaFallback(this, v4);
  v6 = *((_QWORD *)SerialArenaFallback + 5);
  if (*((_QWORD *)SerialArenaFallback + 6) - v6 < a2)
    return google::protobuf::internal::SerialArena::AllocateAlignedFallback((google::protobuf::internal::SerialArena *)SerialArenaFallback, a2);
  *((_QWORD *)SerialArenaFallback + 5) = v6 + a2;
  return (char *)v6;
}

char *google::protobuf::internal::ArenaImpl::GetSerialArenaFallback(google::protobuf::internal::ArenaImpl *this, void *a2)
{
  unint64_t *v3;
  char *v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  char v9;
  google::protobuf::internal::ArenaImpl *v10;
  unint64_t v11;

  v3 = (unint64_t *)this;
  v4 = (char *)atomic_load((unint64_t *)this);
  if (!v4)
  {
LABEL_4:
    this = (google::protobuf::internal::ArenaImpl *)google::protobuf::internal::ArenaImpl::NewBuffer(this, -1, 0x48uLL);
    *((_QWORD *)this + 2) = v5;
    *((_QWORD *)this + 3) = v3;
    v4 = (char *)this + 24;
    *(_OWORD *)this = xmmword_189CBDDF0;
    *((_QWORD *)this + 4) = a2;
    *((_QWORD *)this + 5) = this;
    *((_QWORD *)this + 8) = (char *)this + 96;
    *((_QWORD *)this + 9) = (char *)this + v5;
    *((_QWORD *)this + 6) = 0;
    *((_QWORD *)this + 10) = 0;
    *((_QWORD *)this + 11) = 0;
    v6 = *v3;
    *((_QWORD *)this + 7) = *v3;
    v7 = __ldxr(v3);
    if (v7 == v6)
    {
      if (__stlxr((unint64_t)v4, v3))
        goto LABEL_8;
      goto LABEL_14;
    }
    __clrex();
LABEL_8:
    while (1)
    {
      *((_QWORD *)this + 7) = v7;
      v8 = __ldxr(v3);
      if (v8 != v7)
        break;
      if (__stlxr((unint64_t)v4, v3))
        goto LABEL_12;
      v9 = 1;
LABEL_13:
      v7 = v8;
      if ((v9 & 1) != 0)
        goto LABEL_14;
    }
    __clrex();
LABEL_12:
    v9 = 0;
    goto LABEL_13;
  }
  while (*((void **)v4 + 1) != a2)
  {
    v4 = (char *)*((_QWORD *)v4 + 4);
    if (!v4)
      goto LABEL_4;
  }
LABEL_14:
  v10 = (google::protobuf::internal::ArenaImpl *)google::protobuf::internal::ArenaImpl::thread_cache(this);
  *((_QWORD *)v10 + 2) = v4;
  v11 = v3[3];
  google::protobuf::internal::ArenaImpl::thread_cache(v10)[1] = v11;
  atomic_store((unint64_t)v4, v3 + 1);
  return v4;
}

char *google::protobuf::internal::SerialArena::AllocateAlignedFallback(google::protobuf::internal::SerialArena *this, unint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  char *result;
  char *v7;
  char *v8;
  _QWORD *v9;

  v4 = (_QWORD *)*((_QWORD *)this + 2);
  v5 = v4[2];
  v8 = (char *)this + 40;
  result = (char *)*((_QWORD *)this + 5);
  v7 = (char *)*((_QWORD *)v8 + 1);
  do
  {
    v4[1] = result - v7 + v5;
    v9 = google::protobuf::internal::ArenaImpl::NewBuffer(*(google::protobuf::internal::ArenaImpl **)this, v5, a2);
    *v9 = v4;
    v9[1] = 24;
    v9[2] = v5;
    *((_QWORD *)this + 2) = v9;
    result = (char *)(v9 + 3);
    v7 = (char *)v9 + v5;
    *((_QWORD *)this + 5) = v9 + 3;
    *((_QWORD *)this + 6) = (char *)v9 + v5;
    v4 = v9;
  }
  while (v5 - 24 < a2);
  *((_QWORD *)this + 5) = &result[a2];
  return result;
}

char *google::protobuf::internal::ArenaImpl::AllocateAligned(google::protobuf::internal::ArenaImpl *this, unint64_t a2)
{
  google::protobuf::internal::ArenaImpl *v4;
  google::protobuf::internal::SerialArena *v5;
  uint64_t v6;
  _QWORD *v8;

  v4 = (google::protobuf::internal::ArenaImpl *)google::protobuf::internal::ArenaImpl::thread_cache(this);
  if (*((_QWORD *)v4 + 1) == *((_QWORD *)this + 3))
  {
    v5 = (google::protobuf::internal::SerialArena *)*((_QWORD *)v4 + 2);
  }
  else
  {
    v8 = google::protobuf::internal::ArenaImpl::thread_cache(v4);
    v5 = (google::protobuf::internal::SerialArena *)atomic_load((unint64_t *)this + 1);
    if (!v5 || *((_QWORD **)v5 + 1) != v8)
      return google::protobuf::internal::ArenaImpl::AllocateAlignedFallback(this, a2);
  }
  v6 = *((_QWORD *)v5 + 5);
  if (*((_QWORD *)v5 + 6) - v6 < a2)
    return google::protobuf::internal::SerialArena::AllocateAlignedFallback(v5, a2);
  *((_QWORD *)v5 + 5) = v6 + a2;
  return (char *)v6;
}

uint64_t google::protobuf::internal::ThreadLocalStorage<google::protobuf::internal::ArenaImpl::ThreadCache>::Delete(uint64_t result)
{
  if (result)
    JUMPOUT(0x18D76437CLL);
  return result;
}

void google::protobuf::strings::Substitute(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, std::string *a9@<X8>, __int128 a10, uint64_t a11)
{
  __int128 v11;

  a9->__r_.__value_.__r.__words[0] = 0;
  a9->__r_.__value_.__l.__size_ = 0;
  a9->__r_.__value_.__r.__words[2] = 0;
  *((_QWORD *)&v11 + 1) = a10;
  *(_QWORD *)&v11 = a8;
  google::protobuf::strings::SubstituteAndAppend(a9, a1, a2, a3, a4, a5, a6, a7, v11, *((uint64_t *)&a10 + 1), a11);
}

void sub_18889D4A0(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (*(char *)(v1 + 23) < 0)
    operator delete(*(void **)v1);
  _Unwind_Resume(exception_object);
}

void google::protobuf::strings::SubstituteAndAppend(std::string *this, char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __int128 a9, uint64_t a10, uint64_t a11)
{
  int v11;
  uint64_t v12;
  std::string *v14;
  int v15;
  uint64_t v16;
  int v17;
  unsigned int v18;
  int v19;
  std::string::size_type v20;
  uint64_t v21;
  int v22;
  const char *v23;
  std::string *p_p;
  std::string::size_type v25;
  void *v26;
  int v27;
  _BYTE *v28;
  int v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  const char *v33;
  std::string *p_str;
  std::string::size_type size;
  void *v36[2];
  char v37;
  std::string __p;
  std::string v39;
  uint64_t v40;
  _QWORD v41[5];
  __int128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  std::string __str;
  std::string v47[4];
  char v48;
  uint64_t v49;

  v49 = *MEMORY[0x1E0C80C00];
  v40 = a3;
  v41[0] = a4;
  v41[1] = a5;
  v41[2] = a6;
  v41[3] = a7;
  v41[4] = a8;
  v42 = a9;
  v43 = a10;
  v44 = a11;
  v45 = 0;
  v11 = *a2;
  if (!*a2)
    return;
  v12 = a3;
  v14 = this;
  v15 = 0;
  LODWORD(v16) = 0;
  do
  {
    if (v11 == 36)
    {
      v16 = (int)v16 + 1;
      v17 = a2[v16];
      v18 = v17 - 48;
      if ((v17 - 48) <= 9)
      {
        v19 = *(_DWORD *)(v41[v18 - 1] + 8);
        if (v19 != -1)
        {
          v15 += v19;
          goto LABEL_9;
        }
        LODWORD(__p.__r_.__value_.__l.__data_) = 2;
        __p.__r_.__value_.__l.__size_ = (std::string::size_type)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libpro"
                                                                "tobuf/src/google/protobuf/stubs/substitute.cc";
        LODWORD(__p.__r_.__value_.__r.__words[2]) = 84;
        memset(&v39, 0, sizeof(v39));
        std::string::append(&v39, "strings::Substitute format string invalid: asked for \"$");
        snprintf((char *)&__str, 0x80uLL, "%d", v18);
        v48 = 0;
        std::string::append(&v39, (const std::string::value_type *)&__str);
        std::string::append(&v39, "\", but only ");
        v21 = 0;
        while (*(_DWORD *)(v12 + 8) != -1)
        {
          v22 = v21 + 1;
          v12 = v41[v21++];
          if (!v12)
            goto LABEL_47;
        }
        v22 = v21;
LABEL_47:
        snprintf((char *)&__str, 0x80uLL, "%d", v22);
        v48 = 0;
        std::string::append(&v39, (const std::string::value_type *)&__str);
        std::string::append(&v39, " args were given.  Full format string was: \"");
        std::string::basic_string[abi:ne180100]<0>(v36, a2);
        google::protobuf::CEscape((uint64_t *)v36, v33, &__str);
        if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          p_str = &__str;
        else
          p_str = (std::string *)__str.__r_.__value_.__r.__words[0];
        if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          size = HIBYTE(__str.__r_.__value_.__r.__words[2]);
        else
          size = __str.__r_.__value_.__l.__size_;
        std::string::append(&v39, (const std::string::value_type *)p_str, size);
        std::string::append(&v39, "\".");
        google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&__p);
        if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
          operator delete(__str.__r_.__value_.__l.__data_);
        if (v37 < 0)
          operator delete(v36[0]);
        if ((SHIBYTE(v39.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
          return;
        v26 = (void *)v39.__r_.__value_.__r.__words[0];
LABEL_59:
        operator delete(v26);
        return;
      }
      if (v17 != 36)
      {
        LODWORD(__str.__r_.__value_.__l.__data_) = 2;
        __str.__r_.__value_.__l.__size_ = (std::string::size_type)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libp"
                                                                  "rotobuf/src/google/protobuf/stubs/substitute.cc";
        LODWORD(__str.__r_.__value_.__r.__words[2]) = 97;
        memset(v47, 0, 24);
        std::string::append(v47, "Invalid strings::Substitute() format string: \"");
        std::string::basic_string[abi:ne180100]<0>(v36, a2);
        google::protobuf::CEscape((uint64_t *)v36, v23, &__p);
        if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          p_p = &__p;
        else
          p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
        if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          v25 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
        else
          v25 = __p.__r_.__value_.__l.__size_;
        std::string::append(v47, (const std::string::value_type *)p_p, v25);
        std::string::append(v47, "\".");
        google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&__str);
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
          operator delete(__p.__r_.__value_.__l.__data_);
        if (v37 < 0)
          operator delete(v36[0]);
        if ((SHIBYTE(v47[0].__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
          return;
        v26 = (void *)v47[0].__r_.__value_.__r.__words[0];
        goto LABEL_59;
      }
    }
    ++v15;
LABEL_9:
    v16 = (int)v16 + 1;
    v11 = a2[v16];
  }
  while (a2[v16]);
  if (v15)
  {
    if (SHIBYTE(this->__r_.__value_.__r.__words[2]) < 0)
      v20 = this->__r_.__value_.__l.__size_;
    else
      LODWORD(v20) = HIBYTE(this->__r_.__value_.__r.__words[2]);
    std::string::resize(this, v15 + (int)v20, 0);
    if (SHIBYTE(v14->__r_.__value_.__r.__words[2]) < 0)
    {
      if (!v14->__r_.__value_.__l.__size_)
        goto LABEL_35;
      v14 = (std::string *)v14->__r_.__value_.__r.__words[0];
    }
    else if (!*((_BYTE *)&v14->__r_.__value_.__s + 23))
    {
LABEL_35:
      v14 = 0;
    }
    v27 = 0;
    v28 = (char *)v14 + (int)v20;
    while (2)
    {
      v29 = a2[v27];
      if (v29 == 36)
      {
        v30 = v27 + 1;
        v31 = a2[v30];
        if ((v31 - 48) > 9)
        {
          if (v31 != 36)
            goto LABEL_44;
          *v28++ = 36;
        }
        else
        {
          v32 = v41[(v31 - 48) - 1];
          memcpy(v28, *(const void **)v32, *(int *)(v32 + 8));
          v28 += *(int *)(v32 + 8);
        }
      }
      else
      {
        if (!a2[v27])
          return;
        *v28++ = v29;
LABEL_44:
        LODWORD(v30) = v27;
      }
      v27 = v30 + 1;
      continue;
    }
  }
}

void sub_18889D8A4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,void *__p,uint64_t a40,int a41,__int16 a42,char a43,char a44,uint64_t a45,uint64_t a46,int a47,__int16 a48,char a49,char a50)
{
  if (a44 < 0)
    operator delete(__p);
  if (a15 < 0)
    operator delete(a10);
  if (a27 < 0)
    operator delete(a22);
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::EncodedDescriptorDatabase::Add(google::protobuf::EncodedDescriptorDatabase *this, char *a2, int a3)
{
  uint64_t v6;
  int v8;
  const char *v9;
  int v10;
  std::string __p;
  _QWORD v12[27];

  google::protobuf::FileDescriptorProto::FileDescriptorProto((google::protobuf::FileDescriptorProto *)v12, 0);
  (*(void (**)(_QWORD *))(v12[0] + 40))(v12);
  if (google::protobuf::internal::MergeFromImpl<false>(a2, a3, (google::protobuf::MessageLite *)v12, 1))
  {
    v6 = google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::AddFile<google::protobuf::FileDescriptorProto>(*((_QWORD *)this + 1), (uint64_t)v12, a2, a3);
  }
  else
  {
    v8 = 2;
    v9 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/descriptor_database.cc";
    v10 = 559;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "Invalid file descriptor data passed to EncodedDescriptorDatabase::Add().");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v8);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
    v6 = 0;
  }
  google::protobuf::FileDescriptorProto::~FileDescriptorProto((google::protobuf::FileDescriptorProto *)v12);
  return v6;
}

void sub_18889DA28(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, char a19)
{
  if (a18 < 0)
    operator delete(__p);
  google::protobuf::FileDescriptorProto::~FileDescriptorProto((google::protobuf::FileDescriptorProto *)&a19);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::AddFile<google::protobuf::FileDescriptorProto>(uint64_t a1, uint64_t a2, const char *a3, int a4)
{
  std::string::size_type v8;
  unint64_t v9;
  unint64_t v10;
  char *v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  __int128 v23;
  int64x2_t v24;
  std::string::size_type v25;
  const char *v26;
  const char *v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  const char *v31;
  char *v32;
  char **v33;
  char **v34;
  uint64_t v35;
  unint64_t v36;
  int v37;
  const std::string::value_type *v38;
  std::string::size_type v39;
  char *v40;
  std::string *v41;
  uint64_t v42;
  const char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  unint64_t v47;
  uint64_t v48;
  _BOOL4 v49;
  const void *v50;
  uint64_t v51;
  const char *v52;
  uint64_t v53;
  size_t v54;
  int v55;
  BOOL v56;
  char v57;
  char v58;
  uint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t result;
  const char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  const char *v75;
  uint64_t v76;
  uint64_t *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  BOOL v81;
  unint64_t v82;
  int v83;
  const std::string::value_type *v84;
  std::string::size_type v85;
  unsigned __int8 *v86[2];
  uint64_t v87[2];
  unsigned __int8 *v88[2];
  unsigned __int8 *v89[2];
  uint64_t v90[2];
  unsigned __int8 *v91[2];
  __int128 v92;
  __int128 v93;
  _BYTE __p[24];
  std::string v95;
  unsigned __int8 *v96[2];
  _QWORD v97[2];
  __int128 v98;

  v8 = a1 + 16;
  v9 = *(_QWORD *)(a1 + 16);
  v10 = *(_QWORD *)(a1 + 8);
  if (v10 >= v9)
  {
    v12 = 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(v10 - *(_QWORD *)a1) >> 3);
    v13 = v12 + 1;
    if (v12 + 1 > 0x666666666666666)
      std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
    v14 = 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(v9 - *(_QWORD *)a1) >> 3);
    if (2 * v14 > v13)
      v13 = 2 * v14;
    if (v14 >= 0x333333333333333)
      v15 = 0x666666666666666;
    else
      v15 = v13;
    v95.__r_.__value_.__l.__size_ = v8;
    v16 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<CAARiseTransitSetDetails2>>(v15);
    v18 = &v16[40 * v12];
    *(_QWORD *)v18 = a3;
    *((_DWORD *)v18 + 2) = a4;
    *((_QWORD *)v18 + 3) = 0;
    *((_QWORD *)v18 + 4) = 0;
    *((_QWORD *)v18 + 2) = 0;
    v11 = v18 + 40;
    v20 = *(_QWORD *)a1;
    v19 = *(_QWORD *)(a1 + 8);
    if (v19 == *(_QWORD *)a1)
    {
      v24 = vdupq_n_s64(v19);
    }
    else
    {
      do
      {
        v21 = *(_QWORD *)(v19 - 40);
        v19 -= 40;
        v22 = *(_DWORD *)(v19 + 8);
        *((_QWORD *)v18 - 5) = v21;
        v18 -= 40;
        *((_DWORD *)v18 + 2) = v22;
        v23 = *(_OWORD *)(v19 + 16);
        *((_QWORD *)v18 + 4) = *(_QWORD *)(v19 + 32);
        *((_OWORD *)v18 + 1) = v23;
        *(_QWORD *)(v19 + 24) = 0;
        *(_QWORD *)(v19 + 32) = 0;
        *(_QWORD *)(v19 + 16) = 0;
      }
      while (v19 != v20);
      v24 = *(int64x2_t *)a1;
    }
    *(_QWORD *)a1 = v18;
    *(_QWORD *)(a1 + 8) = v11;
    *(int64x2_t *)&__p[8] = v24;
    v25 = *(_QWORD *)(a1 + 16);
    *(_QWORD *)(a1 + 16) = &v16[40 * v17];
    v95.__r_.__value_.__r.__words[0] = v25;
    *(_QWORD *)__p = v24.i64[0];
    std::__split_buffer<google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::EncodedEntry>::~__split_buffer((uint64_t)__p);
  }
  else
  {
    *(_QWORD *)v10 = a3;
    *(_DWORD *)(v10 + 8) = a4;
    *(_QWORD *)(v10 + 24) = 0;
    *(_QWORD *)(v10 + 32) = 0;
    v11 = (char *)(v10 + 40);
    *(_QWORD *)(v10 + 16) = 0;
  }
  *(_QWORD *)(a1 + 8) = v11;
  google::protobuf::StringPiece::StringPiece<std::allocator<char>>(v96, (uint64_t *)(*(_QWORD *)(a2 + 184) & 0xFFFFFFFFFFFFFFFELL), a3);
  {
    *(_DWORD *)__p = 2;
    *(_QWORD *)&__p[8] = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/descriptor_database.cc";
    *(_DWORD *)&__p[16] = 631;
    memset(&v95, 0, sizeof(v95));
    std::string::append(&v95, "Invalid package name: ");
    v36 = *(_QWORD *)(a2 + 184) & 0xFFFFFFFFFFFFFFFELL;
    v37 = *(char *)(v36 + 23);
    if (v37 >= 0)
      v38 = (const std::string::value_type *)(*(_QWORD *)(a2 + 184) & 0xFFFFFFFFFFFFFFFELL);
    else
      v38 = *(const std::string::value_type **)v36;
    if (v37 >= 0)
      v39 = *(unsigned __int8 *)(v36 + 23);
    else
      v39 = *(_QWORD *)(v36 + 8);
    std::string::append(&v95, v38, v39);
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)__p);
    goto LABEL_107;
  }
  google::protobuf::StringPiece::StringPiece<std::allocator<char>>(&v93, (uint64_t *)(*(_QWORD *)(a2 + 184) & 0xFFFFFFFFFFFFFFFELL), v26);
  v98 = v93;
  google::protobuf::StringPiece::ToString((google::protobuf::StringPiece *)&v98, __p);
  v28 = *(_QWORD *)(a1 + 8);
  v29 = v28 - 24;
  if (*(char *)(v28 - 1) < 0)
    operator delete(*(void **)v29);
  v30 = *(_OWORD *)__p;
  *(_QWORD *)(v29 + 16) = *(_QWORD *)&__p[16];
  *(_OWORD *)v29 = v30;
  *(_DWORD *)__p = -858993459 * ((*(_QWORD *)(a1 + 8) - *(_QWORD *)a1) >> 3) - 1;
  google::protobuf::StringPiece::StringPiece<std::allocator<char>>(&v92, (uint64_t *)(*(_QWORD *)(a2 + 176) & 0xFFFFFFFFFFFFFFFELL), v27);
  v98 = v92;
  google::protobuf::StringPiece::ToString((google::protobuf::StringPiece *)&v98, &__p[8]);
  v33 = (char **)(a1 + 32);
  v32 = *(char **)(a1 + 32);
  if (v32)
  {
    while (1)
    {
      while (1)
      {
        v34 = (char **)v32;
        v35 = (uint64_t)(v32 + 32);
        if (!google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::FileCompare::operator()((uint64_t)__p, (uint64_t)(v32 + 32), v31))break;
        v32 = *v34;
        v33 = v34;
        if (!*v34)
          goto LABEL_32;
      }
      if (!google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::FileCompare::operator()(v35, (uint64_t)__p, v31))break;
      v33 = v34 + 1;
      v32 = v34[1];
      if (!v32)
        goto LABEL_32;
    }
    if (*v33)
    {
      if (v95.__r_.__value_.__s.__data_[7] < 0)
        operator delete(*(void **)&__p[8]);
      goto LABEL_100;
    }
  }
  else
  {
    v34 = (char **)(a1 + 32);
  }
LABEL_32:
  v40 = (char *)operator new(0x40uLL);
  *((_DWORD *)v40 + 8) = *(_DWORD *)__p;
  v41 = (std::string *)(v40 + 40);
  if (v95.__r_.__value_.__s.__data_[7] < 0)
  {
    std::string::__init_copy_ctor_external(v41, *(const std::string::value_type **)&__p[8], *(std::string::size_type *)&__p[16]);
  }
  else
  {
    *(_OWORD *)&v41->__r_.__value_.__l.__data_ = *(_OWORD *)&__p[8];
    *((_QWORD *)v40 + 7) = v95.__r_.__value_.__r.__words[0];
  }
  *(_QWORD *)v40 = 0;
  *((_QWORD *)v40 + 1) = 0;
  *((_QWORD *)v40 + 2) = v34;
  *v33 = v40;
  v42 = **(_QWORD **)(a1 + 24);
  if (v42)
  {
    *(_QWORD *)(a1 + 24) = v42;
    v40 = *v33;
  }
  std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(*(uint64_t **)(a1 + 32), (uint64_t *)v40);
  ++*(_QWORD *)(a1 + 40);
  v44 = *(_QWORD *)(a1 + 56);
  v45 = *(_QWORD *)(a1 + 64);
  v46 = (uint64_t *)(*(_QWORD *)(a2 + 176) & 0xFFFFFFFFFFFFFFFELL);
  if (v45 != v44)
  {
    v47 = (v45 - v44) >> 5;
    do
    {
      google::protobuf::StringPiece::StringPiece<std::allocator<char>>(&v98, v46, v43);
      v48 = v44 + 32 * (v47 >> 1);
      v49 = google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::FileCompare::operator()(v48, (const void *)v98, *((const char **)&v98 + 1));
      if (v49)
        v47 += ~(v47 >> 1);
      else
        v47 >>= 1;
      if (v49)
        v44 = v48 + 32;
    }
    while (v47);
  }
  if (v45 == v44)
  {
    v58 = 0;
  }
  else
  {
    google::protobuf::StringPiece::StringPiece<std::allocator<char>>(v97, v46, v43);
    v50 = (const void *)v97[0];
    v51 = v97[1];
    google::protobuf::StringPiece::StringPiece<std::allocator<char>>(&v98, (uint64_t *)(v44 + 8), v52);
    v53 = *((_QWORD *)&v98 + 1);
    if (v51 >= *((uint64_t *)&v98 + 1))
      v54 = *((_QWORD *)&v98 + 1);
    else
      v54 = v51;
    v55 = memcmp(v50, (const void *)v98, v54);
    if (v55)
      v56 = 0;
    else
      v56 = v51 < v53;
    v57 = !v56;
    if (v55 >= 0)
      v58 = v57;
    else
      v58 = 0;
  }
  if (v95.__r_.__value_.__s.__data_[7] < 0)
  {
    operator delete(*(void **)&__p[8]);
    if ((v58 & 1) != 0)
    {
LABEL_100:
      *(_DWORD *)__p = 2;
      *(_QWORD *)&__p[8] = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/descriptor_database.cc";
      *(_DWORD *)&__p[16] = 641;
      memset(&v95, 0, sizeof(v95));
      std::string::append(&v95, "File already exists in database: ");
      v82 = *(_QWORD *)(a2 + 176) & 0xFFFFFFFFFFFFFFFELL;
      v83 = *(char *)(v82 + 23);
      if (v83 >= 0)
        v84 = (const std::string::value_type *)(*(_QWORD *)(a2 + 176) & 0xFFFFFFFFFFFFFFFELL);
      else
        v84 = *(const std::string::value_type **)v82;
      if (v83 >= 0)
        v85 = *(unsigned __int8 *)(v82 + 23);
      else
        v85 = *(_QWORD *)(v82 + 8);
      std::string::append(&v95, v84, v85);
      google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)__p);
LABEL_107:
      if (SHIBYTE(v95.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v95.__r_.__value_.__l.__data_);
      return 0;
    }
  }
  else if ((v58 & 1) != 0)
  {
    goto LABEL_100;
  }
  v59 = *(_QWORD *)(a2 + 64);
  if (v59)
    v60 = (uint64_t *)(v59 + 8);
  else
    v60 = 0;
  v61 = *(int *)(a2 + 56);
  if ((_DWORD)v61)
  {
    v62 = 8 * v61;
    while (1)
    {
      v63 = *v60;
      google::protobuf::StringPiece::StringPiece<std::allocator<char>>(v91, (uint64_t *)(*(_QWORD *)(*v60 + 216) & 0xFFFFFFFFFFFFFFFELL), v43);
      result = google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::AddSymbol(a1, v91[0], (std::string::size_type)v91[1]);
      if (!(_DWORD)result)
        break;
      google::protobuf::StringPiece::StringPiece<std::allocator<char>>(v90, (uint64_t *)(*(_QWORD *)(a2 + 176) & 0xFFFFFFFFFFFFFFFELL), v65);
      if ((google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::AddNestedExtensions<google::protobuf::DescriptorProto>(a1, v90[0], (const char *)v90[1], v63) & 1) == 0)return 0;
      ++v60;
      v62 -= 8;
      if (!v62)
        goto LABEL_71;
    }
  }
  else
  {
LABEL_71:
    v66 = *(_QWORD *)(a2 + 88);
    if (v66)
      v67 = v66 + 8;
    else
      v67 = 0;
    v68 = *(int *)(a2 + 80);
    if ((_DWORD)v68)
    {
      v69 = 8 * v68;
      do
      {
        google::protobuf::StringPiece::StringPiece<std::allocator<char>>(v89, (uint64_t *)(*(_QWORD *)(*(_QWORD *)v67 + 96) & 0xFFFFFFFFFFFFFFFELL), v43);
        if ((google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::AddSymbol(a1, v89[0], (std::string::size_type)v89[1]) & 1) == 0)return 0;
        v67 += 8;
        v69 -= 8;
      }
      while (v69);
    }
    v70 = *(_QWORD *)(a2 + 136);
    if (v70)
      v71 = (uint64_t *)(v70 + 8);
    else
      v71 = 0;
    v72 = *(int *)(a2 + 128);
    if ((_DWORD)v72)
    {
      v73 = 8 * v72;
      while (1)
      {
        v74 = *v71;
        google::protobuf::StringPiece::StringPiece<std::allocator<char>>(v88, (uint64_t *)(*(_QWORD *)(*v71 + 24) & 0xFFFFFFFFFFFFFFFELL), v43);
        result = google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::AddSymbol(a1, v88[0], (std::string::size_type)v88[1]);
        if (!(_DWORD)result)
          break;
        google::protobuf::StringPiece::StringPiece<std::allocator<char>>(v87, (uint64_t *)(*(_QWORD *)(a2 + 176) & 0xFFFFFFFFFFFFFFFELL), v75);
        if ((google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::AddExtension<google::protobuf::FieldDescriptorProto>(a1, v87[0], (const char *)v87[1], v74) & 1) == 0)return 0;
        ++v71;
        v73 -= 8;
        if (!v73)
          goto LABEL_86;
      }
    }
    else
    {
LABEL_86:
      v76 = *(_QWORD *)(a2 + 112);
      if (v76)
        v77 = (uint64_t *)(v76 + 8);
      else
        v77 = 0;
      v78 = *(int *)(a2 + 104);
      if ((_DWORD)v78)
      {
        v79 = 8 * v78 - 8;
        do
        {
          v80 = *v77++;
          google::protobuf::StringPiece::StringPiece<std::allocator<char>>(v86, (uint64_t *)(*(_QWORD *)(v80 + 48) & 0xFFFFFFFFFFFFFFFELL), v43);
          result = google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::AddSymbol(a1, v86[0], (std::string::size_type)v86[1]);
          if ((_DWORD)result)
            v81 = v79 == 0;
          else
            v81 = 1;
          v79 -= 8;
        }
        while (!v81);
      }
      else
      {
        return 1;
      }
    }
  }
  return result;
}

void sub_18889E094(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,void *__p,uint64_t a27,int a28,__int16 a29,char a30,char a31,uint64_t a32,int a33,__int16 a34,char a35,char a36)
{
  void *v36;

  operator delete(v36);
  if (a31 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::EncodedDescriptorDatabase::FindFileByName(uint64_t a1, uint64_t *a2, char *a3)
{
  google::protobuf::EncodedDescriptorDatabase::DescriptorIndex *v4;
  const void *v5;
  int64_t v6;
  uint64_t v7;
  const char *v8;
  uint64_t *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _BOOL4 v13;
  const char *v14;
  uint64_t v15;
  _BYTE *v16;
  int64_t v17;
  _QWORD v19[2];
  void *__s1[2];

  v4 = *(google::protobuf::EncodedDescriptorDatabase::DescriptorIndex **)(a1 + 8);
  google::protobuf::StringPiece::StringPiece<std::allocator<char>>(v19, a2, a3);
  v5 = (const void *)v19[0];
  v6 = v19[1];
  google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::EnsureFlat(v4, v7, v8);
  v9 = (uint64_t *)*((_QWORD *)v4 + 7);
  v10 = *((_QWORD *)v4 + 8) - (_QWORD)v9;
  if (!v10)
    return 0;
  v11 = v10 >> 5;
  do
  {
    v12 = (uint64_t)&v9[4 * (v11 >> 1)];
    v13 = google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::FileCompare::operator()(v12, v5, (const char *)v6);
    if (v13)
      v11 += ~(v11 >> 1);
    else
      v11 >>= 1;
    if (v13)
      v9 = (uint64_t *)(v12 + 32);
  }
  while (v11);
  if (*((uint64_t **)v4 + 8) == v9)
    return 0;
  google::protobuf::StringPiece::StringPiece<std::allocator<char>>(__s1, v9 + 1, v14);
  if (__s1[1] != (void *)v6 || v6 >= 1 && __s1[0] != v5 && memcmp(__s1[0], v5, v6))
    return 0;
  v15 = *(_QWORD *)v4;
  v16 = *(_BYTE **)(*(_QWORD *)v4 + 40 * *(int *)v9);
  if (!v16)
    return 0;
  v17 = *(int *)(v15 + 40 * *(int *)v9 + 8);
  (*(void (**)(char *))(*(_QWORD *)a3 + 40))(a3);
  return google::protobuf::internal::MergeFromImpl<false>(v16, v17, (google::protobuf::MessageLite *)a3, 1);
}

uint64_t google::protobuf::EncodedDescriptorDatabase::FindFileContainingSymbol(uint64_t a1, uint64_t *a2, const char *a3)
{
  google::protobuf::MessageLite *v3;
  google::protobuf::EncodedDescriptorDatabase::DescriptorIndex *v4;
  const void *v5;
  int64_t v6;
  uint64_t v7;
  const char *v8;
  int *v9;
  uint64_t v10;
  uint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  std::string::size_type size;
  std::string::size_type v15;
  int v16;
  uint64_t v17;
  int v18;
  const char *v20;
  int64_t v21;
  size_t v22;
  int v23;
  BOOL v24;
  char v25;
  char v26;
  int *v27;
  int *v28;
  uint64_t v29;
  int *v30;
  const char *v31;
  uint64_t v32;
  _BYTE *v33;
  int64_t v34;
  google::protobuf::MessageLite *v36;
  _QWORD v37[2];
  const void *v38[2];
  std::string __p;
  const void *v40;
  int64_t v41;
  std::string v42;
  uint64_t v43;

  v3 = (google::protobuf::MessageLite *)a3;
  v4 = *(google::protobuf::EncodedDescriptorDatabase::DescriptorIndex **)(a1 + 8);
  google::protobuf::StringPiece::StringPiece<std::allocator<char>>(v37, a2, a3);
  v5 = (const void *)v37[0];
  v6 = v37[1];
  google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::EnsureFlat(v4, v7, v8);
  v9 = (int *)*((_QWORD *)v4 + 14);
  v10 = *((_QWORD *)v4 + 15) - (_QWORD)v9;
  if (v10)
  {
    v36 = v3;
    v11 = (uint64_t *)*((_QWORD *)v4 + 13);
    v12 = v10 >> 5;
    while (1)
    {
      while (1)
      {
        v13 = v12 >> 1;
        google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::SymbolCompare::GetParts(&v42, *v11, (const char *)&v9[8 * (v12 >> 1)]);
        size = v42.__r_.__value_.__l.__size_;
        v15 = v6 >= v42.__r_.__value_.__l.__size_ ? v42.__r_.__value_.__l.__size_ : v6;
        __p.__r_.__value_.__r.__words[0] = (std::string::size_type)v5;
        __p.__r_.__value_.__l.__size_ = v15;
        v16 = google::protobuf::StringPiece::compare((uint64_t)&__p, v42.__r_.__value_.__l.__data_, v15);
        if (v16)
          break;
        if (v6 == size)
        {
          v17 = v43;
          v18 = memcmp(0, (const void *)v42.__r_.__value_.__r.__words[2], v43 & (v43 >> 63));
          if ((v18 & 0x80000000) == 0 && (v17 <= 0 || v18 != 0))
            goto LABEL_8;
        }
        else
        {
          google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::SymbolEntry::AsString(&__p, &v9[8 * (v12 >> 1)], (const char *)*v11);
          google::protobuf::StringPiece::StringPiece<std::allocator<char>>(&v40, (uint64_t *)&__p, v20);
          v21 = v41;
          if (v6 >= v41)
            v22 = v41;
          else
            v22 = v6;
          v23 = memcmp(v5, v40, v22);
          if (v23)
            v24 = 0;
          else
            v24 = v6 < v21;
          v25 = v24;
          if (v23 >= 0)
            v26 = v25;
          else
            v26 = 1;
          if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
            operator delete(__p.__r_.__value_.__l.__data_);
          if ((v26 & 1) == 0)
            goto LABEL_8;
        }
LABEL_33:
        v12 >>= 1;
        if (!v13)
        {
LABEL_34:
          v28 = (int *)*((_QWORD *)v4 + 14);
          v27 = (int *)*((_QWORD *)v4 + 15);
          v3 = v36;
          goto LABEL_36;
        }
      }
      if (v16 < 0)
        goto LABEL_33;
LABEL_8:
      v9 += 8 * (v12 >> 1) + 8;
      v12 += ~v13;
      if (!v12)
        goto LABEL_34;
    }
  }
  v27 = (int *)*((_QWORD *)v4 + 14);
  v28 = v27;
LABEL_36:
  if (v9 == v28)
    v29 = 0;
  else
    v29 = -1;
  v30 = &v9[8 * v29];
  if (v30 != v27)
  {
    google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::SymbolEntry::AsString(&v42, &v9[8 * v29], *(const char **)v4);
    google::protobuf::StringPiece::StringPiece<std::allocator<char>>(v38, (uint64_t *)&v42, v31);
    {
      v32 = *(_QWORD *)v4 + 40 * *v30;
      v33 = *(_BYTE **)v32;
      v34 = *(int *)(v32 + 8);
    }
    else
    {
      v33 = 0;
      v34 = 0;
    }
    if (SHIBYTE(v42.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(v42.__r_.__value_.__l.__data_);
      if (v33)
        goto LABEL_45;
    }
    else if (v33)
    {
LABEL_45:
      (*(void (**)(google::protobuf::MessageLite *))(*(_QWORD *)v3 + 40))(v3);
      return google::protobuf::internal::MergeFromImpl<false>(v33, v34, v3, 1);
    }
  }
  return 0;
}

void sub_18889E434(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, int a16, __int16 a17, char a18, char a19, uint64_t a20,uint64_t a21,void *__p,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a27 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::EncodedDescriptorDatabase::FindFileContainingExtension(uint64_t a1, uint64_t *a2, const char *a3, google::protobuf::MessageLite *a4)
{
  int v5;
  google::protobuf::EncodedDescriptorDatabase::DescriptorIndex *v6;
  const void *v7;
  int64_t v8;
  uint64_t v9;
  const char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  const char *v14;
  int *v15;
  const void *v16;
  uint64_t v17;
  _BYTE *v18;
  int64_t v19;
  _QWORD v21[2];
  __int128 v22;
  int v23;

  v5 = (int)a3;
  v6 = *(google::protobuf::EncodedDescriptorDatabase::DescriptorIndex **)(a1 + 8);
  google::protobuf::StringPiece::StringPiece<std::allocator<char>>(v21, a2, a3);
  v7 = (const void *)v21[0];
  v8 = v21[1];
  google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::EnsureFlat(v6, v9, v10);
  v11 = *((_QWORD *)v6 + 21);
  v12 = *((_QWORD *)v6 + 22);
  *(_QWORD *)&v22 = v7;
  *((_QWORD *)&v22 + 1) = v8;
  v23 = v5;
  v13 = std::__lower_bound[abi:ne180100]<std::_ClassicAlgPolicy,std::__wrap_iter<google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::ExtensionEntry *>,std::__wrap_iter<google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::ExtensionEntry *>,std::tuple<google::protobuf::StringPiece,int>,std::__identity,google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::ExtensionCompare>(v11, v12, &v22);
  if (*((_QWORD *)v6 + 22) == v13)
    return 0;
  v15 = (int *)v13;
  google::protobuf::StringPiece::StringPiece<std::allocator<char>>(&v22, (uint64_t *)(v13 + 8), v14);
  v16 = *((_QWORD *)&v22 + 1) ? (const void *)(v22 + 1) : (const void *)v22;
  if (*((_QWORD *)&v22 + 1) - (*((_QWORD *)&v22 + 1) != 0) != v8 || v8 >= 1 && v16 != v7 && memcmp(v16, v7, v8))
    return 0;
  if (v15[8] != v5)
    return 0;
  v17 = *(_QWORD *)v6;
  v18 = *(_BYTE **)(*(_QWORD *)v6 + 40 * *v15);
  if (!v18)
    return 0;
  v19 = *(int *)(v17 + 40 * *v15 + 8);
  (*(void (**)(google::protobuf::MessageLite *))(*(_QWORD *)a4 + 40))(a4);
  return google::protobuf::internal::MergeFromImpl<false>(v18, v19, a4, 1);
}

uint64_t google::protobuf::EncodedDescriptorDatabase::FindAllExtensionNumbers(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  google::protobuf::EncodedDescriptorDatabase::DescriptorIndex *v4;
  const void *v5;
  int64_t v6;
  uint64_t v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  const char *v12;
  uint64_t v13;
  const char *v14;
  _BOOL8 v15;
  char v16;
  const void *v17;
  unint64_t v18;
  _DWORD *v19;
  _DWORD *v20;
  _DWORD *v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char *v26;
  char *v27;
  int v28;
  _QWORD v30[2];
  __int128 v31;
  int v32;

  v4 = *(google::protobuf::EncodedDescriptorDatabase::DescriptorIndex **)(a1 + 8);
  google::protobuf::StringPiece::StringPiece<std::allocator<char>>(v30, a2, (const char *)a3);
  v5 = (const void *)v30[0];
  v6 = v30[1];
  google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::EnsureFlat(v4, v7, v8);
  v9 = *((_QWORD *)v4 + 21);
  v10 = *((_QWORD *)v4 + 22);
  *(_QWORD *)&v31 = v5;
  *((_QWORD *)&v31 + 1) = v6;
  v32 = 0;
  v11 = std::__lower_bound[abi:ne180100]<std::_ClassicAlgPolicy,std::__wrap_iter<google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::ExtensionEntry *>,std::__wrap_iter<google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::ExtensionEntry *>,std::tuple<google::protobuf::StringPiece,int>,std::__identity,google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::ExtensionCompare>(v9, v10, &v31);
  if (*((_QWORD *)v4 + 22) == v11
    || (v13 = v11,
        google::protobuf::StringPiece::StringPiece<std::allocator<char>>(&v31, (uint64_t *)(v11 + 8), v12),
        v15 = *((_QWORD *)&v31 + 1) != 0,
        *((_QWORD *)&v31 + 1) - v15 != v6))
  {
    v16 = 0;
  }
  else
  {
    v16 = 0;
    v17 = (const void *)(v31 + v15);
    while (v6 < 1 || v17 == v5 || !memcmp(v17, v5, v6))
    {
      v19 = *(_DWORD **)(a3 + 8);
      v18 = *(_QWORD *)(a3 + 16);
      if ((unint64_t)v19 >= v18)
      {
        v21 = *(_DWORD **)a3;
        v22 = ((uint64_t)v19 - *(_QWORD *)a3) >> 2;
        v23 = v22 + 1;
        if ((unint64_t)(v22 + 1) >> 62)
          std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
        v24 = v18 - (_QWORD)v21;
        if (v24 >> 1 > v23)
          v23 = v24 >> 1;
        if ((unint64_t)v24 >= 0x7FFFFFFFFFFFFFFCLL)
          v25 = 0x3FFFFFFFFFFFFFFFLL;
        else
          v25 = v23;
        if (v25)
        {
          v26 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<unsigned int>>(a3 + 16, v25);
          v21 = *(_DWORD **)a3;
          v19 = *(_DWORD **)(a3 + 8);
        }
        else
        {
          v26 = 0;
        }
        v27 = &v26[4 * v22];
        *(_DWORD *)v27 = *(_DWORD *)(v13 + 32);
        v20 = v27 + 4;
        while (v19 != v21)
        {
          v28 = *--v19;
          *((_DWORD *)v27 - 1) = v28;
          v27 -= 4;
        }
        *(_QWORD *)a3 = v27;
        *(_QWORD *)(a3 + 8) = v20;
        *(_QWORD *)(a3 + 16) = &v26[4 * v25];
        if (v21)
          operator delete(v21);
      }
      else
      {
        *v19 = *(_DWORD *)(v13 + 32);
        v20 = v19 + 1;
      }
      *(_QWORD *)(a3 + 8) = v20;
      if (v13 + 40 == *((_QWORD *)v4 + 22))
      {
        v16 = 1;
        return v16 & 1;
      }
      google::protobuf::StringPiece::StringPiece<std::allocator<char>>(&v31, (uint64_t *)(v13 + 48), v14);
      if (*((_QWORD *)&v31 + 1))
        v17 = (const void *)(v31 + 1);
      else
        v17 = (const void *)v31;
      v16 = 1;
      v13 += 40;
      if (*((_QWORD *)&v31 + 1) - (*((_QWORD *)&v31 + 1) != 0) != v6)
        return v16 & 1;
    }
  }
  return v16 & 1;
}

uint64_t google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::AddSymbol(uint64_t a1, unsigned __int8 *a2, std::string::size_type a3)
{
  const char *v6;
  uint64_t v7;
  _QWORD *v8;
  std::string::size_type v9;
  _QWORD *v10;
  int v11;
  uint64_t *v12;
  _QWORD **v13;
  _QWORD *v14;
  _QWORD *v15;
  BOOL v16;
  std::string *v17;
  std::string::size_type v18;
  const char *v19;
  const char *v20;
  _BOOL4 IsSubSymbol;
  _BOOL4 v22;
  std::string *v23;
  std::string::size_type size;
  _QWORD *v25;
  _QWORD *v26;
  __int128 v27;
  const char *v28;
  _BOOL4 v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int *v35;
  int *v36;
  const char *v37;
  _BOOL4 v38;
  _BOOL4 v39;
  std::string *v40;
  std::string::size_type v41;
  int *v42;
  __int128 v43;
  const char *v44;
  _BOOL4 v45;
  uint64_t v46;
  std::string::size_type v48;
  char *v49;
  uint64_t v50;
  uint64_t *v51;
  _QWORD *v52;
  std::string::size_type v53;
  std::string::size_type v54;
  std::string::size_type v55;
  char *v56;
  std::string *v57;
  std::string::size_type v58;
  _QWORD *v59;
  __int128 v60;
  __int128 v61;
  std::string v62;
  int v63;
  __int128 v64;
  uint64_t v65;
  const void *v66;
  int64_t v67;
  std::string v68;
  std::string __p;
  std::string v70;
  const void *v71;
  int64_t v72;
  _OWORD v73[2];

  v63 = -858993459 * ((*(_QWORD *)(a1 + 8) - *(_QWORD *)a1) >> 3) - 1;
  __p.__r_.__value_.__r.__words[0] = (std::string::size_type)a2;
  __p.__r_.__value_.__l.__size_ = a3;
  google::protobuf::StringPiece::ToString((google::protobuf::StringPiece *)&__p, &v64);
  google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::SymbolEntry::AsString(&v62, &v63, *(const char **)a1);
  {
    v8 = (_QWORD *)(a1 + 88);
    v7 = *(_QWORD *)(a1 + 88);
    v9 = a1 + 88;
    v10 = (_QWORD *)(a1 + 88);
    if (v7)
    {
      v10 = (_QWORD *)(a1 + 88);
      do
      {
        v11 = google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::SymbolCompare::operator()<google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::SymbolEntry,google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::SymbolEntry>((uint64_t **)(a1 + 104), (char *)&v63, (char *)(v7 + 32));
        v12 = (uint64_t *)(v7 + 8);
        if (v11)
        {
          v12 = (uint64_t *)v7;
          v10 = (_QWORD *)v7;
        }
        v7 = *v12;
      }
      while (*v12);
    }
    v13 = (_QWORD **)(a1 + 80);
    if (v10 == *(_QWORD **)(a1 + 80))
    {
      v15 = v10;
    }
    else
    {
      v14 = (_QWORD *)*v10;
      if (*v10)
      {
        do
        {
          v15 = v14;
          v14 = (_QWORD *)v14[1];
        }
        while (v14);
      }
      else
      {
        do
        {
          v15 = (_QWORD *)v10[2];
          v16 = *v15 == (_QWORD)v10;
          v10 = v15;
        }
        while (v16);
      }
    }
    google::protobuf::StringPiece::StringPiece<std::allocator<char>>(&v61, (uint64_t *)&v62, v6);
    v73[0] = v61;
    if (v15 != v8)
    {
      google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::SymbolEntry::AsString(&__p, (int *)v15 + 8, *(const char **)a1);
      google::protobuf::StringPiece::StringPiece<std::allocator<char>>(&v71, (uint64_t *)&__p, v20);
      v22 = IsSubSymbol;
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      {
        operator delete(__p.__r_.__value_.__l.__data_);
        if (v22)
          goto LABEL_24;
      }
      else if (IsSubSymbol)
      {
LABEL_24:
        LODWORD(__p.__r_.__value_.__l.__data_) = 2;
        __p.__r_.__value_.__l.__size_ = (std::string::size_type)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libpro"
                                                                "tobuf/src/google/protobuf/descriptor_database.cc";
        LODWORD(__p.__r_.__value_.__r.__words[2]) = 668;
        memset(&v70, 0, sizeof(v70));
        std::string::append(&v70, "Symbol name \"");
        google::protobuf::internal::LogMessage::operator<<(&__p, (google::protobuf::StringPiece *)v73);
        std::string::append(&v70, "\" conflicts with the existing symbol \"");
        google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::SymbolEntry::AsString(&v68, (int *)v15 + 8, *(const char **)a1);
        if ((v68.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          v23 = &v68;
        else
          v23 = (std::string *)v68.__r_.__value_.__r.__words[0];
        if ((v68.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          size = HIBYTE(v68.__r_.__value_.__r.__words[2]);
        else
          size = v68.__r_.__value_.__l.__size_;
LABEL_30:
        std::string::append(&v70, (const std::string::value_type *)v23, size);
        std::string::append(&v70, "\".");
        google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&__p);
        goto LABEL_79;
      }
      v25 = (_QWORD *)v15[1];
      if (v25)
      {
        do
        {
          v26 = v25;
          v25 = (_QWORD *)*v25;
        }
        while (v25);
      }
      else
      {
        do
        {
          v26 = (_QWORD *)v15[2];
          v16 = *v26 == (_QWORD)v15;
          v15 = v26;
        }
        while (!v16);
      }
      if (v26 != v8)
      {
        v27 = v73[0];
        google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::SymbolEntry::AsString(&__p, (int *)v26 + 8, *(const char **)a1);
        google::protobuf::StringPiece::StringPiece<std::allocator<char>>(&v66, (uint64_t *)&__p, v28);
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
          operator delete(__p.__r_.__value_.__l.__data_);
        v9 = (std::string::size_type)v26;
        if (v29)
        {
          LODWORD(__p.__r_.__value_.__l.__data_) = 2;
          __p.__r_.__value_.__l.__size_ = (std::string::size_type)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libp"
                                                                  "rotobuf/src/google/protobuf/descriptor_database.cc";
          LODWORD(__p.__r_.__value_.__r.__words[2]) = 682;
          memset(&v70, 0, sizeof(v70));
          std::string::append(&v70, "Symbol name \"");
          google::protobuf::internal::LogMessage::operator<<(&__p, (google::protobuf::StringPiece *)v73);
          std::string::append(&v70, "\" conflicts with the existing symbol \"");
          google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::SymbolEntry::AsString(&v68, (int *)v26 + 8, *(const char **)a1);
          if ((v68.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
            v23 = &v68;
          else
            v23 = (std::string *)v68.__r_.__value_.__r.__words[0];
          if ((v68.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
            size = HIBYTE(v68.__r_.__value_.__r.__words[2]);
          else
            size = v68.__r_.__value_.__l.__size_;
          goto LABEL_30;
        }
      }
    }
    v30 = *(_QWORD *)(a1 + 112);
    v31 = *(_QWORD *)(a1 + 120);
    __p.__r_.__value_.__r.__words[0] = *(_QWORD *)(a1 + 104);
    if (v31 == v30)
    {
      v33 = v30;
    }
    else
    {
      v32 = (v31 - v30) >> 5;
      do
      {
        if (google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::SymbolCompare::operator()<google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::SymbolEntry,google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::SymbolEntry>((uint64_t **)&__p, (char *)&v63, (char *)(v30 + 32 * (v32 >> 1))))
        {
          v32 >>= 1;
        }
        else
        {
          v30 += 32 * (v32 >> 1) + 32;
          v32 += ~(v32 >> 1);
        }
      }
      while (v32);
      v33 = *(_QWORD *)(a1 + 112);
    }
    if (v30 == v33)
      v34 = 0;
    else
      v34 = -1;
    google::protobuf::StringPiece::StringPiece<std::allocator<char>>(&v60, (uint64_t *)&v62, v19);
    v35 = (int *)(v30 + 32 * v34);
    v36 = *(int **)(a1 + 120);
    v73[0] = v60;
    if (v35 != v36)
    {
      google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::SymbolEntry::AsString(&__p, v35, *(const char **)a1);
      google::protobuf::StringPiece::StringPiece<std::allocator<char>>(&v71, (uint64_t *)&__p, v37);
      v39 = v38;
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      {
        operator delete(__p.__r_.__value_.__l.__data_);
        if (v39)
          goto LABEL_61;
      }
      else if (v38)
      {
LABEL_61:
        LODWORD(__p.__r_.__value_.__l.__data_) = 2;
        __p.__r_.__value_.__l.__size_ = (std::string::size_type)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libpro"
                                                                "tobuf/src/google/protobuf/descriptor_database.cc";
        LODWORD(__p.__r_.__value_.__r.__words[2]) = 668;
        memset(&v70, 0, sizeof(v70));
        std::string::append(&v70, "Symbol name \"");
        google::protobuf::internal::LogMessage::operator<<(&__p, (google::protobuf::StringPiece *)v73);
        std::string::append(&v70, "\" conflicts with the existing symbol \"");
        google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::SymbolEntry::AsString(&v68, v35, *(const char **)a1);
        if ((v68.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          v40 = &v68;
        else
          v40 = (std::string *)v68.__r_.__value_.__r.__words[0];
        if ((v68.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          v41 = HIBYTE(v68.__r_.__value_.__r.__words[2]);
        else
          v41 = v68.__r_.__value_.__l.__size_;
LABEL_78:
        std::string::append(&v70, (const std::string::value_type *)v40, v41);
        std::string::append(&v70, "\".");
        google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&__p);
LABEL_79:
        if (SHIBYTE(v68.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v68.__r_.__value_.__l.__data_);
        goto LABEL_81;
      }
      v42 = v35 + 8;
      if (v42 != v36)
      {
        v43 = v73[0];
        google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::SymbolEntry::AsString(&__p, v42, *(const char **)a1);
        google::protobuf::StringPiece::StringPiece<std::allocator<char>>(&v66, (uint64_t *)&__p, v44);
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
          operator delete(__p.__r_.__value_.__l.__data_);
        if (v45)
        {
          LODWORD(__p.__r_.__value_.__l.__data_) = 2;
          __p.__r_.__value_.__l.__size_ = (std::string::size_type)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libp"
                                                                  "rotobuf/src/google/protobuf/descriptor_database.cc";
          LODWORD(__p.__r_.__value_.__r.__words[2]) = 682;
          memset(&v70, 0, sizeof(v70));
          std::string::append(&v70, "Symbol name \"");
          google::protobuf::internal::LogMessage::operator<<(&__p, (google::protobuf::StringPiece *)v73);
          std::string::append(&v70, "\" conflicts with the existing symbol \"");
          google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::SymbolEntry::AsString(&v68, v42, *(const char **)a1);
          if ((v68.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
            v40 = &v68;
          else
            v40 = (std::string *)v68.__r_.__value_.__r.__words[0];
          if ((v68.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
            v41 = HIBYTE(v68.__r_.__value_.__r.__words[2]);
          else
            v41 = v68.__r_.__value_.__l.__size_;
          goto LABEL_78;
        }
      }
    }
    if (v8 == (_QWORD *)v9
      || google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::SymbolCompare::operator()<google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::SymbolEntry,google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::SymbolEntry>((uint64_t **)(a1 + 104), (char *)&v63, (char *)(v9 + 32)))
    {
      v48 = v9;
      if (*v13 == (_QWORD *)v9)
        goto LABEL_103;
      v49 = *(char **)v9;
      if (*(_QWORD *)v9)
      {
        do
        {
          v48 = (std::string::size_type)v49;
          v49 = (char *)*((_QWORD *)v49 + 1);
        }
        while (v49);
      }
      else
      {
        v54 = v9;
        do
        {
          v48 = *(_QWORD *)(v54 + 16);
          v16 = *(_QWORD *)v48 == v54;
          v54 = v48;
        }
        while (v16);
      }
      if (google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::SymbolCompare::operator()<google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::SymbolEntry,google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::SymbolEntry>((uint64_t **)(a1 + 104), (char *)(v48 + 32), (char *)&v63))
      {
LABEL_103:
        if (!*(_QWORD *)v9)
        {
          __p.__r_.__value_.__r.__words[0] = v9;
LABEL_116:
          v56 = (char *)operator new(0x40uLL);
          *((_DWORD *)v56 + 8) = v63;
          v57 = (std::string *)(v56 + 40);
          if (SHIBYTE(v65) < 0)
          {
            std::string::__init_copy_ctor_external(v57, (const std::string::value_type *)v64, *((std::string::size_type *)&v64 + 1));
          }
          else
          {
            *(_OWORD *)&v57->__r_.__value_.__l.__data_ = v64;
            *((_QWORD *)v56 + 7) = v65;
          }
          v58 = __p.__r_.__value_.__r.__words[0];
          *(_QWORD *)v56 = 0;
          *((_QWORD *)v56 + 1) = 0;
          *((_QWORD *)v56 + 2) = v58;
          *(_QWORD *)v9 = v56;
          v59 = (_QWORD *)**v13;
          if (v59)
          {
            *v13 = v59;
            v56 = *(char **)v9;
          }
          std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(*(uint64_t **)(a1 + 88), (uint64_t *)v56);
          ++*(_QWORD *)(a1 + 96);
          goto LABEL_122;
        }
        __p.__r_.__value_.__r.__words[0] = v48;
        v51 = (uint64_t *)(v48 + 8);
        goto LABEL_115;
      }
      goto LABEL_114;
    }
    if (!google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::SymbolCompare::operator()<google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::SymbolEntry,google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::SymbolEntry>((uint64_t **)(a1 + 104), (char *)(v9 + 32), (char *)&v63))goto LABEL_122;
    v51 = (uint64_t *)(v9 + 8);
    v50 = *(_QWORD *)(v9 + 8);
    if (v50)
    {
      v52 = *(_QWORD **)(v9 + 8);
      do
      {
        v53 = (std::string::size_type)v52;
        v52 = (_QWORD *)*v52;
      }
      while (v52);
    }
    else
    {
      v55 = v9;
      do
      {
        v53 = *(_QWORD *)(v55 + 16);
        v16 = *(_QWORD *)v53 == v55;
        v55 = v53;
      }
      while (!v16);
    }
    if ((_QWORD *)v53 != v8)
    {
      if (!google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::SymbolCompare::operator()<google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::SymbolEntry,google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::SymbolEntry>((uint64_t **)(a1 + 104), (char *)&v63, (char *)(v53 + 32)))
      {
LABEL_114:
        v51 = std::__tree<google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::SymbolEntry,google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::SymbolCompare,std::allocator<google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::SymbolEntry>>::__find_equal<google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::SymbolEntry>(a1 + 80, &__p, (char *)&v63);
        goto LABEL_115;
      }
      v50 = *v51;
    }
    if (v50)
    {
      __p.__r_.__value_.__r.__words[0] = v53;
      v51 = (uint64_t *)v53;
    }
    else
    {
      __p.__r_.__value_.__r.__words[0] = v9;
    }
LABEL_115:
    v9 = (std::string::size_type)v51;
    if (!*v51)
      goto LABEL_116;
LABEL_122:
    v46 = 1;
    goto LABEL_84;
  }
  LODWORD(__p.__r_.__value_.__l.__data_) = 2;
  __p.__r_.__value_.__l.__size_ = (std::string::size_type)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/"
                                                          "src/google/protobuf/descriptor_database.cc";
  LODWORD(__p.__r_.__value_.__r.__words[2]) = 703;
  memset(&v70, 0, sizeof(v70));
  std::string::append(&v70, "Invalid symbol name: ");
  if ((v62.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v17 = &v62;
  else
    v17 = (std::string *)v62.__r_.__value_.__r.__words[0];
  if ((v62.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v18 = HIBYTE(v62.__r_.__value_.__r.__words[2]);
  else
    v18 = v62.__r_.__value_.__l.__size_;
  std::string::append(&v70, (const std::string::value_type *)v17, v18);
  google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&__p);
LABEL_81:
  if (SHIBYTE(v70.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v70.__r_.__value_.__l.__data_);
  v46 = 0;
LABEL_84:
  if (SHIBYTE(v62.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v62.__r_.__value_.__l.__data_);
  if (SHIBYTE(v65) < 0)
    operator delete((void *)v64);
  return v46;
}

void sub_18889EF90(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,uint64_t a26,uint64_t a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33,uint64_t a34,uint64_t a35,int a36,__int16 a37,char a38,char a39,uint64_t a40,uint64_t a41,int a42,__int16 a43,char a44,char a45)
{
  void *v45;

  operator delete(v45);
  if (a18 < 0)
    operator delete(__p);
  if (a25 < 0)
    operator delete(a20);
  _Unwind_Resume(a1);
}

void google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::SymbolEntry::AsString(std::string *a1, int *a2, const char *a3)
{
  uint64_t *v4;
  const char *v5;
  const char *v6;
  uint64_t v7;
  _QWORD v8[6];
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v11 = *MEMORY[0x1E0C80C00];
  v4 = (uint64_t *)(a2 + 2);
  google::protobuf::StringPiece::StringPiece<std::allocator<char>>(&v9, (uint64_t *)&a3[40 * *a2 + 16], a3);
  v6 = "";
  if (v10)
    v6 = ".";
  v8[0] = v6;
  v8[1] = v10 != 0;
  google::protobuf::StringPiece::StringPiece<std::allocator<char>>(&v7, v4, v5);
  google::protobuf::StrCat((uint64_t)&v9, (uint64_t)v8, (uint64_t)&v7, a1);
}

uint64_t google::protobuf::`anonymous namespace'::ValidateSymbolName(unsigned __int8 *a1, uint64_t a2)
{
  int v2;
  unsigned int v3;
  unsigned int v4;

  if (!a2)
    return 1;
  while (1)
  {
    v2 = *a1;
    if (v2 != 46 && v2 != 95)
    {
      v3 = v2 - 58;
      v4 = (v2 & 0xFFFFFFDF) - 91;
      if (v3 <= 0xFFFFFFF5 && v4 < 0xFFFFFFE6)
        break;
    }
    ++a1;
    if (!--a2)
      return 1;
  }
  return 0;
}

void google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::EnsureFlat(google::protobuf::EncodedDescriptorDatabase::DescriptorIndex *this, uint64_t a2, const char *a3)
{
  unint64_t v4;
  int64x2_t v5;
  int64x2_t v6;
  unint64_t v7;
  unint64_t v8;
  char *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  int v16;
  __int128 v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  std::string *v24;
  char *v25;
  char *v26;
  _BOOL4 v27;
  std::string *v28;
  char *v29;
  char *v30;
  const std::string *v31;
  int v32;
  std::string *v33;
  char *v34;
  char *v35;
  BOOL v36;
  void **v37;
  uint64_t v38;
  std::string *v39;
  std::string *v40;
  unint64_t v41;
  std::string *v42;
  char *v43;
  char *v44;
  int v45;
  std::string *v46;
  char *v47;
  char *v48;
  const std::string *v49;
  int data;
  std::string *v51;
  char *v52;
  char *v53;
  void **v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  _DWORD *v59;
  char *v60;
  char *v61;
  _BOOL4 v62;
  std::string *v63;
  char *v64;
  char *v65;
  uint64_t v66;
  int v67;
  _DWORD *v68;
  char *v69;
  char *v70;
  void **v71;
  uint64_t *v72;
  __int128 v73;
  _DWORD *v74;
  uint64_t v75;
  char *v76;
  void **v77;
  char v78;

  v4 = *(_QWORD *)this;
  v5 = *(int64x2_t *)((char *)this + 8);
  v6 = vshrq_n_s64(vsubq_s64(v5, vdupq_n_s64(*(_QWORD *)this)), 3uLL);
  v7 = 0xCCCCCCCCCCCCCCCDLL * v6.i64[0];
  v8 = v7;
  if (0xCCCCCCCCCCCCCCCDLL * v6.i64[1] > v7)
  {
    v76 = (char *)this + 16;
    if (v5.i64[0] == v4)
    {
      v13 = 0;
      v11 = 40 * v7;
    }
    else
    {
      v9 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<CAARiseTransitSetDetails2>>(v7);
      v10 = *(_QWORD *)this;
      v4 = *((_QWORD *)this + 1);
      v11 = (uint64_t)&v9[40 * v8];
      v13 = &v9[40 * v12];
      if (v4 != *(_QWORD *)this)
      {
        v14 = &v9[40 * v8];
        do
        {
          v15 = *(_QWORD *)(v4 - 40);
          v4 -= 40;
          v16 = *(_DWORD *)(v4 + 8);
          *((_QWORD *)v14 - 5) = v15;
          v14 -= 40;
          *((_DWORD *)v14 + 2) = v16;
          v17 = *(_OWORD *)(v4 + 16);
          *((_QWORD *)v14 + 4) = *(_QWORD *)(v4 + 32);
          *((_OWORD *)v14 + 1) = v17;
          *(_QWORD *)(v4 + 24) = 0;
          *(_QWORD *)(v4 + 32) = 0;
          *(_QWORD *)(v4 + 16) = 0;
        }
        while (v4 != v10);
        v18 = *(_QWORD *)this;
        v4 = *((_QWORD *)this + 1);
        goto LABEL_9;
      }
    }
    v18 = v4;
    v14 = (char *)v11;
LABEL_9:
    *(_QWORD *)this = v14;
    *((_QWORD *)this + 1) = v11;
    v19 = *((_QWORD *)this + 2);
    *((_QWORD *)this + 2) = v13;
    v74 = (_DWORD *)v4;
    v75 = v19;
    *(_QWORD *)&v73 = v18;
    *((_QWORD *)&v73 + 1) = v18;
    std::__split_buffer<google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::EncodedEntry>::~__split_buffer((uint64_t)&v73);
  }
  v20 = *((_QWORD *)this + 5);
  if (v20)
  {
    v21 = *((_QWORD *)this + 7);
    v22 = *((_QWORD *)this + 8);
    v23 = v20 + ((v22 - v21) >> 5);
    v74 = 0;
    v73 = 0uLL;
    v77 = (void **)&v73;
    v78 = 0;
    if (v23)
    {
      if (v23 >> 59)
        std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
      v24 = (std::string *)operator new(32 * v23);
      *(_QWORD *)&v73 = v24;
      v74 = (_DWORD *)((char *)v24 + 32 * v23);
      bzero(v24, 32 * v23);
      *((_QWORD *)&v73 + 1) = (char *)v24 + 32 * v23;
    }
    else
    {
      v24 = 0;
    }
    v25 = (char *)*((_QWORD *)this + 3);
    v26 = (char *)this + 32;
    while (1)
    {
      if (v25 == v26)
      {
        while (v21 != v22)
        {
          v32 = *(_DWORD *)v21;
          v31 = (const std::string *)(v21 + 8);
          LODWORD(v24->__r_.__value_.__l.__data_) = v32;
          v33 = (std::string *)&v24->__r_.__value_.__r.__words[1];
          std::string::operator=(v33, v31);
          v21 = (uint64_t)&v31[1];
          v24 = v33 + 1;
        }
        goto LABEL_35;
      }
      if (v21 == v22)
        break;
      v27 = google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::FileCompare::operator()(v21, (uint64_t)(v25 + 32), a3);
      v28 = (std::string *)&v24->__r_.__value_.__r.__words[1];
      if (v27)
      {
        LODWORD(v24->__r_.__value_.__l.__data_) = *(_DWORD *)v21;
        std::string::operator=(v28, (const std::string *)(v21 + 8));
        v21 += 32;
      }
      else
      {
        LODWORD(v24->__r_.__value_.__l.__data_) = *((_DWORD *)v25 + 8);
        std::string::operator=(v28, (const std::string *)(v25 + 40));
        v29 = (char *)*((_QWORD *)v25 + 1);
        if (v29)
        {
          do
          {
            v25 = v29;
            v29 = *(char **)v29;
          }
          while (v29);
        }
        else
        {
          do
          {
            v30 = v25;
            v25 = (char *)*((_QWORD *)v25 + 2);
          }
          while (*(char **)v25 != v30);
        }
      }
      v24 = (std::string *)((char *)v24 + 32);
    }
    if (v25 != v26)
    {
      do
      {
        LODWORD(v24->__r_.__value_.__l.__data_) = *((_DWORD *)v25 + 8);
        std::string::operator=((std::string *)&v24->__r_.__value_.__r.__words[1], (const std::string *)(v25 + 40));
        v34 = (char *)*((_QWORD *)v25 + 1);
        if (v34)
        {
          do
          {
            v35 = v34;
            v34 = *(char **)v34;
          }
          while (v34);
        }
        else
        {
          do
          {
            v35 = (char *)*((_QWORD *)v25 + 2);
            v36 = *(_QWORD *)v35 == (_QWORD)v25;
            v25 = v35;
          }
          while (!v36);
        }
        v24 = (std::string *)((char *)v24 + 32);
        v25 = v35;
      }
      while (v35 != v26);
    }
LABEL_35:
    v37 = (void **)((char *)this + 56);
    if (*((_QWORD *)this + 7))
    {
      std::vector<google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::FileEntry>::__clear[abi:ne180100]((uint64_t *)this + 7);
      operator delete(*v37);
      *v37 = 0;
      *((_QWORD *)this + 8) = 0;
      *((_QWORD *)this + 9) = 0;
    }
    *(_OWORD *)((char *)this + 56) = v73;
    *((_QWORD *)this + 9) = v74;
    v74 = 0;
    v73 = 0uLL;
    std::__tree<google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::FileEntry,google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::FileCompare,std::allocator<google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::FileEntry>>::destroy(*((char **)this + 4));
    *((_QWORD *)this + 4) = 0;
    *((_QWORD *)this + 5) = 0;
    *((_QWORD *)this + 3) = v26;
    v77 = (void **)&v73;
    std::vector<google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::FileEntry>::__destroy_vector::operator()[abi:ne180100](&v77);
  }
  v38 = *((_QWORD *)this + 12);
  if (v38)
  {
    v39 = (std::string *)*((_QWORD *)this + 14);
    v40 = (std::string *)*((_QWORD *)this + 15);
    v41 = v38 + (((char *)v40 - (char *)v39) >> 5);
    v74 = 0;
    v73 = 0uLL;
    v77 = (void **)&v73;
    v78 = 0;
    if (v41)
    {
      if (v41 >> 59)
        std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
      v42 = (std::string *)operator new(32 * v41);
      *(_QWORD *)&v73 = v42;
      v74 = (_DWORD *)((char *)v42 + 32 * v41);
      bzero(v42, 32 * v41);
      *((_QWORD *)&v73 + 1) = (char *)v42 + 32 * v41;
    }
    else
    {
      v42 = 0;
    }
    v43 = (char *)*((_QWORD *)this + 10);
    v44 = (char *)this + 88;
    v72 = (uint64_t *)*((_QWORD *)this + 13);
    while (1)
    {
      if (v43 == v44)
      {
        while (v39 != v40)
        {
          data = (int)v39->__r_.__value_.__l.__data_;
          v49 = (const std::string *)&v39->__r_.__value_.__r.__words[1];
          LODWORD(v42->__r_.__value_.__l.__data_) = data;
          v51 = (std::string *)&v42->__r_.__value_.__r.__words[1];
          std::string::operator=(v51, v49);
          v39 = (std::string *)&v49[1];
          v42 = v51 + 1;
        }
        goto LABEL_63;
      }
      if (v39 == v40)
        break;
      v45 = google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::SymbolCompare::operator()<google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::SymbolEntry,google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::SymbolEntry>(&v72, (char *)v39, v43 + 32);
      v46 = (std::string *)&v42->__r_.__value_.__r.__words[1];
      if (v45)
      {
        LODWORD(v42->__r_.__value_.__l.__data_) = v39->__r_.__value_.__l.__data_;
        std::string::operator=(v46, (const std::string *)&v39->__r_.__value_.__r.__words[1]);
        v39 = (std::string *)((char *)v39 + 32);
      }
      else
      {
        LODWORD(v42->__r_.__value_.__l.__data_) = *((_DWORD *)v43 + 8);
        std::string::operator=(v46, (const std::string *)(v43 + 40));
        v47 = (char *)*((_QWORD *)v43 + 1);
        if (v47)
        {
          do
          {
            v43 = v47;
            v47 = *(char **)v47;
          }
          while (v47);
        }
        else
        {
          do
          {
            v48 = v43;
            v43 = (char *)*((_QWORD *)v43 + 2);
          }
          while (*(char **)v43 != v48);
        }
      }
      v42 = (std::string *)((char *)v42 + 32);
    }
    if (v43 != v44)
    {
      do
      {
        LODWORD(v42->__r_.__value_.__l.__data_) = *((_DWORD *)v43 + 8);
        std::string::operator=((std::string *)&v42->__r_.__value_.__r.__words[1], (const std::string *)(v43 + 40));
        v52 = (char *)*((_QWORD *)v43 + 1);
        if (v52)
        {
          do
          {
            v53 = v52;
            v52 = *(char **)v52;
          }
          while (v52);
        }
        else
        {
          do
          {
            v53 = (char *)*((_QWORD *)v43 + 2);
            v36 = *(_QWORD *)v53 == (_QWORD)v43;
            v43 = v53;
          }
          while (!v36);
        }
        v42 = (std::string *)((char *)v42 + 32);
        v43 = v53;
      }
      while (v53 != v44);
    }
LABEL_63:
    v54 = (void **)((char *)this + 112);
    if (*((_QWORD *)this + 14))
    {
      std::vector<google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::FileEntry>::__clear[abi:ne180100]((uint64_t *)this + 14);
      operator delete(*v54);
      *v54 = 0;
      *((_QWORD *)this + 15) = 0;
      *((_QWORD *)this + 16) = 0;
    }
    *((_OWORD *)this + 7) = v73;
    *((_QWORD *)this + 16) = v74;
    v74 = 0;
    v73 = 0uLL;
    std::__tree<google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::FileEntry,google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::FileCompare,std::allocator<google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::FileEntry>>::destroy(*((char **)this + 11));
    *((_QWORD *)this + 11) = 0;
    *((_QWORD *)this + 12) = 0;
    *((_QWORD *)this + 10) = v44;
    v77 = (void **)&v73;
    std::vector<google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::FileEntry>::__destroy_vector::operator()[abi:ne180100](&v77);
  }
  v55 = *((_QWORD *)this + 19);
  if (v55)
  {
    v56 = *((_QWORD *)this + 21);
    v57 = *((_QWORD *)this + 22);
    v58 = v55 - 0x3333333333333333 * ((v57 - v56) >> 3);
    v74 = 0;
    v73 = 0uLL;
    v77 = (void **)&v73;
    v78 = 0;
    if (v58)
    {
      if (v58 >= 0x666666666666667)
        std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
      v59 = operator new(40 * v58);
      *(_QWORD *)&v73 = v59;
      v74 = &v59[10 * v58];
      bzero(v59, 40 * ((40 * v58 - 40) / 0x28) + 40);
      *((_QWORD *)&v73 + 1) = &v59[10 * ((40 * v58 - 40) / 0x28) + 10];
    }
    else
    {
      v59 = 0;
    }
    v60 = (char *)*((_QWORD *)this + 17);
    v61 = (char *)this + 144;
    while (1)
    {
      if (v60 == v61)
      {
        while (v56 != v57)
        {
          v67 = *(_DWORD *)v56;
          v66 = v56 + 8;
          *v59 = v67;
          v68 = v59 + 2;
          std::string::operator=((std::string *)v68, (const std::string *)v66);
          v68[6] = *(_DWORD *)(v66 + 24);
          v56 = v66 + 32;
          v59 = v68 + 8;
        }
        goto LABEL_91;
      }
      if (v56 == v57)
        break;
      v62 = google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::ExtensionCompare::operator()(v56, (uint64_t)(v60 + 32), a3);
      v63 = (std::string *)(v59 + 2);
      if (v62)
      {
        *v59 = *(_DWORD *)v56;
        std::string::operator=(v63, (const std::string *)(v56 + 8));
        v59[8] = *(_DWORD *)(v56 + 32);
        v56 += 40;
      }
      else
      {
        *v59 = *((_DWORD *)v60 + 8);
        std::string::operator=(v63, (const std::string *)(v60 + 40));
        v59[8] = *((_DWORD *)v60 + 16);
        v64 = (char *)*((_QWORD *)v60 + 1);
        if (v64)
        {
          do
          {
            v60 = v64;
            v64 = *(char **)v64;
          }
          while (v64);
        }
        else
        {
          do
          {
            v65 = v60;
            v60 = (char *)*((_QWORD *)v60 + 2);
          }
          while (*(char **)v60 != v65);
        }
      }
      v59 += 10;
    }
    if (v60 != v61)
    {
      do
      {
        *v59 = *((_DWORD *)v60 + 8);
        std::string::operator=((std::string *)(v59 + 2), (const std::string *)(v60 + 40));
        v59[8] = *((_DWORD *)v60 + 16);
        v69 = (char *)*((_QWORD *)v60 + 1);
        if (v69)
        {
          do
          {
            v70 = v69;
            v69 = *(char **)v69;
          }
          while (v69);
        }
        else
        {
          do
          {
            v70 = (char *)*((_QWORD *)v60 + 2);
            v36 = *(_QWORD *)v70 == (_QWORD)v60;
            v60 = v70;
          }
          while (!v36);
        }
        v59 += 10;
        v60 = v70;
      }
      while (v70 != v61);
    }
LABEL_91:
    v71 = (void **)((char *)this + 168);
    if (*((_QWORD *)this + 21))
    {
      std::vector<google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::ExtensionEntry>::__clear[abi:ne180100]((uint64_t *)this + 21);
      operator delete(*v71);
      *v71 = 0;
      *((_QWORD *)this + 22) = 0;
      *((_QWORD *)this + 23) = 0;
    }
    *(_OWORD *)((char *)this + 168) = v73;
    *((_QWORD *)this + 23) = v74;
    v74 = 0;
    v73 = 0uLL;
    std::__tree<google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::FileEntry,google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::FileCompare,std::allocator<google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::FileEntry>>::destroy(*((char **)this + 18));
    *((_QWORD *)this + 18) = 0;
    *((_QWORD *)this + 19) = 0;
    *((_QWORD *)this + 17) = v61;
    v77 = (void **)&v73;
    std::vector<google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::ExtensionEntry>::__destroy_vector::operator()[abi:ne180100](&v77);
  }
}

void sub_18889F878(void *a1)
{
  __cxa_begin_catch(a1);
  __cxa_end_catch();
  JUMPOUT(0x18889F270);
}

void sub_18889F888(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  std::vector<google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::ExtensionEntry>::__destroy_vector::operator()[abi:ne180100]((void ***)va);
  _Unwind_Resume(a1);
}

BOOL google::protobuf::`anonymous namespace'::IsSubSymbol(const void *a1, int64_t a2, const void *a3, int64_t a4)
{
  _BOOL8 result;

  if (a2 == a4)
  {
    result = 1;
    if (a2 < 1 || a1 == a3)
      return result;
    if (!memcmp(a1, a3, a2))
      return 1;
  }
  return a4 >= a2 && !memcmp(a3, a1, a2) && *((_BYTE *)a3 + a2) == 46;
}

uint64_t google::protobuf::EncodedDescriptorDatabase::FindAllFileNames(uint64_t a1, std::vector<std::string> *this)
{
  _QWORD *v3;
  const char *v4;
  _QWORD *v5;
  uint64_t v6;
  std::string *v7;
  __int128 v8;
  _QWORD *v9;
  _QWORD *v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  std::string *v16;
  __int128 v17;
  __int128 v19;
  __int128 v20;
  std::string::size_type v21;

  v3 = *(_QWORD **)(a1 + 8);
  std::vector<std::string>::resize(this, v3[5] + ((uint64_t)(v3[8] - v3[7]) >> 5));
  v5 = (_QWORD *)v3[3];
  if (v5 == v3 + 4)
  {
    v12 = 0;
  }
  else
  {
    v6 = 0;
    do
    {
      google::protobuf::StringPiece::StringPiece<std::allocator<char>>(&v20, v5 + 5, v4);
      v19 = v20;
      google::protobuf::StringPiece::ToString((google::protobuf::StringPiece *)&v19, &v20);
      v7 = &this->__begin_[v6];
      if (SHIBYTE(v7->__r_.__value_.__r.__words[2]) < 0)
        operator delete(v7->__r_.__value_.__l.__data_);
      v8 = v20;
      v7->__r_.__value_.__r.__words[2] = v21;
      *(_OWORD *)&v7->__r_.__value_.__l.__data_ = v8;
      v9 = (_QWORD *)v5[1];
      if (v9)
      {
        do
        {
          v10 = v9;
          v9 = (_QWORD *)*v9;
        }
        while (v9);
      }
      else
      {
        do
        {
          v10 = (_QWORD *)v5[2];
          v11 = *v10 == (_QWORD)v5;
          v5 = v10;
        }
        while (!v11);
      }
      ++v6;
      v5 = v10;
    }
    while (v10 != v3 + 4);
    v12 = v6;
  }
  v14 = v3[7];
  v13 = v3[8];
  if (v14 != v13)
  {
    v15 = v12;
    do
    {
      google::protobuf::StringPiece::StringPiece<std::allocator<char>>(&v20, (uint64_t *)(v14 + 8), v4);
      v19 = v20;
      google::protobuf::StringPiece::ToString((google::protobuf::StringPiece *)&v19, &v20);
      v16 = &this->__begin_[v15];
      if (SHIBYTE(v16->__r_.__value_.__r.__words[2]) < 0)
        operator delete(v16->__r_.__value_.__l.__data_);
      v17 = v20;
      v16->__r_.__value_.__r.__words[2] = v21;
      *(_OWORD *)&v16->__r_.__value_.__l.__data_ = v17;
      v14 += 32;
      ++v15;
    }
    while (v14 != v13);
  }
  return 1;
}

google::protobuf::EncodedDescriptorDatabase *google::protobuf::EncodedDescriptorDatabase::EncodedDescriptorDatabase(google::protobuf::EncodedDescriptorDatabase *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_1E1BF8550;
  v2 = operator new();
  *(_OWORD *)v2 = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_QWORD *)(v2 + 24) = v2 + 32;
  *(_QWORD *)(v2 + 48) = v2;
  *(_QWORD *)(v2 + 56) = 0;
  *(_QWORD *)(v2 + 64) = 0;
  *(_QWORD *)(v2 + 72) = 0;
  *(_QWORD *)(v2 + 88) = 0;
  *(_QWORD *)(v2 + 96) = 0;
  *(_QWORD *)(v2 + 104) = v2;
  *(_QWORD *)(v2 + 80) = v2 + 88;
  *(_QWORD *)(v2 + 112) = 0;
  *(_QWORD *)(v2 + 120) = 0;
  *(_QWORD *)(v2 + 144) = 0;
  *(_QWORD *)(v2 + 152) = 0;
  *(_QWORD *)(v2 + 160) = v2;
  *(_QWORD *)(v2 + 128) = 0;
  *(_QWORD *)(v2 + 136) = v2 + 144;
  *(_QWORD *)(v2 + 168) = 0;
  *(_QWORD *)(v2 + 176) = 0;
  *(_QWORD *)(v2 + 184) = 0;
  *((_QWORD *)this + 1) = v2;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  *((_QWORD *)this + 4) = 0;
  return this;
}

void google::protobuf::EncodedDescriptorDatabase::~EncodedDescriptorDatabase(google::protobuf::EncodedDescriptorDatabase *this)
{
  void **v2;
  void **v3;
  void *v4;
  uint64_t v5;
  void **v6;
  void **v7;
  void **v8;
  void **v9;

  *(_QWORD *)this = &off_1E1BF8550;
  v2 = (void **)*((_QWORD *)this + 2);
  v3 = (void **)*((_QWORD *)this + 3);
  if (v2 != v3)
  {
    do
    {
      v4 = *v2++;
      operator delete(v4);
    }
    while (v2 != v3);
    v2 = (void **)*((_QWORD *)this + 2);
  }
  if (v2)
  {
    *((_QWORD *)this + 3) = v2;
    operator delete(v2);
  }
  v5 = *((_QWORD *)this + 1);
  *((_QWORD *)this + 1) = 0;
  if (v5)
  {
    v9 = (void **)(v5 + 168);
    std::vector<google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::ExtensionEntry>::__destroy_vector::operator()[abi:ne180100](&v9);
    std::__tree<google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::FileEntry,google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::FileCompare,std::allocator<google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::FileEntry>>::destroy(*(char **)(v5 + 144));
    v9 = (void **)(v5 + 112);
    std::vector<google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::FileEntry>::__destroy_vector::operator()[abi:ne180100](&v9);
    std::__tree<google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::FileEntry,google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::FileCompare,std::allocator<google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::FileEntry>>::destroy(*(char **)(v5 + 88));
    v9 = (void **)(v5 + 56);
    std::vector<google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::FileEntry>::__destroy_vector::operator()[abi:ne180100](&v9);
    std::__tree<google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::FileEntry,google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::FileCompare,std::allocator<google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::FileEntry>>::destroy(*(char **)(v5 + 32));
    v6 = *(void ***)v5;
    if (*(_QWORD *)v5)
    {
      v7 = *(void ***)(v5 + 8);
      v8 = *(void ***)v5;
      if (v7 != v6)
      {
        do
        {
          if (*((char *)v7 - 1) < 0)
            operator delete(*(v7 - 3));
          v7 -= 5;
        }
        while (v7 != v6);
        v8 = *(void ***)v5;
      }
      *(_QWORD *)(v5 + 8) = v6;
      operator delete(v8);
    }
    MEMORY[0x18D76437C](v5, 0x1060C40566A0058);
  }
}

{
  google::protobuf::EncodedDescriptorDatabase::~EncodedDescriptorDatabase(this);
  JUMPOUT(0x18D76437CLL);
}

uint64_t google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::AddNestedExtensions<google::protobuf::DescriptorProto>(uint64_t a1, uint64_t a2, const char *a3, uint64_t a4)
{
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  BOOL v18;

  v8 = *(_QWORD *)(a4 + 64);
  if (v8)
    v9 = (_QWORD *)(v8 + 8);
  else
    v9 = 0;
  v10 = *(int *)(a4 + 56);
  if ((_DWORD)v10)
  {
    v11 = 8 * v10;
    while ((google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::AddNestedExtensions<google::protobuf::DescriptorProto>(a1, a2, a3, *v9) & 1) != 0)
    {
      ++v9;
      v11 -= 8;
      if (!v11)
        goto LABEL_8;
    }
    return 0;
  }
  else
  {
LABEL_8:
    v12 = *(_QWORD *)(a4 + 136);
    if (v12)
      v13 = (uint64_t *)(v12 + 8);
    else
      v13 = 0;
    v14 = *(int *)(a4 + 128);
    if ((_DWORD)v14)
    {
      v15 = 8 * v14 - 8;
      do
      {
        v16 = *v13++;
        result = google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::AddExtension<google::protobuf::FieldDescriptorProto>(a1, a2, a3, v16);
        if ((_DWORD)result)
          v18 = v15 == 0;
        else
          v18 = 1;
        v15 -= 8;
      }
      while (!v18);
    }
    else
    {
      return 1;
    }
  }
  return result;
}

uint64_t google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::AddExtension<google::protobuf::FieldDescriptorProto>(uint64_t a1, uint64_t a2, const char *a3, uint64_t a4)
{
  unint64_t v6;
  _BYTE *v7;
  const char *v8;
  char *v9;
  char **v10;
  char **v11;
  uint64_t v12;
  char *v13;
  std::string *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  const char *v18;
  int v19;
  unint64_t v20;
  uint64_t v21;
  const char *v22;
  _BOOL4 v23;
  const char *v24;
  uint64_t v25;
  _BOOL4 v26;
  unint64_t v27;
  int v28;
  const std::string::value_type *v29;
  std::string::size_type v30;
  unint64_t v31;
  int v32;
  const std::string::value_type *v33;
  std::string::size_type v34;
  std::string __p;
  std::string v37;
  std::string v38;
  __int128 v39;
  _QWORD v40[2];
  _QWORD v41[2];
  int v42;
  uint64_t v43;
  uint64_t v44;
  int data;
  std::string::value_type __str[8];
  __int128 v47;
  uint64_t v48;
  int v49;
  char v50;
  uint64_t v51;

  v51 = *MEMORY[0x1E0C80C00];
  v40[0] = a2;
  v40[1] = a3;
  v6 = *(_QWORD *)(a4 + 32) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v6 + 23) < 0)
  {
    if (!*(_QWORD *)(v6 + 8))
      return 1;
    v7 = *(_BYTE **)v6;
  }
  else
  {
    v7 = (_BYTE *)(*(_QWORD *)(a4 + 32) & 0xFFFFFFFFFFFFFFFELL);
    if (!*(_BYTE *)(v6 + 23))
      return 1;
  }
  if (*v7 != 46)
    return 1;
  *(_DWORD *)__str = -858993459 * ((*(_QWORD *)(a1 + 8) - *(_QWORD *)a1) >> 3) - 1;
  google::protobuf::StringPiece::StringPiece<std::allocator<char>>(&v39, (uint64_t *)v6, a3);
  *(_OWORD *)&__p.__r_.__value_.__l.__data_ = v39;
  google::protobuf::StringPiece::ToString((google::protobuf::StringPiece *)&__p, &v47);
  v49 = *(_DWORD *)(a4 + 72);
  v10 = (char **)(a1 + 144);
  v9 = *(char **)(a1 + 144);
  if (v9)
  {
    while (1)
    {
      while (1)
      {
        v11 = (char **)v9;
        v12 = (uint64_t)(v9 + 32);
        if (!google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::ExtensionCompare::operator()((uint64_t)__str, (uint64_t)(v9 + 32), v8))break;
        v9 = *v11;
        v10 = v11;
        if (!*v11)
          goto LABEL_15;
      }
      if (!google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::ExtensionCompare::operator()(v12, (uint64_t)__str, v8))break;
      v10 = v11 + 1;
      v9 = v11[1];
      if (!v9)
        goto LABEL_15;
    }
    if (*v10)
    {
      v26 = 1;
      goto LABEL_39;
    }
  }
  else
  {
    v11 = (char **)(a1 + 144);
  }
LABEL_15:
  v13 = (char *)operator new(0x48uLL);
  *((_DWORD *)v13 + 8) = *(_DWORD *)__str;
  v14 = (std::string *)(v13 + 40);
  if (SHIBYTE(v48) < 0)
  {
    std::string::__init_copy_ctor_external(v14, (const std::string::value_type *)v47, *((std::string::size_type *)&v47 + 1));
  }
  else
  {
    *(_OWORD *)&v14->__r_.__value_.__l.__data_ = v47;
    *((_QWORD *)v13 + 7) = v48;
  }
  *((_DWORD *)v13 + 16) = v49;
  *(_QWORD *)v13 = 0;
  *((_QWORD *)v13 + 1) = 0;
  *((_QWORD *)v13 + 2) = v11;
  *v10 = v13;
  v15 = **(_QWORD **)(a1 + 136);
  if (v15)
  {
    *(_QWORD *)(a1 + 136) = v15;
    v13 = *v10;
  }
  std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(*(uint64_t **)(a1 + 144), (uint64_t *)v13);
  ++*(_QWORD *)(a1 + 152);
  v16 = *(_QWORD *)(a1 + 168);
  v17 = *(_QWORD *)(a1 + 176);
  std::string::basic_string(&v38, (const std::string *)(*(_QWORD *)(a4 + 32) & 0xFFFFFFFFFFFFFFFELL), 1uLL, 0xFFFFFFFFFFFFFFFFLL, (std::allocator<char> *)&v43);
  v19 = *(_DWORD *)(a4 + 72);
  __p = v38;
  memset(&v38, 0, sizeof(v38));
  LODWORD(v37.__r_.__value_.__l.__data_) = v19;
  if (v17 != v16)
  {
    v20 = 0xCCCCCCCCCCCCCCCDLL * ((v17 - v16) >> 3);
    do
    {
      google::protobuf::StringPiece::StringPiece<std::allocator<char>>(&v43, (uint64_t *)&__p, v18);
      v21 = v16 + 40 * (v20 >> 1);
      data = (int)v37.__r_.__value_.__l.__data_;
      v23 = google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::ExtensionCompare::operator()(v21, (uint64_t)&v43, v22);
      if (v23)
        v20 += ~(v20 >> 1);
      else
        v20 >>= 1;
      if (v23)
        v16 = v21 + 40;
    }
    while (v20);
  }
  if (v17 == v16)
  {
    v26 = 0;
  }
  else
  {
    google::protobuf::StringPiece::StringPiece<std::allocator<char>>(v41, (uint64_t *)&__p, v18);
    v42 = (int)v37.__r_.__value_.__l.__data_;
    google::protobuf::StringPiece::StringPiece<std::allocator<char>>(&v43, (uint64_t *)(v16 + 8), v24);
    v25 = v43;
    if (v44)
      v25 = v43 + 1;
    v43 = v25;
    v44 -= v44 != 0;
    data = *(_DWORD *)(v16 + 32);
    v26 = !std::__tuple_less<2ul>::operator()[abi:ne180100]<std::tuple<google::protobuf::StringPiece,int>,std::tuple<google::protobuf::StringPiece,int>>((uint64_t)v41, (uint64_t)&v43);
  }
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v38.__r_.__value_.__l.__data_);
LABEL_39:
  if (SHIBYTE(v48) < 0)
  {
    operator delete((void *)v47);
    if (v26)
      goto LABEL_41;
    return 1;
  }
  if (!v26)
    return 1;
LABEL_41:
  LODWORD(__p.__r_.__value_.__l.__data_) = 2;
  __p.__r_.__value_.__l.__size_ = (std::string::size_type)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/"
                                                          "src/google/protobuf/descriptor_database.cc";
  LODWORD(__p.__r_.__value_.__r.__words[2]) = 756;
  memset(&v37, 0, sizeof(v37));
  std::string::append(&v37, "Extension conflicts with extension already in database: extend ");
  v27 = *(_QWORD *)(a4 + 32) & 0xFFFFFFFFFFFFFFFELL;
  v28 = *(char *)(v27 + 23);
  if (v28 >= 0)
    v29 = (const std::string::value_type *)(*(_QWORD *)(a4 + 32) & 0xFFFFFFFFFFFFFFFELL);
  else
    v29 = *(const std::string::value_type **)v27;
  if (v28 >= 0)
    v30 = *(unsigned __int8 *)(v27 + 23);
  else
    v30 = *(_QWORD *)(v27 + 8);
  std::string::append(&v37, v29, v30);
  std::string::append(&v37, " { ");
  v31 = *(_QWORD *)(a4 + 24) & 0xFFFFFFFFFFFFFFFELL;
  v32 = *(char *)(v31 + 23);
  if (v32 >= 0)
    v33 = (const std::string::value_type *)(*(_QWORD *)(a4 + 24) & 0xFFFFFFFFFFFFFFFELL);
  else
    v33 = *(const std::string::value_type **)v31;
  if (v32 >= 0)
    v34 = *(unsigned __int8 *)(v31 + 23);
  else
    v34 = *(_QWORD *)(v31 + 8);
  std::string::append(&v37, v33, v34);
  std::string::append(&v37, " = ");
  snprintf(__str, 0x80uLL, "%d", *(_DWORD *)(a4 + 72));
  v50 = 0;
  std::string::append(&v37, __str);
  std::string::append(&v37, " } from:");
  google::protobuf::internal::LogMessage::operator<<(&__p, (google::protobuf::StringPiece *)v40);
  google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&__p);
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v37.__r_.__value_.__l.__data_);
  return 0;
}

void sub_1888A01D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,uint64_t a23,uint64_t a24,uint64_t a25,int a26,__int16 a27,char a28,char a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,void *__p,uint64_t a43,int a44,__int16 a45,char a46,char a47)
{
  void *v47;

  operator delete(v47);
  if (a47 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

uint64_t std::__split_buffer<google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::EncodedEntry>::~__split_buffer(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a1 + 8);
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != v3)
  {
    do
    {
      v4 = v2 - 40;
      *(_QWORD *)(a1 + 16) = v2 - 40;
      if (*(char *)(v2 - 1) < 0)
      {
        operator delete(*(void **)(v2 - 24));
        v4 = *(_QWORD *)(a1 + 16);
      }
      v2 = v4;
    }
    while (v4 != v3);
  }
  if (*(_QWORD *)a1)
    operator delete(*(void **)a1);
  return a1;
}

BOOL google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::FileCompare::operator()(uint64_t a1, uint64_t a2, const char *a3)
{
  const void *v4;
  int64_t v5;
  const char *v6;
  int64_t v7;
  size_t v8;
  int v9;
  const void *v12;
  int64_t v13;

  google::protobuf::StringPiece::StringPiece<std::allocator<char>>(&v12, (uint64_t *)(a1 + 8), a3);
  v4 = v12;
  v5 = v13;
  google::protobuf::StringPiece::StringPiece<std::allocator<char>>(&v12, (uint64_t *)(a2 + 8), v6);
  v7 = v13;
  if (v5 >= v13)
    v8 = v13;
  else
    v8 = v5;
  v9 = memcmp(v4, v12, v8);
  if (v9 < 0)
    return 1;
  return !v9 && v5 < v7;
}

BOOL google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::FileCompare::operator()(uint64_t a1, const void *a2, const char *a3)
{
  uint64_t v5;
  size_t v6;
  int v7;
  const void *v10;
  int64_t v11;

  google::protobuf::StringPiece::StringPiece<std::allocator<char>>(&v10, (uint64_t *)(a1 + 8), a3);
  v5 = v11;
  if (v11 >= (uint64_t)a3)
    v6 = (size_t)a3;
  else
    v6 = v11;
  v7 = memcmp(v10, a2, v6);
  if (v7 < 0)
    return 1;
  return !v7 && v5 < (uint64_t)a3;
}

BOOL google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::ExtensionCompare::operator()(uint64_t a1, uint64_t a2, const char *a3)
{
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  int v14;

  google::protobuf::StringPiece::StringPiece<std::allocator<char>>(&v12, (uint64_t *)(a1 + 8), a3);
  v6 = v12;
  if (v13)
    v6 = v12 + 1;
  v12 = v6;
  v13 -= v13 != 0;
  v14 = *(_DWORD *)(a1 + 32);
  google::protobuf::StringPiece::StringPiece<std::allocator<char>>(&v9, (uint64_t *)(a2 + 8), v5);
  v7 = v9;
  if (v10)
    v7 = v9 + 1;
  v9 = v7;
  v10 -= v10 != 0;
  v11 = *(_DWORD *)(a2 + 32);
  return std::__tuple_less<2ul>::operator()[abi:ne180100]<std::tuple<google::protobuf::StringPiece,int>,std::tuple<google::protobuf::StringPiece,int>>((uint64_t)&v12, (uint64_t)&v9);
}

{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  int v9;

  google::protobuf::StringPiece::StringPiece<std::allocator<char>>(&v7, (uint64_t *)(a1 + 8), a3);
  v5 = v7;
  if (v8)
    v5 = v7 + 1;
  v7 = v5;
  v8 -= v8 != 0;
  v9 = *(_DWORD *)(a1 + 32);
  return std::__tuple_less<2ul>::operator()[abi:ne180100]<std::tuple<google::protobuf::StringPiece,int>,std::tuple<google::protobuf::StringPiece,int>>((uint64_t)&v7, a2);
}

BOOL std::__tuple_less<2ul>::operator()[abi:ne180100]<std::tuple<google::protobuf::StringPiece,int>,std::tuple<google::protobuf::StringPiece,int>>(uint64_t a1, uint64_t a2)
{
  const void *v4;
  uint64_t v5;
  const void *v6;
  uint64_t v7;
  size_t v8;
  int v9;
  int v11;

  v4 = *(const void **)a1;
  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(const void **)a2;
  v7 = *(_QWORD *)(a2 + 8);
  if (v5 >= v7)
    v8 = *(_QWORD *)(a2 + 8);
  else
    v8 = *(_QWORD *)(a1 + 8);
  v9 = memcmp(*(const void **)a1, *(const void **)a2, v8);
  if (v9 < 0)
    return 1;
  if (!v9 && v5 < v7)
    return 1;
  v11 = memcmp(v6, v4, v8);
  if (v11 < 0)
    return 0;
  return (v11 || v7 >= v5) && *(_DWORD *)(a1 + 16) < *(_DWORD *)(a2 + 16);
}

uint64_t google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::SymbolCompare::operator()<google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::SymbolEntry,google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::SymbolEntry>(uint64_t **a1, char *a2, char *a3)
{
  std::string::size_type v6;
  std::string::size_type v7;
  std::string::size_type v8;
  unsigned int v9;
  _BOOL8 v10;
  int64_t v11;
  int64_t v12;
  size_t v13;
  int v14;
  BOOL v15;
  unsigned int v16;
  int v17;
  void *v18;
  char v19;
  std::string::size_type size;
  std::string *p_p;
  std::string::size_type v22;
  std::string *v23;
  size_t v24;
  int v25;
  std::string v27;
  std::string __p;
  const void *v29;
  std::string::size_type v30;
  const void *v31;
  int64_t v32;
  std::string::size_type v33;
  std::string::size_type v34;
  const void *v35;
  int64_t v36;

  google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::SymbolCompare::GetParts(&v33, **a1, a2);
  google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::SymbolCompare::GetParts(&v29, **a1, a3);
  v6 = v34;
  v7 = v30;
  if (v34 >= v30)
    v8 = v30;
  else
    v8 = v34;
  __p.__r_.__value_.__r.__words[0] = v33;
  __p.__r_.__value_.__l.__size_ = v8;
  v9 = google::protobuf::StringPiece::compare((uint64_t)&__p, v29, v8);
  if (v9)
    return v9 >> 31;
  if (v6 != v7)
  {
    google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::SymbolEntry::AsString(&__p, (int *)a2, (const char *)**a1);
    google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::SymbolEntry::AsString(&v27, (int *)a3, (const char *)**a1);
    v17 = SHIBYTE(v27.__r_.__value_.__r.__words[2]);
    v18 = (void *)v27.__r_.__value_.__r.__words[0];
    v19 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    else
      size = __p.__r_.__value_.__l.__size_;
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      p_p = &__p;
    else
      p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
    if ((v27.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v22 = HIBYTE(v27.__r_.__value_.__r.__words[2]);
    else
      v22 = v27.__r_.__value_.__l.__size_;
    if ((v27.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v23 = &v27;
    else
      v23 = (std::string *)v27.__r_.__value_.__r.__words[0];
    if (v22 >= size)
      v24 = size;
    else
      v24 = v22;
    v25 = memcmp(p_p, v23, v24);
    if (v25)
      v10 = v25 < 0;
    else
      v10 = size < v22;
    if (v17 < 0)
    {
      operator delete(v18);
      if ((*((_BYTE *)&__p.__r_.__value_.__s + 23) & 0x80) == 0)
        return v10;
    }
    else if ((v19 & 0x80) == 0)
    {
      return v10;
    }
    operator delete(__p.__r_.__value_.__l.__data_);
    return v10;
  }
  v11 = v36;
  v12 = v32;
  if (v36 >= v32)
    v13 = v32;
  else
    v13 = v36;
  v14 = memcmp(v35, v31, v13);
  if (v14)
    v15 = 0;
  else
    v15 = v11 < v12;
  v16 = v15;
  if (v14 >= 0)
    return v16;
  else
    return 1;
}

void sub_1888A0688(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

_QWORD *google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::SymbolCompare::GetParts(_QWORD *a1, uint64_t a2, const char *a3)
{
  uint64_t *v4;
  const char *v5;
  uint64_t v6;
  _OWORD *v7;
  uint64_t v8;
  _QWORD *result;
  __int128 v10;

  v4 = (uint64_t *)(a3 + 8);
  google::protobuf::StringPiece::StringPiece<std::allocator<char>>(&v10, (uint64_t *)(a2 + 40 * *(int *)a3 + 16), a3);
  v6 = *((_QWORD *)&v10 + 1);
  v7 = a1 + 2;
  if (*((_QWORD *)&v10 + 1))
  {
    v8 = v10;
    result = google::protobuf::StringPiece::StringPiece<std::allocator<char>>(&v10, v4, v5);
    *v7 = v10;
  }
  else
  {
    result = google::protobuf::StringPiece::StringPiece<std::allocator<char>>(&v10, v4, v5);
    v6 = *((_QWORD *)&v10 + 1);
    v8 = v10;
    *(_QWORD *)v7 = 0;
    a1[3] = 0;
  }
  *a1 = v8;
  a1[1] = v6;
  return result;
}

uint64_t google::protobuf::StringPiece::compare(uint64_t a1, const void *a2, int64_t a3)
{
  int64_t v3;
  const void *v4;
  int64_t v5;
  int v7;
  uint64_t result;
  int v9;

  v3 = a3;
  v4 = *(const void **)a1;
  v5 = *(_QWORD *)(a1 + 8);
  if (v5 < a3)
    a3 = v5;
  v7 = memcmp(v4, a2, a3);
  if (v7 < 0)
    return 0xFFFFFFFFLL;
  v9 = v7;
  if (v7)
    result = 1;
  else
    result = 0xFFFFFFFFLL;
  if (v5 >= v3 && v9 == 0)
    return v5 > v3;
  return result;
}

_QWORD *std::__tree<google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::SymbolEntry,google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::SymbolCompare,std::allocator<google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::SymbolEntry>>::__find_equal<google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::SymbolEntry>(uint64_t a1, _QWORD *a2, char *a3)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t **v7;
  _QWORD *v8;
  char *v9;

  v5 = (_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v7 = (uint64_t **)(a1 + 24);
    do
    {
      while (1)
      {
        v8 = (_QWORD *)v4;
        v9 = (char *)(v4 + 32);
        if (!google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::SymbolCompare::operator()<google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::SymbolEntry,google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::SymbolEntry>(v7, a3, (char *)(v4 + 32)))break;
        v4 = *v8;
        v5 = v8;
        if (!*v8)
          goto LABEL_10;
      }
      if (!google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::SymbolCompare::operator()<google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::SymbolEntry,google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::SymbolEntry>(v7, v9, a3))break;
      v5 = v8 + 1;
      v4 = v8[1];
    }
    while (v4);
  }
  else
  {
    v8 = (_QWORD *)(a1 + 8);
  }
LABEL_10:
  *a2 = v8;
  return v5;
}

uint64_t std::__lower_bound[abi:ne180100]<std::_ClassicAlgPolicy,std::__wrap_iter<google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::ExtensionEntry *>,std::__wrap_iter<google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::ExtensionEntry *>,std::tuple<google::protobuf::StringPiece,int>,std::__identity,google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::ExtensionCompare>(uint64_t a1, uint64_t a2, __int128 *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  _BOOL4 v9;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  if (a2 != a1)
  {
    v13 = v3;
    v14 = v4;
    v6 = a1;
    v7 = 0xCCCCCCCCCCCCCCCDLL * ((a2 - a1) >> 3);
    do
    {
      v8 = v6 + 40 * (v7 >> 1);
      v11 = *a3;
      v12 = *((_QWORD *)a3 + 2);
      v9 = google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::ExtensionCompare::operator()(v8, (uint64_t)&v11, (const char *)a3);
      if (v9)
        v7 += ~(v7 >> 1);
      else
        v7 >>= 1;
      if (v9)
        v6 = v8 + 40;
    }
    while (v7);
    return v6;
  }
  return a2;
}

void std::vector<google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::FileEntry>::__destroy_vector::operator()[abi:ne180100](void ***a1)
{
  void **v2;

  v2 = *a1;
  if (*v2)
  {
    std::vector<google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::FileEntry>::__clear[abi:ne180100]((uint64_t *)v2);
    operator delete(**a1);
  }
}

void std::vector<google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::FileEntry>::__clear[abi:ne180100](uint64_t *a1)
{
  uint64_t v2;
  uint64_t i;

  v2 = *a1;
  for (i = a1[1]; i != v2; i -= 32)
  {
    if (*(char *)(i - 1) < 0)
      operator delete(*(void **)(i - 24));
  }
  a1[1] = v2;
}

void std::__tree<google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::FileEntry,google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::FileCompare,std::allocator<google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::FileEntry>>::destroy(char *a1)
{
  if (a1)
  {
    std::__tree<google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::FileEntry,google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::FileCompare,std::allocator<google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::FileEntry>>::destroy(*(_QWORD *)a1);
    std::__tree<google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::FileEntry,google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::FileCompare,std::allocator<google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::FileEntry>>::destroy(*((_QWORD *)a1 + 1));
    if (a1[63] < 0)
      operator delete(*((void **)a1 + 5));
    operator delete(a1);
  }
}

void std::vector<google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::ExtensionEntry>::__destroy_vector::operator()[abi:ne180100](void ***a1)
{
  void **v2;

  v2 = *a1;
  if (*v2)
  {
    std::vector<google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::ExtensionEntry>::__clear[abi:ne180100]((uint64_t *)v2);
    operator delete(**a1);
  }
}

void std::vector<google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::ExtensionEntry>::__clear[abi:ne180100](uint64_t *a1)
{
  uint64_t v2;
  uint64_t i;

  v2 = *a1;
  for (i = a1[1]; i != v2; i -= 40)
  {
    if (*(char *)(i - 9) < 0)
      operator delete(*(void **)(i - 32));
  }
  a1[1] = v2;
}

void google::protobuf::internal::ExtensionSet::AppendToList(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  _QWORD *v6;
  google::protobuf::internal::ExtensionSet::Extension *v7;
  unsigned int v8;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;
  _QWORD *v12;
  _QWORD *v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;

  v15 = a4;
  v4 = *(_QWORD **)(a1 + 16);
  if (*(unsigned __int16 *)(a1 + 8) >= 0x101u)
  {
    v11 = (_QWORD *)*v4;
    v9 = v4 + 1;
    v10 = v11;
    v16 = a2;
    v17 = a3;
    v18 = &v15;
    if (v11 != v9)
    {
      do
      {
        google::protobuf::internal::ExtensionSet::AppendToList(google::protobuf::Descriptor const*,google::protobuf::DescriptorPool const*,std::vector<google::protobuf::FieldDescriptor const*> *)const::$_0::operator()((uint64_t)&v16, *((unsigned int *)v10 + 8), (google::protobuf::internal::ExtensionSet::Extension *)(v10 + 5));
        v12 = (_QWORD *)v10[1];
        if (v12)
        {
          do
          {
            v13 = v12;
            v12 = (_QWORD *)*v12;
          }
          while (v12);
        }
        else
        {
          do
          {
            v13 = (_QWORD *)v10[2];
            v14 = *v13 == (_QWORD)v10;
            v10 = v13;
          }
          while (!v14);
        }
        v10 = v13;
      }
      while (v13 != v9);
    }
  }
  else
  {
    v5 = *(unsigned __int16 *)(a1 + 10);
    v16 = a2;
    v17 = a3;
    v18 = &v15;
    if (v5)
    {
      v6 = &v4[4 * v5];
      do
      {
        v7 = (google::protobuf::internal::ExtensionSet::Extension *)(v4 + 1);
        v8 = *(_DWORD *)v4;
        v4 += 4;
        google::protobuf::internal::ExtensionSet::AppendToList(google::protobuf::Descriptor const*,google::protobuf::DescriptorPool const*,std::vector<google::protobuf::FieldDescriptor const*> *)const::$_0::operator()((uint64_t)&v16, v8, v7);
      }
      while (v4 != v6);
    }
  }
}

uint64_t google::protobuf::internal::ExtensionSet::GetMessage(google::protobuf::internal::ExtensionSet *a1, int a2, uint64_t a3, uint64_t a4)
{
  _BYTE *v6;
  uint64_t v7;
  uint64_t (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;

  v6 = google::protobuf::internal::ExtensionSet::FindOrNull(a1, a2);
  if (!v6 || (v6[10] & 1) != 0)
  {
    v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)a4 + 16);
    v10 = a4;
    v11 = a3;
  }
  else
  {
    v7 = *(_QWORD *)v6;
    if ((v6[10] & 0x10) == 0)
      return *(_QWORD *)v6;
    v11 = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)a4 + 16))(a4, a3);
    v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v7 + 24);
    v10 = v7;
  }
  return v9(v10, v11);
}

uint64_t google::protobuf::internal::ExtensionSet::MutableMessage(google::protobuf::internal::ExtensionSet *this, const google::protobuf::FieldDescriptor *a2, google::protobuf::MessageFactory *a3)
{
  uint64_t **v6;
  uint64_t **v7;
  char v8;
  unint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v16;
  uint64_t v17;
  const google::protobuf::FieldDescriptor *v18;
  uint64_t (*v19)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);
  _QWORD *v20;
  _QWORD v21[2];

  v6 = google::protobuf::internal::ExtensionSet::Insert(this, *((_DWORD *)a2 + 17));
  v7 = v6;
  v6[2] = (uint64_t *)a2;
  if (v8)
  {
    v9 = (unint64_t *)*((_QWORD *)a2 + 6);
    if (v9)
    {
      v18 = a2;
      v19 = google::protobuf::FieldDescriptor::TypeOnceInit;
      v10 = atomic_load(v9);
      if (v10 != -1)
      {
        v21[0] = &v19;
        v21[1] = &v18;
        v20 = v21;
        std::__call_once(v9, &v20, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
      }
    }
    *((_WORD *)v7 + 4) = *((_DWORD *)a2 + 14);
    *((_BYTE *)v7 + 11) = 0;
    v11 = google::protobuf::FieldDescriptor::message_type(a2);
    v12 = (*(uint64_t (**)(google::protobuf::MessageFactory *, uint64_t))(*(_QWORD *)a3 + 16))(a3, v11);
    *((_BYTE *)v7 + 10) &= 0xFu;
    v13 = (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)v12 + 32))(v12, *(_QWORD *)this);
    *v7 = (uint64_t *)v13;
    *((_BYTE *)v7 + 10) &= 0xF0u;
    return v13;
  }
  v14 = *((_BYTE *)v6 + 10);
  *((_BYTE *)v6 + 10) = v14 & 0xF0;
  v13 = (uint64_t)*v6;
  if ((v14 & 0x10) == 0)
    return v13;
  v16 = google::protobuf::FieldDescriptor::message_type(a2);
  v17 = (*(uint64_t (**)(google::protobuf::MessageFactory *, uint64_t))(*(_QWORD *)a3 + 16))(a3, v16);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v13 + 32))(v13, v17);
}

uint64_t google::protobuf::internal::ExtensionSet::UnsafeArenaReleaseMessage(google::protobuf::internal::ExtensionSet *a1, int *a2, uint64_t a3)
{
  _DWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = google::protobuf::internal::ExtensionSet::FindOrNull(a1, a2[17]);
  if (!v6)
    return 0;
  v7 = v6;
  v8 = *(_QWORD *)v6;
  if ((*((_BYTE *)v6 + 10) & 0x10) != 0)
  {
    v9 = google::protobuf::FieldDescriptor::message_type((google::protobuf::FieldDescriptor *)a2);
    v10 = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)a3 + 16))(a3, v9);
    v8 = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v8 + 64))(v8, v10);
    if (!*(_QWORD *)a1)
    {
      if (*v7)
        (*(void (**)(_QWORD))(*(_QWORD *)*v7 + 8))(*v7);
    }
  }
  google::protobuf::internal::ExtensionSet::Erase(a1, a2[17]);
  return v8;
}

uint64_t **google::protobuf::internal::ExtensionSet::MaybeNewRepeatedExtension(google::protobuf::internal::ExtensionSet *this, const google::protobuf::FieldDescriptor *a2)
{
  uint64_t **v4;
  char v5;
  unint64_t *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t *AlignedAndAddCleanup;
  const google::protobuf::FieldDescriptor *v11;
  uint64_t (*v12)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);
  _QWORD *v13;
  _QWORD v14[2];

  v4 = google::protobuf::internal::ExtensionSet::Insert(this, *((_DWORD *)a2 + 17));
  v4[2] = (uint64_t *)a2;
  if (v5)
  {
    v6 = (unint64_t *)*((_QWORD *)a2 + 6);
    if (v6)
    {
      v11 = a2;
      v12 = google::protobuf::FieldDescriptor::TypeOnceInit;
      v7 = atomic_load(v6);
      if (v7 != -1)
      {
        v14[0] = &v12;
        v14[1] = &v11;
        v13 = v14;
        std::__call_once(v6, &v13, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
      }
    }
    *((_BYTE *)v4 + 8) = *((_DWORD *)a2 + 14);
    *((_BYTE *)v4 + 9) = 1;
    v8 = *(_QWORD *)this;
    if (v8)
    {
      if ((*(_BYTE *)(v8 + 24) & 1) != 0)
      AlignedAndAddCleanup = (uint64_t *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((google::protobuf::internal::ArenaImpl *)v8, 0x18uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<google::protobuf::RepeatedPtrField<google::protobuf::MessageLite>>);
      AlignedAndAddCleanup[2] = 0;
      *AlignedAndAddCleanup = v8;
    }
    else
    {
      AlignedAndAddCleanup = (uint64_t *)operator new();
      AlignedAndAddCleanup[2] = 0;
      *AlignedAndAddCleanup = 0;
    }
    AlignedAndAddCleanup[1] = 0;
    *v4 = AlignedAndAddCleanup;
  }
  return v4;
}

void google::protobuf::internal::ExtensionSet::AddMessage(google::protobuf::internal::ExtensionSet *this, const google::protobuf::FieldDescriptor *a2, google::protobuf::MessageFactory *a3)
{
  uint64_t **v6;
  unsigned int **v7;
  uint64_t *v8;
  _DWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14[2];
  int v15;
  std::string v16;

  v6 = google::protobuf::internal::ExtensionSet::MaybeNewRepeatedExtension(this, a2);
  v7 = (unsigned int **)v6;
  v8 = *v6;
  v9 = (_DWORD *)(*v6)[2];
  if (v9)
  {
    v10 = *((int *)v8 + 2);
    if ((int)v10 < *v9)
    {
      *((_DWORD *)v8 + 2) = v10 + 1;
      if (*(_QWORD *)&v9[2 * v10 + 2])
        return;
      v8 = *v6;
    }
  }
  if (*((_DWORD *)v8 + 2))
  {
    v11 = *(_QWORD *)(v8[2] + 8);
  }
  else
  {
    v12 = google::protobuf::FieldDescriptor::message_type(a2);
    v11 = (*(uint64_t (**)(google::protobuf::MessageFactory *, uint64_t))(*(_QWORD *)a3 + 16))(a3, v12);
    if (!v11)
    {
      LODWORD(v14[0]) = 3;
      v14[1] = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/extension_set_heavy.cc";
      v15 = 273;
      memset(&v16, 0, sizeof(v16));
      std::string::append(&v16, "CHECK failed: prototype != NULL: ");
      google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)v14);
      AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage(v14);
      __break(1u);
      return;
    }
  }
  v13 = (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)v11 + 32))(v11, *(_QWORD *)this);
  google::protobuf::internal::RepeatedPtrFieldBase::AddAllocatedInternal<google::protobuf::RepeatedPtrField<google::protobuf::MessageLite>::TypeHandler>(*v7, v13);
}

void sub_1888A0FC0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

BOOL google::protobuf::internal::DescriptorPoolExtensionFinder::Find(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t ExtensionByNumber;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  const std::string::value_type *v16;
  std::string::size_type v17;
  unint64_t *v18;
  unint64_t v19;
  void (**v21)(google::protobuf::FieldDescriptor *, const google::protobuf::FieldDescriptor *, const char *);
  const char *v22;
  int v23;
  std::string __p;
  uint64_t v25;
  void (*v26)(google::protobuf::FieldDescriptor *, const google::protobuf::FieldDescriptor *, const char *);
  void (***v27)(google::protobuf::FieldDescriptor *, const google::protobuf::FieldDescriptor *, const char *);

  ExtensionByNumber = google::protobuf::DescriptorPool::FindExtensionByNumber(*(std::mutex ***)(a1 + 8), *(const google::protobuf::Descriptor **)(a1 + 24), a2);
  v6 = ExtensionByNumber;
  if (ExtensionByNumber)
  {
    v7 = *(unint64_t **)(ExtensionByNumber + 48);
    if (v7)
    {
      v26 = google::protobuf::FieldDescriptor::TypeOnceInit;
      v25 = v6;
      v8 = atomic_load(v7);
      if (v8 != -1)
      {
        v21 = &v26;
        v22 = (const char *)&v25;
        v27 = &v21;
        std::__call_once(v7, &v27, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
      }
      v7 = *(unint64_t **)(v6 + 48);
    }
    v9 = *(_DWORD *)(v6 + 56);
    *(_BYTE *)a3 = v9;
    *(_BYTE *)(a3 + 1) = *(_DWORD *)(v6 + 60) == 3;
    *(_BYTE *)(a3 + 2) = *(_BYTE *)(*(_QWORD *)(v6 + 120) + 76);
    *(_QWORD *)(a3 + 24) = v6;
    if (v7)
    {
      v26 = google::protobuf::FieldDescriptor::TypeOnceInit;
      v25 = v6;
      v10 = atomic_load(v7);
      if (v10 != -1)
      {
        v21 = &v26;
        v22 = (const char *)&v25;
        v27 = &v21;
        std::__call_once(v7, &v27, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
      }
      v9 = *(_DWORD *)(v6 + 56);
    }
    if ((v9 & 0xFFFFFFFE) == 0xA)
    {
      v11 = *(_QWORD *)(a1 + 16);
      v12 = google::protobuf::FieldDescriptor::message_type((google::protobuf::FieldDescriptor *)v6);
      v13 = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v11 + 16))(v11, v12);
      *(_QWORD *)(a3 + 8) = v13;
      if (!v13)
      {
        LODWORD(v21) = 3;
        v22 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/extension_set_heavy.cc";
        v23 = 308;
        memset(&__p, 0, sizeof(__p));
        std::string::append(&__p, "CHECK failed: output->message_info.prototype != nullptr: ");
        std::string::append(&__p, "Extension factory's GetPrototype() returned NULL for extension: ");
        v14 = *(_QWORD *)(v6 + 8);
        v15 = *(char *)(v14 + 23);
        if (v15 >= 0)
          v16 = *(const std::string::value_type **)(v6 + 8);
        else
          v16 = *(const std::string::value_type **)v14;
        if (v15 >= 0)
          v17 = *(unsigned __int8 *)(v14 + 23);
        else
          v17 = *(_QWORD *)(v14 + 8);
        std::string::append(&__p, v16, v17);
        google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v21);
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
          operator delete(__p.__r_.__value_.__l.__data_);
      }
    }
    else
    {
      v18 = *(unint64_t **)(v6 + 48);
      if (v18)
      {
        v26 = google::protobuf::FieldDescriptor::TypeOnceInit;
        v25 = v6;
        v19 = atomic_load(v18);
        if (v19 != -1)
        {
          v21 = &v26;
          v22 = (const char *)&v25;
          v27 = &v21;
          std::__call_once(v18, &v27, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
        }
        v9 = *(_DWORD *)(v6 + 56);
      }
      if (v9 == 14)
      {
        *(_QWORD *)(a3 + 8) = google::protobuf::internal::ValidateEnumUsingDescriptor;
        *(_QWORD *)(a3 + 16) = google::protobuf::FieldDescriptor::enum_type((google::protobuf::FieldDescriptor *)v6);
      }
    }
  }
  return v6 != 0;
}

void sub_1888A1208(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

BOOL google::protobuf::internal::ValidateEnumUsingDescriptor(google::protobuf::internal *this, const void *a2)
{
  _QWORD *v2;
  _QWORD v4[2];

  v2 = (_QWORD *)(*(_QWORD *)(*((_QWORD *)this + 2) + 144) + 192);
  v4[0] = this;
  v4[1] = a2;
}

unsigned __int8 *google::protobuf::internal::ExtensionSet::ParseField(google::protobuf::internal::ExtensionSet *a1, unint64_t a2, unsigned __int8 *a3, uint64_t a4, uint64_t *a5, int32x2_t *a6)
{
  uint64_t v11;
  int v12;
  int32x2_t v13;
  int32x2_t v14;
  uint64_t v15;
  google::protobuf::UnknownFieldSet *v17;
  unsigned __int8 v18[39];
  unsigned __int8 v19;
  void (**v20)(google::protobuf::internal::GeneratedExtensionFinder *__hidden);
  int32x2_t v21;
  int32x2_t v22;
  uint64_t v23;

  v11 = a2 >> 3;
  v19 = 0;
  v12 = a2 & 7;
  v13 = a6[12];
  if (v13)
  {
    v14 = a6[13];
    v15 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a4 + 152))(a4);
    v20 = &off_1E1BF8BE8;
    v21 = v13;
    v22 = v14;
    v23 = v15;
  }
  else
  {
    v20 = &off_1E1BF8BC0;
    v21 = (int32x2_t)a4;
  }
  if ((google::protobuf::internal::ExtensionSet::FindExtensionInfoFromFieldNumber((uint64_t)a1, v12, v11, (uint64_t)&v20, v18, &v19) & 1) != 0)return google::protobuf::internal::ExtensionSet::ParseFieldWithExtensionInfo<google::protobuf::UnknownFieldSet>(a1, v11, v19, (uint64_t)v18, a5, a3, a6);
  if ((*a5 & 1) != 0)
    v17 = (google::protobuf::UnknownFieldSet *)((*a5 & 0xFFFFFFFFFFFFFFFELL) + 8);
  else
    v17 = (google::protobuf::UnknownFieldSet *)google::protobuf::internal::InternalMetadata::mutable_unknown_fields_slow<google::protobuf::UnknownFieldSet>(a5);
  v20 = (void (**)(google::protobuf::internal::GeneratedExtensionFinder *__hidden))v17;
  return (unsigned __int8 *)google::protobuf::internal::FieldParser<google::protobuf::internal::UnknownFieldParserHelper>(a2, (google::protobuf::UnknownFieldSet **)&v20, (uint64_t *)a3, a6);
}

unsigned __int8 *google::protobuf::internal::ExtensionSet::ParseFieldWithExtensionInfo<google::protobuf::UnknownFieldSet>(google::protobuf::internal::ExtensionSet *this, unsigned int a2, int a3, uint64_t a4, uint64_t *a5, unsigned __int8 *a6, int32x2_t *a7)
{
  google::protobuf::internal *v8;
  const google::protobuf::FieldDescriptor *v13;
  std::string *v14;
  uint64_t *v15;
  google::protobuf::internal *v16;
  google::protobuf::internal::EpsCopyInputStream *v17;
  uint64_t *v18;
  google::protobuf::internal *v19;
  google::protobuf::internal::EpsCopyInputStream *v20;
  uint64_t *v21;
  uint64_t *v22;
  uint64_t *v23;
  uint64_t *v25;
  uint64_t *v26;
  uint64_t *v27;
  uint64_t v28;
  const char *v29;
  int v30;
  char *SizeFallback;
  uint64_t *v32;
  uint64_t *v33;
  double v34;
  float v35;
  google::protobuf::internal *v36;
  uint64_t v37;
  google::protobuf::internal *v38;
  google::protobuf::internal *v39;
  uint64_t v40;
  char v41;
  const google::protobuf::FieldDescriptor *v42;
  char v43;
  int v44;
  char v45;
  const google::protobuf::FieldDescriptor *v46;
  char v47;
  int v48;
  google::protobuf::internal *v49;
  uint64_t v50;
  const google::protobuf::MessageLite *v51;
  const google::protobuf::FieldDescriptor *v52;
  uint64_t v53;
  const google::protobuf::MessageLite *v54;
  const google::protobuf::FieldDescriptor *v55;
  uint64_t v56;
  google::protobuf::internal *v57;
  google::protobuf::internal *v58;
  char v59;
  const google::protobuf::FieldDescriptor *v60;
  char v61;
  char v62;
  const google::protobuf::FieldDescriptor *v63;
  char v64;
  google::protobuf::internal *v65;
  uint64_t v66;
  google::protobuf::internal *v67;
  unint64_t v68;
  std::string *v69;
  int v70;
  std::string::value_type *v71;
  char *v72;
  int v73;
  int v74;
  unint64_t v75;
  int v76;
  char *v77;
  __int128 *v78;
  int v79;
  int v80;
  google::protobuf::internal::EpsCopyInputStream *v81;
  unint64_t v82;
  char *v83;
  BOOL v84;
  uint64_t *v85;
  uint64_t **v86;
  char v87;
  uint64_t *v88;
  uint64_t **v89;
  char v90;
  int v91;
  int v92;
  int v93;
  int v94;
  uint64_t *v95;
  uint64_t **v96;
  char v97;
  __int16 v98;
  uint64_t *v99;
  uint64_t **v100;
  char v101;
  __int16 v102;
  int v103;
  int v104;
  BOOL v105;
  __int32 v106;
  int v107;
  int v108;
  google::protobuf::UnknownFieldSet *v109;
  uint64_t *v110;
  char v111;
  uint64_t *v112;
  char v113;
  int v114;
  int v115;
  uint64_t *v116;
  char v117;
  uint64_t *v118;
  char v119;
  uint64_t *v120;
  uint64_t **v121;
  char v122;
  __int16 v123;
  uint64_t *v124;
  uint64_t **v125;
  char v126;
  uint64_t *v127;
  char v128;
  uint64_t *v129;
  char v130;
  uint64_t *v131;
  char v132;
  uint64_t *v133;
  char v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  BOOL v144;
  unsigned int *v145;
  const char *v146;
  uint64_t v147;
  std::string __p;
  unsigned int *v149;
  const char *v150;
  uint64_t v151;
  uint64_t *v152;
  unsigned int v153;
  __int128 v154;
  uint64_t v155;
  __int16 v156;
  uint64_t v157;

  v8 = (google::protobuf::internal *)a6;
  v157 = *MEMORY[0x1E0C80C00];
  if (a3)
  {
    switch(*(_BYTE *)a4)
    {
      case 1:
        v15 = google::protobuf::internal::ExtensionSet::MutableRawRepeatedField(this, a2, 1, *(_BYTE *)(a4 + 2), *(const google::protobuf::FieldDescriptor **)(a4 + 24));
        v16 = v8;
        v17 = (google::protobuf::internal::EpsCopyInputStream *)a7;
        return (unsigned __int8 *)google::protobuf::internal::FixedParser<unsigned long long>((unsigned int *)v15, v16, v17);
      case 2:
        v18 = google::protobuf::internal::ExtensionSet::MutableRawRepeatedField(this, a2, 2, *(_BYTE *)(a4 + 2), *(const google::protobuf::FieldDescriptor **)(a4 + 24));
        v19 = v8;
        v20 = (google::protobuf::internal::EpsCopyInputStream *)a7;
        return (unsigned __int8 *)google::protobuf::internal::FixedParser<unsigned int>((unsigned int *)v18, v19, v20);
      case 3:
        v21 = google::protobuf::internal::ExtensionSet::MutableRawRepeatedField(this, a2, 3, *(_BYTE *)(a4 + 2), *(const google::protobuf::FieldDescriptor **)(a4 + 24));
        return google::protobuf::internal::EpsCopyInputStream::ReadPackedVarint<char const* google::protobuf::internal::VarintParser<long long,false>(void *,char const*,google::protobuf::internal::ParseContext *)::{lambda(unsigned long long)#1}>((uint64_t)a7, v8, (unsigned int *)v21);
      case 4:
        v22 = google::protobuf::internal::ExtensionSet::MutableRawRepeatedField(this, a2, 4, *(_BYTE *)(a4 + 2), *(const google::protobuf::FieldDescriptor **)(a4 + 24));
        return google::protobuf::internal::EpsCopyInputStream::ReadPackedVarint<char const* google::protobuf::internal::VarintParser<unsigned long long,false>(void *,char const*,google::protobuf::internal::ParseContext *)::{lambda(unsigned long long)#1}>((uint64_t)a7, v8, (unsigned int *)v22);
      case 5:
        v23 = google::protobuf::internal::ExtensionSet::MutableRawRepeatedField(this, a2, 5, *(_BYTE *)(a4 + 2), *(const google::protobuf::FieldDescriptor **)(a4 + 24));
        return google::protobuf::internal::EpsCopyInputStream::ReadPackedVarint<char const* google::protobuf::internal::VarintParser<int,false>(void *,char const*,google::protobuf::internal::ParseContext *)::{lambda(unsigned long long)#1}>((uint64_t)a7, v8, (unsigned int *)v23);
      case 6:
        v15 = google::protobuf::internal::ExtensionSet::MutableRawRepeatedField(this, a2, 6, *(_BYTE *)(a4 + 2), *(const google::protobuf::FieldDescriptor **)(a4 + 24));
        v16 = v8;
        v17 = (google::protobuf::internal::EpsCopyInputStream *)a7;
        return (unsigned __int8 *)google::protobuf::internal::FixedParser<unsigned long long>((unsigned int *)v15, v16, v17);
      case 7:
        v18 = google::protobuf::internal::ExtensionSet::MutableRawRepeatedField(this, a2, 7, *(_BYTE *)(a4 + 2), *(const google::protobuf::FieldDescriptor **)(a4 + 24));
        v19 = v8;
        v20 = (google::protobuf::internal::EpsCopyInputStream *)a7;
        return (unsigned __int8 *)google::protobuf::internal::FixedParser<unsigned int>((unsigned int *)v18, v19, v20);
      case 8:
        v25 = google::protobuf::internal::ExtensionSet::MutableRawRepeatedField(this, a2, 8, *(_BYTE *)(a4 + 2), *(const google::protobuf::FieldDescriptor **)(a4 + 24));
        return google::protobuf::internal::EpsCopyInputStream::ReadPackedVarint<char const* google::protobuf::internal::VarintParser<BOOL,false>(void *,char const*,google::protobuf::internal::ParseContext *)::{lambda(unsigned long long)#1}>((uint64_t)a7, v8, (unsigned int *)v25);
      case 9:
      case 0xA:
      case 0xB:
      case 0xC:
        LODWORD(v145) = 3;
        v146 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/extension_set_inl.h";
        LODWORD(v147) = 79;
        memset(&__p, 0, sizeof(__p));
        std::string::append(&__p, "Non-primitive types can't be packed.");
        google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v145);
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
          operator delete(__p.__r_.__value_.__l.__data_);
        return (unsigned __int8 *)v8;
      case 0xD:
        v26 = google::protobuf::internal::ExtensionSet::MutableRawRepeatedField(this, a2, 13, *(_BYTE *)(a4 + 2), *(const google::protobuf::FieldDescriptor **)(a4 + 24));
        return google::protobuf::internal::EpsCopyInputStream::ReadPackedVarint<char const* google::protobuf::internal::VarintParser<unsigned int,false>(void *,char const*,google::protobuf::internal::ParseContext *)::{lambda(unsigned long long)#1}>((uint64_t)a7, v8, (unsigned int *)v26);
      case 0xE:
        v27 = google::protobuf::internal::ExtensionSet::MutableRawRepeatedField(this, a2, 14, *(_BYTE *)(a4 + 2), *(const google::protobuf::FieldDescriptor **)(a4 + 24));
        v29 = *(const char **)(a4 + 8);
        v28 = *(_QWORD *)(a4 + 16);
        v30 = *(unsigned __int8 *)v8;
        if (*(char *)v8 < 0)
        {
          SizeFallback = google::protobuf::internal::ReadSizeFallback(v8, (const char *)*(unsigned __int8 *)v8);
          if (!SizeFallback)
            return 0;
          v30 = v74;
        }
        else
        {
          SizeFallback = (char *)v8 + 1;
        }
        break;
      case 0xF:
        v18 = google::protobuf::internal::ExtensionSet::MutableRawRepeatedField(this, a2, 15, *(_BYTE *)(a4 + 2), *(const google::protobuf::FieldDescriptor **)(a4 + 24));
        v19 = v8;
        v20 = (google::protobuf::internal::EpsCopyInputStream *)a7;
        return (unsigned __int8 *)google::protobuf::internal::FixedParser<unsigned int>((unsigned int *)v18, v19, v20);
      case 0x10:
        v15 = google::protobuf::internal::ExtensionSet::MutableRawRepeatedField(this, a2, 16, *(_BYTE *)(a4 + 2), *(const google::protobuf::FieldDescriptor **)(a4 + 24));
        v16 = v8;
        v17 = (google::protobuf::internal::EpsCopyInputStream *)a7;
        return (unsigned __int8 *)google::protobuf::internal::FixedParser<unsigned long long>((unsigned int *)v15, v16, v17);
      case 0x11:
        v32 = google::protobuf::internal::ExtensionSet::MutableRawRepeatedField(this, a2, 17, *(_BYTE *)(a4 + 2), *(const google::protobuf::FieldDescriptor **)(a4 + 24));
        return google::protobuf::internal::EpsCopyInputStream::ReadPackedVarint<char const* google::protobuf::internal::VarintParser<int,true>(void *,char const*,google::protobuf::internal::ParseContext *)::{lambda(unsigned long long)#1}>((uint64_t)a7, v8, (unsigned int *)v32);
      case 0x12:
        v33 = google::protobuf::internal::ExtensionSet::MutableRawRepeatedField(this, a2, 18, *(_BYTE *)(a4 + 2), *(const google::protobuf::FieldDescriptor **)(a4 + 24));
        return google::protobuf::internal::EpsCopyInputStream::ReadPackedVarint<char const* google::protobuf::internal::VarintParser<long long,true>(void *,char const*,google::protobuf::internal::ParseContext *)::{lambda(unsigned long long)#1}>((uint64_t)a7, v8, (unsigned int *)v33);
      default:
        return (unsigned __int8 *)v8;
    }
    while (1)
    {
      v75 = (unint64_t)a7[1];
      v76 = v75 - (_DWORD)SizeFallback;
      if (v30 <= (int)v75 - (int)SizeFallback)
      {
        v149 = (unsigned int *)v27;
        v150 = v29;
        v82 = (unint64_t)&SizeFallback[v30];
        v151 = v28;
        v152 = a5;
        v153 = a2;
        v83 = google::protobuf::internal::ReadPackedVarintArray<char const* google::protobuf::internal::PackedEnumParserArg<google::protobuf::UnknownFieldSet>(void *,char const*,google::protobuf::internal::ParseContext *,BOOL (*)(void const*,int),void const*,google::protobuf::internal::InternalMetadata *,int)::{lambda(unsigned long long)#1}>(SizeFallback, v82, &v149);
        v84 = v82 == (_QWORD)v83;
LABEL_102:
        if (v84)
          return (unsigned __int8 *)v83;
        else
          return 0;
      }
      v145 = (unsigned int *)v27;
      v146 = v29;
      v147 = v28;
      __p.__r_.__value_.__r.__words[0] = (std::string::size_type)a5;
      LODWORD(__p.__r_.__value_.__r.__words[1]) = a2;
      v77 = google::protobuf::internal::ReadPackedVarintArray<char const* google::protobuf::internal::PackedEnumParserArg<google::protobuf::UnknownFieldSet>(void *,char const*,google::protobuf::internal::ParseContext *,BOOL (*)(void const*,int),void const*,google::protobuf::internal::InternalMetadata *,int)::{lambda(unsigned long long)#1}>(SizeFallback, v75, &v145);
      if (!v77)
        return 0;
      v78 = (__int128 *)a7[1];
      v79 = (_DWORD)v77 - (_DWORD)v78;
      v80 = v30 - v76;
      if (v30 - v76 <= 16)
        break;
      if (a7[3].i32[1] < 17)
        return 0;
      v81 = google::protobuf::internal::EpsCopyInputStream::Next((google::protobuf::internal::EpsCopyInputStream *)a7);
      if (!v81)
        return 0;
      v30 = v30 - v76 - v79;
      SizeFallback = (char *)v81 + v79;
    }
    v156 = 0;
    v155 = 0;
    v154 = *v78;
    v149 = (unsigned int *)v27;
    v150 = v29;
    v151 = v28;
    v152 = a5;
    v153 = a2;
    v143 = google::protobuf::internal::ReadPackedVarintArray<char const* google::protobuf::internal::PackedEnumParserArg<google::protobuf::UnknownFieldSet>(void *,char const*,google::protobuf::internal::ParseContext *,BOOL (*)(void const*,int),void const*,google::protobuf::internal::InternalMetadata *,int)::{lambda(unsigned long long)#1}>((char *)&v154 + v79, (unint64_t)&v154 + v80, &v149);
    if (v143)
      v144 = v143 == (char *)&v154 + v80;
    else
      v144 = 0;
    if (!v144)
      return 0;
    return (unsigned __int8 *)(*(_QWORD *)&a7[1] + v80);
  }
  else
  {
    switch(*(_BYTE *)a4)
    {
      case 1:
        v8 = (google::protobuf::internal *)(a6 + 8);
        v34 = *(double *)a6;
        if (*(_BYTE *)(a4 + 1))
        {
          google::protobuf::internal::ExtensionSet::AddDouble(this, a2, 1, *(_BYTE *)(a4 + 2), v34, *(const google::protobuf::FieldDescriptor **)(a4 + 24));
        }
        else
        {
          v85 = *(uint64_t **)(a4 + 24);
          v86 = google::protobuf::internal::ExtensionSet::Insert(this, a2);
          v86[2] = v85;
          if (v87)
            *((_WORD *)v86 + 4) = 1;
          *((_BYTE *)v86 + 10) &= 0xF0u;
          *(double *)v86 = v34;
        }
        return (unsigned __int8 *)v8;
      case 2:
        v8 = (google::protobuf::internal *)(a6 + 4);
        v35 = *(float *)a6;
        if (*(_BYTE *)(a4 + 1))
        {
          google::protobuf::internal::ExtensionSet::AddFloat(this, a2, 2, *(_BYTE *)(a4 + 2), v35, *(const google::protobuf::FieldDescriptor **)(a4 + 24));
        }
        else
        {
          v88 = *(uint64_t **)(a4 + 24);
          v89 = google::protobuf::internal::ExtensionSet::Insert(this, a2);
          v89[2] = v88;
          if (v90)
            *((_WORD *)v89 + 4) = 2;
          *((_BYTE *)v89 + 10) &= 0xF0u;
          *(float *)v89 = v35;
        }
        return (unsigned __int8 *)v8;
      case 3:
        v36 = (google::protobuf::internal *)(a6 + 1);
        v37 = *a6;
        if (((char)*a6 & 0x80000000) == 0)
          goto LABEL_30;
        v91 = *(unsigned __int8 *)v36;
        v37 = (v37 + (v91 << 7) - 128);
        if ((v91 & 0x80) != 0)
        {
          v36 = (google::protobuf::internal *)(a6 + 3);
          v135 = 14;
          while (1)
          {
            v37 += (*((unsigned __int8 *)v36 - 1) - 1) << v135;
            if ((*((char *)v36 - 1) & 0x80000000) == 0)
              break;
            v8 = 0;
            v36 = (google::protobuf::internal *)((char *)v36 + 1);
            v135 += 7;
            if (v135 == 70)
              return (unsigned __int8 *)v8;
          }
LABEL_30:
          v8 = v36;
        }
        else
        {
          v8 = (google::protobuf::internal *)(a6 + 2);
        }
        if (*(_BYTE *)(a4 + 1))
        {
          v62 = *(_BYTE *)(a4 + 2);
          v63 = *(const google::protobuf::FieldDescriptor **)(a4 + 24);
          v64 = 3;
          goto LABEL_134;
        }
        v116 = *(uint64_t **)(a4 + 24);
        v96 = google::protobuf::internal::ExtensionSet::Insert(this, a2);
        v96[2] = v116;
        if (v117)
        {
          v98 = 3;
          goto LABEL_152;
        }
        goto LABEL_153;
      case 4:
        v38 = (google::protobuf::internal *)(a6 + 1);
        v37 = *a6;
        if (((char)*a6 & 0x80000000) == 0)
          goto LABEL_32;
        v92 = *(unsigned __int8 *)v38;
        v37 = (v37 + (v92 << 7) - 128);
        if ((v92 & 0x80) != 0)
        {
          v38 = (google::protobuf::internal *)(a6 + 3);
          v136 = 14;
          while (1)
          {
            v37 += (*((unsigned __int8 *)v38 - 1) - 1) << v136;
            if ((*((char *)v38 - 1) & 0x80000000) == 0)
              break;
            v8 = 0;
            v38 = (google::protobuf::internal *)((char *)v38 + 1);
            v136 += 7;
            if (v136 == 70)
              return (unsigned __int8 *)v8;
          }
LABEL_32:
          v8 = v38;
        }
        else
        {
          v8 = (google::protobuf::internal *)(a6 + 2);
        }
        if (*(_BYTE *)(a4 + 1))
        {
          v41 = *(_BYTE *)(a4 + 2);
          v42 = *(const google::protobuf::FieldDescriptor **)(a4 + 24);
          v43 = 4;
          goto LABEL_86;
        }
        v118 = *(uint64_t **)(a4 + 24);
        v96 = google::protobuf::internal::ExtensionSet::Insert(this, a2);
        v96[2] = v118;
        if (v119)
        {
          v98 = 4;
          goto LABEL_152;
        }
        goto LABEL_153;
      case 5:
        v39 = (google::protobuf::internal *)(a6 + 1);
        LODWORD(v40) = *a6;
        if (((char)*a6 & 0x80000000) == 0)
          goto LABEL_34;
        v93 = *(unsigned __int8 *)v39;
        v40 = (v40 + (v93 << 7) - 128);
        if ((v93 & 0x80) != 0)
        {
          v39 = (google::protobuf::internal *)(a6 + 3);
          v137 = 14;
          while (1)
          {
            v40 += (*((unsigned __int8 *)v39 - 1) - 1) << v137;
            if ((*((char *)v39 - 1) & 0x80000000) == 0)
              break;
            v8 = 0;
            v39 = (google::protobuf::internal *)((char *)v39 + 1);
            v137 += 7;
            if (v137 == 70)
              return (unsigned __int8 *)v8;
          }
LABEL_34:
          v8 = v39;
        }
        else
        {
          v8 = (google::protobuf::internal *)(a6 + 2);
        }
        if (*(_BYTE *)(a4 + 1))
        {
          v59 = *(_BYTE *)(a4 + 2);
          v60 = *(const google::protobuf::FieldDescriptor **)(a4 + 24);
          v61 = 5;
          v94 = v40;
          goto LABEL_129;
        }
        v120 = *(uint64_t **)(a4 + 24);
        v121 = google::protobuf::internal::ExtensionSet::Insert(this, a2);
        v121[2] = v120;
        if (v122)
        {
          v123 = 5;
          goto LABEL_156;
        }
        goto LABEL_157;
      case 6:
        v8 = (google::protobuf::internal *)(a6 + 8);
        v37 = *(_QWORD *)a6;
        if (*(_BYTE *)(a4 + 1))
        {
          v41 = *(_BYTE *)(a4 + 2);
          v42 = *(const google::protobuf::FieldDescriptor **)(a4 + 24);
          v43 = 6;
LABEL_86:
          google::protobuf::internal::ExtensionSet::AddUInt64(this, a2, v43, v41, v37, v42);
          return (unsigned __int8 *)v8;
        }
        v95 = *(uint64_t **)(a4 + 24);
        v96 = google::protobuf::internal::ExtensionSet::Insert(this, a2);
        v96[2] = v95;
        if (!v97)
          goto LABEL_153;
        v98 = 6;
        goto LABEL_152;
      case 7:
        v8 = (google::protobuf::internal *)(a6 + 4);
        v44 = *(_DWORD *)a6;
        if (*(_BYTE *)(a4 + 1))
        {
          v45 = *(_BYTE *)(a4 + 2);
          v46 = *(const google::protobuf::FieldDescriptor **)(a4 + 24);
          v47 = 7;
          v48 = v44;
          goto LABEL_111;
        }
        v99 = *(uint64_t **)(a4 + 24);
        v100 = google::protobuf::internal::ExtensionSet::Insert(this, a2);
        v100[2] = v99;
        if (!v101)
          goto LABEL_149;
        v102 = 7;
        goto LABEL_148;
      case 8:
        v49 = (google::protobuf::internal *)(a6 + 1);
        v50 = *a6;
        if (((char)*a6 & 0x80000000) == 0)
          goto LABEL_40;
        v103 = *(unsigned __int8 *)v49;
        v50 = (v50 + (v103 << 7) - 128);
        if ((v103 & 0x80) != 0)
        {
          v49 = (google::protobuf::internal *)(a6 + 3);
          v138 = 14;
          while (1)
          {
            v50 += (*((unsigned __int8 *)v49 - 1) - 1) << v138;
            if ((*((char *)v49 - 1) & 0x80000000) == 0)
              break;
            v8 = 0;
            v49 = (google::protobuf::internal *)((char *)v49 + 1);
            v138 += 7;
            if (v138 == 70)
              return (unsigned __int8 *)v8;
          }
LABEL_40:
          v8 = v49;
        }
        else
        {
          v8 = (google::protobuf::internal *)(a6 + 2);
        }
        if (*(_BYTE *)(a4 + 1))
        {
          google::protobuf::internal::ExtensionSet::AddBool(this, a2, 8, *(_BYTE *)(a4 + 2), v50 != 0, *(const google::protobuf::FieldDescriptor **)(a4 + 24));
        }
        else
        {
          v124 = *(uint64_t **)(a4 + 24);
          v125 = google::protobuf::internal::ExtensionSet::Insert(this, a2);
          v125[2] = v124;
          if (v126)
            *((_WORD *)v125 + 4) = 8;
          *((_BYTE *)v125 + 10) &= 0xF0u;
          *(_BYTE *)v125 = v50 != 0;
        }
        return (unsigned __int8 *)v8;
      case 9:
      case 0xC:
        v13 = *(const google::protobuf::FieldDescriptor **)(a4 + 24);
        if (*(_BYTE *)(a4 + 1))
          v14 = (std::string *)google::protobuf::internal::ExtensionSet::AddString(this, a2, 9, v13);
        else
          v14 = (std::string *)google::protobuf::internal::ExtensionSet::MutableString(this, a2, 9, v13);
        v69 = v14;
        v70 = *(unsigned __int8 *)v8;
        if (*(char *)v8 < 0)
        {
          v72 = google::protobuf::internal::ReadSizeFallback(v8, (const char *)*(unsigned __int8 *)v8);
          if (!v72)
            return 0;
          v71 = v72;
          v70 = v73;
        }
        else
        {
          v71 = (char *)v8 + 1;
        }
        return (unsigned __int8 *)google::protobuf::internal::EpsCopyInputStream::ReadString((uint64_t)a7, v71, v70, v69);
      case 0xA:
        v51 = *(const google::protobuf::MessageLite **)(a4 + 8);
        v52 = *(const google::protobuf::FieldDescriptor **)(a4 + 24);
        if (*(_BYTE *)(a4 + 1))
          v53 = google::protobuf::internal::ExtensionSet::AddMessage(this, a2, 10, v51, v52);
        else
          v53 = (uint64_t)google::protobuf::internal::ExtensionSet::MutableMessage(this, a2, 10, v51, v52);
        v104 = a7[11].i32[0];
        v105 = __OFSUB__(v104--, 1);
        a7[11].i32[0] = v104;
        if (v104 < 0 != v105)
          return 0;
        ++a7[11].i32[1];
        v83 = (char *)(*(uint64_t (**)(uint64_t, google::protobuf::internal *, int32x2_t *))(*(_QWORD *)v53 + 88))(v53, v8, a7);
        a7[11] = vadd_s32(a7[11], (int32x2_t)0xFFFFFFFF00000001);
        v106 = a7[10].i32[0];
        a7[10].i32[0] = 0;
        v84 = v106 == ((8 * a2) | 3);
        goto LABEL_102;
      case 0xB:
        v54 = *(const google::protobuf::MessageLite **)(a4 + 8);
        v55 = *(const google::protobuf::FieldDescriptor **)(a4 + 24);
        if (*(_BYTE *)(a4 + 1))
          v56 = google::protobuf::internal::ExtensionSet::AddMessage(this, a2, 11, v54, v55);
        else
          v56 = (uint64_t)google::protobuf::internal::ExtensionSet::MutableMessage(this, a2, 11, v54, v55);
        return (unsigned __int8 *)google::protobuf::internal::ParseContext::ParseMessage<google::protobuf::MessageLite>((uint64_t)a7, v56, v8);
      case 0xD:
        v57 = (google::protobuf::internal *)(a6 + 1);
        LODWORD(v40) = *a6;
        if (((char)*a6 & 0x80000000) == 0)
          goto LABEL_46;
        v107 = *(unsigned __int8 *)v57;
        v40 = (v40 + (v107 << 7) - 128);
        if ((v107 & 0x80) != 0)
        {
          v57 = (google::protobuf::internal *)(a6 + 3);
          v139 = 14;
          while (1)
          {
            v40 += (*((unsigned __int8 *)v57 - 1) - 1) << v139;
            if ((*((char *)v57 - 1) & 0x80000000) == 0)
              break;
            v8 = 0;
            v57 = (google::protobuf::internal *)((char *)v57 + 1);
            v139 += 7;
            if (v139 == 70)
              return (unsigned __int8 *)v8;
          }
LABEL_46:
          v8 = v57;
        }
        else
        {
          v8 = (google::protobuf::internal *)(a6 + 2);
        }
        if (*(_BYTE *)(a4 + 1))
        {
          v45 = *(_BYTE *)(a4 + 2);
          v46 = *(const google::protobuf::FieldDescriptor **)(a4 + 24);
          v47 = 13;
          v48 = v40;
LABEL_111:
          google::protobuf::internal::ExtensionSet::AddUInt32(this, a2, v47, v45, v48, v46);
          return (unsigned __int8 *)v8;
        }
        v127 = *(uint64_t **)(a4 + 24);
        v121 = google::protobuf::internal::ExtensionSet::Insert(this, a2);
        v121[2] = v127;
        if (!v128)
          goto LABEL_157;
        v123 = 13;
        goto LABEL_156;
      case 0xE:
        v58 = (google::protobuf::internal *)(a6 + 1);
        v40 = *a6;
        if (((char)*a6 & 0x80000000) == 0)
          goto LABEL_48;
        v108 = *(unsigned __int8 *)v58;
        v40 = (v40 + (v108 << 7) - 128);
        if ((v108 & 0x80) != 0)
        {
          v58 = (google::protobuf::internal *)(a6 + 3);
          v140 = 14;
          while (1)
          {
            v40 += (*((unsigned __int8 *)v58 - 1) - 1) << v140;
            if ((*((char *)v58 - 1) & 0x80000000) == 0)
              break;
            v8 = 0;
            v58 = (google::protobuf::internal *)((char *)v58 + 1);
            v140 += 7;
            if (v140 == 70)
              return (unsigned __int8 *)v8;
          }
LABEL_48:
          v8 = v58;
        }
        else
        {
          v8 = (google::protobuf::internal *)(a6 + 2);
        }
        if (((*(uint64_t (**)(_QWORD, uint64_t))(a4 + 8))(*(_QWORD *)(a4 + 16), v40) & 1) != 0)
        {
          if (*(_BYTE *)(a4 + 1))
          {
            google::protobuf::internal::ExtensionSet::AddInt32(this, a2, 14, *(_BYTE *)(a4 + 2), v40, *(const google::protobuf::FieldDescriptor **)(a4 + 24));
          }
          else
          {
            v133 = *(uint64_t **)(a4 + 24);
            v121 = google::protobuf::internal::ExtensionSet::Insert(this, a2);
            v121[2] = v133;
            if (v134)
            {
              v123 = 14;
LABEL_156:
              *((_WORD *)v121 + 4) = v123;
            }
LABEL_157:
            *((_BYTE *)v121 + 10) &= 0xF0u;
            *(_DWORD *)v121 = v40;
          }
        }
        else
        {
          if ((*a5 & 1) != 0)
            v109 = (google::protobuf::UnknownFieldSet *)((*a5 & 0xFFFFFFFFFFFFFFFELL) + 8);
          else
            v109 = (google::protobuf::UnknownFieldSet *)google::protobuf::internal::InternalMetadata::mutable_unknown_fields_slow<google::protobuf::UnknownFieldSet>(a5);
          google::protobuf::UnknownFieldSet::AddVarint(v109, a2, v40);
        }
        return (unsigned __int8 *)v8;
      case 0xF:
        v8 = (google::protobuf::internal *)(a6 + 4);
        v44 = *(_DWORD *)a6;
        if (*(_BYTE *)(a4 + 1))
        {
          v59 = *(_BYTE *)(a4 + 2);
          v60 = *(const google::protobuf::FieldDescriptor **)(a4 + 24);
          v61 = 15;
          goto LABEL_128;
        }
        v110 = *(uint64_t **)(a4 + 24);
        v100 = google::protobuf::internal::ExtensionSet::Insert(this, a2);
        v100[2] = v110;
        if (!v111)
          goto LABEL_149;
        v102 = 15;
        goto LABEL_148;
      case 0x10:
        v8 = (google::protobuf::internal *)(a6 + 8);
        v37 = *(_QWORD *)a6;
        if (*(_BYTE *)(a4 + 1))
        {
          v62 = *(_BYTE *)(a4 + 2);
          v63 = *(const google::protobuf::FieldDescriptor **)(a4 + 24);
          v64 = 16;
          goto LABEL_134;
        }
        v112 = *(uint64_t **)(a4 + 24);
        v96 = google::protobuf::internal::ExtensionSet::Insert(this, a2);
        v96[2] = v112;
        if (!v113)
          goto LABEL_153;
        v98 = 16;
        goto LABEL_152;
      case 0x11:
        v65 = (google::protobuf::internal *)(a6 + 1);
        LODWORD(v66) = *a6;
        if (((char)*a6 & 0x80000000) == 0)
          goto LABEL_54;
        v114 = *(unsigned __int8 *)v65;
        v66 = (v66 + (v114 << 7) - 128);
        if ((v114 & 0x80) != 0)
        {
          v65 = (google::protobuf::internal *)(a6 + 3);
          v141 = 14;
          while (1)
          {
            v66 += (*((unsigned __int8 *)v65 - 1) - 1) << v141;
            if ((*((char *)v65 - 1) & 0x80000000) == 0)
              break;
            v8 = 0;
            v65 = (google::protobuf::internal *)((char *)v65 + 1);
            v141 += 7;
            if (v141 == 70)
              return (unsigned __int8 *)v8;
          }
LABEL_54:
          v8 = v65;
        }
        else
        {
          v8 = (google::protobuf::internal *)(a6 + 2);
        }
        v44 = -(v66 & 1) ^ (v66 >> 1);
        if (*(_BYTE *)(a4 + 1))
        {
          v59 = *(_BYTE *)(a4 + 2);
          v60 = *(const google::protobuf::FieldDescriptor **)(a4 + 24);
          v61 = 17;
LABEL_128:
          v94 = v44;
LABEL_129:
          google::protobuf::internal::ExtensionSet::AddInt32(this, a2, v61, v59, v94, v60);
        }
        else
        {
          v129 = *(uint64_t **)(a4 + 24);
          v100 = google::protobuf::internal::ExtensionSet::Insert(this, a2);
          v100[2] = v129;
          if (v130)
          {
            v102 = 17;
LABEL_148:
            *((_WORD *)v100 + 4) = v102;
          }
LABEL_149:
          *((_BYTE *)v100 + 10) &= 0xF0u;
          *(_DWORD *)v100 = v44;
        }
        return (unsigned __int8 *)v8;
      case 0x12:
        v67 = (google::protobuf::internal *)(a6 + 1);
        v68 = *a6;
        if (((char)*a6 & 0x80000000) == 0)
          goto LABEL_56;
        v115 = *(unsigned __int8 *)v67;
        v68 = (v68 + (v115 << 7) - 128);
        if ((v115 & 0x80) != 0)
        {
          v67 = (google::protobuf::internal *)(a6 + 3);
          v142 = 14;
          while (1)
          {
            v68 += (*((unsigned __int8 *)v67 - 1) - 1) << v142;
            if ((*((char *)v67 - 1) & 0x80000000) == 0)
              break;
            v8 = 0;
            v67 = (google::protobuf::internal *)((char *)v67 + 1);
            v142 += 7;
            if (v142 == 70)
              return (unsigned __int8 *)v8;
          }
LABEL_56:
          v8 = v67;
        }
        else
        {
          v8 = (google::protobuf::internal *)(a6 + 2);
        }
        v37 = -(uint64_t)(v68 & 1) ^ (v68 >> 1);
        if (*(_BYTE *)(a4 + 1))
        {
          v62 = *(_BYTE *)(a4 + 2);
          v63 = *(const google::protobuf::FieldDescriptor **)(a4 + 24);
          v64 = 18;
LABEL_134:
          google::protobuf::internal::ExtensionSet::AddInt64(this, a2, v64, v62, v37, v63);
        }
        else
        {
          v131 = *(uint64_t **)(a4 + 24);
          v96 = google::protobuf::internal::ExtensionSet::Insert(this, a2);
          v96[2] = v131;
          if (v132)
          {
            v98 = 18;
LABEL_152:
            *((_WORD *)v96 + 4) = v98;
          }
LABEL_153:
          *((_BYTE *)v96 + 10) &= 0xF0u;
          *v96 = (uint64_t *)v37;
        }
        break;
      default:
        return (unsigned __int8 *)v8;
    }
  }
  return (unsigned __int8 *)v8;
}

void sub_1888A2438(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::internal::ExtensionSet::SpaceUsedExcludingSelfLong(google::protobuf::internal::ExtensionSet *this)
{
  uint64_t v1;
  uint64_t **v2;
  uint64_t v3;
  _QWORD *v5;
  uint64_t **v6;
  uint64_t **v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t **v10;
  BOOL v11;

  if (*((unsigned __int16 *)this + 4) >= 0x101u)
  {
    v5 = (_QWORD *)*((_QWORD *)this + 2);
    v1 = 32 * v5[2];
    v6 = (uint64_t **)*v5;
    v7 = (uint64_t **)(v5 + 1);
    if ((_QWORD *)*v5 != v5 + 1)
    {
      do
      {
        v8 = google::protobuf::internal::ExtensionSet::Extension::SpaceUsedExcludingSelfLong(v6 + 5);
        v9 = v6[1];
        if (v9)
        {
          do
          {
            v10 = (uint64_t **)v9;
            v9 = (uint64_t *)*v9;
          }
          while (v9);
        }
        else
        {
          do
          {
            v10 = (uint64_t **)v6[2];
            v11 = *v10 == (uint64_t *)v6;
            v6 = v10;
          }
          while (!v11);
        }
        v1 += v8;
        v6 = v10;
      }
      while (v10 != v7);
    }
  }
  else
  {
    v1 = 32 * *((unsigned __int16 *)this + 5);
    if (*((_WORD *)this + 5))
    {
      v2 = (uint64_t **)(*((_QWORD *)this + 2) + 8);
      v3 = 32 * *((unsigned __int16 *)this + 5);
      do
      {
        v1 += google::protobuf::internal::ExtensionSet::Extension::SpaceUsedExcludingSelfLong(v2);
        v2 += 4;
        v3 -= 32;
      }
      while (v3);
    }
  }
  return v1;
}

uint64_t google::protobuf::internal::ExtensionSet::Extension::SpaceUsedExcludingSelfLong(uint64_t **this)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  BOOL v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(void);
  uint64_t v10;
  unsigned int *v11;
  uint64_t v12;
  unsigned int *v13;
  _QWORD *v14;
  BOOL v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  int *v19;
  uint64_t v20;

  v1 = google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*((unsigned __int8 *)this + 8)];
  if (*((_BYTE *)this + 9))
  {
    switch(*((_BYTE *)this + 8))
    {
      case 1:
      case 3:
      case 4:
      case 6:
      case 0x10:
      case 0x12:
        v2 = *((unsigned int *)*this + 1);
        v3 = 8 * v2;
        goto LABEL_15;
      case 2:
      case 5:
      case 7:
      case 0xD:
      case 0xE:
      case 0xF:
      case 0x11:
        v2 = *((unsigned int *)*this + 1);
        v3 = 4 * v2;
LABEL_15:
        v7 = v3 + 24;
        goto LABEL_16;
      case 8:
        v2 = *((unsigned int *)*this + 1);
        v7 = v2 + 24;
LABEL_16:
        if ((int)v2 <= 0)
          result = 16;
        else
          result = v7;
        break;
      case 9:
      case 0xC:
        v10 = 8 * *((int *)*this + 3);
        v11 = (unsigned int *)(*this)[2];
        if (v11)
        {
          v12 = *v11;
          if ((int)v12 >= 1)
          {
            v13 = v11 + 2;
            do
            {
              v14 = *(_QWORD **)v13;
              if (*(char *)(*(_QWORD *)v13 + 23) < 0
                && (*v14 >= (unint64_t)v14 ? (v15 = *v14 >= (unint64_t)(v14 + 3)) : (v15 = 1), v15))
              {
                v16 = (v14[2] & 0x7FFFFFFFFFFFFFFFLL) - 1;
              }
              else
              {
                v16 = 0;
              }
              v10 += v16 + 24;
              v13 += 2;
              --v12;
            }
            while (v12);
          }
          v10 += 8;
        }
        result = v10 + 24;
        break;
      case 0xA:
      case 0xB:
        v17 = *this;
        v18 = 8 * *((int *)*this + 3);
        v19 = (int *)(*this)[2];
        if (v19)
        {
          if (*v19 >= 1)
          {
            v20 = 0;
            do
            {
              v18 += (*(uint64_t (**)(_QWORD))(**(_QWORD **)&v19[2 * v20 + 2] + 136))(*(_QWORD *)&v19[2 * v20 + 2]);
              ++v20;
              v19 = (int *)v17[2];
            }
            while (v20 < *v19);
          }
          v18 += 8;
        }
        result = v18 + 24;
        break;
      default:
        return 0;
    }
  }
  else if (v1 == 10)
  {
    v8 = **this;
    if ((*((_BYTE *)this + 10) & 0x10) != 0)
      v9 = *(uint64_t (**)(void))(v8 + 96);
    else
      v9 = *(uint64_t (**)(void))(v8 + 136);
    return v9();
  }
  else if (v1 == 9)
  {
    v4 = *this;
    if (*((char *)*this + 23) < 0
      && (*v4 >= (unint64_t)v4 ? (v5 = *v4 >= (unint64_t)(v4 + 3)) : (v5 = 1), v5))
    {
      return (v4[2] & 0x7FFFFFFFFFFFFFFFLL) + 23;
    }
    else
    {
      return 24;
    }
  }
  else
  {
    return 0;
  }
  return result;
}

void google::protobuf::internal::DescriptorPoolExtensionFinder::~DescriptorPoolExtensionFinder(google::protobuf::internal::DescriptorPoolExtensionFinder *this)
{
  JUMPOUT(0x18D76437CLL);
}

void google::protobuf::internal::ExtensionSet::AppendToList(google::protobuf::Descriptor const*,google::protobuf::DescriptorPool const*,std::vector<google::protobuf::FieldDescriptor const*> *)const::$_0::operator()(uint64_t a1, uint64_t a2, google::protobuf::internal::ExtensionSet::Extension *this)
{
  uint64_t v6;
  void **v7;
  unint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t ExtensionByNumber;
  unint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char *v23;
  char *v24;
  char *v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t *v29;
  char *v30;
  char *v31;
  uint64_t v32;

  if (*((_BYTE *)this + 9))
  {
    if ((int)google::protobuf::internal::ExtensionSet::Extension::GetSize(this) <= 0)
      return;
  }
  else if ((*((_BYTE *)this + 10) & 1) != 0)
  {
    return;
  }
  v6 = *((_QWORD *)this + 2);
  v7 = **(void ****)(a1 + 16);
  if (!v6)
  {
    ExtensionByNumber = google::protobuf::DescriptorPool::FindExtensionByNumber(*(std::mutex ***)(a1 + 8), *(const google::protobuf::Descriptor **)a1, a2);
    v12 = (unint64_t)v7[2];
    v13 = (uint64_t *)v7[1];
    if ((unint64_t)v13 < v12)
    {
      *v13 = ExtensionByNumber;
      v10 = v13 + 1;
      goto LABEL_32;
    }
    v19 = ((char *)v13 - (_BYTE *)*v7) >> 3;
    if (!((unint64_t)(v19 + 1) >> 61))
    {
      v20 = v12 - (_QWORD)*v7;
      v21 = v20 >> 2;
      if (v20 >> 2 <= (unint64_t)(v19 + 1))
        v21 = v19 + 1;
      if ((unint64_t)v20 >= 0x7FFFFFFFFFFFFFF8)
        v22 = 0x1FFFFFFFFFFFFFFFLL;
      else
        v22 = v21;
      if (v22)
        v23 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<zilch::StringList::Entry>>((uint64_t)(v7 + 2), v22);
      else
        v23 = 0;
      v29 = (uint64_t *)&v23[8 * v19];
      v30 = &v23[8 * v22];
      *v29 = ExtensionByNumber;
      v10 = v29 + 1;
      v31 = (char *)*v7;
      v26 = (char *)v7[1];
      if (v26 != *v7)
      {
        do
        {
          v32 = *((_QWORD *)v26 - 1);
          v26 -= 8;
          *--v29 = v32;
        }
        while (v26 != v31);
        v26 = (char *)*v7;
      }
      *v7 = v29;
      v7[1] = v10;
      v7[2] = v30;
      if (!v26)
        goto LABEL_32;
LABEL_31:
      operator delete(v26);
      goto LABEL_32;
    }
LABEL_40:
    std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
  }
  v8 = (unint64_t)v7[2];
  v9 = v7[1];
  if ((unint64_t)v9 >= v8)
  {
    v14 = ((char *)v9 - (_BYTE *)*v7) >> 3;
    if (!((unint64_t)(v14 + 1) >> 61))
    {
      v15 = v8 - (_QWORD)*v7;
      v16 = v15 >> 2;
      if (v15 >> 2 <= (unint64_t)(v14 + 1))
        v16 = v14 + 1;
      if ((unint64_t)v15 >= 0x7FFFFFFFFFFFFFF8)
        v17 = 0x1FFFFFFFFFFFFFFFLL;
      else
        v17 = v16;
      if (v17)
      {
        v18 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<zilch::StringList::Entry>>((uint64_t)(v7 + 2), v17);
        v6 = *((_QWORD *)this + 2);
      }
      else
      {
        v18 = 0;
      }
      v24 = &v18[8 * v14];
      v25 = &v18[8 * v17];
      *(_QWORD *)v24 = v6;
      v10 = v24 + 8;
      v27 = (char *)*v7;
      v26 = (char *)v7[1];
      if (v26 != *v7)
      {
        do
        {
          v28 = *((_QWORD *)v26 - 1);
          v26 -= 8;
          *((_QWORD *)v24 - 1) = v28;
          v24 -= 8;
        }
        while (v26 != v27);
        v26 = (char *)*v7;
      }
      *v7 = v24;
      v7[1] = v10;
      v7[2] = v25;
      if (!v26)
        goto LABEL_32;
      goto LABEL_31;
    }
    goto LABEL_40;
  }
  *v9 = v6;
  v10 = v9 + 1;
LABEL_32:
  v7[1] = v10;
}

char *google::protobuf::internal::ReadPackedVarintArray<char const* google::protobuf::internal::PackedEnumParserArg<google::protobuf::UnknownFieldSet>(void *,char const*,google::protobuf::internal::ParseContext *,BOOL (*)(void const*,int),void const*,google::protobuf::internal::InternalMetadata *,int)::{lambda(unsigned long long)#1}>(char *a1, unint64_t a2, unsigned int **a3)
{
  char *v3;
  uint64_t v6;
  int v7;
  unsigned int *v8;
  uint64_t v9;
  unsigned int v10;
  unsigned int v11;
  uint64_t *v12;
  google::protobuf::UnknownFieldSet *v13;
  uint64_t v14;

  v3 = a1;
  while ((unint64_t)v3 < a2)
  {
    v6 = *v3;
    if (*v3 < 0)
    {
      v7 = v3[1];
      v6 = (v6 + (v7 << 7) - 128);
      if ((v7 & 0x80) != 0)
      {
        v3 += 3;
        v14 = 14;
        while (1)
        {
          v6 += (*(v3 - 1) - 1) << v14;
          if ((*(v3 - 1) & 0x80000000) == 0)
            break;
          ++v3;
          v14 += 7;
          if (v14 == 70)
            return 0;
        }
      }
      else
      {
        v3 += 2;
      }
    }
    else
    {
      ++v3;
    }
    if (((unsigned int (*)(unsigned int *, uint64_t))a3[1])(a3[2], v6))
    {
      v8 = *a3;
      v9 = **a3;
      if ((_DWORD)v9 == (*a3)[1])
      {
        v10 = v9 + 1;
        google::protobuf::RepeatedField<int>::Reserve(*a3, v9 + 1);
        *(_DWORD *)(*((_QWORD *)v8 + 1) + 4 * v9) = v6;
      }
      else
      {
        *(_DWORD *)(*((_QWORD *)v8 + 1) + 4 * v9) = v6;
        v10 = v9 + 1;
      }
      *v8 = v10;
    }
    else
    {
      v11 = *((_DWORD *)a3 + 8);
      v12 = (uint64_t *)a3[3];
      if ((*v12 & 1) != 0)
        v13 = (google::protobuf::UnknownFieldSet *)((*v12 & 0xFFFFFFFFFFFFFFFELL) + 8);
      else
        v13 = (google::protobuf::UnknownFieldSet *)google::protobuf::internal::InternalMetadata::mutable_unknown_fields_slow<google::protobuf::UnknownFieldSet>(v12);
      google::protobuf::UnknownFieldSet::AddVarint(v13, v11, v6);
    }
  }
  return v3;
}

void InitDefaultsscc_info_DescriptorProto_google_2fprotobuf_2fdescriptor_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  const void *v4;

  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, 3014000, "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/descriptor.pb.cc", a4);
  google::protobuf::DescriptorProto::DescriptorProto((google::protobuf::DescriptorProto *)&google::protobuf::_DescriptorProto_default_instance_, 0);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&google::protobuf::_DescriptorProto_default_instance_, v4);
}

void InitDefaultsscc_info_DescriptorProto_ExtensionRange_google_2fprotobuf_2fdescriptor_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  const void *v4;

  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, 3014000, "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/descriptor.pb.cc", a4);
  google::protobuf::_DescriptorProto_ExtensionRange_default_instance_ = (uint64_t)&off_1E1BF8830;
  unk_1EDF50A10 = 0;
  qword_1EDF50A18 = 0;
  if (atomic_load(scc_info_DescriptorProto_ExtensionRange_google_2fprotobuf_2fdescriptor_2eproto))
    google::protobuf::internal::InitSCCImpl(scc_info_DescriptorProto_ExtensionRange_google_2fprotobuf_2fdescriptor_2eproto);
  qword_1EDF50A20 = 0;
  unk_1EDF50A28 = 0;
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&google::protobuf::_DescriptorProto_ExtensionRange_default_instance_, v4);
}

void InitDefaultsscc_info_DescriptorProto_ReservedRange_google_2fprotobuf_2fdescriptor_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  const void *v4;

  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, 3014000, "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/descriptor.pb.cc", a4);
  google::protobuf::_DescriptorProto_ReservedRange_default_instance_ = (uint64_t)&off_1E1BF86F8;
  *(_QWORD *)algn_1EDF50A38 = 0;
  qword_1EDF50A40 = 0;
  unk_1EDF50A48 = 0;
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&google::protobuf::_DescriptorProto_ReservedRange_default_instance_, v4);
}

void InitDefaultsscc_info_EnumDescriptorProto_google_2fprotobuf_2fdescriptor_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  const void *v4;

  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, 3014000, "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/descriptor.pb.cc", a4);
  google::protobuf::EnumDescriptorProto::EnumDescriptorProto((google::protobuf::EnumDescriptorProto *)&google::protobuf::_EnumDescriptorProto_default_instance_, 0);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&google::protobuf::_EnumDescriptorProto_default_instance_, v4);
}

void InitDefaultsscc_info_EnumDescriptorProto_EnumReservedRange_google_2fprotobuf_2fdescriptor_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  const void *v4;

  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, 3014000, "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/descriptor.pb.cc", a4);
  google::protobuf::_EnumDescriptorProto_EnumReservedRange_default_instance_ = (uint64_t)&off_1E1BF88E0;
  *(_QWORD *)algn_1EDF50BC8 = 0;
  qword_1EDF50BD0 = 0;
  unk_1EDF50BD8 = 0;
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&google::protobuf::_EnumDescriptorProto_EnumReservedRange_default_instance_, v4);
}

void InitDefaultsscc_info_EnumOptions_google_2fprotobuf_2fdescriptor_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  const void *v4;

  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, 3014000, "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/descriptor.pb.cc", a4);
  google::protobuf::EnumOptions::EnumOptions((google::protobuf::EnumOptions *)&google::protobuf::_EnumOptions_default_instance_, 0);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&google::protobuf::_EnumOptions_default_instance_, v4);
}

void InitDefaultsscc_info_EnumValueDescriptorProto_google_2fprotobuf_2fdescriptor_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  const void *v4;

  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, 3014000, "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/descriptor.pb.cc", a4);
  google::protobuf::_EnumValueDescriptorProto_default_instance_ = (uint64_t)&off_1E1BF84A0;
  *(_QWORD *)algn_1EDF50C58 = 0;
  qword_1EDF50C60 = 0;
  if (atomic_load(scc_info_EnumValueDescriptorProto_google_2fprotobuf_2fdescriptor_2eproto))
    google::protobuf::internal::InitSCCImpl(scc_info_EnumValueDescriptorProto_google_2fprotobuf_2fdescriptor_2eproto);
  qword_1EDF50C68 = (uint64_t)&google::protobuf::internal::fixed_address_empty_string;
  unk_1EDF50C70 = 0;
  dword_1EDF50C78 = 0;
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&google::protobuf::_EnumValueDescriptorProto_default_instance_, v4);
}

void InitDefaultsscc_info_EnumValueOptions_google_2fprotobuf_2fdescriptor_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  const void *v4;

  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, 3014000, "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/descriptor.pb.cc", a4);
  google::protobuf::EnumValueOptions::EnumValueOptions((google::protobuf::EnumValueOptions *)&google::protobuf::_EnumValueOptions_default_instance_, 0);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&google::protobuf::_EnumValueOptions_default_instance_, v4);
}

void InitDefaultsscc_info_ExtensionRangeOptions_google_2fprotobuf_2fdescriptor_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  const void *v4;

  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, 3014000, "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/descriptor.pb.cc", a4);
  google::protobuf::ExtensionRangeOptions::ExtensionRangeOptions((google::protobuf::ExtensionRangeOptions *)&google::protobuf::_ExtensionRangeOptions_default_instance_, 0);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&google::protobuf::_ExtensionRangeOptions_default_instance_, v4);
}

void InitDefaultsscc_info_FieldDescriptorProto_google_2fprotobuf_2fdescriptor_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  const void *v4;

  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, 3014000, "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/descriptor.pb.cc", a4);
  google::protobuf::FieldDescriptorProto::FieldDescriptorProto((google::protobuf::FieldDescriptorProto *)&google::protobuf::_FieldDescriptorProto_default_instance_, 0);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&google::protobuf::_FieldDescriptorProto_default_instance_, v4);
}

void InitDefaultsscc_info_FieldOptions_google_2fprotobuf_2fdescriptor_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  const void *v4;

  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, 3014000, "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/descriptor.pb.cc", a4);
  google::protobuf::FieldOptions::FieldOptions((google::protobuf::FieldOptions *)&google::protobuf::_FieldOptions_default_instance_, 0);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&google::protobuf::_FieldOptions_default_instance_, v4);
}

void InitDefaultsscc_info_FileDescriptorProto_google_2fprotobuf_2fdescriptor_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  const void *v4;

  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, 3014000, "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/descriptor.pb.cc", a4);
  google::protobuf::FileDescriptorProto::FileDescriptorProto((google::protobuf::FileDescriptorProto *)&google::protobuf::_FileDescriptorProto_default_instance_, 0);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&google::protobuf::_FileDescriptorProto_default_instance_, v4);
}

void InitDefaultsscc_info_FileDescriptorSet_google_2fprotobuf_2fdescriptor_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  const void *v4;

  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, 3014000, "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/descriptor.pb.cc", a4);
  google::protobuf::FileDescriptorSet::FileDescriptorSet((google::protobuf::FileDescriptorSet *)&google::protobuf::_FileDescriptorSet_default_instance_, 0);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&google::protobuf::_FileDescriptorSet_default_instance_, v4);
}

void InitDefaultsscc_info_FileOptions_google_2fprotobuf_2fdescriptor_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  const void *v4;

  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, 3014000, "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/descriptor.pb.cc", a4);
  google::protobuf::FileOptions::FileOptions((google::protobuf::FileOptions *)&google::protobuf::_FileOptions_default_instance_, 0);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&google::protobuf::_FileOptions_default_instance_, v4);
}

void InitDefaultsscc_info_GeneratedCodeInfo_google_2fprotobuf_2fdescriptor_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  const void *v4;

  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, 3014000, "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/descriptor.pb.cc", a4);
  google::protobuf::GeneratedCodeInfo::GeneratedCodeInfo((google::protobuf::GeneratedCodeInfo *)&google::protobuf::_GeneratedCodeInfo_default_instance_, 0);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&google::protobuf::_GeneratedCodeInfo_default_instance_, v4);
}

void InitDefaultsscc_info_GeneratedCodeInfo_Annotation_google_2fprotobuf_2fdescriptor_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  const void *v4;

  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, 3014000, "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/descriptor.pb.cc", a4);
  google::protobuf::GeneratedCodeInfo_Annotation::GeneratedCodeInfo_Annotation((google::protobuf::GeneratedCodeInfo_Annotation *)&google::protobuf::_GeneratedCodeInfo_Annotation_default_instance_, 0);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&google::protobuf::_GeneratedCodeInfo_Annotation_default_instance_, v4);
}

void InitDefaultsscc_info_MessageOptions_google_2fprotobuf_2fdescriptor_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  const void *v4;

  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, 3014000, "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/descriptor.pb.cc", a4);
  google::protobuf::MessageOptions::MessageOptions((google::protobuf::MessageOptions *)&google::protobuf::_MessageOptions_default_instance_, 0);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&google::protobuf::_MessageOptions_default_instance_, v4);
}

void InitDefaultsscc_info_MethodDescriptorProto_google_2fprotobuf_2fdescriptor_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  const void *v4;

  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, 3014000, "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/descriptor.pb.cc", a4);
  google::protobuf::MethodDescriptorProto::MethodDescriptorProto((google::protobuf::MethodDescriptorProto *)&google::protobuf::_MethodDescriptorProto_default_instance_, 0);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&google::protobuf::_MethodDescriptorProto_default_instance_, v4);
}

void InitDefaultsscc_info_MethodOptions_google_2fprotobuf_2fdescriptor_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  const void *v4;

  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, 3014000, "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/descriptor.pb.cc", a4);
  google::protobuf::MethodOptions::MethodOptions((google::protobuf::MethodOptions *)&google::protobuf::_MethodOptions_default_instance_, 0);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&google::protobuf::_MethodOptions_default_instance_, v4);
}

void InitDefaultsscc_info_OneofDescriptorProto_google_2fprotobuf_2fdescriptor_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  const void *v4;

  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, 3014000, "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/descriptor.pb.cc", a4);
  google::protobuf::_OneofDescriptorProto_default_instance_ = (uint64_t)&off_1E1BF8108;
  unk_1EDF50BA0 = 0;
  qword_1EDF50BA8 = 0;
  if (atomic_load(scc_info_OneofDescriptorProto_google_2fprotobuf_2fdescriptor_2eproto))
    google::protobuf::internal::InitSCCImpl(scc_info_OneofDescriptorProto_google_2fprotobuf_2fdescriptor_2eproto);
  qword_1EDF50BB0 = (uint64_t)&google::protobuf::internal::fixed_address_empty_string;
  unk_1EDF50BB8 = 0;
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&google::protobuf::_OneofDescriptorProto_default_instance_, v4);
}

void InitDefaultsscc_info_OneofOptions_google_2fprotobuf_2fdescriptor_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  const void *v4;

  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, 3014000, "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/descriptor.pb.cc", a4);
  google::protobuf::OneofOptions::OneofOptions((google::protobuf::OneofOptions *)&google::protobuf::_OneofOptions_default_instance_, 0);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&google::protobuf::_OneofOptions_default_instance_, v4);
}

void InitDefaultsscc_info_ServiceDescriptorProto_google_2fprotobuf_2fdescriptor_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  const void *v4;

  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, 3014000, "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/descriptor.pb.cc", a4);
  google::protobuf::ServiceDescriptorProto::ServiceDescriptorProto((google::protobuf::ServiceDescriptorProto *)&google::protobuf::_ServiceDescriptorProto_default_instance_, 0);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&google::protobuf::_ServiceDescriptorProto_default_instance_, v4);
}

void InitDefaultsscc_info_ServiceOptions_google_2fprotobuf_2fdescriptor_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  const void *v4;

  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, 3014000, "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/descriptor.pb.cc", a4);
  google::protobuf::ServiceOptions::ServiceOptions((google::protobuf::ServiceOptions *)&google::protobuf::_ServiceOptions_default_instance_, 0);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&google::protobuf::_ServiceOptions_default_instance_, v4);
}

void InitDefaultsscc_info_SourceCodeInfo_google_2fprotobuf_2fdescriptor_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  const void *v4;

  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, 3014000, "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/descriptor.pb.cc", a4);
  google::protobuf::SourceCodeInfo::SourceCodeInfo((google::protobuf::SourceCodeInfo *)&google::protobuf::_SourceCodeInfo_default_instance_, 0);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&google::protobuf::_SourceCodeInfo_default_instance_, v4);
}

void InitDefaultsscc_info_SourceCodeInfo_Location_google_2fprotobuf_2fdescriptor_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  const void *v4;

  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, 3014000, "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/descriptor.pb.cc", a4);
  google::protobuf::SourceCodeInfo_Location::SourceCodeInfo_Location((google::protobuf::SourceCodeInfo_Location *)&google::protobuf::_SourceCodeInfo_Location_default_instance_, 0);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&google::protobuf::_SourceCodeInfo_Location_default_instance_, v4);
}

void InitDefaultsscc_info_UninterpretedOption_google_2fprotobuf_2fdescriptor_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  const void *v4;

  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, 3014000, "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/descriptor.pb.cc", a4);
  google::protobuf::UninterpretedOption::UninterpretedOption((google::protobuf::UninterpretedOption *)&google::protobuf::_UninterpretedOption_default_instance_, 0);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&google::protobuf::_UninterpretedOption_default_instance_, v4);
}

void InitDefaultsscc_info_UninterpretedOption_NamePart_google_2fprotobuf_2fdescriptor_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  const void *v4;

  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, 3014000, "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/descriptor.pb.cc", a4);
  google::protobuf::_UninterpretedOption_NamePart_default_instance_ = (uint64_t)&off_1E1BF8648;
  *(_QWORD *)algn_1EDF50D08 = 0;
  qword_1EDF50D10 = 0;
  if (atomic_load(scc_info_UninterpretedOption_NamePart_google_2fprotobuf_2fdescriptor_2eproto))
    google::protobuf::internal::InitSCCImpl(scc_info_UninterpretedOption_NamePart_google_2fprotobuf_2fdescriptor_2eproto);
  qword_1EDF50D18 = (uint64_t)&google::protobuf::internal::fixed_address_empty_string;
  byte_1EDF50D20 = 0;
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&google::protobuf::_UninterpretedOption_NamePart_default_instance_, v4);
}

google::protobuf::FileDescriptorSet *google::protobuf::FileDescriptorSet::FileDescriptorSet(google::protobuf::FileDescriptorSet *this, Arena *a2)
{
  *(_QWORD *)this = &off_1E1BF7CE8;
  *((_QWORD *)this + 1) = a2;
  *((_QWORD *)this + 2) = a2;
  *((_QWORD *)this + 3) = 0;
  *((_QWORD *)this + 4) = 0;
  *((_DWORD *)this + 10) = 0;
  if (atomic_load(scc_info_FileDescriptorSet_google_2fprotobuf_2fdescriptor_2eproto))
    google::protobuf::internal::InitSCCImpl(scc_info_FileDescriptorSet_google_2fprotobuf_2fdescriptor_2eproto);
  return this;
}

void sub_1888A3408(_Unwind_Exception *a1)
{
  _QWORD *v1;

  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<google::protobuf::FileDescriptorProto>::TypeHandler>(v1);
  _Unwind_Resume(a1);
}

void google::protobuf::FileDescriptorSet::~FileDescriptorSet(google::protobuf::FileDescriptorSet *this)
{
  google::protobuf::internal::InternalMetadata::Delete<google::protobuf::UnknownFieldSet>((uint64_t *)this + 1);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<google::protobuf::FileDescriptorProto>::TypeHandler>((_QWORD *)this + 2);
}

{
  google::protobuf::FileDescriptorSet::~FileDescriptorSet(this);
  JUMPOUT(0x18D76437CLL);
}

uint64_t google::protobuf::FileDescriptorSet::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 40) = a2;
  return this;
}

google::protobuf::UnknownFieldSet *google::protobuf::FileDescriptorSet::Clear(google::protobuf::UnknownFieldSet *this)
{
  uint64_t v1;
  uint64_t v2;
  google::protobuf::FileDescriptorProto **v3;
  google::protobuf::FileDescriptorProto *v4;
  uint64_t *v5;
  char v6;

  v1 = (uint64_t)this;
  v2 = *((unsigned int *)this + 6);
  if ((int)v2 >= 1)
  {
    v3 = (google::protobuf::FileDescriptorProto **)(*((_QWORD *)this + 4) + 8);
    do
    {
      v4 = *v3++;
      this = google::protobuf::FileDescriptorProto::Clear(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 24) = 0;
  }
  v6 = *(_BYTE *)(v1 + 8);
  v5 = (uint64_t *)(v1 + 8);
  if ((v6 & 1) != 0)
    return google::protobuf::internal::InternalMetadata::DoClear<google::protobuf::UnknownFieldSet>(v5);
  return this;
}

google::protobuf::internal *google::protobuf::FileDescriptorSet::_InternalParse(uint64_t a1, google::protobuf::internal *a2, google::protobuf::internal::EpsCopyInputStream *this)
{
  char v5;
  google::protobuf::internal *result;
  _QWORD *v7;
  google::protobuf::internal *v8;
  unsigned int v9;
  BOOL v10;
  google::protobuf::UnknownFieldSet *v11;
  google::protobuf::internal *v12;
  int *v13;
  int v14;
  int v15;
  google::protobuf::FileDescriptorProto *v16;
  uint64_t v17;
  uint64_t v18;
  const char *v19;
  google::protobuf::internal *v20;
  uint64_t v21;
  int v22;
  int v23;
  BOOL v24;
  int v25;
  unint64_t v26;
  int v27;
  uint64_t v28;
  google::protobuf::internal *v29;
  google::protobuf::UnknownFieldSet *v30;

  v29 = a2;
  v5 = google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(this, (const char **)&v29, *((_DWORD *)this + 23));
  result = v29;
  if ((v5 & 1) == 0)
  {
    v7 = (_QWORD *)(a1 + 8);
    while (1)
    {
      v8 = (google::protobuf::internal *)((char *)result + 1);
      v9 = *(unsigned __int8 *)result;
      if (*(char *)result < 0)
      {
        v9 = v9 + (*(unsigned __int8 *)v8 << 7) - 128;
        if (*(char *)v8 < 0)
        {
          v8 = (google::protobuf::internal *)((char *)result + 3);
          v28 = -21;
          while (1)
          {
            v9 += (*((unsigned __int8 *)v8 - 1) - 1) << (v28 + 35);
            if ((*((char *)v8 - 1) & 0x80000000) == 0)
              break;
            result = 0;
            v8 = (google::protobuf::internal *)((char *)v8 + 1);
            v28 += 7;
            if (!v28)
              return result;
          }
        }
        else
        {
          v8 = (google::protobuf::internal *)((char *)result + 2);
        }
      }
      v29 = v8;
      if (v9 == 10)
        break;
      if (v9)
        v10 = (v9 & 7) == 4;
      else
        v10 = 1;
      if (v10)
      {
        *((_DWORD *)this + 20) = v9 - 1;
        return v8;
      }
      if ((*v7 & 1) != 0)
      {
        v11 = (google::protobuf::UnknownFieldSet *)((*v7 & 0xFFFFFFFFFFFFFFFELL) + 8);
      }
      else
      {
        v11 = (google::protobuf::UnknownFieldSet *)google::protobuf::internal::InternalMetadata::mutable_unknown_fields_slow<google::protobuf::UnknownFieldSet>((uint64_t *)(a1 + 8));
        v8 = v29;
      }
      v30 = v11;
      result = google::protobuf::internal::FieldParser<google::protobuf::internal::UnknownFieldParserHelper>(v9, &v30, (uint64_t *)v8, (int32x2_t *)this);
      v29 = result;
      if (!result)
        return result;
LABEL_34:
      v27 = google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(this, (const char **)&v29, *((_DWORD *)this + 23));
      result = v29;
      if (v27)
        return result;
    }
    result = (google::protobuf::internal *)((char *)v8 - 1);
    while (1)
    {
      v12 = (google::protobuf::internal *)((char *)result + 1);
      v29 = v12;
      v13 = *(int **)(a1 + 32);
      if (!v13)
        break;
      v14 = *(_DWORD *)(a1 + 24);
      v15 = *v13;
      if (v14 >= *v13)
      {
        if (v15 == *(_DWORD *)(a1 + 28))
        {
LABEL_21:
          if (v14 <= v15)
          {
            google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 16), v15 - v14 + 1);
            v13 = *(int **)(a1 + 32);
          }
          v15 = *v13;
        }
        *v13 = v15 + 1;
        v16 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::FileDescriptorProto>(*(google::protobuf::internal::ArenaImpl **)(a1 + 16));
        v17 = *(_QWORD *)(a1 + 32);
        v18 = *(int *)(a1 + 24);
        *(_DWORD *)(a1 + 24) = v18 + 1;
        *(_QWORD *)(v17 + 8 * v18 + 8) = v16;
        v12 = v29;
        goto LABEL_25;
      }
      *(_DWORD *)(a1 + 24) = v14 + 1;
      v16 = *(google::protobuf::FileDescriptorProto **)&v13[2 * v14 + 2];
LABEL_25:
      v19 = (const char *)*(unsigned __int8 *)v12;
      if (*(char *)v12 < 0)
      {
        result = (google::protobuf::internal *)google::protobuf::internal::ReadSizeFallback(v12, v19);
        if (!result)
          return result;
        v20 = result;
      }
      else
      {
        v20 = (google::protobuf::internal *)((char *)v12 + 1);
      }
      v21 = *((_QWORD *)this + 1);
      v22 = (_DWORD)v19 + (_DWORD)v20 - v21;
      *(_QWORD *)this = v21 + (v22 & (v22 >> 31));
      v23 = *((_DWORD *)this + 7);
      *((_DWORD *)this + 7) = v22;
      LODWORD(v21) = *((_DWORD *)this + 22);
      v24 = __OFSUB__((_DWORD)v21, 1);
      LODWORD(v21) = v21 - 1;
      *((_DWORD *)this + 22) = v21;
      if ((int)v21 < 0 != v24)
        return 0;
      result = google::protobuf::FileDescriptorProto::_InternalParse((uint64_t)v16, v20, this);
      if (!result)
        return result;
      ++*((_DWORD *)this + 22);
      if (*((_DWORD *)this + 20))
        return 0;
      v25 = *((_DWORD *)this + 7) + v23 - v22;
      *((_DWORD *)this + 7) = v25;
      v26 = *((_QWORD *)this + 1) + (v25 & (v25 >> 31));
      *(_QWORD *)this = v26;
      v29 = result;
      if (v26 <= (unint64_t)result || *(_BYTE *)result != 10)
        goto LABEL_34;
    }
    v14 = *(_DWORD *)(a1 + 24);
    v15 = *(_DWORD *)(a1 + 28);
    goto LABEL_21;
  }
  return result;
}

const google::protobuf::UnknownFieldSet *google::protobuf::FileDescriptorSet::_InternalSerialize(google::protobuf::FileDescriptorSet *this, unsigned __int8 *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  int v6;
  int i;
  google::protobuf::FileDescriptorProto *v8;
  unsigned int v9;
  unsigned __int8 *v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  uint64_t v14;

  v6 = *((_DWORD *)this + 6);
  if (v6)
  {
    for (i = 0; i != v6; ++i)
    {
      if (*(_QWORD *)a3 <= (unint64_t)a2)
        a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
      v8 = *(google::protobuf::FileDescriptorProto **)(*((_QWORD *)this + 4) + 8 * i + 8);
      *a2 = 10;
      v9 = *((_DWORD *)v8 + 5);
      if (v9 > 0x7F)
      {
        a2[1] = v9 | 0x80;
        v11 = v9 >> 7;
        if (v9 >> 14)
        {
          v10 = a2 + 3;
          do
          {
            *(v10 - 1) = v11 | 0x80;
            v12 = v11 >> 7;
            ++v10;
            v13 = v11 >> 14;
            v11 >>= 7;
          }
          while (v13);
          *(v10 - 1) = v12;
        }
        else
        {
          a2[2] = v11;
          v10 = a2 + 3;
        }
      }
      else
      {
        a2[1] = v9;
        v10 = a2 + 2;
      }
      a2 = (unsigned __int8 *)google::protobuf::FileDescriptorProto::_InternalSerialize(v8, v10, a3);
    }
  }
  v14 = *((_QWORD *)this + 1);
  if ((v14 & 1) != 0)
    return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v14 & 0xFFFFFFFFFFFFFFFELL) + 8), (const google::protobuf::UnknownFieldSet *)a2, a3, a4);
  else
    return (const google::protobuf::UnknownFieldSet *)a2;
}

const InternalMetadata *google::protobuf::FileDescriptorSet::ByteSizeLong(google::protobuf::FileDescriptorSet *this, uint64_t a2, uint64_t a3, CachedSize *a4)
{
  const InternalMetadata *v5;
  uint64_t v6;
  google::protobuf::FileDescriptorProto **v7;
  uint64_t v8;
  google::protobuf::FileDescriptorProto *v9;
  const InternalMetadata *v10;

  v5 = (const InternalMetadata *)*((int *)this + 6);
  v6 = *((_QWORD *)this + 4);
  if (v6)
    v7 = (google::protobuf::FileDescriptorProto **)(v6 + 8);
  else
    v7 = 0;
  if ((_DWORD)v5)
  {
    v8 = 8 * (_QWORD)v5;
    do
    {
      v9 = *v7++;
      v10 = google::protobuf::FileDescriptorProto::ByteSizeLong(v9, a2, a3, a4);
      v5 = (const InternalMetadata *)((char *)v5 + (_QWORD)v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6));
      v8 -= 8;
    }
    while (v8);
  }
  else
  {
    v5 = 0;
  }
  if ((*((_BYTE *)this + 8) & 1) != 0)
    return (const InternalMetadata *)google::protobuf::internal::ComputeUnknownFieldsSize((google::protobuf::FileDescriptorSet *)((char *)this + 8), v5, (_DWORD *)this + 10, a4);
  *((_DWORD *)this + 10) = (_DWORD)v5;
  return v5;
}

void google::protobuf::FileDescriptorSet::MergeFrom(google::protobuf::FileDescriptorSet *this, const google::protobuf::Message *a2, google::protobuf::Message *a3)
{
  uint64_t v5;
  int v6;
  unsigned int *v7;
  unsigned int *v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  google::protobuf::FileDescriptorProto **v13;
  google::protobuf::FileDescriptorProto **v14;
  google::protobuf::FileDescriptorProto *v15;
  google::protobuf::FileDescriptorProto *v16;
  google::protobuf::FileDescriptorProto *v17;
  google::protobuf::internal::ArenaImpl *v18;
  int v19;
  uint64_t v20;
  google::protobuf::FileDescriptorProto **v21;
  google::protobuf::FileDescriptorProto **v22;
  google::protobuf::FileDescriptorProto *v23;
  google::protobuf::FileDescriptorProto *v24;
  int v25;
  int *v26;
  uint64_t v27;

  if (*(void (***)(google::protobuf::FileDescriptorSet *__hidden))a2 == &off_1E1BF7CE8)
  {
    v5 = *((_QWORD *)a2 + 1);
    if ((v5 & 1) != 0)
      google::protobuf::internal::InternalMetadata::DoMergeFrom<google::protobuf::UnknownFieldSet>((uint64_t *)this + 1, (const google::protobuf::UnknownFieldSet *)((v5 & 0xFFFFFFFFFFFFFFFELL) + 8));
    v6 = *((_DWORD *)a2 + 6);
    if (v6)
    {
      v27 = *((_QWORD *)a2 + 4);
      v7 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::FileDescriptorSet *)((char *)this + 16), v6);
      v8 = v7;
      v9 = **((int **)this + 4);
      v10 = *((int *)this + 6);
      v11 = v9 - v10;
      if ((int)v9 - (int)v10 >= v6)
        v12 = v6;
      else
        v12 = v11;
      if ((int)v12 >= 1)
      {
        v13 = (google::protobuf::FileDescriptorProto **)(v27 + 8);
        v14 = (google::protobuf::FileDescriptorProto **)v7;
        do
        {
          v16 = *v13++;
          v15 = v16;
          v17 = *v14++;
          google::protobuf::internal::GenericTypeHandler<google::protobuf::FileDescriptorProto>::Merge(v15, v17);
          --v12;
        }
        while (v12);
      }
      if (v11 < v6)
      {
        v18 = (google::protobuf::internal::ArenaImpl *)*((_QWORD *)this + 2);
        v19 = v10 + v6 - v9;
        v20 = 8 * v9 - 8 * v10;
        v21 = (google::protobuf::FileDescriptorProto **)((char *)v8 + v20);
        v22 = (google::protobuf::FileDescriptorProto **)(v20 + v27 + 8);
        do
        {
          v23 = *v22++;
          v24 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::FileDescriptorProto>(v18);
          google::protobuf::internal::GenericTypeHandler<google::protobuf::FileDescriptorProto>::Merge(v23, v24);
          *v21++ = v24;
          --v19;
        }
        while (v19);
      }
      v25 = *((_DWORD *)this + 6) + v6;
      *((_DWORD *)this + 6) = v25;
      v26 = (int *)*((_QWORD *)this + 4);
      if (*v26 < v25)
        *v26 = v25;
    }
  }
  else
  {
    google::protobuf::internal::ReflectionOps::Merge(a2, this, a3);
  }
}

void google::protobuf::FileDescriptorSet::CopyFrom(google::protobuf::FileDescriptorSet *this, const google::protobuf::Message *a2)
{
  google::protobuf::Message *v4;

  if (a2 != this)
  {
    google::protobuf::FileDescriptorSet::Clear(this);
    google::protobuf::FileDescriptorSet::MergeFrom(this, a2, v4);
  }
}

BOOL google::protobuf::FileDescriptorSet::IsInitialized(google::protobuf::FileDescriptorSet *this)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  char IsInitialized;

  v2 = *((unsigned int *)this + 6);
  do
  {
    v3 = v2;
    if ((int)v2 < 1)
      break;
    v4 = v2 - 1;
    IsInitialized = google::protobuf::FileDescriptorProto::IsInitialized(*(google::protobuf::FileDescriptorProto **)(*((_QWORD *)this + 4) + 8 * v2));
    v2 = v4;
  }
  while ((IsInitialized & 1) != 0);
  return v3 < 1;
}

uint64_t google::protobuf::FileDescriptorSet::GetMetadata(google::protobuf::FileDescriptorSet *this)
{
  google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0);
  return *off_1EDF46FE8;
}

google::protobuf::FileDescriptorProto *google::protobuf::FileDescriptorProto::FileDescriptorProto(google::protobuf::FileDescriptorProto *this, Arena *a2)
{
  *(_QWORD *)this = &off_1E1BF7EF8;
  *((_QWORD *)this + 1) = a2;
  *((_QWORD *)this + 3) = a2;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 4) = 0;
  *((_QWORD *)this + 5) = 0;
  *((_QWORD *)this + 6) = a2;
  *((_QWORD *)this + 7) = 0;
  *((_QWORD *)this + 8) = 0;
  *((_QWORD *)this + 9) = a2;
  *((_QWORD *)this + 10) = 0;
  *((_QWORD *)this + 11) = 0;
  *((_QWORD *)this + 12) = a2;
  *((_QWORD *)this + 13) = 0;
  *((_QWORD *)this + 14) = 0;
  *((_QWORD *)this + 15) = a2;
  *((_QWORD *)this + 16) = 0;
  *((_QWORD *)this + 17) = 0;
  *((_QWORD *)this + 18) = 0;
  *((_QWORD *)this + 19) = a2;
  *((_QWORD *)this + 20) = 0;
  *((_QWORD *)this + 21) = a2;
  if (atomic_load(scc_info_FileDescriptorProto_google_2fprotobuf_2fdescriptor_2eproto))
    google::protobuf::internal::InitSCCImpl(scc_info_FileDescriptorProto_google_2fprotobuf_2fdescriptor_2eproto);
  *((_QWORD *)this + 22) = &google::protobuf::internal::fixed_address_empty_string;
  *((_QWORD *)this + 23) = &google::protobuf::internal::fixed_address_empty_string;
  *((_QWORD *)this + 25) = 0;
  *((_QWORD *)this + 26) = 0;
  *((_QWORD *)this + 24) = &google::protobuf::internal::fixed_address_empty_string;
  return this;
}

void sub_1888A3C44(_Unwind_Exception *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;

  if (*(int *)(v4 + 164) >= 1)
  {
    v8 = *(_QWORD *)(v4 + 168);
    v10 = *(_QWORD *)(v8 - 8);
    v9 = (void *)(v8 - 8);
    if (!v10)
      operator delete(v9);
  }
  if (*(int *)(v4 + 148) >= 1)
  {
    v11 = *(_QWORD *)(v4 + 152);
    v13 = *(_QWORD *)(v11 - 8);
    v12 = (void *)(v11 - 8);
    if (!v13)
      operator delete(v12);
  }
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::TypeHandler>(v6);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<google::protobuf::ServiceDescriptorProto>::TypeHandler>(v5);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto>::TypeHandler>(v3);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto>::TypeHandler>(v2);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>(v1);
  _Unwind_Resume(a1);
}

void google::protobuf::FileDescriptorProto::~FileDescriptorProto(google::protobuf::FileDescriptorProto *this)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;

  google::protobuf::FileDescriptorProto::SharedDtor(this);
  google::protobuf::internal::InternalMetadata::Delete<google::protobuf::UnknownFieldSet>((uint64_t *)this + 1);
  if (*((int *)this + 41) >= 1)
  {
    v2 = *((_QWORD *)this + 21);
    v4 = *(_QWORD *)(v2 - 8);
    v3 = (void *)(v2 - 8);
    if (!v4)
      operator delete(v3);
  }
  if (*((int *)this + 37) >= 1)
  {
    v5 = *((_QWORD *)this + 19);
    v7 = *(_QWORD *)(v5 - 8);
    v6 = (void *)(v5 - 8);
    if (!v7)
      operator delete(v6);
  }
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::TypeHandler>((_QWORD *)this + 15);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<google::protobuf::ServiceDescriptorProto>::TypeHandler>((_QWORD *)this + 12);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto>::TypeHandler>((_QWORD *)this + 9);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto>::TypeHandler>((_QWORD *)this + 6);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((_QWORD *)this + 3);
}

{
  google::protobuf::FileDescriptorProto::~FileDescriptorProto(this);
  JUMPOUT(0x18D76437CLL);
}

google::protobuf::SourceCodeInfo *google::protobuf::FileDescriptorProto::SharedDtor(google::protobuf::SourceCodeInfo *this)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  google::protobuf::FileOptions *v5;

  v1 = (uint64_t)this;
  v2 = *((_QWORD *)this + 22);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v2 + 23) < 0)
      operator delete(*(void **)v2);
    this = (google::protobuf::SourceCodeInfo *)MEMORY[0x18D76437C](v2, 0x1012C40EC159624);
  }
  v3 = *(_QWORD *)(v1 + 184);
  if ((uint64_t *)v3 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v3 + 23) < 0)
      operator delete(*(void **)v3);
    this = (google::protobuf::SourceCodeInfo *)MEMORY[0x18D76437C](v3, 0x1012C40EC159624);
  }
  v4 = *(_QWORD *)(v1 + 192);
  if ((uint64_t *)v4 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v4 + 23) < 0)
      operator delete(*(void **)v4);
    this = (google::protobuf::SourceCodeInfo *)MEMORY[0x18D76437C](v4, 0x1012C40EC159624);
  }
  if ((_UNKNOWN *)v1 != &google::protobuf::_FileDescriptorProto_default_instance_)
  {
    v5 = *(google::protobuf::FileOptions **)(v1 + 200);
    if (v5)
    {
      google::protobuf::FileOptions::~FileOptions(v5);
      MEMORY[0x18D76437C]();
    }
    this = *(google::protobuf::SourceCodeInfo **)(v1 + 208);
    if (this)
    {
      google::protobuf::SourceCodeInfo::~SourceCodeInfo(this);
      JUMPOUT(0x18D76437CLL);
    }
  }
  return this;
}

uint64_t google::protobuf::FileDescriptorProto::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 20) = a2;
  return this;
}

google::protobuf::UnknownFieldSet *google::protobuf::FileDescriptorProto::Clear(google::protobuf::FileDescriptorProto *this)
{
  google::protobuf::UnknownFieldSet *result;
  uint64_t v3;
  google::protobuf::DescriptorProto **v4;
  google::protobuf::DescriptorProto *v5;
  uint64_t v6;
  google::protobuf::EnumDescriptorProto **v7;
  google::protobuf::EnumDescriptorProto *v8;
  uint64_t v9;
  google::protobuf::UnknownFieldSet **v10;
  google::protobuf::UnknownFieldSet *v11;
  uint64_t v12;
  google::protobuf::UnknownFieldSet **v13;
  google::protobuf::UnknownFieldSet *v14;
  int v15;
  char *v16;
  char v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;

  result = (google::protobuf::UnknownFieldSet *)google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 24);
  v3 = *((unsigned int *)this + 14);
  if ((int)v3 >= 1)
  {
    v4 = (google::protobuf::DescriptorProto **)(*((_QWORD *)this + 8) + 8);
    do
    {
      v5 = *v4++;
      result = google::protobuf::DescriptorProto::Clear(v5);
      --v3;
    }
    while (v3);
    *((_DWORD *)this + 14) = 0;
  }
  v6 = *((unsigned int *)this + 20);
  if ((int)v6 >= 1)
  {
    v7 = (google::protobuf::EnumDescriptorProto **)(*((_QWORD *)this + 11) + 8);
    do
    {
      v8 = *v7++;
      result = google::protobuf::EnumDescriptorProto::Clear(v8);
      --v6;
    }
    while (v6);
    *((_DWORD *)this + 20) = 0;
  }
  v9 = *((unsigned int *)this + 26);
  if ((int)v9 >= 1)
  {
    v10 = (google::protobuf::UnknownFieldSet **)(*((_QWORD *)this + 14) + 8);
    do
    {
      v11 = *v10++;
      result = google::protobuf::ServiceDescriptorProto::Clear(v11);
      --v9;
    }
    while (v9);
    *((_DWORD *)this + 26) = 0;
  }
  v12 = *((unsigned int *)this + 32);
  if ((int)v12 >= 1)
  {
    v13 = (google::protobuf::UnknownFieldSet **)(*((_QWORD *)this + 17) + 8);
    do
    {
      v14 = *v13++;
      result = google::protobuf::FieldDescriptorProto::Clear(v14);
      --v12;
    }
    while (v12);
    *((_DWORD *)this + 32) = 0;
  }
  *((_DWORD *)this + 36) = 0;
  *((_DWORD *)this + 40) = 0;
  v15 = *((_DWORD *)this + 4);
  if ((v15 & 0x1F) == 0)
    goto LABEL_24;
  if ((v15 & 1) == 0)
  {
    if ((v15 & 2) == 0)
      goto LABEL_20;
LABEL_30:
    v19 = *((_QWORD *)this + 23) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v19 + 23) < 0)
    {
      **(_BYTE **)v19 = 0;
      *(_QWORD *)(v19 + 8) = 0;
      if ((v15 & 4) != 0)
        goto LABEL_34;
    }
    else
    {
      *(_BYTE *)v19 = 0;
      *(_BYTE *)(v19 + 23) = 0;
      if ((v15 & 4) != 0)
        goto LABEL_34;
    }
LABEL_21:
    if ((v15 & 8) == 0)
      goto LABEL_22;
    goto LABEL_38;
  }
  v18 = *((_QWORD *)this + 22) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v18 + 23) < 0)
  {
    **(_BYTE **)v18 = 0;
    *(_QWORD *)(v18 + 8) = 0;
    if ((v15 & 2) != 0)
      goto LABEL_30;
  }
  else
  {
    *(_BYTE *)v18 = 0;
    *(_BYTE *)(v18 + 23) = 0;
    if ((v15 & 2) != 0)
      goto LABEL_30;
  }
LABEL_20:
  if ((v15 & 4) == 0)
    goto LABEL_21;
LABEL_34:
  v20 = *((_QWORD *)this + 24) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v20 + 23) < 0)
  {
    **(_BYTE **)v20 = 0;
    *(_QWORD *)(v20 + 8) = 0;
    if ((v15 & 8) != 0)
      goto LABEL_38;
LABEL_22:
    if ((v15 & 0x10) == 0)
      goto LABEL_24;
    goto LABEL_23;
  }
  *(_BYTE *)v20 = 0;
  *(_BYTE *)(v20 + 23) = 0;
  if ((v15 & 8) == 0)
    goto LABEL_22;
LABEL_38:
  result = google::protobuf::FileOptions::Clear(*((uint64_t ***)this + 25));
  if ((v15 & 0x10) != 0)
LABEL_23:
    result = google::protobuf::SourceCodeInfo::Clear(*((google::protobuf::UnknownFieldSet **)this + 26));
LABEL_24:
  v17 = *((_BYTE *)this + 8);
  v16 = (char *)this + 8;
  *((_DWORD *)v16 + 2) = 0;
  if ((v17 & 1) != 0)
    return google::protobuf::internal::InternalMetadata::DoClear<google::protobuf::UnknownFieldSet>((uint64_t *)v16);
  return result;
}

google::protobuf::UnknownFieldSet *google::protobuf::FileOptions::Clear(uint64_t **this)
{
  google::protobuf::UnknownFieldSet *result;
  uint64_t v3;
  google::protobuf::UnknownFieldSet **v4;
  google::protobuf::UnknownFieldSet *v5;
  int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  char *v17;
  char v18;

  result = (google::protobuf::UnknownFieldSet *)google::protobuf::internal::ExtensionSet::Clear(this + 2);
  v3 = *((unsigned int *)this + 14);
  if ((int)v3 >= 1)
  {
    v4 = (google::protobuf::UnknownFieldSet **)(this[8] + 1);
    do
    {
      v5 = *v4++;
      result = google::protobuf::UninterpretedOption::Clear(v5);
      --v3;
    }
    while (v3);
    *((_DWORD *)this + 14) = 0;
  }
  v6 = *((_DWORD *)this + 10);
  if ((_BYTE)v6)
  {
    if ((v6 & 1) == 0)
    {
      if ((v6 & 2) == 0)
        goto LABEL_8;
LABEL_19:
      v8 = (unint64_t)this[10] & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v8 + 23) < 0)
      {
        **(_BYTE **)v8 = 0;
        *(_QWORD *)(v8 + 8) = 0;
        if ((v6 & 4) != 0)
          goto LABEL_23;
      }
      else
      {
        *(_BYTE *)v8 = 0;
        *(_BYTE *)(v8 + 23) = 0;
        if ((v6 & 4) != 0)
          goto LABEL_23;
      }
LABEL_9:
      if ((v6 & 8) == 0)
        goto LABEL_10;
LABEL_27:
      v10 = (unint64_t)this[12] & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v10 + 23) < 0)
      {
        **(_BYTE **)v10 = 0;
        *(_QWORD *)(v10 + 8) = 0;
        if ((v6 & 0x10) != 0)
          goto LABEL_31;
      }
      else
      {
        *(_BYTE *)v10 = 0;
        *(_BYTE *)(v10 + 23) = 0;
        if ((v6 & 0x10) != 0)
          goto LABEL_31;
      }
LABEL_11:
      if ((v6 & 0x20) == 0)
        goto LABEL_12;
LABEL_35:
      v12 = (unint64_t)this[14] & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v12 + 23) < 0)
      {
        **(_BYTE **)v12 = 0;
        *(_QWORD *)(v12 + 8) = 0;
        if ((v6 & 0x40) != 0)
          goto LABEL_39;
      }
      else
      {
        *(_BYTE *)v12 = 0;
        *(_BYTE *)(v12 + 23) = 0;
        if ((v6 & 0x40) != 0)
          goto LABEL_39;
      }
LABEL_13:
      if ((v6 & 0x80) == 0)
        goto LABEL_46;
LABEL_43:
      v14 = (unint64_t)this[16] & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v14 + 23) < 0)
      {
        **(_BYTE **)v14 = 0;
        *(_QWORD *)(v14 + 8) = 0;
      }
      else
      {
        *(_BYTE *)v14 = 0;
        *(_BYTE *)(v14 + 23) = 0;
      }
      goto LABEL_46;
    }
    v7 = (unint64_t)this[9] & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v7 + 23) < 0)
    {
      **(_BYTE **)v7 = 0;
      *(_QWORD *)(v7 + 8) = 0;
      if ((v6 & 2) != 0)
        goto LABEL_19;
    }
    else
    {
      *(_BYTE *)v7 = 0;
      *(_BYTE *)(v7 + 23) = 0;
      if ((v6 & 2) != 0)
        goto LABEL_19;
    }
LABEL_8:
    if ((v6 & 4) == 0)
      goto LABEL_9;
LABEL_23:
    v9 = (unint64_t)this[11] & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v9 + 23) < 0)
    {
      **(_BYTE **)v9 = 0;
      *(_QWORD *)(v9 + 8) = 0;
      if ((v6 & 8) != 0)
        goto LABEL_27;
    }
    else
    {
      *(_BYTE *)v9 = 0;
      *(_BYTE *)(v9 + 23) = 0;
      if ((v6 & 8) != 0)
        goto LABEL_27;
    }
LABEL_10:
    if ((v6 & 0x10) == 0)
      goto LABEL_11;
LABEL_31:
    v11 = (unint64_t)this[13] & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v11 + 23) < 0)
    {
      **(_BYTE **)v11 = 0;
      *(_QWORD *)(v11 + 8) = 0;
      if ((v6 & 0x20) != 0)
        goto LABEL_35;
    }
    else
    {
      *(_BYTE *)v11 = 0;
      *(_BYTE *)(v11 + 23) = 0;
      if ((v6 & 0x20) != 0)
        goto LABEL_35;
    }
LABEL_12:
    if ((v6 & 0x40) == 0)
      goto LABEL_13;
LABEL_39:
    v13 = (unint64_t)this[15] & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v13 + 23) < 0)
    {
      **(_BYTE **)v13 = 0;
      *(_QWORD *)(v13 + 8) = 0;
      if ((v6 & 0x80) == 0)
        goto LABEL_46;
    }
    else
    {
      *(_BYTE *)v13 = 0;
      *(_BYTE *)(v13 + 23) = 0;
      if ((v6 & 0x80) == 0)
        goto LABEL_46;
    }
    goto LABEL_43;
  }
LABEL_46:
  if ((v6 & 0x300) == 0)
    goto LABEL_56;
  if ((v6 & 0x100) != 0)
  {
    v15 = (unint64_t)this[17] & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v15 + 23) < 0)
    {
      **(_BYTE **)v15 = 0;
      *(_QWORD *)(v15 + 8) = 0;
      if ((v6 & 0x200) == 0)
        goto LABEL_56;
      goto LABEL_51;
    }
    *(_BYTE *)v15 = 0;
    *(_BYTE *)(v15 + 23) = 0;
  }
  if ((v6 & 0x200) == 0)
    goto LABEL_56;
LABEL_51:
  v16 = (unint64_t)this[18] & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v16 + 23) < 0)
  {
    **(_BYTE **)v16 = 0;
    *(_QWORD *)(v16 + 8) = 0;
  }
  else
  {
    *(_BYTE *)v16 = 0;
    *(_BYTE *)(v16 + 23) = 0;
  }
LABEL_56:
  if ((v6 & 0xFC00) != 0)
  {
    *((_WORD *)this + 78) = 0;
    *((_DWORD *)this + 38) = 0;
  }
  if ((v6 & 0xF0000) != 0)
  {
    *((_WORD *)this + 79) = 0;
    *((_DWORD *)this + 40) = 1;
    *((_BYTE *)this + 164) = 1;
  }
  v18 = *((_BYTE *)this + 8);
  v17 = (char *)(this + 1);
  *((_DWORD *)v17 + 8) = 0;
  if ((v18 & 1) != 0)
    return google::protobuf::internal::InternalMetadata::DoClear<google::protobuf::UnknownFieldSet>((uint64_t *)v17);
  return result;
}

google::protobuf::UnknownFieldSet *google::protobuf::SourceCodeInfo::Clear(google::protobuf::UnknownFieldSet *this)
{
  uint64_t v1;
  uint64_t v2;
  google::protobuf::SourceCodeInfo_Location **v3;
  google::protobuf::SourceCodeInfo_Location *v4;
  uint64_t *v5;
  char v6;

  v1 = (uint64_t)this;
  v2 = *((unsigned int *)this + 6);
  if ((int)v2 >= 1)
  {
    v3 = (google::protobuf::SourceCodeInfo_Location **)(*((_QWORD *)this + 4) + 8);
    do
    {
      v4 = *v3++;
      this = google::protobuf::SourceCodeInfo_Location::Clear(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 24) = 0;
  }
  v6 = *(_BYTE *)(v1 + 8);
  v5 = (uint64_t *)(v1 + 8);
  if ((v6 & 1) != 0)
    return google::protobuf::internal::InternalMetadata::DoClear<google::protobuf::UnknownFieldSet>(v5);
  return this;
}

google::protobuf::internal *google::protobuf::FileDescriptorProto::_InternalParse(uint64_t a1, google::protobuf::internal *a2, google::protobuf::internal::EpsCopyInputStream *this)
{
  char v5;
  google::protobuf::internal *result;
  uint64_t *v7;
  google::protobuf::internal *v8;
  unsigned int v9;
  uint64_t v10;
  google::protobuf::internal::ArenaImpl *v11;
  std::string *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  std::string::value_type *v16;
  int *v17;
  int v18;
  int v19;
  std::string *AlignedAndAddCleanup;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  google::protobuf::internal *v24;
  int *v25;
  int v26;
  int v27;
  google::protobuf::DescriptorProto *v28;
  uint64_t v29;
  uint64_t v30;
  google::protobuf::internal *v31;
  int *v32;
  int v33;
  int v34;
  google::protobuf::EnumDescriptorProto *v35;
  uint64_t v36;
  uint64_t v37;
  google::protobuf::internal *v38;
  int *v39;
  int v40;
  int v41;
  google::protobuf::ServiceDescriptorProto *v42;
  uint64_t v43;
  uint64_t v44;
  const char *v45;
  google::protobuf::internal *v46;
  uint64_t v47;
  int v48;
  int v49;
  BOOL v50;
  int v51;
  unint64_t v52;
  google::protobuf::internal *v53;
  int *v54;
  int v55;
  int v56;
  google::protobuf::FieldDescriptorProto *v57;
  uint64_t v58;
  uint64_t v59;
  google::protobuf::FileOptions *v60;
  google::protobuf::internal::ArenaImpl *v61;
  const char *v62;
  google::protobuf::internal *v63;
  google::protobuf::SourceCodeInfo *v64;
  google::protobuf::internal::ArenaImpl *v65;
  const char *v66;
  google::protobuf::internal *v67;
  unsigned __int8 *v68;
  int v69;
  int v70;
  uint64_t v71;
  unsigned __int8 *v72;
  uint64_t v73;
  uint64_t v74;
  int v75;
  unsigned __int8 *v76;
  int v77;
  int v78;
  uint64_t v79;
  unsigned __int8 *v80;
  uint64_t v81;
  uint64_t v82;
  int v83;
  uint64_t v84;
  uint64_t v85;
  int v86;
  int v87;
  uint64_t v88;
  int v89;
  google::protobuf::internal::EpsCopyInputStream *v90;
  google::protobuf::internal *v91;
  unsigned int *v92;
  BOOL v93;
  google::protobuf::UnknownFieldSet *v94;
  int v95;
  std::string **v96;
  std::string **v97;
  std::string **v98;
  uint64_t *v99;
  google::protobuf::internal *v100;
  google::protobuf::UnknownFieldSet *v101;

  v100 = a2;
  v5 = google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(this, (const char **)&v100, *((_DWORD *)this + 23));
  result = v100;
  if ((v5 & 1) != 0)
    return result;
  v98 = (std::string **)(a1 + 192);
  v99 = (uint64_t *)(a1 + 8);
  v7 = (uint64_t *)(a1 + 24);
  v96 = (std::string **)(a1 + 176);
  v97 = (std::string **)(a1 + 184);
  while (2)
  {
    v8 = (google::protobuf::internal *)((char *)result + 1);
    v9 = *(unsigned __int8 *)result;
    if (*(char *)result < 0)
    {
      v9 = v9 + (*(unsigned __int8 *)v8 << 7) - 128;
      if (*(char *)v8 < 0)
      {
        v8 = (google::protobuf::internal *)((char *)result + 3);
        v14 = -21;
        while (1)
        {
          v9 += (*((unsigned __int8 *)v8 - 1) - 1) << (v14 + 35);
          if ((*((char *)v8 - 1) & 0x80000000) == 0)
            break;
          result = 0;
          v8 = (google::protobuf::internal *)((char *)v8 + 1);
          v14 += 7;
          if (!v14)
            return result;
        }
      }
      else
      {
        v8 = (google::protobuf::internal *)((char *)result + 2);
      }
    }
    v100 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10)
          goto LABEL_180;
        *(_DWORD *)(a1 + 16) |= 1u;
        v10 = *(_QWORD *)(a1 + 8);
        v11 = (google::protobuf::internal::ArenaImpl *)(v10 & 0xFFFFFFFFFFFFFFFELL);
        if ((v10 & 1) != 0)
          v11 = *(google::protobuf::internal::ArenaImpl **)v11;
        v12 = *v96;
        if (*v96 != (std::string *)&google::protobuf::internal::fixed_address_empty_string)
          goto LABEL_163;
        v13 = (_QWORD *)(a1 + 176);
        goto LABEL_162;
      case 2u:
        if (v9 != 18)
          goto LABEL_180;
        *(_DWORD *)(a1 + 16) |= 2u;
        v15 = *(_QWORD *)(a1 + 8);
        v11 = (google::protobuf::internal::ArenaImpl *)(v15 & 0xFFFFFFFFFFFFFFFELL);
        if ((v15 & 1) != 0)
          v11 = *(google::protobuf::internal::ArenaImpl **)v11;
        v12 = *v97;
        if (*v97 != (std::string *)&google::protobuf::internal::fixed_address_empty_string)
          goto LABEL_163;
        v13 = (_QWORD *)(a1 + 184);
        goto LABEL_162;
      case 3u:
        if (v9 != 26)
          goto LABEL_180;
        result = (google::protobuf::internal *)((char *)v8 - 1);
        while (1)
        {
          v16 = (char *)result + 1;
          v100 = (google::protobuf::internal *)((char *)result + 1);
          v17 = *(int **)(a1 + 40);
          if (!v17)
            break;
          v18 = *(_DWORD *)(a1 + 32);
          v19 = *v17;
          if (v18 >= *v17)
          {
            if (v19 == *(_DWORD *)(a1 + 36))
            {
LABEL_28:
              if (v18 <= v19)
              {
                google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 24), v19 - v18 + 1);
                v17 = *(int **)(a1 + 40);
              }
              v19 = *v17;
            }
            *v17 = v19 + 1;
            v21 = *v7;
            if (*v7)
            {
              if ((*(_BYTE *)(v21 + 24) & 1) != 0)
              AlignedAndAddCleanup = (std::string *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((google::protobuf::internal::ArenaImpl *)v21, 0x18uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<std::string>);
            }
            else
            {
              AlignedAndAddCleanup = (std::string *)operator new();
            }
            AlignedAndAddCleanup->__r_.__value_.__r.__words[0] = 0;
            AlignedAndAddCleanup->__r_.__value_.__l.__size_ = 0;
            AlignedAndAddCleanup->__r_.__value_.__r.__words[2] = 0;
            v22 = *(_QWORD *)(a1 + 40);
            v23 = *(int *)(a1 + 32);
            *(_DWORD *)(a1 + 32) = v23 + 1;
            *(_QWORD *)(v22 + 8 * v23 + 8) = AlignedAndAddCleanup;
            v16 = (std::string::value_type *)v100;
            goto LABEL_37;
          }
          *(_DWORD *)(a1 + 32) = v18 + 1;
          AlignedAndAddCleanup = *(std::string **)&v17[2 * v18 + 2];
LABEL_37:
          result = (google::protobuf::internal *)google::protobuf::internal::InlineGreedyStringParser(AlignedAndAddCleanup, v16, (uint64_t)this);
          v100 = result;
          if (!result)
            return result;
          if (*(_QWORD *)this <= (unint64_t)result || *(_BYTE *)result != 26)
            goto LABEL_188;
        }
        v18 = *(_DWORD *)(a1 + 32);
        v19 = *(_DWORD *)(a1 + 36);
        goto LABEL_28;
      case 4u:
        if (v9 != 34)
          goto LABEL_180;
        result = (google::protobuf::internal *)((char *)v8 - 1);
        while (1)
        {
          v24 = (google::protobuf::internal *)((char *)result + 1);
          v100 = (google::protobuf::internal *)((char *)result + 1);
          v25 = *(int **)(a1 + 64);
          if (!v25)
            break;
          v26 = *(_DWORD *)(a1 + 56);
          v27 = *v25;
          if (v26 >= *v25)
          {
            if (v27 == *(_DWORD *)(a1 + 60))
            {
LABEL_48:
              if (v26 <= v27)
              {
                google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 48), v27 - v26 + 1);
                v25 = *(int **)(a1 + 64);
              }
              v27 = *v25;
            }
            *v25 = v27 + 1;
            v28 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::DescriptorProto>(*(google::protobuf::internal::ArenaImpl **)(a1 + 48));
            v29 = *(_QWORD *)(a1 + 64);
            v30 = *(int *)(a1 + 56);
            *(_DWORD *)(a1 + 56) = v30 + 1;
            *(_QWORD *)(v29 + 8 * v30 + 8) = v28;
            v24 = v100;
            goto LABEL_52;
          }
          *(_DWORD *)(a1 + 56) = v26 + 1;
          v28 = *(google::protobuf::DescriptorProto **)&v25[2 * v26 + 2];
LABEL_52:
          result = google::protobuf::internal::ParseContext::ParseMessage<google::protobuf::DescriptorProto>((uint64_t)this, (uint64_t)v28, v24);
          v100 = result;
          if (!result)
            return result;
          if (*(_QWORD *)this <= (unint64_t)result || *(_BYTE *)result != 34)
            goto LABEL_188;
        }
        v26 = *(_DWORD *)(a1 + 56);
        v27 = *(_DWORD *)(a1 + 60);
        goto LABEL_48;
      case 5u:
        if (v9 != 42)
          goto LABEL_180;
        result = (google::protobuf::internal *)((char *)v8 - 1);
        while (1)
        {
          v31 = (google::protobuf::internal *)((char *)result + 1);
          v100 = (google::protobuf::internal *)((char *)result + 1);
          v32 = *(int **)(a1 + 88);
          if (!v32)
            break;
          v33 = *(_DWORD *)(a1 + 80);
          v34 = *v32;
          if (v33 >= *v32)
          {
            if (v34 == *(_DWORD *)(a1 + 84))
            {
LABEL_63:
              if (v33 <= v34)
              {
                google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 72), v34 - v33 + 1);
                v32 = *(int **)(a1 + 88);
              }
              v34 = *v32;
            }
            *v32 = v34 + 1;
            v35 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::EnumDescriptorProto>(*(google::protobuf::internal::ArenaImpl **)(a1 + 72));
            v36 = *(_QWORD *)(a1 + 88);
            v37 = *(int *)(a1 + 80);
            *(_DWORD *)(a1 + 80) = v37 + 1;
            *(_QWORD *)(v36 + 8 * v37 + 8) = v35;
            v31 = v100;
            goto LABEL_67;
          }
          *(_DWORD *)(a1 + 80) = v33 + 1;
          v35 = *(google::protobuf::EnumDescriptorProto **)&v32[2 * v33 + 2];
LABEL_67:
          result = google::protobuf::internal::ParseContext::ParseMessage<google::protobuf::EnumDescriptorProto>(this, (uint64_t)v35, v31);
          v100 = result;
          if (!result)
            return result;
          if (*(_QWORD *)this <= (unint64_t)result || *(_BYTE *)result != 42)
            goto LABEL_188;
        }
        v33 = *(_DWORD *)(a1 + 80);
        v34 = *(_DWORD *)(a1 + 84);
        goto LABEL_63;
      case 6u:
        if (v9 != 50)
          goto LABEL_180;
        result = (google::protobuf::internal *)((char *)v8 - 1);
        while (2)
        {
          v38 = (google::protobuf::internal *)((char *)result + 1);
          v100 = v38;
          v39 = *(int **)(a1 + 112);
          if (v39)
          {
            v40 = *(_DWORD *)(a1 + 104);
            v41 = *v39;
            if (v40 < *v39)
            {
              *(_DWORD *)(a1 + 104) = v40 + 1;
              v42 = *(google::protobuf::ServiceDescriptorProto **)&v39[2 * v40 + 2];
              goto LABEL_82;
            }
            if (v41 != *(_DWORD *)(a1 + 108))
            {
LABEL_81:
              *v39 = v41 + 1;
              v42 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::ServiceDescriptorProto>(*(google::protobuf::internal::ArenaImpl **)(a1 + 96));
              v43 = *(_QWORD *)(a1 + 112);
              v44 = *(int *)(a1 + 104);
              *(_DWORD *)(a1 + 104) = v44 + 1;
              *(_QWORD *)(v43 + 8 * v44 + 8) = v42;
              v38 = v100;
LABEL_82:
              v45 = (const char *)*(unsigned __int8 *)v38;
              if (*(char *)v38 < 0)
              {
                result = (google::protobuf::internal *)google::protobuf::internal::ReadSizeFallback(v38, v45);
                if (!result)
                  return result;
                v46 = result;
              }
              else
              {
                v46 = (google::protobuf::internal *)((char *)v38 + 1);
              }
              v47 = *((_QWORD *)this + 1);
              v48 = (_DWORD)v45 + (_DWORD)v46 - v47;
              *(_QWORD *)this = v47 + (v48 & (v48 >> 31));
              v49 = *((_DWORD *)this + 7);
              *((_DWORD *)this + 7) = v48;
              LODWORD(v47) = *((_DWORD *)this + 22);
              v50 = __OFSUB__((_DWORD)v47, 1);
              LODWORD(v47) = v47 - 1;
              *((_DWORD *)this + 22) = v47;
              if ((int)v47 < 0 == v50)
              {
                result = google::protobuf::ServiceDescriptorProto::_InternalParse((uint64_t)v42, v46, this);
                if (!result)
                  return result;
                ++*((_DWORD *)this + 22);
                if (!*((_DWORD *)this + 20))
                {
                  v51 = *((_DWORD *)this + 7) + v49 - v48;
                  *((_DWORD *)this + 7) = v51;
                  v52 = *((_QWORD *)this + 1) + (v51 & (v51 >> 31));
                  *(_QWORD *)this = v52;
                  v100 = result;
                  if (v52 <= (unint64_t)result || *(_BYTE *)result != 50)
                    goto LABEL_188;
                  continue;
                }
              }
              return 0;
            }
          }
          else
          {
            v40 = *(_DWORD *)(a1 + 104);
            v41 = *(_DWORD *)(a1 + 108);
          }
          break;
        }
        if (v40 <= v41)
        {
          google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 96), v41 - v40 + 1);
          v39 = *(int **)(a1 + 112);
        }
        v41 = *v39;
        goto LABEL_81;
      case 7u:
        if (v9 != 58)
          goto LABEL_180;
        result = (google::protobuf::internal *)((char *)v8 - 1);
        while (1)
        {
          v53 = (google::protobuf::internal *)((char *)result + 1);
          v100 = (google::protobuf::internal *)((char *)result + 1);
          v54 = *(int **)(a1 + 136);
          if (!v54)
            break;
          v55 = *(_DWORD *)(a1 + 128);
          v56 = *v54;
          if (v55 >= *v54)
          {
            if (v56 == *(_DWORD *)(a1 + 132))
            {
LABEL_99:
              if (v55 <= v56)
              {
                google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 120), v56 - v55 + 1);
                v54 = *(int **)(a1 + 136);
              }
              v56 = *v54;
            }
            *v54 = v56 + 1;
            v57 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::FieldDescriptorProto>(*(google::protobuf::internal::ArenaImpl **)(a1 + 120));
            v58 = *(_QWORD *)(a1 + 136);
            v59 = *(int *)(a1 + 128);
            *(_DWORD *)(a1 + 128) = v59 + 1;
            *(_QWORD *)(v58 + 8 * v59 + 8) = v57;
            v53 = v100;
            goto LABEL_103;
          }
          *(_DWORD *)(a1 + 128) = v55 + 1;
          v57 = *(google::protobuf::FieldDescriptorProto **)&v54[2 * v55 + 2];
LABEL_103:
          result = google::protobuf::internal::ParseContext::ParseMessage<google::protobuf::FieldDescriptorProto>((int32x2_t *)this, (uint64_t)v57, v53);
          v100 = result;
          if (!result)
            return result;
          if (*(_QWORD *)this <= (unint64_t)result || *(_BYTE *)result != 58)
            goto LABEL_188;
        }
        v55 = *(_DWORD *)(a1 + 128);
        v56 = *(_DWORD *)(a1 + 132);
        goto LABEL_99;
      case 8u:
        if (v9 != 66)
          goto LABEL_180;
        *(_DWORD *)(a1 + 16) |= 8u;
        v60 = *(google::protobuf::FileOptions **)(a1 + 200);
        if (!v60)
        {
          v61 = (google::protobuf::internal::ArenaImpl *)(*v99 & 0xFFFFFFFFFFFFFFFELL);
          if ((*v99 & 1) != 0)
            v61 = *(google::protobuf::internal::ArenaImpl **)v61;
          v60 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::FileOptions>(v61);
          *(_QWORD *)(a1 + 200) = v60;
          v8 = v100;
        }
        v62 = (const char *)*(unsigned __int8 *)v8;
        if (*(char *)v8 < 0)
        {
          result = (google::protobuf::internal *)google::protobuf::internal::ReadSizeFallback(v8, v62);
          if (!result)
            return result;
          v63 = result;
        }
        else
        {
          v63 = (google::protobuf::internal *)((char *)v8 + 1);
        }
        v85 = *((_QWORD *)this + 1);
        v86 = (_DWORD)v62 + (_DWORD)v63 - v85;
        *(_QWORD *)this = v85 + (v86 & (v86 >> 31));
        v87 = *((_DWORD *)this + 7);
        *((_DWORD *)this + 7) = v86;
        LODWORD(v85) = *((_DWORD *)this + 22);
        v50 = __OFSUB__((_DWORD)v85, 1);
        LODWORD(v85) = v85 - 1;
        *((_DWORD *)this + 22) = v85;
        if ((int)v85 < 0 != v50)
          return 0;
        result = google::protobuf::FileOptions::_InternalParse((uint64_t)v60, v63, this);
        if (!result)
          return result;
        goto LABEL_173;
      case 9u:
        if (v9 != 74)
          goto LABEL_180;
        *(_DWORD *)(a1 + 16) |= 0x10u;
        v64 = *(google::protobuf::SourceCodeInfo **)(a1 + 208);
        if (!v64)
        {
          v65 = (google::protobuf::internal::ArenaImpl *)(*v99 & 0xFFFFFFFFFFFFFFFELL);
          if ((*v99 & 1) != 0)
            v65 = *(google::protobuf::internal::ArenaImpl **)v65;
          v64 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::SourceCodeInfo>(v65);
          *(_QWORD *)(a1 + 208) = v64;
          v8 = v100;
        }
        v66 = (const char *)*(unsigned __int8 *)v8;
        if (*(char *)v8 < 0)
        {
          result = (google::protobuf::internal *)google::protobuf::internal::ReadSizeFallback(v8, v66);
          if (!result)
            return result;
          v67 = result;
        }
        else
        {
          v67 = (google::protobuf::internal *)((char *)v8 + 1);
        }
        v88 = *((_QWORD *)this + 1);
        v86 = (_DWORD)v66 + (_DWORD)v67 - v88;
        *(_QWORD *)this = v88 + (v86 & (v86 >> 31));
        v87 = *((_DWORD *)this + 7);
        *((_DWORD *)this + 7) = v86;
        LODWORD(v88) = *((_DWORD *)this + 22);
        v50 = __OFSUB__((_DWORD)v88, 1);
        LODWORD(v88) = v88 - 1;
        *((_DWORD *)this + 22) = v88;
        if ((int)v88 < 0 != v50)
          return 0;
        result = google::protobuf::SourceCodeInfo::_InternalParse((uint64_t)v64, v67, this);
        if (!result)
          return result;
LABEL_173:
        ++*((_DWORD *)this + 22);
        if (*((_DWORD *)this + 20))
          return 0;
        v89 = *((_DWORD *)this + 7) + v87 - v86;
        *((_DWORD *)this + 7) = v89;
        *(_QWORD *)this = *((_QWORD *)this + 1) + (v89 & (v89 >> 31));
        v100 = result;
        goto LABEL_188;
      case 0xAu:
        if (v9 == 80)
        {
          v68 = (unsigned __int8 *)v8 - 1;
          while (1)
          {
            v100 = (google::protobuf::internal *)(v68 + 1);
            v69 = v68[1];
            if ((char)v68[1] < 0)
            {
              v70 = v68[2];
              v71 = (v69 + (v70 << 7) - 128);
              if ((v70 & 0x80) != 0)
              {
                v72 = v68 + 4;
                v73 = 14;
                while (1)
                {
                  v71 += (*(v72 - 1) - 1) << v73;
                  if (((char)*(v72 - 1) & 0x80000000) == 0)
                    break;
                  v69 = 0;
                  v68 = 0;
                  ++v72;
                  v73 += 7;
                  if (v73 == 70)
                    goto LABEL_132;
                }
                v69 = v71;
                v68 = v72;
              }
              else
              {
                v68 += 3;
                v69 = v69 + (v70 << 7) - 128;
              }
            }
            else
            {
              v68 += 2;
            }
LABEL_132:
            v100 = (google::protobuf::internal *)v68;
            v74 = *(unsigned int *)(a1 + 144);
            if ((_DWORD)v74 == *(_DWORD *)(a1 + 148))
            {
              v75 = v74 + 1;
              google::protobuf::RepeatedField<int>::Reserve((unsigned int *)(a1 + 144), v74 + 1);
              *(_DWORD *)(*(_QWORD *)(a1 + 152) + 4 * v74) = v69;
              v68 = (unsigned __int8 *)v100;
            }
            else
            {
              *(_DWORD *)(*(_QWORD *)(a1 + 152) + 4 * v74) = v69;
              v75 = v74 + 1;
            }
            *(_DWORD *)(a1 + 144) = v75;
            if (!v68)
              return 0;
            if (*(_QWORD *)this <= (unint64_t)v68 || *v68 != 80)
              goto LABEL_188;
          }
        }
        if (v9 != 82)
          goto LABEL_180;
        v90 = this;
        v91 = v8;
        v92 = (unsigned int *)(a1 + 144);
        goto LABEL_179;
      case 0xBu:
        if (v9 != 88)
        {
          if (v9 == 90)
          {
            v90 = this;
            v91 = v8;
            v92 = (unsigned int *)(a1 + 160);
LABEL_179:
            result = (google::protobuf::internal *)google::protobuf::internal::EpsCopyInputStream::ReadPackedVarint<char const* google::protobuf::internal::VarintParser<int,false>(void *,char const*,google::protobuf::internal::ParseContext *)::{lambda(unsigned long long)#1}>((uint64_t)v90, v91, v92);
          }
          else
          {
LABEL_180:
            if (v9)
              v93 = (v9 & 7) == 4;
            else
              v93 = 1;
            if (v93)
            {
              *((_DWORD *)this + 20) = v9 - 1;
              return v8;
            }
            if ((*v99 & 1) != 0)
            {
              v94 = (google::protobuf::UnknownFieldSet *)((*v99 & 0xFFFFFFFFFFFFFFFELL) + 8);
            }
            else
            {
              v94 = (google::protobuf::UnknownFieldSet *)google::protobuf::internal::InternalMetadata::mutable_unknown_fields_slow<google::protobuf::UnknownFieldSet>(v99);
              v8 = v100;
            }
            v101 = v94;
            result = google::protobuf::internal::FieldParser<google::protobuf::internal::UnknownFieldParserHelper>(v9, &v101, (uint64_t *)v8, (int32x2_t *)this);
          }
LABEL_187:
          v100 = result;
          if (!result)
            return result;
LABEL_188:
          v95 = google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(this, (const char **)&v100, *((_DWORD *)this + 23));
          result = v100;
          if (v95)
            return result;
          continue;
        }
        v76 = (unsigned __int8 *)v8 - 1;
        while (1)
        {
          v100 = (google::protobuf::internal *)(v76 + 1);
          v77 = v76[1];
          if ((char)v76[1] < 0)
          {
            v78 = v76[2];
            v79 = (v77 + (v78 << 7) - 128);
            if ((v78 & 0x80) != 0)
            {
              v80 = v76 + 4;
              v81 = 14;
              while (1)
              {
                v79 += (*(v80 - 1) - 1) << v81;
                if (((char)*(v80 - 1) & 0x80000000) == 0)
                  break;
                v77 = 0;
                v76 = 0;
                ++v80;
                v81 += 7;
                if (v81 == 70)
                  goto LABEL_150;
              }
              v77 = v79;
              v76 = v80;
            }
            else
            {
              v76 += 3;
              v77 = v77 + (v78 << 7) - 128;
            }
          }
          else
          {
            v76 += 2;
          }
LABEL_150:
          v100 = (google::protobuf::internal *)v76;
          v82 = *(unsigned int *)(a1 + 160);
          if ((_DWORD)v82 == *(_DWORD *)(a1 + 164))
          {
            v83 = v82 + 1;
            google::protobuf::RepeatedField<int>::Reserve((unsigned int *)(a1 + 160), v82 + 1);
            *(_DWORD *)(*(_QWORD *)(a1 + 168) + 4 * v82) = v77;
            v76 = (unsigned __int8 *)v100;
          }
          else
          {
            *(_DWORD *)(*(_QWORD *)(a1 + 168) + 4 * v82) = v77;
            v83 = v82 + 1;
          }
          *(_DWORD *)(a1 + 160) = v83;
          if (!v76)
            return 0;
          if (*(_QWORD *)this <= (unint64_t)v76 || *v76 != 88)
            goto LABEL_188;
        }
      case 0xCu:
        if (v9 != 98)
          goto LABEL_180;
        *(_DWORD *)(a1 + 16) |= 4u;
        v84 = *(_QWORD *)(a1 + 8);
        v11 = (google::protobuf::internal::ArenaImpl *)(v84 & 0xFFFFFFFFFFFFFFFELL);
        if ((v84 & 1) != 0)
          v11 = *(google::protobuf::internal::ArenaImpl **)v11;
        v12 = *v98;
        if (*v98 != (std::string *)&google::protobuf::internal::fixed_address_empty_string)
          goto LABEL_163;
        v13 = (_QWORD *)(a1 + 192);
LABEL_162:
        v12 = (std::string *)google::protobuf::internal::ArenaStringPtr::MutableSlow<>(v13, v11);
        v8 = v100;
LABEL_163:
        result = (google::protobuf::internal *)google::protobuf::internal::InlineGreedyStringParser(v12, (std::string::value_type *)v8, (uint64_t)this);
        goto LABEL_187;
      default:
        goto LABEL_180;
    }
  }
}

google::protobuf::internal *google::protobuf::internal::ParseContext::ParseMessage<google::protobuf::DescriptorProto>(uint64_t a1, uint64_t a2, google::protobuf::internal *this)
{
  const char *v5;
  google::protobuf::internal *v6;
  google::protobuf::internal *result;
  uint64_t v8;
  int v9;
  int v10;
  BOOL v11;
  int v12;

  v5 = (const char *)*(unsigned __int8 *)this;
  if (*(char *)this < 0)
  {
    result = (google::protobuf::internal *)google::protobuf::internal::ReadSizeFallback(this, v5);
    if (!result)
      return result;
    v6 = result;
  }
  else
  {
    v6 = (google::protobuf::internal *)((char *)this + 1);
  }
  v8 = *(_QWORD *)(a1 + 8);
  v9 = (_DWORD)v5 + (_DWORD)v6 - v8;
  *(_QWORD *)a1 = v8 + (v9 & (v9 >> 31));
  v10 = *(_DWORD *)(a1 + 28);
  *(_DWORD *)(a1 + 28) = v9;
  LODWORD(v8) = *(_DWORD *)(a1 + 88);
  v11 = __OFSUB__((_DWORD)v8, 1);
  LODWORD(v8) = v8 - 1;
  *(_DWORD *)(a1 + 88) = v8;
  if ((int)v8 < 0 != v11)
    return 0;
  result = google::protobuf::DescriptorProto::_InternalParse(a2, v6, (google::protobuf::internal::EpsCopyInputStream *)a1);
  if (!result)
    return result;
  ++*(_DWORD *)(a1 + 88);
  if (*(_DWORD *)(a1 + 80))
    return 0;
  v12 = *(_DWORD *)(a1 + 28) + v10 - v9;
  *(_DWORD *)(a1 + 28) = v12;
  *(_QWORD *)a1 = *(_QWORD *)(a1 + 8) + (v12 & (v12 >> 31));
  return result;
}

google::protobuf::internal *google::protobuf::internal::ParseContext::ParseMessage<google::protobuf::EnumDescriptorProto>(google::protobuf::internal::EpsCopyInputStream *this, uint64_t a2, google::protobuf::internal *a3)
{
  const char *v5;
  google::protobuf::internal *v6;
  google::protobuf::internal *result;
  uint64_t v8;
  int v9;
  int v10;
  BOOL v11;
  int v12;

  v5 = (const char *)*(unsigned __int8 *)a3;
  if (*(char *)a3 < 0)
  {
    result = (google::protobuf::internal *)google::protobuf::internal::ReadSizeFallback(a3, v5);
    if (!result)
      return result;
    v6 = result;
  }
  else
  {
    v6 = (google::protobuf::internal *)((char *)a3 + 1);
  }
  v8 = *((_QWORD *)this + 1);
  v9 = (_DWORD)v5 + (_DWORD)v6 - v8;
  *(_QWORD *)this = v8 + (v9 & (v9 >> 31));
  v10 = *((_DWORD *)this + 7);
  *((_DWORD *)this + 7) = v9;
  LODWORD(v8) = *((_DWORD *)this + 22);
  v11 = __OFSUB__((_DWORD)v8, 1);
  LODWORD(v8) = v8 - 1;
  *((_DWORD *)this + 22) = v8;
  if ((int)v8 < 0 != v11)
    return 0;
  result = google::protobuf::EnumDescriptorProto::_InternalParse(a2, v6, this);
  if (!result)
    return result;
  ++*((_DWORD *)this + 22);
  if (*((_DWORD *)this + 20))
    return 0;
  v12 = *((_DWORD *)this + 7) + v10 - v9;
  *((_DWORD *)this + 7) = v12;
  *(_QWORD *)this = *((_QWORD *)this + 1) + (v12 & (v12 >> 31));
  return result;
}

google::protobuf::internal *google::protobuf::internal::ParseContext::ParseMessage<google::protobuf::FieldDescriptorProto>(int32x2_t *this, uint64_t a2, google::protobuf::internal *a3)
{
  const char *v5;
  google::protobuf::internal *v6;
  google::protobuf::internal *result;
  int32x2_t v8;
  int v9;
  __int32 v10;
  BOOL v11;
  int v12;

  v5 = (const char *)*(unsigned __int8 *)a3;
  if (*(char *)a3 < 0)
  {
    result = (google::protobuf::internal *)google::protobuf::internal::ReadSizeFallback(a3, v5);
    if (!result)
      return result;
    v6 = result;
  }
  else
  {
    v6 = (google::protobuf::internal *)((char *)a3 + 1);
  }
  v8 = this[1];
  v9 = (_DWORD)v5 + (_DWORD)v6 - v8.i32[0];
  *this = (int32x2_t)(*(_QWORD *)&v8 + (v9 & (v9 >> 31)));
  v10 = this[3].i32[1];
  this[3].i32[1] = v9;
  v8.i32[0] = this[11].i32[0];
  v11 = __OFSUB__(v8.i32[0]--, 1);
  this[11].i32[0] = v8.i32[0];
  if (v8.i32[0] < 0 != v11)
    return 0;
  result = google::protobuf::FieldDescriptorProto::_InternalParse(a2, v6, this);
  if (!result)
    return result;
  ++this[11].i32[0];
  if (this[10].i32[0])
    return 0;
  v12 = this[3].i32[1] + v10 - v9;
  this[3].i32[1] = v12;
  *this = (int32x2_t)(*(_QWORD *)&this[1] + (v12 & (v12 >> 31)));
  return result;
}

uint64_t google::protobuf::internal::ReadVarint64(google::protobuf::internal *this, const char **a2)
{
  unsigned __int8 *v2;
  unsigned __int8 *v3;
  uint64_t v4;
  int v5;
  int v6;
  uint64_t v7;
  unsigned __int8 *v8;
  uint64_t v9;

  v2 = *(unsigned __int8 **)this;
  v3 = (unsigned __int8 *)(*(_QWORD *)this + 1);
  v4 = **(unsigned __int8 **)this;
  if (**(char **)this < 0)
  {
    v5 = *v3;
    v6 = v4 + (v5 << 7);
    v7 = (v6 - 128);
    if ((v5 & 0x80) != 0)
    {
      v8 = v2 + 3;
      v9 = 14;
      while (1)
      {
        v7 += (*(v8 - 1) - 1) << v9;
        if (((char)*(v8 - 1) & 0x80000000) == 0)
          break;
        v4 = 0;
        v3 = 0;
        ++v8;
        v9 += 7;
        if (v9 == 70)
          goto LABEL_9;
      }
      v4 = v7;
      v3 = v8;
    }
    else
    {
      v3 = v2 + 2;
      v4 = (v6 - 128);
    }
  }
LABEL_9:
  *(_QWORD *)this = v3;
  return v4;
}

const google::protobuf::UnknownFieldSet *google::protobuf::FileDescriptorProto::_InternalSerialize(google::protobuf::FileDescriptorProto *this, unsigned __int8 *a2, google::protobuf::io::EpsCopyOutputStream *a3)
{
  unsigned __int8 *v4;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  unsigned __int8 *v12;
  int v13;
  int i;
  google::protobuf::DescriptorProto *v15;
  unsigned int v16;
  unsigned __int8 *v17;
  unsigned int v18;
  unsigned int v19;
  unsigned int v20;
  int v21;
  int j;
  google::protobuf::EnumDescriptorProto *v23;
  unsigned int v24;
  unsigned __int8 *v25;
  unsigned int v26;
  unsigned int v27;
  unsigned int v28;
  int v29;
  int k;
  google::protobuf::ServiceDescriptorProto *v31;
  unsigned int v32;
  unsigned __int8 *v33;
  unsigned int v34;
  unsigned int v35;
  unsigned int v36;
  int v37;
  int m;
  google::protobuf::FieldDescriptorProto *v39;
  unsigned int v40;
  unsigned __int8 *v41;
  unsigned int v42;
  unsigned int v43;
  unsigned int v44;
  google::protobuf::FileOptions *v45;
  unsigned int v46;
  unsigned __int8 *v47;
  unsigned int v48;
  unsigned int v49;
  unsigned int v50;
  google::protobuf::SourceCodeInfo *v51;
  unsigned int v52;
  unsigned __int8 *v53;
  unsigned int v54;
  unsigned int v55;
  unsigned int v56;
  uint64_t v57;
  uint64_t n;
  unint64_t v59;
  unint64_t v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t ii;
  unint64_t v65;
  unint64_t v66;
  unint64_t v67;
  unint64_t v68;
  uint64_t v69;

  v4 = a2;
  v6 = *((_DWORD *)this + 4);
  if ((v6 & 1) != 0)
    v4 = google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 1, *((_QWORD *)this + 22) & 0xFFFFFFFFFFFFFFFELL, a2);
  if ((v6 & 2) != 0)
    v4 = google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 2, *((_QWORD *)this + 23) & 0xFFFFFFFFFFFFFFFELL, v4);
  v7 = *((unsigned int *)this + 8);
  if ((int)v7 >= 1)
  {
    v8 = 0;
    v9 = 8 * v7;
    do
    {
      v10 = *(_QWORD **)(*((_QWORD *)this + 5) + v8 + 8);
      if (*((char *)v10 + 23) < 0)
      {
        v11 = v10[1];
        if (v11 > 127)
          goto LABEL_16;
      }
      else
      {
        v11 = *((unsigned __int8 *)v10 + 23);
      }
      if (*(_QWORD *)a3 - (_QWORD)v4 + 14 >= v11)
      {
        *v4 = 26;
        v4[1] = v11;
        if (*((char *)v10 + 23) < 0)
          v10 = (_QWORD *)*v10;
        v12 = v4 + 2;
        memcpy(v4 + 2, v10, v11);
        v4 = &v12[v11];
        goto LABEL_14;
      }
LABEL_16:
      v4 = google::protobuf::io::EpsCopyOutputStream::WriteStringOutline(a3, 3, (uint64_t)v10, v4);
LABEL_14:
      v8 += 8;
    }
    while (v9 != v8);
  }
  v13 = *((_DWORD *)this + 14);
  if (v13)
  {
    for (i = 0; i != v13; ++i)
    {
      if (*(_QWORD *)a3 <= (unint64_t)v4)
        v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
      v15 = *(google::protobuf::DescriptorProto **)(*((_QWORD *)this + 8) + 8 * i + 8);
      *v4 = 34;
      v16 = *((_DWORD *)v15 + 5);
      if (v16 > 0x7F)
      {
        v4[1] = v16 | 0x80;
        v18 = v16 >> 7;
        if (v16 >> 14)
        {
          v17 = v4 + 3;
          do
          {
            *(v17 - 1) = v18 | 0x80;
            v19 = v18 >> 7;
            ++v17;
            v20 = v18 >> 14;
            v18 >>= 7;
          }
          while (v20);
          *(v17 - 1) = v19;
        }
        else
        {
          v4[2] = v18;
          v17 = v4 + 3;
        }
      }
      else
      {
        v4[1] = v16;
        v17 = v4 + 2;
      }
      v4 = (unsigned __int8 *)google::protobuf::DescriptorProto::_InternalSerialize(v15, v17, a3);
    }
  }
  v21 = *((_DWORD *)this + 20);
  if (v21)
  {
    for (j = 0; j != v21; ++j)
    {
      if (*(_QWORD *)a3 <= (unint64_t)v4)
        v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
      v23 = *(google::protobuf::EnumDescriptorProto **)(*((_QWORD *)this + 11) + 8 * j + 8);
      *v4 = 42;
      v24 = *((_DWORD *)v23 + 5);
      if (v24 > 0x7F)
      {
        v4[1] = v24 | 0x80;
        v26 = v24 >> 7;
        if (v24 >> 14)
        {
          v25 = v4 + 3;
          do
          {
            *(v25 - 1) = v26 | 0x80;
            v27 = v26 >> 7;
            ++v25;
            v28 = v26 >> 14;
            v26 >>= 7;
          }
          while (v28);
          *(v25 - 1) = v27;
        }
        else
        {
          v4[2] = v26;
          v25 = v4 + 3;
        }
      }
      else
      {
        v4[1] = v24;
        v25 = v4 + 2;
      }
      v4 = (unsigned __int8 *)google::protobuf::EnumDescriptorProto::_InternalSerialize(v23, v25, a3);
    }
  }
  v29 = *((_DWORD *)this + 26);
  if (v29)
  {
    for (k = 0; k != v29; ++k)
    {
      if (*(_QWORD *)a3 <= (unint64_t)v4)
        v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
      v31 = *(google::protobuf::ServiceDescriptorProto **)(*((_QWORD *)this + 14) + 8 * k + 8);
      *v4 = 50;
      v32 = *((_DWORD *)v31 + 5);
      if (v32 > 0x7F)
      {
        v4[1] = v32 | 0x80;
        v34 = v32 >> 7;
        if (v32 >> 14)
        {
          v33 = v4 + 3;
          do
          {
            *(v33 - 1) = v34 | 0x80;
            v35 = v34 >> 7;
            ++v33;
            v36 = v34 >> 14;
            v34 >>= 7;
          }
          while (v36);
          *(v33 - 1) = v35;
        }
        else
        {
          v4[2] = v34;
          v33 = v4 + 3;
        }
      }
      else
      {
        v4[1] = v32;
        v33 = v4 + 2;
      }
      v4 = (unsigned __int8 *)google::protobuf::ServiceDescriptorProto::_InternalSerialize(v31, v33, a3);
    }
  }
  v37 = *((_DWORD *)this + 32);
  if (v37)
  {
    for (m = 0; m != v37; ++m)
    {
      if (*(_QWORD *)a3 <= (unint64_t)v4)
        v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
      v39 = *(google::protobuf::FieldDescriptorProto **)(*((_QWORD *)this + 17) + 8 * m + 8);
      *v4 = 58;
      v40 = *((_DWORD *)v39 + 5);
      if (v40 > 0x7F)
      {
        v4[1] = v40 | 0x80;
        v42 = v40 >> 7;
        if (v40 >> 14)
        {
          v41 = v4 + 3;
          do
          {
            *(v41 - 1) = v42 | 0x80;
            v43 = v42 >> 7;
            ++v41;
            v44 = v42 >> 14;
            v42 >>= 7;
          }
          while (v44);
          *(v41 - 1) = v43;
        }
        else
        {
          v4[2] = v42;
          v41 = v4 + 3;
        }
      }
      else
      {
        v4[1] = v40;
        v41 = v4 + 2;
      }
      v4 = (unsigned __int8 *)google::protobuf::FieldDescriptorProto::_InternalSerialize(v39, v41, a3);
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*(_QWORD *)a3 <= (unint64_t)v4)
      v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
    v45 = (google::protobuf::FileOptions *)*((_QWORD *)this + 25);
    *v4 = 66;
    v46 = *((_DWORD *)v45 + 11);
    if (v46 > 0x7F)
    {
      v4[1] = v46 | 0x80;
      v48 = v46 >> 7;
      if (v46 >> 14)
      {
        v47 = v4 + 3;
        do
        {
          *(v47 - 1) = v48 | 0x80;
          v49 = v48 >> 7;
          ++v47;
          v50 = v48 >> 14;
          v48 >>= 7;
        }
        while (v50);
        *(v47 - 1) = v49;
      }
      else
      {
        v4[2] = v48;
        v47 = v4 + 3;
      }
    }
    else
    {
      v4[1] = v46;
      v47 = v4 + 2;
    }
    v4 = (unsigned __int8 *)google::protobuf::FileOptions::_InternalSerialize(v45, v47, a3);
  }
  if ((v6 & 0x10) != 0)
  {
    if (*(_QWORD *)a3 <= (unint64_t)v4)
      v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
    v51 = (google::protobuf::SourceCodeInfo *)*((_QWORD *)this + 26);
    *v4 = 74;
    v52 = *((_DWORD *)v51 + 10);
    if (v52 > 0x7F)
    {
      v4[1] = v52 | 0x80;
      v54 = v52 >> 7;
      if (v52 >> 14)
      {
        v53 = v4 + 3;
        do
        {
          *(v53 - 1) = v54 | 0x80;
          v55 = v54 >> 7;
          ++v53;
          v56 = v54 >> 14;
          v54 >>= 7;
        }
        while (v56);
        *(v53 - 1) = v55;
      }
      else
      {
        v4[2] = v54;
        v53 = v4 + 3;
      }
    }
    else
    {
      v4[1] = v52;
      v53 = v4 + 2;
    }
    v4 = (unsigned __int8 *)google::protobuf::SourceCodeInfo::_InternalSerialize(v51, v53, a3, (google::protobuf::io::EpsCopyOutputStream *)v4);
  }
  v57 = *((unsigned int *)this + 36);
  if ((int)v57 >= 1)
  {
    for (n = 0; n != v57; ++n)
    {
      if (*(_QWORD *)a3 <= (unint64_t)v4)
        v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
      v59 = *(int *)(*((_QWORD *)this + 19) + 4 * n);
      *v4 = 80;
      if (v59 > 0x7F)
      {
        v4[1] = v59 | 0x80;
        v60 = v59 >> 7;
        if (v59 >> 14)
        {
          v4 += 3;
          do
          {
            *(v4 - 1) = v60 | 0x80;
            v61 = v60 >> 7;
            ++v4;
            v62 = v60 >> 14;
            v60 >>= 7;
          }
          while (v62);
          *(v4 - 1) = v61;
        }
        else
        {
          v4[2] = v60;
          v4 += 3;
        }
      }
      else
      {
        v4[1] = v59;
        v4 += 2;
      }
    }
  }
  v63 = *((unsigned int *)this + 40);
  if ((int)v63 >= 1)
  {
    for (ii = 0; ii != v63; ++ii)
    {
      if (*(_QWORD *)a3 <= (unint64_t)v4)
        v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
      v65 = *(int *)(*((_QWORD *)this + 21) + 4 * ii);
      *v4 = 88;
      if (v65 > 0x7F)
      {
        v4[1] = v65 | 0x80;
        v66 = v65 >> 7;
        if (v65 >> 14)
        {
          v4 += 3;
          do
          {
            *(v4 - 1) = v66 | 0x80;
            v67 = v66 >> 7;
            ++v4;
            v68 = v66 >> 14;
            v66 >>= 7;
          }
          while (v68);
          *(v4 - 1) = v67;
        }
        else
        {
          v4[2] = v66;
          v4 += 3;
        }
      }
      else
      {
        v4[1] = v65;
        v4 += 2;
      }
    }
  }
  if ((v6 & 4) != 0)
    v4 = google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 12, *((_QWORD *)this + 24) & 0xFFFFFFFFFFFFFFFELL, v4);
  v69 = *((_QWORD *)this + 1);
  if ((v69 & 1) != 0)
    return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v69 & 0xFFFFFFFFFFFFFFFELL) + 8), (const google::protobuf::UnknownFieldSet *)v4, a3, (google::protobuf::io::EpsCopyOutputStream *)v4);
  else
    return (const google::protobuf::UnknownFieldSet *)v4;
}

const InternalMetadata *google::protobuf::FileDescriptorProto::ByteSizeLong(google::protobuf::FileDescriptorProto *this, uint64_t a2, uint64_t a3, CachedSize *a4)
{
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  google::protobuf::DescriptorProto **v14;
  uint64_t v15;
  google::protobuf::DescriptorProto *v16;
  const InternalMetadata *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  google::protobuf::EnumDescriptorProto **v21;
  uint64_t v22;
  google::protobuf::EnumDescriptorProto *v23;
  const InternalMetadata *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  google::protobuf::ServiceDescriptorProto **v28;
  uint64_t v29;
  google::protobuf::ServiceDescriptorProto *v30;
  const InternalMetadata *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  google::protobuf::FieldDescriptorProto **v35;
  uint64_t v36;
  google::protobuf::FieldDescriptorProto *v37;
  const InternalMetadata *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  CachedSize *v43;
  const InternalMetadata *v44;
  int v45;
  const InternalMetadata *v46;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  const InternalMetadata *v57;

  v5 = *((unsigned int *)this + 8);
  if ((int)v5 < 1)
  {
    v7 = *((unsigned int *)this + 8);
  }
  else
  {
    v6 = (uint64_t *)(*((_QWORD *)this + 5) + 8);
    v7 = *((unsigned int *)this + 8);
    do
    {
      v8 = *v6++;
      v9 = *(unsigned __int8 *)(v8 + 23);
      v10 = *(_QWORD *)(v8 + 8);
      if ((v9 & 0x80u) == 0)
        v10 = v9;
      v7 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6);
      --v5;
    }
    while (v5);
  }
  v11 = *((int *)this + 14);
  v12 = v7 + v11;
  v13 = *((_QWORD *)this + 8);
  if (v13)
    v14 = (google::protobuf::DescriptorProto **)(v13 + 8);
  else
    v14 = 0;
  if ((_DWORD)v11)
  {
    v15 = 8 * v11;
    do
    {
      v16 = *v14++;
      v17 = google::protobuf::DescriptorProto::ByteSizeLong(v16, a2, a3, a4);
      v12 += (uint64_t)v17 + ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6);
      v15 -= 8;
    }
    while (v15);
  }
  v18 = *((int *)this + 20);
  v19 = v12 + v18;
  v20 = *((_QWORD *)this + 11);
  if (v20)
    v21 = (google::protobuf::EnumDescriptorProto **)(v20 + 8);
  else
    v21 = 0;
  if ((_DWORD)v18)
  {
    v22 = 8 * v18;
    do
    {
      v23 = *v21++;
      v24 = google::protobuf::EnumDescriptorProto::ByteSizeLong(v23, a2, a3, a4);
      v19 += (uint64_t)v24 + ((9 * (__clz(v24 | 1) ^ 0x1F) + 73) >> 6);
      v22 -= 8;
    }
    while (v22);
  }
  v25 = *((int *)this + 26);
  v26 = v19 + v25;
  v27 = *((_QWORD *)this + 14);
  if (v27)
    v28 = (google::protobuf::ServiceDescriptorProto **)(v27 + 8);
  else
    v28 = 0;
  if ((_DWORD)v25)
  {
    v29 = 8 * v25;
    do
    {
      v30 = *v28++;
      v31 = google::protobuf::ServiceDescriptorProto::ByteSizeLong(v30, a2, a3, a4);
      v26 += (uint64_t)v31 + ((9 * (__clz(v31 | 1) ^ 0x1F) + 73) >> 6);
      v29 -= 8;
    }
    while (v29);
  }
  v32 = *((int *)this + 32);
  v33 = v26 + v32;
  v34 = *((_QWORD *)this + 17);
  if (v34)
    v35 = (google::protobuf::FieldDescriptorProto **)(v34 + 8);
  else
    v35 = 0;
  if ((_DWORD)v32)
  {
    v36 = 8 * v32;
    do
    {
      v37 = *v35++;
      v38 = google::protobuf::FieldDescriptorProto::ByteSizeLong(v37, a2, a3, a4);
      v33 += (uint64_t)v38 + ((9 * (__clz(v38 | 1) ^ 0x1F) + 73) >> 6);
      v36 -= 8;
    }
    while (v36);
  }
  v39 = google::protobuf::internal::WireFormatLite::Int32Size((unsigned int *)this + 36);
  v40 = *((unsigned int *)this + 36);
  v44 = (const InternalMetadata *)(v39
                                 + google::protobuf::internal::WireFormatLite::Int32Size((unsigned int *)this + 40)
                                 + *((unsigned int *)this + 40)
                                 + v33
                                 + v40);
  v45 = *((_DWORD *)this + 4);
  if ((v45 & 0x1F) == 0)
    goto LABEL_39;
  if ((v45 & 1) != 0)
  {
    v48 = *((_QWORD *)this + 22) & 0xFFFFFFFFFFFFFFFELL;
    v49 = *(unsigned __int8 *)(v48 + 23);
    v50 = *(_QWORD *)(v48 + 8);
    if ((v49 & 0x80u) == 0)
      v50 = v49;
    v44 = (const InternalMetadata *)((char *)v44 + v50 + ((9 * (__clz(v50 | 1) ^ 0x1F) + 73) >> 6) + 1);
    if ((v45 & 2) == 0)
    {
LABEL_35:
      if ((v45 & 4) == 0)
        goto LABEL_36;
LABEL_47:
      v54 = *((_QWORD *)this + 24) & 0xFFFFFFFFFFFFFFFELL;
      v55 = *(unsigned __int8 *)(v54 + 23);
      v56 = *(_QWORD *)(v54 + 8);
      if ((v55 & 0x80u) == 0)
        v56 = v55;
      v44 = (const InternalMetadata *)((char *)v44 + v56 + ((9 * (__clz(v56 | 1) ^ 0x1F) + 73) >> 6) + 1);
      if ((v45 & 8) == 0)
      {
LABEL_37:
        if ((v45 & 0x10) == 0)
          goto LABEL_39;
        goto LABEL_38;
      }
      goto LABEL_50;
    }
  }
  else if ((v45 & 2) == 0)
  {
    goto LABEL_35;
  }
  v51 = *((_QWORD *)this + 23) & 0xFFFFFFFFFFFFFFFELL;
  v52 = *(unsigned __int8 *)(v51 + 23);
  v53 = *(_QWORD *)(v51 + 8);
  if ((v52 & 0x80u) == 0)
    v53 = v52;
  v44 = (const InternalMetadata *)((char *)v44 + v53 + ((9 * (__clz(v53 | 1) ^ 0x1F) + 73) >> 6) + 1);
  if ((v45 & 4) != 0)
    goto LABEL_47;
LABEL_36:
  if ((v45 & 8) == 0)
    goto LABEL_37;
LABEL_50:
  v57 = google::protobuf::FileOptions::ByteSizeLong(*((google::protobuf::FileOptions **)this + 25));
  v44 = (const InternalMetadata *)((char *)&v57->var0
                                 + ((9 * (__clz(v57 | 1) ^ 0x1F) + 73) >> 6)
                                 + (_QWORD)v44
                                 + 1);
  if ((v45 & 0x10) != 0)
  {
LABEL_38:
    v46 = google::protobuf::SourceCodeInfo::ByteSizeLong(*((google::protobuf::SourceCodeInfo **)this + 26), v41, v42, v43);
    v44 = (const InternalMetadata *)((char *)&v46->var0
                                   + ((9 * (__clz(v46 | 1) ^ 0x1F) + 73) >> 6)
                                   + (_QWORD)v44
                                   + 1);
  }
LABEL_39:
  if ((*((_BYTE *)this + 8) & 1) != 0)
    return (const InternalMetadata *)google::protobuf::internal::ComputeUnknownFieldsSize((google::protobuf::FileDescriptorProto *)((char *)this + 8), v44, (_DWORD *)this + 5, v43);
  *((_DWORD *)this + 5) = (_DWORD)v44;
  return v44;
}

void google::protobuf::FileDescriptorProto::MergeFrom(google::protobuf::FileDescriptorProto *this, const google::protobuf::Message *a2, google::protobuf::Message *a3)
{
  if (*(void (***)(google::protobuf::FileDescriptorProto *__hidden))a2 == &off_1E1BF7EF8)
    google::protobuf::FileDescriptorProto::MergeFrom(this, a2);
  else
    google::protobuf::internal::ReflectionOps::Merge(a2, this, a3);
}

void google::protobuf::FileDescriptorProto::MergeFrom(google::protobuf::FileDescriptorProto *this, const google::protobuf::FileDescriptorProto *a2)
{
  _QWORD *v4;
  uint64_t v5;
  signed int v6;
  const std::string **v7;
  unsigned int *v8;
  int v9;
  int *v10;
  unsigned int v11;
  google::protobuf::DescriptorProto **v12;
  unsigned int *v13;
  signed int v14;
  signed int *v15;
  unsigned int v16;
  google::protobuf::EnumDescriptorProto **v17;
  unsigned int *v18;
  signed int v19;
  signed int *v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  google::protobuf::ServiceDescriptorProto **v26;
  google::protobuf::ServiceDescriptorProto **v27;
  google::protobuf::ServiceDescriptorProto *v28;
  google::protobuf::ServiceDescriptorProto *v29;
  google::protobuf::ServiceDescriptorProto *v30;
  google::protobuf::internal::ArenaImpl *v31;
  int v32;
  uint64_t v33;
  google::protobuf::ServiceDescriptorProto **v34;
  google::protobuf::ServiceDescriptorProto **v35;
  google::protobuf::ServiceDescriptorProto *v36;
  google::protobuf::ServiceDescriptorProto *v37;
  int v38;
  int *v39;
  unsigned int v40;
  google::protobuf::FieldDescriptorProto **v41;
  unsigned int *v42;
  signed int v43;
  signed int *v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  __int128 *v52;
  uint64_t v53;
  google::protobuf::internal::ArenaImpl *v54;
  __int128 *v55;
  uint64_t v56;
  google::protobuf::internal::ArenaImpl *v57;
  __int128 *v58;
  uint64_t v59;
  google::protobuf::internal::ArenaImpl *v60;
  google::protobuf::FileOptions *v61;
  google::protobuf::internal::ArenaImpl *v62;
  const google::protobuf::FileOptions *v63;
  google::protobuf::SourceCodeInfo *v64;
  google::protobuf::internal::ArenaImpl *v65;
  const google::protobuf::SourceCodeInfo *v66;
  _QWORD *v67;
  unsigned int *v68;
  uint64_t v69;

  v4 = (_QWORD *)((char *)this + 8);
  v5 = *((_QWORD *)a2 + 1);
  if ((v5 & 1) != 0)
    google::protobuf::internal::InternalMetadata::DoMergeFrom<google::protobuf::UnknownFieldSet>((uint64_t *)this + 1, (const google::protobuf::UnknownFieldSet *)((v5 & 0xFFFFFFFFFFFFFFFELL) + 8));
  v6 = *((_DWORD *)a2 + 8);
  if (v6)
  {
    v7 = (const std::string **)(*((_QWORD *)a2 + 5) + 8);
    v8 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::FileDescriptorProto *)((char *)this + 24), *((_DWORD *)a2 + 8));
    google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((std::string *)this + 1, (std::string **)v8, v7, v6, **((_DWORD **)this + 5) - *((_DWORD *)this + 8));
    v9 = *((_DWORD *)this + 8) + v6;
    *((_DWORD *)this + 8) = v9;
    v10 = (int *)*((_QWORD *)this + 5);
    if (*v10 < v9)
      *v10 = v9;
  }
  v11 = *((_DWORD *)a2 + 14);
  if (v11)
  {
    v12 = (google::protobuf::DescriptorProto **)(*((_QWORD *)a2 + 8) + 8);
    v13 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::FileDescriptorProto *)((char *)this + 48), *((_DWORD *)a2 + 14));
    google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto>::TypeHandler>((google::protobuf::internal::ArenaImpl **)this + 6, (google::protobuf::DescriptorProto **)v13, v12, v11, **((_DWORD **)this + 8) - *((_DWORD *)this + 14));
    v14 = *((_DWORD *)this + 14) + v11;
    *((_DWORD *)this + 14) = v14;
    v15 = (signed int *)*((_QWORD *)this + 8);
    if (*v15 < v14)
      *v15 = v14;
  }
  v16 = *((_DWORD *)a2 + 20);
  if (v16)
  {
    v17 = (google::protobuf::EnumDescriptorProto **)(*((_QWORD *)a2 + 11) + 8);
    v18 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::FileDescriptorProto *)((char *)this + 72), *((_DWORD *)a2 + 20));
    google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto>::TypeHandler>((google::protobuf::internal::ArenaImpl **)this + 9, (google::protobuf::EnumDescriptorProto **)v18, v17, v16, **((_DWORD **)this + 11) - *((_DWORD *)this + 20));
    v19 = *((_DWORD *)this + 20) + v16;
    *((_DWORD *)this + 20) = v19;
    v20 = (signed int *)*((_QWORD *)this + 11);
    if (*v20 < v19)
      *v20 = v19;
  }
  v21 = *((_DWORD *)a2 + 26);
  if (v21)
  {
    v67 = v4;
    v69 = *((_QWORD *)a2 + 14);
    v68 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::FileDescriptorProto *)((char *)this + 96), v21);
    v22 = **((int **)this + 14);
    v23 = *((int *)this + 26);
    v24 = v22 - v23;
    if ((int)v22 - (int)v23 >= v21)
      v25 = v21;
    else
      v25 = v24;
    if ((int)v25 >= 1)
    {
      v26 = (google::protobuf::ServiceDescriptorProto **)v68;
      v27 = (google::protobuf::ServiceDescriptorProto **)(v69 + 8);
      do
      {
        v29 = *v27++;
        v28 = v29;
        v30 = *v26++;
        google::protobuf::internal::GenericTypeHandler<google::protobuf::ServiceDescriptorProto>::Merge(v28, v30);
        --v25;
      }
      while (v25);
    }
    if (v24 < v21)
    {
      v31 = (google::protobuf::internal::ArenaImpl *)*((_QWORD *)this + 12);
      v32 = v23 + v21 - v22;
      v33 = 8 * v22 - 8 * v23;
      v34 = (google::protobuf::ServiceDescriptorProto **)((char *)v68 + v33);
      v35 = (google::protobuf::ServiceDescriptorProto **)(v33 + v69 + 8);
      do
      {
        v36 = *v35++;
        v37 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::ServiceDescriptorProto>(v31);
        google::protobuf::internal::GenericTypeHandler<google::protobuf::ServiceDescriptorProto>::Merge(v36, v37);
        *v34++ = v37;
        --v32;
      }
      while (v32);
    }
    v38 = *((_DWORD *)this + 26) + v21;
    *((_DWORD *)this + 26) = v38;
    v39 = (int *)*((_QWORD *)this + 14);
    v4 = v67;
    if (*v39 < v38)
      *v39 = v38;
  }
  v40 = *((_DWORD *)a2 + 32);
  if (v40)
  {
    v41 = (google::protobuf::FieldDescriptorProto **)(*((_QWORD *)a2 + 17) + 8);
    v42 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::FileDescriptorProto *)((char *)this + 120), *((_DWORD *)a2 + 32));
    google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::TypeHandler>((google::protobuf::internal::ArenaImpl **)this + 15, (google::protobuf::FieldDescriptorProto **)v42, v41, v40, **((_DWORD **)this + 17) - *((_DWORD *)this + 32));
    v43 = *((_DWORD *)this + 32) + v40;
    *((_DWORD *)this + 32) = v43;
    v44 = (signed int *)*((_QWORD *)this + 17);
    if (*v44 < v43)
      *v44 = v43;
  }
  v45 = *((_DWORD *)a2 + 36);
  if (v45)
  {
    v46 = *((int *)this + 36);
    google::protobuf::RepeatedField<int>::Reserve((unsigned int *)this + 36, v46 + v45);
    v47 = *((_QWORD *)this + 19);
    *((_DWORD *)this + 36) += *((_DWORD *)a2 + 36);
    memcpy((void *)(v47 + 4 * v46), *((const void **)a2 + 19), 4 * *((int *)a2 + 36));
  }
  v48 = *((_DWORD *)a2 + 40);
  if (v48)
  {
    v49 = *((int *)this + 40);
    google::protobuf::RepeatedField<int>::Reserve((unsigned int *)this + 40, v49 + v48);
    v50 = *((_QWORD *)this + 21);
    *((_DWORD *)this + 40) += *((_DWORD *)a2 + 40);
    memcpy((void *)(v50 + 4 * v49), *((const void **)a2 + 21), 4 * *((int *)a2 + 40));
  }
  v51 = *((_DWORD *)a2 + 4);
  if ((v51 & 0x1F) == 0)
    return;
  if ((v51 & 1) != 0)
  {
    v52 = (__int128 *)(*((_QWORD *)a2 + 22) & 0xFFFFFFFFFFFFFFFELL);
    *((_DWORD *)this + 4) |= 1u;
    v53 = *((_QWORD *)this + 1);
    v54 = (google::protobuf::internal::ArenaImpl *)(v53 & 0xFFFFFFFFFFFFFFFELL);
    if ((v53 & 1) != 0)
      v54 = *(google::protobuf::internal::ArenaImpl **)v54;
    google::protobuf::internal::ArenaStringPtr::Set((std::string **)this + 22, (std::string *)&google::protobuf::internal::fixed_address_empty_string, v52, v54);
    if ((v51 & 2) == 0)
    {
LABEL_34:
      if ((v51 & 4) == 0)
        goto LABEL_35;
LABEL_44:
      v58 = (__int128 *)(*((_QWORD *)a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      *((_DWORD *)this + 4) |= 4u;
      v59 = *((_QWORD *)this + 1);
      v60 = (google::protobuf::internal::ArenaImpl *)(v59 & 0xFFFFFFFFFFFFFFFELL);
      if ((v59 & 1) != 0)
        v60 = *(google::protobuf::internal::ArenaImpl **)v60;
      google::protobuf::internal::ArenaStringPtr::Set((std::string **)this + 24, (std::string *)&google::protobuf::internal::fixed_address_empty_string, v58, v60);
      if ((v51 & 8) == 0)
      {
LABEL_36:
        if ((v51 & 0x10) == 0)
          return;
        goto LABEL_55;
      }
      goto LABEL_47;
    }
  }
  else if ((v51 & 2) == 0)
  {
    goto LABEL_34;
  }
  v55 = (__int128 *)(*((_QWORD *)a2 + 23) & 0xFFFFFFFFFFFFFFFELL);
  *((_DWORD *)this + 4) |= 2u;
  v56 = *((_QWORD *)this + 1);
  v57 = (google::protobuf::internal::ArenaImpl *)(v56 & 0xFFFFFFFFFFFFFFFELL);
  if ((v56 & 1) != 0)
    v57 = *(google::protobuf::internal::ArenaImpl **)v57;
  google::protobuf::internal::ArenaStringPtr::Set((std::string **)this + 23, (std::string *)&google::protobuf::internal::fixed_address_empty_string, v55, v57);
  if ((v51 & 4) != 0)
    goto LABEL_44;
LABEL_35:
  if ((v51 & 8) == 0)
    goto LABEL_36;
LABEL_47:
  *((_DWORD *)this + 4) |= 8u;
  v61 = (google::protobuf::FileOptions *)*((_QWORD *)this + 25);
  if (!v61)
  {
    v62 = (google::protobuf::internal::ArenaImpl *)(*v4 & 0xFFFFFFFFFFFFFFFELL);
    if ((*v4 & 1) != 0)
      v62 = *(google::protobuf::internal::ArenaImpl **)v62;
    v61 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::FileOptions>(v62);
    *((_QWORD *)this + 25) = v61;
  }
  if (*((_QWORD *)a2 + 25))
    v63 = (const google::protobuf::FileOptions *)*((_QWORD *)a2 + 25);
  else
    v63 = (const google::protobuf::FileOptions *)&google::protobuf::_FileOptions_default_instance_;
  google::protobuf::FileOptions::MergeFrom(v61, v63);
  if ((v51 & 0x10) != 0)
  {
LABEL_55:
    *((_DWORD *)this + 4) |= 0x10u;
    v64 = (google::protobuf::SourceCodeInfo *)*((_QWORD *)this + 26);
    if (!v64)
    {
      v65 = (google::protobuf::internal::ArenaImpl *)(*v4 & 0xFFFFFFFFFFFFFFFELL);
      if ((*v4 & 1) != 0)
        v65 = *(google::protobuf::internal::ArenaImpl **)v65;
      v64 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::SourceCodeInfo>(v65);
      *((_QWORD *)this + 26) = v64;
    }
    if (*((_QWORD *)a2 + 26))
      v66 = (const google::protobuf::SourceCodeInfo *)*((_QWORD *)a2 + 26);
    else
      v66 = (const google::protobuf::SourceCodeInfo *)&google::protobuf::_SourceCodeInfo_default_instance_;
    google::protobuf::SourceCodeInfo::MergeFrom(v64, v66);
  }
}

void google::protobuf::FileOptions::MergeFrom(google::protobuf::FileOptions *this, const google::protobuf::FileOptions *a2)
{
  uint64_t v4;
  unsigned int v5;
  google::protobuf::UninterpretedOption **v6;
  unsigned int *v7;
  signed int v8;
  signed int *v9;
  int v10;
  __int128 *v11;
  uint64_t v12;
  google::protobuf::internal::ArenaImpl *v13;
  __int128 *v14;
  uint64_t v15;
  google::protobuf::internal::ArenaImpl *v16;
  __int128 *v17;
  uint64_t v18;
  google::protobuf::internal::ArenaImpl *v19;
  __int128 *v20;
  uint64_t v21;
  google::protobuf::internal::ArenaImpl *v22;
  __int128 *v23;
  uint64_t v24;
  google::protobuf::internal::ArenaImpl *v25;
  __int128 *v26;
  uint64_t v27;
  google::protobuf::internal::ArenaImpl *v28;
  __int128 *v29;
  uint64_t v30;
  google::protobuf::internal::ArenaImpl *v31;
  __int128 *v32;
  uint64_t v33;
  google::protobuf::internal::ArenaImpl *v34;
  __int128 *v35;
  uint64_t v36;
  google::protobuf::internal::ArenaImpl *v37;
  __int128 *v38;
  uint64_t v39;
  google::protobuf::internal::ArenaImpl *v40;

  google::protobuf::internal::ExtensionSet::MergeFrom((google::protobuf::FileOptions *)((char *)this + 16), (const google::protobuf::FileOptions *)((char *)a2 + 16));
  v4 = *((_QWORD *)a2 + 1);
  if ((v4 & 1) != 0)
    google::protobuf::internal::InternalMetadata::DoMergeFrom<google::protobuf::UnknownFieldSet>((uint64_t *)this + 1, (const google::protobuf::UnknownFieldSet *)((v4 & 0xFFFFFFFFFFFFFFFELL) + 8));
  v5 = *((_DWORD *)a2 + 14);
  if (v5)
  {
    v6 = (google::protobuf::UninterpretedOption **)(*((_QWORD *)a2 + 8) + 8);
    v7 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::FileOptions *)((char *)this + 48), *((_DWORD *)a2 + 14));
    google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::TypeHandler>((google::protobuf::internal::ArenaImpl **)this + 6, (google::protobuf::UninterpretedOption **)v7, v6, v5, **((_DWORD **)this + 8) - *((_DWORD *)this + 14));
    v8 = *((_DWORD *)this + 14) + v5;
    *((_DWORD *)this + 14) = v8;
    v9 = (signed int *)*((_QWORD *)this + 8);
    if (*v9 < v8)
      *v9 = v8;
  }
  v10 = *((_DWORD *)a2 + 10);
  if (!(_BYTE)v10)
    goto LABEL_40;
  if ((v10 & 1) != 0)
  {
    v11 = (__int128 *)(*((_QWORD *)a2 + 9) & 0xFFFFFFFFFFFFFFFELL);
    *((_DWORD *)this + 10) |= 1u;
    v12 = *((_QWORD *)this + 1);
    v13 = (google::protobuf::internal::ArenaImpl *)(v12 & 0xFFFFFFFFFFFFFFFELL);
    if ((v12 & 1) != 0)
      v13 = *(google::protobuf::internal::ArenaImpl **)v13;
    google::protobuf::internal::ArenaStringPtr::Set((std::string **)this + 9, (std::string *)&google::protobuf::internal::fixed_address_empty_string, v11, v13);
    if ((v10 & 2) == 0)
    {
LABEL_9:
      if ((v10 & 4) == 0)
        goto LABEL_10;
      goto LABEL_22;
    }
  }
  else if ((v10 & 2) == 0)
  {
    goto LABEL_9;
  }
  v14 = (__int128 *)(*((_QWORD *)a2 + 10) & 0xFFFFFFFFFFFFFFFELL);
  *((_DWORD *)this + 10) |= 2u;
  v15 = *((_QWORD *)this + 1);
  v16 = (google::protobuf::internal::ArenaImpl *)(v15 & 0xFFFFFFFFFFFFFFFELL);
  if ((v15 & 1) != 0)
    v16 = *(google::protobuf::internal::ArenaImpl **)v16;
  google::protobuf::internal::ArenaStringPtr::Set((std::string **)this + 10, (std::string *)&google::protobuf::internal::fixed_address_empty_string, v14, v16);
  if ((v10 & 4) == 0)
  {
LABEL_10:
    if ((v10 & 8) == 0)
      goto LABEL_11;
    goto LABEL_25;
  }
LABEL_22:
  v17 = (__int128 *)(*((_QWORD *)a2 + 11) & 0xFFFFFFFFFFFFFFFELL);
  *((_DWORD *)this + 10) |= 4u;
  v18 = *((_QWORD *)this + 1);
  v19 = (google::protobuf::internal::ArenaImpl *)(v18 & 0xFFFFFFFFFFFFFFFELL);
  if ((v18 & 1) != 0)
    v19 = *(google::protobuf::internal::ArenaImpl **)v19;
  google::protobuf::internal::ArenaStringPtr::Set((std::string **)this + 11, (std::string *)&google::protobuf::internal::fixed_address_empty_string, v17, v19);
  if ((v10 & 8) == 0)
  {
LABEL_11:
    if ((v10 & 0x10) == 0)
      goto LABEL_12;
    goto LABEL_28;
  }
LABEL_25:
  v20 = (__int128 *)(*((_QWORD *)a2 + 12) & 0xFFFFFFFFFFFFFFFELL);
  *((_DWORD *)this + 10) |= 8u;
  v21 = *((_QWORD *)this + 1);
  v22 = (google::protobuf::internal::ArenaImpl *)(v21 & 0xFFFFFFFFFFFFFFFELL);
  if ((v21 & 1) != 0)
    v22 = *(google::protobuf::internal::ArenaImpl **)v22;
  google::protobuf::internal::ArenaStringPtr::Set((std::string **)this + 12, (std::string *)&google::protobuf::internal::fixed_address_empty_string, v20, v22);
  if ((v10 & 0x10) == 0)
  {
LABEL_12:
    if ((v10 & 0x20) == 0)
      goto LABEL_13;
LABEL_31:
    v26 = (__int128 *)(*((_QWORD *)a2 + 14) & 0xFFFFFFFFFFFFFFFELL);
    *((_DWORD *)this + 10) |= 0x20u;
    v27 = *((_QWORD *)this + 1);
    v28 = (google::protobuf::internal::ArenaImpl *)(v27 & 0xFFFFFFFFFFFFFFFELL);
    if ((v27 & 1) != 0)
      v28 = *(google::protobuf::internal::ArenaImpl **)v28;
    google::protobuf::internal::ArenaStringPtr::Set((std::string **)this + 14, (std::string *)&google::protobuf::internal::fixed_address_empty_string, v26, v28);
    if ((v10 & 0x40) == 0)
    {
LABEL_14:
      if ((v10 & 0x80) == 0)
        goto LABEL_40;
      goto LABEL_37;
    }
    goto LABEL_34;
  }
LABEL_28:
  v23 = (__int128 *)(*((_QWORD *)a2 + 13) & 0xFFFFFFFFFFFFFFFELL);
  *((_DWORD *)this + 10) |= 0x10u;
  v24 = *((_QWORD *)this + 1);
  v25 = (google::protobuf::internal::ArenaImpl *)(v24 & 0xFFFFFFFFFFFFFFFELL);
  if ((v24 & 1) != 0)
    v25 = *(google::protobuf::internal::ArenaImpl **)v25;
  google::protobuf::internal::ArenaStringPtr::Set((std::string **)this + 13, (std::string *)&google::protobuf::internal::fixed_address_empty_string, v23, v25);
  if ((v10 & 0x20) != 0)
    goto LABEL_31;
LABEL_13:
  if ((v10 & 0x40) == 0)
    goto LABEL_14;
LABEL_34:
  v29 = (__int128 *)(*((_QWORD *)a2 + 15) & 0xFFFFFFFFFFFFFFFELL);
  *((_DWORD *)this + 10) |= 0x40u;
  v30 = *((_QWORD *)this + 1);
  v31 = (google::protobuf::internal::ArenaImpl *)(v30 & 0xFFFFFFFFFFFFFFFELL);
  if ((v30 & 1) != 0)
    v31 = *(google::protobuf::internal::ArenaImpl **)v31;
  google::protobuf::internal::ArenaStringPtr::Set((std::string **)this + 15, (std::string *)&google::protobuf::internal::fixed_address_empty_string, v29, v31);
  if ((v10 & 0x80) != 0)
  {
LABEL_37:
    v32 = (__int128 *)(*((_QWORD *)a2 + 16) & 0xFFFFFFFFFFFFFFFELL);
    *((_DWORD *)this + 10) |= 0x80u;
    v33 = *((_QWORD *)this + 1);
    v34 = (google::protobuf::internal::ArenaImpl *)(v33 & 0xFFFFFFFFFFFFFFFELL);
    if ((v33 & 1) != 0)
      v34 = *(google::protobuf::internal::ArenaImpl **)v34;
    google::protobuf::internal::ArenaStringPtr::Set((std::string **)this + 16, (std::string *)&google::protobuf::internal::fixed_address_empty_string, v32, v34);
  }
LABEL_40:
  if ((v10 & 0xFF00) == 0)
    goto LABEL_51;
  if ((v10 & 0x100) != 0)
  {
    v35 = (__int128 *)(*((_QWORD *)a2 + 17) & 0xFFFFFFFFFFFFFFFELL);
    *((_DWORD *)this + 10) |= 0x100u;
    v36 = *((_QWORD *)this + 1);
    v37 = (google::protobuf::internal::ArenaImpl *)(v36 & 0xFFFFFFFFFFFFFFFELL);
    if ((v36 & 1) != 0)
      v37 = *(google::protobuf::internal::ArenaImpl **)v37;
    google::protobuf::internal::ArenaStringPtr::Set((std::string **)this + 17, (std::string *)&google::protobuf::internal::fixed_address_empty_string, v35, v37);
    if ((v10 & 0x200) == 0)
    {
LABEL_43:
      if ((v10 & 0x400) == 0)
        goto LABEL_44;
      goto LABEL_65;
    }
  }
  else if ((v10 & 0x200) == 0)
  {
    goto LABEL_43;
  }
  v38 = (__int128 *)(*((_QWORD *)a2 + 18) & 0xFFFFFFFFFFFFFFFELL);
  *((_DWORD *)this + 10) |= 0x200u;
  v39 = *((_QWORD *)this + 1);
  v40 = (google::protobuf::internal::ArenaImpl *)(v39 & 0xFFFFFFFFFFFFFFFELL);
  if ((v39 & 1) != 0)
    v40 = *(google::protobuf::internal::ArenaImpl **)v40;
  google::protobuf::internal::ArenaStringPtr::Set((std::string **)this + 18, (std::string *)&google::protobuf::internal::fixed_address_empty_string, v38, v40);
  if ((v10 & 0x400) == 0)
  {
LABEL_44:
    if ((v10 & 0x800) == 0)
      goto LABEL_45;
    goto LABEL_66;
  }
LABEL_65:
  *((_BYTE *)this + 152) = *((_BYTE *)a2 + 152);
  if ((v10 & 0x800) == 0)
  {
LABEL_45:
    if ((v10 & 0x1000) == 0)
      goto LABEL_46;
    goto LABEL_67;
  }
LABEL_66:
  *((_BYTE *)this + 153) = *((_BYTE *)a2 + 153);
  if ((v10 & 0x1000) == 0)
  {
LABEL_46:
    if ((v10 & 0x2000) == 0)
      goto LABEL_47;
    goto LABEL_68;
  }
LABEL_67:
  *((_BYTE *)this + 154) = *((_BYTE *)a2 + 154);
  if ((v10 & 0x2000) == 0)
  {
LABEL_47:
    if ((v10 & 0x4000) == 0)
      goto LABEL_48;
LABEL_69:
    *((_BYTE *)this + 156) = *((_BYTE *)a2 + 156);
    if ((v10 & 0x8000) == 0)
      goto LABEL_50;
    goto LABEL_49;
  }
LABEL_68:
  *((_BYTE *)this + 155) = *((_BYTE *)a2 + 155);
  if ((v10 & 0x4000) != 0)
    goto LABEL_69;
LABEL_48:
  if ((v10 & 0x8000) != 0)
LABEL_49:
    *((_BYTE *)this + 157) = *((_BYTE *)a2 + 157);
LABEL_50:
  *((_DWORD *)this + 10) |= v10;
LABEL_51:
  if ((v10 & 0xF0000) == 0)
    return;
  if ((v10 & 0x10000) != 0)
  {
    *((_BYTE *)this + 158) = *((_BYTE *)a2 + 158);
    if ((v10 & 0x20000) == 0)
    {
LABEL_54:
      if ((v10 & 0x40000) == 0)
        goto LABEL_55;
LABEL_73:
      *((_DWORD *)this + 40) = *((_DWORD *)a2 + 40);
      if ((v10 & 0x80000) == 0)
        goto LABEL_57;
      goto LABEL_56;
    }
  }
  else if ((v10 & 0x20000) == 0)
  {
    goto LABEL_54;
  }
  *((_BYTE *)this + 159) = *((_BYTE *)a2 + 159);
  if ((v10 & 0x40000) != 0)
    goto LABEL_73;
LABEL_55:
  if ((v10 & 0x80000) != 0)
LABEL_56:
    *((_BYTE *)this + 164) = *((_BYTE *)a2 + 164);
LABEL_57:
  *((_DWORD *)this + 10) |= v10;
}

void google::protobuf::SourceCodeInfo::MergeFrom(google::protobuf::SourceCodeInfo *this, const google::protobuf::SourceCodeInfo *a2)
{
  uint64_t v4;
  unsigned int v5;
  const google::protobuf::SourceCodeInfo_Location **v6;
  unsigned int *v7;
  signed int v8;
  signed int *v9;

  v4 = *((_QWORD *)a2 + 1);
  if ((v4 & 1) != 0)
    google::protobuf::internal::InternalMetadata::DoMergeFrom<google::protobuf::UnknownFieldSet>((uint64_t *)this + 1, (const google::protobuf::UnknownFieldSet *)((v4 & 0xFFFFFFFFFFFFFFFELL) + 8));
  v5 = *((_DWORD *)a2 + 6);
  if (v5)
  {
    v6 = (const google::protobuf::SourceCodeInfo_Location **)(*((_QWORD *)a2 + 4) + 8);
    v7 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::SourceCodeInfo *)((char *)this + 16), v5);
    google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<google::protobuf::SourceCodeInfo_Location>::TypeHandler>((google::protobuf::internal::ArenaImpl **)this + 2, (google::protobuf::SourceCodeInfo_Location **)v7, v6, v5, **((_DWORD **)this + 4) - *((_DWORD *)this + 6));
    v8 = *((_DWORD *)this + 6) + v5;
    *((_DWORD *)this + 6) = v8;
    v9 = (signed int *)*((_QWORD *)this + 4);
    if (*v9 < v8)
      *v9 = v8;
  }
}

void google::protobuf::FileDescriptorProto::CopyFrom(google::protobuf::FileDescriptorProto *this, const google::protobuf::Message *a2)
{
  google::protobuf::Message *v4;

  if (a2 != this)
  {
    google::protobuf::FileDescriptorProto::Clear(this);
    google::protobuf::FileDescriptorProto::MergeFrom(this, a2, v4);
  }
}

uint64_t google::protobuf::FileDescriptorProto::IsInitialized(google::protobuf::FileDescriptorProto *this)
{
  uint64_t v2;
  uint64_t v3;
  char IsInitialized;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t result;
  uint64_t v15;

  v2 = *((unsigned int *)this + 14);
  while ((int)v2 >= 1)
  {
    v3 = v2 - 1;
    IsInitialized = google::protobuf::DescriptorProto::IsInitialized(*(google::protobuf::DescriptorProto **)(*((_QWORD *)this + 8) + 8 * v2));
    v2 = v3;
    if ((IsInitialized & 1) == 0)
      return 0;
  }
  v5 = *((unsigned int *)this + 20);
  while ((int)v5 >= 1)
  {
    v6 = v5 - 1;
    v7 = google::protobuf::EnumDescriptorProto::IsInitialized(*(google::protobuf::EnumDescriptorProto **)(*((_QWORD *)this + 11) + 8 * v5));
    v5 = v6;
    if ((v7 & 1) == 0)
      return 0;
  }
  v8 = *((unsigned int *)this + 26);
  while ((int)v8 >= 1)
  {
    v9 = v8 - 1;
    v10 = google::protobuf::ServiceDescriptorProto::IsInitialized(*(google::protobuf::ServiceDescriptorProto **)(*((_QWORD *)this + 14) + 8 * v8));
    v8 = v9;
    if ((v10 & 1) == 0)
      return 0;
  }
  v11 = *((unsigned int *)this + 32);
  while ((int)v11 >= 1)
  {
    v12 = v11 - 1;
    v13 = google::protobuf::FieldDescriptorProto::IsInitialized(*(google::protobuf::FieldDescriptorProto **)(*((_QWORD *)this + 17) + 8 * v11));
    v11 = v12;
    if ((v13 & 1) == 0)
      return 0;
  }
  if ((*((_BYTE *)this + 16) & 8) == 0)
    return 1;
  v15 = *((_QWORD *)this + 25);
  result = google::protobuf::internal::ExtensionSet::IsInitialized((google::protobuf::internal::ExtensionSet *)(v15 + 16));
  if ((_DWORD)result)
  {
    result = google::protobuf::internal::AllAreInitialized<google::protobuf::UninterpretedOption>(v15 + 48);
    if ((_DWORD)result)
      return 1;
  }
  return result;
}

uint64_t google::protobuf::FileOptions::IsInitialized(google::protobuf::FileOptions *this)
{
  uint64_t result;

  result = google::protobuf::internal::ExtensionSet::IsInitialized((google::protobuf::FileOptions *)((char *)this + 16));
  if ((_DWORD)result)
    return google::protobuf::internal::AllAreInitialized<google::protobuf::UninterpretedOption>((uint64_t)this + 48);
  return result;
}

uint64_t google::protobuf::FileDescriptorProto::GetMetadata(google::protobuf::FileDescriptorProto *this)
{
  google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0);
  return off_1EDF46FE8[2];
}

void google::protobuf::DescriptorProto_ExtensionRange::~DescriptorProto_ExtensionRange(google::protobuf::DescriptorProto_ExtensionRange *this)
{
  google::protobuf::ExtensionRangeOptions *v2;

  if (this != (google::protobuf::DescriptorProto_ExtensionRange *)&google::protobuf::_DescriptorProto_ExtensionRange_default_instance_)
  {
    v2 = (google::protobuf::ExtensionRangeOptions *)*((_QWORD *)this + 3);
    if (v2)
    {
      google::protobuf::ExtensionRangeOptions::~ExtensionRangeOptions(v2);
      MEMORY[0x18D76437C]();
    }
  }
  google::protobuf::internal::InternalMetadata::Delete<google::protobuf::UnknownFieldSet>((uint64_t *)this + 1);
}

{
  google::protobuf::DescriptorProto_ExtensionRange::~DescriptorProto_ExtensionRange(this);
  JUMPOUT(0x18D76437CLL);
}

uint64_t google::protobuf::DescriptorProto_ExtensionRange::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 20) = a2;
  return this;
}

google::protobuf::UnknownFieldSet *google::protobuf::DescriptorProto_ExtensionRange::Clear(google::protobuf::UnknownFieldSet *this)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  char v4;

  v1 = (uint64_t)this;
  v2 = *((_DWORD *)this + 4);
  if ((v2 & 1) != 0)
    this = google::protobuf::ExtensionRangeOptions::Clear(*((uint64_t ***)this + 3));
  if ((v2 & 6) != 0)
    *(_QWORD *)(v1 + 32) = 0;
  v4 = *(_BYTE *)(v1 + 8);
  v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if ((v4 & 1) != 0)
    return google::protobuf::internal::InternalMetadata::DoClear<google::protobuf::UnknownFieldSet>((uint64_t *)v3);
  return this;
}

google::protobuf::UnknownFieldSet *google::protobuf::ExtensionRangeOptions::Clear(uint64_t **this)
{
  google::protobuf::UnknownFieldSet *result;
  uint64_t v3;
  google::protobuf::UnknownFieldSet **v4;
  google::protobuf::UnknownFieldSet *v5;
  uint64_t *v6;
  char v7;

  result = (google::protobuf::UnknownFieldSet *)google::protobuf::internal::ExtensionSet::Clear(this + 2);
  v3 = *((unsigned int *)this + 12);
  if ((int)v3 >= 1)
  {
    v4 = (google::protobuf::UnknownFieldSet **)(this[7] + 1);
    do
    {
      v5 = *v4++;
      result = google::protobuf::UninterpretedOption::Clear(v5);
      --v3;
    }
    while (v3);
    *((_DWORD *)this + 12) = 0;
  }
  v7 = *((_BYTE *)this + 8);
  v6 = (uint64_t *)(this + 1);
  if ((v7 & 1) != 0)
    return google::protobuf::internal::InternalMetadata::DoClear<google::protobuf::UnknownFieldSet>(v6);
  return result;
}

google::protobuf::internal *google::protobuf::DescriptorProto_ExtensionRange::_InternalParse(uint64_t a1, google::protobuf::internal *a2, int32x2_t *this)
{
  int v5;
  google::protobuf::internal *v6;
  _QWORD *v8;
  unsigned int v9;
  unsigned int v10;
  BOOL v12;
  google::protobuf::UnknownFieldSet *v13;
  google::protobuf::ExtensionRangeOptions *v14;
  google::protobuf::internal::ArenaImpl *v15;
  const char *v16;
  google::protobuf::internal *v17;
  uint64_t v18;
  google::protobuf::internal *v19;
  int v20;
  uint64_t v21;
  google::protobuf::internal *v22;
  int v23;
  uint64_t v24;
  char *SizeFallback;
  int32x2_t v26;
  int v27;
  __int32 v28;
  BOOL v29;
  google::protobuf::internal *v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  google::protobuf::internal *v34;
  google::protobuf::UnknownFieldSet *v35;

  v34 = a2;
  v5 = 0;
  if ((google::protobuf::internal::EpsCopyInputStream::DoneWithCheck((google::protobuf::internal::EpsCopyInputStream *)this, (const char **)&v34, this[11].i32[1]) & 1) == 0)
  {
    v8 = (_QWORD *)(a1 + 8);
    do
    {
      v6 = (google::protobuf::internal *)((char *)v34 + 1);
      v9 = *(unsigned __int8 *)v34;
      if (*(char *)v34 < 0)
      {
        v9 = v9 + (*(unsigned __int8 *)v6 << 7) - 128;
        if (*(char *)v6 < 0)
        {
          v6 = (google::protobuf::internal *)((char *)v34 + 3);
          v24 = -21;
          while (1)
          {
            v9 += (*((unsigned __int8 *)v6 - 1) - 1) << (v24 + 35);
            if ((*((char *)v6 - 1) & 0x80000000) == 0)
              break;
            v6 = (google::protobuf::internal *)((char *)v6 + 1);
            v24 += 7;
            if (!v24)
              goto LABEL_59;
          }
        }
        else
        {
          v6 = (google::protobuf::internal *)((char *)v34 + 2);
        }
      }
      v34 = v6;
      v10 = v9 >> 3;
      if (v9 >> 3 == 3)
      {
        if (v9 == 26)
        {
          *(_DWORD *)(a1 + 16) |= 1u;
          v14 = *(google::protobuf::ExtensionRangeOptions **)(a1 + 24);
          if (!v14)
          {
            v15 = (google::protobuf::internal::ArenaImpl *)(*v8 & 0xFFFFFFFFFFFFFFFELL);
            if ((*v8 & 1) != 0)
              v15 = *(google::protobuf::internal::ArenaImpl **)v15;
            v14 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::ExtensionRangeOptions>(v15);
            *(_QWORD *)(a1 + 24) = v14;
            v6 = v34;
          }
          v16 = (const char *)*(unsigned __int8 *)v6;
          if (*(char *)v6 < 0)
          {
            SizeFallback = google::protobuf::internal::ReadSizeFallback(v6, v16);
            if (!SizeFallback)
              goto LABEL_59;
            v17 = (google::protobuf::internal *)SizeFallback;
          }
          else
          {
            v17 = (google::protobuf::internal *)((char *)v6 + 1);
          }
          v26 = this[1];
          v27 = (_DWORD)v16 + (_DWORD)v17 - v26.i32[0];
          *this = (int32x2_t)(*(_QWORD *)&v26 + (v27 & (v27 >> 31)));
          v28 = this[3].i32[1];
          this[3].i32[1] = v27;
          v26.i32[0] = this[11].i32[0];
          v29 = __OFSUB__(v26.i32[0]--, 1);
          this[11].i32[0] = v26.i32[0];
          if (v26.i32[0] < 0 != v29
            || (v30 = google::protobuf::ExtensionRangeOptions::_InternalParse((uint64_t)v14, v17, (google::protobuf::internal::EpsCopyInputStream *)this)) == 0|| (++this[11].i32[0], this[10].i32[0]))
          {
LABEL_59:
            v6 = 0;
            goto LABEL_3;
          }
          v31 = this[3].i32[1] + v28 - v27;
          this[3].i32[1] = v31;
          *this = (int32x2_t)(*(_QWORD *)&this[1] + (v31 & (v31 >> 31)));
          v34 = v30;
          continue;
        }
      }
      else if (v10 == 2)
      {
        if (v9 == 16)
        {
          v5 |= 4u;
          v19 = (google::protobuf::internal *)((char *)v6 + 1);
          LODWORD(v18) = *(unsigned __int8 *)v6;
          if ((v18 & 0x80) != 0)
          {
            v20 = *(char *)v19;
            v18 = v18 + (v20 << 7) - 128;
            if (v20 < 0)
            {
              v19 = (google::protobuf::internal *)((char *)v6 + 3);
              v32 = 14;
              while (1)
              {
                v18 += (*((unsigned __int8 *)v19 - 1) - 1) << v32;
                if ((*((char *)v19 - 1) & 0x80000000) == 0)
                  break;
                v19 = (google::protobuf::internal *)((char *)v19 + 1);
                v32 += 7;
                if (v32 == 70)
                {
                  v6 = 0;
                  *(_DWORD *)(a1 + 36) = 0;
                  goto LABEL_3;
                }
              }
            }
            else
            {
              v19 = (google::protobuf::internal *)((char *)v6 + 2);
            }
          }
          v34 = v19;
          *(_DWORD *)(a1 + 36) = v18;
          continue;
        }
      }
      else if (v10 == 1 && v9 == 8)
      {
        v5 |= 2u;
        v22 = (google::protobuf::internal *)((char *)v6 + 1);
        LODWORD(v21) = *(unsigned __int8 *)v6;
        if ((v21 & 0x80) != 0)
        {
          v23 = *(char *)v22;
          v21 = v21 + (v23 << 7) - 128;
          if (v23 < 0)
          {
            v22 = (google::protobuf::internal *)((char *)v6 + 3);
            v33 = 14;
            while (1)
            {
              v21 += (*((unsigned __int8 *)v22 - 1) - 1) << v33;
              if ((*((char *)v22 - 1) & 0x80000000) == 0)
                break;
              v22 = (google::protobuf::internal *)((char *)v22 + 1);
              v33 += 7;
              if (v33 == 70)
              {
                v6 = 0;
                *(_DWORD *)(a1 + 32) = 0;
                goto LABEL_3;
              }
            }
          }
          else
          {
            v22 = (google::protobuf::internal *)((char *)v6 + 2);
          }
        }
        v34 = v22;
        *(_DWORD *)(a1 + 32) = v21;
        continue;
      }
      if (v9)
        v12 = (v9 & 7) == 4;
      else
        v12 = 1;
      if (v12)
      {
        this[10].i32[0] = v9 - 1;
        goto LABEL_3;
      }
      if ((*v8 & 1) != 0)
      {
        v13 = (google::protobuf::UnknownFieldSet *)((*v8 & 0xFFFFFFFFFFFFFFFELL) + 8);
      }
      else
      {
        v13 = (google::protobuf::UnknownFieldSet *)google::protobuf::internal::InternalMetadata::mutable_unknown_fields_slow<google::protobuf::UnknownFieldSet>((uint64_t *)(a1 + 8));
        v6 = v34;
      }
      v35 = v13;
      v34 = google::protobuf::internal::FieldParser<google::protobuf::internal::UnknownFieldParserHelper>(v9, &v35, (uint64_t *)v6, this);
      if (!v34)
        goto LABEL_59;
    }
    while (!google::protobuf::internal::EpsCopyInputStream::DoneWithCheck((google::protobuf::internal::EpsCopyInputStream *)this, (const char **)&v34, this[11].i32[1]));
  }
  v6 = v34;
LABEL_3:
  *(_DWORD *)(a1 + 16) |= v5;
  return v6;
}

const google::protobuf::UnknownFieldSet *google::protobuf::DescriptorProto_ExtensionRange::_InternalSerialize(google::protobuf::DescriptorProto_ExtensionRange *this, unsigned __int8 *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  google::protobuf::ExtensionRangeOptions *v15;
  unsigned int v16;
  unsigned __int8 *v17;
  unsigned int v18;
  unsigned int v19;
  unsigned int v20;
  uint64_t v21;

  v6 = *((_DWORD *)this + 4);
  if ((v6 & 2) != 0)
  {
    if (*(_QWORD *)a3 <= (unint64_t)a2)
      a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
    v7 = *((int *)this + 8);
    *a2 = 8;
    if (v7 > 0x7F)
    {
      a2[1] = v7 | 0x80;
      v8 = v7 >> 7;
      if (v7 >> 14)
      {
        a2 += 3;
        do
        {
          *(a2 - 1) = v8 | 0x80;
          v9 = v8 >> 7;
          ++a2;
          v10 = v8 >> 14;
          v8 >>= 7;
        }
        while (v10);
        *(a2 - 1) = v9;
        if ((v6 & 4) != 0)
          goto LABEL_16;
      }
      else
      {
        a2[2] = v8;
        a2 += 3;
        if ((v6 & 4) != 0)
          goto LABEL_16;
      }
    }
    else
    {
      a2[1] = v7;
      a2 += 2;
      if ((v6 & 4) != 0)
        goto LABEL_16;
    }
LABEL_3:
    if ((v6 & 1) == 0)
      goto LABEL_37;
    goto LABEL_27;
  }
  if ((v6 & 4) == 0)
    goto LABEL_3;
LABEL_16:
  if (*(_QWORD *)a3 <= (unint64_t)a2)
    a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
  v11 = *((int *)this + 9);
  *a2 = 16;
  if (v11 > 0x7F)
  {
    a2[1] = v11 | 0x80;
    v12 = v11 >> 7;
    if (v11 >> 14)
    {
      a2 += 3;
      do
      {
        *(a2 - 1) = v12 | 0x80;
        v13 = v12 >> 7;
        ++a2;
        v14 = v12 >> 14;
        v12 >>= 7;
      }
      while (v14);
      *(a2 - 1) = v13;
      if ((v6 & 1) == 0)
        goto LABEL_37;
    }
    else
    {
      a2[2] = v12;
      a2 += 3;
      if ((v6 & 1) == 0)
        goto LABEL_37;
    }
  }
  else
  {
    a2[1] = v11;
    a2 += 2;
    if ((v6 & 1) == 0)
      goto LABEL_37;
  }
LABEL_27:
  if (*(_QWORD *)a3 <= (unint64_t)a2)
    a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
  v15 = (google::protobuf::ExtensionRangeOptions *)*((_QWORD *)this + 3);
  *a2 = 26;
  v16 = *((_DWORD *)v15 + 16);
  if (v16 > 0x7F)
  {
    a2[1] = v16 | 0x80;
    v18 = v16 >> 7;
    if (v16 >> 14)
    {
      v17 = a2 + 3;
      do
      {
        *(v17 - 1) = v18 | 0x80;
        v19 = v18 >> 7;
        ++v17;
        v20 = v18 >> 14;
        v18 >>= 7;
      }
      while (v20);
      *(v17 - 1) = v19;
    }
    else
    {
      a2[2] = v18;
      v17 = a2 + 3;
    }
  }
  else
  {
    a2[1] = v16;
    v17 = a2 + 2;
  }
  a2 = (unsigned __int8 *)google::protobuf::ExtensionRangeOptions::_InternalSerialize(v15, v17, a3);
LABEL_37:
  v21 = *((_QWORD *)this + 1);
  if ((v21 & 1) != 0)
    return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v21 & 0xFFFFFFFFFFFFFFFELL) + 8), (const google::protobuf::UnknownFieldSet *)a2, a3, a4);
  else
    return (const google::protobuf::UnknownFieldSet *)a2;
}

const InternalMetadata *google::protobuf::DescriptorProto_ExtensionRange::ByteSizeLong(google::protobuf::DescriptorProto_ExtensionRange *this, uint64_t a2, uint64_t a3, CachedSize *a4)
{
  int v5;
  const InternalMetadata *v6;
  const InternalMetadata *v7;
  int v8;
  uint64_t v9;
  int v10;
  uint64_t v11;

  v5 = *((_DWORD *)this + 4);
  if ((v5 & 7) == 0)
  {
    v6 = 0;
    goto LABEL_16;
  }
  if ((v5 & 1) != 0)
  {
    v7 = google::protobuf::ExtensionRangeOptions::ByteSizeLong(*((google::protobuf::ExtensionRangeOptions **)this + 3));
    v6 = (const InternalMetadata *)((char *)&v7->var0 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1);
    if ((v5 & 2) == 0)
      goto LABEL_11;
  }
  else
  {
    v6 = 0;
    if ((v5 & 2) == 0)
      goto LABEL_11;
  }
  v8 = *((_DWORD *)this + 8);
  if (v8 < 0)
    v9 = 11;
  else
    v9 = ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  v6 = (const InternalMetadata *)((char *)v6 + v9);
LABEL_11:
  if ((v5 & 4) != 0)
  {
    v10 = *((_DWORD *)this + 9);
    if (v10 < 0)
      v11 = 11;
    else
      v11 = ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
    v6 = (const InternalMetadata *)((char *)v6 + v11);
  }
LABEL_16:
  if ((*((_BYTE *)this + 8) & 1) != 0)
    return (const InternalMetadata *)google::protobuf::internal::ComputeUnknownFieldsSize((google::protobuf::DescriptorProto_ExtensionRange *)((char *)this + 8), v6, (_DWORD *)this + 5, a4);
  *((_DWORD *)this + 5) = (_DWORD)v6;
  return v6;
}

void google::protobuf::DescriptorProto_ExtensionRange::MergeFrom(google::protobuf::DescriptorProto_ExtensionRange *this, const google::protobuf::Message *a2, google::protobuf::Message *a3)
{
  if (*(void (***)(google::protobuf::DescriptorProto_ExtensionRange *__hidden))a2 == &off_1E1BF8830)
    google::protobuf::DescriptorProto_ExtensionRange::MergeFrom(this, a2);
  else
    google::protobuf::internal::ReflectionOps::Merge(a2, this, a3);
}

void google::protobuf::DescriptorProto_ExtensionRange::MergeFrom(google::protobuf::DescriptorProto_ExtensionRange *this, const google::protobuf::DescriptorProto_ExtensionRange *a2)
{
  _QWORD *v4;
  uint64_t v5;
  int v6;
  google::protobuf::ExtensionRangeOptions *v7;
  google::protobuf::internal::ArenaImpl *v8;
  const google::protobuf::ExtensionRangeOptions *v9;

  v4 = (_QWORD *)((char *)this + 8);
  v5 = *((_QWORD *)a2 + 1);
  if ((v5 & 1) != 0)
    google::protobuf::internal::InternalMetadata::DoMergeFrom<google::protobuf::UnknownFieldSet>((uint64_t *)this + 1, (const google::protobuf::UnknownFieldSet *)((v5 & 0xFFFFFFFFFFFFFFFELL) + 8));
  v6 = *((_DWORD *)a2 + 4);
  if ((v6 & 7) != 0)
  {
    if ((v6 & 1) != 0)
    {
      *((_DWORD *)this + 4) |= 1u;
      v7 = (google::protobuf::ExtensionRangeOptions *)*((_QWORD *)this + 3);
      if (!v7)
      {
        v8 = (google::protobuf::internal::ArenaImpl *)(*v4 & 0xFFFFFFFFFFFFFFFELL);
        if ((*v4 & 1) != 0)
          v8 = *(google::protobuf::internal::ArenaImpl **)v8;
        v7 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::ExtensionRangeOptions>(v8);
        *((_QWORD *)this + 3) = v7;
      }
      if (*((_QWORD *)a2 + 3))
        v9 = (const google::protobuf::ExtensionRangeOptions *)*((_QWORD *)a2 + 3);
      else
        v9 = (const google::protobuf::ExtensionRangeOptions *)&google::protobuf::_ExtensionRangeOptions_default_instance_;
      google::protobuf::ExtensionRangeOptions::MergeFrom(v7, v9);
      if ((v6 & 2) == 0)
      {
LABEL_6:
        if ((v6 & 4) == 0)
        {
LABEL_8:
          *((_DWORD *)this + 4) |= v6;
          return;
        }
LABEL_7:
        *((_DWORD *)this + 9) = *((_DWORD *)a2 + 9);
        goto LABEL_8;
      }
    }
    else if ((v6 & 2) == 0)
    {
      goto LABEL_6;
    }
    *((_DWORD *)this + 8) = *((_DWORD *)a2 + 8);
    if ((v6 & 4) == 0)
      goto LABEL_8;
    goto LABEL_7;
  }
}

void google::protobuf::ExtensionRangeOptions::MergeFrom(google::protobuf::ExtensionRangeOptions *this, const google::protobuf::ExtensionRangeOptions *a2)
{
  uint64_t v4;
  unsigned int v5;
  google::protobuf::UninterpretedOption **v6;
  unsigned int *v7;
  signed int v8;
  signed int *v9;

  google::protobuf::internal::ExtensionSet::MergeFrom((google::protobuf::ExtensionRangeOptions *)((char *)this + 16), (const google::protobuf::ExtensionRangeOptions *)((char *)a2 + 16));
  v4 = *((_QWORD *)a2 + 1);
  if ((v4 & 1) != 0)
    google::protobuf::internal::InternalMetadata::DoMergeFrom<google::protobuf::UnknownFieldSet>((uint64_t *)this + 1, (const google::protobuf::UnknownFieldSet *)((v4 & 0xFFFFFFFFFFFFFFFELL) + 8));
  v5 = *((_DWORD *)a2 + 12);
  if (v5)
  {
    v6 = (google::protobuf::UninterpretedOption **)(*((_QWORD *)a2 + 7) + 8);
    v7 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::ExtensionRangeOptions *)((char *)this + 40), v5);
    google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::TypeHandler>((google::protobuf::internal::ArenaImpl **)this + 5, (google::protobuf::UninterpretedOption **)v7, v6, v5, **((_DWORD **)this + 7) - *((_DWORD *)this + 12));
    v8 = *((_DWORD *)this + 12) + v5;
    *((_DWORD *)this + 12) = v8;
    v9 = (signed int *)*((_QWORD *)this + 7);
    if (*v9 < v8)
      *v9 = v8;
  }
}

void google::protobuf::DescriptorProto_ExtensionRange::CopyFrom(google::protobuf::DescriptorProto_ExtensionRange *this, const google::protobuf::Message *a2)
{
  google::protobuf::Message *v4;

  if (a2 != this)
  {
    google::protobuf::DescriptorProto_ExtensionRange::Clear(this);
    google::protobuf::DescriptorProto_ExtensionRange::MergeFrom(this, a2, v4);
  }
}

uint64_t google::protobuf::DescriptorProto_ExtensionRange::IsInitialized(google::protobuf::DescriptorProto_ExtensionRange *this)
{
  uint64_t v1;
  uint64_t result;

  if ((*((_BYTE *)this + 16) & 1) == 0)
    return 1;
  v1 = *((_QWORD *)this + 3);
  result = google::protobuf::internal::ExtensionSet::IsInitialized((google::protobuf::internal::ExtensionSet *)(v1 + 16));
  if ((_DWORD)result)
  {
    result = google::protobuf::internal::AllAreInitialized<google::protobuf::UninterpretedOption>(v1 + 40);
    if ((_DWORD)result)
      return 1;
  }
  return result;
}

uint64_t google::protobuf::ExtensionRangeOptions::IsInitialized(google::protobuf::ExtensionRangeOptions *this)
{
  uint64_t result;

  result = google::protobuf::internal::ExtensionSet::IsInitialized((google::protobuf::ExtensionRangeOptions *)((char *)this + 16));
  if ((_DWORD)result)
    return google::protobuf::internal::AllAreInitialized<google::protobuf::UninterpretedOption>((uint64_t)this + 40);
  return result;
}

uint64_t google::protobuf::DescriptorProto_ExtensionRange::GetMetadata(google::protobuf::DescriptorProto_ExtensionRange *this)
{
  google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0);
  return off_1EDF46FE8[4];
}

void google::protobuf::DescriptorProto_ReservedRange::~DescriptorProto_ReservedRange(google::protobuf::DescriptorProto_ReservedRange *this)
{
  google::protobuf::internal::InternalMetadata::Delete<google::protobuf::UnknownFieldSet>((uint64_t *)this + 1);
}

{
  google::protobuf::internal::InternalMetadata::Delete<google::protobuf::UnknownFieldSet>((uint64_t *)this + 1);
  JUMPOUT(0x18D76437CLL);
}

uint64_t google::protobuf::DescriptorProto_ReservedRange::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 20) = a2;
  return this;
}

google::protobuf::UnknownFieldSet *google::protobuf::DescriptorProto_ReservedRange::Clear(google::protobuf::DescriptorProto_ReservedRange *this)
{
  google::protobuf::UnknownFieldSet *result;
  char v2;

  if ((*((_BYTE *)this + 16) & 3) != 0)
    *((_QWORD *)this + 3) = 0;
  v2 = *((_BYTE *)this + 8);
  result = (google::protobuf::DescriptorProto_ReservedRange *)((char *)this + 8);
  *((_DWORD *)result + 2) = 0;
  if ((v2 & 1) != 0)
    return google::protobuf::internal::InternalMetadata::DoClear<google::protobuf::UnknownFieldSet>((uint64_t *)result);
  return result;
}

char *google::protobuf::DescriptorProto_ReservedRange::_InternalParse(uint64_t a1, const char *a2, int32x2_t *this)
{
  int v5;
  char *v6;
  _QWORD *v8;
  unsigned int v9;
  BOOL v11;
  google::protobuf::UnknownFieldSet *v12;
  uint64_t v13;
  const char *v14;
  int v15;
  uint64_t v16;
  const char *v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  google::protobuf::internal::EpsCopyInputStream *v22;
  google::protobuf::UnknownFieldSet *v23;

  v22 = (google::protobuf::internal::EpsCopyInputStream *)a2;
  v5 = 0;
  if ((google::protobuf::internal::EpsCopyInputStream::DoneWithCheck((google::protobuf::internal::EpsCopyInputStream *)this, (const char **)&v22, this[11].i32[1]) & 1) == 0)
  {
    v8 = (_QWORD *)(a1 + 8);
    do
    {
      v6 = (char *)v22 + 1;
      v9 = *(unsigned __int8 *)v22;
      if (*(char *)v22 < 0)
      {
        v9 = v9 + (*v6 << 7) - 128;
        if (*v6 < 0)
        {
          v6 = (char *)v22 + 3;
          v19 = -21;
          while (1)
          {
            v9 += (*(v6 - 1) - 1) << (v19 + 35);
            if ((*(v6 - 1) & 0x80000000) == 0)
              break;
            ++v6;
            v19 += 7;
            if (!v19)
              goto LABEL_46;
          }
        }
        else
        {
          v6 = (char *)v22 + 2;
        }
      }
      v22 = (google::protobuf::internal::EpsCopyInputStream *)v6;
      if (v9 >> 3 == 2)
      {
        if (v9 == 16)
        {
          v5 |= 2u;
          v14 = v6 + 1;
          LODWORD(v13) = *v6;
          if ((v13 & 0x80) != 0)
          {
            v15 = *v14;
            v13 = v13 + (v15 << 7) - 128;
            if (v15 < 0)
            {
              v14 = v6 + 3;
              v20 = 14;
              while (1)
              {
                v13 += (*((unsigned __int8 *)v14 - 1) - 1) << v20;
                if ((*(v14 - 1) & 0x80000000) == 0)
                  break;
                ++v14;
                v20 += 7;
                if (v20 == 70)
                {
                  v6 = 0;
                  *(_DWORD *)(a1 + 28) = 0;
                  goto LABEL_3;
                }
              }
            }
            else
            {
              v14 = v6 + 2;
            }
          }
          v22 = (google::protobuf::internal::EpsCopyInputStream *)v14;
          *(_DWORD *)(a1 + 28) = v13;
          continue;
        }
      }
      else if (v9 >> 3 == 1 && v9 == 8)
      {
        v5 |= 1u;
        v17 = v6 + 1;
        LODWORD(v16) = *v6;
        if ((v16 & 0x80) != 0)
        {
          v18 = *v17;
          v16 = v16 + (v18 << 7) - 128;
          if (v18 < 0)
          {
            v17 = v6 + 3;
            v21 = 14;
            while (1)
            {
              v16 += (*((unsigned __int8 *)v17 - 1) - 1) << v21;
              if ((*(v17 - 1) & 0x80000000) == 0)
                break;
              ++v17;
              v21 += 7;
              if (v21 == 70)
              {
                v6 = 0;
                *(_DWORD *)(a1 + 24) = 0;
                goto LABEL_3;
              }
            }
          }
          else
          {
            v17 = v6 + 2;
          }
        }
        v22 = (google::protobuf::internal::EpsCopyInputStream *)v17;
        *(_DWORD *)(a1 + 24) = v16;
        continue;
      }
      if (v9)
        v11 = (v9 & 7) == 4;
      else
        v11 = 1;
      if (v11)
      {
        this[10].i32[0] = v9 - 1;
        goto LABEL_3;
      }
      if ((*v8 & 1) != 0)
      {
        v12 = (google::protobuf::UnknownFieldSet *)((*v8 & 0xFFFFFFFFFFFFFFFELL) + 8);
      }
      else
      {
        v12 = (google::protobuf::UnknownFieldSet *)google::protobuf::internal::InternalMetadata::mutable_unknown_fields_slow<google::protobuf::UnknownFieldSet>((uint64_t *)(a1 + 8));
        v6 = (char *)v22;
      }
      v23 = v12;
      v22 = google::protobuf::internal::FieldParser<google::protobuf::internal::UnknownFieldParserHelper>(v9, &v23, (uint64_t *)v6, this);
      if (!v22)
      {
LABEL_46:
        v6 = 0;
        goto LABEL_3;
      }
    }
    while (!google::protobuf::internal::EpsCopyInputStream::DoneWithCheck((google::protobuf::internal::EpsCopyInputStream *)this, (const char **)&v22, this[11].i32[1]));
  }
  v6 = (char *)v22;
LABEL_3:
  *(_DWORD *)(a1 + 16) |= v5;
  return v6;
}

const google::protobuf::UnknownFieldSet *google::protobuf::DescriptorProto_ReservedRange::_InternalSerialize(google::protobuf::DescriptorProto_ReservedRange *this, unsigned __int8 *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;

  v6 = *((_DWORD *)this + 4);
  if ((v6 & 1) == 0)
  {
LABEL_9:
    if ((v6 & 2) == 0)
      goto LABEL_23;
    goto LABEL_10;
  }
  if (*(_QWORD *)a3 <= (unint64_t)a2)
    a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
  v7 = *((int *)this + 6);
  *a2 = 8;
  if (v7 <= 0x7F)
  {
    a2[1] = v7;
    a2 += 2;
    if ((v6 & 2) == 0)
      goto LABEL_23;
    goto LABEL_10;
  }
  a2[1] = v7 | 0x80;
  v8 = v7 >> 7;
  if (!(v7 >> 14))
  {
    a2[2] = v8;
    a2 += 3;
    goto LABEL_9;
  }
  a2 += 3;
  do
  {
    *(a2 - 1) = v8 | 0x80;
    v11 = v8 >> 7;
    ++a2;
    v12 = v8 >> 14;
    v8 >>= 7;
  }
  while (v12);
  *(a2 - 1) = v11;
  if ((v6 & 2) == 0)
    goto LABEL_23;
LABEL_10:
  if (*(_QWORD *)a3 <= (unint64_t)a2)
    a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
  v9 = *((int *)this + 7);
  *a2 = 16;
  if (v9 > 0x7F)
  {
    a2[1] = v9 | 0x80;
    v10 = v9 >> 7;
    if (v9 >> 14)
    {
      a2 += 3;
      do
      {
        *(a2 - 1) = v10 | 0x80;
        v13 = v10 >> 7;
        ++a2;
        v14 = v10 >> 14;
        v10 >>= 7;
      }
      while (v14);
      *(a2 - 1) = v13;
    }
    else
    {
      a2[2] = v10;
      a2 += 3;
    }
  }
  else
  {
    a2[1] = v9;
    a2 += 2;
  }
LABEL_23:
  v15 = *((_QWORD *)this + 1);
  if ((v15 & 1) != 0)
    return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v15 & 0xFFFFFFFFFFFFFFFELL) + 8), (const google::protobuf::UnknownFieldSet *)a2, a3, a4);
  else
    return (const google::protobuf::UnknownFieldSet *)a2;
}

uint64_t google::protobuf::DescriptorProto_ReservedRange::ByteSizeLong(google::protobuf::DescriptorProto_ReservedRange *this, uint64_t a2, uint64_t a3, CachedSize *a4)
{
  int v4;
  uint64_t v5;
  int v6;
  int v7;
  uint64_t v8;

  v4 = *((_DWORD *)this + 4);
  if ((v4 & 3) == 0)
  {
    v5 = 0;
    goto LABEL_14;
  }
  if ((v4 & 1) != 0)
  {
    v6 = *((_DWORD *)this + 6);
    if (v6 < 0)
    {
      v5 = 11;
      if ((v4 & 2) == 0)
        goto LABEL_14;
    }
    else
    {
      v5 = ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v4 & 2) == 0)
        goto LABEL_14;
    }
  }
  else
  {
    v5 = 0;
    if ((v4 & 2) == 0)
      goto LABEL_14;
  }
  v7 = *((_DWORD *)this + 7);
  if (v7 < 0)
    v8 = 11;
  else
    v8 = ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
  v5 += v8;
LABEL_14:
  if ((*((_BYTE *)this + 8) & 1) != 0)
    return google::protobuf::internal::ComputeUnknownFieldsSize((google::protobuf::DescriptorProto_ReservedRange *)((char *)this + 8), (const InternalMetadata *)v5, (_DWORD *)this + 5, a4);
  *((_DWORD *)this + 5) = v5;
  return v5;
}

void google::protobuf::DescriptorProto_ReservedRange::MergeFrom(google::protobuf::DescriptorProto_ReservedRange *this, const google::protobuf::Message *a2, google::protobuf::Message *a3)
{
  if (*(void (***)(google::protobuf::DescriptorProto_ReservedRange *__hidden))a2 == &off_1E1BF86F8)
    google::protobuf::DescriptorProto_ReservedRange::MergeFrom(this, a2);
  else
    google::protobuf::internal::ReflectionOps::Merge(a2, this, a3);
}

void google::protobuf::DescriptorProto_ReservedRange::MergeFrom(google::protobuf::DescriptorProto_ReservedRange *this, const google::protobuf::DescriptorProto_ReservedRange *a2)
{
  uint64_t v4;
  int v5;

  v4 = *((_QWORD *)a2 + 1);
  if ((v4 & 1) != 0)
    google::protobuf::internal::InternalMetadata::DoMergeFrom<google::protobuf::UnknownFieldSet>((uint64_t *)this + 1, (const google::protobuf::UnknownFieldSet *)((v4 & 0xFFFFFFFFFFFFFFFELL) + 8));
  v5 = *((_DWORD *)a2 + 4);
  if ((v5 & 3) != 0)
  {
    if ((v5 & 1) != 0)
      *((_DWORD *)this + 6) = *((_DWORD *)a2 + 6);
    if ((v5 & 2) != 0)
      *((_DWORD *)this + 7) = *((_DWORD *)a2 + 7);
    *((_DWORD *)this + 4) |= v5;
  }
}

void google::protobuf::DescriptorProto_ReservedRange::CopyFrom(google::protobuf::DescriptorProto_ReservedRange *this, const google::protobuf::Message *a2)
{
  google::protobuf::Message *v4;

  if (a2 != this)
  {
    google::protobuf::DescriptorProto_ReservedRange::Clear(this);
    google::protobuf::DescriptorProto_ReservedRange::MergeFrom(this, a2, v4);
  }
}

uint64_t google::protobuf::DescriptorProto_ReservedRange::IsInitialized(google::protobuf::DescriptorProto_ReservedRange *this)
{
  return 1;
}

uint64_t google::protobuf::DescriptorProto_ReservedRange::GetMetadata(google::protobuf::DescriptorProto_ReservedRange *this)
{
  google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0);
  return off_1EDF46FE8[6];
}

google::protobuf::DescriptorProto *google::protobuf::DescriptorProto::DescriptorProto(google::protobuf::DescriptorProto *this, Arena *a2)
{
  *(_QWORD *)this = &off_1E1BF7B48;
  *((_QWORD *)this + 1) = a2;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = a2;
  *((_QWORD *)this + 6) = a2;
  *((_QWORD *)this + 4) = 0;
  *((_QWORD *)this + 5) = 0;
  *((_QWORD *)this + 7) = 0;
  *((_QWORD *)this + 8) = 0;
  *((_QWORD *)this + 9) = a2;
  *((_QWORD *)this + 10) = 0;
  *((_QWORD *)this + 11) = 0;
  *((_QWORD *)this + 12) = a2;
  *((_QWORD *)this + 13) = 0;
  *((_QWORD *)this + 14) = 0;
  *((_QWORD *)this + 15) = a2;
  *((_QWORD *)this + 16) = 0;
  *((_QWORD *)this + 17) = 0;
  *((_QWORD *)this + 24) = a2;
  *((_QWORD *)this + 18) = a2;
  *((_QWORD *)this + 19) = 0;
  *((_QWORD *)this + 20) = 0;
  *((_QWORD *)this + 21) = a2;
  *((_QWORD *)this + 22) = 0;
  *((_QWORD *)this + 23) = 0;
  *((_QWORD *)this + 25) = 0;
  *((_QWORD *)this + 26) = 0;
  if (atomic_load(scc_info_DescriptorProto_google_2fprotobuf_2fdescriptor_2eproto))
    google::protobuf::internal::InitSCCImpl(scc_info_DescriptorProto_google_2fprotobuf_2fdescriptor_2eproto);
  *((_QWORD *)this + 27) = &google::protobuf::internal::fixed_address_empty_string;
  *((_QWORD *)this + 28) = 0;
  return this;
}

void sub_1888A7880(_Unwind_Exception *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;

  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>(v8);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ReservedRange>::TypeHandler>(v7);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<google::protobuf::OneofDescriptorProto>::TypeHandler>(v6);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::TypeHandler>(v5);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ExtensionRange>::TypeHandler>(v4);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto>::TypeHandler>(v3);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto>::TypeHandler>(v2);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::TypeHandler>(v1);
  _Unwind_Resume(a1);
}

void google::protobuf::DescriptorProto::~DescriptorProto(google::protobuf::DescriptorProto *this)
{
  uint64_t v2;
  google::protobuf::MessageOptions *v3;

  v2 = *((_QWORD *)this + 27);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v2 + 23) < 0)
      operator delete(*(void **)v2);
    MEMORY[0x18D76437C](v2, 0x1012C40EC159624);
  }
  if (this != (google::protobuf::DescriptorProto *)&google::protobuf::_DescriptorProto_default_instance_)
  {
    v3 = (google::protobuf::MessageOptions *)*((_QWORD *)this + 28);
    if (v3)
    {
      google::protobuf::MessageOptions::~MessageOptions(v3);
      MEMORY[0x18D76437C]();
    }
  }
  google::protobuf::internal::InternalMetadata::Delete<google::protobuf::UnknownFieldSet>((uint64_t *)this + 1);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((_QWORD *)this + 24);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ReservedRange>::TypeHandler>((_QWORD *)this + 21);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<google::protobuf::OneofDescriptorProto>::TypeHandler>((_QWORD *)this + 18);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::TypeHandler>((_QWORD *)this + 15);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ExtensionRange>::TypeHandler>((_QWORD *)this + 12);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto>::TypeHandler>((_QWORD *)this + 9);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto>::TypeHandler>((char *)this + 48);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::TypeHandler>((_QWORD *)this + 3);
}

{
  google::protobuf::DescriptorProto::~DescriptorProto(this);
  JUMPOUT(0x18D76437CLL);
}

uint64_t google::protobuf::DescriptorProto::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 20) = a2;
  return this;
}

google::protobuf::UnknownFieldSet *google::protobuf::DescriptorProto::Clear(google::protobuf::DescriptorProto *this)
{
  uint64_t v2;
  google::protobuf::UnknownFieldSet **v3;
  google::protobuf::UnknownFieldSet *v4;
  uint64_t v5;
  google::protobuf::DescriptorProto **v6;
  google::protobuf::DescriptorProto *v7;
  uint64_t v8;
  google::protobuf::EnumDescriptorProto **v9;
  google::protobuf::EnumDescriptorProto *v10;
  uint64_t v11;
  google::protobuf::UnknownFieldSet **v12;
  google::protobuf::UnknownFieldSet *v13;
  uint64_t v14;
  google::protobuf::UnknownFieldSet **v15;
  google::protobuf::UnknownFieldSet *v16;
  uint64_t v17;
  google::protobuf::UnknownFieldSet **v18;
  google::protobuf::UnknownFieldSet *v19;
  uint64_t v20;
  google::protobuf::DescriptorProto_ReservedRange **v21;
  google::protobuf::DescriptorProto_ReservedRange *v22;
  google::protobuf::UnknownFieldSet *result;
  int v24;
  unint64_t v25;
  char *v26;
  char v27;

  v2 = *((unsigned int *)this + 8);
  if ((int)v2 >= 1)
  {
    v3 = (google::protobuf::UnknownFieldSet **)(*((_QWORD *)this + 5) + 8);
    do
    {
      v4 = *v3++;
      google::protobuf::FieldDescriptorProto::Clear(v4);
      --v2;
    }
    while (v2);
    *((_DWORD *)this + 8) = 0;
  }
  v5 = *((unsigned int *)this + 14);
  if ((int)v5 >= 1)
  {
    v6 = (google::protobuf::DescriptorProto **)(*((_QWORD *)this + 8) + 8);
    do
    {
      v7 = *v6++;
      google::protobuf::DescriptorProto::Clear(v7);
      --v5;
    }
    while (v5);
    *((_DWORD *)this + 14) = 0;
  }
  v8 = *((unsigned int *)this + 20);
  if ((int)v8 >= 1)
  {
    v9 = (google::protobuf::EnumDescriptorProto **)(*((_QWORD *)this + 11) + 8);
    do
    {
      v10 = *v9++;
      google::protobuf::EnumDescriptorProto::Clear(v10);
      --v8;
    }
    while (v8);
    *((_DWORD *)this + 20) = 0;
  }
  v11 = *((unsigned int *)this + 26);
  if ((int)v11 >= 1)
  {
    v12 = (google::protobuf::UnknownFieldSet **)(*((_QWORD *)this + 14) + 8);
    do
    {
      v13 = *v12++;
      google::protobuf::DescriptorProto_ExtensionRange::Clear(v13);
      --v11;
    }
    while (v11);
    *((_DWORD *)this + 26) = 0;
  }
  v14 = *((unsigned int *)this + 32);
  if ((int)v14 >= 1)
  {
    v15 = (google::protobuf::UnknownFieldSet **)(*((_QWORD *)this + 17) + 8);
    do
    {
      v16 = *v15++;
      google::protobuf::FieldDescriptorProto::Clear(v16);
      --v14;
    }
    while (v14);
    *((_DWORD *)this + 32) = 0;
  }
  v17 = *((unsigned int *)this + 38);
  if ((int)v17 >= 1)
  {
    v18 = (google::protobuf::UnknownFieldSet **)(*((_QWORD *)this + 20) + 8);
    do
    {
      v19 = *v18++;
      google::protobuf::OneofDescriptorProto::Clear(v19);
      --v17;
    }
    while (v17);
    *((_DWORD *)this + 38) = 0;
  }
  v20 = *((unsigned int *)this + 44);
  if ((int)v20 >= 1)
  {
    v21 = (google::protobuf::DescriptorProto_ReservedRange **)(*((_QWORD *)this + 23) + 8);
    do
    {
      v22 = *v21++;
      google::protobuf::DescriptorProto_ReservedRange::Clear(v22);
      --v20;
    }
    while (v20);
    *((_DWORD *)this + 44) = 0;
  }
  result = (google::protobuf::UnknownFieldSet *)google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 192);
  v24 = *((_DWORD *)this + 4);
  if ((v24 & 3) != 0)
  {
    if ((v24 & 1) == 0)
      goto LABEL_33;
    v25 = *((_QWORD *)this + 27) & 0xFFFFFFFFFFFFFFFELL;
    if ((*(char *)(v25 + 23) & 0x80000000) == 0)
    {
      *(_BYTE *)v25 = 0;
      *(_BYTE *)(v25 + 23) = 0;
LABEL_33:
      if ((v24 & 2) == 0)
        goto LABEL_35;
      goto LABEL_34;
    }
    **(_BYTE **)v25 = 0;
    *(_QWORD *)(v25 + 8) = 0;
    if ((v24 & 2) != 0)
LABEL_34:
      result = google::protobuf::MessageOptions::Clear(*((uint64_t ***)this + 28));
  }
LABEL_35:
  v27 = *((_BYTE *)this + 8);
  v26 = (char *)this + 8;
  *((_DWORD *)v26 + 2) = 0;
  if ((v27 & 1) != 0)
    return google::protobuf::internal::InternalMetadata::DoClear<google::protobuf::UnknownFieldSet>((uint64_t *)v26);
  return result;
}

google::protobuf::UnknownFieldSet *google::protobuf::MessageOptions::Clear(uint64_t **this)
{
  google::protobuf::UnknownFieldSet *result;
  uint64_t v3;
  google::protobuf::UnknownFieldSet **v4;
  google::protobuf::UnknownFieldSet *v5;
  char *v6;
  char v7;

  result = (google::protobuf::UnknownFieldSet *)google::protobuf::internal::ExtensionSet::Clear(this + 2);
  v3 = *((unsigned int *)this + 14);
  if ((int)v3 >= 1)
  {
    v4 = (google::protobuf::UnknownFieldSet **)(this[8] + 1);
    do
    {
      v5 = *v4++;
      result = google::protobuf::UninterpretedOption::Clear(v5);
      --v3;
    }
    while (v3);
    *((_DWORD *)this + 14) = 0;
  }
  v7 = *((_BYTE *)this + 8);
  v6 = (char *)(this + 1);
  *((_DWORD *)v6 + 16) = 0;
  *((_DWORD *)v6 + 8) = 0;
  if ((v7 & 1) != 0)
    return google::protobuf::internal::InternalMetadata::DoClear<google::protobuf::UnknownFieldSet>((uint64_t *)v6);
  return result;
}

google::protobuf::internal *google::protobuf::DescriptorProto::_InternalParse(uint64_t a1, google::protobuf::internal *a2, google::protobuf::internal::EpsCopyInputStream *this)
{
  char v5;
  google::protobuf::internal *result;
  uint64_t *v7;
  google::protobuf::internal *v8;
  unsigned int v9;
  uint64_t v10;
  google::protobuf::internal::ArenaImpl *v11;
  std::string *v12;
  uint64_t v13;
  google::protobuf::internal *v14;
  int *v15;
  int v16;
  int v17;
  google::protobuf::FieldDescriptorProto *v18;
  uint64_t v19;
  uint64_t v20;
  google::protobuf::internal *v21;
  int *v22;
  int v23;
  int v24;
  uint64_t v25;
  google::protobuf::DescriptorProto *v26;
  uint64_t v27;
  uint64_t v28;
  google::protobuf::internal *v29;
  int *v30;
  int v31;
  int v32;
  google::protobuf::EnumDescriptorProto *v33;
  uint64_t v34;
  uint64_t v35;
  google::protobuf::internal *v36;
  int *v37;
  int v38;
  int v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  const char *v43;
  google::protobuf::internal *v44;
  uint64_t v45;
  int v46;
  int v47;
  BOOL v48;
  int v49;
  unint64_t v50;
  google::protobuf::internal *v51;
  int *v52;
  int v53;
  int v54;
  google::protobuf::FieldDescriptorProto *v55;
  uint64_t v56;
  uint64_t v57;
  google::protobuf::MessageOptions *v58;
  google::protobuf::internal::ArenaImpl *v59;
  const char *v60;
  google::protobuf::internal *v61;
  google::protobuf::internal *v62;
  int *v63;
  int v64;
  int v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  const char *v69;
  google::protobuf::internal *v70;
  uint64_t v71;
  int v72;
  int v73;
  int v74;
  unint64_t v75;
  google::protobuf::internal *v76;
  int *v77;
  int v78;
  int v79;
  _QWORD *v80;
  uint64_t v81;
  uint64_t v82;
  const char *v83;
  const char *v84;
  uint64_t v85;
  int v86;
  int v87;
  int v88;
  unint64_t v89;
  std::string::value_type *v90;
  int *v91;
  int v92;
  int v93;
  std::string *AlignedAndAddCleanup;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  BOOL v98;
  google::protobuf::UnknownFieldSet *v99;
  uint64_t v100;
  int v101;
  int v102;
  int v103;
  int v104;
  uint64_t *v105;
  std::string **v106;
  google::protobuf::internal *v107;
  google::protobuf::UnknownFieldSet *v108;

  v107 = a2;
  v5 = google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(this, (const char **)&v107, *((_DWORD *)this + 23));
  result = v107;
  if ((v5 & 1) == 0)
  {
    v7 = (uint64_t *)(a1 + 192);
    v105 = (uint64_t *)(a1 + 8);
    v106 = (std::string **)(a1 + 216);
    while (2)
    {
      v8 = (google::protobuf::internal *)((char *)result + 1);
      v9 = *(unsigned __int8 *)result;
      if (*(char *)result < 0)
      {
        v9 = v9 + (*(unsigned __int8 *)v8 << 7) - 128;
        if (*(char *)v8 < 0)
        {
          v8 = (google::protobuf::internal *)((char *)result + 3);
          v13 = -21;
          while (1)
          {
            v9 += (*((unsigned __int8 *)v8 - 1) - 1) << (v13 + 35);
            if ((*((char *)v8 - 1) & 0x80000000) == 0)
              break;
            result = 0;
            v8 = (google::protobuf::internal *)((char *)v8 + 1);
            v13 += 7;
            if (!v13)
              return result;
          }
        }
        else
        {
          v8 = (google::protobuf::internal *)((char *)result + 2);
        }
      }
      v107 = v8;
      switch(v9 >> 3)
      {
        case 1u:
          if (v9 != 10)
            goto LABEL_167;
          *(_DWORD *)(a1 + 16) |= 1u;
          v10 = *(_QWORD *)(a1 + 8);
          v11 = (google::protobuf::internal::ArenaImpl *)(v10 & 0xFFFFFFFFFFFFFFFELL);
          if ((v10 & 1) != 0)
            v11 = *(google::protobuf::internal::ArenaImpl **)v11;
          v12 = *v106;
          if (*v106 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
          {
            v12 = (std::string *)google::protobuf::internal::ArenaStringPtr::MutableSlow<>(v106, v11);
            v8 = v107;
          }
          result = (google::protobuf::internal *)google::protobuf::internal::InlineGreedyStringParser(v12, (std::string::value_type *)v8, (uint64_t)this);
          goto LABEL_174;
        case 2u:
          if (v9 != 18)
            goto LABEL_167;
          result = (google::protobuf::internal *)((char *)v8 - 1);
          while (1)
          {
            v14 = (google::protobuf::internal *)((char *)result + 1);
            v107 = (google::protobuf::internal *)((char *)result + 1);
            v15 = *(int **)(a1 + 40);
            if (!v15)
              break;
            v16 = *(_DWORD *)(a1 + 32);
            v17 = *v15;
            if (v16 >= *v15)
            {
              if (v17 == *(_DWORD *)(a1 + 36))
              {
LABEL_24:
                if (v16 <= v17)
                {
                  google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 24), v17 - v16 + 1);
                  v15 = *(int **)(a1 + 40);
                }
                v17 = *v15;
              }
              *v15 = v17 + 1;
              v18 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::FieldDescriptorProto>(*(google::protobuf::internal::ArenaImpl **)(a1 + 24));
              v19 = *(_QWORD *)(a1 + 40);
              v20 = *(int *)(a1 + 32);
              *(_DWORD *)(a1 + 32) = v20 + 1;
              *(_QWORD *)(v19 + 8 * v20 + 8) = v18;
              v14 = v107;
              goto LABEL_28;
            }
            *(_DWORD *)(a1 + 32) = v16 + 1;
            v18 = *(google::protobuf::FieldDescriptorProto **)&v15[2 * v16 + 2];
LABEL_28:
            result = google::protobuf::internal::ParseContext::ParseMessage<google::protobuf::FieldDescriptorProto>((int32x2_t *)this, (uint64_t)v18, v14);
            v107 = result;
            if (!result)
              return result;
            if (*(_QWORD *)this <= (unint64_t)result || *(_BYTE *)result != 18)
              goto LABEL_182;
          }
          v16 = *(_DWORD *)(a1 + 32);
          v17 = *(_DWORD *)(a1 + 36);
          goto LABEL_24;
        case 3u:
          if (v9 != 26)
            goto LABEL_167;
          result = (google::protobuf::internal *)((char *)v8 - 1);
          while (1)
          {
            v21 = (google::protobuf::internal *)((char *)result + 1);
            v107 = (google::protobuf::internal *)((char *)result + 1);
            v22 = *(int **)(a1 + 64);
            if (!v22)
              break;
            v23 = *(_DWORD *)(a1 + 56);
            v24 = *v22;
            if (v23 >= *v22)
            {
              if (v24 == *(_DWORD *)(a1 + 60))
              {
LABEL_39:
                if (v23 <= v24)
                {
                  google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 48), v24 - v23 + 1);
                  v22 = *(int **)(a1 + 64);
                }
                v24 = *v22;
              }
              *v22 = v24 + 1;
              v26 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::DescriptorProto>(*(google::protobuf::internal::ArenaImpl **)(a1 + 48));
              LODWORD(v25) = (_DWORD)v26;
              v27 = *(_QWORD *)(a1 + 64);
              v28 = *(int *)(a1 + 56);
              *(_DWORD *)(a1 + 56) = v28 + 1;
              *(_QWORD *)(v27 + 8 * v28 + 8) = v26;
              v21 = v107;
              goto LABEL_43;
            }
            *(_DWORD *)(a1 + 56) = v23 + 1;
            v25 = *(_QWORD *)&v22[2 * v23 + 2];
LABEL_43:
            result = (google::protobuf::internal *)google::protobuf::internal::ParseContext::ParseMessage<google::protobuf::DescriptorProto>((int)this, v25, v21);
            v107 = result;
            if (!result)
              return result;
            if (*(_QWORD *)this <= (unint64_t)result || *(_BYTE *)result != 26)
              goto LABEL_182;
          }
          v23 = *(_DWORD *)(a1 + 56);
          v24 = *(_DWORD *)(a1 + 60);
          goto LABEL_39;
        case 4u:
          if (v9 != 34)
            goto LABEL_167;
          result = (google::protobuf::internal *)((char *)v8 - 1);
          while (1)
          {
            v29 = (google::protobuf::internal *)((char *)result + 1);
            v107 = (google::protobuf::internal *)((char *)result + 1);
            v30 = *(int **)(a1 + 88);
            if (!v30)
              break;
            v31 = *(_DWORD *)(a1 + 80);
            v32 = *v30;
            if (v31 >= *v30)
            {
              if (v32 == *(_DWORD *)(a1 + 84))
              {
LABEL_54:
                if (v31 <= v32)
                {
                  google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 72), v32 - v31 + 1);
                  v30 = *(int **)(a1 + 88);
                }
                v32 = *v30;
              }
              *v30 = v32 + 1;
              v33 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::EnumDescriptorProto>(*(google::protobuf::internal::ArenaImpl **)(a1 + 72));
              v34 = *(_QWORD *)(a1 + 88);
              v35 = *(int *)(a1 + 80);
              *(_DWORD *)(a1 + 80) = v35 + 1;
              *(_QWORD *)(v34 + 8 * v35 + 8) = v33;
              v29 = v107;
              goto LABEL_58;
            }
            *(_DWORD *)(a1 + 80) = v31 + 1;
            v33 = *(google::protobuf::EnumDescriptorProto **)&v30[2 * v31 + 2];
LABEL_58:
            result = google::protobuf::internal::ParseContext::ParseMessage<google::protobuf::EnumDescriptorProto>(this, (uint64_t)v33, v29);
            v107 = result;
            if (!result)
              return result;
            if (*(_QWORD *)this <= (unint64_t)result || *(_BYTE *)result != 34)
              goto LABEL_182;
          }
          v31 = *(_DWORD *)(a1 + 80);
          v32 = *(_DWORD *)(a1 + 84);
          goto LABEL_54;
        case 5u:
          if (v9 != 42)
            goto LABEL_167;
          result = (google::protobuf::internal *)((char *)v8 - 1);
          while (2)
          {
            v36 = (google::protobuf::internal *)((char *)result + 1);
            v107 = v36;
            v37 = *(int **)(a1 + 112);
            if (!v37)
            {
              v38 = *(_DWORD *)(a1 + 104);
              v39 = *(_DWORD *)(a1 + 108);
LABEL_69:
              if (v38 <= v39)
              {
                google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 96), v39 - v38 + 1);
                v37 = *(int **)(a1 + 112);
              }
              v39 = *v37;
              goto LABEL_72;
            }
            v38 = *(_DWORD *)(a1 + 104);
            v39 = *v37;
            if (v38 < *v37)
            {
              *(_DWORD *)(a1 + 104) = v38 + 1;
              v40 = *(_QWORD **)&v37[2 * v38 + 2];
              goto LABEL_73;
            }
            if (v39 == *(_DWORD *)(a1 + 108))
              goto LABEL_69;
LABEL_72:
            *v37 = v39 + 1;
            v40 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::DescriptorProto_ExtensionRange>(*(google::protobuf::internal::ArenaImpl **)(a1 + 96));
            v41 = *(_QWORD *)(a1 + 112);
            v42 = *(int *)(a1 + 104);
            *(_DWORD *)(a1 + 104) = v42 + 1;
            *(_QWORD *)(v41 + 8 * v42 + 8) = v40;
            v36 = v107;
LABEL_73:
            v43 = (const char *)*(unsigned __int8 *)v36;
            if (*(char *)v36 < 0)
            {
              result = (google::protobuf::internal *)google::protobuf::internal::ReadSizeFallback(v36, v43);
              if (!result)
                return result;
              v44 = result;
            }
            else
            {
              v44 = (google::protobuf::internal *)((char *)v36 + 1);
            }
            v45 = *((_QWORD *)this + 1);
            v46 = (_DWORD)v43 + (_DWORD)v44 - v45;
            *(_QWORD *)this = v45 + (v46 & (v46 >> 31));
            v47 = *((_DWORD *)this + 7);
            *((_DWORD *)this + 7) = v46;
            LODWORD(v45) = *((_DWORD *)this + 22);
            v48 = __OFSUB__((_DWORD)v45, 1);
            LODWORD(v45) = v45 - 1;
            *((_DWORD *)this + 22) = v45;
            if ((int)v45 < 0 == v48)
            {
              result = google::protobuf::DescriptorProto_ExtensionRange::_InternalParse((uint64_t)v40, v44, (int32x2_t *)this);
              if (!result)
                return result;
              ++*((_DWORD *)this + 22);
              if (!*((_DWORD *)this + 20))
              {
                v49 = *((_DWORD *)this + 7) + v47 - v46;
                *((_DWORD *)this + 7) = v49;
                v50 = *((_QWORD *)this + 1) + (v49 & (v49 >> 31));
                *(_QWORD *)this = v50;
                v107 = result;
                if (v50 <= (unint64_t)result || *(_BYTE *)result != 42)
                  goto LABEL_182;
                continue;
              }
            }
            return 0;
          }
        case 6u:
          if (v9 != 50)
            goto LABEL_167;
          result = (google::protobuf::internal *)((char *)v8 - 1);
          while (1)
          {
            v51 = (google::protobuf::internal *)((char *)result + 1);
            v107 = (google::protobuf::internal *)((char *)result + 1);
            v52 = *(int **)(a1 + 136);
            if (!v52)
              break;
            v53 = *(_DWORD *)(a1 + 128);
            v54 = *v52;
            if (v53 >= *v52)
            {
              if (v54 == *(_DWORD *)(a1 + 132))
              {
LABEL_90:
                if (v53 <= v54)
                {
                  google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 120), v54 - v53 + 1);
                  v52 = *(int **)(a1 + 136);
                }
                v54 = *v52;
              }
              *v52 = v54 + 1;
              v55 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::FieldDescriptorProto>(*(google::protobuf::internal::ArenaImpl **)(a1 + 120));
              v56 = *(_QWORD *)(a1 + 136);
              v57 = *(int *)(a1 + 128);
              *(_DWORD *)(a1 + 128) = v57 + 1;
              *(_QWORD *)(v56 + 8 * v57 + 8) = v55;
              v51 = v107;
              goto LABEL_94;
            }
            *(_DWORD *)(a1 + 128) = v53 + 1;
            v55 = *(google::protobuf::FieldDescriptorProto **)&v52[2 * v53 + 2];
LABEL_94:
            result = google::protobuf::internal::ParseContext::ParseMessage<google::protobuf::FieldDescriptorProto>((int32x2_t *)this, (uint64_t)v55, v51);
            v107 = result;
            if (!result)
              return result;
            if (*(_QWORD *)this <= (unint64_t)result || *(_BYTE *)result != 50)
              goto LABEL_182;
          }
          v53 = *(_DWORD *)(a1 + 128);
          v54 = *(_DWORD *)(a1 + 132);
          goto LABEL_90;
        case 7u:
          if (v9 != 58)
            goto LABEL_167;
          *(_DWORD *)(a1 + 16) |= 2u;
          v58 = *(google::protobuf::MessageOptions **)(a1 + 224);
          if (!v58)
          {
            v59 = (google::protobuf::internal::ArenaImpl *)(*v105 & 0xFFFFFFFFFFFFFFFELL);
            if ((*v105 & 1) != 0)
              v59 = *(google::protobuf::internal::ArenaImpl **)v59;
            v58 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::MessageOptions>(v59);
            *(_QWORD *)(a1 + 224) = v58;
            v8 = v107;
          }
          v60 = (const char *)*(unsigned __int8 *)v8;
          if (*(char *)v8 < 0)
          {
            result = (google::protobuf::internal *)google::protobuf::internal::ReadSizeFallback(v8, v60);
            if (!result)
              return result;
            v61 = result;
          }
          else
          {
            v61 = (google::protobuf::internal *)((char *)v8 + 1);
          }
          v100 = *((_QWORD *)this + 1);
          v101 = (_DWORD)v60 + (_DWORD)v61 - v100;
          *(_QWORD *)this = v100 + (v101 & (v101 >> 31));
          v102 = *((_DWORD *)this + 7);
          *((_DWORD *)this + 7) = v101;
          LODWORD(v100) = *((_DWORD *)this + 22);
          v48 = __OFSUB__((_DWORD)v100, 1);
          LODWORD(v100) = v100 - 1;
          *((_DWORD *)this + 22) = v100;
          if ((int)v100 < 0 != v48)
            return 0;
          result = google::protobuf::MessageOptions::_InternalParse((uint64_t)v58, v61, this);
          if (!result)
            return result;
          ++*((_DWORD *)this + 22);
          if (*((_DWORD *)this + 20))
            return 0;
          v103 = *((_DWORD *)this + 7) + v102 - v101;
          *((_DWORD *)this + 7) = v103;
          *(_QWORD *)this = *((_QWORD *)this + 1) + (v103 & (v103 >> 31));
          v107 = result;
          goto LABEL_182;
        case 8u:
          if (v9 != 66)
            goto LABEL_167;
          result = (google::protobuf::internal *)((char *)v8 - 1);
          while (2)
          {
            v62 = (google::protobuf::internal *)((char *)result + 1);
            v107 = v62;
            v63 = *(int **)(a1 + 160);
            if (!v63)
            {
              v64 = *(_DWORD *)(a1 + 152);
              v65 = *(_DWORD *)(a1 + 156);
LABEL_112:
              if (v64 <= v65)
              {
                google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 144), v65 - v64 + 1);
                v63 = *(int **)(a1 + 160);
              }
              v65 = *v63;
              goto LABEL_115;
            }
            v64 = *(_DWORD *)(a1 + 152);
            v65 = *v63;
            if (v64 < *v63)
            {
              *(_DWORD *)(a1 + 152) = v64 + 1;
              v66 = *(_QWORD **)&v63[2 * v64 + 2];
              goto LABEL_116;
            }
            if (v65 == *(_DWORD *)(a1 + 156))
              goto LABEL_112;
LABEL_115:
            *v63 = v65 + 1;
            v66 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::OneofDescriptorProto>(*(google::protobuf::internal::ArenaImpl **)(a1 + 144));
            v67 = *(_QWORD *)(a1 + 160);
            v68 = *(int *)(a1 + 152);
            *(_DWORD *)(a1 + 152) = v68 + 1;
            *(_QWORD *)(v67 + 8 * v68 + 8) = v66;
            v62 = v107;
LABEL_116:
            v69 = (const char *)*(unsigned __int8 *)v62;
            if (*(char *)v62 < 0)
            {
              result = (google::protobuf::internal *)google::protobuf::internal::ReadSizeFallback(v62, v69);
              if (!result)
                return result;
              v70 = result;
            }
            else
            {
              v70 = (google::protobuf::internal *)((char *)v62 + 1);
            }
            v71 = *((_QWORD *)this + 1);
            v72 = (_DWORD)v69 + (_DWORD)v70 - v71;
            *(_QWORD *)this = v71 + (v72 & (v72 >> 31));
            v73 = *((_DWORD *)this + 7);
            *((_DWORD *)this + 7) = v72;
            LODWORD(v71) = *((_DWORD *)this + 22);
            v48 = __OFSUB__((_DWORD)v71, 1);
            LODWORD(v71) = v71 - 1;
            *((_DWORD *)this + 22) = v71;
            if ((int)v71 < 0 == v48)
            {
              result = google::protobuf::OneofDescriptorProto::_InternalParse((uint64_t)v66, v70, this);
              if (!result)
                return result;
              ++*((_DWORD *)this + 22);
              if (!*((_DWORD *)this + 20))
              {
                v74 = *((_DWORD *)this + 7) + v73 - v72;
                *((_DWORD *)this + 7) = v74;
                v75 = *((_QWORD *)this + 1) + (v74 & (v74 >> 31));
                *(_QWORD *)this = v75;
                v107 = result;
                if (v75 <= (unint64_t)result || *(_BYTE *)result != 66)
                  goto LABEL_182;
                continue;
              }
            }
            return 0;
          }
        case 9u:
          if (v9 != 74)
            goto LABEL_167;
          result = (google::protobuf::internal *)((char *)v8 - 1);
          while (2)
          {
            v76 = (google::protobuf::internal *)((char *)result + 1);
            v107 = v76;
            v77 = *(int **)(a1 + 184);
            if (!v77)
            {
              v78 = *(_DWORD *)(a1 + 176);
              v79 = *(_DWORD *)(a1 + 180);
LABEL_133:
              if (v78 <= v79)
              {
                google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 168), v79 - v78 + 1);
                v77 = *(int **)(a1 + 184);
              }
              v79 = *v77;
              goto LABEL_136;
            }
            v78 = *(_DWORD *)(a1 + 176);
            v79 = *v77;
            if (v78 < *v77)
            {
              *(_DWORD *)(a1 + 176) = v78 + 1;
              v80 = *(_QWORD **)&v77[2 * v78 + 2];
              goto LABEL_137;
            }
            if (v79 == *(_DWORD *)(a1 + 180))
              goto LABEL_133;
LABEL_136:
            *v77 = v79 + 1;
            v80 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::DescriptorProto_ReservedRange>(*(google::protobuf::internal::ArenaImpl **)(a1 + 168));
            v81 = *(_QWORD *)(a1 + 184);
            v82 = *(int *)(a1 + 176);
            *(_DWORD *)(a1 + 176) = v82 + 1;
            *(_QWORD *)(v81 + 8 * v82 + 8) = v80;
            v76 = v107;
LABEL_137:
            v83 = (const char *)*(unsigned __int8 *)v76;
            if (*(char *)v76 < 0)
            {
              result = (google::protobuf::internal *)google::protobuf::internal::ReadSizeFallback(v76, v83);
              if (!result)
                return result;
              v84 = (const char *)result;
            }
            else
            {
              v84 = (char *)v76 + 1;
            }
            v85 = *((_QWORD *)this + 1);
            v86 = (_DWORD)v83 + (_DWORD)v84 - v85;
            *(_QWORD *)this = v85 + (v86 & (v86 >> 31));
            v87 = *((_DWORD *)this + 7);
            *((_DWORD *)this + 7) = v86;
            LODWORD(v85) = *((_DWORD *)this + 22);
            v48 = __OFSUB__((_DWORD)v85, 1);
            LODWORD(v85) = v85 - 1;
            *((_DWORD *)this + 22) = v85;
            if ((int)v85 < 0 == v48)
            {
              result = (google::protobuf::internal *)google::protobuf::DescriptorProto_ReservedRange::_InternalParse((uint64_t)v80, v84, (int32x2_t *)this);
              if (!result)
                return result;
              ++*((_DWORD *)this + 22);
              if (!*((_DWORD *)this + 20))
              {
                v88 = *((_DWORD *)this + 7) + v87 - v86;
                *((_DWORD *)this + 7) = v88;
                v89 = *((_QWORD *)this + 1) + (v88 & (v88 >> 31));
                *(_QWORD *)this = v89;
                v107 = result;
                if (v89 <= (unint64_t)result || *(_BYTE *)result != 74)
                  goto LABEL_182;
                continue;
              }
            }
            return 0;
          }
        case 0xAu:
          if (v9 != 82)
            goto LABEL_167;
          result = (google::protobuf::internal *)((char *)v8 - 1);
          break;
        default:
LABEL_167:
          if (v9)
            v98 = (v9 & 7) == 4;
          else
            v98 = 1;
          if (v98)
          {
            *((_DWORD *)this + 20) = v9 - 1;
            return v8;
          }
          if ((*v105 & 1) != 0)
          {
            v99 = (google::protobuf::UnknownFieldSet *)((*v105 & 0xFFFFFFFFFFFFFFFELL) + 8);
          }
          else
          {
            v99 = (google::protobuf::UnknownFieldSet *)google::protobuf::internal::InternalMetadata::mutable_unknown_fields_slow<google::protobuf::UnknownFieldSet>(v105);
            v8 = v107;
          }
          v108 = v99;
          result = google::protobuf::internal::FieldParser<google::protobuf::internal::UnknownFieldParserHelper>(v9, &v108, (uint64_t *)v8, (int32x2_t *)this);
LABEL_174:
          v107 = result;
          if (!result)
            return result;
LABEL_182:
          v104 = google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(this, (const char **)&v107, *((_DWORD *)this + 23));
          result = v107;
          if (v104)
            return result;
          continue;
      }
      break;
    }
    while (1)
    {
      v90 = (char *)result + 1;
      v107 = (google::protobuf::internal *)((char *)result + 1);
      v91 = *(int **)(a1 + 208);
      if (!v91)
        break;
      v92 = *(_DWORD *)(a1 + 200);
      v93 = *v91;
      if (v92 >= *v91)
      {
        if (v93 == *(_DWORD *)(a1 + 204))
        {
LABEL_154:
          if (v92 <= v93)
          {
            google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 192), v93 - v92 + 1);
            v91 = *(int **)(a1 + 208);
          }
          v93 = *v91;
        }
        *v91 = v93 + 1;
        v95 = *v7;
        if (*v7)
        {
          if ((*(_BYTE *)(v95 + 24) & 1) != 0)
          AlignedAndAddCleanup = (std::string *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((google::protobuf::internal::ArenaImpl *)v95, 0x18uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<std::string>);
        }
        else
        {
          AlignedAndAddCleanup = (std::string *)operator new();
        }
        AlignedAndAddCleanup->__r_.__value_.__r.__words[0] = 0;
        AlignedAndAddCleanup->__r_.__value_.__l.__size_ = 0;
        AlignedAndAddCleanup->__r_.__value_.__r.__words[2] = 0;
        v96 = *(_QWORD *)(a1 + 208);
        v97 = *(int *)(a1 + 200);
        *(_DWORD *)(a1 + 200) = v97 + 1;
        *(_QWORD *)(v96 + 8 * v97 + 8) = AlignedAndAddCleanup;
        v90 = (std::string::value_type *)v107;
        goto LABEL_163;
      }
      *(_DWORD *)(a1 + 200) = v92 + 1;
      AlignedAndAddCleanup = *(std::string **)&v91[2 * v92 + 2];
LABEL_163:
      result = (google::protobuf::internal *)google::protobuf::internal::InlineGreedyStringParser(AlignedAndAddCleanup, v90, (uint64_t)this);
      v107 = result;
      if (!result)
        return result;
      if (*(_QWORD *)this <= (unint64_t)result || *(_BYTE *)result != 82)
        goto LABEL_182;
    }
    v92 = *(_DWORD *)(a1 + 200);
    v93 = *(_DWORD *)(a1 + 204);
    goto LABEL_154;
  }
  return result;
}

const google::protobuf::UnknownFieldSet *google::protobuf::DescriptorProto::_InternalSerialize(google::protobuf::DescriptorProto *this, unsigned __int8 *a2, google::protobuf::io::EpsCopyOutputStream *a3)
{
  unsigned __int8 *v4;
  int v6;
  int v7;
  int i;
  google::protobuf::FieldDescriptorProto *v9;
  unsigned int v10;
  unsigned __int8 *v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  int v15;
  int j;
  google::protobuf::DescriptorProto *v17;
  unsigned int v18;
  unsigned __int8 *v19;
  unsigned int v20;
  unsigned int v21;
  unsigned int v22;
  int v23;
  int k;
  google::protobuf::EnumDescriptorProto *v25;
  unsigned int v26;
  unsigned __int8 *v27;
  unsigned int v28;
  unsigned int v29;
  unsigned int v30;
  int v31;
  int m;
  google::protobuf::DescriptorProto_ExtensionRange *v33;
  unsigned int v34;
  unsigned __int8 *v35;
  unsigned int v36;
  unsigned int v37;
  unsigned int v38;
  int v39;
  int n;
  google::protobuf::FieldDescriptorProto *v41;
  unsigned int v42;
  unsigned __int8 *v43;
  unsigned int v44;
  unsigned int v45;
  unsigned int v46;
  google::protobuf::MessageOptions *v47;
  unsigned int v48;
  unsigned __int8 *v49;
  unsigned int v50;
  unsigned int v51;
  unsigned int v52;
  int v53;
  int ii;
  google::protobuf::OneofDescriptorProto *v55;
  unsigned int v56;
  unsigned __int8 *v57;
  unsigned int v58;
  unsigned int v59;
  unsigned int v60;
  int v61;
  int jj;
  google::protobuf::DescriptorProto_ReservedRange *v63;
  unsigned int v64;
  unsigned __int8 *v65;
  unsigned int v66;
  unsigned int v67;
  unsigned int v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  int64_t v73;
  unsigned __int8 *v74;
  uint64_t v75;

  v4 = a2;
  v6 = *((_DWORD *)this + 4);
  if ((v6 & 1) != 0)
    v4 = google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 1, *((_QWORD *)this + 27) & 0xFFFFFFFFFFFFFFFELL, a2);
  v7 = *((_DWORD *)this + 8);
  if (v7)
  {
    for (i = 0; i != v7; ++i)
    {
      if (*(_QWORD *)a3 <= (unint64_t)v4)
        v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
      v9 = *(google::protobuf::FieldDescriptorProto **)(*((_QWORD *)this + 5) + 8 * i + 8);
      *v4 = 18;
      v10 = *((_DWORD *)v9 + 5);
      if (v10 > 0x7F)
      {
        v4[1] = v10 | 0x80;
        v12 = v10 >> 7;
        if (v10 >> 14)
        {
          v11 = v4 + 3;
          do
          {
            *(v11 - 1) = v12 | 0x80;
            v13 = v12 >> 7;
            ++v11;
            v14 = v12 >> 14;
            v12 >>= 7;
          }
          while (v14);
          *(v11 - 1) = v13;
        }
        else
        {
          v4[2] = v12;
          v11 = v4 + 3;
        }
      }
      else
      {
        v4[1] = v10;
        v11 = v4 + 2;
      }
      v4 = (unsigned __int8 *)google::protobuf::FieldDescriptorProto::_InternalSerialize(v9, v11, a3);
    }
  }
  v15 = *((_DWORD *)this + 14);
  if (v15)
  {
    for (j = 0; j != v15; ++j)
    {
      if (*(_QWORD *)a3 <= (unint64_t)v4)
        v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
      v17 = *(google::protobuf::DescriptorProto **)(*((_QWORD *)this + 8) + 8 * j + 8);
      *v4 = 26;
      v18 = *((_DWORD *)v17 + 5);
      if (v18 > 0x7F)
      {
        v4[1] = v18 | 0x80;
        v20 = v18 >> 7;
        if (v18 >> 14)
        {
          v19 = v4 + 3;
          do
          {
            *(v19 - 1) = v20 | 0x80;
            v21 = v20 >> 7;
            ++v19;
            v22 = v20 >> 14;
            v20 >>= 7;
          }
          while (v22);
          *(v19 - 1) = v21;
        }
        else
        {
          v4[2] = v20;
          v19 = v4 + 3;
        }
      }
      else
      {
        v4[1] = v18;
        v19 = v4 + 2;
      }
      v4 = (unsigned __int8 *)google::protobuf::DescriptorProto::_InternalSerialize(v17, v19, a3);
    }
  }
  v23 = *((_DWORD *)this + 20);
  if (v23)
  {
    for (k = 0; k != v23; ++k)
    {
      if (*(_QWORD *)a3 <= (unint64_t)v4)
        v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
      v25 = *(google::protobuf::EnumDescriptorProto **)(*((_QWORD *)this + 11) + 8 * k + 8);
      *v4 = 34;
      v26 = *((_DWORD *)v25 + 5);
      if (v26 > 0x7F)
      {
        v4[1] = v26 | 0x80;
        v28 = v26 >> 7;
        if (v26 >> 14)
        {
          v27 = v4 + 3;
          do
          {
            *(v27 - 1) = v28 | 0x80;
            v29 = v28 >> 7;
            ++v27;
            v30 = v28 >> 14;
            v28 >>= 7;
          }
          while (v30);
          *(v27 - 1) = v29;
        }
        else
        {
          v4[2] = v28;
          v27 = v4 + 3;
        }
      }
      else
      {
        v4[1] = v26;
        v27 = v4 + 2;
      }
      v4 = (unsigned __int8 *)google::protobuf::EnumDescriptorProto::_InternalSerialize(v25, v27, a3);
    }
  }
  v31 = *((_DWORD *)this + 26);
  if (v31)
  {
    for (m = 0; m != v31; ++m)
    {
      if (*(_QWORD *)a3 <= (unint64_t)v4)
        v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
      v33 = *(google::protobuf::DescriptorProto_ExtensionRange **)(*((_QWORD *)this + 14) + 8 * m + 8);
      *v4 = 42;
      v34 = *((_DWORD *)v33 + 5);
      if (v34 > 0x7F)
      {
        v4[1] = v34 | 0x80;
        v36 = v34 >> 7;
        if (v34 >> 14)
        {
          v35 = v4 + 3;
          do
          {
            *(v35 - 1) = v36 | 0x80;
            v37 = v36 >> 7;
            ++v35;
            v38 = v36 >> 14;
            v36 >>= 7;
          }
          while (v38);
          *(v35 - 1) = v37;
        }
        else
        {
          v4[2] = v36;
          v35 = v4 + 3;
        }
      }
      else
      {
        v4[1] = v34;
        v35 = v4 + 2;
      }
      v4 = (unsigned __int8 *)google::protobuf::DescriptorProto_ExtensionRange::_InternalSerialize(v33, v35, a3, (google::protobuf::io::EpsCopyOutputStream *)v4);
    }
  }
  v39 = *((_DWORD *)this + 32);
  if (v39)
  {
    for (n = 0; n != v39; ++n)
    {
      if (*(_QWORD *)a3 <= (unint64_t)v4)
        v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
      v41 = *(google::protobuf::FieldDescriptorProto **)(*((_QWORD *)this + 17) + 8 * n + 8);
      *v4 = 50;
      v42 = *((_DWORD *)v41 + 5);
      if (v42 > 0x7F)
      {
        v4[1] = v42 | 0x80;
        v44 = v42 >> 7;
        if (v42 >> 14)
        {
          v43 = v4 + 3;
          do
          {
            *(v43 - 1) = v44 | 0x80;
            v45 = v44 >> 7;
            ++v43;
            v46 = v44 >> 14;
            v44 >>= 7;
          }
          while (v46);
          *(v43 - 1) = v45;
        }
        else
        {
          v4[2] = v44;
          v43 = v4 + 3;
        }
      }
      else
      {
        v4[1] = v42;
        v43 = v4 + 2;
      }
      v4 = (unsigned __int8 *)google::protobuf::FieldDescriptorProto::_InternalSerialize(v41, v43, a3);
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(_QWORD *)a3 <= (unint64_t)v4)
      v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
    v47 = (google::protobuf::MessageOptions *)*((_QWORD *)this + 28);
    *v4 = 58;
    v48 = *((_DWORD *)v47 + 11);
    if (v48 > 0x7F)
    {
      v4[1] = v48 | 0x80;
      v50 = v48 >> 7;
      if (v48 >> 14)
      {
        v49 = v4 + 3;
        do
        {
          *(v49 - 1) = v50 | 0x80;
          v51 = v50 >> 7;
          ++v49;
          v52 = v50 >> 14;
          v50 >>= 7;
        }
        while (v52);
        *(v49 - 1) = v51;
      }
      else
      {
        v4[2] = v50;
        v49 = v4 + 3;
      }
    }
    else
    {
      v4[1] = v48;
      v49 = v4 + 2;
    }
    v4 = (unsigned __int8 *)google::protobuf::MessageOptions::_InternalSerialize(v47, v49, a3);
  }
  v53 = *((_DWORD *)this + 38);
  if (v53)
  {
    for (ii = 0; ii != v53; ++ii)
    {
      if (*(_QWORD *)a3 <= (unint64_t)v4)
        v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
      v55 = *(google::protobuf::OneofDescriptorProto **)(*((_QWORD *)this + 20) + 8 * ii + 8);
      *v4 = 66;
      v56 = *((_DWORD *)v55 + 5);
      if (v56 > 0x7F)
      {
        v4[1] = v56 | 0x80;
        v58 = v56 >> 7;
        if (v56 >> 14)
        {
          v57 = v4 + 3;
          do
          {
            *(v57 - 1) = v58 | 0x80;
            v59 = v58 >> 7;
            ++v57;
            v60 = v58 >> 14;
            v58 >>= 7;
          }
          while (v60);
          *(v57 - 1) = v59;
        }
        else
        {
          v4[2] = v58;
          v57 = v4 + 3;
        }
      }
      else
      {
        v4[1] = v56;
        v57 = v4 + 2;
      }
      v4 = (unsigned __int8 *)google::protobuf::OneofDescriptorProto::_InternalSerialize(v55, v57, a3);
    }
  }
  v61 = *((_DWORD *)this + 44);
  if (v61)
  {
    for (jj = 0; jj != v61; ++jj)
    {
      if (*(_QWORD *)a3 <= (unint64_t)v4)
        v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
      v63 = *(google::protobuf::DescriptorProto_ReservedRange **)(*((_QWORD *)this + 23) + 8 * jj + 8);
      *v4 = 74;
      v64 = *((_DWORD *)v63 + 5);
      if (v64 > 0x7F)
      {
        v4[1] = v64 | 0x80;
        v66 = v64 >> 7;
        if (v64 >> 14)
        {
          v65 = v4 + 3;
          do
          {
            *(v65 - 1) = v66 | 0x80;
            v67 = v66 >> 7;
            ++v65;
            v68 = v66 >> 14;
            v66 >>= 7;
          }
          while (v68);
          *(v65 - 1) = v67;
        }
        else
        {
          v4[2] = v66;
          v65 = v4 + 3;
        }
      }
      else
      {
        v4[1] = v64;
        v65 = v4 + 2;
      }
      v4 = (unsigned __int8 *)google::protobuf::DescriptorProto_ReservedRange::_InternalSerialize(v63, v65, a3, (google::protobuf::io::EpsCopyOutputStream *)v4);
    }
  }
  v69 = *((unsigned int *)this + 50);
  if ((int)v69 >= 1)
  {
    v70 = 0;
    v71 = 8 * v69;
    do
    {
      v72 = *(_QWORD **)(*((_QWORD *)this + 26) + v70 + 8);
      if (*((char *)v72 + 23) < 0)
      {
        v73 = v72[1];
        if (v73 > 127)
          goto LABEL_109;
      }
      else
      {
        v73 = *((unsigned __int8 *)v72 + 23);
      }
      if (*(_QWORD *)a3 - (_QWORD)v4 + 14 >= v73)
      {
        *v4 = 82;
        v4[1] = v73;
        if (*((char *)v72 + 23) < 0)
          v72 = (_QWORD *)*v72;
        v74 = v4 + 2;
        memcpy(v4 + 2, v72, v73);
        v4 = &v74[v73];
        goto LABEL_107;
      }
LABEL_109:
      v4 = google::protobuf::io::EpsCopyOutputStream::WriteStringOutline(a3, 10, (uint64_t)v72, v4);
LABEL_107:
      v70 += 8;
    }
    while (v71 != v70);
  }
  v75 = *((_QWORD *)this + 1);
  if ((v75 & 1) != 0)
    return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v75 & 0xFFFFFFFFFFFFFFFELL) + 8), (const google::protobuf::UnknownFieldSet *)v4, a3, (google::protobuf::io::EpsCopyOutputStream *)v4);
  else
    return (const google::protobuf::UnknownFieldSet *)v4;
}

const InternalMetadata *google::protobuf::DescriptorProto::ByteSizeLong(google::protobuf::DescriptorProto *this, uint64_t a2, uint64_t a3, CachedSize *a4)
{
  uint64_t v5;
  uint64_t v6;
  google::protobuf::FieldDescriptorProto **v7;
  uint64_t v8;
  google::protobuf::FieldDescriptorProto *v9;
  const InternalMetadata *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  google::protobuf::DescriptorProto **v14;
  uint64_t v15;
  google::protobuf::DescriptorProto *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  google::protobuf::EnumDescriptorProto **v21;
  uint64_t v22;
  google::protobuf::EnumDescriptorProto *v23;
  const InternalMetadata *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  google::protobuf::DescriptorProto_ExtensionRange **v28;
  uint64_t v29;
  google::protobuf::DescriptorProto_ExtensionRange *v30;
  const InternalMetadata *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  google::protobuf::FieldDescriptorProto **v35;
  uint64_t v36;
  google::protobuf::FieldDescriptorProto *v37;
  const InternalMetadata *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  google::protobuf::OneofDescriptorProto **v42;
  uint64_t v43;
  google::protobuf::OneofDescriptorProto *v44;
  const InternalMetadata *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  google::protobuf::DescriptorProto_ReservedRange **v49;
  uint64_t v50;
  google::protobuf::DescriptorProto_ReservedRange *v51;
  uint64_t v52;
  uint64_t v53;
  const InternalMetadata *v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  int v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  const InternalMetadata *v63;

  v5 = *((int *)this + 8);
  v6 = *((_QWORD *)this + 5);
  if (v6)
    v7 = (google::protobuf::FieldDescriptorProto **)(v6 + 8);
  else
    v7 = 0;
  if ((_DWORD)v5)
  {
    v8 = 8 * v5;
    do
    {
      v9 = *v7++;
      v10 = google::protobuf::FieldDescriptorProto::ByteSizeLong(v9, a2, a3, a4);
      v5 += (uint64_t)v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6);
      v8 -= 8;
    }
    while (v8);
  }
  else
  {
    v5 = 0;
  }
  v11 = *((int *)this + 14);
  v12 = v5 + v11;
  v13 = *((_QWORD *)this + 8);
  if (v13)
    v14 = (google::protobuf::DescriptorProto **)(v13 + 8);
  else
    v14 = 0;
  if ((_DWORD)v11)
  {
    v15 = 8 * v11;
    do
    {
      v16 = *v14++;
      v17 = google::protobuf::DescriptorProto::ByteSizeLong(v16);
      v12 += v17 + ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6);
      v15 -= 8;
    }
    while (v15);
  }
  v18 = *((int *)this + 20);
  v19 = v12 + v18;
  v20 = *((_QWORD *)this + 11);
  if (v20)
    v21 = (google::protobuf::EnumDescriptorProto **)(v20 + 8);
  else
    v21 = 0;
  if ((_DWORD)v18)
  {
    v22 = 8 * v18;
    do
    {
      v23 = *v21++;
      v24 = google::protobuf::EnumDescriptorProto::ByteSizeLong(v23, a2, a3, a4);
      v19 += (uint64_t)v24 + ((9 * (__clz(v24 | 1) ^ 0x1F) + 73) >> 6);
      v22 -= 8;
    }
    while (v22);
  }
  v25 = *((int *)this + 26);
  v26 = v19 + v25;
  v27 = *((_QWORD *)this + 14);
  if (v27)
    v28 = (google::protobuf::DescriptorProto_ExtensionRange **)(v27 + 8);
  else
    v28 = 0;
  if ((_DWORD)v25)
  {
    v29 = 8 * v25;
    do
    {
      v30 = *v28++;
      v31 = google::protobuf::DescriptorProto_ExtensionRange::ByteSizeLong(v30, a2, a3, a4);
      v26 += (uint64_t)v31 + ((9 * (__clz(v31 | 1) ^ 0x1F) + 73) >> 6);
      v29 -= 8;
    }
    while (v29);
  }
  v32 = *((int *)this + 32);
  v33 = v26 + v32;
  v34 = *((_QWORD *)this + 17);
  if (v34)
    v35 = (google::protobuf::FieldDescriptorProto **)(v34 + 8);
  else
    v35 = 0;
  if ((_DWORD)v32)
  {
    v36 = 8 * v32;
    do
    {
      v37 = *v35++;
      v38 = google::protobuf::FieldDescriptorProto::ByteSizeLong(v37, a2, a3, a4);
      v33 += (uint64_t)v38 + ((9 * (__clz(v38 | 1) ^ 0x1F) + 73) >> 6);
      v36 -= 8;
    }
    while (v36);
  }
  v39 = *((int *)this + 38);
  v40 = v33 + v39;
  v41 = *((_QWORD *)this + 20);
  if (v41)
    v42 = (google::protobuf::OneofDescriptorProto **)(v41 + 8);
  else
    v42 = 0;
  if ((_DWORD)v39)
  {
    v43 = 8 * v39;
    do
    {
      v44 = *v42++;
      v45 = google::protobuf::OneofDescriptorProto::ByteSizeLong(v44, a2, a3, a4);
      v40 += (uint64_t)v45 + ((9 * (__clz(v45 | 1) ^ 0x1F) + 73) >> 6);
      v43 -= 8;
    }
    while (v43);
  }
  v46 = *((int *)this + 44);
  v47 = v40 + v46;
  v48 = *((_QWORD *)this + 23);
  if (v48)
    v49 = (google::protobuf::DescriptorProto_ReservedRange **)(v48 + 8);
  else
    v49 = 0;
  if ((_DWORD)v46)
  {
    v50 = 8 * v46;
    do
    {
      v51 = *v49++;
      v52 = google::protobuf::DescriptorProto_ReservedRange::ByteSizeLong(v51, a2, a3, a4);
      v47 += v52 + ((9 * (__clz(v52 | 1) ^ 0x1F) + 73) >> 6);
      v50 -= 8;
    }
    while (v50);
  }
  v53 = *((unsigned int *)this + 50);
  v54 = (const InternalMetadata *)(v47 + v53);
  if ((int)v53 >= 1)
  {
    v55 = (uint64_t *)(*((_QWORD *)this + 26) + 8);
    do
    {
      v56 = *v55++;
      v57 = *(unsigned __int8 *)(v56 + 23);
      v58 = *(_QWORD *)(v56 + 8);
      if ((v57 & 0x80u) == 0)
        v58 = v57;
      v54 = (const InternalMetadata *)((char *)v54 + v58 + ((9 * (__clz(v58 | 1) ^ 0x1F) + 73) >> 6));
      --v53;
    }
    while (v53);
  }
  v59 = *((_DWORD *)this + 4);
  if ((v59 & 3) != 0)
  {
    if ((v59 & 1) != 0)
    {
      v60 = *((_QWORD *)this + 27) & 0xFFFFFFFFFFFFFFFELL;
      v61 = *(unsigned __int8 *)(v60 + 23);
      v62 = *(_QWORD *)(v60 + 8);
      if ((v61 & 0x80u) == 0)
        v62 = v61;
      v54 = (const InternalMetadata *)((char *)v54 + v62 + ((9 * (__clz(v62 | 1) ^ 0x1F) + 73) >> 6) + 1);
    }
    if ((v59 & 2) != 0)
    {
      v63 = google::protobuf::MessageOptions::ByteSizeLong(*((google::protobuf::MessageOptions **)this + 28));
      v54 = (const InternalMetadata *)((char *)&v63->var0
                                     + ((9 * (__clz(v63 | 1) ^ 0x1F) + 73) >> 6)
                                     + (_QWORD)v54
                                     + 1);
    }
  }
  if ((*((_BYTE *)this + 8) & 1) != 0)
    return (const InternalMetadata *)google::protobuf::internal::ComputeUnknownFieldsSize((google::protobuf::DescriptorProto *)((char *)this + 8), v54, (_DWORD *)this + 5, a4);
  *((_DWORD *)this + 5) = (_DWORD)v54;
  return v54;
}

void google::protobuf::DescriptorProto::MergeFrom(google::protobuf::DescriptorProto *this, const google::protobuf::Message *a2, google::protobuf::Message *a3)
{
  if (*(void (***)(google::protobuf::DescriptorProto *__hidden))a2 == &off_1E1BF7B48)
    google::protobuf::DescriptorProto::MergeFrom(this, a2);
  else
    google::protobuf::internal::ReflectionOps::Merge(a2, this, a3);
}

void google::protobuf::DescriptorProto::MergeFrom(google::protobuf::DescriptorProto *this, const google::protobuf::DescriptorProto *a2)
{
  uint64_t v4;
  unsigned int v5;
  google::protobuf::FieldDescriptorProto **v6;
  unsigned int *v7;
  signed int v8;
  signed int *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int *v12;
  int v13;
  _DWORD *v14;
  unsigned int v15;
  google::protobuf::EnumDescriptorProto **v16;
  unsigned int *v17;
  signed int v18;
  signed int *v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  google::protobuf::DescriptorProto_ExtensionRange **v25;
  google::protobuf::DescriptorProto_ExtensionRange **v26;
  google::protobuf::DescriptorProto_ExtensionRange *v27;
  google::protobuf::DescriptorProto_ExtensionRange *v28;
  google::protobuf::DescriptorProto_ExtensionRange *v29;
  google::protobuf::internal::ArenaImpl *v30;
  int v31;
  uint64_t v32;
  google::protobuf::DescriptorProto_ExtensionRange **v33;
  google::protobuf::DescriptorProto_ExtensionRange **v34;
  google::protobuf::DescriptorProto_ExtensionRange *v35;
  google::protobuf::DescriptorProto_ExtensionRange *v36;
  int v37;
  int *v38;
  unsigned int v39;
  google::protobuf::FieldDescriptorProto **v40;
  unsigned int *v41;
  signed int v42;
  signed int *v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  google::protobuf::OneofDescriptorProto **v49;
  google::protobuf::OneofDescriptorProto **v50;
  google::protobuf::OneofDescriptorProto *v51;
  google::protobuf::OneofDescriptorProto *v52;
  google::protobuf::OneofDescriptorProto *v53;
  google::protobuf::internal::ArenaImpl *v54;
  int v55;
  uint64_t v56;
  google::protobuf::OneofDescriptorProto **v57;
  google::protobuf::OneofDescriptorProto **v58;
  google::protobuf::OneofDescriptorProto *v59;
  google::protobuf::OneofDescriptorProto *v60;
  int v61;
  int *v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  int v66;
  uint64_t v67;
  google::protobuf::DescriptorProto_ReservedRange **v68;
  google::protobuf::DescriptorProto_ReservedRange **v69;
  google::protobuf::DescriptorProto_ReservedRange *v70;
  google::protobuf::DescriptorProto_ReservedRange *v71;
  google::protobuf::DescriptorProto_ReservedRange *v72;
  google::protobuf::internal::ArenaImpl *v73;
  int v74;
  uint64_t v75;
  google::protobuf::DescriptorProto_ReservedRange **v76;
  google::protobuf::DescriptorProto_ReservedRange **v77;
  google::protobuf::DescriptorProto_ReservedRange *v78;
  google::protobuf::DescriptorProto_ReservedRange *v79;
  int v80;
  int *v81;
  signed int v82;
  const std::string **v83;
  unsigned int *v84;
  int v85;
  int *v86;
  int v87;
  __int128 *v88;
  uint64_t v89;
  google::protobuf::internal::ArenaImpl *v90;
  google::protobuf::MessageOptions *v91;
  uint64_t v92;
  google::protobuf::internal::ArenaImpl *v93;
  const google::protobuf::MessageOptions *v94;
  unsigned int *v95;
  unsigned int *v96;
  unsigned int *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;

  v4 = *((_QWORD *)a2 + 1);
  if ((v4 & 1) != 0)
    google::protobuf::internal::InternalMetadata::DoMergeFrom<google::protobuf::UnknownFieldSet>((uint64_t *)this + 1, (const google::protobuf::UnknownFieldSet *)((v4 & 0xFFFFFFFFFFFFFFFELL) + 8));
  v5 = *((_DWORD *)a2 + 8);
  if (v5)
  {
    v6 = (google::protobuf::FieldDescriptorProto **)(*((_QWORD *)a2 + 5) + 8);
    v7 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::DescriptorProto *)((char *)this + 24), *((_DWORD *)a2 + 8));
    google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::TypeHandler>((google::protobuf::internal::ArenaImpl **)this + 3, (google::protobuf::FieldDescriptorProto **)v7, v6, v5, **((_DWORD **)this + 5) - *((_DWORD *)this + 8));
    v8 = *((_DWORD *)this + 8) + v5;
    *((_DWORD *)this + 8) = v8;
    v9 = (signed int *)*((_QWORD *)this + 5);
    if (*v9 < v8)
      *v9 = v8;
  }
  v10 = *((unsigned int *)a2 + 14);
  if ((_DWORD)v10)
  {
    v11 = *((_QWORD *)a2 + 8) + 8;
    v12 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::DescriptorProto *)((char *)this + 48), *((_DWORD *)a2 + 14));
    google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto>::TypeHandler>((char *)this + 48, v12, v11, v10, (**((_DWORD **)this + 8) - *((_DWORD *)this + 14)));
    v13 = *((_DWORD *)this + 14) + v10;
    *((_DWORD *)this + 14) = v13;
    v14 = (_DWORD *)*((_QWORD *)this + 8);
    if (*v14 < v13)
      *v14 = v13;
  }
  v15 = *((_DWORD *)a2 + 20);
  if (v15)
  {
    v16 = (google::protobuf::EnumDescriptorProto **)(*((_QWORD *)a2 + 11) + 8);
    v17 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::DescriptorProto *)((char *)this + 72), *((_DWORD *)a2 + 20));
    google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto>::TypeHandler>((google::protobuf::internal::ArenaImpl **)this + 9, (google::protobuf::EnumDescriptorProto **)v17, v16, v15, **((_DWORD **)this + 11) - *((_DWORD *)this + 20));
    v18 = *((_DWORD *)this + 20) + v15;
    *((_DWORD *)this + 20) = v18;
    v19 = (signed int *)*((_QWORD *)this + 11);
    if (*v19 < v18)
      *v19 = v18;
  }
  v20 = *((_DWORD *)a2 + 26);
  if (v20)
  {
    v98 = *((_QWORD *)a2 + 14);
    v95 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::DescriptorProto *)((char *)this + 96), v20);
    v21 = **((int **)this + 14);
    v22 = *((int *)this + 26);
    v23 = v21 - v22;
    if ((int)v21 - (int)v22 >= v20)
      v24 = v20;
    else
      v24 = v23;
    if ((int)v24 >= 1)
    {
      v25 = (google::protobuf::DescriptorProto_ExtensionRange **)v95;
      v26 = (google::protobuf::DescriptorProto_ExtensionRange **)(v98 + 8);
      do
      {
        v28 = *v26++;
        v27 = v28;
        v29 = *v25++;
        google::protobuf::internal::GenericTypeHandler<google::protobuf::DescriptorProto_ExtensionRange>::Merge(v27, v29);
        --v24;
      }
      while (v24);
    }
    if (v23 < v20)
    {
      v30 = (google::protobuf::internal::ArenaImpl *)*((_QWORD *)this + 12);
      v31 = v22 + v20 - v21;
      v32 = 8 * v21 - 8 * v22;
      v33 = (google::protobuf::DescriptorProto_ExtensionRange **)((char *)v95 + v32);
      v34 = (google::protobuf::DescriptorProto_ExtensionRange **)(v32 + v98 + 8);
      do
      {
        v35 = *v34++;
        v36 = (google::protobuf::DescriptorProto_ExtensionRange *)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::DescriptorProto_ExtensionRange>(v30);
        google::protobuf::internal::GenericTypeHandler<google::protobuf::DescriptorProto_ExtensionRange>::Merge(v35, v36);
        *v33++ = v36;
        --v31;
      }
      while (v31);
    }
    v37 = *((_DWORD *)this + 26) + v20;
    *((_DWORD *)this + 26) = v37;
    v38 = (int *)*((_QWORD *)this + 14);
    if (*v38 < v37)
      *v38 = v37;
  }
  v39 = *((_DWORD *)a2 + 32);
  if (v39)
  {
    v40 = (google::protobuf::FieldDescriptorProto **)(*((_QWORD *)a2 + 17) + 8);
    v41 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::DescriptorProto *)((char *)this + 120), *((_DWORD *)a2 + 32));
    google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::TypeHandler>((google::protobuf::internal::ArenaImpl **)this + 15, (google::protobuf::FieldDescriptorProto **)v41, v40, v39, **((_DWORD **)this + 17) - *((_DWORD *)this + 32));
    v42 = *((_DWORD *)this + 32) + v39;
    *((_DWORD *)this + 32) = v42;
    v43 = (signed int *)*((_QWORD *)this + 17);
    if (*v43 < v42)
      *v43 = v42;
  }
  v44 = *((_DWORD *)a2 + 38);
  if (v44)
  {
    v99 = *((_QWORD *)a2 + 20);
    v96 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::DescriptorProto *)((char *)this + 144), v44);
    v45 = **((int **)this + 20);
    v46 = *((int *)this + 38);
    v47 = v45 - v46;
    if ((int)v45 - (int)v46 >= v44)
      v48 = v44;
    else
      v48 = v47;
    if ((int)v48 >= 1)
    {
      v49 = (google::protobuf::OneofDescriptorProto **)v96;
      v50 = (google::protobuf::OneofDescriptorProto **)(v99 + 8);
      do
      {
        v52 = *v50++;
        v51 = v52;
        v53 = *v49++;
        google::protobuf::internal::GenericTypeHandler<google::protobuf::OneofDescriptorProto>::Merge(v51, v53);
        --v48;
      }
      while (v48);
    }
    if (v47 < v44)
    {
      v54 = (google::protobuf::internal::ArenaImpl *)*((_QWORD *)this + 18);
      v55 = v46 + v44 - v45;
      v56 = 8 * v45 - 8 * v46;
      v57 = (google::protobuf::OneofDescriptorProto **)((char *)v96 + v56);
      v58 = (google::protobuf::OneofDescriptorProto **)(v56 + v99 + 8);
      do
      {
        v59 = *v58++;
        v60 = (google::protobuf::OneofDescriptorProto *)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::OneofDescriptorProto>(v54);
        google::protobuf::internal::GenericTypeHandler<google::protobuf::OneofDescriptorProto>::Merge(v59, v60);
        *v57++ = v60;
        --v55;
      }
      while (v55);
    }
    v61 = *((_DWORD *)this + 38) + v44;
    *((_DWORD *)this + 38) = v61;
    v62 = (int *)*((_QWORD *)this + 20);
    if (*v62 < v61)
      *v62 = v61;
  }
  v63 = *((_DWORD *)a2 + 44);
  if (v63)
  {
    v100 = *((_QWORD *)a2 + 23);
    v97 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::DescriptorProto *)((char *)this + 168), v63);
    v64 = **((int **)this + 23);
    v65 = *((int *)this + 44);
    v66 = v64 - v65;
    if ((int)v64 - (int)v65 >= v63)
      v67 = v63;
    else
      v67 = v66;
    if ((int)v67 >= 1)
    {
      v68 = (google::protobuf::DescriptorProto_ReservedRange **)v97;
      v69 = (google::protobuf::DescriptorProto_ReservedRange **)(v100 + 8);
      do
      {
        v71 = *v69++;
        v70 = v71;
        v72 = *v68++;
        google::protobuf::internal::GenericTypeHandler<google::protobuf::DescriptorProto_ReservedRange>::Merge(v70, v72);
        --v67;
      }
      while (v67);
    }
    if (v66 < v63)
    {
      v73 = (google::protobuf::internal::ArenaImpl *)*((_QWORD *)this + 21);
      v74 = v65 + v63 - v64;
      v75 = 8 * v64 - 8 * v65;
      v76 = (google::protobuf::DescriptorProto_ReservedRange **)((char *)v97 + v75);
      v77 = (google::protobuf::DescriptorProto_ReservedRange **)(v75 + v100 + 8);
      do
      {
        v78 = *v77++;
        v79 = (google::protobuf::DescriptorProto_ReservedRange *)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::DescriptorProto_ReservedRange>(v73);
        google::protobuf::internal::GenericTypeHandler<google::protobuf::DescriptorProto_ReservedRange>::Merge(v78, v79);
        *v76++ = v79;
        --v74;
      }
      while (v74);
    }
    v80 = *((_DWORD *)this + 44) + v63;
    *((_DWORD *)this + 44) = v80;
    v81 = (int *)*((_QWORD *)this + 23);
    if (*v81 < v80)
      *v81 = v80;
  }
  v82 = *((_DWORD *)a2 + 50);
  if (v82)
  {
    v83 = (const std::string **)(*((_QWORD *)a2 + 26) + 8);
    v84 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::DescriptorProto *)((char *)this + 192), *((_DWORD *)a2 + 50));
    google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((std::string *)this + 8, (std::string **)v84, v83, v82, **((_DWORD **)this + 26) - *((_DWORD *)this + 50));
    v85 = *((_DWORD *)this + 50) + v82;
    *((_DWORD *)this + 50) = v85;
    v86 = (int *)*((_QWORD *)this + 26);
    if (*v86 < v85)
      *v86 = v85;
  }
  v87 = *((_DWORD *)a2 + 4);
  if ((v87 & 3) != 0)
  {
    if ((v87 & 1) != 0)
    {
      v88 = (__int128 *)(*((_QWORD *)a2 + 27) & 0xFFFFFFFFFFFFFFFELL);
      *((_DWORD *)this + 4) |= 1u;
      v89 = *((_QWORD *)this + 1);
      v90 = (google::protobuf::internal::ArenaImpl *)(v89 & 0xFFFFFFFFFFFFFFFELL);
      if ((v89 & 1) != 0)
        v90 = *(google::protobuf::internal::ArenaImpl **)v90;
      google::protobuf::internal::ArenaStringPtr::Set((std::string **)this + 27, (std::string *)&google::protobuf::internal::fixed_address_empty_string, v88, v90);
    }
    if ((v87 & 2) != 0)
    {
      *((_DWORD *)this + 4) |= 2u;
      v91 = (google::protobuf::MessageOptions *)*((_QWORD *)this + 28);
      if (!v91)
      {
        v92 = *((_QWORD *)this + 1);
        v93 = (google::protobuf::internal::ArenaImpl *)(v92 & 0xFFFFFFFFFFFFFFFELL);
        if ((v92 & 1) != 0)
          v93 = *(google::protobuf::internal::ArenaImpl **)v93;
        v91 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::MessageOptions>(v93);
        *((_QWORD *)this + 28) = v91;
      }
      if (*((_QWORD *)a2 + 28))
        v94 = (const google::protobuf::MessageOptions *)*((_QWORD *)a2 + 28);
      else
        v94 = (const google::protobuf::MessageOptions *)&google::protobuf::_MessageOptions_default_instance_;
      google::protobuf::MessageOptions::MergeFrom(v91, v94);
    }
  }
}

void google::protobuf::MessageOptions::MergeFrom(google::protobuf::MessageOptions *this, const google::protobuf::MessageOptions *a2)
{
  uint64_t v4;
  unsigned int v5;
  google::protobuf::UninterpretedOption **v6;
  unsigned int *v7;
  signed int v8;
  signed int *v9;
  int v10;

  google::protobuf::internal::ExtensionSet::MergeFrom((google::protobuf::MessageOptions *)((char *)this + 16), (const google::protobuf::MessageOptions *)((char *)a2 + 16));
  v4 = *((_QWORD *)a2 + 1);
  if ((v4 & 1) != 0)
    google::protobuf::internal::InternalMetadata::DoMergeFrom<google::protobuf::UnknownFieldSet>((uint64_t *)this + 1, (const google::protobuf::UnknownFieldSet *)((v4 & 0xFFFFFFFFFFFFFFFELL) + 8));
  v5 = *((_DWORD *)a2 + 14);
  if (v5)
  {
    v6 = (google::protobuf::UninterpretedOption **)(*((_QWORD *)a2 + 8) + 8);
    v7 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::MessageOptions *)((char *)this + 48), *((_DWORD *)a2 + 14));
    google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::TypeHandler>((google::protobuf::internal::ArenaImpl **)this + 6, (google::protobuf::UninterpretedOption **)v7, v6, v5, **((_DWORD **)this + 8) - *((_DWORD *)this + 14));
    v8 = *((_DWORD *)this + 14) + v5;
    *((_DWORD *)this + 14) = v8;
    v9 = (signed int *)*((_QWORD *)this + 8);
    if (*v9 < v8)
      *v9 = v8;
  }
  v10 = *((_DWORD *)a2 + 10);
  if ((v10 & 0xF) != 0)
  {
    if ((v10 & 1) != 0)
    {
      *((_BYTE *)this + 72) = *((_BYTE *)a2 + 72);
      if ((v10 & 2) == 0)
      {
LABEL_9:
        if ((v10 & 4) == 0)
          goto LABEL_10;
        goto LABEL_16;
      }
    }
    else if ((v10 & 2) == 0)
    {
      goto LABEL_9;
    }
    *((_BYTE *)this + 73) = *((_BYTE *)a2 + 73);
    if ((v10 & 4) == 0)
    {
LABEL_10:
      if ((v10 & 8) == 0)
      {
LABEL_12:
        *((_DWORD *)this + 10) |= v10;
        return;
      }
LABEL_11:
      *((_BYTE *)this + 75) = *((_BYTE *)a2 + 75);
      goto LABEL_12;
    }
LABEL_16:
    *((_BYTE *)this + 74) = *((_BYTE *)a2 + 74);
    if ((v10 & 8) == 0)
      goto LABEL_12;
    goto LABEL_11;
  }
}

void google::protobuf::DescriptorProto::CopyFrom(google::protobuf::DescriptorProto *this, const google::protobuf::Message *a2)
{
  google::protobuf::Message *v4;

  if (a2 != this)
  {
    google::protobuf::DescriptorProto::Clear(this);
    google::protobuf::DescriptorProto::MergeFrom(this, a2, v4);
  }
}

uint64_t google::protobuf::DescriptorProto::IsInitialized(google::protobuf::DescriptorProto *this)
{
  uint64_t v2;
  uint64_t v3;
  char IsInitialized;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;

  v2 = *((unsigned int *)this + 8);
  while ((int)v2 >= 1)
  {
    v3 = v2 - 1;
    IsInitialized = google::protobuf::FieldDescriptorProto::IsInitialized(*(google::protobuf::FieldDescriptorProto **)(*((_QWORD *)this + 5) + 8 * v2));
    v2 = v3;
    if ((IsInitialized & 1) == 0)
      return 0;
  }
  v5 = *((unsigned int *)this + 14);
  while ((int)v5 >= 1)
  {
    v6 = v5 - 1;
    v7 = google::protobuf::DescriptorProto::IsInitialized(*(google::protobuf::DescriptorProto **)(*((_QWORD *)this + 8)
                                                                                                + 8 * v5));
    v5 = v6;
    if ((v7 & 1) == 0)
      return 0;
  }
  v8 = *((unsigned int *)this + 20);
  while ((int)v8 >= 1)
  {
    v9 = v8 - 1;
    v10 = google::protobuf::EnumDescriptorProto::IsInitialized(*(google::protobuf::EnumDescriptorProto **)(*((_QWORD *)this + 11) + 8 * v8));
    v8 = v9;
    if ((v10 & 1) == 0)
      return 0;
  }
  v11 = *((unsigned int *)this + 26);
  while ((int)v11 >= 1)
  {
    v12 = v11 - 1;
    v13 = google::protobuf::DescriptorProto_ExtensionRange::IsInitialized(*(google::protobuf::DescriptorProto_ExtensionRange **)(*((_QWORD *)this + 14) + 8 * v11));
    v11 = v12;
    if ((v13 & 1) == 0)
      return 0;
  }
  v14 = *((unsigned int *)this + 32);
  while ((int)v14 >= 1)
  {
    v15 = v14 - 1;
    v16 = google::protobuf::FieldDescriptorProto::IsInitialized(*(google::protobuf::FieldDescriptorProto **)(*((_QWORD *)this + 17) + 8 * v14));
    v14 = v15;
    if ((v16 & 1) == 0)
      return 0;
  }
  v18 = *((unsigned int *)this + 38);
  while ((int)v18 >= 1)
  {
    v19 = v18 - 1;
    v20 = google::protobuf::OneofDescriptorProto::IsInitialized(*(google::protobuf::OneofDescriptorProto **)(*((_QWORD *)this + 20) + 8 * v18));
    result = 0;
    v18 = v19;
    if ((v20 & 1) == 0)
      return result;
  }
  if ((*((_BYTE *)this + 16) & 2) == 0)
    return 1;
  v21 = *((_QWORD *)this + 28);
  result = google::protobuf::internal::ExtensionSet::IsInitialized((google::protobuf::internal::ExtensionSet *)(v21 + 16));
  if ((_DWORD)result)
  {
    result = google::protobuf::internal::AllAreInitialized<google::protobuf::UninterpretedOption>(v21 + 48);
    if ((_DWORD)result)
      return 1;
  }
  return result;
}

uint64_t google::protobuf::MessageOptions::IsInitialized(google::protobuf::MessageOptions *this)
{
  uint64_t result;

  result = google::protobuf::internal::ExtensionSet::IsInitialized((google::protobuf::MessageOptions *)((char *)this + 16));
  if ((_DWORD)result)
    return google::protobuf::internal::AllAreInitialized<google::protobuf::UninterpretedOption>((uint64_t)this + 48);
  return result;
}

uint64_t google::protobuf::DescriptorProto::GetMetadata(google::protobuf::DescriptorProto *this)
{
  google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0);
  return off_1EDF46FE8[8];
}

google::protobuf::ExtensionRangeOptions *google::protobuf::ExtensionRangeOptions::ExtensionRangeOptions(google::protobuf::ExtensionRangeOptions *this, Arena *a2)
{
  *((_QWORD *)this + 2) = a2;
  *(_QWORD *)this = &off_1E1BF81E0;
  *((_QWORD *)this + 1) = a2;
  *((_DWORD *)this + 6) = 0;
  *((_QWORD *)this + 4) = 0;
  *((_QWORD *)this + 5) = a2;
  *((_QWORD *)this + 6) = 0;
  *((_QWORD *)this + 7) = 0;
  *((_DWORD *)this + 16) = 0;
  if (atomic_load(scc_info_ExtensionRangeOptions_google_2fprotobuf_2fdescriptor_2eproto))
    google::protobuf::internal::InitSCCImpl(scc_info_ExtensionRangeOptions_google_2fprotobuf_2fdescriptor_2eproto);
  return this;
}

void sub_1888A9B28(_Unwind_Exception *a1)
{
  google::protobuf::internal::ExtensionSet *v1;
  _QWORD *v2;

  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::TypeHandler>(v2);
  google::protobuf::internal::ExtensionSet::~ExtensionSet(v1);
  _Unwind_Resume(a1);
}

void google::protobuf::ExtensionRangeOptions::~ExtensionRangeOptions(google::protobuf::ExtensionRangeOptions *this)
{
  google::protobuf::internal::InternalMetadata::Delete<google::protobuf::UnknownFieldSet>((uint64_t *)this + 1);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::TypeHandler>((_QWORD *)this + 5);
  google::protobuf::internal::ExtensionSet::~ExtensionSet((google::protobuf::ExtensionRangeOptions *)((char *)this + 16));
}

{
  google::protobuf::ExtensionRangeOptions::~ExtensionRangeOptions(this);
  JUMPOUT(0x18D76437CLL);
}

uint64_t google::protobuf::ExtensionRangeOptions::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 64) = a2;
  return this;
}

google::protobuf::internal *google::protobuf::ExtensionRangeOptions::_InternalParse(uint64_t a1, google::protobuf::internal *a2, google::protobuf::internal::EpsCopyInputStream *this)
{
  char v5;
  google::protobuf::internal *result;
  _QWORD *v7;
  google::protobuf::internal *v8;
  unsigned int v9;
  BOOL v10;
  unint64_t v11;
  google::protobuf::internal *v12;
  int *v13;
  int v14;
  int v15;
  google::protobuf::UninterpretedOption *v16;
  uint64_t v17;
  uint64_t v18;
  google::protobuf::UnknownFieldSet *v19;
  int v20;
  uint64_t v21;
  google::protobuf::internal *v22;
  google::protobuf::UnknownFieldSet *v23;

  v22 = a2;
  v5 = google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(this, (const char **)&v22, *((_DWORD *)this + 23));
  result = v22;
  if ((v5 & 1) == 0)
  {
    v7 = (_QWORD *)(a1 + 8);
    while (1)
    {
      v8 = (google::protobuf::internal *)((char *)result + 1);
      v9 = *(unsigned __int8 *)result;
      if ((*(char *)result & 0x80000000) == 0)
      {
        v22 = (google::protobuf::internal *)((char *)result + 1);
        goto LABEL_5;
      }
      v9 = v9 + (*(unsigned __int8 *)v8 << 7) - 128;
      if (*(char *)v8 < 0)
        break;
      v8 = (google::protobuf::internal *)((char *)result + 2);
LABEL_13:
      v22 = v8;
      if (v9 == 7994)
      {
        result = (google::protobuf::internal *)((char *)v8 - 2);
        while (1)
        {
          v12 = (google::protobuf::internal *)((char *)result + 2);
          v22 = (google::protobuf::internal *)((char *)result + 2);
          v13 = *(int **)(a1 + 56);
          if (!v13)
            break;
          v14 = *(_DWORD *)(a1 + 48);
          v15 = *v13;
          if (v14 >= *v13)
          {
            if (v15 == *(_DWORD *)(a1 + 52))
            {
LABEL_20:
              if (v14 <= v15)
              {
                google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 40), v15 - v14 + 1);
                v13 = *(int **)(a1 + 56);
              }
              v15 = *v13;
            }
            *v13 = v15 + 1;
            v16 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::UninterpretedOption>(*(google::protobuf::internal::ArenaImpl **)(a1 + 40));
            v17 = *(_QWORD *)(a1 + 56);
            v18 = *(int *)(a1 + 48);
            *(_DWORD *)(a1 + 48) = v18 + 1;
            *(_QWORD *)(v17 + 8 * v18 + 8) = v16;
            v12 = v22;
            goto LABEL_24;
          }
          *(_DWORD *)(a1 + 48) = v14 + 1;
          v16 = *(google::protobuf::UninterpretedOption **)&v13[2 * v14 + 2];
LABEL_24:
          result = google::protobuf::internal::ParseContext::ParseMessage<google::protobuf::UninterpretedOption>(this, (uint64_t)v16, v12);
          v22 = result;
          if (!result)
            return result;
          if (*(_QWORD *)this <= (unint64_t)result || *(_WORD *)result != 16058)
            goto LABEL_32;
        }
        v14 = *(_DWORD *)(a1 + 48);
        v15 = *(_DWORD *)(a1 + 52);
        goto LABEL_20;
      }
LABEL_5:
      if (v9)
        v10 = (v9 & 7) == 4;
      else
        v10 = 1;
      if (v10)
      {
        *((_DWORD *)this + 20) = v9 - 1;
        return v8;
      }
      v11 = v9;
      if (v9 >> 6 < 0x7D)
      {
        if ((*v7 & 1) != 0)
        {
          v19 = (google::protobuf::UnknownFieldSet *)((*v7 & 0xFFFFFFFFFFFFFFFELL) + 8);
        }
        else
        {
          v19 = (google::protobuf::UnknownFieldSet *)google::protobuf::internal::InternalMetadata::mutable_unknown_fields_slow<google::protobuf::UnknownFieldSet>((uint64_t *)(a1 + 8));
          v8 = v22;
        }
        v23 = v19;
        result = google::protobuf::internal::FieldParser<google::protobuf::internal::UnknownFieldParserHelper>(v11, &v23, (uint64_t *)v8, (int32x2_t *)this);
      }
      else
      {
        result = (google::protobuf::internal *)google::protobuf::internal::ExtensionSet::ParseField((google::protobuf::internal::ExtensionSet *)(a1 + 16), v9, (unsigned __int8 *)v8, (uint64_t)&google::protobuf::_ExtensionRangeOptions_default_instance_, (uint64_t *)(a1 + 8), (int32x2_t *)this);
      }
      v22 = result;
      if (!result)
        return result;
LABEL_32:
      v20 = google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(this, (const char **)&v22, *((_DWORD *)this + 23));
      result = v22;
      if (v20)
        return result;
    }
    v8 = (google::protobuf::internal *)((char *)result + 3);
    v21 = -21;
    do
    {
      v9 += (*((unsigned __int8 *)v8 - 1) - 1) << (v21 + 35);
      if ((*((char *)v8 - 1) & 0x80000000) == 0)
        goto LABEL_13;
      v8 = (google::protobuf::internal *)((char *)v8 + 1);
      v21 += 7;
    }
    while (v21);
    return 0;
  }
  return result;
}

google::protobuf::internal *google::protobuf::internal::ParseContext::ParseMessage<google::protobuf::UninterpretedOption>(google::protobuf::internal::EpsCopyInputStream *this, uint64_t a2, google::protobuf::internal *a3)
{
  const char *v5;
  google::protobuf::internal *v6;
  google::protobuf::internal *result;
  uint64_t v8;
  int v9;
  int v10;
  BOOL v11;
  int v12;

  v5 = (const char *)*(unsigned __int8 *)a3;
  if (*(char *)a3 < 0)
  {
    result = (google::protobuf::internal *)google::protobuf::internal::ReadSizeFallback(a3, v5);
    if (!result)
      return result;
    v6 = result;
  }
  else
  {
    v6 = (google::protobuf::internal *)((char *)a3 + 1);
  }
  v8 = *((_QWORD *)this + 1);
  v9 = (_DWORD)v5 + (_DWORD)v6 - v8;
  *(_QWORD *)this = v8 + (v9 & (v9 >> 31));
  v10 = *((_DWORD *)this + 7);
  *((_DWORD *)this + 7) = v9;
  LODWORD(v8) = *((_DWORD *)this + 22);
  v11 = __OFSUB__((_DWORD)v8, 1);
  LODWORD(v8) = v8 - 1;
  *((_DWORD *)this + 22) = v8;
  if ((int)v8 < 0 != v11)
    return 0;
  result = google::protobuf::UninterpretedOption::_InternalParse(a2, v6, this);
  if (!result)
    return result;
  ++*((_DWORD *)this + 22);
  if (*((_DWORD *)this + 20))
    return 0;
  v12 = *((_DWORD *)this + 7) + v10 - v9;
  *((_DWORD *)this + 7) = v12;
  *(_QWORD *)this = *((_QWORD *)this + 1) + (v12 & (v12 >> 31));
  return result;
}

const google::protobuf::UnknownFieldSet *google::protobuf::ExtensionRangeOptions::_InternalSerialize(google::protobuf::ExtensionRangeOptions *this, unsigned __int8 *a2, google::protobuf::io::EpsCopyOutputStream *a3)
{
  int v6;
  int i;
  google::protobuf::UninterpretedOption *v8;
  unsigned int v9;
  unsigned __int8 *v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  const google::protobuf::UnknownFieldSet *result;
  google::protobuf::io::EpsCopyOutputStream *v15;
  uint64_t v16;

  v6 = *((_DWORD *)this + 12);
  if (v6)
  {
    for (i = 0; i != v6; ++i)
    {
      if (*(_QWORD *)a3 <= (unint64_t)a2)
        a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
      v8 = *(google::protobuf::UninterpretedOption **)(*((_QWORD *)this + 7) + 8 * i + 8);
      *(_WORD *)a2 = 16058;
      v9 = *((_DWORD *)v8 + 5);
      if (v9 > 0x7F)
      {
        a2[2] = v9 | 0x80;
        v11 = v9 >> 7;
        if (v9 >> 14)
        {
          v10 = a2 + 4;
          do
          {
            *(v10 - 1) = v11 | 0x80;
            v12 = v11 >> 7;
            ++v10;
            v13 = v11 >> 14;
            v11 >>= 7;
          }
          while (v13);
          *(v10 - 1) = v12;
        }
        else
        {
          a2[3] = v11;
          v10 = a2 + 4;
        }
      }
      else
      {
        a2[2] = v9;
        v10 = a2 + 3;
      }
      a2 = (unsigned __int8 *)google::protobuf::UninterpretedOption::_InternalSerialize(v8, v10, a3);
    }
  }
  result = (const google::protobuf::UnknownFieldSet *)google::protobuf::internal::ExtensionSet::_InternalSerialize((google::protobuf::ExtensionRangeOptions *)((char *)this + 16), 1000, 0x20000000, a2, a3);
  v16 = *((_QWORD *)this + 1);
  if ((v16 & 1) != 0)
    return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v16 & 0xFFFFFFFFFFFFFFFELL) + 8), result, a3, v15);
  return result;
}

const InternalMetadata *google::protobuf::ExtensionRangeOptions::ByteSizeLong(google::protobuf::ExtensionRangeOptions *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  CachedSize *v5;
  uint64_t v6;
  const InternalMetadata *v7;
  uint64_t v8;
  google::protobuf::UninterpretedOption **v9;
  uint64_t v10;
  google::protobuf::UninterpretedOption *v11;
  const InternalMetadata *v12;

  v2 = google::protobuf::internal::ExtensionSet::ByteSize((google::protobuf::ExtensionRangeOptions *)((char *)this + 16));
  v6 = *((int *)this + 12);
  v7 = (const InternalMetadata *)(v2 + 2 * v6);
  v8 = *((_QWORD *)this + 7);
  if (v8)
    v9 = (google::protobuf::UninterpretedOption **)(v8 + 8);
  else
    v9 = 0;
  if ((_DWORD)v6)
  {
    v10 = 8 * v6;
    do
    {
      v11 = *v9++;
      v12 = google::protobuf::UninterpretedOption::ByteSizeLong(v11, v3, v4, v5);
      v7 = (const InternalMetadata *)((char *)v7 + (_QWORD)v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6));
      v10 -= 8;
    }
    while (v10);
  }
  if ((*((_BYTE *)this + 8) & 1) != 0)
    return (const InternalMetadata *)google::protobuf::internal::ComputeUnknownFieldsSize((google::protobuf::ExtensionRangeOptions *)((char *)this + 8), v7, (_DWORD *)this + 16, v5);
  *((_DWORD *)this + 16) = (_DWORD)v7;
  return v7;
}

void google::protobuf::ExtensionRangeOptions::MergeFrom(google::protobuf::ExtensionRangeOptions *this, const google::protobuf::Message *a2, google::protobuf::Message *a3)
{
  if (*(void (***)(google::protobuf::ExtensionRangeOptions *__hidden))a2 == &off_1E1BF81E0)
    google::protobuf::ExtensionRangeOptions::MergeFrom(this, a2);
  else
    google::protobuf::internal::ReflectionOps::Merge(a2, this, a3);
}

void google::protobuf::ExtensionRangeOptions::CopyFrom(uint64_t **this, uint64_t **a2)
{
  google::protobuf::Message *v4;

  if (a2 != this)
  {
    google::protobuf::ExtensionRangeOptions::Clear(this);
    google::protobuf::ExtensionRangeOptions::MergeFrom((google::protobuf::ExtensionRangeOptions *)this, (const google::protobuf::Message *)a2, v4);
  }
}

uint64_t google::protobuf::internal::AllAreInitialized<google::protobuf::UninterpretedOption>(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(unsigned int *)(a1 + 8);
  if ((int)v1 >= 1)
  {
    do
    {
      v2 = v1--;
      v3 = *(_QWORD *)(*(_QWORD *)(a1 + 16) + 8 * v1 + 8);
      v4 = *(unsigned int *)(v3 + 32);
      v5 = *(_QWORD *)(v3 + 40);
      while ((int)v4 >= 1)
      {
        v6 = *(_QWORD *)(v5 + 8 * v4--);
        if ((~*(_DWORD *)(v6 + 16) & 3) != 0)
          return 0;
      }
    }
    while (v2 >= 2);
  }
  return 1;
}

uint64_t google::protobuf::ExtensionRangeOptions::GetMetadata(google::protobuf::ExtensionRangeOptions *this)
{
  google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0);
  return off_1EDF46FE8[10];
}

google::protobuf::FieldDescriptorProto *google::protobuf::FieldDescriptorProto::FieldDescriptorProto(google::protobuf::FieldDescriptorProto *this, Arena *a2)
{
  *(_QWORD *)this = &off_1E1BF8058;
  *((_QWORD *)this + 1) = a2;
  *((_QWORD *)this + 2) = 0;
  if (atomic_load(scc_info_FieldDescriptorProto_google_2fprotobuf_2fdescriptor_2eproto))
    google::protobuf::internal::InitSCCImpl(scc_info_FieldDescriptorProto_google_2fprotobuf_2fdescriptor_2eproto);
  *((_QWORD *)this + 3) = &google::protobuf::internal::fixed_address_empty_string;
  *((_QWORD *)this + 4) = &google::protobuf::internal::fixed_address_empty_string;
  *((_QWORD *)this + 5) = &google::protobuf::internal::fixed_address_empty_string;
  *((_QWORD *)this + 6) = &google::protobuf::internal::fixed_address_empty_string;
  *((_QWORD *)this + 8) = 0;
  *((_QWORD *)this + 9) = 0;
  *((_QWORD *)this + 7) = &google::protobuf::internal::fixed_address_empty_string;
  *((_BYTE *)this + 80) = 0;
  *(_QWORD *)((char *)this + 84) = 0x100000001;
  return this;
}

void google::protobuf::FieldDescriptorProto::~FieldDescriptorProto(google::protobuf::FieldDescriptorProto *this)
{
  google::protobuf::FieldDescriptorProto::SharedDtor(this);
  google::protobuf::internal::InternalMetadata::Delete<google::protobuf::UnknownFieldSet>((uint64_t *)this + 1);
}

{
  google::protobuf::FieldDescriptorProto::~FieldDescriptorProto(this);
  JUMPOUT(0x18D76437CLL);
}

google::protobuf::FieldOptions *google::protobuf::FieldDescriptorProto::SharedDtor(google::protobuf::FieldOptions *this)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = (uint64_t)this;
  v2 = *((_QWORD *)this + 3);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v2 + 23) < 0)
      operator delete(*(void **)v2);
    this = (google::protobuf::FieldOptions *)MEMORY[0x18D76437C](v2, 0x1012C40EC159624);
  }
  v3 = *(_QWORD *)(v1 + 32);
  if ((uint64_t *)v3 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v3 + 23) < 0)
      operator delete(*(void **)v3);
    this = (google::protobuf::FieldOptions *)MEMORY[0x18D76437C](v3, 0x1012C40EC159624);
  }
  v4 = *(_QWORD *)(v1 + 40);
  if ((uint64_t *)v4 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v4 + 23) < 0)
      operator delete(*(void **)v4);
    this = (google::protobuf::FieldOptions *)MEMORY[0x18D76437C](v4, 0x1012C40EC159624);
  }
  v5 = *(_QWORD *)(v1 + 48);
  if ((uint64_t *)v5 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v5 + 23) < 0)
      operator delete(*(void **)v5);
    this = (google::protobuf::FieldOptions *)MEMORY[0x18D76437C](v5, 0x1012C40EC159624);
  }
  v6 = *(_QWORD *)(v1 + 56);
  if ((uint64_t *)v6 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v6 + 23) < 0)
      operator delete(*(void **)v6);
    this = (google::protobuf::FieldOptions *)MEMORY[0x18D76437C](v6, 0x1012C40EC159624);
  }
  if ((_UNKNOWN *)v1 != &google::protobuf::_FieldDescriptorProto_default_instance_)
  {
    this = *(google::protobuf::FieldOptions **)(v1 + 64);
    if (this)
    {
      google::protobuf::FieldOptions::~FieldOptions(this);
      JUMPOUT(0x18D76437CLL);
    }
  }
  return this;
}

uint64_t google::protobuf::FieldDescriptorProto::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 20) = a2;
  return this;
}

google::protobuf::UnknownFieldSet *google::protobuf::FieldDescriptorProto::Clear(google::protobuf::UnknownFieldSet *this)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  char v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;

  v1 = (uint64_t)this;
  v2 = *((_DWORD *)this + 4);
  if ((v2 & 0x3F) == 0)
    goto LABEL_9;
  if ((v2 & 1) != 0)
  {
    v5 = *((_QWORD *)this + 3) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v5 + 23) < 0)
    {
      **(_BYTE **)v5 = 0;
      *(_QWORD *)(v5 + 8) = 0;
      if ((v2 & 2) != 0)
        goto LABEL_19;
    }
    else
    {
      *(_BYTE *)v5 = 0;
      *(_BYTE *)(v5 + 23) = 0;
      if ((v2 & 2) != 0)
        goto LABEL_19;
    }
LABEL_4:
    if ((v2 & 4) == 0)
      goto LABEL_5;
LABEL_23:
    v7 = *((_QWORD *)this + 5) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v7 + 23) < 0)
    {
      **(_BYTE **)v7 = 0;
      *(_QWORD *)(v7 + 8) = 0;
      if ((v2 & 8) != 0)
        goto LABEL_27;
    }
    else
    {
      *(_BYTE *)v7 = 0;
      *(_BYTE *)(v7 + 23) = 0;
      if ((v2 & 8) != 0)
        goto LABEL_27;
    }
LABEL_6:
    if ((v2 & 0x10) == 0)
      goto LABEL_7;
    goto LABEL_31;
  }
  if ((v2 & 2) == 0)
    goto LABEL_4;
LABEL_19:
  v6 = *((_QWORD *)this + 4) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v6 + 23) < 0)
  {
    **(_BYTE **)v6 = 0;
    *(_QWORD *)(v6 + 8) = 0;
    if ((v2 & 4) != 0)
      goto LABEL_23;
  }
  else
  {
    *(_BYTE *)v6 = 0;
    *(_BYTE *)(v6 + 23) = 0;
    if ((v2 & 4) != 0)
      goto LABEL_23;
  }
LABEL_5:
  if ((v2 & 8) == 0)
    goto LABEL_6;
LABEL_27:
  v8 = *((_QWORD *)this + 6) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v8 + 23) & 0x80000000) == 0)
  {
    *(_BYTE *)v8 = 0;
    *(_BYTE *)(v8 + 23) = 0;
    if ((v2 & 0x10) != 0)
      goto LABEL_31;
LABEL_7:
    if ((v2 & 0x20) == 0)
      goto LABEL_9;
    goto LABEL_8;
  }
  **(_BYTE **)v8 = 0;
  *(_QWORD *)(v8 + 8) = 0;
  if ((v2 & 0x10) == 0)
    goto LABEL_7;
LABEL_31:
  v9 = *((_QWORD *)this + 7) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v9 + 23) & 0x80000000) == 0)
  {
    *(_BYTE *)v9 = 0;
    *(_BYTE *)(v9 + 23) = 0;
    if ((v2 & 0x20) == 0)
      goto LABEL_9;
LABEL_8:
    this = google::protobuf::FieldOptions::Clear(*((uint64_t ***)this + 8));
    goto LABEL_9;
  }
  **(_BYTE **)v9 = 0;
  *(_QWORD *)(v9 + 8) = 0;
  if ((v2 & 0x20) != 0)
    goto LABEL_8;
LABEL_9:
  if ((v2 & 0xC0) != 0)
    *(_QWORD *)(v1 + 72) = 0;
  if ((v2 & 0x700) != 0)
  {
    *(_BYTE *)(v1 + 80) = 0;
    *(_QWORD *)(v1 + 84) = 0x100000001;
  }
  v4 = *(_BYTE *)(v1 + 8);
  v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if ((v4 & 1) != 0)
    return google::protobuf::internal::InternalMetadata::DoClear<google::protobuf::UnknownFieldSet>((uint64_t *)v3);
  return this;
}

google::protobuf::UnknownFieldSet *google::protobuf::FieldOptions::Clear(uint64_t **this)
{
  google::protobuf::UnknownFieldSet *result;
  uint64_t v3;
  google::protobuf::UnknownFieldSet **v4;
  google::protobuf::UnknownFieldSet *v5;
  char *v6;
  char v7;

  result = (google::protobuf::UnknownFieldSet *)google::protobuf::internal::ExtensionSet::Clear(this + 2);
  v3 = *((unsigned int *)this + 14);
  if ((int)v3 >= 1)
  {
    v4 = (google::protobuf::UnknownFieldSet **)(this[8] + 1);
    do
    {
      v5 = *v4++;
      result = google::protobuf::UninterpretedOption::Clear(v5);
      --v3;
    }
    while (v3);
    *((_DWORD *)this + 14) = 0;
  }
  if (((_BYTE)this[5] & 0x3F) != 0)
  {
    *((_DWORD *)this + 20) = 0;
    this[9] = 0;
  }
  v7 = *((_BYTE *)this + 8);
  v6 = (char *)(this + 1);
  *((_DWORD *)v6 + 8) = 0;
  if ((v7 & 1) != 0)
    return google::protobuf::internal::InternalMetadata::DoClear<google::protobuf::UnknownFieldSet>((uint64_t *)v6);
  return result;
}

google::protobuf::internal *google::protobuf::FieldDescriptorProto::_InternalParse(uint64_t a1, google::protobuf::internal *a2, int32x2_t *this)
{
  int v5;
  google::protobuf::internal *SizeFallback;
  std::string **v8;
  std::string **v9;
  unsigned int v10;
  int v11;
  uint64_t v12;
  google::protobuf::internal::ArenaImpl *v13;
  std::string *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  google::protobuf::internal *v19;
  int v20;
  google::protobuf::internal *v21;
  uint64_t v22;
  int v23;
  google::protobuf::internal *v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  google::protobuf::FieldOptions *v28;
  google::protobuf::internal::ArenaImpl *v29;
  const char *v30;
  uint64_t v31;
  google::protobuf::internal *v32;
  int v33;
  uint64_t v34;
  google::protobuf::internal *v35;
  google::protobuf::internal *v36;
  uint64_t v37;
  int v38;
  BOOL v39;
  google::protobuf::UnknownFieldSet *v40;
  int32x2_t v41;
  int v42;
  __int32 v43;
  BOOL v44;
  google::protobuf::internal *v45;
  int v46;
  google::protobuf::internal *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  google::protobuf::internal *v51;
  uint64_t v52;
  google::protobuf::internal *v53;
  uint64_t v54;
  google::protobuf::UnknownFieldSet *v55;
  unsigned int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t *v59;
  std::string **v60;
  std::string **v61;
  std::string **v62;
  google::protobuf::internal *v63;
  google::protobuf::UnknownFieldSet *v64;

  v63 = a2;
  v5 = 0;
  if ((google::protobuf::internal::EpsCopyInputStream::DoneWithCheck((google::protobuf::internal::EpsCopyInputStream *)this, (const char **)&v63, this[11].i32[1]) & 1) == 0)
  {
    v61 = (std::string **)(a1 + 48);
    v62 = (std::string **)(a1 + 56);
    v59 = (uint64_t *)(a1 + 8);
    v60 = (std::string **)(a1 + 40);
    v8 = (std::string **)(a1 + 32);
    v9 = (std::string **)(a1 + 24);
    while (2)
    {
      SizeFallback = (google::protobuf::internal *)((char *)v63 + 1);
      v10 = *(unsigned __int8 *)v63;
      if (*(char *)v63 < 0)
      {
        v11 = *(char *)SizeFallback;
        v10 = v10 + (v11 << 7) - 128;
        if (v11 < 0)
        {
          SizeFallback = (google::protobuf::internal *)((char *)v63 + 3);
          v16 = -21;
          while (1)
          {
            v10 += (*((unsigned __int8 *)SizeFallback - 1) - 1) << (v16 + 35);
            if ((*((char *)SizeFallback - 1) & 0x80000000) == 0)
              break;
            SizeFallback = (google::protobuf::internal *)((char *)SizeFallback + 1);
            v16 += 7;
            if (!v16)
              goto LABEL_125;
          }
        }
        else
        {
          SizeFallback = (google::protobuf::internal *)((char *)v63 + 2);
        }
      }
      v63 = SizeFallback;
      switch(v10 >> 3)
      {
        case 1u:
          if (v10 != 10)
            goto LABEL_80;
          *(_DWORD *)(a1 + 16) |= 1u;
          v12 = *(_QWORD *)(a1 + 8);
          v13 = (google::protobuf::internal::ArenaImpl *)(v12 & 0xFFFFFFFFFFFFFFFELL);
          if ((v12 & 1) != 0)
            v13 = *(google::protobuf::internal::ArenaImpl **)v13;
          v14 = *v9;
          if (*v9 != (std::string *)&google::protobuf::internal::fixed_address_empty_string)
            goto LABEL_70;
          v15 = (_QWORD *)(a1 + 24);
          goto LABEL_69;
        case 2u:
          if (v10 != 18)
            goto LABEL_80;
          *(_DWORD *)(a1 + 16) |= 2u;
          v17 = *(_QWORD *)(a1 + 8);
          v13 = (google::protobuf::internal::ArenaImpl *)(v17 & 0xFFFFFFFFFFFFFFFELL);
          if ((v17 & 1) != 0)
            v13 = *(google::protobuf::internal::ArenaImpl **)v13;
          v14 = *v8;
          if (*v8 != (std::string *)&google::protobuf::internal::fixed_address_empty_string)
            goto LABEL_70;
          v15 = (_QWORD *)(a1 + 32);
          goto LABEL_69;
        case 3u:
          if (v10 != 24)
            goto LABEL_80;
          v5 |= 0x40u;
          v19 = (google::protobuf::internal *)((char *)SizeFallback + 1);
          LODWORD(v18) = *(unsigned __int8 *)SizeFallback;
          if ((v18 & 0x80) == 0)
            goto LABEL_27;
          v20 = *(char *)v19;
          v18 = v18 + (v20 << 7) - 128;
          if (v20 < 0)
          {
            v47 = (google::protobuf::internal *)((char *)SizeFallback + 3);
            v48 = 14;
            while (1)
            {
              v18 += (*((unsigned __int8 *)v47 - 1) - 1) << v48;
              if ((*((char *)v47 - 1) & 0x80000000) == 0)
                break;
              v47 = (google::protobuf::internal *)((char *)v47 + 1);
              v48 += 7;
              if (v48 == 70)
              {
                SizeFallback = 0;
                *(_DWORD *)(a1 + 72) = 0;
                goto LABEL_3;
              }
            }
            v63 = v47;
          }
          else
          {
            v19 = (google::protobuf::internal *)((char *)SizeFallback + 2);
LABEL_27:
            v63 = v19;
          }
          *(_DWORD *)(a1 + 72) = v18;
          goto LABEL_72;
        case 4u:
          if (v10 != 32)
            goto LABEL_80;
          v21 = (google::protobuf::internal *)((char *)SizeFallback + 1);
          v22 = *(unsigned __int8 *)SizeFallback;
          if ((*(char *)SizeFallback & 0x80000000) == 0)
            goto LABEL_33;
          v23 = *(unsigned __int8 *)v21;
          v22 = (v22 + (v23 << 7) - 128);
          if ((v23 & 0x80) != 0)
          {
            v21 = (google::protobuf::internal *)((char *)SizeFallback + 3);
            v49 = 14;
            while (1)
            {
              v22 += (*((unsigned __int8 *)v21 - 1) - 1) << v49;
              if ((*((char *)v21 - 1) & 0x80000000) == 0)
                break;
              v21 = (google::protobuf::internal *)((char *)v21 + 1);
              v49 += 7;
              if (v49 == 70)
                goto LABEL_125;
            }
          }
          else
          {
            v21 = (google::protobuf::internal *)((char *)SizeFallback + 2);
          }
LABEL_33:
          v63 = v21;
          if ((v22 - 1) <= 2)
          {
            *(_DWORD *)(a1 + 16) |= 0x200u;
            *(_DWORD *)(a1 + 84) = v22;
            goto LABEL_72;
          }
          if ((*v59 & 1) != 0)
          {
            v55 = (google::protobuf::UnknownFieldSet *)((*v59 & 0xFFFFFFFFFFFFFFFELL) + 8);
          }
          else
          {
            v57 = v22;
            v55 = (google::protobuf::UnknownFieldSet *)google::protobuf::internal::InternalMetadata::mutable_unknown_fields_slow<google::protobuf::UnknownFieldSet>(v59);
            v22 = v57;
          }
          v56 = 4;
          goto LABEL_121;
        case 5u:
          if (v10 != 40)
            goto LABEL_80;
          v24 = (google::protobuf::internal *)((char *)SizeFallback + 1);
          v22 = *(unsigned __int8 *)SizeFallback;
          if ((*(char *)SizeFallback & 0x80000000) == 0)
            goto LABEL_39;
          v25 = *(unsigned __int8 *)v24;
          v22 = (v22 + (v25 << 7) - 128);
          if ((v25 & 0x80) != 0)
          {
            v24 = (google::protobuf::internal *)((char *)SizeFallback + 3);
            v50 = 14;
            while (1)
            {
              v22 += (*((unsigned __int8 *)v24 - 1) - 1) << v50;
              if ((*((char *)v24 - 1) & 0x80000000) == 0)
                break;
              v24 = (google::protobuf::internal *)((char *)v24 + 1);
              v50 += 7;
              if (v50 == 70)
                goto LABEL_125;
            }
          }
          else
          {
            v24 = (google::protobuf::internal *)((char *)SizeFallback + 2);
          }
LABEL_39:
          v63 = v24;
          if ((v22 - 1) > 0x11)
          {
            if ((*v59 & 1) != 0)
            {
              v55 = (google::protobuf::UnknownFieldSet *)((*v59 & 0xFFFFFFFFFFFFFFFELL) + 8);
            }
            else
            {
              v58 = v22;
              v55 = (google::protobuf::UnknownFieldSet *)google::protobuf::internal::InternalMetadata::mutable_unknown_fields_slow<google::protobuf::UnknownFieldSet>(v59);
              v22 = v58;
            }
            v56 = 5;
LABEL_121:
            google::protobuf::UnknownFieldSet::AddVarint(v55, v56, v22);
          }
          else
          {
            *(_DWORD *)(a1 + 16) |= 0x400u;
            *(_DWORD *)(a1 + 88) = v22;
          }
          goto LABEL_72;
        case 6u:
          if (v10 != 50)
            goto LABEL_80;
          *(_DWORD *)(a1 + 16) |= 4u;
          v26 = *(_QWORD *)(a1 + 8);
          v13 = (google::protobuf::internal::ArenaImpl *)(v26 & 0xFFFFFFFFFFFFFFFELL);
          if ((v26 & 1) != 0)
            v13 = *(google::protobuf::internal::ArenaImpl **)v13;
          v14 = *v60;
          if (*v60 != (std::string *)&google::protobuf::internal::fixed_address_empty_string)
            goto LABEL_70;
          v15 = (_QWORD *)(a1 + 40);
          goto LABEL_69;
        case 7u:
          if (v10 != 58)
            goto LABEL_80;
          *(_DWORD *)(a1 + 16) |= 8u;
          v27 = *(_QWORD *)(a1 + 8);
          v13 = (google::protobuf::internal::ArenaImpl *)(v27 & 0xFFFFFFFFFFFFFFFELL);
          if ((v27 & 1) != 0)
            v13 = *(google::protobuf::internal::ArenaImpl **)v13;
          v14 = *v61;
          if (*v61 != (std::string *)&google::protobuf::internal::fixed_address_empty_string)
            goto LABEL_70;
          v15 = (_QWORD *)(a1 + 48);
          goto LABEL_69;
        case 8u:
          if (v10 != 66)
            goto LABEL_80;
          *(_DWORD *)(a1 + 16) |= 0x20u;
          v28 = *(google::protobuf::FieldOptions **)(a1 + 64);
          if (!v28)
          {
            v29 = (google::protobuf::internal::ArenaImpl *)(*v59 & 0xFFFFFFFFFFFFFFFELL);
            if ((*v59 & 1) != 0)
              v29 = *(google::protobuf::internal::ArenaImpl **)v29;
            v28 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::FieldOptions>(v29);
            *(_QWORD *)(a1 + 64) = v28;
            SizeFallback = v63;
          }
          v30 = (const char *)*(unsigned __int8 *)SizeFallback;
          if (*(char *)SizeFallback < 0)
          {
            SizeFallback = (google::protobuf::internal *)google::protobuf::internal::ReadSizeFallback(SizeFallback, v30);
            if (!SizeFallback)
              goto LABEL_3;
          }
          else
          {
            SizeFallback = (google::protobuf::internal *)((char *)SizeFallback + 1);
          }
          v41 = this[1];
          v42 = (_DWORD)v30 + (_DWORD)SizeFallback - v41.i32[0];
          *this = (int32x2_t)(*(_QWORD *)&v41 + (v42 & (v42 >> 31)));
          v43 = this[3].i32[1];
          this[3].i32[1] = v42;
          v41.i32[0] = this[11].i32[0];
          v44 = __OFSUB__(v41.i32[0]--, 1);
          this[11].i32[0] = v41.i32[0];
          if (v41.i32[0] < 0 != v44
            || (v45 = google::protobuf::FieldOptions::_InternalParse((uint64_t)v28, SizeFallback, (google::protobuf::internal::EpsCopyInputStream *)this)) == 0|| (++this[11].i32[0], this[10].i32[0]))
          {
LABEL_125:
            SizeFallback = 0;
            goto LABEL_3;
          }
          v46 = this[3].i32[1] + v43 - v42;
          this[3].i32[1] = v46;
          *this = (int32x2_t)(*(_QWORD *)&this[1] + (v46 & (v46 >> 31)));
          v63 = v45;
LABEL_72:
          if (google::protobuf::internal::EpsCopyInputStream::DoneWithCheck((google::protobuf::internal::EpsCopyInputStream *)this, (const char **)&v63, this[11].i32[1]))break;
          continue;
        case 9u:
          if (v10 != 72)
            goto LABEL_80;
          v5 |= 0x80u;
          v32 = (google::protobuf::internal *)((char *)SizeFallback + 1);
          LODWORD(v31) = *(unsigned __int8 *)SizeFallback;
          if ((v31 & 0x80) == 0)
            goto LABEL_62;
          v33 = *(char *)v32;
          v31 = v31 + (v33 << 7) - 128;
          if (v33 < 0)
          {
            v51 = (google::protobuf::internal *)((char *)SizeFallback + 3);
            v52 = 14;
            while (1)
            {
              v31 += (*((unsigned __int8 *)v51 - 1) - 1) << v52;
              if ((*((char *)v51 - 1) & 0x80000000) == 0)
                break;
              v51 = (google::protobuf::internal *)((char *)v51 + 1);
              v52 += 7;
              if (v52 == 70)
              {
                SizeFallback = 0;
                *(_DWORD *)(a1 + 76) = 0;
                goto LABEL_3;
              }
            }
            v63 = v51;
          }
          else
          {
            v32 = (google::protobuf::internal *)((char *)SizeFallback + 2);
LABEL_62:
            v63 = v32;
          }
          *(_DWORD *)(a1 + 76) = v31;
          goto LABEL_72;
        case 0xAu:
          if (v10 != 82)
            goto LABEL_80;
          *(_DWORD *)(a1 + 16) |= 0x10u;
          v34 = *(_QWORD *)(a1 + 8);
          v13 = (google::protobuf::internal::ArenaImpl *)(v34 & 0xFFFFFFFFFFFFFFFELL);
          if ((v34 & 1) != 0)
            v13 = *(google::protobuf::internal::ArenaImpl **)v13;
          v14 = *v62;
          if (*v62 != (std::string *)&google::protobuf::internal::fixed_address_empty_string)
            goto LABEL_70;
          v15 = (_QWORD *)(a1 + 56);
LABEL_69:
          v14 = (std::string *)google::protobuf::internal::ArenaStringPtr::MutableSlow<>(v15, v13);
          SizeFallback = v63;
LABEL_70:
          v35 = (google::protobuf::internal *)google::protobuf::internal::InlineGreedyStringParser(v14, (std::string::value_type *)SizeFallback, (uint64_t)this);
          goto LABEL_71;
        case 0x11u:
          if (v10 != 136)
            goto LABEL_80;
          v5 |= 0x100u;
          v36 = (google::protobuf::internal *)((char *)SizeFallback + 1);
          v37 = *(unsigned __int8 *)SizeFallback;
          if ((*(char *)SizeFallback & 0x80000000) == 0)
            goto LABEL_78;
          v38 = *(unsigned __int8 *)v36;
          v37 = (v37 + (v38 << 7) - 128);
          if ((v38 & 0x80) != 0)
          {
            v53 = (google::protobuf::internal *)((char *)SizeFallback + 3);
            v54 = 14;
            while (1)
            {
              v37 += (*((unsigned __int8 *)v53 - 1) - 1) << v54;
              if ((*((char *)v53 - 1) & 0x80000000) == 0)
                break;
              v53 = (google::protobuf::internal *)((char *)v53 + 1);
              v54 += 7;
              if (v54 == 70)
              {
                SizeFallback = 0;
                *(_BYTE *)(a1 + 80) = 0;
                goto LABEL_3;
              }
            }
            v63 = v53;
          }
          else
          {
            v36 = (google::protobuf::internal *)((char *)SizeFallback + 2);
LABEL_78:
            v63 = v36;
          }
          *(_BYTE *)(a1 + 80) = v37 != 0;
          goto LABEL_72;
        default:
LABEL_80:
          if (v10)
            v39 = (v10 & 7) == 4;
          else
            v39 = 1;
          if (v39)
          {
            this[10].i32[0] = v10 - 1;
            goto LABEL_3;
          }
          if ((*v59 & 1) != 0)
          {
            v40 = (google::protobuf::UnknownFieldSet *)((*v59 & 0xFFFFFFFFFFFFFFFELL) + 8);
          }
          else
          {
            v40 = (google::protobuf::UnknownFieldSet *)google::protobuf::internal::InternalMetadata::mutable_unknown_fields_slow<google::protobuf::UnknownFieldSet>(v59);
            SizeFallback = v63;
          }
          v64 = v40;
          v35 = google::protobuf::internal::FieldParser<google::protobuf::internal::UnknownFieldParserHelper>(v10, &v64, (uint64_t *)SizeFallback, this);
LABEL_71:
          v63 = v35;
          if (v35)
            goto LABEL_72;
          goto LABEL_125;
      }
      break;
    }
  }
  SizeFallback = v63;
LABEL_3:
  *(_DWORD *)(a1 + 16) |= v5;
  return SizeFallback;
}

const google::protobuf::UnknownFieldSet *google::protobuf::FieldDescriptorProto::_InternalSerialize(google::protobuf::FieldDescriptorProto *this, unsigned __int8 *a2, google::protobuf::io::EpsCopyOutputStream *a3)
{
  unsigned __int8 *v4;
  int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  google::protobuf::FieldOptions *v19;
  unsigned int v20;
  unsigned __int8 *v21;
  unsigned int v22;
  unsigned int v23;
  unsigned int v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unsigned __int8 v29;
  uint64_t v30;

  v4 = a2;
  v6 = *((_DWORD *)this + 4);
  if ((v6 & 1) != 0)
  {
    v4 = google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 1, *((_QWORD *)this + 3) & 0xFFFFFFFFFFFFFFFELL, a2);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 0x40) == 0)
        goto LABEL_4;
LABEL_15:
      if (*(_QWORD *)a3 <= (unint64_t)v4)
        v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
      v7 = *((int *)this + 18);
      *v4 = 24;
      if (v7 > 0x7F)
      {
        v4[1] = v7 | 0x80;
        v8 = v7 >> 7;
        if (v7 >> 14)
        {
          v4 += 3;
          do
          {
            *(v4 - 1) = v8 | 0x80;
            v9 = v8 >> 7;
            ++v4;
            v10 = v8 >> 14;
            v8 >>= 7;
          }
          while (v10);
          *(v4 - 1) = v9;
          if ((v6 & 0x200) != 0)
            goto LABEL_26;
        }
        else
        {
          v4[2] = v8;
          v4 += 3;
          if ((v6 & 0x200) != 0)
            goto LABEL_26;
        }
      }
      else
      {
        v4[1] = v7;
        v4 += 2;
        if ((v6 & 0x200) != 0)
          goto LABEL_26;
      }
LABEL_5:
      if ((v6 & 0x400) == 0)
        goto LABEL_6;
LABEL_37:
      if (*(_QWORD *)a3 <= (unint64_t)v4)
        v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
      v15 = *((int *)this + 22);
      *v4 = 40;
      if (v15 > 0x7F)
      {
        v4[1] = v15 | 0x80;
        v16 = v15 >> 7;
        if (v15 >> 14)
        {
          v4 += 3;
          do
          {
            *(v4 - 1) = v16 | 0x80;
            v17 = v16 >> 7;
            ++v4;
            v18 = v16 >> 14;
            v16 >>= 7;
          }
          while (v18);
          *(v4 - 1) = v17;
          if ((v6 & 4) != 0)
            goto LABEL_48;
        }
        else
        {
          v4[2] = v16;
          v4 += 3;
          if ((v6 & 4) != 0)
            goto LABEL_48;
        }
      }
      else
      {
        v4[1] = v15;
        v4 += 2;
        if ((v6 & 4) != 0)
          goto LABEL_48;
      }
LABEL_7:
      if ((v6 & 8) == 0)
        goto LABEL_8;
      goto LABEL_49;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  v4 = google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 2, *((_QWORD *)this + 4) & 0xFFFFFFFFFFFFFFFELL, v4);
  if ((v6 & 0x40) != 0)
    goto LABEL_15;
LABEL_4:
  if ((v6 & 0x200) == 0)
    goto LABEL_5;
LABEL_26:
  if (*(_QWORD *)a3 <= (unint64_t)v4)
    v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
  v11 = *((int *)this + 21);
  *v4 = 32;
  if (v11 > 0x7F)
  {
    v4[1] = v11 | 0x80;
    v12 = v11 >> 7;
    if (v11 >> 14)
    {
      v4 += 3;
      do
      {
        *(v4 - 1) = v12 | 0x80;
        v13 = v12 >> 7;
        ++v4;
        v14 = v12 >> 14;
        v12 >>= 7;
      }
      while (v14);
      *(v4 - 1) = v13;
      if ((v6 & 0x400) != 0)
        goto LABEL_37;
    }
    else
    {
      v4[2] = v12;
      v4 += 3;
      if ((v6 & 0x400) != 0)
        goto LABEL_37;
    }
  }
  else
  {
    v4[1] = v11;
    v4 += 2;
    if ((v6 & 0x400) != 0)
      goto LABEL_37;
  }
LABEL_6:
  if ((v6 & 4) == 0)
    goto LABEL_7;
LABEL_48:
  v4 = google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 6, *((_QWORD *)this + 5) & 0xFFFFFFFFFFFFFFFELL, v4);
  if ((v6 & 8) == 0)
  {
LABEL_8:
    if ((v6 & 0x20) == 0)
      goto LABEL_9;
    goto LABEL_50;
  }
LABEL_49:
  v4 = google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 7, *((_QWORD *)this + 6) & 0xFFFFFFFFFFFFFFFELL, v4);
  if ((v6 & 0x20) == 0)
  {
LABEL_9:
    if ((v6 & 0x80) == 0)
      goto LABEL_10;
LABEL_60:
    if (*(_QWORD *)a3 <= (unint64_t)v4)
      v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
    v25 = *((int *)this + 19);
    *v4 = 72;
    if (v25 > 0x7F)
    {
      v4[1] = v25 | 0x80;
      v26 = v25 >> 7;
      if (v25 >> 14)
      {
        v4 += 3;
        do
        {
          *(v4 - 1) = v26 | 0x80;
          v27 = v26 >> 7;
          ++v4;
          v28 = v26 >> 14;
          v26 >>= 7;
        }
        while (v28);
        *(v4 - 1) = v27;
        if ((v6 & 0x10) != 0)
          goto LABEL_71;
      }
      else
      {
        v4[2] = v26;
        v4 += 3;
        if ((v6 & 0x10) != 0)
          goto LABEL_71;
      }
    }
    else
    {
      v4[1] = v25;
      v4 += 2;
      if ((v6 & 0x10) != 0)
        goto LABEL_71;
    }
LABEL_11:
    if ((v6 & 0x100) == 0)
      goto LABEL_75;
    goto LABEL_72;
  }
LABEL_50:
  if (*(_QWORD *)a3 <= (unint64_t)v4)
    v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
  v19 = (google::protobuf::FieldOptions *)*((_QWORD *)this + 8);
  *v4 = 66;
  v20 = *((_DWORD *)v19 + 11);
  if (v20 > 0x7F)
  {
    v4[1] = v20 | 0x80;
    v22 = v20 >> 7;
    if (v20 >> 14)
    {
      v21 = v4 + 3;
      do
      {
        *(v21 - 1) = v22 | 0x80;
        v23 = v22 >> 7;
        ++v21;
        v24 = v22 >> 14;
        v22 >>= 7;
      }
      while (v24);
      *(v21 - 1) = v23;
    }
    else
    {
      v4[2] = v22;
      v21 = v4 + 3;
    }
  }
  else
  {
    v4[1] = v20;
    v21 = v4 + 2;
  }
  v4 = (unsigned __int8 *)google::protobuf::FieldOptions::_InternalSerialize(v19, v21, a3);
  if ((v6 & 0x80) != 0)
    goto LABEL_60;
LABEL_10:
  if ((v6 & 0x10) == 0)
    goto LABEL_11;
LABEL_71:
  v4 = google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 10, *((_QWORD *)this + 7) & 0xFFFFFFFFFFFFFFFELL, v4);
  if ((v6 & 0x100) == 0)
    goto LABEL_75;
LABEL_72:
  if (*(_QWORD *)a3 <= (unint64_t)v4)
    v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
  v29 = *((_BYTE *)this + 80);
  *(_WORD *)v4 = 392;
  v4[2] = v29;
  v4 += 3;
LABEL_75:
  v30 = *((_QWORD *)this + 1);
  if ((v30 & 1) != 0)
    return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v30 & 0xFFFFFFFFFFFFFFFELL) + 8), (const google::protobuf::UnknownFieldSet *)v4, a3, (google::protobuf::io::EpsCopyOutputStream *)v4);
  else
    return (const google::protobuf::UnknownFieldSet *)v4;
}

const InternalMetadata *google::protobuf::FieldDescriptorProto::ByteSizeLong(google::protobuf::FieldDescriptorProto *this, uint64_t a2, uint64_t a3, CachedSize *a4)
{
  int v5;
  const InternalMetadata *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  const InternalMetadata *v22;
  int v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;

  v5 = *((_DWORD *)this + 4);
  if (!(_BYTE)v5)
  {
    v6 = 0;
    goto LABEL_37;
  }
  if ((v5 & 1) == 0)
  {
    v6 = 0;
    if ((v5 & 2) == 0)
      goto LABEL_12;
    goto LABEL_9;
  }
  v7 = *((_QWORD *)this + 3) & 0xFFFFFFFFFFFFFFFELL;
  v8 = *(unsigned __int8 *)(v7 + 23);
  v9 = *(_QWORD *)(v7 + 8);
  if ((v8 & 0x80u) == 0)
    v9 = v8;
  v6 = (const InternalMetadata *)(v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1);
  if ((v5 & 2) != 0)
  {
LABEL_9:
    v10 = *((_QWORD *)this + 4) & 0xFFFFFFFFFFFFFFFELL;
    v11 = *(unsigned __int8 *)(v10 + 23);
    v12 = *(_QWORD *)(v10 + 8);
    if ((v11 & 0x80u) == 0)
      v12 = v11;
    v6 = (const InternalMetadata *)((char *)v6 + v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1);
  }
LABEL_12:
  if ((v5 & 4) != 0)
  {
    v13 = *((_QWORD *)this + 5) & 0xFFFFFFFFFFFFFFFELL;
    v14 = *(unsigned __int8 *)(v13 + 23);
    v15 = *(_QWORD *)(v13 + 8);
    if ((v14 & 0x80u) == 0)
      v15 = v14;
    v6 = (const InternalMetadata *)((char *)v6 + v15 + ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 1);
    if ((v5 & 8) == 0)
    {
LABEL_14:
      if ((v5 & 0x10) == 0)
        goto LABEL_15;
      goto LABEL_25;
    }
  }
  else if ((v5 & 8) == 0)
  {
    goto LABEL_14;
  }
  v16 = *((_QWORD *)this + 6) & 0xFFFFFFFFFFFFFFFELL;
  v17 = *(unsigned __int8 *)(v16 + 23);
  v18 = *(_QWORD *)(v16 + 8);
  if ((v17 & 0x80u) == 0)
    v18 = v17;
  v6 = (const InternalMetadata *)((char *)v6 + v18 + ((9 * (__clz(v18 | 1) ^ 0x1F) + 73) >> 6) + 1);
  if ((v5 & 0x10) == 0)
  {
LABEL_15:
    if ((v5 & 0x20) == 0)
      goto LABEL_16;
    goto LABEL_28;
  }
LABEL_25:
  v19 = *((_QWORD *)this + 7) & 0xFFFFFFFFFFFFFFFELL;
  v20 = *(unsigned __int8 *)(v19 + 23);
  v21 = *(_QWORD *)(v19 + 8);
  if ((v20 & 0x80u) == 0)
    v21 = v20;
  v6 = (const InternalMetadata *)((char *)v6 + v21 + ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6) + 1);
  if ((v5 & 0x20) == 0)
  {
LABEL_16:
    if ((v5 & 0x40) == 0)
      goto LABEL_17;
    goto LABEL_29;
  }
LABEL_28:
  v22 = google::protobuf::FieldOptions::ByteSizeLong(*((google::protobuf::FieldOptions **)this + 8));
  v6 = (const InternalMetadata *)((char *)&v22->var0
                                + (_QWORD)v6
                                + ((9 * (__clz(v22 | 1) ^ 0x1F) + 73) >> 6)
                                + 1);
  if ((v5 & 0x40) == 0)
  {
LABEL_17:
    if ((v5 & 0x80) == 0)
      goto LABEL_37;
    goto LABEL_33;
  }
LABEL_29:
  v23 = *((_DWORD *)this + 18);
  if (v23 < 0)
    v24 = 11;
  else
    v24 = ((9 * (__clz(v23 | 1) ^ 0x1F) + 73) >> 6) + 1;
  v6 = (const InternalMetadata *)((char *)v6 + v24);
  if ((v5 & 0x80) != 0)
  {
LABEL_33:
    v25 = *((_DWORD *)this + 19);
    if (v25 < 0)
      v26 = 11;
    else
      v26 = ((9 * (__clz(v25 | 1) ^ 0x1F) + 73) >> 6) + 1;
    v6 = (const InternalMetadata *)((char *)v6 + v26);
  }
LABEL_37:
  if ((v5 & 0x700) != 0)
  {
    if ((v5 & 0x100) != 0)
      v6 = (const InternalMetadata *)((char *)v6 + 3);
    if ((v5 & 0x200) != 0)
    {
      v27 = *((_DWORD *)this + 21);
      v28 = ((9 * (__clz(v27 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if (v27 >= 0)
        v29 = v28;
      else
        v29 = 11;
      v6 = (const InternalMetadata *)((char *)v6 + v29);
    }
    if ((v5 & 0x400) != 0)
    {
      v30 = *((_DWORD *)this + 22);
      v31 = ((9 * (__clz(v30 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if (v30 >= 0)
        v32 = v31;
      else
        v32 = 11;
      v6 = (const InternalMetadata *)((char *)v6 + v32);
    }
  }
  if ((*((_BYTE *)this + 8) & 1) != 0)
    return (const InternalMetadata *)google::protobuf::internal::ComputeUnknownFieldsSize((google::protobuf::FieldDescriptorProto *)((char *)this + 8), v6, (_DWORD *)this + 5, a4);
  *((_DWORD *)this + 5) = (_DWORD)v6;
  return v6;
}

void google::protobuf::FieldDescriptorProto::MergeFrom(google::protobuf::FieldDescriptorProto *this, const google::protobuf::Message *a2, google::protobuf::Message *a3)
{
  if (*(void (***)(google::protobuf::FieldDescriptorProto *__hidden))a2 == &off_1E1BF8058)
    google::protobuf::FieldDescriptorProto::MergeFrom(this, a2);
  else
    google::protobuf::internal::ReflectionOps::Merge(a2, this, a3);
}

void google::protobuf::FieldDescriptorProto::MergeFrom(google::protobuf::FieldDescriptorProto *this, const google::protobuf::FieldDescriptorProto *a2)
{
  _QWORD *v4;
  uint64_t v5;
  int v6;
  __int128 *v7;
  uint64_t v8;
  google::protobuf::internal::ArenaImpl *v9;
  __int128 *v10;
  uint64_t v11;
  google::protobuf::internal::ArenaImpl *v12;
  __int128 *v13;
  uint64_t v14;
  google::protobuf::internal::ArenaImpl *v15;
  __int128 *v16;
  uint64_t v17;
  google::protobuf::internal::ArenaImpl *v18;
  __int128 *v19;
  uint64_t v20;
  google::protobuf::internal::ArenaImpl *v21;
  google::protobuf::FieldOptions *v22;
  google::protobuf::internal::ArenaImpl *v23;
  const google::protobuf::FieldOptions *v24;

  v4 = (_QWORD *)((char *)this + 8);
  v5 = *((_QWORD *)a2 + 1);
  if ((v5 & 1) != 0)
    google::protobuf::internal::InternalMetadata::DoMergeFrom<google::protobuf::UnknownFieldSet>((uint64_t *)this + 1, (const google::protobuf::UnknownFieldSet *)((v5 & 0xFFFFFFFFFFFFFFFELL) + 8));
  v6 = *((_DWORD *)a2 + 4);
  if ((_BYTE)v6)
  {
    if ((v6 & 1) != 0)
    {
      v7 = (__int128 *)(*((_QWORD *)a2 + 3) & 0xFFFFFFFFFFFFFFFELL);
      *((_DWORD *)this + 4) |= 1u;
      v8 = *((_QWORD *)this + 1);
      v9 = (google::protobuf::internal::ArenaImpl *)(v8 & 0xFFFFFFFFFFFFFFFELL);
      if ((v8 & 1) != 0)
        v9 = *(google::protobuf::internal::ArenaImpl **)v9;
      google::protobuf::internal::ArenaStringPtr::Set((std::string **)this + 3, (std::string *)&google::protobuf::internal::fixed_address_empty_string, v7, v9);
      if ((v6 & 2) == 0)
      {
LABEL_6:
        if ((v6 & 4) == 0)
          goto LABEL_7;
        goto LABEL_27;
      }
    }
    else if ((v6 & 2) == 0)
    {
      goto LABEL_6;
    }
    v10 = (__int128 *)(*((_QWORD *)a2 + 4) & 0xFFFFFFFFFFFFFFFELL);
    *((_DWORD *)this + 4) |= 2u;
    v11 = *((_QWORD *)this + 1);
    v12 = (google::protobuf::internal::ArenaImpl *)(v11 & 0xFFFFFFFFFFFFFFFELL);
    if ((v11 & 1) != 0)
      v12 = *(google::protobuf::internal::ArenaImpl **)v12;
    google::protobuf::internal::ArenaStringPtr::Set((std::string **)this + 4, (std::string *)&google::protobuf::internal::fixed_address_empty_string, v10, v12);
    if ((v6 & 4) == 0)
    {
LABEL_7:
      if ((v6 & 8) == 0)
        goto LABEL_8;
      goto LABEL_30;
    }
LABEL_27:
    v13 = (__int128 *)(*((_QWORD *)a2 + 5) & 0xFFFFFFFFFFFFFFFELL);
    *((_DWORD *)this + 4) |= 4u;
    v14 = *((_QWORD *)this + 1);
    v15 = (google::protobuf::internal::ArenaImpl *)(v14 & 0xFFFFFFFFFFFFFFFELL);
    if ((v14 & 1) != 0)
      v15 = *(google::protobuf::internal::ArenaImpl **)v15;
    google::protobuf::internal::ArenaStringPtr::Set((std::string **)this + 5, (std::string *)&google::protobuf::internal::fixed_address_empty_string, v13, v15);
    if ((v6 & 8) == 0)
    {
LABEL_8:
      if ((v6 & 0x10) == 0)
        goto LABEL_9;
      goto LABEL_33;
    }
LABEL_30:
    v16 = (__int128 *)(*((_QWORD *)a2 + 6) & 0xFFFFFFFFFFFFFFFELL);
    *((_DWORD *)this + 4) |= 8u;
    v17 = *((_QWORD *)this + 1);
    v18 = (google::protobuf::internal::ArenaImpl *)(v17 & 0xFFFFFFFFFFFFFFFELL);
    if ((v17 & 1) != 0)
      v18 = *(google::protobuf::internal::ArenaImpl **)v18;
    google::protobuf::internal::ArenaStringPtr::Set((std::string **)this + 6, (std::string *)&google::protobuf::internal::fixed_address_empty_string, v16, v18);
    if ((v6 & 0x10) == 0)
    {
LABEL_9:
      if ((v6 & 0x20) == 0)
        goto LABEL_10;
      goto LABEL_36;
    }
LABEL_33:
    v19 = (__int128 *)(*((_QWORD *)a2 + 7) & 0xFFFFFFFFFFFFFFFELL);
    *((_DWORD *)this + 4) |= 0x10u;
    v20 = *((_QWORD *)this + 1);
    v21 = (google::protobuf::internal::ArenaImpl *)(v20 & 0xFFFFFFFFFFFFFFFELL);
    if ((v20 & 1) != 0)
      v21 = *(google::protobuf::internal::ArenaImpl **)v21;
    google::protobuf::internal::ArenaStringPtr::Set((std::string **)this + 7, (std::string *)&google::protobuf::internal::fixed_address_empty_string, v19, v21);
    if ((v6 & 0x20) == 0)
    {
LABEL_10:
      if ((v6 & 0x40) == 0)
        goto LABEL_11;
      goto LABEL_44;
    }
LABEL_36:
    *((_DWORD *)this + 4) |= 0x20u;
    v22 = (google::protobuf::FieldOptions *)*((_QWORD *)this + 8);
    if (!v22)
    {
      v23 = (google::protobuf::internal::ArenaImpl *)(*v4 & 0xFFFFFFFFFFFFFFFELL);
      if ((*v4 & 1) != 0)
        v23 = *(google::protobuf::internal::ArenaImpl **)v23;
      v22 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::FieldOptions>(v23);
      *((_QWORD *)this + 8) = v22;
    }
    if (*((_QWORD *)a2 + 8))
      v24 = (const google::protobuf::FieldOptions *)*((_QWORD *)a2 + 8);
    else
      v24 = (const google::protobuf::FieldOptions *)&google::protobuf::_FieldOptions_default_instance_;
    google::protobuf::FieldOptions::MergeFrom(v22, v24);
    if ((v6 & 0x40) == 0)
    {
LABEL_11:
      if ((v6 & 0x80) == 0)
      {
LABEL_13:
        *((_DWORD *)this + 4) |= v6;
        goto LABEL_14;
      }
LABEL_12:
      *((_DWORD *)this + 19) = *((_DWORD *)a2 + 19);
      goto LABEL_13;
    }
LABEL_44:
    *((_DWORD *)this + 18) = *((_DWORD *)a2 + 18);
    if ((v6 & 0x80) == 0)
      goto LABEL_13;
    goto LABEL_12;
  }
LABEL_14:
  if ((v6 & 0x700) == 0)
    return;
  if ((v6 & 0x100) == 0)
  {
    if ((v6 & 0x200) == 0)
      goto LABEL_17;
LABEL_47:
    *((_DWORD *)this + 21) = *((_DWORD *)a2 + 21);
    if ((v6 & 0x400) == 0)
      goto LABEL_19;
    goto LABEL_18;
  }
  *((_BYTE *)this + 80) = *((_BYTE *)a2 + 80);
  if ((v6 & 0x200) != 0)
    goto LABEL_47;
LABEL_17:
  if ((v6 & 0x400) != 0)
LABEL_18:
    *((_DWORD *)this + 22) = *((_DWORD *)a2 + 22);
LABEL_19:
  *((_DWORD *)this + 4) |= v6;
}

void google::protobuf::FieldOptions::MergeFrom(google::protobuf::FieldOptions *this, const google::protobuf::FieldOptions *a2)
{
  uint64_t v4;
  unsigned int v5;
  google::protobuf::UninterpretedOption **v6;
  unsigned int *v7;
  signed int v8;
  signed int *v9;
  int v10;

  google::protobuf::internal::ExtensionSet::MergeFrom((google::protobuf::FieldOptions *)((char *)this + 16), (const google::protobuf::FieldOptions *)((char *)a2 + 16));
  v4 = *((_QWORD *)a2 + 1);
  if ((v4 & 1) != 0)
    google::protobuf::internal::InternalMetadata::DoMergeFrom<google::protobuf::UnknownFieldSet>((uint64_t *)this + 1, (const google::protobuf::UnknownFieldSet *)((v4 & 0xFFFFFFFFFFFFFFFELL) + 8));
  v5 = *((_DWORD *)a2 + 14);
  if (v5)
  {
    v6 = (google::protobuf::UninterpretedOption **)(*((_QWORD *)a2 + 8) + 8);
    v7 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::FieldOptions *)((char *)this + 48), *((_DWORD *)a2 + 14));
    google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::TypeHandler>((google::protobuf::internal::ArenaImpl **)this + 6, (google::protobuf::UninterpretedOption **)v7, v6, v5, **((_DWORD **)this + 8) - *((_DWORD *)this + 14));
    v8 = *((_DWORD *)this + 14) + v5;
    *((_DWORD *)this + 14) = v8;
    v9 = (signed int *)*((_QWORD *)this + 8);
    if (*v9 < v8)
      *v9 = v8;
  }
  v10 = *((_DWORD *)a2 + 10);
  if ((v10 & 0x3F) != 0)
  {
    if ((v10 & 1) != 0)
    {
      *((_DWORD *)this + 18) = *((_DWORD *)a2 + 18);
      if ((v10 & 2) == 0)
      {
LABEL_9:
        if ((v10 & 4) == 0)
          goto LABEL_10;
        goto LABEL_18;
      }
    }
    else if ((v10 & 2) == 0)
    {
      goto LABEL_9;
    }
    *((_BYTE *)this + 76) = *((_BYTE *)a2 + 76);
    if ((v10 & 4) == 0)
    {
LABEL_10:
      if ((v10 & 8) == 0)
        goto LABEL_11;
      goto LABEL_19;
    }
LABEL_18:
    *((_BYTE *)this + 77) = *((_BYTE *)a2 + 77);
    if ((v10 & 8) == 0)
    {
LABEL_11:
      if ((v10 & 0x10) == 0)
        goto LABEL_12;
      goto LABEL_20;
    }
LABEL_19:
    *((_BYTE *)this + 78) = *((_BYTE *)a2 + 78);
    if ((v10 & 0x10) == 0)
    {
LABEL_12:
      if ((v10 & 0x20) == 0)
      {
LABEL_14:
        *((_DWORD *)this + 10) |= v10;
        return;
      }
LABEL_13:
      *((_DWORD *)this + 20) = *((_DWORD *)a2 + 20);
      goto LABEL_14;
    }
LABEL_20:
    *((_BYTE *)this + 79) = *((_BYTE *)a2 + 79);
    if ((v10 & 0x20) == 0)
      goto LABEL_14;
    goto LABEL_13;
  }
}

void google::protobuf::FieldDescriptorProto::CopyFrom(google::protobuf::FieldDescriptorProto *this, const google::protobuf::Message *a2)
{
  google::protobuf::Message *v4;

  if (a2 != this)
  {
    google::protobuf::FieldDescriptorProto::Clear(this);
    google::protobuf::FieldDescriptorProto::MergeFrom(this, a2, v4);
  }
}

uint64_t google::protobuf::FieldDescriptorProto::IsInitialized(google::protobuf::FieldDescriptorProto *this)
{
  uint64_t v1;
  uint64_t result;

  if ((*((_BYTE *)this + 16) & 0x20) == 0)
    return 1;
  v1 = *((_QWORD *)this + 8);
  result = google::protobuf::internal::ExtensionSet::IsInitialized((google::protobuf::internal::ExtensionSet *)(v1 + 16));
  if ((_DWORD)result)
  {
    result = google::protobuf::internal::AllAreInitialized<google::protobuf::UninterpretedOption>(v1 + 48);
    if ((_DWORD)result)
      return 1;
  }
  return result;
}

uint64_t google::protobuf::FieldOptions::IsInitialized(google::protobuf::FieldOptions *this)
{
  uint64_t result;

  result = google::protobuf::internal::ExtensionSet::IsInitialized((google::protobuf::FieldOptions *)((char *)this + 16));
  if ((_DWORD)result)
    return google::protobuf::internal::AllAreInitialized<google::protobuf::UninterpretedOption>((uint64_t)this + 48);
  return result;
}

uint64_t google::protobuf::FieldDescriptorProto::GetMetadata(google::protobuf::FieldDescriptorProto *this)
{
  google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0);
  return off_1EDF46FE8[12];
}

void google::protobuf::OneofDescriptorProto::~OneofDescriptorProto(google::protobuf::OneofDescriptorProto *this)
{
  uint64_t v2;
  google::protobuf::OneofOptions *v3;

  v2 = *((_QWORD *)this + 3);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v2 + 23) < 0)
      operator delete(*(void **)v2);
    MEMORY[0x18D76437C](v2, 0x1012C40EC159624);
  }
  if (this != (google::protobuf::OneofDescriptorProto *)&google::protobuf::_OneofDescriptorProto_default_instance_)
  {
    v3 = (google::protobuf::OneofOptions *)*((_QWORD *)this + 4);
    if (v3)
    {
      google::protobuf::OneofOptions::~OneofOptions(v3);
      MEMORY[0x18D76437C]();
    }
  }
  google::protobuf::internal::InternalMetadata::Delete<google::protobuf::UnknownFieldSet>((uint64_t *)this + 1);
}

{
  google::protobuf::OneofDescriptorProto::~OneofDescriptorProto(this);
  JUMPOUT(0x18D76437CLL);
}

uint64_t google::protobuf::OneofDescriptorProto::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 20) = a2;
  return this;
}

google::protobuf::UnknownFieldSet *google::protobuf::OneofDescriptorProto::Clear(google::protobuf::UnknownFieldSet *this)
{
  uint64_t v1;
  int v2;
  unint64_t v3;
  uint64_t v4;
  char v5;

  v1 = (uint64_t)this;
  v2 = *((_DWORD *)this + 4);
  if ((v2 & 3) == 0)
    goto LABEL_7;
  if ((v2 & 1) == 0)
  {
LABEL_5:
    if ((v2 & 2) == 0)
      goto LABEL_7;
    goto LABEL_6;
  }
  v3 = *((_QWORD *)this + 3) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v3 + 23) & 0x80000000) == 0)
  {
    *(_BYTE *)v3 = 0;
    *(_BYTE *)(v3 + 23) = 0;
    goto LABEL_5;
  }
  **(_BYTE **)v3 = 0;
  *(_QWORD *)(v3 + 8) = 0;
  if ((v2 & 2) != 0)
LABEL_6:
    this = google::protobuf::OneofOptions::Clear(*((uint64_t ***)this + 4));
LABEL_7:
  v5 = *(_BYTE *)(v1 + 8);
  v4 = v1 + 8;
  *(_DWORD *)(v4 + 8) = 0;
  if ((v5 & 1) != 0)
    return google::protobuf::internal::InternalMetadata::DoClear<google::protobuf::UnknownFieldSet>((uint64_t *)v4);
  return this;
}

google::protobuf::UnknownFieldSet *google::protobuf::OneofOptions::Clear(uint64_t **this)
{
  google::protobuf::UnknownFieldSet *result;
  uint64_t v3;
  google::protobuf::UnknownFieldSet **v4;
  google::protobuf::UnknownFieldSet *v5;
  uint64_t *v6;
  char v7;

  result = (google::protobuf::UnknownFieldSet *)google::protobuf::internal::ExtensionSet::Clear(this + 2);
  v3 = *((unsigned int *)this + 12);
  if ((int)v3 >= 1)
  {
    v4 = (google::protobuf::UnknownFieldSet **)(this[7] + 1);
    do
    {
      v5 = *v4++;
      result = google::protobuf::UninterpretedOption::Clear(v5);
      --v3;
    }
    while (v3);
    *((_DWORD *)this + 12) = 0;
  }
  v7 = *((_BYTE *)this + 8);
  v6 = (uint64_t *)(this + 1);
  if ((v7 & 1) != 0)
    return google::protobuf::internal::InternalMetadata::DoClear<google::protobuf::UnknownFieldSet>(v6);
  return result;
}

google::protobuf::internal *google::protobuf::OneofDescriptorProto::_InternalParse(uint64_t a1, google::protobuf::internal *a2, google::protobuf::internal::EpsCopyInputStream *this)
{
  char v5;
  google::protobuf::internal *result;
  _QWORD *v7;
  std::string **v8;
  google::protobuf::internal *v9;
  unsigned int v10;
  BOOL v12;
  google::protobuf::UnknownFieldSet *v13;
  google::protobuf::OneofOptions *v14;
  google::protobuf::internal::ArenaImpl *v15;
  const char *v16;
  google::protobuf::internal *v17;
  uint64_t v18;
  google::protobuf::internal::ArenaImpl *v19;
  std::string *v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  int v24;
  BOOL v25;
  int v26;
  int v27;
  google::protobuf::internal *v28;
  google::protobuf::UnknownFieldSet *v29;

  v28 = a2;
  v5 = google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(this, (const char **)&v28, *((_DWORD *)this + 23));
  result = v28;
  if ((v5 & 1) == 0)
  {
    v7 = (_QWORD *)(a1 + 8);
    v8 = (std::string **)(a1 + 24);
    while (1)
    {
      v9 = (google::protobuf::internal *)((char *)result + 1);
      v10 = *(unsigned __int8 *)result;
      if (*(char *)result < 0)
      {
        v10 = v10 + (*(unsigned __int8 *)v9 << 7) - 128;
        if (*(char *)v9 < 0)
        {
          v9 = (google::protobuf::internal *)((char *)result + 3);
          v21 = -21;
          while (1)
          {
            v10 += (*((unsigned __int8 *)v9 - 1) - 1) << (v21 + 35);
            if ((*((char *)v9 - 1) & 0x80000000) == 0)
              break;
            v9 = (google::protobuf::internal *)((char *)v9 + 1);
            v21 += 7;
            if (!v21)
              return 0;
          }
        }
        else
        {
          v9 = (google::protobuf::internal *)((char *)result + 2);
        }
      }
      v28 = v9;
      if (v10 >> 3 != 2)
        break;
      if (v10 != 18)
        goto LABEL_12;
      *(_DWORD *)(a1 + 16) |= 2u;
      v14 = *(google::protobuf::OneofOptions **)(a1 + 32);
      if (!v14)
      {
        v15 = (google::protobuf::internal::ArenaImpl *)(*v7 & 0xFFFFFFFFFFFFFFFELL);
        if ((*v7 & 1) != 0)
          v15 = *(google::protobuf::internal::ArenaImpl **)v15;
        v14 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::OneofOptions>(v15);
        *(_QWORD *)(a1 + 32) = v14;
        v9 = v28;
      }
      v16 = (const char *)*(unsigned __int8 *)v9;
      if (*(char *)v9 < 0)
      {
        result = (google::protobuf::internal *)google::protobuf::internal::ReadSizeFallback(v9, v16);
        if (!result)
          return result;
        v17 = result;
      }
      else
      {
        v17 = (google::protobuf::internal *)((char *)v9 + 1);
      }
      v22 = *((_QWORD *)this + 1);
      v23 = (_DWORD)v16 + (_DWORD)v17 - v22;
      *(_QWORD *)this = v22 + (v23 & (v23 >> 31));
      v24 = *((_DWORD *)this + 7);
      *((_DWORD *)this + 7) = v23;
      LODWORD(v22) = *((_DWORD *)this + 22);
      v25 = __OFSUB__((_DWORD)v22, 1);
      LODWORD(v22) = v22 - 1;
      *((_DWORD *)this + 22) = v22;
      if ((int)v22 < 0 != v25)
        return 0;
      result = google::protobuf::OneofOptions::_InternalParse((uint64_t)v14, v17, this);
      if (!result)
        return result;
      ++*((_DWORD *)this + 22);
      if (*((_DWORD *)this + 20))
        return 0;
      v26 = *((_DWORD *)this + 7) + v24 - v23;
      *((_DWORD *)this + 7) = v26;
      *(_QWORD *)this = *((_QWORD *)this + 1) + (v26 & (v26 >> 31));
      v28 = result;
LABEL_43:
      v27 = google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(this, (const char **)&v28, *((_DWORD *)this + 23));
      result = v28;
      if (v27)
        return result;
    }
    if (v10 >> 3 == 1 && v10 == 10)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      v18 = *(_QWORD *)(a1 + 8);
      v19 = (google::protobuf::internal::ArenaImpl *)(v18 & 0xFFFFFFFFFFFFFFFELL);
      if ((v18 & 1) != 0)
        v19 = *(google::protobuf::internal::ArenaImpl **)v19;
      v20 = *v8;
      if (*v8 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
      {
        v20 = (std::string *)google::protobuf::internal::ArenaStringPtr::MutableSlow<>((_QWORD *)(a1 + 24), v19);
        v9 = v28;
      }
      result = (google::protobuf::internal *)google::protobuf::internal::InlineGreedyStringParser(v20, (std::string::value_type *)v9, (uint64_t)this);
    }
    else
    {
LABEL_12:
      if (v10)
        v12 = (v10 & 7) == 4;
      else
        v12 = 1;
      if (v12)
      {
        *((_DWORD *)this + 20) = v10 - 1;
        return v9;
      }
      if ((*v7 & 1) != 0)
      {
        v13 = (google::protobuf::UnknownFieldSet *)((*v7 & 0xFFFFFFFFFFFFFFFELL) + 8);
      }
      else
      {
        v13 = (google::protobuf::UnknownFieldSet *)google::protobuf::internal::InternalMetadata::mutable_unknown_fields_slow<google::protobuf::UnknownFieldSet>((uint64_t *)(a1 + 8));
        v9 = v28;
      }
      v29 = v13;
      result = google::protobuf::internal::FieldParser<google::protobuf::internal::UnknownFieldParserHelper>(v10, &v29, (uint64_t *)v9, (int32x2_t *)this);
    }
    v28 = result;
    if (!result)
      return result;
    goto LABEL_43;
  }
  return result;
}

const google::protobuf::UnknownFieldSet *google::protobuf::OneofDescriptorProto::_InternalSerialize(google::protobuf::OneofDescriptorProto *this, unsigned __int8 *a2, google::protobuf::io::EpsCopyOutputStream *a3)
{
  unsigned __int8 *v4;
  int v6;
  google::protobuf::OneofOptions *v7;
  unsigned int v8;
  unsigned __int8 *v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t v13;

  v4 = a2;
  v6 = *((_DWORD *)this + 4);
  if ((v6 & 1) != 0)
    v4 = google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 1, *((_QWORD *)this + 3) & 0xFFFFFFFFFFFFFFFELL, a2);
  if ((v6 & 2) != 0)
  {
    if (*(_QWORD *)a3 <= (unint64_t)v4)
      v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
    v7 = (google::protobuf::OneofOptions *)*((_QWORD *)this + 4);
    *v4 = 18;
    v8 = *((_DWORD *)v7 + 16);
    if (v8 > 0x7F)
    {
      v4[1] = v8 | 0x80;
      v10 = v8 >> 7;
      if (v8 >> 14)
      {
        v9 = v4 + 3;
        do
        {
          *(v9 - 1) = v10 | 0x80;
          v11 = v10 >> 7;
          ++v9;
          v12 = v10 >> 14;
          v10 >>= 7;
        }
        while (v12);
        *(v9 - 1) = v11;
      }
      else
      {
        v4[2] = v10;
        v9 = v4 + 3;
      }
    }
    else
    {
      v4[1] = v8;
      v9 = v4 + 2;
    }
    v4 = (unsigned __int8 *)google::protobuf::OneofOptions::_InternalSerialize(v7, v9, a3);
  }
  v13 = *((_QWORD *)this + 1);
  if ((v13 & 1) != 0)
    return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v13 & 0xFFFFFFFFFFFFFFFELL) + 8), (const google::protobuf::UnknownFieldSet *)v4, a3, (google::protobuf::io::EpsCopyOutputStream *)v4);
  else
    return (const google::protobuf::UnknownFieldSet *)v4;
}

const InternalMetadata *google::protobuf::OneofDescriptorProto::ByteSizeLong(google::protobuf::OneofDescriptorProto *this, uint64_t a2, uint64_t a3, CachedSize *a4)
{
  int v5;
  const InternalMetadata *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  const InternalMetadata *v10;

  v5 = *((_DWORD *)this + 4);
  if ((v5 & 3) == 0)
  {
    v6 = 0;
    goto LABEL_10;
  }
  if ((v5 & 1) == 0)
  {
    v6 = 0;
    if ((v5 & 2) == 0)
      goto LABEL_10;
LABEL_9:
    v10 = google::protobuf::OneofOptions::ByteSizeLong(*((google::protobuf::OneofOptions **)this + 4));
    v6 = (const InternalMetadata *)((char *)&v10->var0
                                  + (_QWORD)v6
                                  + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6)
                                  + 1);
    goto LABEL_10;
  }
  v7 = *((_QWORD *)this + 3) & 0xFFFFFFFFFFFFFFFELL;
  v8 = *(unsigned __int8 *)(v7 + 23);
  v9 = *(_QWORD *)(v7 + 8);
  if ((v8 & 0x80u) == 0)
    v9 = v8;
  v6 = (const InternalMetadata *)(v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1);
  if ((v5 & 2) != 0)
    goto LABEL_9;
LABEL_10:
  if ((*((_BYTE *)this + 8) & 1) != 0)
    return (const InternalMetadata *)google::protobuf::internal::ComputeUnknownFieldsSize((google::protobuf::OneofDescriptorProto *)((char *)this + 8), v6, (_DWORD *)this + 5, a4);
  *((_DWORD *)this + 5) = (_DWORD)v6;
  return v6;
}

void google::protobuf::OneofDescriptorProto::MergeFrom(google::protobuf::OneofDescriptorProto *this, const google::protobuf::Message *a2, google::protobuf::Message *a3)
{
  if (*(void (***)(google::protobuf::OneofDescriptorProto *__hidden))a2 == &off_1E1BF8108)
    google::protobuf::OneofDescriptorProto::MergeFrom(this, a2);
  else
    google::protobuf::internal::ReflectionOps::Merge(a2, this, a3);
}

void google::protobuf::OneofDescriptorProto::MergeFrom(google::protobuf::OneofDescriptorProto *this, const google::protobuf::OneofDescriptorProto *a2)
{
  _QWORD *v4;
  uint64_t v5;
  int v6;
  __int128 *v7;
  uint64_t v8;
  google::protobuf::internal::ArenaImpl *v9;
  google::protobuf::ExtensionRangeOptions *v10;
  google::protobuf::internal::ArenaImpl *v11;
  const google::protobuf::ExtensionRangeOptions *v12;

  v4 = (_QWORD *)((char *)this + 8);
  v5 = *((_QWORD *)a2 + 1);
  if ((v5 & 1) != 0)
    google::protobuf::internal::InternalMetadata::DoMergeFrom<google::protobuf::UnknownFieldSet>((uint64_t *)this + 1, (const google::protobuf::UnknownFieldSet *)((v5 & 0xFFFFFFFFFFFFFFFELL) + 8));
  v6 = *((_DWORD *)a2 + 4);
  if ((v6 & 3) != 0)
  {
    if ((v6 & 1) != 0)
    {
      v7 = (__int128 *)(*((_QWORD *)a2 + 3) & 0xFFFFFFFFFFFFFFFELL);
      *((_DWORD *)this + 4) |= 1u;
      v8 = *((_QWORD *)this + 1);
      v9 = (google::protobuf::internal::ArenaImpl *)(v8 & 0xFFFFFFFFFFFFFFFELL);
      if ((v8 & 1) != 0)
        v9 = *(google::protobuf::internal::ArenaImpl **)v9;
      google::protobuf::internal::ArenaStringPtr::Set((std::string **)this + 3, (std::string *)&google::protobuf::internal::fixed_address_empty_string, v7, v9);
    }
    if ((v6 & 2) != 0)
    {
      *((_DWORD *)this + 4) |= 2u;
      v10 = (google::protobuf::ExtensionRangeOptions *)*((_QWORD *)this + 4);
      if (!v10)
      {
        v11 = (google::protobuf::internal::ArenaImpl *)(*v4 & 0xFFFFFFFFFFFFFFFELL);
        if ((*v4 & 1) != 0)
          v11 = *(google::protobuf::internal::ArenaImpl **)v11;
        v10 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::OneofOptions>(v11);
        *((_QWORD *)this + 4) = v10;
      }
      if (*((_QWORD *)a2 + 4))
        v12 = (const google::protobuf::ExtensionRangeOptions *)*((_QWORD *)a2 + 4);
      else
        v12 = (const google::protobuf::ExtensionRangeOptions *)&google::protobuf::_OneofOptions_default_instance_;
      google::protobuf::ExtensionRangeOptions::MergeFrom(v10, v12);
    }
  }
}

void google::protobuf::OneofDescriptorProto::CopyFrom(google::protobuf::OneofDescriptorProto *this, const google::protobuf::Message *a2)
{
  google::protobuf::Message *v4;

  if (a2 != this)
  {
    google::protobuf::OneofDescriptorProto::Clear(this);
    google::protobuf::OneofDescriptorProto::MergeFrom(this, a2, v4);
  }
}

uint64_t google::protobuf::OneofDescriptorProto::IsInitialized(google::protobuf::OneofDescriptorProto *this)
{
  uint64_t v1;
  uint64_t result;

  if ((*((_BYTE *)this + 16) & 2) == 0)
    return 1;
  v1 = *((_QWORD *)this + 4);
  result = google::protobuf::internal::ExtensionSet::IsInitialized((google::protobuf::internal::ExtensionSet *)(v1 + 16));
  if ((_DWORD)result)
  {
    result = google::protobuf::internal::AllAreInitialized<google::protobuf::UninterpretedOption>(v1 + 40);
    if ((_DWORD)result)
      return 1;
  }
  return result;
}

uint64_t google::protobuf::OneofOptions::IsInitialized(google::protobuf::OneofOptions *this)
{
  uint64_t result;

  result = google::protobuf::internal::ExtensionSet::IsInitialized((google::protobuf::OneofOptions *)((char *)this + 16));
  if ((_DWORD)result)
    return google::protobuf::internal::AllAreInitialized<google::protobuf::UninterpretedOption>((uint64_t)this + 40);
  return result;
}

uint64_t google::protobuf::OneofDescriptorProto::GetMetadata(google::protobuf::OneofDescriptorProto *this)
{
  google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0);
  return off_1EDF46FE8[14];
}

void google::protobuf::EnumDescriptorProto_EnumReservedRange::~EnumDescriptorProto_EnumReservedRange(google::protobuf::EnumDescriptorProto_EnumReservedRange *this)
{
  google::protobuf::internal::InternalMetadata::Delete<google::protobuf::UnknownFieldSet>((uint64_t *)this + 1);
}

{
  google::protobuf::internal::InternalMetadata::Delete<google::protobuf::UnknownFieldSet>((uint64_t *)this + 1);
  JUMPOUT(0x18D76437CLL);
}

uint64_t google::protobuf::EnumDescriptorProto_EnumReservedRange::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 20) = a2;
  return this;
}

google::protobuf::UnknownFieldSet *google::protobuf::EnumDescriptorProto_EnumReservedRange::Clear(google::protobuf::EnumDescriptorProto_EnumReservedRange *this)
{
  google::protobuf::UnknownFieldSet *result;
  char v2;

  if ((*((_BYTE *)this + 16) & 3) != 0)
    *((_QWORD *)this + 3) = 0;
  v2 = *((_BYTE *)this + 8);
  result = (google::protobuf::EnumDescriptorProto_EnumReservedRange *)((char *)this + 8);
  *((_DWORD *)result + 2) = 0;
  if ((v2 & 1) != 0)
    return google::protobuf::internal::InternalMetadata::DoClear<google::protobuf::UnknownFieldSet>((uint64_t *)result);
  return result;
}

char *google::protobuf::EnumDescriptorProto_EnumReservedRange::_InternalParse(uint64_t a1, const char *a2, int32x2_t *this)
{
  int v5;
  char *v6;
  _QWORD *v8;
  unsigned int v9;
  BOOL v11;
  google::protobuf::UnknownFieldSet *v12;
  uint64_t v13;
  const char *v14;
  int v15;
  uint64_t v16;
  const char *v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  google::protobuf::internal::EpsCopyInputStream *v22;
  google::protobuf::UnknownFieldSet *v23;

  v22 = (google::protobuf::internal::EpsCopyInputStream *)a2;
  v5 = 0;
  if ((google::protobuf::internal::EpsCopyInputStream::DoneWithCheck((google::protobuf::internal::EpsCopyInputStream *)this, (const char **)&v22, this[11].i32[1]) & 1) == 0)
  {
    v8 = (_QWORD *)(a1 + 8);
    do
    {
      v6 = (char *)v22 + 1;
      v9 = *(unsigned __int8 *)v22;
      if (*(char *)v22 < 0)
      {
        v9 = v9 + (*v6 << 7) - 128;
        if (*v6 < 0)
        {
          v6 = (char *)v22 + 3;
          v19 = -21;
          while (1)
          {
            v9 += (*(v6 - 1) - 1) << (v19 + 35);
            if ((*(v6 - 1) & 0x80000000) == 0)
              break;
            ++v6;
            v19 += 7;
            if (!v19)
              goto LABEL_46;
          }
        }
        else
        {
          v6 = (char *)v22 + 2;
        }
      }
      v22 = (google::protobuf::internal::EpsCopyInputStream *)v6;
      if (v9 >> 3 == 2)
      {
        if (v9 == 16)
        {
          v5 |= 2u;
          v14 = v6 + 1;
          LODWORD(v13) = *v6;
          if ((v13 & 0x80) != 0)
          {
            v15 = *v14;
            v13 = v13 + (v15 << 7) - 128;
            if (v15 < 0)
            {
              v14 = v6 + 3;
              v20 = 14;
              while (1)
              {
                v13 += (*((unsigned __int8 *)v14 - 1) - 1) << v20;
                if ((*(v14 - 1) & 0x80000000) == 0)
                  break;
                ++v14;
                v20 += 7;
                if (v20 == 70)
                {
                  v6 = 0;
                  *(_DWORD *)(a1 + 28) = 0;
                  goto LABEL_3;
                }
              }
            }
            else
            {
              v14 = v6 + 2;
            }
          }
          v22 = (google::protobuf::internal::EpsCopyInputStream *)v14;
          *(_DWORD *)(a1 + 28) = v13;
          continue;
        }
      }
      else if (v9 >> 3 == 1 && v9 == 8)
      {
        v5 |= 1u;
        v17 = v6 + 1;
        LODWORD(v16) = *v6;
        if ((v16 & 0x80) != 0)
        {
          v18 = *v17;
          v16 = v16 + (v18 << 7) - 128;
          if (v18 < 0)
          {
            v17 = v6 + 3;
            v21 = 14;
            while (1)
            {
              v16 += (*((unsigned __int8 *)v17 - 1) - 1) << v21;
              if ((*(v17 - 1) & 0x80000000) == 0)
                break;
              ++v17;
              v21 += 7;
              if (v21 == 70)
              {
                v6 = 0;
                *(_DWORD *)(a1 + 24) = 0;
                goto LABEL_3;
              }
            }
          }
          else
          {
            v17 = v6 + 2;
          }
        }
        v22 = (google::protobuf::internal::EpsCopyInputStream *)v17;
        *(_DWORD *)(a1 + 24) = v16;
        continue;
      }
      if (v9)
        v11 = (v9 & 7) == 4;
      else
        v11 = 1;
      if (v11)
      {
        this[10].i32[0] = v9 - 1;
        goto LABEL_3;
      }
      if ((*v8 & 1) != 0)
      {
        v12 = (google::protobuf::UnknownFieldSet *)((*v8 & 0xFFFFFFFFFFFFFFFELL) + 8);
      }
      else
      {
        v12 = (google::protobuf::UnknownFieldSet *)google::protobuf::internal::InternalMetadata::mutable_unknown_fields_slow<google::protobuf::UnknownFieldSet>((uint64_t *)(a1 + 8));
        v6 = (char *)v22;
      }
      v23 = v12;
      v22 = google::protobuf::internal::FieldParser<google::protobuf::internal::UnknownFieldParserHelper>(v9, &v23, (uint64_t *)v6, this);
      if (!v22)
      {
LABEL_46:
        v6 = 0;
        goto LABEL_3;
      }
    }
    while (!google::protobuf::internal::EpsCopyInputStream::DoneWithCheck((google::protobuf::internal::EpsCopyInputStream *)this, (const char **)&v22, this[11].i32[1]));
  }
  v6 = (char *)v22;
LABEL_3:
  *(_DWORD *)(a1 + 16) |= v5;
  return v6;
}

const google::protobuf::UnknownFieldSet *google::protobuf::EnumDescriptorProto_EnumReservedRange::_InternalSerialize(google::protobuf::EnumDescriptorProto_EnumReservedRange *this, unsigned __int8 *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;

  v6 = *((_DWORD *)this + 4);
  if ((v6 & 1) == 0)
  {
LABEL_9:
    if ((v6 & 2) == 0)
      goto LABEL_23;
    goto LABEL_10;
  }
  if (*(_QWORD *)a3 <= (unint64_t)a2)
    a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
  v7 = *((int *)this + 6);
  *a2 = 8;
  if (v7 <= 0x7F)
  {
    a2[1] = v7;
    a2 += 2;
    if ((v6 & 2) == 0)
      goto LABEL_23;
    goto LABEL_10;
  }
  a2[1] = v7 | 0x80;
  v8 = v7 >> 7;
  if (!(v7 >> 14))
  {
    a2[2] = v8;
    a2 += 3;
    goto LABEL_9;
  }
  a2 += 3;
  do
  {
    *(a2 - 1) = v8 | 0x80;
    v11 = v8 >> 7;
    ++a2;
    v12 = v8 >> 14;
    v8 >>= 7;
  }
  while (v12);
  *(a2 - 1) = v11;
  if ((v6 & 2) == 0)
    goto LABEL_23;
LABEL_10:
  if (*(_QWORD *)a3 <= (unint64_t)a2)
    a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
  v9 = *((int *)this + 7);
  *a2 = 16;
  if (v9 > 0x7F)
  {
    a2[1] = v9 | 0x80;
    v10 = v9 >> 7;
    if (v9 >> 14)
    {
      a2 += 3;
      do
      {
        *(a2 - 1) = v10 | 0x80;
        v13 = v10 >> 7;
        ++a2;
        v14 = v10 >> 14;
        v10 >>= 7;
      }
      while (v14);
      *(a2 - 1) = v13;
    }
    else
    {
      a2[2] = v10;
      a2 += 3;
    }
  }
  else
  {
    a2[1] = v9;
    a2 += 2;
  }
LABEL_23:
  v15 = *((_QWORD *)this + 1);
  if ((v15 & 1) != 0)
    return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v15 & 0xFFFFFFFFFFFFFFFELL) + 8), (const google::protobuf::UnknownFieldSet *)a2, a3, a4);
  else
    return (const google::protobuf::UnknownFieldSet *)a2;
}

uint64_t google::protobuf::EnumDescriptorProto_EnumReservedRange::ByteSizeLong(google::protobuf::EnumDescriptorProto_EnumReservedRange *this, uint64_t a2, uint64_t a3, CachedSize *a4)
{
  int v4;
  uint64_t v5;
  int v6;
  int v7;
  uint64_t v8;

  v4 = *((_DWORD *)this + 4);
  if ((v4 & 3) == 0)
  {
    v5 = 0;
    goto LABEL_14;
  }
  if ((v4 & 1) != 0)
  {
    v6 = *((_DWORD *)this + 6);
    if (v6 < 0)
    {
      v5 = 11;
      if ((v4 & 2) == 0)
        goto LABEL_14;
    }
    else
    {
      v5 = ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v4 & 2) == 0)
        goto LABEL_14;
    }
  }
  else
  {
    v5 = 0;
    if ((v4 & 2) == 0)
      goto LABEL_14;
  }
  v7 = *((_DWORD *)this + 7);
  if (v7 < 0)
    v8 = 11;
  else
    v8 = ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
  v5 += v8;
LABEL_14:
  if ((*((_BYTE *)this + 8) & 1) != 0)
    return google::protobuf::internal::ComputeUnknownFieldsSize((google::protobuf::EnumDescriptorProto_EnumReservedRange *)((char *)this + 8), (const InternalMetadata *)v5, (_DWORD *)this + 5, a4);
  *((_DWORD *)this + 5) = v5;
  return v5;
}

void google::protobuf::EnumDescriptorProto_EnumReservedRange::MergeFrom(google::protobuf::EnumDescriptorProto_EnumReservedRange *this, const google::protobuf::Message *a2, google::protobuf::Message *a3)
{
  if (*(void (***)(google::protobuf::EnumDescriptorProto_EnumReservedRange *__hidden))a2 == &off_1E1BF88E0)
    google::protobuf::DescriptorProto_ReservedRange::MergeFrom(this, a2);
  else
    google::protobuf::internal::ReflectionOps::Merge(a2, this, a3);
}

void google::protobuf::EnumDescriptorProto_EnumReservedRange::CopyFrom(google::protobuf::EnumDescriptorProto_EnumReservedRange *this, const google::protobuf::Message *a2)
{
  google::protobuf::Message *v4;

  if (a2 != this)
  {
    google::protobuf::EnumDescriptorProto_EnumReservedRange::Clear(this);
    google::protobuf::EnumDescriptorProto_EnumReservedRange::MergeFrom(this, a2, v4);
  }
}

uint64_t google::protobuf::EnumDescriptorProto_EnumReservedRange::IsInitialized(google::protobuf::EnumDescriptorProto_EnumReservedRange *this)
{
  return 1;
}

uint64_t google::protobuf::EnumDescriptorProto_EnumReservedRange::GetMetadata(google::protobuf::EnumDescriptorProto_EnumReservedRange *this)
{
  google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0);
  return off_1EDF46FE8[16];
}

google::protobuf::EnumDescriptorProto *google::protobuf::EnumDescriptorProto::EnumDescriptorProto(google::protobuf::EnumDescriptorProto *this, Arena *a2)
{
  *(_QWORD *)this = &off_1E1BF7E48;
  *((_QWORD *)this + 1) = a2;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = a2;
  *((_QWORD *)this + 4) = 0;
  *((_QWORD *)this + 5) = 0;
  *((_QWORD *)this + 6) = a2;
  *((_QWORD *)this + 9) = a2;
  *((_QWORD *)this + 7) = 0;
  *((_QWORD *)this + 8) = 0;
  *((_QWORD *)this + 10) = 0;
  *((_QWORD *)this + 11) = 0;
  if (atomic_load(scc_info_EnumDescriptorProto_google_2fprotobuf_2fdescriptor_2eproto))
    google::protobuf::internal::InitSCCImpl(scc_info_EnumDescriptorProto_google_2fprotobuf_2fdescriptor_2eproto);
  *((_QWORD *)this + 12) = &google::protobuf::internal::fixed_address_empty_string;
  *((_QWORD *)this + 13) = 0;
  return this;
}

void sub_1888AC70C(_Unwind_Exception *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v3;

  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>(v3);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto_EnumReservedRange>::TypeHandler>(v2);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<google::protobuf::EnumValueDescriptorProto>::TypeHandler>(v1);
  _Unwind_Resume(a1);
}

void google::protobuf::EnumDescriptorProto::~EnumDescriptorProto(google::protobuf::EnumDescriptorProto *this)
{
  uint64_t v2;
  google::protobuf::EnumOptions *v3;

  v2 = *((_QWORD *)this + 12);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v2 + 23) < 0)
      operator delete(*(void **)v2);
    MEMORY[0x18D76437C](v2, 0x1012C40EC159624);
  }
  if (this != (google::protobuf::EnumDescriptorProto *)&google::protobuf::_EnumDescriptorProto_default_instance_)
  {
    v3 = (google::protobuf::EnumOptions *)*((_QWORD *)this + 13);
    if (v3)
    {
      google::protobuf::EnumOptions::~EnumOptions(v3);
      MEMORY[0x18D76437C]();
    }
  }
  google::protobuf::internal::InternalMetadata::Delete<google::protobuf::UnknownFieldSet>((uint64_t *)this + 1);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((_QWORD *)this + 9);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto_EnumReservedRange>::TypeHandler>((_QWORD *)this + 6);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<google::protobuf::EnumValueDescriptorProto>::TypeHandler>((_QWORD *)this + 3);
}

{
  google::protobuf::EnumDescriptorProto::~EnumDescriptorProto(this);
  JUMPOUT(0x18D76437CLL);
}

uint64_t google::protobuf::EnumDescriptorProto::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 20) = a2;
  return this;
}

google::protobuf::UnknownFieldSet *google::protobuf::EnumDescriptorProto::Clear(google::protobuf::EnumDescriptorProto *this)
{
  uint64_t v2;
  google::protobuf::UnknownFieldSet **v3;
  google::protobuf::UnknownFieldSet *v4;
  uint64_t v5;
  google::protobuf::EnumDescriptorProto_EnumReservedRange **v6;
  google::protobuf::EnumDescriptorProto_EnumReservedRange *v7;
  google::protobuf::UnknownFieldSet *result;
  int v9;
  unint64_t v10;
  char *v11;
  char v12;

  v2 = *((unsigned int *)this + 8);
  if ((int)v2 >= 1)
  {
    v3 = (google::protobuf::UnknownFieldSet **)(*((_QWORD *)this + 5) + 8);
    do
    {
      v4 = *v3++;
      google::protobuf::EnumValueDescriptorProto::Clear(v4);
      --v2;
    }
    while (v2);
    *((_DWORD *)this + 8) = 0;
  }
  v5 = *((unsigned int *)this + 14);
  if ((int)v5 >= 1)
  {
    v6 = (google::protobuf::EnumDescriptorProto_EnumReservedRange **)(*((_QWORD *)this + 8) + 8);
    do
    {
      v7 = *v6++;
      google::protobuf::EnumDescriptorProto_EnumReservedRange::Clear(v7);
      --v5;
    }
    while (v5);
    *((_DWORD *)this + 14) = 0;
  }
  result = (google::protobuf::UnknownFieldSet *)google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 72);
  v9 = *((_DWORD *)this + 4);
  if ((v9 & 3) != 0)
  {
    if ((v9 & 1) == 0)
      goto LABEL_13;
    v10 = *((_QWORD *)this + 12) & 0xFFFFFFFFFFFFFFFELL;
    if ((*(char *)(v10 + 23) & 0x80000000) == 0)
    {
      *(_BYTE *)v10 = 0;
      *(_BYTE *)(v10 + 23) = 0;
LABEL_13:
      if ((v9 & 2) == 0)
        goto LABEL_15;
      goto LABEL_14;
    }
    **(_BYTE **)v10 = 0;
    *(_QWORD *)(v10 + 8) = 0;
    if ((v9 & 2) != 0)
LABEL_14:
      result = google::protobuf::EnumOptions::Clear(*((uint64_t ***)this + 13));
  }
LABEL_15:
  v12 = *((_BYTE *)this + 8);
  v11 = (char *)this + 8;
  *((_DWORD *)v11 + 2) = 0;
  if ((v12 & 1) != 0)
    return google::protobuf::internal::InternalMetadata::DoClear<google::protobuf::UnknownFieldSet>((uint64_t *)v11);
  return result;
}

google::protobuf::UnknownFieldSet *google::protobuf::EnumOptions::Clear(uint64_t **this)
{
  google::protobuf::UnknownFieldSet *result;
  uint64_t v3;
  google::protobuf::UnknownFieldSet **v4;
  google::protobuf::UnknownFieldSet *v5;
  char *v6;
  char v7;

  result = (google::protobuf::UnknownFieldSet *)google::protobuf::internal::ExtensionSet::Clear(this + 2);
  v3 = *((unsigned int *)this + 14);
  if ((int)v3 >= 1)
  {
    v4 = (google::protobuf::UnknownFieldSet **)(this[8] + 1);
    do
    {
      v5 = *v4++;
      result = google::protobuf::UninterpretedOption::Clear(v5);
      --v3;
    }
    while (v3);
    *((_DWORD *)this + 14) = 0;
  }
  v7 = *((_BYTE *)this + 8);
  v6 = (char *)(this + 1);
  *((_WORD *)v6 + 32) = 0;
  *((_DWORD *)v6 + 8) = 0;
  if ((v7 & 1) != 0)
    return google::protobuf::internal::InternalMetadata::DoClear<google::protobuf::UnknownFieldSet>((uint64_t *)v6);
  return result;
}

google::protobuf::internal *google::protobuf::EnumDescriptorProto::_InternalParse(uint64_t a1, google::protobuf::internal *a2, google::protobuf::internal::EpsCopyInputStream *this)
{
  char v5;
  google::protobuf::internal *result;
  uint64_t *v7;
  google::protobuf::internal *v8;
  unsigned int v9;
  uint64_t v10;
  google::protobuf::internal::ArenaImpl *v11;
  std::string *v12;
  google::protobuf::internal *v13;
  int *v14;
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  const char *v20;
  google::protobuf::internal *v21;
  uint64_t v22;
  int v23;
  int v24;
  BOOL v25;
  int v26;
  unint64_t v27;
  google::protobuf::EnumOptions *v28;
  google::protobuf::internal::ArenaImpl *v29;
  const char *v30;
  google::protobuf::internal *v31;
  google::protobuf::internal *v32;
  int *v33;
  int v34;
  int v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  const char *v39;
  const char *v40;
  uint64_t v41;
  int v42;
  int v43;
  int v44;
  unint64_t v45;
  std::string::value_type *v46;
  int *v47;
  int v48;
  int v49;
  std::string *AlignedAndAddCleanup;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  BOOL v54;
  google::protobuf::UnknownFieldSet *v55;
  uint64_t v56;
  uint64_t v57;
  int v58;
  int v59;
  int v60;
  int v61;
  uint64_t *v62;
  std::string **v63;
  google::protobuf::internal *v64;
  google::protobuf::UnknownFieldSet *v65;

  v64 = a2;
  v5 = google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(this, (const char **)&v64, *((_DWORD *)this + 23));
  result = v64;
  if ((v5 & 1) == 0)
  {
    v7 = (uint64_t *)(a1 + 72);
    v62 = (uint64_t *)(a1 + 8);
    v63 = (std::string **)(a1 + 96);
    while (2)
    {
      v8 = (google::protobuf::internal *)((char *)result + 1);
      v9 = *(unsigned __int8 *)result;
      if (*(char *)result < 0)
      {
        v9 = v9 + (*(unsigned __int8 *)v8 << 7) - 128;
        if (*(char *)v8 < 0)
        {
          v8 = (google::protobuf::internal *)((char *)result + 3);
          v56 = -21;
          while (1)
          {
            v9 += (*((unsigned __int8 *)v8 - 1) - 1) << (v56 + 35);
            if ((*((char *)v8 - 1) & 0x80000000) == 0)
              break;
            result = 0;
            v8 = (google::protobuf::internal *)((char *)v8 + 1);
            v56 += 7;
            if (!v56)
              return result;
          }
        }
        else
        {
          v8 = (google::protobuf::internal *)((char *)result + 2);
        }
      }
      v64 = v8;
      switch(v9 >> 3)
      {
        case 1u:
          if (v9 != 10)
            goto LABEL_82;
          *(_DWORD *)(a1 + 16) |= 1u;
          v10 = *(_QWORD *)(a1 + 8);
          v11 = (google::protobuf::internal::ArenaImpl *)(v10 & 0xFFFFFFFFFFFFFFFELL);
          if ((v10 & 1) != 0)
            v11 = *(google::protobuf::internal::ArenaImpl **)v11;
          v12 = *v63;
          if (*v63 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
          {
            v12 = (std::string *)google::protobuf::internal::ArenaStringPtr::MutableSlow<>(v63, v11);
            v8 = v64;
          }
          result = (google::protobuf::internal *)google::protobuf::internal::InlineGreedyStringParser(v12, (std::string::value_type *)v8, (uint64_t)this);
          goto LABEL_89;
        case 2u:
          if (v9 != 18)
            goto LABEL_82;
          result = (google::protobuf::internal *)((char *)v8 - 1);
          while (2)
          {
            v13 = (google::protobuf::internal *)((char *)result + 1);
            v64 = v13;
            v14 = *(int **)(a1 + 40);
            if (!v14)
            {
              v15 = *(_DWORD *)(a1 + 32);
              v16 = *(_DWORD *)(a1 + 36);
LABEL_20:
              if (v15 <= v16)
              {
                google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 24), v16 - v15 + 1);
                v14 = *(int **)(a1 + 40);
              }
              v16 = *v14;
              goto LABEL_23;
            }
            v15 = *(_DWORD *)(a1 + 32);
            v16 = *v14;
            if (v15 < *v14)
            {
              *(_DWORD *)(a1 + 32) = v15 + 1;
              v17 = *(_QWORD *)&v14[2 * v15 + 2];
              goto LABEL_24;
            }
            if (v16 == *(_DWORD *)(a1 + 36))
              goto LABEL_20;
LABEL_23:
            *v14 = v16 + 1;
            v17 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::EnumValueDescriptorProto>(*(google::protobuf::internal::ArenaImpl **)(a1 + 24));
            v18 = *(_QWORD *)(a1 + 40);
            v19 = *(int *)(a1 + 32);
            *(_DWORD *)(a1 + 32) = v19 + 1;
            *(_QWORD *)(v18 + 8 * v19 + 8) = v17;
            v13 = v64;
LABEL_24:
            v20 = (const char *)*(unsigned __int8 *)v13;
            if (*(char *)v13 < 0)
            {
              result = (google::protobuf::internal *)google::protobuf::internal::ReadSizeFallback(v13, v20);
              if (!result)
                return result;
              v21 = result;
            }
            else
            {
              v21 = (google::protobuf::internal *)((char *)v13 + 1);
            }
            v22 = *((_QWORD *)this + 1);
            v23 = (_DWORD)v20 + (_DWORD)v21 - v22;
            *(_QWORD *)this = v22 + (v23 & (v23 >> 31));
            v24 = *((_DWORD *)this + 7);
            *((_DWORD *)this + 7) = v23;
            LODWORD(v22) = *((_DWORD *)this + 22);
            v25 = __OFSUB__((_DWORD)v22, 1);
            LODWORD(v22) = v22 - 1;
            *((_DWORD *)this + 22) = v22;
            if ((int)v22 < 0 == v25)
            {
              result = google::protobuf::EnumValueDescriptorProto::_InternalParse(v17, v21, (int32x2_t *)this);
              if (!result)
                return result;
              ++*((_DWORD *)this + 22);
              if (!*((_DWORD *)this + 20))
              {
                v26 = *((_DWORD *)this + 7) + v24 - v23;
                *((_DWORD *)this + 7) = v26;
                v27 = *((_QWORD *)this + 1) + (v26 & (v26 >> 31));
                *(_QWORD *)this = v27;
                v64 = result;
                if (v27 <= (unint64_t)result || *(_BYTE *)result != 18)
                  goto LABEL_101;
                continue;
              }
            }
            return 0;
          }
        case 3u:
          if (v9 != 26)
            goto LABEL_82;
          *(_DWORD *)(a1 + 16) |= 2u;
          v28 = *(google::protobuf::EnumOptions **)(a1 + 104);
          if (!v28)
          {
            v29 = (google::protobuf::internal::ArenaImpl *)(*v62 & 0xFFFFFFFFFFFFFFFELL);
            if ((*v62 & 1) != 0)
              v29 = *(google::protobuf::internal::ArenaImpl **)v29;
            v28 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::EnumOptions>(v29);
            *(_QWORD *)(a1 + 104) = v28;
            v8 = v64;
          }
          v30 = (const char *)*(unsigned __int8 *)v8;
          if (*(char *)v8 < 0)
          {
            result = (google::protobuf::internal *)google::protobuf::internal::ReadSizeFallback(v8, v30);
            if (!result)
              return result;
            v31 = result;
          }
          else
          {
            v31 = (google::protobuf::internal *)((char *)v8 + 1);
          }
          v57 = *((_QWORD *)this + 1);
          v58 = (_DWORD)v30 + (_DWORD)v31 - v57;
          *(_QWORD *)this = v57 + (v58 & (v58 >> 31));
          v59 = *((_DWORD *)this + 7);
          *((_DWORD *)this + 7) = v58;
          LODWORD(v57) = *((_DWORD *)this + 22);
          v25 = __OFSUB__((_DWORD)v57, 1);
          LODWORD(v57) = v57 - 1;
          *((_DWORD *)this + 22) = v57;
          if ((int)v57 < 0 != v25)
            return 0;
          result = google::protobuf::EnumOptions::_InternalParse((uint64_t)v28, v31, (int32x2_t *)this);
          if (!result)
            return result;
          ++*((_DWORD *)this + 22);
          if (*((_DWORD *)this + 20))
            return 0;
          v60 = *((_DWORD *)this + 7) + v59 - v58;
          *((_DWORD *)this + 7) = v60;
          *(_QWORD *)this = *((_QWORD *)this + 1) + (v60 & (v60 >> 31));
          v64 = result;
          goto LABEL_101;
        case 4u:
          if (v9 != 34)
            goto LABEL_82;
          result = (google::protobuf::internal *)((char *)v8 - 1);
          while (2)
          {
            v32 = (google::protobuf::internal *)((char *)result + 1);
            v64 = v32;
            v33 = *(int **)(a1 + 64);
            if (!v33)
            {
              v34 = *(_DWORD *)(a1 + 56);
              v35 = *(_DWORD *)(a1 + 60);
LABEL_48:
              if (v34 <= v35)
              {
                google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 48), v35 - v34 + 1);
                v33 = *(int **)(a1 + 64);
              }
              v35 = *v33;
              goto LABEL_51;
            }
            v34 = *(_DWORD *)(a1 + 56);
            v35 = *v33;
            if (v34 < *v33)
            {
              *(_DWORD *)(a1 + 56) = v34 + 1;
              v36 = *(_QWORD **)&v33[2 * v34 + 2];
              goto LABEL_52;
            }
            if (v35 == *(_DWORD *)(a1 + 60))
              goto LABEL_48;
LABEL_51:
            *v33 = v35 + 1;
            v36 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::EnumDescriptorProto_EnumReservedRange>(*(google::protobuf::internal::ArenaImpl **)(a1 + 48));
            v37 = *(_QWORD *)(a1 + 64);
            v38 = *(int *)(a1 + 56);
            *(_DWORD *)(a1 + 56) = v38 + 1;
            *(_QWORD *)(v37 + 8 * v38 + 8) = v36;
            v32 = v64;
LABEL_52:
            v39 = (const char *)*(unsigned __int8 *)v32;
            if (*(char *)v32 < 0)
            {
              result = (google::protobuf::internal *)google::protobuf::internal::ReadSizeFallback(v32, v39);
              if (!result)
                return result;
              v40 = (const char *)result;
            }
            else
            {
              v40 = (char *)v32 + 1;
            }
            v41 = *((_QWORD *)this + 1);
            v42 = (_DWORD)v39 + (_DWORD)v40 - v41;
            *(_QWORD *)this = v41 + (v42 & (v42 >> 31));
            v43 = *((_DWORD *)this + 7);
            *((_DWORD *)this + 7) = v42;
            LODWORD(v41) = *((_DWORD *)this + 22);
            v25 = __OFSUB__((_DWORD)v41, 1);
            LODWORD(v41) = v41 - 1;
            *((_DWORD *)this + 22) = v41;
            if ((int)v41 < 0 == v25)
            {
              result = (google::protobuf::internal *)google::protobuf::EnumDescriptorProto_EnumReservedRange::_InternalParse((uint64_t)v36, v40, (int32x2_t *)this);
              if (!result)
                return result;
              ++*((_DWORD *)this + 22);
              if (!*((_DWORD *)this + 20))
              {
                v44 = *((_DWORD *)this + 7) + v43 - v42;
                *((_DWORD *)this + 7) = v44;
                v45 = *((_QWORD *)this + 1) + (v44 & (v44 >> 31));
                *(_QWORD *)this = v45;
                v64 = result;
                if (v45 <= (unint64_t)result || *(_BYTE *)result != 34)
                  goto LABEL_101;
                continue;
              }
            }
            return 0;
          }
        case 5u:
          if (v9 != 42)
            goto LABEL_82;
          result = (google::protobuf::internal *)((char *)v8 - 1);
          break;
        default:
LABEL_82:
          if (v9)
            v54 = (v9 & 7) == 4;
          else
            v54 = 1;
          if (v54)
          {
            *((_DWORD *)this + 20) = v9 - 1;
            return v8;
          }
          if ((*v62 & 1) != 0)
          {
            v55 = (google::protobuf::UnknownFieldSet *)((*v62 & 0xFFFFFFFFFFFFFFFELL) + 8);
          }
          else
          {
            v55 = (google::protobuf::UnknownFieldSet *)google::protobuf::internal::InternalMetadata::mutable_unknown_fields_slow<google::protobuf::UnknownFieldSet>(v62);
            v8 = v64;
          }
          v65 = v55;
          result = google::protobuf::internal::FieldParser<google::protobuf::internal::UnknownFieldParserHelper>(v9, &v65, (uint64_t *)v8, (int32x2_t *)this);
LABEL_89:
          v64 = result;
          if (!result)
            return result;
LABEL_101:
          v61 = google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(this, (const char **)&v64, *((_DWORD *)this + 23));
          result = v64;
          if (v61)
            return result;
          continue;
      }
      break;
    }
    while (1)
    {
      v46 = (char *)result + 1;
      v64 = (google::protobuf::internal *)((char *)result + 1);
      v47 = *(int **)(a1 + 88);
      if (!v47)
        break;
      v48 = *(_DWORD *)(a1 + 80);
      v49 = *v47;
      if (v48 >= *v47)
      {
        if (v49 == *(_DWORD *)(a1 + 84))
        {
LABEL_69:
          if (v48 <= v49)
          {
            google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 72), v49 - v48 + 1);
            v47 = *(int **)(a1 + 88);
          }
          v49 = *v47;
        }
        *v47 = v49 + 1;
        v51 = *v7;
        if (*v7)
        {
          if ((*(_BYTE *)(v51 + 24) & 1) != 0)
          AlignedAndAddCleanup = (std::string *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((google::protobuf::internal::ArenaImpl *)v51, 0x18uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<std::string>);
        }
        else
        {
          AlignedAndAddCleanup = (std::string *)operator new();
        }
        AlignedAndAddCleanup->__r_.__value_.__r.__words[0] = 0;
        AlignedAndAddCleanup->__r_.__value_.__l.__size_ = 0;
        AlignedAndAddCleanup->__r_.__value_.__r.__words[2] = 0;
        v52 = *(_QWORD *)(a1 + 88);
        v53 = *(int *)(a1 + 80);
        *(_DWORD *)(a1 + 80) = v53 + 1;
        *(_QWORD *)(v52 + 8 * v53 + 8) = AlignedAndAddCleanup;
        v46 = (std::string::value_type *)v64;
        goto LABEL_78;
      }
      *(_DWORD *)(a1 + 80) = v48 + 1;
      AlignedAndAddCleanup = *(std::string **)&v47[2 * v48 + 2];
LABEL_78:
      result = (google::protobuf::internal *)google::protobuf::internal::InlineGreedyStringParser(AlignedAndAddCleanup, v46, (uint64_t)this);
      v64 = result;
      if (!result)
        return result;
      if (*(_QWORD *)this <= (unint64_t)result || *(_BYTE *)result != 42)
        goto LABEL_101;
    }
    v48 = *(_DWORD *)(a1 + 80);
    v49 = *(_DWORD *)(a1 + 84);
    goto LABEL_69;
  }
  return result;
}

const google::protobuf::UnknownFieldSet *google::protobuf::EnumDescriptorProto::_InternalSerialize(google::protobuf::EnumDescriptorProto *this, unsigned __int8 *a2, google::protobuf::io::EpsCopyOutputStream *a3)
{
  unsigned __int8 *v4;
  int v6;
  int v7;
  int i;
  google::protobuf::EnumValueDescriptorProto *v9;
  unsigned int v10;
  unsigned __int8 *v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  google::protobuf::EnumOptions *v15;
  unsigned int v16;
  unsigned __int8 *v17;
  unsigned int v18;
  unsigned int v19;
  unsigned int v20;
  int v21;
  int j;
  google::protobuf::EnumDescriptorProto_EnumReservedRange *v23;
  unsigned int v24;
  unsigned __int8 *v25;
  unsigned int v26;
  unsigned int v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  int64_t v33;
  unsigned __int8 *v34;
  uint64_t v35;

  v4 = a2;
  v6 = *((_DWORD *)this + 4);
  if ((v6 & 1) != 0)
    v4 = google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 1, *((_QWORD *)this + 12) & 0xFFFFFFFFFFFFFFFELL, a2);
  v7 = *((_DWORD *)this + 8);
  if (v7)
  {
    for (i = 0; i != v7; ++i)
    {
      if (*(_QWORD *)a3 <= (unint64_t)v4)
        v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
      v9 = *(google::protobuf::EnumValueDescriptorProto **)(*((_QWORD *)this + 5) + 8 * i + 8);
      *v4 = 18;
      v10 = *((_DWORD *)v9 + 5);
      if (v10 > 0x7F)
      {
        v4[1] = v10 | 0x80;
        v12 = v10 >> 7;
        if (v10 >> 14)
        {
          v11 = v4 + 3;
          do
          {
            *(v11 - 1) = v12 | 0x80;
            v13 = v12 >> 7;
            ++v11;
            v14 = v12 >> 14;
            v12 >>= 7;
          }
          while (v14);
          *(v11 - 1) = v13;
        }
        else
        {
          v4[2] = v12;
          v11 = v4 + 3;
        }
      }
      else
      {
        v4[1] = v10;
        v11 = v4 + 2;
      }
      v4 = (unsigned __int8 *)google::protobuf::EnumValueDescriptorProto::_InternalSerialize(v9, v11, a3);
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(_QWORD *)a3 <= (unint64_t)v4)
      v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
    v15 = (google::protobuf::EnumOptions *)*((_QWORD *)this + 13);
    *v4 = 26;
    v16 = *((_DWORD *)v15 + 11);
    if (v16 > 0x7F)
    {
      v4[1] = v16 | 0x80;
      v18 = v16 >> 7;
      if (v16 >> 14)
      {
        v17 = v4 + 3;
        do
        {
          *(v17 - 1) = v18 | 0x80;
          v19 = v18 >> 7;
          ++v17;
          v20 = v18 >> 14;
          v18 >>= 7;
        }
        while (v20);
        *(v17 - 1) = v19;
      }
      else
      {
        v4[2] = v18;
        v17 = v4 + 3;
      }
    }
    else
    {
      v4[1] = v16;
      v17 = v4 + 2;
    }
    v4 = (unsigned __int8 *)google::protobuf::EnumOptions::_InternalSerialize(v15, v17, a3);
  }
  v21 = *((_DWORD *)this + 14);
  if (v21)
  {
    for (j = 0; j != v21; ++j)
    {
      if (*(_QWORD *)a3 <= (unint64_t)v4)
        v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
      v23 = *(google::protobuf::EnumDescriptorProto_EnumReservedRange **)(*((_QWORD *)this + 8) + 8 * j + 8);
      *v4 = 34;
      v24 = *((_DWORD *)v23 + 5);
      if (v24 > 0x7F)
      {
        v4[1] = v24 | 0x80;
        v26 = v24 >> 7;
        if (v24 >> 14)
        {
          v25 = v4 + 3;
          do
          {
            *(v25 - 1) = v26 | 0x80;
            v27 = v26 >> 7;
            ++v25;
            v28 = v26 >> 14;
            v26 >>= 7;
          }
          while (v28);
          *(v25 - 1) = v27;
        }
        else
        {
          v4[2] = v26;
          v25 = v4 + 3;
        }
      }
      else
      {
        v4[1] = v24;
        v25 = v4 + 2;
      }
      v4 = (unsigned __int8 *)google::protobuf::EnumDescriptorProto_EnumReservedRange::_InternalSerialize(v23, v25, a3, (google::protobuf::io::EpsCopyOutputStream *)v4);
    }
  }
  v29 = *((unsigned int *)this + 20);
  if ((int)v29 >= 1)
  {
    v30 = 0;
    v31 = 8 * v29;
    do
    {
      v32 = *(_QWORD **)(*((_QWORD *)this + 11) + v30 + 8);
      if (*((char *)v32 + 23) < 0)
      {
        v33 = v32[1];
        if (v33 > 127)
          goto LABEL_49;
      }
      else
      {
        v33 = *((unsigned __int8 *)v32 + 23);
      }
      if (*(_QWORD *)a3 - (_QWORD)v4 + 14 >= v33)
      {
        *v4 = 42;
        v4[1] = v33;
        if (*((char *)v32 + 23) < 0)
          v32 = (_QWORD *)*v32;
        v34 = v4 + 2;
        memcpy(v4 + 2, v32, v33);
        v4 = &v34[v33];
        goto LABEL_47;
      }
LABEL_49:
      v4 = google::protobuf::io::EpsCopyOutputStream::WriteStringOutline(a3, 5, (uint64_t)v32, v4);
LABEL_47:
      v30 += 8;
    }
    while (v31 != v30);
  }
  v35 = *((_QWORD *)this + 1);
  if ((v35 & 1) != 0)
    return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v35 & 0xFFFFFFFFFFFFFFFELL) + 8), (const google::protobuf::UnknownFieldSet *)v4, a3, (google::protobuf::io::EpsCopyOutputStream *)v4);
  else
    return (const google::protobuf::UnknownFieldSet *)v4;
}

const InternalMetadata *google::protobuf::EnumDescriptorProto::ByteSizeLong(google::protobuf::EnumDescriptorProto *this, uint64_t a2, uint64_t a3, CachedSize *a4)
{
  uint64_t v5;
  uint64_t v6;
  google::protobuf::EnumValueDescriptorProto **v7;
  uint64_t v8;
  google::protobuf::EnumValueDescriptorProto *v9;
  const InternalMetadata *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  google::protobuf::EnumDescriptorProto_EnumReservedRange **v14;
  uint64_t v15;
  google::protobuf::EnumDescriptorProto_EnumReservedRange *v16;
  uint64_t v17;
  uint64_t v18;
  const InternalMetadata *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  const InternalMetadata *v28;

  v5 = *((int *)this + 8);
  v6 = *((_QWORD *)this + 5);
  if (v6)
    v7 = (google::protobuf::EnumValueDescriptorProto **)(v6 + 8);
  else
    v7 = 0;
  if ((_DWORD)v5)
  {
    v8 = 8 * v5;
    do
    {
      v9 = *v7++;
      v10 = google::protobuf::EnumValueDescriptorProto::ByteSizeLong(v9, a2, a3, a4);
      v5 += (uint64_t)v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6);
      v8 -= 8;
    }
    while (v8);
  }
  else
  {
    v5 = 0;
  }
  v11 = *((int *)this + 14);
  v12 = v5 + v11;
  v13 = *((_QWORD *)this + 8);
  if (v13)
    v14 = (google::protobuf::EnumDescriptorProto_EnumReservedRange **)(v13 + 8);
  else
    v14 = 0;
  if ((_DWORD)v11)
  {
    v15 = 8 * v11;
    do
    {
      v16 = *v14++;
      v17 = google::protobuf::EnumDescriptorProto_EnumReservedRange::ByteSizeLong(v16, a2, a3, a4);
      v12 += v17 + ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6);
      v15 -= 8;
    }
    while (v15);
  }
  v18 = *((unsigned int *)this + 20);
  v19 = (const InternalMetadata *)(v12 + v18);
  if ((int)v18 >= 1)
  {
    v20 = (uint64_t *)(*((_QWORD *)this + 11) + 8);
    do
    {
      v21 = *v20++;
      v22 = *(unsigned __int8 *)(v21 + 23);
      v23 = *(_QWORD *)(v21 + 8);
      if ((v22 & 0x80u) == 0)
        v23 = v22;
      v19 = (const InternalMetadata *)((char *)v19 + v23 + ((9 * (__clz(v23 | 1) ^ 0x1F) + 73) >> 6));
      --v18;
    }
    while (v18);
  }
  v24 = *((_DWORD *)this + 4);
  if ((v24 & 3) != 0)
  {
    if ((v24 & 1) != 0)
    {
      v25 = *((_QWORD *)this + 12) & 0xFFFFFFFFFFFFFFFELL;
      v26 = *(unsigned __int8 *)(v25 + 23);
      v27 = *(_QWORD *)(v25 + 8);
      if ((v26 & 0x80u) == 0)
        v27 = v26;
      v19 = (const InternalMetadata *)((char *)v19 + v27 + ((9 * (__clz(v27 | 1) ^ 0x1F) + 73) >> 6) + 1);
    }
    if ((v24 & 2) != 0)
    {
      v28 = google::protobuf::EnumOptions::ByteSizeLong(*((google::protobuf::EnumOptions **)this + 13));
      v19 = (const InternalMetadata *)((char *)&v28->var0
                                     + ((9 * (__clz(v28 | 1) ^ 0x1F) + 73) >> 6)
                                     + (_QWORD)v19
                                     + 1);
    }
  }
  if ((*((_BYTE *)this + 8) & 1) != 0)
    return (const InternalMetadata *)google::protobuf::internal::ComputeUnknownFieldsSize((google::protobuf::EnumDescriptorProto *)((char *)this + 8), v19, (_DWORD *)this + 5, a4);
  *((_DWORD *)this + 5) = (_DWORD)v19;
  return v19;
}

void google::protobuf::EnumDescriptorProto::MergeFrom(google::protobuf::EnumDescriptorProto *this, const google::protobuf::Message *a2, google::protobuf::Message *a3)
{
  if (*(void (***)(google::protobuf::EnumDescriptorProto *__hidden))a2 == &off_1E1BF7E48)
    google::protobuf::EnumDescriptorProto::MergeFrom(this, a2);
  else
    google::protobuf::internal::ReflectionOps::Merge(a2, this, a3);
}

void google::protobuf::EnumDescriptorProto::MergeFrom(google::protobuf::EnumDescriptorProto *this, const google::protobuf::EnumDescriptorProto *a2)
{
  char *v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  google::protobuf::EnumValueDescriptorProto **v11;
  google::protobuf::EnumValueDescriptorProto **v12;
  google::protobuf::EnumValueDescriptorProto *v13;
  google::protobuf::EnumValueDescriptorProto *v14;
  google::protobuf::EnumValueDescriptorProto *v15;
  google::protobuf::internal::ArenaImpl *v16;
  int v17;
  uint64_t v18;
  google::protobuf::EnumValueDescriptorProto **v19;
  google::protobuf::EnumValueDescriptorProto **v20;
  google::protobuf::EnumValueDescriptorProto *v21;
  google::protobuf::EnumValueDescriptorProto *v22;
  int v23;
  int *v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  google::protobuf::DescriptorProto_ReservedRange **v30;
  google::protobuf::DescriptorProto_ReservedRange **v31;
  google::protobuf::DescriptorProto_ReservedRange *v32;
  google::protobuf::DescriptorProto_ReservedRange *v33;
  google::protobuf::DescriptorProto_ReservedRange *v34;
  google::protobuf::internal::ArenaImpl *v35;
  int v36;
  uint64_t v37;
  google::protobuf::DescriptorProto_ReservedRange **v38;
  google::protobuf::DescriptorProto_ReservedRange **v39;
  google::protobuf::DescriptorProto_ReservedRange *v40;
  google::protobuf::DescriptorProto_ReservedRange *v41;
  int v42;
  int *v43;
  signed int v44;
  const std::string **v45;
  unsigned int *v46;
  int v47;
  int *v48;
  int v49;
  __int128 *v50;
  uint64_t v51;
  google::protobuf::internal::ArenaImpl *v52;
  google::protobuf::EnumOptions *v53;
  google::protobuf::internal::ArenaImpl *v54;
  const google::protobuf::EnumOptions *v55;
  _QWORD *v56;
  unsigned int *v57;
  unsigned int *v58;
  uint64_t v59;
  uint64_t v60;

  v4 = (char *)this + 8;
  v5 = *((_QWORD *)a2 + 1);
  if ((v5 & 1) != 0)
    google::protobuf::internal::InternalMetadata::DoMergeFrom<google::protobuf::UnknownFieldSet>((uint64_t *)this + 1, (const google::protobuf::UnknownFieldSet *)((v5 & 0xFFFFFFFFFFFFFFFELL) + 8));
  v56 = v4;
  v6 = *((_DWORD *)a2 + 8);
  if (v6)
  {
    v59 = *((_QWORD *)a2 + 5);
    v57 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::EnumDescriptorProto *)((char *)this + 24), v6);
    v7 = **((int **)this + 5);
    v8 = *((int *)this + 8);
    v9 = v7 - v8;
    if ((int)v7 - (int)v8 >= v6)
      v10 = v6;
    else
      v10 = v9;
    if ((int)v10 >= 1)
    {
      v11 = (google::protobuf::EnumValueDescriptorProto **)v57;
      v12 = (google::protobuf::EnumValueDescriptorProto **)(v59 + 8);
      do
      {
        v14 = *v12++;
        v13 = v14;
        v15 = *v11++;
        google::protobuf::internal::GenericTypeHandler<google::protobuf::EnumValueDescriptorProto>::Merge(v13, v15);
        --v10;
      }
      while (v10);
    }
    if (v9 < v6)
    {
      v16 = (google::protobuf::internal::ArenaImpl *)*((_QWORD *)this + 3);
      v17 = v8 + v6 - v7;
      v18 = 8 * v7 - 8 * v8;
      v19 = (google::protobuf::EnumValueDescriptorProto **)((char *)v57 + v18);
      v20 = (google::protobuf::EnumValueDescriptorProto **)(v18 + v59 + 8);
      do
      {
        v21 = *v20++;
        v22 = (google::protobuf::EnumValueDescriptorProto *)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::EnumValueDescriptorProto>(v16);
        google::protobuf::internal::GenericTypeHandler<google::protobuf::EnumValueDescriptorProto>::Merge(v21, v22);
        *v19++ = v22;
        --v17;
      }
      while (v17);
    }
    v23 = *((_DWORD *)this + 8) + v6;
    *((_DWORD *)this + 8) = v23;
    v24 = (int *)*((_QWORD *)this + 5);
    if (*v24 < v23)
      *v24 = v23;
  }
  v25 = *((_DWORD *)a2 + 14);
  if (v25)
  {
    v60 = *((_QWORD *)a2 + 8);
    v58 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::EnumDescriptorProto *)((char *)this + 48), v25);
    v26 = **((int **)this + 8);
    v27 = *((int *)this + 14);
    v28 = v26 - v27;
    if ((int)v26 - (int)v27 >= v25)
      v29 = v25;
    else
      v29 = v28;
    if ((int)v29 >= 1)
    {
      v30 = (google::protobuf::DescriptorProto_ReservedRange **)v58;
      v31 = (google::protobuf::DescriptorProto_ReservedRange **)(v60 + 8);
      do
      {
        v33 = *v31++;
        v32 = v33;
        v34 = *v30++;
        google::protobuf::internal::GenericTypeHandler<google::protobuf::DescriptorProto_ReservedRange>::Merge(v32, v34);
        --v29;
      }
      while (v29);
    }
    if (v28 < v25)
    {
      v35 = (google::protobuf::internal::ArenaImpl *)*((_QWORD *)this + 6);
      v36 = v27 + v25 - v26;
      v37 = 8 * v26 - 8 * v27;
      v38 = (google::protobuf::DescriptorProto_ReservedRange **)((char *)v58 + v37);
      v39 = (google::protobuf::DescriptorProto_ReservedRange **)(v37 + v60 + 8);
      do
      {
        v40 = *v39++;
        v41 = (google::protobuf::DescriptorProto_ReservedRange *)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::EnumDescriptorProto_EnumReservedRange>(v35);
        google::protobuf::internal::GenericTypeHandler<google::protobuf::DescriptorProto_ReservedRange>::Merge(v40, v41);
        *v38++ = v41;
        --v36;
      }
      while (v36);
    }
    v42 = *((_DWORD *)this + 14) + v25;
    *((_DWORD *)this + 14) = v42;
    v43 = (int *)*((_QWORD *)this + 8);
    if (*v43 < v42)
      *v43 = v42;
  }
  v44 = *((_DWORD *)a2 + 20);
  if (v44)
  {
    v45 = (const std::string **)(*((_QWORD *)a2 + 11) + 8);
    v46 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::EnumDescriptorProto *)((char *)this + 72), *((_DWORD *)a2 + 20));
    google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((std::string *)this + 3, (std::string **)v46, v45, v44, **((_DWORD **)this + 11) - *((_DWORD *)this + 20));
    v47 = *((_DWORD *)this + 20) + v44;
    *((_DWORD *)this + 20) = v47;
    v48 = (int *)*((_QWORD *)this + 11);
    if (*v48 < v47)
      *v48 = v47;
  }
  v49 = *((_DWORD *)a2 + 4);
  if ((v49 & 3) != 0)
  {
    if ((v49 & 1) != 0)
    {
      v50 = (__int128 *)(*((_QWORD *)a2 + 12) & 0xFFFFFFFFFFFFFFFELL);
      *((_DWORD *)this + 4) |= 1u;
      v51 = *((_QWORD *)this + 1);
      v52 = (google::protobuf::internal::ArenaImpl *)(v51 & 0xFFFFFFFFFFFFFFFELL);
      if ((v51 & 1) != 0)
        v52 = *(google::protobuf::internal::ArenaImpl **)v52;
      google::protobuf::internal::ArenaStringPtr::Set((std::string **)this + 12, (std::string *)&google::protobuf::internal::fixed_address_empty_string, v50, v52);
    }
    if ((v49 & 2) != 0)
    {
      *((_DWORD *)this + 4) |= 2u;
      v53 = (google::protobuf::EnumOptions *)*((_QWORD *)this + 13);
      if (!v53)
      {
        v54 = (google::protobuf::internal::ArenaImpl *)(*v56 & 0xFFFFFFFFFFFFFFFELL);
        if ((*v56 & 1) != 0)
          v54 = *(google::protobuf::internal::ArenaImpl **)v54;
        v53 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::EnumOptions>(v54);
        *((_QWORD *)this + 13) = v53;
      }
      if (*((_QWORD *)a2 + 13))
        v55 = (const google::protobuf::EnumOptions *)*((_QWORD *)a2 + 13);
      else
        v55 = (const google::protobuf::EnumOptions *)&google::protobuf::_EnumOptions_default_instance_;
      google::protobuf::EnumOptions::MergeFrom(v53, v55);
    }
  }
}

void google::protobuf::EnumOptions::MergeFrom(google::protobuf::EnumOptions *this, const google::protobuf::EnumOptions *a2)
{
  uint64_t v4;
  unsigned int v5;
  google::protobuf::UninterpretedOption **v6;
  unsigned int *v7;
  signed int v8;
  signed int *v9;
  int v10;

  google::protobuf::internal::ExtensionSet::MergeFrom((google::protobuf::EnumOptions *)((char *)this + 16), (const google::protobuf::EnumOptions *)((char *)a2 + 16));
  v4 = *((_QWORD *)a2 + 1);
  if ((v4 & 1) != 0)
    google::protobuf::internal::InternalMetadata::DoMergeFrom<google::protobuf::UnknownFieldSet>((uint64_t *)this + 1, (const google::protobuf::UnknownFieldSet *)((v4 & 0xFFFFFFFFFFFFFFFELL) + 8));
  v5 = *((_DWORD *)a2 + 14);
  if (v5)
  {
    v6 = (google::protobuf::UninterpretedOption **)(*((_QWORD *)a2 + 8) + 8);
    v7 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::EnumOptions *)((char *)this + 48), *((_DWORD *)a2 + 14));
    google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::TypeHandler>((google::protobuf::internal::ArenaImpl **)this + 6, (google::protobuf::UninterpretedOption **)v7, v6, v5, **((_DWORD **)this + 8) - *((_DWORD *)this + 14));
    v8 = *((_DWORD *)this + 14) + v5;
    *((_DWORD *)this + 14) = v8;
    v9 = (signed int *)*((_QWORD *)this + 8);
    if (*v9 < v8)
      *v9 = v8;
  }
  v10 = *((_DWORD *)a2 + 10);
  if ((v10 & 3) != 0)
  {
    if ((v10 & 1) != 0)
      *((_BYTE *)this + 72) = *((_BYTE *)a2 + 72);
    if ((v10 & 2) != 0)
      *((_BYTE *)this + 73) = *((_BYTE *)a2 + 73);
    *((_DWORD *)this + 10) |= v10;
  }
}

void google::protobuf::EnumDescriptorProto::CopyFrom(google::protobuf::EnumDescriptorProto *this, const google::protobuf::Message *a2)
{
  google::protobuf::Message *v4;

  if (a2 != this)
  {
    google::protobuf::EnumDescriptorProto::Clear(this);
    google::protobuf::EnumDescriptorProto::MergeFrom(this, a2, v4);
  }
}

uint64_t google::protobuf::EnumDescriptorProto::IsInitialized(google::protobuf::EnumDescriptorProto *this)
{
  uint64_t v2;
  uint64_t v3;
  char IsInitialized;
  uint64_t result;
  uint64_t v6;

  v2 = *((unsigned int *)this + 8);
  while ((int)v2 >= 1)
  {
    v3 = v2 - 1;
    IsInitialized = google::protobuf::EnumValueDescriptorProto::IsInitialized(*(google::protobuf::EnumValueDescriptorProto **)(*((_QWORD *)this + 5) + 8 * v2));
    v2 = v3;
    if ((IsInitialized & 1) == 0)
      return 0;
  }
  if ((*((_BYTE *)this + 16) & 2) == 0)
    return 1;
  v6 = *((_QWORD *)this + 13);
  result = google::protobuf::internal::ExtensionSet::IsInitialized((google::protobuf::internal::ExtensionSet *)(v6 + 16));
  if ((_DWORD)result)
  {
    result = google::protobuf::internal::AllAreInitialized<google::protobuf::UninterpretedOption>(v6 + 48);
    if ((_DWORD)result)
      return 1;
  }
  return result;
}

uint64_t google::protobuf::EnumOptions::IsInitialized(google::protobuf::EnumOptions *this)
{
  uint64_t result;

  result = google::protobuf::internal::ExtensionSet::IsInitialized((google::protobuf::EnumOptions *)((char *)this + 16));
  if ((_DWORD)result)
    return google::protobuf::internal::AllAreInitialized<google::protobuf::UninterpretedOption>((uint64_t)this + 48);
  return result;
}

uint64_t google::protobuf::EnumDescriptorProto::GetMetadata(google::protobuf::EnumDescriptorProto *this)
{
  google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0);
  return off_1EDF46FE8[18];
}

void google::protobuf::EnumValueDescriptorProto::~EnumValueDescriptorProto(google::protobuf::EnumValueDescriptorProto *this)
{
  uint64_t v2;
  google::protobuf::EnumValueOptions *v3;

  v2 = *((_QWORD *)this + 3);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v2 + 23) < 0)
      operator delete(*(void **)v2);
    MEMORY[0x18D76437C](v2, 0x1012C40EC159624);
  }
  if (this != (google::protobuf::EnumValueDescriptorProto *)&google::protobuf::_EnumValueDescriptorProto_default_instance_)
  {
    v3 = (google::protobuf::EnumValueOptions *)*((_QWORD *)this + 4);
    if (v3)
    {
      google::protobuf::EnumValueOptions::~EnumValueOptions(v3);
      MEMORY[0x18D76437C]();
    }
  }
  google::protobuf::internal::InternalMetadata::Delete<google::protobuf::UnknownFieldSet>((uint64_t *)this + 1);
}

{
  google::protobuf::EnumValueDescriptorProto::~EnumValueDescriptorProto(this);
  JUMPOUT(0x18D76437CLL);
}

uint64_t google::protobuf::EnumValueDescriptorProto::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 20) = a2;
  return this;
}

google::protobuf::UnknownFieldSet *google::protobuf::EnumValueDescriptorProto::Clear(google::protobuf::UnknownFieldSet *this)
{
  uint64_t v1;
  int v2;
  unint64_t v3;
  uint64_t v4;
  char v5;

  v1 = (uint64_t)this;
  v2 = *((_DWORD *)this + 4);
  if ((v2 & 3) == 0)
    goto LABEL_7;
  if ((v2 & 1) == 0)
  {
LABEL_5:
    if ((v2 & 2) == 0)
      goto LABEL_7;
    goto LABEL_6;
  }
  v3 = *((_QWORD *)this + 3) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v3 + 23) & 0x80000000) == 0)
  {
    *(_BYTE *)v3 = 0;
    *(_BYTE *)(v3 + 23) = 0;
    goto LABEL_5;
  }
  **(_BYTE **)v3 = 0;
  *(_QWORD *)(v3 + 8) = 0;
  if ((v2 & 2) != 0)
LABEL_6:
    this = google::protobuf::EnumValueOptions::Clear(*((uint64_t ***)this + 4));
LABEL_7:
  v5 = *(_BYTE *)(v1 + 8);
  v4 = v1 + 8;
  *(_DWORD *)(v4 + 32) = 0;
  *(_DWORD *)(v4 + 8) = 0;
  if ((v5 & 1) != 0)
    return google::protobuf::internal::InternalMetadata::DoClear<google::protobuf::UnknownFieldSet>((uint64_t *)v4);
  return this;
}

google::protobuf::UnknownFieldSet *google::protobuf::EnumValueOptions::Clear(uint64_t **this)
{
  google::protobuf::UnknownFieldSet *result;
  uint64_t v3;
  google::protobuf::UnknownFieldSet **v4;
  google::protobuf::UnknownFieldSet *v5;
  char *v6;
  char v7;

  result = (google::protobuf::UnknownFieldSet *)google::protobuf::internal::ExtensionSet::Clear(this + 2);
  v3 = *((unsigned int *)this + 14);
  if ((int)v3 >= 1)
  {
    v4 = (google::protobuf::UnknownFieldSet **)(this[8] + 1);
    do
    {
      v5 = *v4++;
      result = google::protobuf::UninterpretedOption::Clear(v5);
      --v3;
    }
    while (v3);
    *((_DWORD *)this + 14) = 0;
  }
  v7 = *((_BYTE *)this + 8);
  v6 = (char *)(this + 1);
  v6[64] = 0;
  *((_DWORD *)v6 + 8) = 0;
  if ((v7 & 1) != 0)
    return google::protobuf::internal::InternalMetadata::DoClear<google::protobuf::UnknownFieldSet>((uint64_t *)v6);
  return result;
}

google::protobuf::internal *google::protobuf::EnumValueDescriptorProto::_InternalParse(uint64_t a1, google::protobuf::internal *a2, int32x2_t *this)
{
  int v5;
  google::protobuf::internal *v6;
  _QWORD *v8;
  std::string **v9;
  unsigned int v10;
  unsigned int v11;
  BOOL v13;
  google::protobuf::UnknownFieldSet *v14;
  google::protobuf::internal *v15;
  google::protobuf::EnumValueOptions *v16;
  google::protobuf::internal::ArenaImpl *v17;
  const char *v18;
  google::protobuf::internal *v19;
  uint64_t v20;
  google::protobuf::internal *v21;
  int v22;
  uint64_t v23;
  google::protobuf::internal::ArenaImpl *v24;
  std::string *v25;
  uint64_t v26;
  char *SizeFallback;
  int32x2_t v28;
  int v29;
  __int32 v30;
  BOOL v31;
  google::protobuf::internal *v32;
  int v33;
  uint64_t v34;
  google::protobuf::internal *v35;
  google::protobuf::UnknownFieldSet *v36;

  v35 = a2;
  v5 = 0;
  if ((google::protobuf::internal::EpsCopyInputStream::DoneWithCheck((google::protobuf::internal::EpsCopyInputStream *)this, (const char **)&v35, this[11].i32[1]) & 1) == 0)
  {
    v8 = (_QWORD *)(a1 + 8);
    v9 = (std::string **)(a1 + 24);
    while (1)
    {
      v6 = (google::protobuf::internal *)((char *)v35 + 1);
      v10 = *(unsigned __int8 *)v35;
      if (*(char *)v35 < 0)
      {
        v10 = v10 + (*(unsigned __int8 *)v6 << 7) - 128;
        if (*(char *)v6 < 0)
        {
          v6 = (google::protobuf::internal *)((char *)v35 + 3);
          v26 = -21;
          while (1)
          {
            v10 += (*((unsigned __int8 *)v6 - 1) - 1) << (v26 + 35);
            if ((*((char *)v6 - 1) & 0x80000000) == 0)
              break;
            v6 = (google::protobuf::internal *)((char *)v6 + 1);
            v26 += 7;
            if (!v26)
              goto LABEL_57;
          }
        }
        else
        {
          v6 = (google::protobuf::internal *)((char *)v35 + 2);
        }
      }
      v35 = v6;
      v11 = v10 >> 3;
      if (v10 >> 3 != 3)
        break;
      if (v10 != 26)
        goto LABEL_14;
      *(_DWORD *)(a1 + 16) |= 2u;
      v16 = *(google::protobuf::EnumValueOptions **)(a1 + 32);
      if (!v16)
      {
        v17 = (google::protobuf::internal::ArenaImpl *)(*v8 & 0xFFFFFFFFFFFFFFFELL);
        if ((*v8 & 1) != 0)
          v17 = *(google::protobuf::internal::ArenaImpl **)v17;
        v16 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::EnumValueOptions>(v17);
        *(_QWORD *)(a1 + 32) = v16;
        v6 = v35;
      }
      v18 = (const char *)*(unsigned __int8 *)v6;
      if (*(char *)v6 < 0)
      {
        SizeFallback = google::protobuf::internal::ReadSizeFallback(v6, v18);
        if (!SizeFallback)
          goto LABEL_57;
        v19 = (google::protobuf::internal *)SizeFallback;
      }
      else
      {
        v19 = (google::protobuf::internal *)((char *)v6 + 1);
      }
      v28 = this[1];
      v29 = (_DWORD)v18 + (_DWORD)v19 - v28.i32[0];
      *this = (int32x2_t)(*(_QWORD *)&v28 + (v29 & (v29 >> 31)));
      v30 = this[3].i32[1];
      this[3].i32[1] = v29;
      v28.i32[0] = this[11].i32[0];
      v31 = __OFSUB__(v28.i32[0]--, 1);
      this[11].i32[0] = v28.i32[0];
      if (v28.i32[0] < 0 != v31
        || (v32 = google::protobuf::EnumValueOptions::_InternalParse((uint64_t)v16, v19, this)) == 0
        || (++this[11].i32[0], this[10].i32[0]))
      {
LABEL_57:
        v6 = 0;
        goto LABEL_3;
      }
      v33 = this[3].i32[1] + v30 - v29;
      this[3].i32[1] = v33;
      *this = (int32x2_t)(*(_QWORD *)&this[1] + (v33 & (v33 >> 31)));
      v35 = v32;
LABEL_50:
      if (google::protobuf::internal::EpsCopyInputStream::DoneWithCheck((google::protobuf::internal::EpsCopyInputStream *)this, (const char **)&v35, this[11].i32[1]))goto LABEL_2;
    }
    if (v11 == 2)
    {
      if (v10 == 16)
      {
        v5 |= 4u;
        v21 = (google::protobuf::internal *)((char *)v6 + 1);
        LODWORD(v20) = *(unsigned __int8 *)v6;
        if ((v20 & 0x80) != 0)
        {
          v22 = *(char *)v21;
          v20 = v20 + (v22 << 7) - 128;
          if (v22 < 0)
          {
            v21 = (google::protobuf::internal *)((char *)v6 + 3);
            v34 = 14;
            while (1)
            {
              v20 += (*((unsigned __int8 *)v21 - 1) - 1) << v34;
              if ((*((char *)v21 - 1) & 0x80000000) == 0)
                break;
              v21 = (google::protobuf::internal *)((char *)v21 + 1);
              v34 += 7;
              if (v34 == 70)
              {
                v6 = 0;
                *(_DWORD *)(a1 + 40) = 0;
                goto LABEL_3;
              }
            }
          }
          else
          {
            v21 = (google::protobuf::internal *)((char *)v6 + 2);
          }
        }
        v35 = v21;
        *(_DWORD *)(a1 + 40) = v20;
        goto LABEL_50;
      }
    }
    else if (v11 == 1 && v10 == 10)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      v23 = *(_QWORD *)(a1 + 8);
      v24 = (google::protobuf::internal::ArenaImpl *)(v23 & 0xFFFFFFFFFFFFFFFELL);
      if ((v23 & 1) != 0)
        v24 = *(google::protobuf::internal::ArenaImpl **)v24;
      v25 = *v9;
      if (*v9 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
      {
        v25 = (std::string *)google::protobuf::internal::ArenaStringPtr::MutableSlow<>((_QWORD *)(a1 + 24), v24);
        v6 = v35;
      }
      v15 = (google::protobuf::internal *)google::protobuf::internal::InlineGreedyStringParser(v25, (std::string::value_type *)v6, (uint64_t)this);
LABEL_38:
      v35 = v15;
      if (!v15)
        goto LABEL_57;
      goto LABEL_50;
    }
LABEL_14:
    if (v10)
      v13 = (v10 & 7) == 4;
    else
      v13 = 1;
    if (v13)
    {
      this[10].i32[0] = v10 - 1;
      goto LABEL_3;
    }
    if ((*v8 & 1) != 0)
    {
      v14 = (google::protobuf::UnknownFieldSet *)((*v8 & 0xFFFFFFFFFFFFFFFELL) + 8);
    }
    else
    {
      v14 = (google::protobuf::UnknownFieldSet *)google::protobuf::internal::InternalMetadata::mutable_unknown_fields_slow<google::protobuf::UnknownFieldSet>((uint64_t *)(a1 + 8));
      v6 = v35;
    }
    v36 = v14;
    v15 = google::protobuf::internal::FieldParser<google::protobuf::internal::UnknownFieldParserHelper>(v10, &v36, (uint64_t *)v6, this);
    goto LABEL_38;
  }
LABEL_2:
  v6 = v35;
LABEL_3:
  *(_DWORD *)(a1 + 16) |= v5;
  return v6;
}

const google::protobuf::UnknownFieldSet *google::protobuf::EnumValueDescriptorProto::_InternalSerialize(google::protobuf::EnumValueDescriptorProto *this, unsigned __int8 *a2, google::protobuf::io::EpsCopyOutputStream *a3)
{
  unsigned __int8 *v4;
  int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  google::protobuf::EnumValueOptions *v11;
  unsigned int v12;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  uint64_t v17;

  v4 = a2;
  v6 = *((_DWORD *)this + 4);
  if ((v6 & 1) != 0)
  {
    v4 = google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 1, *((_QWORD *)this + 3) & 0xFFFFFFFFFFFFFFFELL, a2);
    if ((v6 & 4) == 0)
    {
LABEL_3:
      if ((v6 & 2) == 0)
        goto LABEL_27;
      goto LABEL_17;
    }
  }
  else if ((v6 & 4) == 0)
  {
    goto LABEL_3;
  }
  if (*(_QWORD *)a3 <= (unint64_t)v4)
    v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
  v7 = *((int *)this + 10);
  *v4 = 16;
  if (v7 > 0x7F)
  {
    v4[1] = v7 | 0x80;
    v8 = v7 >> 7;
    if (v7 >> 14)
    {
      v4 += 3;
      do
      {
        *(v4 - 1) = v8 | 0x80;
        v9 = v8 >> 7;
        ++v4;
        v10 = v8 >> 14;
        v8 >>= 7;
      }
      while (v10);
      *(v4 - 1) = v9;
      if ((v6 & 2) == 0)
        goto LABEL_27;
    }
    else
    {
      v4[2] = v8;
      v4 += 3;
      if ((v6 & 2) == 0)
        goto LABEL_27;
    }
  }
  else
  {
    v4[1] = v7;
    v4 += 2;
    if ((v6 & 2) == 0)
      goto LABEL_27;
  }
LABEL_17:
  if (*(_QWORD *)a3 <= (unint64_t)v4)
    v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
  v11 = (google::protobuf::EnumValueOptions *)*((_QWORD *)this + 4);
  *v4 = 26;
  v12 = *((_DWORD *)v11 + 11);
  if (v12 > 0x7F)
  {
    v4[1] = v12 | 0x80;
    v14 = v12 >> 7;
    if (v12 >> 14)
    {
      v13 = v4 + 3;
      do
      {
        *(v13 - 1) = v14 | 0x80;
        v15 = v14 >> 7;
        ++v13;
        v16 = v14 >> 14;
        v14 >>= 7;
      }
      while (v16);
      *(v13 - 1) = v15;
    }
    else
    {
      v4[2] = v14;
      v13 = v4 + 3;
    }
  }
  else
  {
    v4[1] = v12;
    v13 = v4 + 2;
  }
  v4 = (unsigned __int8 *)google::protobuf::EnumValueOptions::_InternalSerialize(v11, v13, a3);
LABEL_27:
  v17 = *((_QWORD *)this + 1);
  if ((v17 & 1) != 0)
    return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v17 & 0xFFFFFFFFFFFFFFFELL) + 8), (const google::protobuf::UnknownFieldSet *)v4, a3, (google::protobuf::io::EpsCopyOutputStream *)v4);
  else
    return (const google::protobuf::UnknownFieldSet *)v4;
}

const InternalMetadata *google::protobuf::EnumValueDescriptorProto::ByteSizeLong(google::protobuf::EnumValueDescriptorProto *this, uint64_t a2, uint64_t a3, CachedSize *a4)
{
  int v5;
  const InternalMetadata *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  const InternalMetadata *v10;
  int v11;
  uint64_t v12;

  v5 = *((_DWORD *)this + 4);
  if ((v5 & 7) == 0)
  {
    v6 = 0;
    goto LABEL_15;
  }
  if ((v5 & 1) != 0)
  {
    v7 = *((_QWORD *)this + 3) & 0xFFFFFFFFFFFFFFFELL;
    v8 = *(unsigned __int8 *)(v7 + 23);
    v9 = *(_QWORD *)(v7 + 8);
    if ((v8 & 0x80u) == 0)
      v9 = v8;
    v6 = (const InternalMetadata *)(v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1);
    if ((v5 & 2) == 0)
      goto LABEL_10;
    goto LABEL_9;
  }
  v6 = 0;
  if ((v5 & 2) != 0)
  {
LABEL_9:
    v10 = google::protobuf::EnumValueOptions::ByteSizeLong(*((google::protobuf::EnumValueOptions **)this + 4));
    v6 = (const InternalMetadata *)((char *)&v10->var0
                                  + (_QWORD)v6
                                  + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6)
                                  + 1);
  }
LABEL_10:
  if ((v5 & 4) != 0)
  {
    v11 = *((_DWORD *)this + 10);
    if (v11 < 0)
      v12 = 11;
    else
      v12 = ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
    v6 = (const InternalMetadata *)((char *)v6 + v12);
  }
LABEL_15:
  if ((*((_BYTE *)this + 8) & 1) != 0)
    return (const InternalMetadata *)google::protobuf::internal::ComputeUnknownFieldsSize((google::protobuf::EnumValueDescriptorProto *)((char *)this + 8), v6, (_DWORD *)this + 5, a4);
  *((_DWORD *)this + 5) = (_DWORD)v6;
  return v6;
}

void google::protobuf::EnumValueDescriptorProto::MergeFrom(google::protobuf::EnumValueDescriptorProto *this, const google::protobuf::Message *a2, google::protobuf::Message *a3)
{
  if (*(void (***)(google::protobuf::EnumValueDescriptorProto *__hidden))a2 == &off_1E1BF84A0)
    google::protobuf::EnumValueDescriptorProto::MergeFrom(this, a2);
  else
    google::protobuf::internal::ReflectionOps::Merge(a2, this, a3);
}

void google::protobuf::EnumValueDescriptorProto::MergeFrom(google::protobuf::EnumValueDescriptorProto *this, const google::protobuf::EnumValueDescriptorProto *a2)
{
  _QWORD *v4;
  uint64_t v5;
  int v6;
  __int128 *v7;
  uint64_t v8;
  google::protobuf::internal::ArenaImpl *v9;
  google::protobuf::EnumValueOptions *v10;
  google::protobuf::internal::ArenaImpl *v11;
  const google::protobuf::EnumValueOptions *v12;

  v4 = (_QWORD *)((char *)this + 8);
  v5 = *((_QWORD *)a2 + 1);
  if ((v5 & 1) != 0)
    google::protobuf::internal::InternalMetadata::DoMergeFrom<google::protobuf::UnknownFieldSet>((uint64_t *)this + 1, (const google::protobuf::UnknownFieldSet *)((v5 & 0xFFFFFFFFFFFFFFFELL) + 8));
  v6 = *((_DWORD *)a2 + 4);
  if ((v6 & 7) != 0)
  {
    if ((v6 & 1) != 0)
    {
      v7 = (__int128 *)(*((_QWORD *)a2 + 3) & 0xFFFFFFFFFFFFFFFELL);
      *((_DWORD *)this + 4) |= 1u;
      v8 = *((_QWORD *)this + 1);
      v9 = (google::protobuf::internal::ArenaImpl *)(v8 & 0xFFFFFFFFFFFFFFFELL);
      if ((v8 & 1) != 0)
        v9 = *(google::protobuf::internal::ArenaImpl **)v9;
      google::protobuf::internal::ArenaStringPtr::Set((std::string **)this + 3, (std::string *)&google::protobuf::internal::fixed_address_empty_string, v7, v9);
      if ((v6 & 2) == 0)
      {
LABEL_6:
        if ((v6 & 4) == 0)
        {
LABEL_8:
          *((_DWORD *)this + 4) |= v6;
          return;
        }
LABEL_7:
        *((_DWORD *)this + 10) = *((_DWORD *)a2 + 10);
        goto LABEL_8;
      }
    }
    else if ((v6 & 2) == 0)
    {
      goto LABEL_6;
    }
    *((_DWORD *)this + 4) |= 2u;
    v10 = (google::protobuf::EnumValueOptions *)*((_QWORD *)this + 4);
    if (!v10)
    {
      v11 = (google::protobuf::internal::ArenaImpl *)(*v4 & 0xFFFFFFFFFFFFFFFELL);
      if ((*v4 & 1) != 0)
        v11 = *(google::protobuf::internal::ArenaImpl **)v11;
      v10 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::EnumValueOptions>(v11);
      *((_QWORD *)this + 4) = v10;
    }
    if (*((_QWORD *)a2 + 4))
      v12 = (const google::protobuf::EnumValueOptions *)*((_QWORD *)a2 + 4);
    else
      v12 = (const google::protobuf::EnumValueOptions *)&google::protobuf::_EnumValueOptions_default_instance_;
    google::protobuf::EnumValueOptions::MergeFrom(v10, v12);
    if ((v6 & 4) == 0)
      goto LABEL_8;
    goto LABEL_7;
  }
}

void google::protobuf::EnumValueOptions::MergeFrom(google::protobuf::EnumValueOptions *this, const google::protobuf::EnumValueOptions *a2)
{
  uint64_t v4;
  unsigned int v5;
  google::protobuf::UninterpretedOption **v6;
  unsigned int *v7;
  signed int v8;
  signed int *v9;
  char v10;

  google::protobuf::internal::ExtensionSet::MergeFrom((google::protobuf::EnumValueOptions *)((char *)this + 16), (const google::protobuf::EnumValueOptions *)((char *)a2 + 16));
  v4 = *((_QWORD *)a2 + 1);
  if ((v4 & 1) != 0)
    google::protobuf::internal::InternalMetadata::DoMergeFrom<google::protobuf::UnknownFieldSet>((uint64_t *)this + 1, (const google::protobuf::UnknownFieldSet *)((v4 & 0xFFFFFFFFFFFFFFFELL) + 8));
  v5 = *((_DWORD *)a2 + 14);
  if (v5)
  {
    v6 = (google::protobuf::UninterpretedOption **)(*((_QWORD *)a2 + 8) + 8);
    v7 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::EnumValueOptions *)((char *)this + 48), *((_DWORD *)a2 + 14));
    google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::TypeHandler>((google::protobuf::internal::ArenaImpl **)this + 6, (google::protobuf::UninterpretedOption **)v7, v6, v5, **((_DWORD **)this + 8) - *((_DWORD *)this + 14));
    v8 = *((_DWORD *)this + 14) + v5;
    *((_DWORD *)this + 14) = v8;
    v9 = (signed int *)*((_QWORD *)this + 8);
    if (*v9 < v8)
      *v9 = v8;
  }
  if ((*((_BYTE *)a2 + 40) & 1) != 0)
  {
    v10 = *((_BYTE *)a2 + 72);
    *((_DWORD *)this + 10) |= 1u;
    *((_BYTE *)this + 72) = v10;
  }
}

void google::protobuf::EnumValueDescriptorProto::CopyFrom(google::protobuf::EnumValueDescriptorProto *this, const google::protobuf::Message *a2)
{
  google::protobuf::Message *v4;

  if (a2 != this)
  {
    google::protobuf::EnumValueDescriptorProto::Clear(this);
    google::protobuf::EnumValueDescriptorProto::MergeFrom(this, a2, v4);
  }
}

uint64_t google::protobuf::EnumValueDescriptorProto::IsInitialized(google::protobuf::EnumValueDescriptorProto *this)
{
  uint64_t v1;
  uint64_t result;

  if ((*((_BYTE *)this + 16) & 2) == 0)
    return 1;
  v1 = *((_QWORD *)this + 4);
  result = google::protobuf::internal::ExtensionSet::IsInitialized((google::protobuf::internal::ExtensionSet *)(v1 + 16));
  if ((_DWORD)result)
  {
    result = google::protobuf::internal::AllAreInitialized<google::protobuf::UninterpretedOption>(v1 + 48);
    if ((_DWORD)result)
      return 1;
  }
  return result;
}

uint64_t google::protobuf::EnumValueOptions::IsInitialized(google::protobuf::EnumValueOptions *this)
{
  uint64_t result;

  result = google::protobuf::internal::ExtensionSet::IsInitialized((google::protobuf::EnumValueOptions *)((char *)this + 16));
  if ((_DWORD)result)
    return google::protobuf::internal::AllAreInitialized<google::protobuf::UninterpretedOption>((uint64_t)this + 48);
  return result;
}

uint64_t google::protobuf::EnumValueDescriptorProto::GetMetadata(google::protobuf::EnumValueDescriptorProto *this)
{
  google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0);
  return off_1EDF46FE8[20];
}

google::protobuf::ServiceDescriptorProto *google::protobuf::ServiceDescriptorProto::ServiceDescriptorProto(google::protobuf::ServiceDescriptorProto *this, Arena *a2)
{
  *(_QWORD *)this = &off_1E1BF8340;
  *((_QWORD *)this + 1) = a2;
  *((_QWORD *)this + 3) = a2;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 4) = 0;
  *((_QWORD *)this + 5) = 0;
  if (atomic_load(scc_info_ServiceDescriptorProto_google_2fprotobuf_2fdescriptor_2eproto))
    google::protobuf::internal::InitSCCImpl(scc_info_ServiceDescriptorProto_google_2fprotobuf_2fdescriptor_2eproto);
  *((_QWORD *)this + 6) = &google::protobuf::internal::fixed_address_empty_string;
  *((_QWORD *)this + 7) = 0;
  return this;
}

void sub_1888AE5B8(_Unwind_Exception *a1)
{
  _QWORD *v1;

  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<google::protobuf::MethodDescriptorProto>::TypeHandler>(v1);
  _Unwind_Resume(a1);
}

void google::protobuf::ServiceDescriptorProto::~ServiceDescriptorProto(google::protobuf::ServiceDescriptorProto *this)
{
  uint64_t v2;
  google::protobuf::ServiceOptions *v3;

  v2 = *((_QWORD *)this + 6);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v2 + 23) < 0)
      operator delete(*(void **)v2);
    MEMORY[0x18D76437C](v2, 0x1012C40EC159624);
  }
  if (this != (google::protobuf::ServiceDescriptorProto *)&google::protobuf::_ServiceDescriptorProto_default_instance_)
  {
    v3 = (google::protobuf::ServiceOptions *)*((_QWORD *)this + 7);
    if (v3)
    {
      google::protobuf::ServiceOptions::~ServiceOptions(v3);
      MEMORY[0x18D76437C]();
    }
  }
  google::protobuf::internal::InternalMetadata::Delete<google::protobuf::UnknownFieldSet>((uint64_t *)this + 1);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<google::protobuf::MethodDescriptorProto>::TypeHandler>((_QWORD *)this + 3);
}

{
  google::protobuf::ServiceDescriptorProto::~ServiceDescriptorProto(this);
  JUMPOUT(0x18D76437CLL);
}

uint64_t google::protobuf::ServiceDescriptorProto::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 20) = a2;
  return this;
}

google::protobuf::UnknownFieldSet *google::protobuf::ServiceDescriptorProto::Clear(google::protobuf::UnknownFieldSet *this)
{
  uint64_t v1;
  uint64_t v2;
  google::protobuf::UnknownFieldSet **v3;
  google::protobuf::UnknownFieldSet *v4;
  int v5;
  unint64_t v6;
  uint64_t v7;
  char v8;

  v1 = (uint64_t)this;
  v2 = *((unsigned int *)this + 8);
  if ((int)v2 >= 1)
  {
    v3 = (google::protobuf::UnknownFieldSet **)(*((_QWORD *)this + 5) + 8);
    do
    {
      v4 = *v3++;
      this = google::protobuf::MethodDescriptorProto::Clear(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  v5 = *(_DWORD *)(v1 + 16);
  if ((v5 & 3) != 0)
  {
    if ((v5 & 1) == 0)
      goto LABEL_9;
    v6 = *(_QWORD *)(v1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    if ((*(char *)(v6 + 23) & 0x80000000) == 0)
    {
      *(_BYTE *)v6 = 0;
      *(_BYTE *)(v6 + 23) = 0;
LABEL_9:
      if ((v5 & 2) == 0)
        goto LABEL_11;
      goto LABEL_10;
    }
    **(_BYTE **)v6 = 0;
    *(_QWORD *)(v6 + 8) = 0;
    if ((v5 & 2) != 0)
LABEL_10:
      this = google::protobuf::ServiceOptions::Clear(*(uint64_t ***)(v1 + 56));
  }
LABEL_11:
  v8 = *(_BYTE *)(v1 + 8);
  v7 = v1 + 8;
  *(_DWORD *)(v7 + 8) = 0;
  if ((v8 & 1) != 0)
    return google::protobuf::internal::InternalMetadata::DoClear<google::protobuf::UnknownFieldSet>((uint64_t *)v7);
  return this;
}

google::protobuf::UnknownFieldSet *google::protobuf::ServiceOptions::Clear(uint64_t **this)
{
  google::protobuf::UnknownFieldSet *result;
  uint64_t v3;
  google::protobuf::UnknownFieldSet **v4;
  google::protobuf::UnknownFieldSet *v5;
  char *v6;
  char v7;

  result = (google::protobuf::UnknownFieldSet *)google::protobuf::internal::ExtensionSet::Clear(this + 2);
  v3 = *((unsigned int *)this + 14);
  if ((int)v3 >= 1)
  {
    v4 = (google::protobuf::UnknownFieldSet **)(this[8] + 1);
    do
    {
      v5 = *v4++;
      result = google::protobuf::UninterpretedOption::Clear(v5);
      --v3;
    }
    while (v3);
    *((_DWORD *)this + 14) = 0;
  }
  v7 = *((_BYTE *)this + 8);
  v6 = (char *)(this + 1);
  v6[64] = 0;
  *((_DWORD *)v6 + 8) = 0;
  if ((v7 & 1) != 0)
    return google::protobuf::internal::InternalMetadata::DoClear<google::protobuf::UnknownFieldSet>((uint64_t *)v6);
  return result;
}

google::protobuf::internal *google::protobuf::ServiceDescriptorProto::_InternalParse(uint64_t a1, google::protobuf::internal *a2, google::protobuf::internal::EpsCopyInputStream *this)
{
  char v5;
  google::protobuf::internal *result;
  _QWORD *v7;
  std::string **v8;
  google::protobuf::internal *v9;
  unsigned int v10;
  unsigned int v11;
  BOOL v13;
  google::protobuf::UnknownFieldSet *v14;
  google::protobuf::ServiceOptions *v15;
  google::protobuf::internal::ArenaImpl *v16;
  const char *v17;
  google::protobuf::internal *v18;
  google::protobuf::internal *v19;
  int *v20;
  int v21;
  int v22;
  google::protobuf::MethodDescriptorProto *v23;
  uint64_t v24;
  uint64_t v25;
  const char *v26;
  google::protobuf::internal *v27;
  uint64_t v28;
  int v29;
  int v30;
  BOOL v31;
  int v32;
  unint64_t v33;
  uint64_t v34;
  google::protobuf::internal::ArenaImpl *v35;
  std::string *v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  int v40;
  int v41;
  int v42;
  google::protobuf::internal *v43;
  google::protobuf::UnknownFieldSet *v44;

  v43 = a2;
  v5 = google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(this, (const char **)&v43, *((_DWORD *)this + 23));
  result = v43;
  if ((v5 & 1) == 0)
  {
    v7 = (_QWORD *)(a1 + 8);
    v8 = (std::string **)(a1 + 48);
    while (1)
    {
      v9 = (google::protobuf::internal *)((char *)result + 1);
      v10 = *(unsigned __int8 *)result;
      if (*(char *)result < 0)
      {
        v10 = v10 + (*(unsigned __int8 *)v9 << 7) - 128;
        if (*(char *)v9 < 0)
        {
          v9 = (google::protobuf::internal *)((char *)result + 3);
          v37 = -21;
          while (1)
          {
            v10 += (*((unsigned __int8 *)v9 - 1) - 1) << (v37 + 35);
            if ((*((char *)v9 - 1) & 0x80000000) == 0)
              break;
            result = 0;
            v9 = (google::protobuf::internal *)((char *)v9 + 1);
            v37 += 7;
            if (!v37)
              return result;
          }
        }
        else
        {
          v9 = (google::protobuf::internal *)((char *)result + 2);
        }
      }
      v43 = v9;
      v11 = v10 >> 3;
      if (v10 >> 3 != 3)
        break;
      if (v10 != 26)
        goto LABEL_12;
      *(_DWORD *)(a1 + 16) |= 2u;
      v15 = *(google::protobuf::ServiceOptions **)(a1 + 56);
      if (!v15)
      {
        v16 = (google::protobuf::internal::ArenaImpl *)(*v7 & 0xFFFFFFFFFFFFFFFELL);
        if ((*v7 & 1) != 0)
          v16 = *(google::protobuf::internal::ArenaImpl **)v16;
        v15 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::ServiceOptions>(v16);
        *(_QWORD *)(a1 + 56) = v15;
        v9 = v43;
      }
      v17 = (const char *)*(unsigned __int8 *)v9;
      if (*(char *)v9 < 0)
      {
        result = (google::protobuf::internal *)google::protobuf::internal::ReadSizeFallback(v9, v17);
        if (!result)
          return result;
        v18 = result;
      }
      else
      {
        v18 = (google::protobuf::internal *)((char *)v9 + 1);
      }
      v38 = *((_QWORD *)this + 1);
      v39 = (_DWORD)v17 + (_DWORD)v18 - v38;
      *(_QWORD *)this = v38 + (v39 & (v39 >> 31));
      v40 = *((_DWORD *)this + 7);
      *((_DWORD *)this + 7) = v39;
      LODWORD(v38) = *((_DWORD *)this + 22);
      v31 = __OFSUB__((_DWORD)v38, 1);
      LODWORD(v38) = v38 - 1;
      *((_DWORD *)this + 22) = v38;
      if ((int)v38 < 0 != v31)
        return 0;
      result = google::protobuf::ServiceOptions::_InternalParse((uint64_t)v15, v18, (int32x2_t *)this);
      if (!result)
        return result;
      ++*((_DWORD *)this + 22);
      if (*((_DWORD *)this + 20))
        return 0;
      v41 = *((_DWORD *)this + 7) + v40 - v39;
      *((_DWORD *)this + 7) = v41;
      *(_QWORD *)this = *((_QWORD *)this + 1) + (v41 & (v41 >> 31));
      v43 = result;
LABEL_64:
      v42 = google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(this, (const char **)&v43, *((_DWORD *)this + 23));
      result = v43;
      if (v42)
        return result;
    }
    if (v11 != 2)
    {
      if (v11 == 1 && v10 == 10)
      {
        *(_DWORD *)(a1 + 16) |= 1u;
        v34 = *(_QWORD *)(a1 + 8);
        v35 = (google::protobuf::internal::ArenaImpl *)(v34 & 0xFFFFFFFFFFFFFFFELL);
        if ((v34 & 1) != 0)
          v35 = *(google::protobuf::internal::ArenaImpl **)v35;
        v36 = *v8;
        if (*v8 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
        {
          v36 = (std::string *)google::protobuf::internal::ArenaStringPtr::MutableSlow<>((_QWORD *)(a1 + 48), v35);
          v9 = v43;
        }
        result = (google::protobuf::internal *)google::protobuf::internal::InlineGreedyStringParser(v36, (std::string::value_type *)v9, (uint64_t)this);
LABEL_52:
        v43 = result;
        if (!result)
          return result;
        goto LABEL_64;
      }
LABEL_12:
      if (v10)
        v13 = (v10 & 7) == 4;
      else
        v13 = 1;
      if (v13)
      {
        *((_DWORD *)this + 20) = v10 - 1;
        return v9;
      }
      if ((*v7 & 1) != 0)
      {
        v14 = (google::protobuf::UnknownFieldSet *)((*v7 & 0xFFFFFFFFFFFFFFFELL) + 8);
      }
      else
      {
        v14 = (google::protobuf::UnknownFieldSet *)google::protobuf::internal::InternalMetadata::mutable_unknown_fields_slow<google::protobuf::UnknownFieldSet>((uint64_t *)(a1 + 8));
        v9 = v43;
      }
      v44 = v14;
      result = google::protobuf::internal::FieldParser<google::protobuf::internal::UnknownFieldParserHelper>(v10, &v44, (uint64_t *)v9, (int32x2_t *)this);
      goto LABEL_52;
    }
    if (v10 != 18)
      goto LABEL_12;
    result = (google::protobuf::internal *)((char *)v9 - 1);
    while (1)
    {
      v19 = (google::protobuf::internal *)((char *)result + 1);
      v43 = v19;
      v20 = *(int **)(a1 + 40);
      if (!v20)
        break;
      v21 = *(_DWORD *)(a1 + 32);
      v22 = *v20;
      if (v21 >= *v20)
      {
        if (v22 == *(_DWORD *)(a1 + 36))
        {
LABEL_33:
          if (v21 <= v22)
          {
            google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 24), v22 - v21 + 1);
            v20 = *(int **)(a1 + 40);
          }
          v22 = *v20;
        }
        *v20 = v22 + 1;
        v23 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::MethodDescriptorProto>(*(google::protobuf::internal::ArenaImpl **)(a1 + 24));
        v24 = *(_QWORD *)(a1 + 40);
        v25 = *(int *)(a1 + 32);
        *(_DWORD *)(a1 + 32) = v25 + 1;
        *(_QWORD *)(v24 + 8 * v25 + 8) = v23;
        v19 = v43;
        goto LABEL_37;
      }
      *(_DWORD *)(a1 + 32) = v21 + 1;
      v23 = *(google::protobuf::MethodDescriptorProto **)&v20[2 * v21 + 2];
LABEL_37:
      v26 = (const char *)*(unsigned __int8 *)v19;
      if (*(char *)v19 < 0)
      {
        result = (google::protobuf::internal *)google::protobuf::internal::ReadSizeFallback(v19, v26);
        if (!result)
          return result;
        v27 = result;
      }
      else
      {
        v27 = (google::protobuf::internal *)((char *)v19 + 1);
      }
      v28 = *((_QWORD *)this + 1);
      v29 = (_DWORD)v26 + (_DWORD)v27 - v28;
      *(_QWORD *)this = v28 + (v29 & (v29 >> 31));
      v30 = *((_DWORD *)this + 7);
      *((_DWORD *)this + 7) = v29;
      LODWORD(v28) = *((_DWORD *)this + 22);
      v31 = __OFSUB__((_DWORD)v28, 1);
      LODWORD(v28) = v28 - 1;
      *((_DWORD *)this + 22) = v28;
      if ((int)v28 < 0 != v31)
        return 0;
      result = google::protobuf::MethodDescriptorProto::_InternalParse((uint64_t)v23, v27, this);
      if (!result)
        return result;
      ++*((_DWORD *)this + 22);
      if (*((_DWORD *)this + 20))
        return 0;
      v32 = *((_DWORD *)this + 7) + v30 - v29;
      *((_DWORD *)this + 7) = v32;
      v33 = *((_QWORD *)this + 1) + (v32 & (v32 >> 31));
      *(_QWORD *)this = v33;
      v43 = result;
      if (v33 <= (unint64_t)result || *(_BYTE *)result != 18)
        goto LABEL_64;
    }
    v21 = *(_DWORD *)(a1 + 32);
    v22 = *(_DWORD *)(a1 + 36);
    goto LABEL_33;
  }
  return result;
}

const google::protobuf::UnknownFieldSet *google::protobuf::ServiceDescriptorProto::_InternalSerialize(google::protobuf::ServiceDescriptorProto *this, unsigned __int8 *a2, google::protobuf::io::EpsCopyOutputStream *a3)
{
  unsigned __int8 *v4;
  int v6;
  int v7;
  int i;
  google::protobuf::MethodDescriptorProto *v9;
  unsigned int v10;
  unsigned __int8 *v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  google::protobuf::ServiceOptions *v15;
  unsigned int v16;
  unsigned __int8 *v17;
  unsigned int v18;
  unsigned int v19;
  unsigned int v20;
  uint64_t v21;

  v4 = a2;
  v6 = *((_DWORD *)this + 4);
  if ((v6 & 1) != 0)
    v4 = google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 1, *((_QWORD *)this + 6) & 0xFFFFFFFFFFFFFFFELL, a2);
  v7 = *((_DWORD *)this + 8);
  if (v7)
  {
    for (i = 0; i != v7; ++i)
    {
      if (*(_QWORD *)a3 <= (unint64_t)v4)
        v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
      v9 = *(google::protobuf::MethodDescriptorProto **)(*((_QWORD *)this + 5) + 8 * i + 8);
      *v4 = 18;
      v10 = *((_DWORD *)v9 + 5);
      if (v10 > 0x7F)
      {
        v4[1] = v10 | 0x80;
        v12 = v10 >> 7;
        if (v10 >> 14)
        {
          v11 = v4 + 3;
          do
          {
            *(v11 - 1) = v12 | 0x80;
            v13 = v12 >> 7;
            ++v11;
            v14 = v12 >> 14;
            v12 >>= 7;
          }
          while (v14);
          *(v11 - 1) = v13;
        }
        else
        {
          v4[2] = v12;
          v11 = v4 + 3;
        }
      }
      else
      {
        v4[1] = v10;
        v11 = v4 + 2;
      }
      v4 = (unsigned __int8 *)google::protobuf::MethodDescriptorProto::_InternalSerialize(v9, v11, a3);
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(_QWORD *)a3 <= (unint64_t)v4)
      v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
    v15 = (google::protobuf::ServiceOptions *)*((_QWORD *)this + 7);
    *v4 = 26;
    v16 = *((_DWORD *)v15 + 11);
    if (v16 > 0x7F)
    {
      v4[1] = v16 | 0x80;
      v18 = v16 >> 7;
      if (v16 >> 14)
      {
        v17 = v4 + 3;
        do
        {
          *(v17 - 1) = v18 | 0x80;
          v19 = v18 >> 7;
          ++v17;
          v20 = v18 >> 14;
          v18 >>= 7;
        }
        while (v20);
        *(v17 - 1) = v19;
      }
      else
      {
        v4[2] = v18;
        v17 = v4 + 3;
      }
    }
    else
    {
      v4[1] = v16;
      v17 = v4 + 2;
    }
    v4 = (unsigned __int8 *)google::protobuf::ServiceOptions::_InternalSerialize(v15, v17, a3);
  }
  v21 = *((_QWORD *)this + 1);
  if ((v21 & 1) != 0)
    return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v21 & 0xFFFFFFFFFFFFFFFELL) + 8), (const google::protobuf::UnknownFieldSet *)v4, a3, (google::protobuf::io::EpsCopyOutputStream *)v4);
  else
    return (const google::protobuf::UnknownFieldSet *)v4;
}

const InternalMetadata *google::protobuf::ServiceDescriptorProto::ByteSizeLong(google::protobuf::ServiceDescriptorProto *this, uint64_t a2, uint64_t a3, CachedSize *a4)
{
  const InternalMetadata *v5;
  uint64_t v6;
  google::protobuf::MethodDescriptorProto **v7;
  uint64_t v8;
  google::protobuf::MethodDescriptorProto *v9;
  const InternalMetadata *v10;
  int v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  const InternalMetadata *v15;

  v5 = (const InternalMetadata *)*((int *)this + 8);
  v6 = *((_QWORD *)this + 5);
  if (v6)
    v7 = (google::protobuf::MethodDescriptorProto **)(v6 + 8);
  else
    v7 = 0;
  if ((_DWORD)v5)
  {
    v8 = 8 * (_QWORD)v5;
    do
    {
      v9 = *v7++;
      v10 = google::protobuf::MethodDescriptorProto::ByteSizeLong(v9, a2, a3, a4);
      v5 = (const InternalMetadata *)((char *)v5 + (_QWORD)v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6));
      v8 -= 8;
    }
    while (v8);
  }
  else
  {
    v5 = 0;
  }
  v11 = *((_DWORD *)this + 4);
  if ((v11 & 3) != 0)
  {
    if ((v11 & 1) != 0)
    {
      v12 = *((_QWORD *)this + 6) & 0xFFFFFFFFFFFFFFFELL;
      v13 = *(unsigned __int8 *)(v12 + 23);
      v14 = *(_QWORD *)(v12 + 8);
      if ((v13 & 0x80u) == 0)
        v14 = v13;
      v5 = (const InternalMetadata *)((char *)v5 + v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1);
    }
    if ((v11 & 2) != 0)
    {
      v15 = google::protobuf::ServiceOptions::ByteSizeLong(*((google::protobuf::ServiceOptions **)this + 7));
      v5 = (const InternalMetadata *)((char *)&v15->var0
                                    + (_QWORD)v5
                                    + ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6)
                                    + 1);
    }
  }
  if ((*((_BYTE *)this + 8) & 1) != 0)
    return (const InternalMetadata *)google::protobuf::internal::ComputeUnknownFieldsSize((google::protobuf::ServiceDescriptorProto *)((char *)this + 8), v5, (_DWORD *)this + 5, a4);
  *((_DWORD *)this + 5) = (_DWORD)v5;
  return v5;
}

void google::protobuf::ServiceDescriptorProto::MergeFrom(google::protobuf::ServiceDescriptorProto *this, const google::protobuf::Message *a2, google::protobuf::Message *a3)
{
  if (*(void (***)(google::protobuf::ServiceDescriptorProto *__hidden))a2 == &off_1E1BF8340)
    google::protobuf::ServiceDescriptorProto::MergeFrom(this, a2);
  else
    google::protobuf::internal::ReflectionOps::Merge(a2, this, a3);
}

void google::protobuf::ServiceDescriptorProto::MergeFrom(google::protobuf::ServiceDescriptorProto *this, const google::protobuf::ServiceDescriptorProto *a2)
{
  char *v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  google::protobuf::MethodDescriptorProto **v11;
  google::protobuf::MethodDescriptorProto **v12;
  google::protobuf::MethodDescriptorProto *v13;
  google::protobuf::MethodDescriptorProto *v14;
  google::protobuf::MethodDescriptorProto *v15;
  google::protobuf::internal::ArenaImpl *v16;
  int v17;
  uint64_t v18;
  google::protobuf::MethodDescriptorProto **v19;
  google::protobuf::MethodDescriptorProto **v20;
  google::protobuf::MethodDescriptorProto *v21;
  google::protobuf::MethodDescriptorProto *v22;
  int v23;
  int *v24;
  int v25;
  __int128 *v26;
  uint64_t v27;
  google::protobuf::internal::ArenaImpl *v28;
  google::protobuf::EnumValueOptions *v29;
  google::protobuf::internal::ArenaImpl *v30;
  const google::protobuf::EnumValueOptions *v31;
  _QWORD *v32;
  unsigned int *v33;
  uint64_t v34;

  v4 = (char *)this + 8;
  v5 = *((_QWORD *)a2 + 1);
  if ((v5 & 1) != 0)
    google::protobuf::internal::InternalMetadata::DoMergeFrom<google::protobuf::UnknownFieldSet>((uint64_t *)this + 1, (const google::protobuf::UnknownFieldSet *)((v5 & 0xFFFFFFFFFFFFFFFELL) + 8));
  v32 = v4;
  v6 = *((_DWORD *)a2 + 8);
  if (v6)
  {
    v34 = *((_QWORD *)a2 + 5);
    v33 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::ServiceDescriptorProto *)((char *)this + 24), v6);
    v7 = **((int **)this + 5);
    v8 = *((int *)this + 8);
    v9 = v7 - v8;
    if ((int)v7 - (int)v8 >= v6)
      v10 = v6;
    else
      v10 = v9;
    if ((int)v10 >= 1)
    {
      v11 = (google::protobuf::MethodDescriptorProto **)v33;
      v12 = (google::protobuf::MethodDescriptorProto **)(v34 + 8);
      do
      {
        v14 = *v12++;
        v13 = v14;
        v15 = *v11++;
        google::protobuf::internal::GenericTypeHandler<google::protobuf::MethodDescriptorProto>::Merge(v13, v15);
        --v10;
      }
      while (v10);
    }
    if (v9 < v6)
    {
      v16 = (google::protobuf::internal::ArenaImpl *)*((_QWORD *)this + 3);
      v17 = v8 + v6 - v7;
      v18 = 8 * v7 - 8 * v8;
      v19 = (google::protobuf::MethodDescriptorProto **)((char *)v33 + v18);
      v20 = (google::protobuf::MethodDescriptorProto **)(v18 + v34 + 8);
      do
      {
        v21 = *v20++;
        v22 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::MethodDescriptorProto>(v16);
        google::protobuf::internal::GenericTypeHandler<google::protobuf::MethodDescriptorProto>::Merge(v21, v22);
        *v19++ = v22;
        --v17;
      }
      while (v17);
    }
    v23 = *((_DWORD *)this + 8) + v6;
    *((_DWORD *)this + 8) = v23;
    v24 = (int *)*((_QWORD *)this + 5);
    if (*v24 < v23)
      *v24 = v23;
  }
  v25 = *((_DWORD *)a2 + 4);
  if ((v25 & 3) != 0)
  {
    if ((v25 & 1) != 0)
    {
      v26 = (__int128 *)(*((_QWORD *)a2 + 6) & 0xFFFFFFFFFFFFFFFELL);
      *((_DWORD *)this + 4) |= 1u;
      v27 = *((_QWORD *)this + 1);
      v28 = (google::protobuf::internal::ArenaImpl *)(v27 & 0xFFFFFFFFFFFFFFFELL);
      if ((v27 & 1) != 0)
        v28 = *(google::protobuf::internal::ArenaImpl **)v28;
      google::protobuf::internal::ArenaStringPtr::Set((std::string **)this + 6, (std::string *)&google::protobuf::internal::fixed_address_empty_string, v26, v28);
    }
    if ((v25 & 2) != 0)
    {
      *((_DWORD *)this + 4) |= 2u;
      v29 = (google::protobuf::EnumValueOptions *)*((_QWORD *)this + 7);
      if (!v29)
      {
        v30 = (google::protobuf::internal::ArenaImpl *)(*v32 & 0xFFFFFFFFFFFFFFFELL);
        if ((*v32 & 1) != 0)
          v30 = *(google::protobuf::internal::ArenaImpl **)v30;
        v29 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::ServiceOptions>(v30);
        *((_QWORD *)this + 7) = v29;
      }
      if (*((_QWORD *)a2 + 7))
        v31 = (const google::protobuf::EnumValueOptions *)*((_QWORD *)a2 + 7);
      else
        v31 = (const google::protobuf::EnumValueOptions *)&google::protobuf::_ServiceOptions_default_instance_;
      google::protobuf::EnumValueOptions::MergeFrom(v29, v31);
    }
  }
}

void google::protobuf::ServiceDescriptorProto::CopyFrom(google::protobuf::ServiceDescriptorProto *this, const google::protobuf::Message *a2)
{
  google::protobuf::Message *v4;

  if (a2 != this)
  {
    google::protobuf::ServiceDescriptorProto::Clear(this);
    google::protobuf::ServiceDescriptorProto::MergeFrom(this, a2, v4);
  }
}

uint64_t google::protobuf::ServiceDescriptorProto::IsInitialized(google::protobuf::ServiceDescriptorProto *this)
{
  uint64_t v2;
  uint64_t v3;
  char IsInitialized;
  uint64_t result;
  uint64_t v6;

  v2 = *((unsigned int *)this + 8);
  while ((int)v2 >= 1)
  {
    v3 = v2 - 1;
    IsInitialized = google::protobuf::MethodDescriptorProto::IsInitialized(*(google::protobuf::MethodDescriptorProto **)(*((_QWORD *)this + 5) + 8 * v2));
    v2 = v3;
    if ((IsInitialized & 1) == 0)
      return 0;
  }
  if ((*((_BYTE *)this + 16) & 2) == 0)
    return 1;
  v6 = *((_QWORD *)this + 7);
  result = google::protobuf::internal::ExtensionSet::IsInitialized((google::protobuf::internal::ExtensionSet *)(v6 + 16));
  if ((_DWORD)result)
  {
    result = google::protobuf::internal::AllAreInitialized<google::protobuf::UninterpretedOption>(v6 + 48);
    if ((_DWORD)result)
      return 1;
  }
  return result;
}

uint64_t google::protobuf::ServiceOptions::IsInitialized(google::protobuf::ServiceOptions *this)
{
  uint64_t result;

  result = google::protobuf::internal::ExtensionSet::IsInitialized((google::protobuf::ServiceOptions *)((char *)this + 16));
  if ((_DWORD)result)
    return google::protobuf::internal::AllAreInitialized<google::protobuf::UninterpretedOption>((uint64_t)this + 48);
  return result;
}

uint64_t google::protobuf::ServiceDescriptorProto::GetMetadata(google::protobuf::ServiceDescriptorProto *this)
{
  google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0);
  return off_1EDF46FE8[22];
}

google::protobuf::MethodDescriptorProto *google::protobuf::MethodDescriptorProto::MethodDescriptorProto(google::protobuf::MethodDescriptorProto *this, Arena *a2)
{
  *(_QWORD *)this = &off_1E1BF8290;
  *((_QWORD *)this + 1) = a2;
  *((_QWORD *)this + 2) = 0;
  if (atomic_load(scc_info_MethodDescriptorProto_google_2fprotobuf_2fdescriptor_2eproto))
    google::protobuf::internal::InitSCCImpl(scc_info_MethodDescriptorProto_google_2fprotobuf_2fdescriptor_2eproto);
  *((_QWORD *)this + 3) = &google::protobuf::internal::fixed_address_empty_string;
  *((_QWORD *)this + 4) = &google::protobuf::internal::fixed_address_empty_string;
  *((_QWORD *)this + 5) = &google::protobuf::internal::fixed_address_empty_string;
  *((_QWORD *)this + 6) = 0;
  *((_WORD *)this + 28) = 0;
  return this;
}

void google::protobuf::MethodDescriptorProto::~MethodDescriptorProto(google::protobuf::MethodDescriptorProto *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  google::protobuf::MethodOptions *v5;

  v2 = *((_QWORD *)this + 3);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v2 + 23) < 0)
      operator delete(*(void **)v2);
    MEMORY[0x18D76437C](v2, 0x1012C40EC159624);
  }
  v3 = *((_QWORD *)this + 4);
  if ((uint64_t *)v3 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v3 + 23) < 0)
      operator delete(*(void **)v3);
    MEMORY[0x18D76437C](v3, 0x1012C40EC159624);
  }
  v4 = *((_QWORD *)this + 5);
  if ((uint64_t *)v4 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v4 + 23) < 0)
      operator delete(*(void **)v4);
    MEMORY[0x18D76437C](v4, 0x1012C40EC159624);
  }
  if (this != (google::protobuf::MethodDescriptorProto *)&google::protobuf::_MethodDescriptorProto_default_instance_)
  {
    v5 = (google::protobuf::MethodOptions *)*((_QWORD *)this + 6);
    if (v5)
    {
      google::protobuf::MethodOptions::~MethodOptions(v5);
      MEMORY[0x18D76437C]();
    }
  }
  google::protobuf::internal::InternalMetadata::Delete<google::protobuf::UnknownFieldSet>((uint64_t *)this + 1);
}

{
  google::protobuf::MethodDescriptorProto::~MethodDescriptorProto(this);
  JUMPOUT(0x18D76437CLL);
}

uint64_t google::protobuf::MethodDescriptorProto::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 20) = a2;
  return this;
}

google::protobuf::UnknownFieldSet *google::protobuf::MethodDescriptorProto::Clear(google::protobuf::UnknownFieldSet *this)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  char v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v1 = (uint64_t)this;
  v2 = *((_DWORD *)this + 4);
  if ((v2 & 0xF) == 0)
    goto LABEL_7;
  if ((v2 & 1) == 0)
  {
    if ((v2 & 2) == 0)
      goto LABEL_4;
LABEL_13:
    v6 = *((_QWORD *)this + 4) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v6 + 23) < 0)
    {
      **(_BYTE **)v6 = 0;
      *(_QWORD *)(v6 + 8) = 0;
      if ((v2 & 4) != 0)
        goto LABEL_17;
    }
    else
    {
      *(_BYTE *)v6 = 0;
      *(_BYTE *)(v6 + 23) = 0;
      if ((v2 & 4) != 0)
        goto LABEL_17;
    }
LABEL_5:
    if ((v2 & 8) == 0)
      goto LABEL_7;
    goto LABEL_6;
  }
  v5 = *((_QWORD *)this + 3) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v5 + 23) < 0)
  {
    **(_BYTE **)v5 = 0;
    *(_QWORD *)(v5 + 8) = 0;
    if ((v2 & 2) != 0)
      goto LABEL_13;
  }
  else
  {
    *(_BYTE *)v5 = 0;
    *(_BYTE *)(v5 + 23) = 0;
    if ((v2 & 2) != 0)
      goto LABEL_13;
  }
LABEL_4:
  if ((v2 & 4) == 0)
    goto LABEL_5;
LABEL_17:
  v7 = *((_QWORD *)this + 5) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v7 + 23) & 0x80000000) == 0)
  {
    *(_BYTE *)v7 = 0;
    *(_BYTE *)(v7 + 23) = 0;
    if ((v2 & 8) == 0)
      goto LABEL_7;
LABEL_6:
    this = google::protobuf::MethodOptions::Clear(*((uint64_t ***)this + 6));
    goto LABEL_7;
  }
  **(_BYTE **)v7 = 0;
  *(_QWORD *)(v7 + 8) = 0;
  if ((v2 & 8) != 0)
    goto LABEL_6;
LABEL_7:
  v4 = *(_BYTE *)(v1 + 8);
  v3 = v1 + 8;
  *(_WORD *)(v3 + 48) = 0;
  *(_DWORD *)(v3 + 8) = 0;
  if ((v4 & 1) != 0)
    return google::protobuf::internal::InternalMetadata::DoClear<google::protobuf::UnknownFieldSet>((uint64_t *)v3);
  return this;
}

google::protobuf::UnknownFieldSet *google::protobuf::MethodOptions::Clear(uint64_t **this)
{
  google::protobuf::UnknownFieldSet *result;
  uint64_t v3;
  google::protobuf::UnknownFieldSet **v4;
  google::protobuf::UnknownFieldSet *v5;
  char *v6;
  char v7;

  result = (google::protobuf::UnknownFieldSet *)google::protobuf::internal::ExtensionSet::Clear(this + 2);
  v3 = *((unsigned int *)this + 14);
  if ((int)v3 >= 1)
  {
    v4 = (google::protobuf::UnknownFieldSet **)(this[8] + 1);
    do
    {
      v5 = *v4++;
      result = google::protobuf::UninterpretedOption::Clear(v5);
      --v3;
    }
    while (v3);
    *((_DWORD *)this + 14) = 0;
  }
  if (((_BYTE)this[5] & 3) != 0)
    this[9] = 0;
  v7 = *((_BYTE *)this + 8);
  v6 = (char *)(this + 1);
  *((_DWORD *)v6 + 8) = 0;
  if ((v7 & 1) != 0)
    return google::protobuf::internal::InternalMetadata::DoClear<google::protobuf::UnknownFieldSet>((uint64_t *)v6);
  return result;
}

google::protobuf::internal *google::protobuf::MethodDescriptorProto::_InternalParse(uint64_t a1, google::protobuf::internal *a2, google::protobuf::internal::EpsCopyInputStream *this)
{
  int v5;
  google::protobuf::internal *v6;
  std::string **v8;
  std::string **v9;
  std::string **v10;
  unsigned int v11;
  uint64_t v12;
  google::protobuf::internal::ArenaImpl *v13;
  std::string *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  google::protobuf::internal *v18;
  google::protobuf::MethodOptions *v19;
  google::protobuf::internal::ArenaImpl *v20;
  const char *v21;
  google::protobuf::internal *v22;
  google::protobuf::internal *v23;
  uint64_t v24;
  int v25;
  google::protobuf::internal *v26;
  uint64_t v27;
  int v28;
  BOOL v29;
  google::protobuf::UnknownFieldSet *v30;
  uint64_t v31;
  char *SizeFallback;
  uint64_t v33;
  int v34;
  int v35;
  BOOL v36;
  google::protobuf::internal *v37;
  int v38;
  uint64_t i;
  uint64_t j;
  uint64_t *v41;
  google::protobuf::internal *v42;
  google::protobuf::UnknownFieldSet *v43;

  v42 = a2;
  v5 = 0;
  if ((google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(this, (const char **)&v42, *((_DWORD *)this + 23)) & 1) != 0)
  {
LABEL_2:
    v6 = v42;
    goto LABEL_3;
  }
  v41 = (uint64_t *)(a1 + 8);
  v8 = (std::string **)(a1 + 40);
  v9 = (std::string **)(a1 + 32);
  v10 = (std::string **)(a1 + 24);
  while (2)
  {
    v6 = (google::protobuf::internal *)((char *)v42 + 1);
    v11 = *(unsigned __int8 *)v42;
    if (*(char *)v42 < 0)
    {
      v11 = v11 + (*(unsigned __int8 *)v6 << 7) - 128;
      if (*(char *)v6 < 0)
      {
        v6 = (google::protobuf::internal *)((char *)v42 + 3);
        v31 = -21;
        while (1)
        {
          v11 += (*((unsigned __int8 *)v6 - 1) - 1) << (v31 + 35);
          if ((*((char *)v6 - 1) & 0x80000000) == 0)
            break;
          v6 = (google::protobuf::internal *)((char *)v6 + 1);
          v31 += 7;
          if (!v31)
            goto LABEL_72;
        }
      }
      else
      {
        v6 = (google::protobuf::internal *)((char *)v42 + 2);
      }
    }
    v42 = v6;
    switch(v11 >> 3)
    {
      case 1u:
        if (v11 != 10)
          goto LABEL_43;
        *(_DWORD *)(a1 + 16) |= 1u;
        v12 = *(_QWORD *)(a1 + 8);
        v13 = (google::protobuf::internal::ArenaImpl *)(v12 & 0xFFFFFFFFFFFFFFFELL);
        if ((v12 & 1) != 0)
          v13 = *(google::protobuf::internal::ArenaImpl **)v13;
        v14 = *v10;
        if (*v10 != (std::string *)&google::protobuf::internal::fixed_address_empty_string)
          goto LABEL_25;
        v15 = (_QWORD *)(a1 + 24);
        goto LABEL_24;
      case 2u:
        if (v11 != 18)
          goto LABEL_43;
        *(_DWORD *)(a1 + 16) |= 2u;
        v16 = *(_QWORD *)(a1 + 8);
        v13 = (google::protobuf::internal::ArenaImpl *)(v16 & 0xFFFFFFFFFFFFFFFELL);
        if ((v16 & 1) != 0)
          v13 = *(google::protobuf::internal::ArenaImpl **)v13;
        v14 = *v9;
        if (*v9 != (std::string *)&google::protobuf::internal::fixed_address_empty_string)
          goto LABEL_25;
        v15 = (_QWORD *)(a1 + 32);
        goto LABEL_24;
      case 3u:
        if (v11 != 26)
          goto LABEL_43;
        *(_DWORD *)(a1 + 16) |= 4u;
        v17 = *(_QWORD *)(a1 + 8);
        v13 = (google::protobuf::internal::ArenaImpl *)(v17 & 0xFFFFFFFFFFFFFFFELL);
        if ((v17 & 1) != 0)
          v13 = *(google::protobuf::internal::ArenaImpl **)v13;
        v14 = *v8;
        if (*v8 != (std::string *)&google::protobuf::internal::fixed_address_empty_string)
          goto LABEL_25;
        v15 = (_QWORD *)(a1 + 40);
LABEL_24:
        v14 = (std::string *)google::protobuf::internal::ArenaStringPtr::MutableSlow<>(v15, v13);
        v6 = v42;
LABEL_25:
        v18 = (google::protobuf::internal *)google::protobuf::internal::InlineGreedyStringParser(v14, (std::string::value_type *)v6, (uint64_t)this);
        goto LABEL_50;
      case 4u:
        if (v11 != 34)
          goto LABEL_43;
        *(_DWORD *)(a1 + 16) |= 8u;
        v19 = *(google::protobuf::MethodOptions **)(a1 + 48);
        if (!v19)
        {
          v20 = (google::protobuf::internal::ArenaImpl *)(*v41 & 0xFFFFFFFFFFFFFFFELL);
          if ((*v41 & 1) != 0)
            v20 = *(google::protobuf::internal::ArenaImpl **)v20;
          v19 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::MethodOptions>(v20);
          *(_QWORD *)(a1 + 48) = v19;
          v6 = v42;
        }
        v21 = (const char *)*(unsigned __int8 *)v6;
        if (*(char *)v6 < 0)
        {
          SizeFallback = google::protobuf::internal::ReadSizeFallback(v6, v21);
          if (!SizeFallback)
            goto LABEL_72;
          v22 = (google::protobuf::internal *)SizeFallback;
        }
        else
        {
          v22 = (google::protobuf::internal *)((char *)v6 + 1);
        }
        v33 = *((_QWORD *)this + 1);
        v34 = (_DWORD)v21 + (_DWORD)v22 - v33;
        *(_QWORD *)this = v33 + (v34 & (v34 >> 31));
        v35 = *((_DWORD *)this + 7);
        *((_DWORD *)this + 7) = v34;
        LODWORD(v33) = *((_DWORD *)this + 22);
        v36 = __OFSUB__((_DWORD)v33, 1);
        LODWORD(v33) = v33 - 1;
        *((_DWORD *)this + 22) = v33;
        if ((int)v33 < 0 != v36)
          goto LABEL_72;
        v37 = google::protobuf::MethodOptions::_InternalParse((uint64_t)v19, v22, (int32x2_t *)this);
        if (!v37)
          goto LABEL_72;
        ++*((_DWORD *)this + 22);
        if (*((_DWORD *)this + 20))
          goto LABEL_72;
        v38 = *((_DWORD *)this + 7) + v35 - v34;
        *((_DWORD *)this + 7) = v38;
        *(_QWORD *)this = *((_QWORD *)this + 1) + (v38 & (v38 >> 31));
        v42 = v37;
        goto LABEL_51;
      case 5u:
        if (v11 != 40)
          goto LABEL_43;
        v5 |= 0x10u;
        v23 = (google::protobuf::internal *)((char *)v6 + 1);
        v24 = *(unsigned __int8 *)v6;
        if ((*(char *)v6 & 0x80000000) == 0)
          goto LABEL_37;
        v25 = *(unsigned __int8 *)v23;
        v24 = (v24 + (v25 << 7) - 128);
        if ((v25 & 0x80) != 0)
        {
          v23 = (google::protobuf::internal *)((char *)v6 + 3);
          for (i = 14; i != 70; i += 7)
          {
            v24 += (*((unsigned __int8 *)v23 - 1) - 1) << i;
            if ((*((char *)v23 - 1) & 0x80000000) == 0)
              goto LABEL_37;
            v23 = (google::protobuf::internal *)((char *)v23 + 1);
          }
          v6 = 0;
          *(_BYTE *)(a1 + 56) = 0;
          goto LABEL_3;
        }
        v23 = (google::protobuf::internal *)((char *)v6 + 2);
LABEL_37:
        v42 = v23;
        *(_BYTE *)(a1 + 56) = v24 != 0;
        goto LABEL_51;
      case 6u:
        if (v11 != 48)
          goto LABEL_43;
        v5 |= 0x20u;
        v26 = (google::protobuf::internal *)((char *)v6 + 1);
        v27 = *(unsigned __int8 *)v6;
        if ((*(char *)v6 & 0x80000000) == 0)
          goto LABEL_42;
        v28 = *(unsigned __int8 *)v26;
        v27 = (v27 + (v28 << 7) - 128);
        if ((v28 & 0x80) == 0)
        {
          v26 = (google::protobuf::internal *)((char *)v6 + 2);
LABEL_42:
          v42 = v26;
          *(_BYTE *)(a1 + 57) = v27 != 0;
LABEL_51:
          if (google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(this, (const char **)&v42, *((_DWORD *)this + 23)))goto LABEL_2;
          continue;
        }
        v26 = (google::protobuf::internal *)((char *)v6 + 3);
        for (j = 14; j != 70; j += 7)
        {
          v27 += (*((unsigned __int8 *)v26 - 1) - 1) << j;
          if ((*((char *)v26 - 1) & 0x80000000) == 0)
            goto LABEL_42;
          v26 = (google::protobuf::internal *)((char *)v26 + 1);
        }
        v6 = 0;
        *(_BYTE *)(a1 + 57) = 0;
LABEL_3:
        *(_DWORD *)(a1 + 16) |= v5;
        return v6;
      default:
LABEL_43:
        if (v11)
          v29 = (v11 & 7) == 4;
        else
          v29 = 1;
        if (v29)
        {
          *((_DWORD *)this + 20) = v11 - 1;
          goto LABEL_3;
        }
        if ((*v41 & 1) != 0)
        {
          v30 = (google::protobuf::UnknownFieldSet *)((*v41 & 0xFFFFFFFFFFFFFFFELL) + 8);
        }
        else
        {
          v30 = (google::protobuf::UnknownFieldSet *)google::protobuf::internal::InternalMetadata::mutable_unknown_fields_slow<google::protobuf::UnknownFieldSet>(v41);
          v6 = v42;
        }
        v43 = v30;
        v18 = google::protobuf::internal::FieldParser<google::protobuf::internal::UnknownFieldParserHelper>(v11, &v43, (uint64_t *)v6, (int32x2_t *)this);
LABEL_50:
        v42 = v18;
        if (v18)
          goto LABEL_51;
LABEL_72:
        v6 = 0;
        goto LABEL_3;
    }
  }
}

const google::protobuf::UnknownFieldSet *google::protobuf::MethodDescriptorProto::_InternalSerialize(google::protobuf::MethodDescriptorProto *this, unsigned __int8 *a2, google::protobuf::io::EpsCopyOutputStream *a3)
{
  unsigned __int8 *v4;
  int v6;
  google::protobuf::MethodOptions *v7;
  unsigned int v8;
  unsigned __int8 *v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned __int8 v13;
  unsigned __int8 v14;
  uint64_t v15;

  v4 = a2;
  v6 = *((_DWORD *)this + 4);
  if ((v6 & 1) != 0)
  {
    v4 = google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 1, *((_QWORD *)this + 3) & 0xFFFFFFFFFFFFFFFELL, a2);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_10;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  v4 = google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 2, *((_QWORD *)this + 4) & 0xFFFFFFFFFFFFFFFELL, v4);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_11;
  }
LABEL_10:
  v4 = google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 3, *((_QWORD *)this + 5) & 0xFFFFFFFFFFFFFFFELL, v4);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_21;
  }
LABEL_11:
  if (*(_QWORD *)a3 <= (unint64_t)v4)
    v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
  v7 = (google::protobuf::MethodOptions *)*((_QWORD *)this + 6);
  *v4 = 34;
  v8 = *((_DWORD *)v7 + 11);
  if (v8 > 0x7F)
  {
    v4[1] = v8 | 0x80;
    v10 = v8 >> 7;
    if (v8 >> 14)
    {
      v9 = v4 + 3;
      do
      {
        *(v9 - 1) = v10 | 0x80;
        v11 = v10 >> 7;
        ++v9;
        v12 = v10 >> 14;
        v10 >>= 7;
      }
      while (v12);
      *(v9 - 1) = v11;
    }
    else
    {
      v4[2] = v10;
      v9 = v4 + 3;
    }
  }
  else
  {
    v4[1] = v8;
    v9 = v4 + 2;
  }
  v4 = (unsigned __int8 *)google::protobuf::MethodOptions::_InternalSerialize(v7, v9, a3);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_27;
    goto LABEL_24;
  }
LABEL_21:
  if (*(_QWORD *)a3 <= (unint64_t)v4)
    v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
  v13 = *((_BYTE *)this + 56);
  *v4 = 40;
  v4[1] = v13;
  v4 += 2;
  if ((v6 & 0x20) != 0)
  {
LABEL_24:
    if (*(_QWORD *)a3 <= (unint64_t)v4)
      v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
    v14 = *((_BYTE *)this + 57);
    *v4 = 48;
    v4[1] = v14;
    v4 += 2;
  }
LABEL_27:
  v15 = *((_QWORD *)this + 1);
  if ((v15 & 1) != 0)
    return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v15 & 0xFFFFFFFFFFFFFFFELL) + 8), (const google::protobuf::UnknownFieldSet *)v4, a3, (google::protobuf::io::EpsCopyOutputStream *)v4);
  else
    return (const google::protobuf::UnknownFieldSet *)v4;
}

const InternalMetadata *google::protobuf::MethodDescriptorProto::ByteSizeLong(google::protobuf::MethodDescriptorProto *this, uint64_t a2, uint64_t a3, CachedSize *a4)
{
  int v5;
  uint64_t v6;
  const InternalMetadata *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  const InternalMetadata *v14;
  uint64_t v15;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v5 = *((_DWORD *)this + 4);
  if ((v5 & 0x3F) == 0)
  {
    v7 = 0;
    goto LABEL_20;
  }
  if ((v5 & 1) == 0)
  {
    v6 = 0;
    if ((v5 & 2) == 0)
      goto LABEL_12;
    goto LABEL_9;
  }
  v8 = *((_QWORD *)this + 3) & 0xFFFFFFFFFFFFFFFELL;
  v9 = *(unsigned __int8 *)(v8 + 23);
  v10 = *(_QWORD *)(v8 + 8);
  if ((v9 & 0x80u) == 0)
    v10 = v9;
  v6 = v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v5 & 2) != 0)
  {
LABEL_9:
    v11 = *((_QWORD *)this + 4) & 0xFFFFFFFFFFFFFFFELL;
    v12 = *(unsigned __int8 *)(v11 + 23);
    v13 = *(_QWORD *)(v11 + 8);
    if ((v12 & 0x80u) == 0)
      v13 = v12;
    v6 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((v5 & 4) != 0)
  {
    v17 = *((_QWORD *)this + 5) & 0xFFFFFFFFFFFFFFFELL;
    v18 = *(unsigned __int8 *)(v17 + 23);
    v19 = *(_QWORD *)(v17 + 8);
    if ((v18 & 0x80u) == 0)
      v19 = v18;
    v6 += v19 + ((9 * (__clz(v19 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v5 & 8) == 0)
      goto LABEL_15;
    goto LABEL_14;
  }
  if ((v5 & 8) != 0)
  {
LABEL_14:
    v14 = google::protobuf::MethodOptions::ByteSizeLong(*((google::protobuf::MethodOptions **)this + 6));
    v6 += (uint64_t)&v14->var0 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_15:
  v15 = v6 + 2;
  if ((v5 & 0x10) == 0)
    v15 = v6;
  if ((v5 & 0x20) != 0)
    v7 = (const InternalMetadata *)(v15 + 2);
  else
    v7 = (const InternalMetadata *)v15;
LABEL_20:
  if ((*((_BYTE *)this + 8) & 1) != 0)
    return (const InternalMetadata *)google::protobuf::internal::ComputeUnknownFieldsSize((google::protobuf::MethodDescriptorProto *)((char *)this + 8), v7, (_DWORD *)this + 5, a4);
  *((_DWORD *)this + 5) = (_DWORD)v7;
  return v7;
}

void google::protobuf::MethodDescriptorProto::MergeFrom(google::protobuf::MethodDescriptorProto *this, const google::protobuf::Message *a2, google::protobuf::Message *a3)
{
  if (*(void (***)(google::protobuf::MethodDescriptorProto *__hidden))a2 == &off_1E1BF8290)
    google::protobuf::MethodDescriptorProto::MergeFrom(this, a2);
  else
    google::protobuf::internal::ReflectionOps::Merge(a2, this, a3);
}

void google::protobuf::MethodDescriptorProto::MergeFrom(google::protobuf::MethodDescriptorProto *this, const google::protobuf::MethodDescriptorProto *a2)
{
  _QWORD *v4;
  uint64_t v5;
  int v6;
  __int128 *v7;
  uint64_t v8;
  google::protobuf::internal::ArenaImpl *v9;
  __int128 *v10;
  uint64_t v11;
  google::protobuf::internal::ArenaImpl *v12;
  __int128 *v13;
  uint64_t v14;
  google::protobuf::internal::ArenaImpl *v15;
  google::protobuf::MethodOptions *v16;
  google::protobuf::internal::ArenaImpl *v17;
  const google::protobuf::MethodOptions *v18;

  v4 = (_QWORD *)((char *)this + 8);
  v5 = *((_QWORD *)a2 + 1);
  if ((v5 & 1) != 0)
    google::protobuf::internal::InternalMetadata::DoMergeFrom<google::protobuf::UnknownFieldSet>((uint64_t *)this + 1, (const google::protobuf::UnknownFieldSet *)((v5 & 0xFFFFFFFFFFFFFFFELL) + 8));
  v6 = *((_DWORD *)a2 + 4);
  if ((v6 & 0x3F) != 0)
  {
    if ((v6 & 1) != 0)
    {
      v7 = (__int128 *)(*((_QWORD *)a2 + 3) & 0xFFFFFFFFFFFFFFFELL);
      *((_DWORD *)this + 4) |= 1u;
      v8 = *((_QWORD *)this + 1);
      v9 = (google::protobuf::internal::ArenaImpl *)(v8 & 0xFFFFFFFFFFFFFFFELL);
      if ((v8 & 1) != 0)
        v9 = *(google::protobuf::internal::ArenaImpl **)v9;
      google::protobuf::internal::ArenaStringPtr::Set((std::string **)this + 3, (std::string *)&google::protobuf::internal::fixed_address_empty_string, v7, v9);
      if ((v6 & 2) == 0)
      {
LABEL_6:
        if ((v6 & 4) == 0)
          goto LABEL_7;
        goto LABEL_19;
      }
    }
    else if ((v6 & 2) == 0)
    {
      goto LABEL_6;
    }
    v10 = (__int128 *)(*((_QWORD *)a2 + 4) & 0xFFFFFFFFFFFFFFFELL);
    *((_DWORD *)this + 4) |= 2u;
    v11 = *((_QWORD *)this + 1);
    v12 = (google::protobuf::internal::ArenaImpl *)(v11 & 0xFFFFFFFFFFFFFFFELL);
    if ((v11 & 1) != 0)
      v12 = *(google::protobuf::internal::ArenaImpl **)v12;
    google::protobuf::internal::ArenaStringPtr::Set((std::string **)this + 4, (std::string *)&google::protobuf::internal::fixed_address_empty_string, v10, v12);
    if ((v6 & 4) == 0)
    {
LABEL_7:
      if ((v6 & 8) == 0)
        goto LABEL_8;
      goto LABEL_22;
    }
LABEL_19:
    v13 = (__int128 *)(*((_QWORD *)a2 + 5) & 0xFFFFFFFFFFFFFFFELL);
    *((_DWORD *)this + 4) |= 4u;
    v14 = *((_QWORD *)this + 1);
    v15 = (google::protobuf::internal::ArenaImpl *)(v14 & 0xFFFFFFFFFFFFFFFELL);
    if ((v14 & 1) != 0)
      v15 = *(google::protobuf::internal::ArenaImpl **)v15;
    google::protobuf::internal::ArenaStringPtr::Set((std::string **)this + 5, (std::string *)&google::protobuf::internal::fixed_address_empty_string, v13, v15);
    if ((v6 & 8) == 0)
    {
LABEL_8:
      if ((v6 & 0x10) == 0)
        goto LABEL_9;
      goto LABEL_30;
    }
LABEL_22:
    *((_DWORD *)this + 4) |= 8u;
    v16 = (google::protobuf::MethodOptions *)*((_QWORD *)this + 6);
    if (!v16)
    {
      v17 = (google::protobuf::internal::ArenaImpl *)(*v4 & 0xFFFFFFFFFFFFFFFELL);
      if ((*v4 & 1) != 0)
        v17 = *(google::protobuf::internal::ArenaImpl **)v17;
      v16 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::MethodOptions>(v17);
      *((_QWORD *)this + 6) = v16;
    }
    if (*((_QWORD *)a2 + 6))
      v18 = (const google::protobuf::MethodOptions *)*((_QWORD *)a2 + 6);
    else
      v18 = (const google::protobuf::MethodOptions *)&google::protobuf::_MethodOptions_default_instance_;
    google::protobuf::MethodOptions::MergeFrom(v16, v18);
    if ((v6 & 0x10) == 0)
    {
LABEL_9:
      if ((v6 & 0x20) == 0)
      {
LABEL_11:
        *((_DWORD *)this + 4) |= v6;
        return;
      }
LABEL_10:
      *((_BYTE *)this + 57) = *((_BYTE *)a2 + 57);
      goto LABEL_11;
    }
LABEL_30:
    *((_BYTE *)this + 56) = *((_BYTE *)a2 + 56);
    if ((v6 & 0x20) == 0)
      goto LABEL_11;
    goto LABEL_10;
  }
}

void google::protobuf::MethodOptions::MergeFrom(google::protobuf::MethodOptions *this, const google::protobuf::MethodOptions *a2)
{
  uint64_t v4;
  unsigned int v5;
  google::protobuf::UninterpretedOption **v6;
  unsigned int *v7;
  signed int v8;
  signed int *v9;
  int v10;

  google::protobuf::internal::ExtensionSet::MergeFrom((google::protobuf::MethodOptions *)((char *)this + 16), (const google::protobuf::MethodOptions *)((char *)a2 + 16));
  v4 = *((_QWORD *)a2 + 1);
  if ((v4 & 1) != 0)
    google::protobuf::internal::InternalMetadata::DoMergeFrom<google::protobuf::UnknownFieldSet>((uint64_t *)this + 1, (const google::protobuf::UnknownFieldSet *)((v4 & 0xFFFFFFFFFFFFFFFELL) + 8));
  v5 = *((_DWORD *)a2 + 14);
  if (v5)
  {
    v6 = (google::protobuf::UninterpretedOption **)(*((_QWORD *)a2 + 8) + 8);
    v7 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::MethodOptions *)((char *)this + 48), *((_DWORD *)a2 + 14));
    google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::TypeHandler>((google::protobuf::internal::ArenaImpl **)this + 6, (google::protobuf::UninterpretedOption **)v7, v6, v5, **((_DWORD **)this + 8) - *((_DWORD *)this + 14));
    v8 = *((_DWORD *)this + 14) + v5;
    *((_DWORD *)this + 14) = v8;
    v9 = (signed int *)*((_QWORD *)this + 8);
    if (*v9 < v8)
      *v9 = v8;
  }
  v10 = *((_DWORD *)a2 + 10);
  if ((v10 & 3) != 0)
  {
    if ((v10 & 1) != 0)
      *((_BYTE *)this + 72) = *((_BYTE *)a2 + 72);
    if ((v10 & 2) != 0)
      *((_DWORD *)this + 19) = *((_DWORD *)a2 + 19);
    *((_DWORD *)this + 10) |= v10;
  }
}

void google::protobuf::MethodDescriptorProto::CopyFrom(google::protobuf::MethodDescriptorProto *this, const google::protobuf::Message *a2)
{
  google::protobuf::Message *v4;

  if (a2 != this)
  {
    google::protobuf::MethodDescriptorProto::Clear(this);
    google::protobuf::MethodDescriptorProto::MergeFrom(this, a2, v4);
  }
}

uint64_t google::protobuf::MethodDescriptorProto::IsInitialized(google::protobuf::MethodDescriptorProto *this)
{
  uint64_t v1;
  uint64_t result;

  if ((*((_BYTE *)this + 16) & 8) == 0)
    return 1;
  v1 = *((_QWORD *)this + 6);
  result = google::protobuf::internal::ExtensionSet::IsInitialized((google::protobuf::internal::ExtensionSet *)(v1 + 16));
  if ((_DWORD)result)
  {
    result = google::protobuf::internal::AllAreInitialized<google::protobuf::UninterpretedOption>(v1 + 48);
    if ((_DWORD)result)
      return 1;
  }
  return result;
}

uint64_t google::protobuf::MethodOptions::IsInitialized(google::protobuf::MethodOptions *this)
{
  uint64_t result;

  result = google::protobuf::internal::ExtensionSet::IsInitialized((google::protobuf::MethodOptions *)((char *)this + 16));
  if ((_DWORD)result)
    return google::protobuf::internal::AllAreInitialized<google::protobuf::UninterpretedOption>((uint64_t)this + 48);
  return result;
}

uint64_t google::protobuf::MethodDescriptorProto::GetMetadata(google::protobuf::MethodDescriptorProto *this)
{
  google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0);
  return off_1EDF46FE8[24];
}

google::protobuf::FileOptions *google::protobuf::FileOptions::FileOptions(google::protobuf::FileOptions *this, Arena *a2)
{
  *((_QWORD *)this + 2) = a2;
  *(_QWORD *)this = &off_1E1BF7548;
  *((_QWORD *)this + 1) = a2;
  *((_DWORD *)this + 6) = 0;
  *((_QWORD *)this + 6) = a2;
  *((_QWORD *)this + 4) = 0;
  *((_QWORD *)this + 5) = 0;
  *((_QWORD *)this + 7) = 0;
  *((_QWORD *)this + 8) = 0;
  if (atomic_load(scc_info_FileOptions_google_2fprotobuf_2fdescriptor_2eproto))
    google::protobuf::internal::InitSCCImpl(scc_info_FileOptions_google_2fprotobuf_2fdescriptor_2eproto);
  *((_QWORD *)this + 9) = &google::protobuf::internal::fixed_address_empty_string;
  *((_QWORD *)this + 10) = &google::protobuf::internal::fixed_address_empty_string;
  *((_QWORD *)this + 11) = &google::protobuf::internal::fixed_address_empty_string;
  *((_QWORD *)this + 12) = &google::protobuf::internal::fixed_address_empty_string;
  *((_QWORD *)this + 13) = &google::protobuf::internal::fixed_address_empty_string;
  *((_QWORD *)this + 14) = &google::protobuf::internal::fixed_address_empty_string;
  *((_QWORD *)this + 15) = &google::protobuf::internal::fixed_address_empty_string;
  *((_QWORD *)this + 16) = &google::protobuf::internal::fixed_address_empty_string;
  *((_QWORD *)this + 17) = &google::protobuf::internal::fixed_address_empty_string;
  *((_QWORD *)this + 18) = &google::protobuf::internal::fixed_address_empty_string;
  *((_QWORD *)this + 19) = 0;
  *((_DWORD *)this + 40) = 1;
  *((_BYTE *)this + 164) = 1;
  return this;
}

void sub_1888B010C(_Unwind_Exception *a1)
{
  google::protobuf::internal::ExtensionSet *v1;
  _QWORD *v2;

  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::TypeHandler>(v2);
  google::protobuf::internal::ExtensionSet::~ExtensionSet(v1);
  _Unwind_Resume(a1);
}

void google::protobuf::FileOptions::~FileOptions(google::protobuf::FileOptions *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2 = *((_QWORD *)this + 9);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v2 + 23) < 0)
      operator delete(*(void **)v2);
    MEMORY[0x18D76437C](v2, 0x1012C40EC159624);
  }
  v3 = *((_QWORD *)this + 10);
  if ((uint64_t *)v3 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v3 + 23) < 0)
      operator delete(*(void **)v3);
    MEMORY[0x18D76437C](v3, 0x1012C40EC159624);
  }
  v4 = *((_QWORD *)this + 11);
  if ((uint64_t *)v4 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v4 + 23) < 0)
      operator delete(*(void **)v4);
    MEMORY[0x18D76437C](v4, 0x1012C40EC159624);
  }
  v5 = *((_QWORD *)this + 12);
  if ((uint64_t *)v5 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v5 + 23) < 0)
      operator delete(*(void **)v5);
    MEMORY[0x18D76437C](v5, 0x1012C40EC159624);
  }
  v6 = *((_QWORD *)this + 13);
  if ((uint64_t *)v6 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v6 + 23) < 0)
      operator delete(*(void **)v6);
    MEMORY[0x18D76437C](v6, 0x1012C40EC159624);
  }
  v7 = *((_QWORD *)this + 14);
  if ((uint64_t *)v7 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v7 + 23) < 0)
      operator delete(*(void **)v7);
    MEMORY[0x18D76437C](v7, 0x1012C40EC159624);
  }
  v8 = *((_QWORD *)this + 15);
  if ((uint64_t *)v8 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v8 + 23) < 0)
      operator delete(*(void **)v8);
    MEMORY[0x18D76437C](v8, 0x1012C40EC159624);
  }
  v9 = *((_QWORD *)this + 16);
  if ((uint64_t *)v9 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v9 + 23) < 0)
      operator delete(*(void **)v9);
    MEMORY[0x18D76437C](v9, 0x1012C40EC159624);
  }
  v10 = *((_QWORD *)this + 17);
  if ((uint64_t *)v10 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v10 + 23) < 0)
      operator delete(*(void **)v10);
    MEMORY[0x18D76437C](v10, 0x1012C40EC159624);
  }
  v11 = *((_QWORD *)this + 18);
  if ((uint64_t *)v11 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v11 + 23) < 0)
      operator delete(*(void **)v11);
    MEMORY[0x18D76437C](v11, 0x1012C40EC159624);
  }
  google::protobuf::internal::InternalMetadata::Delete<google::protobuf::UnknownFieldSet>((uint64_t *)this + 1);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::TypeHandler>((_QWORD *)this + 6);
  google::protobuf::internal::ExtensionSet::~ExtensionSet((google::protobuf::FileOptions *)((char *)this + 16));
}

{
  google::protobuf::FileOptions::~FileOptions(this);
  JUMPOUT(0x18D76437CLL);
}

uint64_t google::protobuf::FileOptions::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 44) = a2;
  return this;
}

google::protobuf::internal *google::protobuf::FileOptions::_InternalParse(uint64_t a1, google::protobuf::internal *a2, google::protobuf::internal::EpsCopyInputStream *this)
{
  int v5;
  google::protobuf::internal *v6;
  std::string **v8;
  std::string **v9;
  unsigned int v10;
  uint64_t v11;
  google::protobuf::internal::ArenaImpl *v12;
  std::string *v13;
  _QWORD *v14;
  uint64_t v15;
  google::protobuf::internal *v16;
  google::protobuf::internal *v17;
  int *v18;
  int v19;
  int v20;
  google::protobuf::UninterpretedOption *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  google::protobuf::internal *v25;
  uint64_t v26;
  int v27;
  google::protobuf::internal *v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  google::protobuf::internal *v32;
  uint64_t v33;
  int v34;
  google::protobuf::internal *v35;
  uint64_t v36;
  int v37;
  google::protobuf::internal *v38;
  uint64_t v39;
  int v40;
  google::protobuf::internal *v41;
  uint64_t v42;
  int v43;
  google::protobuf::internal *v44;
  uint64_t v45;
  int v46;
  google::protobuf::internal *v47;
  uint64_t v48;
  int v49;
  google::protobuf::internal *v50;
  uint64_t v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  google::protobuf::internal *v58;
  uint64_t v59;
  int v60;
  uint64_t v61;
  uint64_t v62;
  google::protobuf::internal *v63;
  BOOL v64;
  unint64_t v65;
  google::protobuf::UnknownFieldSet *v66;
  uint64_t v67;
  uint64_t i;
  uint64_t j;
  uint64_t k;
  uint64_t m;
  uint64_t n;
  uint64_t ii;
  uint64_t jj;
  uint64_t kk;
  uint64_t mm;
  google::protobuf::UnknownFieldSet *v77;
  uint64_t *v78;
  std::string **v79;
  std::string **v80;
  std::string **v81;
  std::string **v82;
  std::string **v83;
  std::string **v84;
  std::string **v85;
  std::string **v86;
  google::protobuf::internal *v87;
  google::protobuf::UnknownFieldSet *v88;

  v87 = a2;
  v5 = 0;
  if ((google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(this, (const char **)&v87, *((_DWORD *)this + 23)) & 1) != 0)
  {
LABEL_2:
    v6 = v87;
    goto LABEL_3;
  }
  v85 = (std::string **)(a1 + 136);
  v86 = (std::string **)(a1 + 144);
  v83 = (std::string **)(a1 + 120);
  v84 = (std::string **)(a1 + 128);
  v81 = (std::string **)(a1 + 104);
  v82 = (std::string **)(a1 + 112);
  v80 = (std::string **)(a1 + 96);
  v78 = (uint64_t *)(a1 + 8);
  v79 = (std::string **)(a1 + 88);
  v8 = (std::string **)(a1 + 80);
  v9 = (std::string **)(a1 + 72);
  while (1)
  {
    v6 = (google::protobuf::internal *)((char *)v87 + 1);
    v10 = *(unsigned __int8 *)v87;
    if (*(char *)v87 < 0)
    {
      v10 = v10 + (*(unsigned __int8 *)v6 << 7) - 128;
      if (*(char *)v6 < 0)
      {
        v6 = (google::protobuf::internal *)((char *)v87 + 3);
        v15 = -21;
        while (1)
        {
          v10 += (*((unsigned __int8 *)v6 - 1) - 1) << (v15 + 35);
          if ((*((char *)v6 - 1) & 0x80000000) == 0)
            break;
          v6 = (google::protobuf::internal *)((char *)v6 + 1);
          v15 += 7;
          if (!v15)
            goto LABEL_190;
        }
      }
      else
      {
        v6 = (google::protobuf::internal *)((char *)v87 + 2);
      }
    }
    v87 = v6;
    switch(v10 >> 3)
    {
      case 1u:
        if (v10 != 10)
          goto LABEL_135;
        *(_DWORD *)(a1 + 40) |= 1u;
        v11 = *(_QWORD *)(a1 + 8);
        v12 = (google::protobuf::internal::ArenaImpl *)(v11 & 0xFFFFFFFFFFFFFFFELL);
        if ((v11 & 1) != 0)
          v12 = *(google::protobuf::internal::ArenaImpl **)v12;
        v13 = *v9;
        if (*v9 != (std::string *)&google::protobuf::internal::fixed_address_empty_string)
          goto LABEL_131;
        v14 = (_QWORD *)(a1 + 72);
        goto LABEL_130;
      case 2u:
      case 3u:
      case 4u:
      case 5u:
      case 6u:
      case 7u:
      case 0xCu:
      case 0xDu:
      case 0xEu:
      case 0xFu:
      case 0x13u:
      case 0x15u:
      case 0x16u:
      case 0x18u:
      case 0x19u:
      case 0x1Au:
      case 0x1Cu:
      case 0x1Du:
      case 0x1Eu:
      case 0x20u:
      case 0x21u:
      case 0x22u:
      case 0x23u:
      case 0x26u:
      case 0x2Bu:
        goto LABEL_135;
      case 8u:
        if (v10 != 66)
          goto LABEL_135;
        *(_DWORD *)(a1 + 40) |= 2u;
        v24 = *(_QWORD *)(a1 + 8);
        v12 = (google::protobuf::internal::ArenaImpl *)(v24 & 0xFFFFFFFFFFFFFFFELL);
        if ((v24 & 1) != 0)
          v12 = *(google::protobuf::internal::ArenaImpl **)v12;
        v13 = *v8;
        if (*v8 != (std::string *)&google::protobuf::internal::fixed_address_empty_string)
          goto LABEL_131;
        v14 = (_QWORD *)(a1 + 80);
        goto LABEL_130;
      case 9u:
        if (v10 != 72)
          goto LABEL_135;
        v25 = (google::protobuf::internal *)((char *)v6 + 1);
        v26 = *(unsigned __int8 *)v6;
        if ((*(char *)v6 & 0x80000000) == 0)
          goto LABEL_43;
        v27 = *(unsigned __int8 *)v25;
        v26 = (v26 + (v27 << 7) - 128);
        if ((v27 & 0x80) != 0)
        {
          v25 = (google::protobuf::internal *)((char *)v6 + 3);
          v67 = 14;
          while (1)
          {
            v26 += (*((unsigned __int8 *)v25 - 1) - 1) << v67;
            if ((*((char *)v25 - 1) & 0x80000000) == 0)
              break;
            v25 = (google::protobuf::internal *)((char *)v25 + 1);
            v67 += 7;
            if (v67 == 70)
              goto LABEL_190;
          }
        }
        else
        {
          v25 = (google::protobuf::internal *)((char *)v6 + 2);
        }
LABEL_43:
        v87 = v25;
        if ((v26 - 1) > 2)
        {
          if ((*v78 & 1) != 0)
            v77 = (google::protobuf::UnknownFieldSet *)((*v78 & 0xFFFFFFFFFFFFFFFELL) + 8);
          else
            v77 = (google::protobuf::UnknownFieldSet *)google::protobuf::internal::InternalMetadata::mutable_unknown_fields_slow<google::protobuf::UnknownFieldSet>(v78);
          google::protobuf::UnknownFieldSet::AddVarint(v77, 9u, v26);
        }
        else
        {
          *(_DWORD *)(a1 + 40) |= 0x40000u;
          *(_DWORD *)(a1 + 160) = v26;
        }
        goto LABEL_133;
      case 0xAu:
        if (v10 != 80)
          goto LABEL_135;
        v5 |= 0x400u;
        v28 = (google::protobuf::internal *)((char *)v6 + 1);
        v29 = *(unsigned __int8 *)v6;
        if ((*(char *)v6 & 0x80000000) == 0)
          goto LABEL_49;
        v30 = *(unsigned __int8 *)v28;
        v29 = (v29 + (v30 << 7) - 128);
        if ((v30 & 0x80) != 0)
        {
          v28 = (google::protobuf::internal *)((char *)v6 + 3);
          for (i = 14; i != 70; i += 7)
          {
            v29 += (*((unsigned __int8 *)v28 - 1) - 1) << i;
            if ((*((char *)v28 - 1) & 0x80000000) == 0)
              goto LABEL_49;
            v28 = (google::protobuf::internal *)((char *)v28 + 1);
          }
          v6 = 0;
          *(_BYTE *)(a1 + 152) = 0;
          goto LABEL_3;
        }
        v28 = (google::protobuf::internal *)((char *)v6 + 2);
LABEL_49:
        v87 = v28;
        *(_BYTE *)(a1 + 152) = v29 != 0;
        goto LABEL_133;
      case 0xBu:
        if (v10 != 90)
          goto LABEL_135;
        *(_DWORD *)(a1 + 40) |= 4u;
        v31 = *(_QWORD *)(a1 + 8);
        v12 = (google::protobuf::internal::ArenaImpl *)(v31 & 0xFFFFFFFFFFFFFFFELL);
        if ((v31 & 1) != 0)
          v12 = *(google::protobuf::internal::ArenaImpl **)v12;
        v13 = *v79;
        if (*v79 != (std::string *)&google::protobuf::internal::fixed_address_empty_string)
          goto LABEL_131;
        v14 = (_QWORD *)(a1 + 88);
        goto LABEL_130;
      case 0x10u:
        if (v10 != 128)
          goto LABEL_135;
        v5 |= 0x2000u;
        v32 = (google::protobuf::internal *)((char *)v6 + 1);
        v33 = *(unsigned __int8 *)v6;
        if ((*(char *)v6 & 0x80000000) == 0)
          goto LABEL_59;
        v34 = *(unsigned __int8 *)v32;
        v33 = (v33 + (v34 << 7) - 128);
        if ((v34 & 0x80) != 0)
        {
          v32 = (google::protobuf::internal *)((char *)v6 + 3);
          for (j = 14; j != 70; j += 7)
          {
            v33 += (*((unsigned __int8 *)v32 - 1) - 1) << j;
            if ((*((char *)v32 - 1) & 0x80000000) == 0)
              goto LABEL_59;
            v32 = (google::protobuf::internal *)((char *)v32 + 1);
          }
          v6 = 0;
          *(_BYTE *)(a1 + 155) = 0;
          goto LABEL_3;
        }
        v32 = (google::protobuf::internal *)((char *)v6 + 2);
LABEL_59:
        v87 = v32;
        *(_BYTE *)(a1 + 155) = v33 != 0;
        goto LABEL_133;
      case 0x11u:
        if (v10 != 136)
          goto LABEL_135;
        v5 |= 0x4000u;
        v35 = (google::protobuf::internal *)((char *)v6 + 1);
        v36 = *(unsigned __int8 *)v6;
        if ((*(char *)v6 & 0x80000000) == 0)
          goto LABEL_64;
        v37 = *(unsigned __int8 *)v35;
        v36 = (v36 + (v37 << 7) - 128);
        if ((v37 & 0x80) != 0)
        {
          v35 = (google::protobuf::internal *)((char *)v6 + 3);
          for (k = 14; k != 70; k += 7)
          {
            v36 += (*((unsigned __int8 *)v35 - 1) - 1) << k;
            if ((*((char *)v35 - 1) & 0x80000000) == 0)
              goto LABEL_64;
            v35 = (google::protobuf::internal *)((char *)v35 + 1);
          }
          v6 = 0;
          *(_BYTE *)(a1 + 156) = 0;
          goto LABEL_3;
        }
        v35 = (google::protobuf::internal *)((char *)v6 + 2);
LABEL_64:
        v87 = v35;
        *(_BYTE *)(a1 + 156) = v36 != 0;
        goto LABEL_133;
      case 0x12u:
        if (v10 != 144)
          goto LABEL_135;
        v5 |= 0x8000u;
        v38 = (google::protobuf::internal *)((char *)v6 + 1);
        v39 = *(unsigned __int8 *)v6;
        if ((*(char *)v6 & 0x80000000) == 0)
          goto LABEL_69;
        v40 = *(unsigned __int8 *)v38;
        v39 = (v39 + (v40 << 7) - 128);
        if ((v40 & 0x80) != 0)
        {
          v38 = (google::protobuf::internal *)((char *)v6 + 3);
          for (m = 14; m != 70; m += 7)
          {
            v39 += (*((unsigned __int8 *)v38 - 1) - 1) << m;
            if ((*((char *)v38 - 1) & 0x80000000) == 0)
              goto LABEL_69;
            v38 = (google::protobuf::internal *)((char *)v38 + 1);
          }
          v6 = 0;
          *(_BYTE *)(a1 + 157) = 0;
          goto LABEL_3;
        }
        v38 = (google::protobuf::internal *)((char *)v6 + 2);
LABEL_69:
        v87 = v38;
        *(_BYTE *)(a1 + 157) = v39 != 0;
        goto LABEL_133;
      case 0x14u:
        if (v10 != 160)
          goto LABEL_135;
        v5 |= 0x800u;
        v41 = (google::protobuf::internal *)((char *)v6 + 1);
        v42 = *(unsigned __int8 *)v6;
        if ((*(char *)v6 & 0x80000000) == 0)
          goto LABEL_74;
        v43 = *(unsigned __int8 *)v41;
        v42 = (v42 + (v43 << 7) - 128);
        if ((v43 & 0x80) != 0)
        {
          v41 = (google::protobuf::internal *)((char *)v6 + 3);
          for (n = 14; n != 70; n += 7)
          {
            v42 += (*((unsigned __int8 *)v41 - 1) - 1) << n;
            if ((*((char *)v41 - 1) & 0x80000000) == 0)
              goto LABEL_74;
            v41 = (google::protobuf::internal *)((char *)v41 + 1);
          }
          v6 = 0;
          *(_BYTE *)(a1 + 153) = 0;
          goto LABEL_3;
        }
        v41 = (google::protobuf::internal *)((char *)v6 + 2);
LABEL_74:
        v87 = v41;
        *(_BYTE *)(a1 + 153) = v42 != 0;
        goto LABEL_133;
      case 0x17u:
        if (v10 != 184)
          goto LABEL_135;
        v5 |= 0x20000u;
        v44 = (google::protobuf::internal *)((char *)v6 + 1);
        v45 = *(unsigned __int8 *)v6;
        if ((*(char *)v6 & 0x80000000) == 0)
          goto LABEL_79;
        v46 = *(unsigned __int8 *)v44;
        v45 = (v45 + (v46 << 7) - 128);
        if ((v46 & 0x80) != 0)
        {
          v44 = (google::protobuf::internal *)((char *)v6 + 3);
          for (ii = 14; ii != 70; ii += 7)
          {
            v45 += (*((unsigned __int8 *)v44 - 1) - 1) << ii;
            if ((*((char *)v44 - 1) & 0x80000000) == 0)
              goto LABEL_79;
            v44 = (google::protobuf::internal *)((char *)v44 + 1);
          }
          v6 = 0;
          *(_BYTE *)(a1 + 159) = 0;
          goto LABEL_3;
        }
        v44 = (google::protobuf::internal *)((char *)v6 + 2);
LABEL_79:
        v87 = v44;
        *(_BYTE *)(a1 + 159) = v45 != 0;
        goto LABEL_133;
      case 0x1Bu:
        if (v10 != 216)
          goto LABEL_135;
        v5 |= 0x1000u;
        v47 = (google::protobuf::internal *)((char *)v6 + 1);
        v48 = *(unsigned __int8 *)v6;
        if ((*(char *)v6 & 0x80000000) == 0)
          goto LABEL_84;
        v49 = *(unsigned __int8 *)v47;
        v48 = (v48 + (v49 << 7) - 128);
        if ((v49 & 0x80) != 0)
        {
          v47 = (google::protobuf::internal *)((char *)v6 + 3);
          for (jj = 14; jj != 70; jj += 7)
          {
            v48 += (*((unsigned __int8 *)v47 - 1) - 1) << jj;
            if ((*((char *)v47 - 1) & 0x80000000) == 0)
              goto LABEL_84;
            v47 = (google::protobuf::internal *)((char *)v47 + 1);
          }
          v6 = 0;
          *(_BYTE *)(a1 + 154) = 0;
          goto LABEL_3;
        }
        v47 = (google::protobuf::internal *)((char *)v6 + 2);
LABEL_84:
        v87 = v47;
        *(_BYTE *)(a1 + 154) = v48 != 0;
        goto LABEL_133;
      case 0x1Fu:
        if (v10 != 248)
          goto LABEL_135;
        v5 |= 0x80000u;
        v50 = (google::protobuf::internal *)((char *)v6 + 1);
        v51 = *(unsigned __int8 *)v6;
        if ((*(char *)v6 & 0x80000000) == 0)
          goto LABEL_89;
        v52 = *(unsigned __int8 *)v50;
        v51 = (v51 + (v52 << 7) - 128);
        if ((v52 & 0x80) != 0)
        {
          v50 = (google::protobuf::internal *)((char *)v6 + 3);
          for (kk = 14; kk != 70; kk += 7)
          {
            v51 += (*((unsigned __int8 *)v50 - 1) - 1) << kk;
            if ((*((char *)v50 - 1) & 0x80000000) == 0)
              goto LABEL_89;
            v50 = (google::protobuf::internal *)((char *)v50 + 1);
          }
          v6 = 0;
          *(_BYTE *)(a1 + 164) = 0;
          goto LABEL_3;
        }
        v50 = (google::protobuf::internal *)((char *)v6 + 2);
LABEL_89:
        v87 = v50;
        *(_BYTE *)(a1 + 164) = v51 != 0;
        goto LABEL_133;
      case 0x24u:
        if (v10 != 34)
          goto LABEL_135;
        *(_DWORD *)(a1 + 40) |= 8u;
        v53 = *(_QWORD *)(a1 + 8);
        v12 = (google::protobuf::internal::ArenaImpl *)(v53 & 0xFFFFFFFFFFFFFFFELL);
        if ((v53 & 1) != 0)
          v12 = *(google::protobuf::internal::ArenaImpl **)v12;
        v13 = *v80;
        if (*v80 != (std::string *)&google::protobuf::internal::fixed_address_empty_string)
          goto LABEL_131;
        v14 = (_QWORD *)(a1 + 96);
        goto LABEL_130;
      case 0x25u:
        if (v10 != 42)
          goto LABEL_135;
        *(_DWORD *)(a1 + 40) |= 0x10u;
        v54 = *(_QWORD *)(a1 + 8);
        v12 = (google::protobuf::internal::ArenaImpl *)(v54 & 0xFFFFFFFFFFFFFFFELL);
        if ((v54 & 1) != 0)
          v12 = *(google::protobuf::internal::ArenaImpl **)v12;
        v13 = *v81;
        if (*v81 != (std::string *)&google::protobuf::internal::fixed_address_empty_string)
          goto LABEL_131;
        v14 = (_QWORD *)(a1 + 104);
        goto LABEL_130;
      case 0x27u:
        if (v10 != 58)
          goto LABEL_135;
        *(_DWORD *)(a1 + 40) |= 0x20u;
        v55 = *(_QWORD *)(a1 + 8);
        v12 = (google::protobuf::internal::ArenaImpl *)(v55 & 0xFFFFFFFFFFFFFFFELL);
        if ((v55 & 1) != 0)
          v12 = *(google::protobuf::internal::ArenaImpl **)v12;
        v13 = *v82;
        if (*v82 != (std::string *)&google::protobuf::internal::fixed_address_empty_string)
          goto LABEL_131;
        v14 = (_QWORD *)(a1 + 112);
        goto LABEL_130;
      case 0x28u:
        if (v10 != 66)
          goto LABEL_135;
        *(_DWORD *)(a1 + 40) |= 0x40u;
        v56 = *(_QWORD *)(a1 + 8);
        v12 = (google::protobuf::internal::ArenaImpl *)(v56 & 0xFFFFFFFFFFFFFFFELL);
        if ((v56 & 1) != 0)
          v12 = *(google::protobuf::internal::ArenaImpl **)v12;
        v13 = *v83;
        if (*v83 != (std::string *)&google::protobuf::internal::fixed_address_empty_string)
          goto LABEL_131;
        v14 = (_QWORD *)(a1 + 120);
        goto LABEL_130;
      case 0x29u:
        if (v10 != 74)
          goto LABEL_135;
        *(_DWORD *)(a1 + 40) |= 0x80u;
        v57 = *(_QWORD *)(a1 + 8);
        v12 = (google::protobuf::internal::ArenaImpl *)(v57 & 0xFFFFFFFFFFFFFFFELL);
        if ((v57 & 1) != 0)
          v12 = *(google::protobuf::internal::ArenaImpl **)v12;
        v13 = *v84;
        if (*v84 != (std::string *)&google::protobuf::internal::fixed_address_empty_string)
          goto LABEL_131;
        v14 = (_QWORD *)(a1 + 128);
        goto LABEL_130;
      case 0x2Au:
        if (v10 != 80)
          goto LABEL_135;
        v5 |= 0x10000u;
        v58 = (google::protobuf::internal *)((char *)v6 + 1);
        v59 = *(unsigned __int8 *)v6;
        if ((*(char *)v6 & 0x80000000) == 0)
          goto LABEL_119;
        v60 = *(unsigned __int8 *)v58;
        v59 = (v59 + (v60 << 7) - 128);
        if ((v60 & 0x80) == 0)
        {
          v58 = (google::protobuf::internal *)((char *)v6 + 2);
LABEL_119:
          v87 = v58;
          *(_BYTE *)(a1 + 158) = v59 != 0;
          goto LABEL_133;
        }
        v58 = (google::protobuf::internal *)((char *)v6 + 3);
        for (mm = 14; mm != 70; mm += 7)
        {
          v59 += (*((unsigned __int8 *)v58 - 1) - 1) << mm;
          if ((*((char *)v58 - 1) & 0x80000000) == 0)
            goto LABEL_119;
          v58 = (google::protobuf::internal *)((char *)v58 + 1);
        }
        v6 = 0;
        *(_BYTE *)(a1 + 158) = 0;
LABEL_3:
        *(_DWORD *)(a1 + 40) |= v5;
        return v6;
      case 0x2Cu:
        if (v10 != 98)
          goto LABEL_135;
        *(_DWORD *)(a1 + 40) |= 0x100u;
        v61 = *(_QWORD *)(a1 + 8);
        v12 = (google::protobuf::internal::ArenaImpl *)(v61 & 0xFFFFFFFFFFFFFFFELL);
        if ((v61 & 1) != 0)
          v12 = *(google::protobuf::internal::ArenaImpl **)v12;
        v13 = *v85;
        if (*v85 != (std::string *)&google::protobuf::internal::fixed_address_empty_string)
          goto LABEL_131;
        v14 = (_QWORD *)(a1 + 136);
        goto LABEL_130;
      case 0x2Du:
        if (v10 != 106)
          goto LABEL_135;
        *(_DWORD *)(a1 + 40) |= 0x200u;
        v62 = *(_QWORD *)(a1 + 8);
        v12 = (google::protobuf::internal::ArenaImpl *)(v62 & 0xFFFFFFFFFFFFFFFELL);
        if ((v62 & 1) != 0)
          v12 = *(google::protobuf::internal::ArenaImpl **)v12;
        v13 = *v86;
        if (*v86 != (std::string *)&google::protobuf::internal::fixed_address_empty_string)
          goto LABEL_131;
        v14 = (_QWORD *)(a1 + 144);
LABEL_130:
        v13 = (std::string *)google::protobuf::internal::ArenaStringPtr::MutableSlow<>(v14, v12);
        v6 = v87;
LABEL_131:
        v63 = (google::protobuf::internal *)google::protobuf::internal::InlineGreedyStringParser(v13, (std::string::value_type *)v6, (uint64_t)this);
        goto LABEL_132;
      default:
        if (v10 >> 3 == 999 && v10 == 58)
        {
          v16 = (google::protobuf::internal *)((char *)v6 - 2);
          while (1)
          {
            v17 = (google::protobuf::internal *)((char *)v16 + 2);
            v87 = (google::protobuf::internal *)((char *)v16 + 2);
            v18 = *(int **)(a1 + 64);
            if (!v18)
              break;
            v19 = *(_DWORD *)(a1 + 56);
            v20 = *v18;
            if (v19 >= *v18)
            {
              if (v20 == *(_DWORD *)(a1 + 60))
              {
LABEL_26:
                if (v19 <= v20)
                {
                  google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 48), v20 - v19 + 1);
                  v18 = *(int **)(a1 + 64);
                }
                v20 = *v18;
              }
              *v18 = v20 + 1;
              v21 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::UninterpretedOption>(*(google::protobuf::internal::ArenaImpl **)(a1 + 48));
              v22 = *(_QWORD *)(a1 + 64);
              v23 = *(int *)(a1 + 56);
              *(_DWORD *)(a1 + 56) = v23 + 1;
              *(_QWORD *)(v22 + 8 * v23 + 8) = v21;
              v17 = v87;
              goto LABEL_30;
            }
            *(_DWORD *)(a1 + 56) = v19 + 1;
            v21 = *(google::protobuf::UninterpretedOption **)&v18[2 * v19 + 2];
LABEL_30:
            v16 = google::protobuf::internal::ParseContext::ParseMessage<google::protobuf::UninterpretedOption>(this, (uint64_t)v21, v17);
            v87 = v16;
            if (!v16)
              goto LABEL_190;
            if (*(_QWORD *)this <= (unint64_t)v16 || *(_WORD *)v16 != 16058)
              goto LABEL_133;
          }
          v19 = *(_DWORD *)(a1 + 56);
          v20 = *(_DWORD *)(a1 + 60);
          goto LABEL_26;
        }
LABEL_135:
        if (v10)
          v64 = (v10 & 7) == 4;
        else
          v64 = 1;
        if (v64)
        {
          *((_DWORD *)this + 20) = v10 - 1;
          goto LABEL_3;
        }
        v65 = v10;
        if (v10 >> 6 < 0x7D)
        {
          if ((*v78 & 1) != 0)
          {
            v66 = (google::protobuf::UnknownFieldSet *)((*v78 & 0xFFFFFFFFFFFFFFFELL) + 8);
          }
          else
          {
            v66 = (google::protobuf::UnknownFieldSet *)google::protobuf::internal::InternalMetadata::mutable_unknown_fields_slow<google::protobuf::UnknownFieldSet>(v78);
            v6 = v87;
          }
          v88 = v66;
          v63 = google::protobuf::internal::FieldParser<google::protobuf::internal::UnknownFieldParserHelper>(v65, &v88, (uint64_t *)v6, (int32x2_t *)this);
        }
        else
        {
          v63 = (google::protobuf::internal *)google::protobuf::internal::ExtensionSet::ParseField((google::protobuf::internal::ExtensionSet *)(a1 + 16), v10, (unsigned __int8 *)v6, (uint64_t)&google::protobuf::_FileOptions_default_instance_, v78, (int32x2_t *)this);
        }
LABEL_132:
        v87 = v63;
        if (!v63)
        {
LABEL_190:
          v6 = 0;
          goto LABEL_3;
        }
LABEL_133:
        if (google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(this, (const char **)&v87, *((_DWORD *)this + 23)))goto LABEL_2;
        break;
    }
  }
}

const google::protobuf::UnknownFieldSet *google::protobuf::FileOptions::_InternalSerialize(google::protobuf::FileOptions *this, unsigned __int8 *a2, google::protobuf::io::EpsCopyOutputStream *a3)
{
  unsigned __int8 *v4;
  int v6;
  int v7;
  int i;
  google::protobuf::UninterpretedOption *v9;
  unsigned int v10;
  unsigned __int8 *v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  const google::protobuf::UnknownFieldSet *result;
  google::protobuf::io::EpsCopyOutputStream *v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unsigned __int8 v22;
  unsigned __int8 v23;
  unsigned __int8 v24;
  unsigned __int8 v25;
  unsigned __int8 v26;
  unsigned __int8 v27;
  unsigned __int8 v28;
  unsigned __int8 v29;
  unsigned __int8 v30;

  v4 = a2;
  v6 = *((_DWORD *)this + 10);
  if ((v6 & 1) != 0)
  {
    v4 = google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 1, *((_QWORD *)this + 9) & 0xFFFFFFFFFFFFFFFELL, a2);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 0x40000) == 0)
        goto LABEL_4;
LABEL_38:
      if (*(_QWORD *)a3 <= (unint64_t)v4)
        v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
      v18 = *((int *)this + 40);
      *v4 = 72;
      if (v18 > 0x7F)
      {
        v4[1] = v18 | 0x80;
        v19 = v18 >> 7;
        if (v18 >> 14)
        {
          v4 += 3;
          do
          {
            *(v4 - 1) = v19 | 0x80;
            v20 = v19 >> 7;
            ++v4;
            v21 = v19 >> 14;
            v19 >>= 7;
          }
          while (v21);
          *(v4 - 1) = v20;
          if ((v6 & 0x400) != 0)
            goto LABEL_49;
        }
        else
        {
          v4[2] = v19;
          v4 += 3;
          if ((v6 & 0x400) != 0)
            goto LABEL_49;
        }
      }
      else
      {
        v4[1] = v18;
        v4 += 2;
        if ((v6 & 0x400) != 0)
          goto LABEL_49;
      }
LABEL_5:
      if ((v6 & 4) == 0)
        goto LABEL_6;
      goto LABEL_52;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  v4 = google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 8, *((_QWORD *)this + 10) & 0xFFFFFFFFFFFFFFFELL, v4);
  if ((v6 & 0x40000) != 0)
    goto LABEL_38;
LABEL_4:
  if ((v6 & 0x400) == 0)
    goto LABEL_5;
LABEL_49:
  if (*(_QWORD *)a3 <= (unint64_t)v4)
    v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
  v22 = *((_BYTE *)this + 152);
  *v4 = 80;
  v4[1] = v22;
  v4 += 2;
  if ((v6 & 4) == 0)
  {
LABEL_6:
    if ((v6 & 0x2000) == 0)
      goto LABEL_7;
    goto LABEL_53;
  }
LABEL_52:
  v4 = google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 11, *((_QWORD *)this + 11) & 0xFFFFFFFFFFFFFFFELL, v4);
  if ((v6 & 0x2000) == 0)
  {
LABEL_7:
    if ((v6 & 0x4000) == 0)
      goto LABEL_8;
    goto LABEL_56;
  }
LABEL_53:
  if (*(_QWORD *)a3 <= (unint64_t)v4)
    v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
  v23 = *((_BYTE *)this + 155);
  *(_WORD *)v4 = 384;
  v4[2] = v23;
  v4 += 3;
  if ((v6 & 0x4000) == 0)
  {
LABEL_8:
    if ((v6 & 0x8000) == 0)
      goto LABEL_9;
    goto LABEL_59;
  }
LABEL_56:
  if (*(_QWORD *)a3 <= (unint64_t)v4)
    v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
  v24 = *((_BYTE *)this + 156);
  *(_WORD *)v4 = 392;
  v4[2] = v24;
  v4 += 3;
  if ((v6 & 0x8000) == 0)
  {
LABEL_9:
    if ((v6 & 0x800) == 0)
      goto LABEL_10;
    goto LABEL_62;
  }
LABEL_59:
  if (*(_QWORD *)a3 <= (unint64_t)v4)
    v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
  v25 = *((_BYTE *)this + 157);
  *(_WORD *)v4 = 400;
  v4[2] = v25;
  v4 += 3;
  if ((v6 & 0x800) == 0)
  {
LABEL_10:
    if ((v6 & 0x20000) == 0)
      goto LABEL_11;
    goto LABEL_65;
  }
LABEL_62:
  if (*(_QWORD *)a3 <= (unint64_t)v4)
    v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
  v26 = *((_BYTE *)this + 153);
  *(_WORD *)v4 = 416;
  v4[2] = v26;
  v4 += 3;
  if ((v6 & 0x20000) == 0)
  {
LABEL_11:
    if ((v6 & 0x1000) == 0)
      goto LABEL_12;
    goto LABEL_68;
  }
LABEL_65:
  if (*(_QWORD *)a3 <= (unint64_t)v4)
    v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
  v27 = *((_BYTE *)this + 159);
  *(_WORD *)v4 = 440;
  v4[2] = v27;
  v4 += 3;
  if ((v6 & 0x1000) == 0)
  {
LABEL_12:
    if ((v6 & 0x80000) == 0)
      goto LABEL_13;
    goto LABEL_71;
  }
LABEL_68:
  if (*(_QWORD *)a3 <= (unint64_t)v4)
    v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
  v28 = *((_BYTE *)this + 154);
  *(_WORD *)v4 = 472;
  v4[2] = v28;
  v4 += 3;
  if ((v6 & 0x80000) == 0)
  {
LABEL_13:
    if ((v6 & 8) == 0)
      goto LABEL_14;
    goto LABEL_74;
  }
LABEL_71:
  if (*(_QWORD *)a3 <= (unint64_t)v4)
    v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
  v29 = *((_BYTE *)this + 164);
  *(_WORD *)v4 = 504;
  v4[2] = v29;
  v4 += 3;
  if ((v6 & 8) == 0)
  {
LABEL_14:
    if ((v6 & 0x10) == 0)
      goto LABEL_15;
    goto LABEL_75;
  }
LABEL_74:
  v4 = google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 36, *((_QWORD *)this + 12) & 0xFFFFFFFFFFFFFFFELL, v4);
  if ((v6 & 0x10) == 0)
  {
LABEL_15:
    if ((v6 & 0x20) == 0)
      goto LABEL_16;
    goto LABEL_76;
  }
LABEL_75:
  v4 = google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 37, *((_QWORD *)this + 13) & 0xFFFFFFFFFFFFFFFELL, v4);
  if ((v6 & 0x20) == 0)
  {
LABEL_16:
    if ((v6 & 0x40) == 0)
      goto LABEL_17;
    goto LABEL_77;
  }
LABEL_76:
  v4 = google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 39, *((_QWORD *)this + 14) & 0xFFFFFFFFFFFFFFFELL, v4);
  if ((v6 & 0x40) == 0)
  {
LABEL_17:
    if ((v6 & 0x80) == 0)
      goto LABEL_18;
    goto LABEL_78;
  }
LABEL_77:
  v4 = google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 40, *((_QWORD *)this + 15) & 0xFFFFFFFFFFFFFFFELL, v4);
  if ((v6 & 0x80) == 0)
  {
LABEL_18:
    if ((v6 & 0x10000) == 0)
      goto LABEL_19;
    goto LABEL_79;
  }
LABEL_78:
  v4 = google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 41, *((_QWORD *)this + 16) & 0xFFFFFFFFFFFFFFFELL, v4);
  if ((v6 & 0x10000) == 0)
  {
LABEL_19:
    if ((v6 & 0x100) == 0)
      goto LABEL_20;
    goto LABEL_82;
  }
LABEL_79:
  if (*(_QWORD *)a3 <= (unint64_t)v4)
    v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
  v30 = *((_BYTE *)this + 158);
  *(_WORD *)v4 = 720;
  v4[2] = v30;
  v4 += 3;
  if ((v6 & 0x100) == 0)
  {
LABEL_20:
    if ((v6 & 0x200) == 0)
      goto LABEL_22;
    goto LABEL_21;
  }
LABEL_82:
  v4 = google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 44, *((_QWORD *)this + 17) & 0xFFFFFFFFFFFFFFFELL, v4);
  if ((v6 & 0x200) != 0)
LABEL_21:
    v4 = google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 45, *((_QWORD *)this + 18) & 0xFFFFFFFFFFFFFFFELL, v4);
LABEL_22:
  v7 = *((_DWORD *)this + 14);
  if (v7)
  {
    for (i = 0; i != v7; ++i)
    {
      if (*(_QWORD *)a3 <= (unint64_t)v4)
        v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
      v9 = *(google::protobuf::UninterpretedOption **)(*((_QWORD *)this + 8) + 8 * i + 8);
      *(_WORD *)v4 = 16058;
      v10 = *((_DWORD *)v9 + 5);
      if (v10 > 0x7F)
      {
        v4[2] = v10 | 0x80;
        v12 = v10 >> 7;
        if (v10 >> 14)
        {
          v11 = v4 + 4;
          do
          {
            *(v11 - 1) = v12 | 0x80;
            v13 = v12 >> 7;
            ++v11;
            v14 = v12 >> 14;
            v12 >>= 7;
          }
          while (v14);
          *(v11 - 1) = v13;
        }
        else
        {
          v4[3] = v12;
          v11 = v4 + 4;
        }
      }
      else
      {
        v4[2] = v10;
        v11 = v4 + 3;
      }
      v4 = (unsigned __int8 *)google::protobuf::UninterpretedOption::_InternalSerialize(v9, v11, a3);
    }
  }
  result = (const google::protobuf::UnknownFieldSet *)google::protobuf::internal::ExtensionSet::_InternalSerialize((google::protobuf::FileOptions *)((char *)this + 16), 1000, 0x20000000, v4, a3);
  v17 = *((_QWORD *)this + 1);
  if ((v17 & 1) != 0)
    return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v17 & 0xFFFFFFFFFFFFFFFELL) + 8), result, a3, v16);
  return result;
}

const InternalMetadata *google::protobuf::FileOptions::ByteSizeLong(google::protobuf::FileOptions *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  CachedSize *v5;
  uint64_t v6;
  const InternalMetadata *v7;
  uint64_t v8;
  google::protobuf::UninterpretedOption **v9;
  uint64_t v10;
  google::protobuf::UninterpretedOption *v11;
  const InternalMetadata *v12;
  int v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  const InternalMetadata *v23;
  const InternalMetadata *v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v2 = google::protobuf::internal::ExtensionSet::ByteSize((google::protobuf::FileOptions *)((char *)this + 16));
  v6 = *((int *)this + 14);
  v7 = (const InternalMetadata *)(v2 + 2 * v6);
  v8 = *((_QWORD *)this + 8);
  if (v8)
    v9 = (google::protobuf::UninterpretedOption **)(v8 + 8);
  else
    v9 = 0;
  if ((_DWORD)v6)
  {
    v10 = 8 * v6;
    do
    {
      v11 = *v9++;
      v12 = google::protobuf::UninterpretedOption::ByteSizeLong(v11, v3, v4, v5);
      v7 = (const InternalMetadata *)((char *)v7 + (_QWORD)v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6));
      v10 -= 8;
    }
    while (v10);
  }
  v13 = *((_DWORD *)this + 10);
  if (!(_BYTE)v13)
    goto LABEL_19;
  if ((v13 & 1) != 0)
  {
    v29 = *((_QWORD *)this + 9) & 0xFFFFFFFFFFFFFFFELL;
    v30 = *(unsigned __int8 *)(v29 + 23);
    v31 = *(_QWORD *)(v29 + 8);
    if ((v30 & 0x80u) == 0)
      v31 = v30;
    v7 = (const InternalMetadata *)((char *)v7 + v31 + ((9 * (__clz(v31 | 1) ^ 0x1F) + 73) >> 6) + 1);
    if ((v13 & 2) == 0)
    {
LABEL_10:
      if ((v13 & 4) == 0)
        goto LABEL_11;
      goto LABEL_62;
    }
  }
  else if ((v13 & 2) == 0)
  {
    goto LABEL_10;
  }
  v32 = *((_QWORD *)this + 10) & 0xFFFFFFFFFFFFFFFELL;
  v33 = *(unsigned __int8 *)(v32 + 23);
  v34 = *(_QWORD *)(v32 + 8);
  if ((v33 & 0x80u) == 0)
    v34 = v33;
  v7 = (const InternalMetadata *)((char *)v7 + v34 + ((9 * (__clz(v34 | 1) ^ 0x1F) + 73) >> 6) + 1);
  if ((v13 & 4) == 0)
  {
LABEL_11:
    if ((v13 & 8) == 0)
      goto LABEL_12;
    goto LABEL_65;
  }
LABEL_62:
  v35 = *((_QWORD *)this + 11) & 0xFFFFFFFFFFFFFFFELL;
  v36 = *(unsigned __int8 *)(v35 + 23);
  v37 = *(_QWORD *)(v35 + 8);
  if ((v36 & 0x80u) == 0)
    v37 = v36;
  v7 = (const InternalMetadata *)((char *)v7 + v37 + ((9 * (__clz(v37 | 1) ^ 0x1F) + 73) >> 6) + 1);
  if ((v13 & 8) == 0)
  {
LABEL_12:
    if ((v13 & 0x10) == 0)
      goto LABEL_13;
    goto LABEL_68;
  }
LABEL_65:
  v38 = *((_QWORD *)this + 12) & 0xFFFFFFFFFFFFFFFELL;
  v39 = *(unsigned __int8 *)(v38 + 23);
  v40 = *(_QWORD *)(v38 + 8);
  if ((v39 & 0x80u) == 0)
    v40 = v39;
  v7 = (const InternalMetadata *)((char *)v7 + v40 + ((9 * (__clz(v40 | 1) ^ 0x1F) + 73) >> 6) + 2);
  if ((v13 & 0x10) == 0)
  {
LABEL_13:
    if ((v13 & 0x20) == 0)
      goto LABEL_14;
LABEL_71:
    v44 = *((_QWORD *)this + 14) & 0xFFFFFFFFFFFFFFFELL;
    v45 = *(unsigned __int8 *)(v44 + 23);
    v46 = *(_QWORD *)(v44 + 8);
    if ((v45 & 0x80u) == 0)
      v46 = v45;
    v7 = (const InternalMetadata *)((char *)v7 + v46 + ((9 * (__clz(v46 | 1) ^ 0x1F) + 73) >> 6) + 2);
    if ((v13 & 0x40) == 0)
    {
LABEL_15:
      if ((v13 & 0x80) == 0)
        goto LABEL_19;
      goto LABEL_16;
    }
    goto LABEL_74;
  }
LABEL_68:
  v41 = *((_QWORD *)this + 13) & 0xFFFFFFFFFFFFFFFELL;
  v42 = *(unsigned __int8 *)(v41 + 23);
  v43 = *(_QWORD *)(v41 + 8);
  if ((v42 & 0x80u) == 0)
    v43 = v42;
  v7 = (const InternalMetadata *)((char *)v7 + v43 + ((9 * (__clz(v43 | 1) ^ 0x1F) + 73) >> 6) + 2);
  if ((v13 & 0x20) != 0)
    goto LABEL_71;
LABEL_14:
  if ((v13 & 0x40) == 0)
    goto LABEL_15;
LABEL_74:
  v47 = *((_QWORD *)this + 15) & 0xFFFFFFFFFFFFFFFELL;
  v48 = *(unsigned __int8 *)(v47 + 23);
  v49 = *(_QWORD *)(v47 + 8);
  if ((v48 & 0x80u) == 0)
    v49 = v48;
  v7 = (const InternalMetadata *)((char *)v7 + v49 + ((9 * (__clz(v49 | 1) ^ 0x1F) + 73) >> 6) + 2);
  if ((v13 & 0x80) != 0)
  {
LABEL_16:
    v14 = *((_QWORD *)this + 16) & 0xFFFFFFFFFFFFFFFELL;
    v15 = *(unsigned __int8 *)(v14 + 23);
    v16 = *(_QWORD *)(v14 + 8);
    if ((v15 & 0x80u) == 0)
      v16 = v15;
    v7 = (const InternalMetadata *)((char *)v7 + v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 2);
  }
LABEL_19:
  if ((v13 & 0xFF00) != 0)
  {
    if ((v13 & 0x100) != 0)
    {
      v17 = *((_QWORD *)this + 17) & 0xFFFFFFFFFFFFFFFELL;
      v18 = *(unsigned __int8 *)(v17 + 23);
      v19 = *(_QWORD *)(v17 + 8);
      if ((v18 & 0x80u) == 0)
        v19 = v18;
      v7 = (const InternalMetadata *)((char *)v7 + v19 + ((9 * (__clz(v19 | 1) ^ 0x1F) + 73) >> 6) + 2);
    }
    if ((v13 & 0x200) != 0)
    {
      v20 = *((_QWORD *)this + 18) & 0xFFFFFFFFFFFFFFFELL;
      v21 = *(unsigned __int8 *)(v20 + 23);
      v22 = *(_QWORD *)(v20 + 8);
      if ((v21 & 0x80u) == 0)
        v22 = v21;
      v7 = (const InternalMetadata *)((char *)v7 + v22 + ((9 * (__clz(v22 | 1) ^ 0x1F) + 73) >> 6) + 2);
    }
    v23 = (const InternalMetadata *)((char *)&v7->var0 + 2);
    if ((v13 & 0x400) == 0)
      v23 = v7;
    if ((v13 & 0x800) != 0)
      v23 = (const InternalMetadata *)((char *)v23 + 3);
    if ((v13 & 0x1000) != 0)
      v23 = (const InternalMetadata *)((char *)v23 + 3);
    if ((v13 & 0x2000) != 0)
      v23 = (const InternalMetadata *)((char *)v23 + 3);
    if ((v13 & 0x4000) != 0)
      v23 = (const InternalMetadata *)((char *)v23 + 3);
    if ((v13 & 0x8000) != 0)
      v7 = (const InternalMetadata *)((char *)&v23->var0 + 3);
    else
      v7 = v23;
  }
  if ((v13 & 0xF0000) != 0)
  {
    v24 = (const InternalMetadata *)((char *)&v7->var0 + 3);
    if ((v13 & 0x10000) == 0)
      v24 = v7;
    if ((v13 & 0x20000) != 0)
      v24 = (const InternalMetadata *)((char *)v24 + 3);
    if ((v13 & 0x40000) != 0)
    {
      v25 = *((_DWORD *)this + 40);
      v26 = ((9 * (__clz(v25 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if (v25 >= 0)
        v27 = v26;
      else
        v27 = 11;
      v24 = (const InternalMetadata *)((char *)v24 + v27);
    }
    if ((v13 & 0x80000) != 0)
      v7 = (const InternalMetadata *)((char *)&v24->var0 + 3);
    else
      v7 = v24;
  }
  if ((*((_BYTE *)this + 8) & 1) != 0)
    return (const InternalMetadata *)google::protobuf::internal::ComputeUnknownFieldsSize((google::protobuf::FileOptions *)((char *)this + 8), v7, (_DWORD *)this + 11, v5);
  *((_DWORD *)this + 11) = (_DWORD)v7;
  return v7;
}

void google::protobuf::FileOptions::MergeFrom(google::protobuf::FileOptions *this, const google::protobuf::Message *a2, google::protobuf::Message *a3)
{
  if (*(void (***)(google::protobuf::FileOptions *__hidden))a2 == &off_1E1BF7548)
    google::protobuf::FileOptions::MergeFrom(this, a2);
  else
    google::protobuf::internal::ReflectionOps::Merge(a2, this, a3);
}

void google::protobuf::FileOptions::CopyFrom(uint64_t **this, uint64_t **a2)
{
  google::protobuf::Message *v4;

  if (a2 != this)
  {
    google::protobuf::FileOptions::Clear(this);
    google::protobuf::FileOptions::MergeFrom((google::protobuf::FileOptions *)this, (const google::protobuf::Message *)a2, v4);
  }
}

uint64_t google::protobuf::FileOptions::GetMetadata(google::protobuf::FileOptions *this)
{
  google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0);
  return off_1EDF46FE8[26];
}

google::protobuf::MessageOptions *google::protobuf::MessageOptions::MessageOptions(google::protobuf::MessageOptions *this, Arena *a2)
{
  *((_QWORD *)this + 2) = a2;
  *(_QWORD *)this = &off_1E1BF7938;
  *((_QWORD *)this + 1) = a2;
  *((_DWORD *)this + 6) = 0;
  *((_QWORD *)this + 6) = a2;
  *((_QWORD *)this + 4) = 0;
  *((_QWORD *)this + 5) = 0;
  *((_QWORD *)this + 7) = 0;
  *((_QWORD *)this + 8) = 0;
  if (atomic_load(scc_info_MessageOptions_google_2fprotobuf_2fdescriptor_2eproto))
    google::protobuf::internal::InitSCCImpl(scc_info_MessageOptions_google_2fprotobuf_2fdescriptor_2eproto);
  *((_DWORD *)this + 18) = 0;
  return this;
}

void sub_1888B1928(_Unwind_Exception *a1)
{
  google::protobuf::internal::ExtensionSet *v1;
  _QWORD *v2;

  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::TypeHandler>(v2);
  google::protobuf::internal::ExtensionSet::~ExtensionSet(v1);
  _Unwind_Resume(a1);
}

void google::protobuf::MessageOptions::~MessageOptions(google::protobuf::MessageOptions *this)
{
  google::protobuf::internal::InternalMetadata::Delete<google::protobuf::UnknownFieldSet>((uint64_t *)this + 1);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::TypeHandler>((_QWORD *)this + 6);
  google::protobuf::internal::ExtensionSet::~ExtensionSet((google::protobuf::MessageOptions *)((char *)this + 16));
}

{
  google::protobuf::MessageOptions::~MessageOptions(this);
  JUMPOUT(0x18D76437CLL);
}

uint64_t google::protobuf::MessageOptions::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 44) = a2;
  return this;
}

google::protobuf::internal *google::protobuf::MessageOptions::_InternalParse(uint64_t a1, google::protobuf::internal *a2, google::protobuf::internal::EpsCopyInputStream *this)
{
  int v5;
  google::protobuf::internal *v6;
  _QWORD *v8;
  unsigned int v9;
  google::protobuf::internal *v10;
  uint64_t v11;
  int v12;
  google::protobuf::internal *v13;
  google::protobuf::internal *v14;
  int *v15;
  int v16;
  int v17;
  google::protobuf::UninterpretedOption *v18;
  uint64_t v19;
  uint64_t v20;
  google::protobuf::internal *v21;
  uint64_t v22;
  int v23;
  google::protobuf::internal *v24;
  uint64_t v25;
  int v26;
  google::protobuf::internal *v27;
  uint64_t v28;
  int v29;
  BOOL v30;
  unint64_t v31;
  google::protobuf::internal *v32;
  uint64_t v33;
  google::protobuf::UnknownFieldSet *v34;
  uint64_t i;
  uint64_t j;
  uint64_t k;
  uint64_t m;
  google::protobuf::internal *v39;
  google::protobuf::UnknownFieldSet *v40;

  v39 = a2;
  v5 = 0;
  if ((google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(this, (const char **)&v39, *((_DWORD *)this + 23)) & 1) != 0)
  {
LABEL_2:
    v6 = v39;
    goto LABEL_3;
  }
  v8 = (_QWORD *)(a1 + 8);
  while (1)
  {
    v6 = (google::protobuf::internal *)((char *)v39 + 1);
    v9 = *(unsigned __int8 *)v39;
    if (*(char *)v39 < 0)
    {
      v9 = v9 + (*(unsigned __int8 *)v6 << 7) - 128;
      if (*(char *)v6 < 0)
      {
        v6 = (google::protobuf::internal *)((char *)v39 + 3);
        v33 = -21;
        while (1)
        {
          v9 += (*((unsigned __int8 *)v6 - 1) - 1) << (v33 + 35);
          if ((*((char *)v6 - 1) & 0x80000000) == 0)
            break;
          v6 = (google::protobuf::internal *)((char *)v6 + 1);
          v33 += 7;
          if (!v33)
            goto LABEL_79;
        }
      }
      else
      {
        v6 = (google::protobuf::internal *)((char *)v39 + 2);
      }
    }
    v39 = v6;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8)
          goto LABEL_45;
        v5 |= 1u;
        v10 = (google::protobuf::internal *)((char *)v6 + 1);
        v11 = *(unsigned __int8 *)v6;
        if ((*(char *)v6 & 0x80000000) == 0)
          goto LABEL_13;
        v12 = *(unsigned __int8 *)v10;
        v11 = (v11 + (v12 << 7) - 128);
        if ((v12 & 0x80) == 0)
        {
          v10 = (google::protobuf::internal *)((char *)v6 + 2);
LABEL_13:
          v39 = v10;
          *(_BYTE *)(a1 + 72) = v11 != 0;
          goto LABEL_59;
        }
        v10 = (google::protobuf::internal *)((char *)v6 + 3);
        for (i = 14; i != 70; i += 7)
        {
          v11 += (*((unsigned __int8 *)v10 - 1) - 1) << i;
          if ((*((char *)v10 - 1) & 0x80000000) == 0)
            goto LABEL_13;
          v10 = (google::protobuf::internal *)((char *)v10 + 1);
        }
        v6 = 0;
        *(_BYTE *)(a1 + 72) = 0;
        goto LABEL_3;
      case 2u:
        if (v9 != 16)
          goto LABEL_45;
        v5 |= 2u;
        v21 = (google::protobuf::internal *)((char *)v6 + 1);
        v22 = *(unsigned __int8 *)v6;
        if ((*(char *)v6 & 0x80000000) == 0)
          goto LABEL_34;
        v23 = *(unsigned __int8 *)v21;
        v22 = (v22 + (v23 << 7) - 128);
        if ((v23 & 0x80) != 0)
        {
          v21 = (google::protobuf::internal *)((char *)v6 + 3);
          for (j = 14; j != 70; j += 7)
          {
            v22 += (*((unsigned __int8 *)v21 - 1) - 1) << j;
            if ((*((char *)v21 - 1) & 0x80000000) == 0)
              goto LABEL_34;
            v21 = (google::protobuf::internal *)((char *)v21 + 1);
          }
          v6 = 0;
          *(_BYTE *)(a1 + 73) = 0;
          goto LABEL_3;
        }
        v21 = (google::protobuf::internal *)((char *)v6 + 2);
LABEL_34:
        v39 = v21;
        *(_BYTE *)(a1 + 73) = v22 != 0;
        goto LABEL_59;
      case 3u:
        if (v9 != 24)
          goto LABEL_45;
        v5 |= 4u;
        v24 = (google::protobuf::internal *)((char *)v6 + 1);
        v25 = *(unsigned __int8 *)v6;
        if ((*(char *)v6 & 0x80000000) == 0)
          goto LABEL_39;
        v26 = *(unsigned __int8 *)v24;
        v25 = (v25 + (v26 << 7) - 128);
        if ((v26 & 0x80) != 0)
        {
          v24 = (google::protobuf::internal *)((char *)v6 + 3);
          for (k = 14; k != 70; k += 7)
          {
            v25 += (*((unsigned __int8 *)v24 - 1) - 1) << k;
            if ((*((char *)v24 - 1) & 0x80000000) == 0)
              goto LABEL_39;
            v24 = (google::protobuf::internal *)((char *)v24 + 1);
          }
          v6 = 0;
          *(_BYTE *)(a1 + 74) = 0;
          goto LABEL_3;
        }
        v24 = (google::protobuf::internal *)((char *)v6 + 2);
LABEL_39:
        v39 = v24;
        *(_BYTE *)(a1 + 74) = v25 != 0;
        goto LABEL_59;
      case 4u:
      case 5u:
      case 6u:
        goto LABEL_45;
      case 7u:
        if (v9 != 56)
          goto LABEL_45;
        v5 |= 8u;
        v27 = (google::protobuf::internal *)((char *)v6 + 1);
        v28 = *(unsigned __int8 *)v6;
        if ((*(char *)v6 & 0x80000000) == 0)
          goto LABEL_44;
        v29 = *(unsigned __int8 *)v27;
        v28 = (v28 + (v29 << 7) - 128);
        if ((v29 & 0x80) == 0)
        {
          v27 = (google::protobuf::internal *)((char *)v6 + 2);
LABEL_44:
          v39 = v27;
          *(_BYTE *)(a1 + 75) = v28 != 0;
          goto LABEL_59;
        }
        v27 = (google::protobuf::internal *)((char *)v6 + 3);
        for (m = 14; m != 70; m += 7)
        {
          v28 += (*((unsigned __int8 *)v27 - 1) - 1) << m;
          if ((*((char *)v27 - 1) & 0x80000000) == 0)
            goto LABEL_44;
          v27 = (google::protobuf::internal *)((char *)v27 + 1);
        }
        v6 = 0;
        *(_BYTE *)(a1 + 75) = 0;
LABEL_3:
        *(_DWORD *)(a1 + 40) |= v5;
        return v6;
      default:
        if (v9 >> 3 == 999 && v9 == 58)
        {
          v13 = (google::protobuf::internal *)((char *)v6 - 2);
          while (1)
          {
            v14 = (google::protobuf::internal *)((char *)v13 + 2);
            v39 = (google::protobuf::internal *)((char *)v13 + 2);
            v15 = *(int **)(a1 + 64);
            if (!v15)
              break;
            v16 = *(_DWORD *)(a1 + 56);
            v17 = *v15;
            if (v16 >= *v15)
            {
              if (v17 == *(_DWORD *)(a1 + 60))
              {
LABEL_22:
                if (v16 <= v17)
                {
                  google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 48), v17 - v16 + 1);
                  v15 = *(int **)(a1 + 64);
                }
                v17 = *v15;
              }
              *v15 = v17 + 1;
              v18 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::UninterpretedOption>(*(google::protobuf::internal::ArenaImpl **)(a1 + 48));
              v19 = *(_QWORD *)(a1 + 64);
              v20 = *(int *)(a1 + 56);
              *(_DWORD *)(a1 + 56) = v20 + 1;
              *(_QWORD *)(v19 + 8 * v20 + 8) = v18;
              v14 = v39;
              goto LABEL_26;
            }
            *(_DWORD *)(a1 + 56) = v16 + 1;
            v18 = *(google::protobuf::UninterpretedOption **)&v15[2 * v16 + 2];
LABEL_26:
            v13 = google::protobuf::internal::ParseContext::ParseMessage<google::protobuf::UninterpretedOption>(this, (uint64_t)v18, v14);
            v39 = v13;
            if (!v13)
              goto LABEL_79;
            if (*(_QWORD *)this <= (unint64_t)v13 || *(_WORD *)v13 != 16058)
              goto LABEL_59;
          }
          v16 = *(_DWORD *)(a1 + 56);
          v17 = *(_DWORD *)(a1 + 60);
          goto LABEL_22;
        }
LABEL_45:
        if (v9)
          v30 = (v9 & 7) == 4;
        else
          v30 = 1;
        if (v30)
        {
          *((_DWORD *)this + 20) = v9 - 1;
          goto LABEL_3;
        }
        v31 = v9;
        if (v9 >> 6 < 0x7D)
        {
          if ((*v8 & 1) != 0)
          {
            v34 = (google::protobuf::UnknownFieldSet *)((*v8 & 0xFFFFFFFFFFFFFFFELL) + 8);
          }
          else
          {
            v34 = (google::protobuf::UnknownFieldSet *)google::protobuf::internal::InternalMetadata::mutable_unknown_fields_slow<google::protobuf::UnknownFieldSet>((uint64_t *)(a1 + 8));
            v6 = v39;
          }
          v40 = v34;
          v32 = google::protobuf::internal::FieldParser<google::protobuf::internal::UnknownFieldParserHelper>(v31, &v40, (uint64_t *)v6, (int32x2_t *)this);
        }
        else
        {
          v32 = (google::protobuf::internal *)google::protobuf::internal::ExtensionSet::ParseField((google::protobuf::internal::ExtensionSet *)(a1 + 16), v9, (unsigned __int8 *)v6, (uint64_t)&google::protobuf::_MessageOptions_default_instance_, (uint64_t *)(a1 + 8), (int32x2_t *)this);
        }
        v39 = v32;
        if (!v32)
        {
LABEL_79:
          v6 = 0;
          goto LABEL_3;
        }
LABEL_59:
        if (google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(this, (const char **)&v39, *((_DWORD *)this + 23)))goto LABEL_2;
        break;
    }
  }
}

const google::protobuf::UnknownFieldSet *google::protobuf::MessageOptions::_InternalSerialize(google::protobuf::MessageOptions *this, unsigned __int8 *a2, google::protobuf::io::EpsCopyOutputStream *a3)
{
  unsigned __int8 *v4;
  int v6;
  unsigned __int8 v7;
  unsigned __int8 v8;
  unsigned __int8 v9;
  unsigned __int8 v10;
  int v11;
  int i;
  google::protobuf::UninterpretedOption *v13;
  unsigned int v14;
  unsigned __int8 *v15;
  unsigned int v16;
  unsigned int v17;
  unsigned int v18;
  const google::protobuf::UnknownFieldSet *result;
  google::protobuf::io::EpsCopyOutputStream *v20;
  uint64_t v21;

  v4 = a2;
  v6 = *((_DWORD *)this + 10);
  if ((v6 & 1) != 0)
  {
    if (*(_QWORD *)a3 <= (unint64_t)a2)
      v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
    v7 = *((_BYTE *)this + 72);
    *v4 = 8;
    v4[1] = v7;
    v4 += 2;
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_12;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  if (*(_QWORD *)a3 <= (unint64_t)v4)
    v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
  v8 = *((_BYTE *)this + 73);
  *v4 = 16;
  v4[1] = v8;
  v4 += 2;
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_18;
    goto LABEL_15;
  }
LABEL_12:
  if (*(_QWORD *)a3 <= (unint64_t)v4)
    v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
  v9 = *((_BYTE *)this + 74);
  *v4 = 24;
  v4[1] = v9;
  v4 += 2;
  if ((v6 & 8) != 0)
  {
LABEL_15:
    if (*(_QWORD *)a3 <= (unint64_t)v4)
      v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
    v10 = *((_BYTE *)this + 75);
    *v4 = 56;
    v4[1] = v10;
    v4 += 2;
  }
LABEL_18:
  v11 = *((_DWORD *)this + 14);
  if (v11)
  {
    for (i = 0; i != v11; ++i)
    {
      if (*(_QWORD *)a3 <= (unint64_t)v4)
        v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
      v13 = *(google::protobuf::UninterpretedOption **)(*((_QWORD *)this + 8) + 8 * i + 8);
      *(_WORD *)v4 = 16058;
      v14 = *((_DWORD *)v13 + 5);
      if (v14 > 0x7F)
      {
        v4[2] = v14 | 0x80;
        v16 = v14 >> 7;
        if (v14 >> 14)
        {
          v15 = v4 + 4;
          do
          {
            *(v15 - 1) = v16 | 0x80;
            v17 = v16 >> 7;
            ++v15;
            v18 = v16 >> 14;
            v16 >>= 7;
          }
          while (v18);
          *(v15 - 1) = v17;
        }
        else
        {
          v4[3] = v16;
          v15 = v4 + 4;
        }
      }
      else
      {
        v4[2] = v14;
        v15 = v4 + 3;
      }
      v4 = (unsigned __int8 *)google::protobuf::UninterpretedOption::_InternalSerialize(v13, v15, a3);
    }
  }
  result = (const google::protobuf::UnknownFieldSet *)google::protobuf::internal::ExtensionSet::_InternalSerialize((google::protobuf::MessageOptions *)((char *)this + 16), 1000, 0x20000000, v4, a3);
  v21 = *((_QWORD *)this + 1);
  if ((v21 & 1) != 0)
    return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v21 & 0xFFFFFFFFFFFFFFFELL) + 8), result, a3, v20);
  return result;
}

const InternalMetadata *google::protobuf::MessageOptions::ByteSizeLong(google::protobuf::MessageOptions *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  CachedSize *v5;
  uint64_t v6;
  const InternalMetadata *v7;
  uint64_t v8;
  google::protobuf::UninterpretedOption **v9;
  uint64_t v10;
  google::protobuf::UninterpretedOption *v11;
  const InternalMetadata *v12;
  int v13;
  const InternalMetadata *v14;

  v2 = google::protobuf::internal::ExtensionSet::ByteSize((google::protobuf::MessageOptions *)((char *)this + 16));
  v6 = *((int *)this + 14);
  v7 = (const InternalMetadata *)(v2 + 2 * v6);
  v8 = *((_QWORD *)this + 8);
  if (v8)
    v9 = (google::protobuf::UninterpretedOption **)(v8 + 8);
  else
    v9 = 0;
  if ((_DWORD)v6)
  {
    v10 = 8 * v6;
    do
    {
      v11 = *v9++;
      v12 = google::protobuf::UninterpretedOption::ByteSizeLong(v11, v3, v4, v5);
      v7 = (const InternalMetadata *)((char *)v7 + (_QWORD)v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6));
      v10 -= 8;
    }
    while (v10);
  }
  v13 = *((_DWORD *)this + 10);
  if ((v13 & 0xF) != 0)
  {
    v14 = (const InternalMetadata *)((char *)&v7->var0 + 2);
    if ((v13 & 1) == 0)
      v14 = v7;
    if ((v13 & 2) != 0)
      v14 = (const InternalMetadata *)((char *)v14 + 2);
    if ((v13 & 4) != 0)
      v14 = (const InternalMetadata *)((char *)v14 + 2);
    if ((v13 & 8) != 0)
      v7 = (const InternalMetadata *)((char *)&v14->var0 + 2);
    else
      v7 = v14;
  }
  if ((*((_BYTE *)this + 8) & 1) != 0)
    return (const InternalMetadata *)google::protobuf::internal::ComputeUnknownFieldsSize((google::protobuf::MessageOptions *)((char *)this + 8), v7, (_DWORD *)this + 11, v5);
  *((_DWORD *)this + 11) = (_DWORD)v7;
  return v7;
}

void google::protobuf::MessageOptions::MergeFrom(google::protobuf::MessageOptions *this, const google::protobuf::Message *a2, google::protobuf::Message *a3)
{
  if (*(void (***)(google::protobuf::MessageOptions *__hidden))a2 == &off_1E1BF7938)
    google::protobuf::MessageOptions::MergeFrom(this, a2);
  else
    google::protobuf::internal::ReflectionOps::Merge(a2, this, a3);
}

void google::protobuf::MessageOptions::CopyFrom(uint64_t **this, uint64_t **a2)
{
  google::protobuf::Message *v4;

  if (a2 != this)
  {
    google::protobuf::MessageOptions::Clear(this);
    google::protobuf::MessageOptions::MergeFrom((google::protobuf::MessageOptions *)this, (const google::protobuf::Message *)a2, v4);
  }
}

uint64_t google::protobuf::MessageOptions::GetMetadata(google::protobuf::MessageOptions *this)
{
  google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0);
  return off_1EDF46FE8[28];
}

google::protobuf::FieldOptions *google::protobuf::FieldOptions::FieldOptions(google::protobuf::FieldOptions *this, Arena *a2)
{
  *((_QWORD *)this + 2) = a2;
  *(_QWORD *)this = &off_1E1BF75F8;
  *((_QWORD *)this + 1) = a2;
  *((_DWORD *)this + 6) = 0;
  *((_QWORD *)this + 6) = a2;
  *((_QWORD *)this + 4) = 0;
  *((_QWORD *)this + 5) = 0;
  *((_QWORD *)this + 7) = 0;
  *((_QWORD *)this + 8) = 0;
  if (atomic_load(scc_info_FieldOptions_google_2fprotobuf_2fdescriptor_2eproto))
    google::protobuf::internal::InitSCCImpl(scc_info_FieldOptions_google_2fprotobuf_2fdescriptor_2eproto);
  *((_DWORD *)this + 20) = 0;
  *((_QWORD *)this + 9) = 0;
  return this;
}

void sub_1888B2290(_Unwind_Exception *a1)
{
  google::protobuf::internal::ExtensionSet *v1;
  _QWORD *v2;

  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::TypeHandler>(v2);
  google::protobuf::internal::ExtensionSet::~ExtensionSet(v1);
  _Unwind_Resume(a1);
}

void google::protobuf::FieldOptions::~FieldOptions(google::protobuf::FieldOptions *this)
{
  google::protobuf::internal::InternalMetadata::Delete<google::protobuf::UnknownFieldSet>((uint64_t *)this + 1);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::TypeHandler>((_QWORD *)this + 6);
  google::protobuf::internal::ExtensionSet::~ExtensionSet((google::protobuf::FieldOptions *)((char *)this + 16));
}

{
  google::protobuf::FieldOptions::~FieldOptions(this);
  JUMPOUT(0x18D76437CLL);
}

uint64_t google::protobuf::FieldOptions::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 44) = a2;
  return this;
}

google::protobuf::internal *google::protobuf::FieldOptions::_InternalParse(uint64_t a1, google::protobuf::internal *a2, google::protobuf::internal::EpsCopyInputStream *this)
{
  int v5;
  google::protobuf::internal *v6;
  _QWORD *v8;
  unsigned int v9;
  google::protobuf::internal *v10;
  uint64_t v11;
  int v12;
  google::protobuf::internal *v13;
  google::protobuf::internal *v14;
  int *v15;
  int v16;
  int v17;
  google::protobuf::UninterpretedOption *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  google::protobuf::internal *v22;
  uint64_t v23;
  int v24;
  google::protobuf::internal *v25;
  uint64_t v26;
  int v27;
  google::protobuf::internal *v28;
  uint64_t v29;
  int v30;
  google::protobuf::internal *v31;
  int v32;
  google::protobuf::internal *v33;
  uint64_t v34;
  int v35;
  BOOL v36;
  unint64_t v37;
  google::protobuf::internal *v38;
  google::protobuf::UnknownFieldSet *v39;
  uint64_t v40;
  uint64_t i;
  uint64_t j;
  uint64_t k;
  uint64_t v44;
  uint64_t m;
  google::protobuf::UnknownFieldSet *v46;
  unsigned int v47;
  uint64_t v48;
  uint64_t v49;
  google::protobuf::internal *v50;
  google::protobuf::UnknownFieldSet *v51;

  v50 = a2;
  v5 = 0;
  if ((google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(this, (const char **)&v50, *((_DWORD *)this + 23)) & 1) != 0)
  {
LABEL_2:
    v6 = v50;
    goto LABEL_3;
  }
  v8 = (_QWORD *)(a1 + 8);
  while (1)
  {
    v6 = (google::protobuf::internal *)((char *)v50 + 1);
    v9 = *(unsigned __int8 *)v50;
    if (*(char *)v50 < 0)
    {
      v9 = v9 + (*(unsigned __int8 *)v6 << 7) - 128;
      if (*(char *)v6 < 0)
      {
        v6 = (google::protobuf::internal *)((char *)v50 + 3);
        v21 = -21;
        while (1)
        {
          v9 += (*((unsigned __int8 *)v6 - 1) - 1) << (v21 + 35);
          if ((*((char *)v6 - 1) & 0x80000000) == 0)
            break;
          v6 = (google::protobuf::internal *)((char *)v6 + 1);
          v21 += 7;
          if (!v21)
            goto LABEL_108;
        }
      }
      else
      {
        v6 = (google::protobuf::internal *)((char *)v50 + 2);
      }
    }
    v50 = v6;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8)
          goto LABEL_61;
        v10 = (google::protobuf::internal *)((char *)v6 + 1);
        v11 = *(unsigned __int8 *)v6;
        if (*(char *)v6 < 0)
        {
          v12 = *(unsigned __int8 *)v10;
          v11 = (v11 + (v12 << 7) - 128);
          if ((v12 & 0x80) != 0)
          {
            v10 = (google::protobuf::internal *)((char *)v6 + 3);
            v40 = 14;
            while (1)
            {
              v11 += (*((unsigned __int8 *)v10 - 1) - 1) << v40;
              if ((*((char *)v10 - 1) & 0x80000000) == 0)
                break;
              v10 = (google::protobuf::internal *)((char *)v10 + 1);
              v40 += 7;
              if (v40 == 70)
                goto LABEL_108;
            }
          }
          else
          {
            v10 = (google::protobuf::internal *)((char *)v6 + 2);
          }
        }
        v50 = v10;
        if (v11 <= 2)
        {
          *(_DWORD *)(a1 + 40) |= 1u;
          *(_DWORD *)(a1 + 72) = v11;
          goto LABEL_71;
        }
        if ((*v8 & 1) != 0)
        {
          v46 = (google::protobuf::UnknownFieldSet *)((*v8 & 0xFFFFFFFFFFFFFFFELL) + 8);
        }
        else
        {
          v48 = v11;
          v46 = (google::protobuf::UnknownFieldSet *)google::protobuf::internal::InternalMetadata::mutable_unknown_fields_slow<google::protobuf::UnknownFieldSet>((uint64_t *)(a1 + 8));
          v11 = v48;
        }
        v47 = 1;
        goto LABEL_103;
      case 2u:
        if (v9 != 16)
          goto LABEL_61;
        v5 |= 2u;
        v22 = (google::protobuf::internal *)((char *)v6 + 1);
        v23 = *(unsigned __int8 *)v6;
        if ((*(char *)v6 & 0x80000000) == 0)
          goto LABEL_39;
        v24 = *(unsigned __int8 *)v22;
        v23 = (v23 + (v24 << 7) - 128);
        if ((v24 & 0x80) != 0)
        {
          v22 = (google::protobuf::internal *)((char *)v6 + 3);
          for (i = 14; i != 70; i += 7)
          {
            v23 += (*((unsigned __int8 *)v22 - 1) - 1) << i;
            if ((*((char *)v22 - 1) & 0x80000000) == 0)
              goto LABEL_39;
            v22 = (google::protobuf::internal *)((char *)v22 + 1);
          }
          v6 = 0;
          *(_BYTE *)(a1 + 76) = 0;
          goto LABEL_3;
        }
        v22 = (google::protobuf::internal *)((char *)v6 + 2);
LABEL_39:
        v50 = v22;
        *(_BYTE *)(a1 + 76) = v23 != 0;
        goto LABEL_71;
      case 3u:
        if (v9 != 24)
          goto LABEL_61;
        v5 |= 8u;
        v25 = (google::protobuf::internal *)((char *)v6 + 1);
        v26 = *(unsigned __int8 *)v6;
        if ((*(char *)v6 & 0x80000000) == 0)
          goto LABEL_44;
        v27 = *(unsigned __int8 *)v25;
        v26 = (v26 + (v27 << 7) - 128);
        if ((v27 & 0x80) != 0)
        {
          v25 = (google::protobuf::internal *)((char *)v6 + 3);
          for (j = 14; j != 70; j += 7)
          {
            v26 += (*((unsigned __int8 *)v25 - 1) - 1) << j;
            if ((*((char *)v25 - 1) & 0x80000000) == 0)
              goto LABEL_44;
            v25 = (google::protobuf::internal *)((char *)v25 + 1);
          }
          v6 = 0;
          *(_BYTE *)(a1 + 78) = 0;
          goto LABEL_3;
        }
        v25 = (google::protobuf::internal *)((char *)v6 + 2);
LABEL_44:
        v50 = v25;
        *(_BYTE *)(a1 + 78) = v26 != 0;
        goto LABEL_71;
      case 4u:
      case 7u:
      case 8u:
      case 9u:
        goto LABEL_61;
      case 5u:
        if (v9 != 40)
          goto LABEL_61;
        v5 |= 4u;
        v28 = (google::protobuf::internal *)((char *)v6 + 1);
        v29 = *(unsigned __int8 *)v6;
        if ((*(char *)v6 & 0x80000000) == 0)
          goto LABEL_49;
        v30 = *(unsigned __int8 *)v28;
        v29 = (v29 + (v30 << 7) - 128);
        if ((v30 & 0x80) != 0)
        {
          v28 = (google::protobuf::internal *)((char *)v6 + 3);
          for (k = 14; k != 70; k += 7)
          {
            v29 += (*((unsigned __int8 *)v28 - 1) - 1) << k;
            if ((*((char *)v28 - 1) & 0x80000000) == 0)
              goto LABEL_49;
            v28 = (google::protobuf::internal *)((char *)v28 + 1);
          }
          v6 = 0;
          *(_BYTE *)(a1 + 77) = 0;
          goto LABEL_3;
        }
        v28 = (google::protobuf::internal *)((char *)v6 + 2);
LABEL_49:
        v50 = v28;
        *(_BYTE *)(a1 + 77) = v29 != 0;
        goto LABEL_71;
      case 6u:
        if (v9 != 48)
          goto LABEL_61;
        v31 = (google::protobuf::internal *)((char *)v6 + 1);
        v11 = *(unsigned __int8 *)v6;
        if ((*(char *)v6 & 0x80000000) == 0)
          goto LABEL_54;
        v32 = *(unsigned __int8 *)v31;
        v11 = (v11 + (v32 << 7) - 128);
        if ((v32 & 0x80) != 0)
        {
          v31 = (google::protobuf::internal *)((char *)v6 + 3);
          v44 = 14;
          while (1)
          {
            v11 += (*((unsigned __int8 *)v31 - 1) - 1) << v44;
            if ((*((char *)v31 - 1) & 0x80000000) == 0)
              break;
            v31 = (google::protobuf::internal *)((char *)v31 + 1);
            v44 += 7;
            if (v44 == 70)
              goto LABEL_108;
          }
        }
        else
        {
          v31 = (google::protobuf::internal *)((char *)v6 + 2);
        }
LABEL_54:
        v50 = v31;
        if (v11 > 2)
        {
          if ((*v8 & 1) != 0)
          {
            v46 = (google::protobuf::UnknownFieldSet *)((*v8 & 0xFFFFFFFFFFFFFFFELL) + 8);
          }
          else
          {
            v49 = v11;
            v46 = (google::protobuf::UnknownFieldSet *)google::protobuf::internal::InternalMetadata::mutable_unknown_fields_slow<google::protobuf::UnknownFieldSet>((uint64_t *)(a1 + 8));
            v11 = v49;
          }
          v47 = 6;
LABEL_103:
          google::protobuf::UnknownFieldSet::AddVarint(v46, v47, v11);
        }
        else
        {
          *(_DWORD *)(a1 + 40) |= 0x20u;
          *(_DWORD *)(a1 + 80) = v11;
        }
        goto LABEL_71;
      case 0xAu:
        if (v9 != 80)
          goto LABEL_61;
        v5 |= 0x10u;
        v33 = (google::protobuf::internal *)((char *)v6 + 1);
        v34 = *(unsigned __int8 *)v6;
        if ((*(char *)v6 & 0x80000000) == 0)
          goto LABEL_60;
        v35 = *(unsigned __int8 *)v33;
        v34 = (v34 + (v35 << 7) - 128);
        if ((v35 & 0x80) == 0)
        {
          v33 = (google::protobuf::internal *)((char *)v6 + 2);
LABEL_60:
          v50 = v33;
          *(_BYTE *)(a1 + 79) = v34 != 0;
          goto LABEL_71;
        }
        v33 = (google::protobuf::internal *)((char *)v6 + 3);
        for (m = 14; m != 70; m += 7)
        {
          v34 += (*((unsigned __int8 *)v33 - 1) - 1) << m;
          if ((*((char *)v33 - 1) & 0x80000000) == 0)
            goto LABEL_60;
          v33 = (google::protobuf::internal *)((char *)v33 + 1);
        }
        v6 = 0;
        *(_BYTE *)(a1 + 79) = 0;
LABEL_3:
        *(_DWORD *)(a1 + 40) |= v5;
        return v6;
      default:
        if (v9 >> 3 == 999 && v9 == 58)
        {
          v13 = (google::protobuf::internal *)((char *)v6 - 2);
          while (1)
          {
            v14 = (google::protobuf::internal *)((char *)v13 + 2);
            v50 = (google::protobuf::internal *)((char *)v13 + 2);
            v15 = *(int **)(a1 + 64);
            if (!v15)
              break;
            v16 = *(_DWORD *)(a1 + 56);
            v17 = *v15;
            if (v16 >= *v15)
            {
              if (v17 == *(_DWORD *)(a1 + 60))
              {
LABEL_23:
                if (v16 <= v17)
                {
                  google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 48), v17 - v16 + 1);
                  v15 = *(int **)(a1 + 64);
                }
                v17 = *v15;
              }
              *v15 = v17 + 1;
              v18 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::UninterpretedOption>(*(google::protobuf::internal::ArenaImpl **)(a1 + 48));
              v19 = *(_QWORD *)(a1 + 64);
              v20 = *(int *)(a1 + 56);
              *(_DWORD *)(a1 + 56) = v20 + 1;
              *(_QWORD *)(v19 + 8 * v20 + 8) = v18;
              v14 = v50;
              goto LABEL_27;
            }
            *(_DWORD *)(a1 + 56) = v16 + 1;
            v18 = *(google::protobuf::UninterpretedOption **)&v15[2 * v16 + 2];
LABEL_27:
            v13 = google::protobuf::internal::ParseContext::ParseMessage<google::protobuf::UninterpretedOption>(this, (uint64_t)v18, v14);
            v50 = v13;
            if (!v13)
              goto LABEL_108;
            if (*(_QWORD *)this <= (unint64_t)v13 || *(_WORD *)v13 != 16058)
              goto LABEL_71;
          }
          v16 = *(_DWORD *)(a1 + 56);
          v17 = *(_DWORD *)(a1 + 60);
          goto LABEL_23;
        }
LABEL_61:
        if (v9)
          v36 = (v9 & 7) == 4;
        else
          v36 = 1;
        if (v36)
        {
          *((_DWORD *)this + 20) = v9 - 1;
          goto LABEL_3;
        }
        v37 = v9;
        if (v9 >> 6 < 0x7D)
        {
          if ((*v8 & 1) != 0)
          {
            v39 = (google::protobuf::UnknownFieldSet *)((*v8 & 0xFFFFFFFFFFFFFFFELL) + 8);
          }
          else
          {
            v39 = (google::protobuf::UnknownFieldSet *)google::protobuf::internal::InternalMetadata::mutable_unknown_fields_slow<google::protobuf::UnknownFieldSet>((uint64_t *)(a1 + 8));
            v6 = v50;
          }
          v51 = v39;
          v38 = google::protobuf::internal::FieldParser<google::protobuf::internal::UnknownFieldParserHelper>(v37, &v51, (uint64_t *)v6, (int32x2_t *)this);
        }
        else
        {
          v38 = (google::protobuf::internal *)google::protobuf::internal::ExtensionSet::ParseField((google::protobuf::internal::ExtensionSet *)(a1 + 16), v9, (unsigned __int8 *)v6, (uint64_t)&google::protobuf::_FieldOptions_default_instance_, (uint64_t *)(a1 + 8), (int32x2_t *)this);
        }
        v50 = v38;
        if (!v38)
        {
LABEL_108:
          v6 = 0;
          goto LABEL_3;
        }
LABEL_71:
        if (google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(this, (const char **)&v50, *((_DWORD *)this + 23)))goto LABEL_2;
        break;
    }
  }
}

const google::protobuf::UnknownFieldSet *google::protobuf::FieldOptions::_InternalSerialize(google::protobuf::FieldOptions *this, unsigned __int8 *a2, google::protobuf::io::EpsCopyOutputStream *a3)
{
  unsigned __int8 *v4;
  int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unsigned __int8 v11;
  unsigned __int8 v12;
  unsigned __int8 v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unsigned __int8 v18;
  int v19;
  int i;
  google::protobuf::UninterpretedOption *v21;
  unsigned int v22;
  unsigned __int8 *v23;
  unsigned int v24;
  unsigned int v25;
  unsigned int v26;
  const google::protobuf::UnknownFieldSet *result;
  google::protobuf::io::EpsCopyOutputStream *v28;
  uint64_t v29;

  v4 = a2;
  v6 = *((_DWORD *)this + 10);
  if ((v6 & 1) != 0)
  {
    if (*(_QWORD *)a3 <= (unint64_t)a2)
      v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
    v7 = *((int *)this + 18);
    *v4 = 8;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      v8 = v7 >> 7;
      if (v7 >> 14)
      {
        v4 += 3;
        do
        {
          *(v4 - 1) = v8 | 0x80;
          v9 = v8 >> 7;
          ++v4;
          v10 = v8 >> 14;
          v8 >>= 7;
        }
        while (v10);
        *(v4 - 1) = v9;
        if ((v6 & 2) != 0)
          goto LABEL_19;
      }
      else
      {
        v4[2] = v8;
        v4 += 3;
        if ((v6 & 2) != 0)
          goto LABEL_19;
      }
    }
    else
    {
      v4[1] = v7;
      v4 += 2;
      if ((v6 & 2) != 0)
        goto LABEL_19;
    }
LABEL_3:
    if ((v6 & 8) == 0)
      goto LABEL_4;
    goto LABEL_22;
  }
  if ((v6 & 2) == 0)
    goto LABEL_3;
LABEL_19:
  if (*(_QWORD *)a3 <= (unint64_t)v4)
    v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
  v11 = *((_BYTE *)this + 76);
  *v4 = 16;
  v4[1] = v11;
  v4 += 2;
  if ((v6 & 8) == 0)
  {
LABEL_4:
    if ((v6 & 4) == 0)
      goto LABEL_5;
    goto LABEL_25;
  }
LABEL_22:
  if (*(_QWORD *)a3 <= (unint64_t)v4)
    v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
  v12 = *((_BYTE *)this + 78);
  *v4 = 24;
  v4[1] = v12;
  v4 += 2;
  if ((v6 & 4) == 0)
  {
LABEL_5:
    if ((v6 & 0x20) == 0)
      goto LABEL_6;
    goto LABEL_28;
  }
LABEL_25:
  if (*(_QWORD *)a3 <= (unint64_t)v4)
    v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
  v13 = *((_BYTE *)this + 77);
  *v4 = 40;
  v4[1] = v13;
  v4 += 2;
  if ((v6 & 0x20) == 0)
  {
LABEL_6:
    if ((v6 & 0x10) == 0)
      goto LABEL_42;
    goto LABEL_39;
  }
LABEL_28:
  if (*(_QWORD *)a3 <= (unint64_t)v4)
    v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
  v14 = *((int *)this + 20);
  *v4 = 48;
  if (v14 > 0x7F)
  {
    v4[1] = v14 | 0x80;
    v15 = v14 >> 7;
    if (v14 >> 14)
    {
      v4 += 3;
      do
      {
        *(v4 - 1) = v15 | 0x80;
        v16 = v15 >> 7;
        ++v4;
        v17 = v15 >> 14;
        v15 >>= 7;
      }
      while (v17);
      *(v4 - 1) = v16;
      if ((v6 & 0x10) == 0)
        goto LABEL_42;
    }
    else
    {
      v4[2] = v15;
      v4 += 3;
      if ((v6 & 0x10) == 0)
        goto LABEL_42;
    }
  }
  else
  {
    v4[1] = v14;
    v4 += 2;
    if ((v6 & 0x10) == 0)
      goto LABEL_42;
  }
LABEL_39:
  if (*(_QWORD *)a3 <= (unint64_t)v4)
    v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
  v18 = *((_BYTE *)this + 79);
  *v4 = 80;
  v4[1] = v18;
  v4 += 2;
LABEL_42:
  v19 = *((_DWORD *)this + 14);
  if (v19)
  {
    for (i = 0; i != v19; ++i)
    {
      if (*(_QWORD *)a3 <= (unint64_t)v4)
        v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
      v21 = *(google::protobuf::UninterpretedOption **)(*((_QWORD *)this + 8) + 8 * i + 8);
      *(_WORD *)v4 = 16058;
      v22 = *((_DWORD *)v21 + 5);
      if (v22 > 0x7F)
      {
        v4[2] = v22 | 0x80;
        v24 = v22 >> 7;
        if (v22 >> 14)
        {
          v23 = v4 + 4;
          do
          {
            *(v23 - 1) = v24 | 0x80;
            v25 = v24 >> 7;
            ++v23;
            v26 = v24 >> 14;
            v24 >>= 7;
          }
          while (v26);
          *(v23 - 1) = v25;
        }
        else
        {
          v4[3] = v24;
          v23 = v4 + 4;
        }
      }
      else
      {
        v4[2] = v22;
        v23 = v4 + 3;
      }
      v4 = (unsigned __int8 *)google::protobuf::UninterpretedOption::_InternalSerialize(v21, v23, a3);
    }
  }
  result = (const google::protobuf::UnknownFieldSet *)google::protobuf::internal::ExtensionSet::_InternalSerialize((google::protobuf::FieldOptions *)((char *)this + 16), 1000, 0x20000000, v4, a3);
  v29 = *((_QWORD *)this + 1);
  if ((v29 & 1) != 0)
    return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v29 & 0xFFFFFFFFFFFFFFFELL) + 8), result, a3, v28);
  return result;
}

const InternalMetadata *google::protobuf::FieldOptions::ByteSizeLong(google::protobuf::FieldOptions *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  CachedSize *v5;
  uint64_t v6;
  const InternalMetadata *v7;
  uint64_t v8;
  google::protobuf::UninterpretedOption **v9;
  uint64_t v10;
  google::protobuf::UninterpretedOption *v11;
  const InternalMetadata *v12;
  int v13;
  int v14;
  uint64_t v15;
  const InternalMetadata *v16;
  int v17;
  uint64_t v18;
  uint64_t v19;

  v2 = google::protobuf::internal::ExtensionSet::ByteSize((google::protobuf::FieldOptions *)((char *)this + 16));
  v6 = *((int *)this + 14);
  v7 = (const InternalMetadata *)(v2 + 2 * v6);
  v8 = *((_QWORD *)this + 8);
  if (v8)
    v9 = (google::protobuf::UninterpretedOption **)(v8 + 8);
  else
    v9 = 0;
  if ((_DWORD)v6)
  {
    v10 = 8 * v6;
    do
    {
      v11 = *v9++;
      v12 = google::protobuf::UninterpretedOption::ByteSizeLong(v11, v3, v4, v5);
      v7 = (const InternalMetadata *)((char *)v7 + (_QWORD)v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6));
      v10 -= 8;
    }
    while (v10);
  }
  v13 = *((_DWORD *)this + 10);
  if ((v13 & 0x3F) != 0)
  {
    if ((v13 & 1) != 0)
    {
      v14 = *((_DWORD *)this + 18);
      if (v14 < 0)
        v15 = 11;
      else
        v15 = ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
      v7 = (const InternalMetadata *)((char *)v7 + v15);
    }
    v16 = (const InternalMetadata *)((char *)&v7->var0 + 2);
    if ((v13 & 2) == 0)
      v16 = v7;
    if ((v13 & 4) != 0)
      v16 = (const InternalMetadata *)((char *)v16 + 2);
    if ((v13 & 8) != 0)
      v16 = (const InternalMetadata *)((char *)v16 + 2);
    if ((v13 & 0x10) != 0)
      v7 = (const InternalMetadata *)((char *)&v16->var0 + 2);
    else
      v7 = v16;
    if ((v13 & 0x20) != 0)
    {
      v17 = *((_DWORD *)this + 20);
      v18 = ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if (v17 >= 0)
        v19 = v18;
      else
        v19 = 11;
      v7 = (const InternalMetadata *)((char *)v7 + v19);
    }
  }
  if ((*((_BYTE *)this + 8) & 1) != 0)
    return (const InternalMetadata *)google::protobuf::internal::ComputeUnknownFieldsSize((google::protobuf::FieldOptions *)((char *)this + 8), v7, (_DWORD *)this + 11, v5);
  *((_DWORD *)this + 11) = (_DWORD)v7;
  return v7;
}

void google::protobuf::FieldOptions::MergeFrom(google::protobuf::FieldOptions *this, const google::protobuf::Message *a2, google::protobuf::Message *a3)
{
  if (*(void (***)(google::protobuf::FieldOptions *__hidden))a2 == &off_1E1BF75F8)
    google::protobuf::FieldOptions::MergeFrom(this, a2);
  else
    google::protobuf::internal::ReflectionOps::Merge(a2, this, a3);
}

void google::protobuf::FieldOptions::CopyFrom(uint64_t **this, uint64_t **a2)
{
  google::protobuf::Message *v4;

  if (a2 != this)
  {
    google::protobuf::FieldOptions::Clear(this);
    google::protobuf::FieldOptions::MergeFrom((google::protobuf::FieldOptions *)this, (const google::protobuf::Message *)a2, v4);
  }
}

uint64_t google::protobuf::FieldOptions::GetMetadata(google::protobuf::FieldOptions *this)
{
  google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0);
  return off_1EDF46FE8[30];
}

google::protobuf::OneofOptions *google::protobuf::OneofOptions::OneofOptions(google::protobuf::OneofOptions *this, Arena *a2)
{
  *((_QWORD *)this + 2) = a2;
  *(_QWORD *)this = &off_1E1BF76A8;
  *((_QWORD *)this + 1) = a2;
  *((_DWORD *)this + 6) = 0;
  *((_QWORD *)this + 4) = 0;
  *((_QWORD *)this + 5) = a2;
  *((_QWORD *)this + 6) = 0;
  *((_QWORD *)this + 7) = 0;
  *((_DWORD *)this + 16) = 0;
  if (atomic_load(scc_info_OneofOptions_google_2fprotobuf_2fdescriptor_2eproto))
    google::protobuf::internal::InitSCCImpl(scc_info_OneofOptions_google_2fprotobuf_2fdescriptor_2eproto);
  return this;
}

void sub_1888B2EEC(_Unwind_Exception *a1)
{
  google::protobuf::internal::ExtensionSet *v1;
  _QWORD *v2;

  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::TypeHandler>(v2);
  google::protobuf::internal::ExtensionSet::~ExtensionSet(v1);
  _Unwind_Resume(a1);
}

void google::protobuf::OneofOptions::~OneofOptions(google::protobuf::OneofOptions *this)
{
  google::protobuf::internal::InternalMetadata::Delete<google::protobuf::UnknownFieldSet>((uint64_t *)this + 1);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::TypeHandler>((_QWORD *)this + 5);
  google::protobuf::internal::ExtensionSet::~ExtensionSet((google::protobuf::OneofOptions *)((char *)this + 16));
}

{
  google::protobuf::OneofOptions::~OneofOptions(this);
  JUMPOUT(0x18D76437CLL);
}

uint64_t google::protobuf::OneofOptions::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 64) = a2;
  return this;
}

google::protobuf::internal *google::protobuf::OneofOptions::_InternalParse(uint64_t a1, google::protobuf::internal *a2, google::protobuf::internal::EpsCopyInputStream *this)
{
  char v5;
  google::protobuf::internal *result;
  _QWORD *v7;
  google::protobuf::internal *v8;
  unsigned int v9;
  BOOL v10;
  unint64_t v11;
  google::protobuf::internal *v12;
  int *v13;
  int v14;
  int v15;
  google::protobuf::UninterpretedOption *v16;
  uint64_t v17;
  uint64_t v18;
  google::protobuf::UnknownFieldSet *v19;
  int v20;
  uint64_t v21;
  google::protobuf::internal *v22;
  google::protobuf::UnknownFieldSet *v23;

  v22 = a2;
  v5 = google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(this, (const char **)&v22, *((_DWORD *)this + 23));
  result = v22;
  if ((v5 & 1) == 0)
  {
    v7 = (_QWORD *)(a1 + 8);
    while (1)
    {
      v8 = (google::protobuf::internal *)((char *)result + 1);
      v9 = *(unsigned __int8 *)result;
      if ((*(char *)result & 0x80000000) == 0)
      {
        v22 = (google::protobuf::internal *)((char *)result + 1);
        goto LABEL_5;
      }
      v9 = v9 + (*(unsigned __int8 *)v8 << 7) - 128;
      if (*(char *)v8 < 0)
        break;
      v8 = (google::protobuf::internal *)((char *)result + 2);
LABEL_13:
      v22 = v8;
      if (v9 == 7994)
      {
        result = (google::protobuf::internal *)((char *)v8 - 2);
        while (1)
        {
          v12 = (google::protobuf::internal *)((char *)result + 2);
          v22 = (google::protobuf::internal *)((char *)result + 2);
          v13 = *(int **)(a1 + 56);
          if (!v13)
            break;
          v14 = *(_DWORD *)(a1 + 48);
          v15 = *v13;
          if (v14 >= *v13)
          {
            if (v15 == *(_DWORD *)(a1 + 52))
            {
LABEL_20:
              if (v14 <= v15)
              {
                google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 40), v15 - v14 + 1);
                v13 = *(int **)(a1 + 56);
              }
              v15 = *v13;
            }
            *v13 = v15 + 1;
            v16 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::UninterpretedOption>(*(google::protobuf::internal::ArenaImpl **)(a1 + 40));
            v17 = *(_QWORD *)(a1 + 56);
            v18 = *(int *)(a1 + 48);
            *(_DWORD *)(a1 + 48) = v18 + 1;
            *(_QWORD *)(v17 + 8 * v18 + 8) = v16;
            v12 = v22;
            goto LABEL_24;
          }
          *(_DWORD *)(a1 + 48) = v14 + 1;
          v16 = *(google::protobuf::UninterpretedOption **)&v13[2 * v14 + 2];
LABEL_24:
          result = google::protobuf::internal::ParseContext::ParseMessage<google::protobuf::UninterpretedOption>(this, (uint64_t)v16, v12);
          v22 = result;
          if (!result)
            return result;
          if (*(_QWORD *)this <= (unint64_t)result || *(_WORD *)result != 16058)
            goto LABEL_32;
        }
        v14 = *(_DWORD *)(a1 + 48);
        v15 = *(_DWORD *)(a1 + 52);
        goto LABEL_20;
      }
LABEL_5:
      if (v9)
        v10 = (v9 & 7) == 4;
      else
        v10 = 1;
      if (v10)
      {
        *((_DWORD *)this + 20) = v9 - 1;
        return v8;
      }
      v11 = v9;
      if (v9 >> 6 < 0x7D)
      {
        if ((*v7 & 1) != 0)
        {
          v19 = (google::protobuf::UnknownFieldSet *)((*v7 & 0xFFFFFFFFFFFFFFFELL) + 8);
        }
        else
        {
          v19 = (google::protobuf::UnknownFieldSet *)google::protobuf::internal::InternalMetadata::mutable_unknown_fields_slow<google::protobuf::UnknownFieldSet>((uint64_t *)(a1 + 8));
          v8 = v22;
        }
        v23 = v19;
        result = google::protobuf::internal::FieldParser<google::protobuf::internal::UnknownFieldParserHelper>(v11, &v23, (uint64_t *)v8, (int32x2_t *)this);
      }
      else
      {
        result = (google::protobuf::internal *)google::protobuf::internal::ExtensionSet::ParseField((google::protobuf::internal::ExtensionSet *)(a1 + 16), v9, (unsigned __int8 *)v8, (uint64_t)&google::protobuf::_OneofOptions_default_instance_, (uint64_t *)(a1 + 8), (int32x2_t *)this);
      }
      v22 = result;
      if (!result)
        return result;
LABEL_32:
      v20 = google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(this, (const char **)&v22, *((_DWORD *)this + 23));
      result = v22;
      if (v20)
        return result;
    }
    v8 = (google::protobuf::internal *)((char *)result + 3);
    v21 = -21;
    do
    {
      v9 += (*((unsigned __int8 *)v8 - 1) - 1) << (v21 + 35);
      if ((*((char *)v8 - 1) & 0x80000000) == 0)
        goto LABEL_13;
      v8 = (google::protobuf::internal *)((char *)v8 + 1);
      v21 += 7;
    }
    while (v21);
    return 0;
  }
  return result;
}

const google::protobuf::UnknownFieldSet *google::protobuf::OneofOptions::_InternalSerialize(google::protobuf::OneofOptions *this, unsigned __int8 *a2, google::protobuf::io::EpsCopyOutputStream *a3)
{
  int v6;
  int i;
  google::protobuf::UninterpretedOption *v8;
  unsigned int v9;
  unsigned __int8 *v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  const google::protobuf::UnknownFieldSet *result;
  google::protobuf::io::EpsCopyOutputStream *v15;
  uint64_t v16;

  v6 = *((_DWORD *)this + 12);
  if (v6)
  {
    for (i = 0; i != v6; ++i)
    {
      if (*(_QWORD *)a3 <= (unint64_t)a2)
        a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
      v8 = *(google::protobuf::UninterpretedOption **)(*((_QWORD *)this + 7) + 8 * i + 8);
      *(_WORD *)a2 = 16058;
      v9 = *((_DWORD *)v8 + 5);
      if (v9 > 0x7F)
      {
        a2[2] = v9 | 0x80;
        v11 = v9 >> 7;
        if (v9 >> 14)
        {
          v10 = a2 + 4;
          do
          {
            *(v10 - 1) = v11 | 0x80;
            v12 = v11 >> 7;
            ++v10;
            v13 = v11 >> 14;
            v11 >>= 7;
          }
          while (v13);
          *(v10 - 1) = v12;
        }
        else
        {
          a2[3] = v11;
          v10 = a2 + 4;
        }
      }
      else
      {
        a2[2] = v9;
        v10 = a2 + 3;
      }
      a2 = (unsigned __int8 *)google::protobuf::UninterpretedOption::_InternalSerialize(v8, v10, a3);
    }
  }
  result = (const google::protobuf::UnknownFieldSet *)google::protobuf::internal::ExtensionSet::_InternalSerialize((google::protobuf::OneofOptions *)((char *)this + 16), 1000, 0x20000000, a2, a3);
  v16 = *((_QWORD *)this + 1);
  if ((v16 & 1) != 0)
    return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v16 & 0xFFFFFFFFFFFFFFFELL) + 8), result, a3, v15);
  return result;
}

const InternalMetadata *google::protobuf::OneofOptions::ByteSizeLong(google::protobuf::OneofOptions *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  CachedSize *v5;
  uint64_t v6;
  const InternalMetadata *v7;
  uint64_t v8;
  google::protobuf::UninterpretedOption **v9;
  uint64_t v10;
  google::protobuf::UninterpretedOption *v11;
  const InternalMetadata *v12;

  v2 = google::protobuf::internal::ExtensionSet::ByteSize((google::protobuf::OneofOptions *)((char *)this + 16));
  v6 = *((int *)this + 12);
  v7 = (const InternalMetadata *)(v2 + 2 * v6);
  v8 = *((_QWORD *)this + 7);
  if (v8)
    v9 = (google::protobuf::UninterpretedOption **)(v8 + 8);
  else
    v9 = 0;
  if ((_DWORD)v6)
  {
    v10 = 8 * v6;
    do
    {
      v11 = *v9++;
      v12 = google::protobuf::UninterpretedOption::ByteSizeLong(v11, v3, v4, v5);
      v7 = (const InternalMetadata *)((char *)v7 + (_QWORD)v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6));
      v10 -= 8;
    }
    while (v10);
  }
  if ((*((_BYTE *)this + 8) & 1) != 0)
    return (const InternalMetadata *)google::protobuf::internal::ComputeUnknownFieldsSize((google::protobuf::OneofOptions *)((char *)this + 8), v7, (_DWORD *)this + 16, v5);
  *((_DWORD *)this + 16) = (_DWORD)v7;
  return v7;
}

void google::protobuf::OneofOptions::MergeFrom(google::protobuf::OneofOptions *this, const google::protobuf::Message *a2, google::protobuf::Message *a3)
{
  if (*(void (***)(google::protobuf::OneofOptions *__hidden))a2 == &off_1E1BF76A8)
    google::protobuf::ExtensionRangeOptions::MergeFrom(this, a2);
  else
    google::protobuf::internal::ReflectionOps::Merge(a2, this, a3);
}

void google::protobuf::OneofOptions::CopyFrom(uint64_t **this, uint64_t **a2)
{
  google::protobuf::Message *v4;

  if (a2 != this)
  {
    google::protobuf::OneofOptions::Clear(this);
    google::protobuf::OneofOptions::MergeFrom((google::protobuf::OneofOptions *)this, (const google::protobuf::Message *)a2, v4);
  }
}

uint64_t google::protobuf::OneofOptions::GetMetadata(google::protobuf::OneofOptions *this)
{
  google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0);
  return off_1EDF46FE8[32];
}

google::protobuf::EnumOptions *google::protobuf::EnumOptions::EnumOptions(google::protobuf::EnumOptions *this, Arena *a2)
{
  *((_QWORD *)this + 2) = a2;
  *(_QWORD *)this = &off_1E1BF7498;
  *((_QWORD *)this + 1) = a2;
  *((_DWORD *)this + 6) = 0;
  *((_QWORD *)this + 6) = a2;
  *((_QWORD *)this + 4) = 0;
  *((_QWORD *)this + 5) = 0;
  *((_QWORD *)this + 7) = 0;
  *((_QWORD *)this + 8) = 0;
  if (atomic_load(scc_info_EnumOptions_google_2fprotobuf_2fdescriptor_2eproto))
    google::protobuf::internal::InitSCCImpl(scc_info_EnumOptions_google_2fprotobuf_2fdescriptor_2eproto);
  *((_WORD *)this + 36) = 0;
  return this;
}

void sub_1888B34C8(_Unwind_Exception *a1)
{
  google::protobuf::internal::ExtensionSet *v1;
  _QWORD *v2;

  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::TypeHandler>(v2);
  google::protobuf::internal::ExtensionSet::~ExtensionSet(v1);
  _Unwind_Resume(a1);
}

void google::protobuf::EnumOptions::~EnumOptions(google::protobuf::EnumOptions *this)
{
  google::protobuf::internal::InternalMetadata::Delete<google::protobuf::UnknownFieldSet>((uint64_t *)this + 1);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::TypeHandler>((_QWORD *)this + 6);
  google::protobuf::internal::ExtensionSet::~ExtensionSet((google::protobuf::EnumOptions *)((char *)this + 16));
}

{
  google::protobuf::EnumOptions::~EnumOptions(this);
  JUMPOUT(0x18D76437CLL);
}

uint64_t google::protobuf::EnumOptions::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 44) = a2;
  return this;
}

google::protobuf::internal *google::protobuf::EnumOptions::_InternalParse(uint64_t a1, google::protobuf::internal *a2, int32x2_t *this)
{
  int v5;
  google::protobuf::internal *v6;
  _QWORD *v8;
  unsigned int v9;
  unsigned int v10;
  BOOL v12;
  unint64_t v13;
  google::protobuf::internal *v14;
  google::protobuf::internal *v15;
  google::protobuf::internal *v16;
  int *v17;
  int v18;
  int v19;
  google::protobuf::UninterpretedOption *v20;
  uint64_t v21;
  uint64_t v22;
  google::protobuf::internal *v23;
  uint64_t v24;
  int v25;
  google::protobuf::internal *v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  google::protobuf::UnknownFieldSet *v30;
  uint64_t v31;
  uint64_t v32;
  google::protobuf::internal *v33;
  google::protobuf::UnknownFieldSet *v34;

  v33 = a2;
  v5 = 0;
  if ((google::protobuf::internal::EpsCopyInputStream::DoneWithCheck((google::protobuf::internal::EpsCopyInputStream *)this, (const char **)&v33, this[11].i32[1]) & 1) == 0)
  {
    v8 = (_QWORD *)(a1 + 8);
    while (1)
    {
      v6 = (google::protobuf::internal *)((char *)v33 + 1);
      v9 = *(unsigned __int8 *)v33;
      if (*(char *)v33 < 0)
      {
        v9 = v9 + (*(unsigned __int8 *)v6 << 7) - 128;
        if (*(char *)v6 < 0)
        {
          v6 = (google::protobuf::internal *)((char *)v33 + 3);
          v29 = -21;
          while (1)
          {
            v9 += (*((unsigned __int8 *)v6 - 1) - 1) << (v29 + 35);
            if ((*((char *)v6 - 1) & 0x80000000) == 0)
              break;
            v6 = (google::protobuf::internal *)((char *)v6 + 1);
            v29 += 7;
            if (!v29)
              goto LABEL_64;
          }
        }
        else
        {
          v6 = (google::protobuf::internal *)((char *)v33 + 2);
        }
      }
      v33 = v6;
      v10 = v9 >> 3;
      if (v9 >> 3 == 999)
        break;
      if (v10 == 3)
      {
        if (v9 == 24)
        {
          v5 |= 2u;
          v23 = (google::protobuf::internal *)((char *)v6 + 1);
          v24 = *(unsigned __int8 *)v6;
          if (*(char *)v6 < 0)
          {
            v25 = *(unsigned __int8 *)v23;
            v24 = (v24 + (v25 << 7) - 128);
            if ((v25 & 0x80) != 0)
            {
              v23 = (google::protobuf::internal *)((char *)v6 + 3);
              v31 = 14;
              while (1)
              {
                v24 += (*((unsigned __int8 *)v23 - 1) - 1) << v31;
                if ((*((char *)v23 - 1) & 0x80000000) == 0)
                  break;
                v23 = (google::protobuf::internal *)((char *)v23 + 1);
                v31 += 7;
                if (v31 == 70)
                {
                  v6 = 0;
                  *(_BYTE *)(a1 + 73) = 0;
                  goto LABEL_3;
                }
              }
            }
            else
            {
              v23 = (google::protobuf::internal *)((char *)v6 + 2);
            }
          }
          v33 = v23;
          *(_BYTE *)(a1 + 73) = v24 != 0;
          goto LABEL_52;
        }
      }
      else if (v10 == 2 && v9 == 16)
      {
        v5 |= 1u;
        v26 = (google::protobuf::internal *)((char *)v6 + 1);
        v27 = *(unsigned __int8 *)v6;
        if (*(char *)v6 < 0)
        {
          v28 = *(unsigned __int8 *)v26;
          v27 = (v27 + (v28 << 7) - 128);
          if ((v28 & 0x80) != 0)
          {
            v26 = (google::protobuf::internal *)((char *)v6 + 3);
            v32 = 14;
            while (1)
            {
              v27 += (*((unsigned __int8 *)v26 - 1) - 1) << v32;
              if ((*((char *)v26 - 1) & 0x80000000) == 0)
                break;
              v26 = (google::protobuf::internal *)((char *)v26 + 1);
              v32 += 7;
              if (v32 == 70)
              {
                v6 = 0;
                *(_BYTE *)(a1 + 72) = 0;
                goto LABEL_3;
              }
            }
          }
          else
          {
            v26 = (google::protobuf::internal *)((char *)v6 + 2);
          }
        }
        v33 = v26;
        *(_BYTE *)(a1 + 72) = v27 != 0;
        goto LABEL_52;
      }
LABEL_14:
      if (v9)
        v12 = (v9 & 7) == 4;
      else
        v12 = 1;
      if (v12)
      {
        this[10].i32[0] = v9 - 1;
        goto LABEL_3;
      }
      v13 = v9;
      if (v9 >> 6 < 0x7D)
      {
        if ((*v8 & 1) != 0)
        {
          v30 = (google::protobuf::UnknownFieldSet *)((*v8 & 0xFFFFFFFFFFFFFFFELL) + 8);
        }
        else
        {
          v30 = (google::protobuf::UnknownFieldSet *)google::protobuf::internal::InternalMetadata::mutable_unknown_fields_slow<google::protobuf::UnknownFieldSet>((uint64_t *)(a1 + 8));
          v6 = v33;
        }
        v34 = v30;
        v14 = google::protobuf::internal::FieldParser<google::protobuf::internal::UnknownFieldParserHelper>(v13, &v34, (uint64_t *)v6, this);
      }
      else
      {
        v14 = (google::protobuf::internal *)google::protobuf::internal::ExtensionSet::ParseField((google::protobuf::internal::ExtensionSet *)(a1 + 16), v9, (unsigned __int8 *)v6, (uint64_t)&google::protobuf::_EnumOptions_default_instance_, (uint64_t *)(a1 + 8), this);
      }
      v33 = v14;
      if (!v14)
      {
LABEL_64:
        v6 = 0;
        goto LABEL_3;
      }
LABEL_52:
      if (google::protobuf::internal::EpsCopyInputStream::DoneWithCheck((google::protobuf::internal::EpsCopyInputStream *)this, (const char **)&v33, this[11].i32[1]))goto LABEL_2;
    }
    if (v9 != 58)
      goto LABEL_14;
    v15 = (google::protobuf::internal *)((char *)v6 - 2);
    while (1)
    {
      v16 = (google::protobuf::internal *)((char *)v15 + 2);
      v33 = (google::protobuf::internal *)((char *)v15 + 2);
      v17 = *(int **)(a1 + 64);
      if (!v17)
        break;
      v18 = *(_DWORD *)(a1 + 56);
      v19 = *v17;
      if (v18 >= *v17)
      {
        if (v19 == *(_DWORD *)(a1 + 60))
        {
LABEL_27:
          if (v18 <= v19)
          {
            google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 48), v19 - v18 + 1);
            v17 = *(int **)(a1 + 64);
          }
          v19 = *v17;
        }
        *v17 = v19 + 1;
        v20 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::UninterpretedOption>(*(google::protobuf::internal::ArenaImpl **)(a1 + 48));
        v21 = *(_QWORD *)(a1 + 64);
        v22 = *(int *)(a1 + 56);
        *(_DWORD *)(a1 + 56) = v22 + 1;
        *(_QWORD *)(v21 + 8 * v22 + 8) = v20;
        v16 = v33;
        goto LABEL_31;
      }
      *(_DWORD *)(a1 + 56) = v18 + 1;
      v20 = *(google::protobuf::UninterpretedOption **)&v17[2 * v18 + 2];
LABEL_31:
      v15 = google::protobuf::internal::ParseContext::ParseMessage<google::protobuf::UninterpretedOption>((google::protobuf::internal::EpsCopyInputStream *)this, (uint64_t)v20, v16);
      v33 = v15;
      if (!v15)
        goto LABEL_64;
      if (*(_QWORD *)this <= (unint64_t)v15 || *(_WORD *)v15 != 16058)
        goto LABEL_52;
    }
    v18 = *(_DWORD *)(a1 + 56);
    v19 = *(_DWORD *)(a1 + 60);
    goto LABEL_27;
  }
LABEL_2:
  v6 = v33;
LABEL_3:
  *(_DWORD *)(a1 + 40) |= v5;
  return v6;
}

const google::protobuf::UnknownFieldSet *google::protobuf::EnumOptions::_InternalSerialize(google::protobuf::EnumOptions *this, unsigned __int8 *a2, google::protobuf::io::EpsCopyOutputStream *a3)
{
  unsigned __int8 *v4;
  int v6;
  unsigned __int8 v7;
  unsigned __int8 v8;
  int v9;
  int i;
  google::protobuf::UninterpretedOption *v11;
  unsigned int v12;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  const google::protobuf::UnknownFieldSet *result;
  google::protobuf::io::EpsCopyOutputStream *v18;
  uint64_t v19;

  v4 = a2;
  v6 = *((_DWORD *)this + 10);
  if ((v6 & 1) != 0)
  {
    if (*(_QWORD *)a3 <= (unint64_t)a2)
      v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
    v7 = *((_BYTE *)this + 72);
    *v4 = 16;
    v4[1] = v7;
    v4 += 2;
  }
  if ((v6 & 2) != 0)
  {
    if (*(_QWORD *)a3 <= (unint64_t)v4)
      v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
    v8 = *((_BYTE *)this + 73);
    *v4 = 24;
    v4[1] = v8;
    v4 += 2;
  }
  v9 = *((_DWORD *)this + 14);
  if (v9)
  {
    for (i = 0; i != v9; ++i)
    {
      if (*(_QWORD *)a3 <= (unint64_t)v4)
        v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
      v11 = *(google::protobuf::UninterpretedOption **)(*((_QWORD *)this + 8) + 8 * i + 8);
      *(_WORD *)v4 = 16058;
      v12 = *((_DWORD *)v11 + 5);
      if (v12 > 0x7F)
      {
        v4[2] = v12 | 0x80;
        v14 = v12 >> 7;
        if (v12 >> 14)
        {
          v13 = v4 + 4;
          do
          {
            *(v13 - 1) = v14 | 0x80;
            v15 = v14 >> 7;
            ++v13;
            v16 = v14 >> 14;
            v14 >>= 7;
          }
          while (v16);
          *(v13 - 1) = v15;
        }
        else
        {
          v4[3] = v14;
          v13 = v4 + 4;
        }
      }
      else
      {
        v4[2] = v12;
        v13 = v4 + 3;
      }
      v4 = (unsigned __int8 *)google::protobuf::UninterpretedOption::_InternalSerialize(v11, v13, a3);
    }
  }
  result = (const google::protobuf::UnknownFieldSet *)google::protobuf::internal::ExtensionSet::_InternalSerialize((google::protobuf::EnumOptions *)((char *)this + 16), 1000, 0x20000000, v4, a3);
  v19 = *((_QWORD *)this + 1);
  if ((v19 & 1) != 0)
    return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v19 & 0xFFFFFFFFFFFFFFFELL) + 8), result, a3, v18);
  return result;
}

const InternalMetadata *google::protobuf::EnumOptions::ByteSizeLong(google::protobuf::EnumOptions *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  CachedSize *v5;
  uint64_t v6;
  const InternalMetadata *v7;
  uint64_t v8;
  google::protobuf::UninterpretedOption **v9;
  uint64_t v10;
  google::protobuf::UninterpretedOption *v11;
  const InternalMetadata *v12;
  int v13;
  const InternalMetadata *v14;
  const InternalMetadata *v15;

  v2 = google::protobuf::internal::ExtensionSet::ByteSize((google::protobuf::EnumOptions *)((char *)this + 16));
  v6 = *((int *)this + 14);
  v7 = (const InternalMetadata *)(v2 + 2 * v6);
  v8 = *((_QWORD *)this + 8);
  if (v8)
    v9 = (google::protobuf::UninterpretedOption **)(v8 + 8);
  else
    v9 = 0;
  if ((_DWORD)v6)
  {
    v10 = 8 * v6;
    do
    {
      v11 = *v9++;
      v12 = google::protobuf::UninterpretedOption::ByteSizeLong(v11, v3, v4, v5);
      v7 = (const InternalMetadata *)((char *)v7 + (_QWORD)v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6));
      v10 -= 8;
    }
    while (v10);
  }
  v13 = *((_DWORD *)this + 10);
  v14 = (const InternalMetadata *)((char *)&v7->var0 + 2);
  if ((v13 & 1) == 0)
    v14 = v7;
  if ((v13 & 2) != 0)
    v14 = (const InternalMetadata *)((char *)v14 + 2);
  if ((v13 & 3) != 0)
    v15 = v14;
  else
    v15 = v7;
  if ((*((_BYTE *)this + 8) & 1) != 0)
    return (const InternalMetadata *)google::protobuf::internal::ComputeUnknownFieldsSize((google::protobuf::EnumOptions *)((char *)this + 8), v15, (_DWORD *)this + 11, v5);
  *((_DWORD *)this + 11) = (_DWORD)v15;
  return v15;
}

void google::protobuf::EnumOptions::MergeFrom(google::protobuf::EnumOptions *this, const google::protobuf::Message *a2, google::protobuf::Message *a3)
{
  if (*(void (***)(google::protobuf::EnumOptions *__hidden))a2 == &off_1E1BF7498)
    google::protobuf::EnumOptions::MergeFrom(this, a2);
  else
    google::protobuf::internal::ReflectionOps::Merge(a2, this, a3);
}

void google::protobuf::EnumOptions::CopyFrom(uint64_t **this, uint64_t **a2)
{
  google::protobuf::Message *v4;

  if (a2 != this)
  {
    google::protobuf::EnumOptions::Clear(this);
    google::protobuf::EnumOptions::MergeFrom((google::protobuf::EnumOptions *)this, (const google::protobuf::Message *)a2, v4);
  }
}

uint64_t google::protobuf::EnumOptions::GetMetadata(google::protobuf::EnumOptions *this)
{
  google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0);
  return off_1EDF46FE8[34];
}

google::protobuf::EnumValueOptions *google::protobuf::EnumValueOptions::EnumValueOptions(google::protobuf::EnumValueOptions *this, Arena *a2)
{
  *((_QWORD *)this + 2) = a2;
  *(_QWORD *)this = &off_1E1BF7BF8;
  *((_QWORD *)this + 1) = a2;
  *((_DWORD *)this + 6) = 0;
  *((_QWORD *)this + 6) = a2;
  *((_QWORD *)this + 4) = 0;
  *((_QWORD *)this + 5) = 0;
  *((_QWORD *)this + 7) = 0;
  *((_QWORD *)this + 8) = 0;
  if (atomic_load(scc_info_EnumValueOptions_google_2fprotobuf_2fdescriptor_2eproto))
    google::protobuf::internal::InitSCCImpl(scc_info_EnumValueOptions_google_2fprotobuf_2fdescriptor_2eproto);
  *((_BYTE *)this + 72) = 0;
  return this;
}

void sub_1888B3C68(_Unwind_Exception *a1)
{
  google::protobuf::internal::ExtensionSet *v1;
  _QWORD *v2;

  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::TypeHandler>(v2);
  google::protobuf::internal::ExtensionSet::~ExtensionSet(v1);
  _Unwind_Resume(a1);
}

void google::protobuf::EnumValueOptions::~EnumValueOptions(google::protobuf::EnumValueOptions *this)
{
  google::protobuf::internal::InternalMetadata::Delete<google::protobuf::UnknownFieldSet>((uint64_t *)this + 1);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::TypeHandler>((_QWORD *)this + 6);
  google::protobuf::internal::ExtensionSet::~ExtensionSet((google::protobuf::EnumValueOptions *)((char *)this + 16));
}

{
  google::protobuf::EnumValueOptions::~EnumValueOptions(this);
  JUMPOUT(0x18D76437CLL);
}

uint64_t google::protobuf::EnumValueOptions::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 44) = a2;
  return this;
}

google::protobuf::internal *google::protobuf::EnumValueOptions::_InternalParse(uint64_t a1, google::protobuf::internal *a2, int32x2_t *this)
{
  int v5;
  google::protobuf::internal *v6;
  _QWORD *v8;
  unsigned int v9;
  BOOL v11;
  unint64_t v12;
  google::protobuf::internal *v13;
  google::protobuf::internal *v14;
  google::protobuf::internal *v15;
  int *v16;
  int v17;
  int v18;
  google::protobuf::UninterpretedOption *v19;
  uint64_t v20;
  uint64_t v21;
  google::protobuf::internal *v22;
  uint64_t v23;
  int v24;
  google::protobuf::UnknownFieldSet *v25;
  uint64_t v26;
  uint64_t v27;
  google::protobuf::internal *v28;
  google::protobuf::UnknownFieldSet *v29;

  v28 = a2;
  v5 = 0;
  if ((google::protobuf::internal::EpsCopyInputStream::DoneWithCheck((google::protobuf::internal::EpsCopyInputStream *)this, (const char **)&v28, this[11].i32[1]) & 1) == 0)
  {
    v8 = (_QWORD *)(a1 + 8);
    while (1)
    {
      v6 = (google::protobuf::internal *)((char *)v28 + 1);
      v9 = *(unsigned __int8 *)v28;
      if (*(char *)v28 < 0)
      {
        v9 = v9 + (*(unsigned __int8 *)v6 << 7) - 128;
        if (*(char *)v6 < 0)
        {
          v6 = (google::protobuf::internal *)((char *)v28 + 3);
          v26 = -21;
          while (1)
          {
            v9 += (*((unsigned __int8 *)v6 - 1) - 1) << (v26 + 35);
            if ((*((char *)v6 - 1) & 0x80000000) == 0)
              break;
            v6 = (google::protobuf::internal *)((char *)v6 + 1);
            v26 += 7;
            if (!v26)
              goto LABEL_54;
          }
        }
        else
        {
          v6 = (google::protobuf::internal *)((char *)v28 + 2);
        }
      }
      v28 = v6;
      if (v9 >> 3 == 999)
        break;
      if (v9 >> 3 == 1 && v9 == 8)
      {
        v22 = (google::protobuf::internal *)((char *)v6 + 1);
        v23 = *(unsigned __int8 *)v6;
        if (*(char *)v6 < 0)
        {
          v24 = *(unsigned __int8 *)v22;
          v23 = (v23 + (v24 << 7) - 128);
          if ((v24 & 0x80) != 0)
          {
            v22 = (google::protobuf::internal *)((char *)v6 + 3);
            v27 = 14;
            while (1)
            {
              v23 += (*((unsigned __int8 *)v22 - 1) - 1) << v27;
              if ((*((char *)v22 - 1) & 0x80000000) == 0)
                break;
              v22 = (google::protobuf::internal *)((char *)v22 + 1);
              v27 += 7;
              if (v27 == 70)
              {
                v6 = 0;
                *(_BYTE *)(a1 + 72) = 0;
                v5 = 1;
                goto LABEL_3;
              }
            }
          }
          else
          {
            v22 = (google::protobuf::internal *)((char *)v6 + 2);
          }
        }
        v28 = v22;
        *(_BYTE *)(a1 + 72) = v23 != 0;
        v5 = 1;
        goto LABEL_42;
      }
LABEL_13:
      if (v9)
        v11 = (v9 & 7) == 4;
      else
        v11 = 1;
      if (v11)
      {
        this[10].i32[0] = v9 - 1;
        goto LABEL_3;
      }
      v12 = v9;
      if (v9 >> 6 < 0x7D)
      {
        if ((*v8 & 1) != 0)
        {
          v25 = (google::protobuf::UnknownFieldSet *)((*v8 & 0xFFFFFFFFFFFFFFFELL) + 8);
        }
        else
        {
          v25 = (google::protobuf::UnknownFieldSet *)google::protobuf::internal::InternalMetadata::mutable_unknown_fields_slow<google::protobuf::UnknownFieldSet>((uint64_t *)(a1 + 8));
          v6 = v28;
        }
        v29 = v25;
        v13 = google::protobuf::internal::FieldParser<google::protobuf::internal::UnknownFieldParserHelper>(v12, &v29, (uint64_t *)v6, this);
      }
      else
      {
        v13 = (google::protobuf::internal *)google::protobuf::internal::ExtensionSet::ParseField((google::protobuf::internal::ExtensionSet *)(a1 + 16), v9, (unsigned __int8 *)v6, (uint64_t)&google::protobuf::_EnumValueOptions_default_instance_, (uint64_t *)(a1 + 8), this);
      }
      v28 = v13;
      if (!v13)
      {
LABEL_54:
        v6 = 0;
        goto LABEL_3;
      }
LABEL_42:
      if (google::protobuf::internal::EpsCopyInputStream::DoneWithCheck((google::protobuf::internal::EpsCopyInputStream *)this, (const char **)&v28, this[11].i32[1]))goto LABEL_2;
    }
    if (v9 != 58)
      goto LABEL_13;
    v14 = (google::protobuf::internal *)((char *)v6 - 2);
    while (1)
    {
      v15 = (google::protobuf::internal *)((char *)v14 + 2);
      v28 = (google::protobuf::internal *)((char *)v14 + 2);
      v16 = *(int **)(a1 + 64);
      if (!v16)
        break;
      v17 = *(_DWORD *)(a1 + 56);
      v18 = *v16;
      if (v17 >= *v16)
      {
        if (v18 == *(_DWORD *)(a1 + 60))
        {
LABEL_26:
          if (v17 <= v18)
          {
            google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 48), v18 - v17 + 1);
            v16 = *(int **)(a1 + 64);
          }
          v18 = *v16;
        }
        *v16 = v18 + 1;
        v19 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::UninterpretedOption>(*(google::protobuf::internal::ArenaImpl **)(a1 + 48));
        v20 = *(_QWORD *)(a1 + 64);
        v21 = *(int *)(a1 + 56);
        *(_DWORD *)(a1 + 56) = v21 + 1;
        *(_QWORD *)(v20 + 8 * v21 + 8) = v19;
        v15 = v28;
        goto LABEL_30;
      }
      *(_DWORD *)(a1 + 56) = v17 + 1;
      v19 = *(google::protobuf::UninterpretedOption **)&v16[2 * v17 + 2];
LABEL_30:
      v14 = google::protobuf::internal::ParseContext::ParseMessage<google::protobuf::UninterpretedOption>((google::protobuf::internal::EpsCopyInputStream *)this, (uint64_t)v19, v15);
      v28 = v14;
      if (!v14)
        goto LABEL_54;
      if (*(_QWORD *)this <= (unint64_t)v14 || *(_WORD *)v14 != 16058)
        goto LABEL_42;
    }
    v17 = *(_DWORD *)(a1 + 56);
    v18 = *(_DWORD *)(a1 + 60);
    goto LABEL_26;
  }
LABEL_2:
  v6 = v28;
LABEL_3:
  *(_DWORD *)(a1 + 40) |= v5;
  return v6;
}

const google::protobuf::UnknownFieldSet *google::protobuf::EnumValueOptions::_InternalSerialize(google::protobuf::EnumValueOptions *this, unsigned __int8 *a2, google::protobuf::io::EpsCopyOutputStream *a3)
{
  unsigned __int8 *v4;
  unsigned __int8 v6;
  int v7;
  int i;
  google::protobuf::UninterpretedOption *v9;
  unsigned int v10;
  unsigned __int8 *v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  const google::protobuf::UnknownFieldSet *result;
  google::protobuf::io::EpsCopyOutputStream *v16;
  uint64_t v17;

  v4 = a2;
  if ((*((_BYTE *)this + 40) & 1) != 0)
  {
    if (*(_QWORD *)a3 <= (unint64_t)a2)
      v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
    v6 = *((_BYTE *)this + 72);
    *v4 = 8;
    v4[1] = v6;
    v4 += 2;
  }
  v7 = *((_DWORD *)this + 14);
  if (v7)
  {
    for (i = 0; i != v7; ++i)
    {
      if (*(_QWORD *)a3 <= (unint64_t)v4)
        v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
      v9 = *(google::protobuf::UninterpretedOption **)(*((_QWORD *)this + 8) + 8 * i + 8);
      *(_WORD *)v4 = 16058;
      v10 = *((_DWORD *)v9 + 5);
      if (v10 > 0x7F)
      {
        v4[2] = v10 | 0x80;
        v12 = v10 >> 7;
        if (v10 >> 14)
        {
          v11 = v4 + 4;
          do
          {
            *(v11 - 1) = v12 | 0x80;
            v13 = v12 >> 7;
            ++v11;
            v14 = v12 >> 14;
            v12 >>= 7;
          }
          while (v14);
          *(v11 - 1) = v13;
        }
        else
        {
          v4[3] = v12;
          v11 = v4 + 4;
        }
      }
      else
      {
        v4[2] = v10;
        v11 = v4 + 3;
      }
      v4 = (unsigned __int8 *)google::protobuf::UninterpretedOption::_InternalSerialize(v9, v11, a3);
    }
  }
  result = (const google::protobuf::UnknownFieldSet *)google::protobuf::internal::ExtensionSet::_InternalSerialize((google::protobuf::EnumValueOptions *)((char *)this + 16), 1000, 0x20000000, v4, a3);
  v17 = *((_QWORD *)this + 1);
  if ((v17 & 1) != 0)
    return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v17 & 0xFFFFFFFFFFFFFFFELL) + 8), result, a3, v16);
  return result;
}

const InternalMetadata *google::protobuf::EnumValueOptions::ByteSizeLong(google::protobuf::EnumValueOptions *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  CachedSize *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  google::protobuf::UninterpretedOption **v9;
  uint64_t v10;
  google::protobuf::UninterpretedOption *v11;
  const InternalMetadata *v12;
  const InternalMetadata *v13;

  v2 = google::protobuf::internal::ExtensionSet::ByteSize((google::protobuf::EnumValueOptions *)((char *)this + 16));
  v6 = *((int *)this + 14);
  v7 = v2 + 2 * v6;
  v8 = *((_QWORD *)this + 8);
  if (v8)
    v9 = (google::protobuf::UninterpretedOption **)(v8 + 8);
  else
    v9 = 0;
  if ((_DWORD)v6)
  {
    v10 = 8 * v6;
    do
    {
      v11 = *v9++;
      v12 = google::protobuf::UninterpretedOption::ByteSizeLong(v11, v3, v4, v5);
      v7 += (uint64_t)v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6);
      v10 -= 8;
    }
    while (v10);
  }
  if ((*((_BYTE *)this + 40) & 1) != 0)
    v13 = (const InternalMetadata *)(v7 + 2);
  else
    v13 = (const InternalMetadata *)v7;
  if ((*((_BYTE *)this + 8) & 1) != 0)
    return (const InternalMetadata *)google::protobuf::internal::ComputeUnknownFieldsSize((google::protobuf::EnumValueOptions *)((char *)this + 8), v13, (_DWORD *)this + 11, v5);
  *((_DWORD *)this + 11) = (_DWORD)v13;
  return v13;
}

void google::protobuf::EnumValueOptions::MergeFrom(google::protobuf::EnumValueOptions *this, const google::protobuf::Message *a2, google::protobuf::Message *a3)
{
  if (*(void (***)(google::protobuf::EnumValueOptions *__hidden))a2 == &off_1E1BF7BF8)
    google::protobuf::EnumValueOptions::MergeFrom(this, a2);
  else
    google::protobuf::internal::ReflectionOps::Merge(a2, this, a3);
}

void google::protobuf::EnumValueOptions::CopyFrom(uint64_t **this, uint64_t **a2)
{
  google::protobuf::Message *v4;

  if (a2 != this)
  {
    google::protobuf::EnumValueOptions::Clear(this);
    google::protobuf::EnumValueOptions::MergeFrom((google::protobuf::EnumValueOptions *)this, (const google::protobuf::Message *)a2, v4);
  }
}

uint64_t google::protobuf::EnumValueOptions::GetMetadata(google::protobuf::EnumValueOptions *this)
{
  google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0);
  return off_1EDF46FE8[36];
}

google::protobuf::ServiceOptions *google::protobuf::ServiceOptions::ServiceOptions(google::protobuf::ServiceOptions *this, Arena *a2)
{
  *((_QWORD *)this + 2) = a2;
  *(_QWORD *)this = &off_1E1BF79E8;
  *((_QWORD *)this + 1) = a2;
  *((_DWORD *)this + 6) = 0;
  *((_QWORD *)this + 6) = a2;
  *((_QWORD *)this + 4) = 0;
  *((_QWORD *)this + 5) = 0;
  *((_QWORD *)this + 7) = 0;
  *((_QWORD *)this + 8) = 0;
  if (atomic_load(scc_info_ServiceOptions_google_2fprotobuf_2fdescriptor_2eproto))
    google::protobuf::internal::InitSCCImpl(scc_info_ServiceOptions_google_2fprotobuf_2fdescriptor_2eproto);
  *((_BYTE *)this + 72) = 0;
  return this;
}

void sub_1888B4330(_Unwind_Exception *a1)
{
  google::protobuf::internal::ExtensionSet *v1;
  _QWORD *v2;

  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::TypeHandler>(v2);
  google::protobuf::internal::ExtensionSet::~ExtensionSet(v1);
  _Unwind_Resume(a1);
}

void google::protobuf::ServiceOptions::~ServiceOptions(google::protobuf::ServiceOptions *this)
{
  google::protobuf::internal::InternalMetadata::Delete<google::protobuf::UnknownFieldSet>((uint64_t *)this + 1);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::TypeHandler>((_QWORD *)this + 6);
  google::protobuf::internal::ExtensionSet::~ExtensionSet((google::protobuf::ServiceOptions *)((char *)this + 16));
}

{
  google::protobuf::ServiceOptions::~ServiceOptions(this);
  JUMPOUT(0x18D76437CLL);
}

uint64_t google::protobuf::ServiceOptions::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 44) = a2;
  return this;
}

google::protobuf::internal *google::protobuf::ServiceOptions::_InternalParse(uint64_t a1, google::protobuf::internal *a2, int32x2_t *this)
{
  int v5;
  google::protobuf::internal *v6;
  _QWORD *v8;
  unsigned int v9;
  BOOL v11;
  unint64_t v12;
  google::protobuf::internal *v13;
  google::protobuf::internal *v14;
  google::protobuf::internal *v15;
  int *v16;
  int v17;
  int v18;
  google::protobuf::UninterpretedOption *v19;
  uint64_t v20;
  uint64_t v21;
  google::protobuf::internal *v22;
  uint64_t v23;
  int v24;
  google::protobuf::UnknownFieldSet *v25;
  uint64_t v26;
  uint64_t v27;
  google::protobuf::internal *v28;
  google::protobuf::UnknownFieldSet *v29;

  v28 = a2;
  v5 = 0;
  if ((google::protobuf::internal::EpsCopyInputStream::DoneWithCheck((google::protobuf::internal::EpsCopyInputStream *)this, (const char **)&v28, this[11].i32[1]) & 1) == 0)
  {
    v8 = (_QWORD *)(a1 + 8);
    while (1)
    {
      v6 = (google::protobuf::internal *)((char *)v28 + 1);
      v9 = *(unsigned __int8 *)v28;
      if (*(char *)v28 < 0)
      {
        v9 = v9 + (*(unsigned __int8 *)v6 << 7) - 128;
        if (*(char *)v6 < 0)
        {
          v6 = (google::protobuf::internal *)((char *)v28 + 3);
          v26 = -21;
          while (1)
          {
            v9 += (*((unsigned __int8 *)v6 - 1) - 1) << (v26 + 35);
            if ((*((char *)v6 - 1) & 0x80000000) == 0)
              break;
            v6 = (google::protobuf::internal *)((char *)v6 + 1);
            v26 += 7;
            if (!v26)
              goto LABEL_54;
          }
        }
        else
        {
          v6 = (google::protobuf::internal *)((char *)v28 + 2);
        }
      }
      v28 = v6;
      if (v9 >> 3 == 999)
        break;
      if (v9 >> 3 == 33 && v9 == 8)
      {
        v22 = (google::protobuf::internal *)((char *)v6 + 1);
        v23 = *(unsigned __int8 *)v6;
        if (*(char *)v6 < 0)
        {
          v24 = *(unsigned __int8 *)v22;
          v23 = (v23 + (v24 << 7) - 128);
          if ((v24 & 0x80) != 0)
          {
            v22 = (google::protobuf::internal *)((char *)v6 + 3);
            v27 = 14;
            while (1)
            {
              v23 += (*((unsigned __int8 *)v22 - 1) - 1) << v27;
              if ((*((char *)v22 - 1) & 0x80000000) == 0)
                break;
              v22 = (google::protobuf::internal *)((char *)v22 + 1);
              v27 += 7;
              if (v27 == 70)
              {
                v6 = 0;
                *(_BYTE *)(a1 + 72) = 0;
                v5 = 1;
                goto LABEL_3;
              }
            }
          }
          else
          {
            v22 = (google::protobuf::internal *)((char *)v6 + 2);
          }
        }
        v28 = v22;
        *(_BYTE *)(a1 + 72) = v23 != 0;
        v5 = 1;
        goto LABEL_42;
      }
LABEL_13:
      if (v9)
        v11 = (v9 & 7) == 4;
      else
        v11 = 1;
      if (v11)
      {
        this[10].i32[0] = v9 - 1;
        goto LABEL_3;
      }
      v12 = v9;
      if (v9 >> 6 < 0x7D)
      {
        if ((*v8 & 1) != 0)
        {
          v25 = (google::protobuf::UnknownFieldSet *)((*v8 & 0xFFFFFFFFFFFFFFFELL) + 8);
        }
        else
        {
          v25 = (google::protobuf::UnknownFieldSet *)google::protobuf::internal::InternalMetadata::mutable_unknown_fields_slow<google::protobuf::UnknownFieldSet>((uint64_t *)(a1 + 8));
          v6 = v28;
        }
        v29 = v25;
        v13 = google::protobuf::internal::FieldParser<google::protobuf::internal::UnknownFieldParserHelper>(v12, &v29, (uint64_t *)v6, this);
      }
      else
      {
        v13 = (google::protobuf::internal *)google::protobuf::internal::ExtensionSet::ParseField((google::protobuf::internal::ExtensionSet *)(a1 + 16), v9, (unsigned __int8 *)v6, (uint64_t)&google::protobuf::_ServiceOptions_default_instance_, (uint64_t *)(a1 + 8), this);
      }
      v28 = v13;
      if (!v13)
      {
LABEL_54:
        v6 = 0;
        goto LABEL_3;
      }
LABEL_42:
      if (google::protobuf::internal::EpsCopyInputStream::DoneWithCheck((google::protobuf::internal::EpsCopyInputStream *)this, (const char **)&v28, this[11].i32[1]))goto LABEL_2;
    }
    if (v9 != 58)
      goto LABEL_13;
    v14 = (google::protobuf::internal *)((char *)v6 - 2);
    while (1)
    {
      v15 = (google::protobuf::internal *)((char *)v14 + 2);
      v28 = (google::protobuf::internal *)((char *)v14 + 2);
      v16 = *(int **)(a1 + 64);
      if (!v16)
        break;
      v17 = *(_DWORD *)(a1 + 56);
      v18 = *v16;
      if (v17 >= *v16)
      {
        if (v18 == *(_DWORD *)(a1 + 60))
        {
LABEL_26:
          if (v17 <= v18)
          {
            google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 48), v18 - v17 + 1);
            v16 = *(int **)(a1 + 64);
          }
          v18 = *v16;
        }
        *v16 = v18 + 1;
        v19 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::UninterpretedOption>(*(google::protobuf::internal::ArenaImpl **)(a1 + 48));
        v20 = *(_QWORD *)(a1 + 64);
        v21 = *(int *)(a1 + 56);
        *(_DWORD *)(a1 + 56) = v21 + 1;
        *(_QWORD *)(v20 + 8 * v21 + 8) = v19;
        v15 = v28;
        goto LABEL_30;
      }
      *(_DWORD *)(a1 + 56) = v17 + 1;
      v19 = *(google::protobuf::UninterpretedOption **)&v16[2 * v17 + 2];
LABEL_30:
      v14 = google::protobuf::internal::ParseContext::ParseMessage<google::protobuf::UninterpretedOption>((google::protobuf::internal::EpsCopyInputStream *)this, (uint64_t)v19, v15);
      v28 = v14;
      if (!v14)
        goto LABEL_54;
      if (*(_QWORD *)this <= (unint64_t)v14 || *(_WORD *)v14 != 16058)
        goto LABEL_42;
    }
    v17 = *(_DWORD *)(a1 + 56);
    v18 = *(_DWORD *)(a1 + 60);
    goto LABEL_26;
  }
LABEL_2:
  v6 = v28;
LABEL_3:
  *(_DWORD *)(a1 + 40) |= v5;
  return v6;
}

const google::protobuf::UnknownFieldSet *google::protobuf::ServiceOptions::_InternalSerialize(google::protobuf::ServiceOptions *this, unsigned __int8 *a2, google::protobuf::io::EpsCopyOutputStream *a3)
{
  unsigned __int8 *v4;
  unsigned __int8 v6;
  int v7;
  int i;
  google::protobuf::UninterpretedOption *v9;
  unsigned int v10;
  unsigned __int8 *v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  const google::protobuf::UnknownFieldSet *result;
  google::protobuf::io::EpsCopyOutputStream *v16;
  uint64_t v17;

  v4 = a2;
  if ((*((_BYTE *)this + 40) & 1) != 0)
  {
    if (*(_QWORD *)a3 <= (unint64_t)a2)
      v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
    v6 = *((_BYTE *)this + 72);
    *(_WORD *)v4 = 648;
    v4[2] = v6;
    v4 += 3;
  }
  v7 = *((_DWORD *)this + 14);
  if (v7)
  {
    for (i = 0; i != v7; ++i)
    {
      if (*(_QWORD *)a3 <= (unint64_t)v4)
        v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
      v9 = *(google::protobuf::UninterpretedOption **)(*((_QWORD *)this + 8) + 8 * i + 8);
      *(_WORD *)v4 = 16058;
      v10 = *((_DWORD *)v9 + 5);
      if (v10 > 0x7F)
      {
        v4[2] = v10 | 0x80;
        v12 = v10 >> 7;
        if (v10 >> 14)
        {
          v11 = v4 + 4;
          do
          {
            *(v11 - 1) = v12 | 0x80;
            v13 = v12 >> 7;
            ++v11;
            v14 = v12 >> 14;
            v12 >>= 7;
          }
          while (v14);
          *(v11 - 1) = v13;
        }
        else
        {
          v4[3] = v12;
          v11 = v4 + 4;
        }
      }
      else
      {
        v4[2] = v10;
        v11 = v4 + 3;
      }
      v4 = (unsigned __int8 *)google::protobuf::UninterpretedOption::_InternalSerialize(v9, v11, a3);
    }
  }
  result = (const google::protobuf::UnknownFieldSet *)google::protobuf::internal::ExtensionSet::_InternalSerialize((google::protobuf::ServiceOptions *)((char *)this + 16), 1000, 0x20000000, v4, a3);
  v17 = *((_QWORD *)this + 1);
  if ((v17 & 1) != 0)
    return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v17 & 0xFFFFFFFFFFFFFFFELL) + 8), result, a3, v16);
  return result;
}

const InternalMetadata *google::protobuf::ServiceOptions::ByteSizeLong(google::protobuf::ServiceOptions *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  CachedSize *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  google::protobuf::UninterpretedOption **v9;
  uint64_t v10;
  google::protobuf::UninterpretedOption *v11;
  const InternalMetadata *v12;
  const InternalMetadata *v13;

  v2 = google::protobuf::internal::ExtensionSet::ByteSize((google::protobuf::ServiceOptions *)((char *)this + 16));
  v6 = *((int *)this + 14);
  v7 = v2 + 2 * v6;
  v8 = *((_QWORD *)this + 8);
  if (v8)
    v9 = (google::protobuf::UninterpretedOption **)(v8 + 8);
  else
    v9 = 0;
  if ((_DWORD)v6)
  {
    v10 = 8 * v6;
    do
    {
      v11 = *v9++;
      v12 = google::protobuf::UninterpretedOption::ByteSizeLong(v11, v3, v4, v5);
      v7 += (uint64_t)v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6);
      v10 -= 8;
    }
    while (v10);
  }
  if ((*((_BYTE *)this + 40) & 1) != 0)
    v13 = (const InternalMetadata *)(v7 + 3);
  else
    v13 = (const InternalMetadata *)v7;
  if ((*((_BYTE *)this + 8) & 1) != 0)
    return (const InternalMetadata *)google::protobuf::internal::ComputeUnknownFieldsSize((google::protobuf::ServiceOptions *)((char *)this + 8), v13, (_DWORD *)this + 11, v5);
  *((_DWORD *)this + 11) = (_DWORD)v13;
  return v13;
}

void google::protobuf::ServiceOptions::MergeFrom(google::protobuf::ServiceOptions *this, const google::protobuf::Message *a2, google::protobuf::Message *a3)
{
  if (*(void (***)(google::protobuf::ServiceOptions *__hidden))a2 == &off_1E1BF79E8)
    google::protobuf::EnumValueOptions::MergeFrom(this, a2);
  else
    google::protobuf::internal::ReflectionOps::Merge(a2, this, a3);
}

void google::protobuf::ServiceOptions::CopyFrom(uint64_t **this, uint64_t **a2)
{
  google::protobuf::Message *v4;

  if (a2 != this)
  {
    google::protobuf::ServiceOptions::Clear(this);
    google::protobuf::ServiceOptions::MergeFrom((google::protobuf::ServiceOptions *)this, (const google::protobuf::Message *)a2, v4);
  }
}

uint64_t google::protobuf::ServiceOptions::GetMetadata(google::protobuf::ServiceOptions *this)
{
  google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0);
  return off_1EDF46FE8[38];
}

google::protobuf::MethodOptions *google::protobuf::MethodOptions::MethodOptions(google::protobuf::MethodOptions *this, Arena *a2)
{
  *((_QWORD *)this + 2) = a2;
  *(_QWORD *)this = &off_1E1BF77B0;
  *((_QWORD *)this + 1) = a2;
  *((_DWORD *)this + 6) = 0;
  *((_QWORD *)this + 6) = a2;
  *((_QWORD *)this + 4) = 0;
  *((_QWORD *)this + 5) = 0;
  *((_QWORD *)this + 7) = 0;
  *((_QWORD *)this + 8) = 0;
  if (atomic_load(scc_info_MethodOptions_google_2fprotobuf_2fdescriptor_2eproto))
    google::protobuf::internal::InitSCCImpl(scc_info_MethodOptions_google_2fprotobuf_2fdescriptor_2eproto);
  *((_QWORD *)this + 9) = 0;
  return this;
}

void sub_1888B49F8(_Unwind_Exception *a1)
{
  google::protobuf::internal::ExtensionSet *v1;
  _QWORD *v2;

  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::TypeHandler>(v2);
  google::protobuf::internal::ExtensionSet::~ExtensionSet(v1);
  _Unwind_Resume(a1);
}

void google::protobuf::MethodOptions::~MethodOptions(google::protobuf::MethodOptions *this)
{
  google::protobuf::internal::InternalMetadata::Delete<google::protobuf::UnknownFieldSet>((uint64_t *)this + 1);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::TypeHandler>((_QWORD *)this + 6);
  google::protobuf::internal::ExtensionSet::~ExtensionSet((google::protobuf::MethodOptions *)((char *)this + 16));
}

{
  google::protobuf::MethodOptions::~MethodOptions(this);
  JUMPOUT(0x18D76437CLL);
}

uint64_t google::protobuf::MethodOptions::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 44) = a2;
  return this;
}

google::protobuf::internal *google::protobuf::MethodOptions::_InternalParse(uint64_t a1, google::protobuf::internal *a2, int32x2_t *this)
{
  int v5;
  google::protobuf::internal *v6;
  _QWORD *v8;
  unsigned int v9;
  unsigned int v10;
  BOOL v12;
  unint64_t v13;
  google::protobuf::internal *v14;
  google::protobuf::internal *v15;
  google::protobuf::internal *v16;
  int *v17;
  int v18;
  int v19;
  google::protobuf::UninterpretedOption *v20;
  uint64_t v21;
  uint64_t v22;
  google::protobuf::internal *v23;
  uint64_t v24;
  int v25;
  google::protobuf::internal *v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  google::protobuf::UnknownFieldSet *v30;
  uint64_t v31;
  uint64_t v32;
  google::protobuf::UnknownFieldSet *v33;
  uint64_t v34;
  google::protobuf::internal *v35;
  google::protobuf::UnknownFieldSet *v36;

  v35 = a2;
  v5 = 0;
  if ((google::protobuf::internal::EpsCopyInputStream::DoneWithCheck((google::protobuf::internal::EpsCopyInputStream *)this, (const char **)&v35, this[11].i32[1]) & 1) == 0)
  {
    v8 = (_QWORD *)(a1 + 8);
    while (1)
    {
      v6 = (google::protobuf::internal *)((char *)v35 + 1);
      v9 = *(unsigned __int8 *)v35;
      if (*(char *)v35 < 0)
      {
        v9 = v9 + (*(unsigned __int8 *)v6 << 7) - 128;
        if (*(char *)v6 < 0)
        {
          v6 = (google::protobuf::internal *)((char *)v35 + 3);
          v29 = -21;
          while (1)
          {
            v9 += (*((unsigned __int8 *)v6 - 1) - 1) << (v29 + 35);
            if ((*((char *)v6 - 1) & 0x80000000) == 0)
              break;
            v6 = (google::protobuf::internal *)((char *)v6 + 1);
            v29 += 7;
            if (!v29)
              goto LABEL_69;
          }
        }
        else
        {
          v6 = (google::protobuf::internal *)((char *)v35 + 2);
        }
      }
      v35 = v6;
      v10 = v9 >> 3;
      if (v9 >> 3 == 999)
        break;
      if (v10 == 34)
      {
        if (v9 == 16)
        {
          v23 = (google::protobuf::internal *)((char *)v6 + 1);
          v24 = *(unsigned __int8 *)v6;
          if (*(char *)v6 < 0)
          {
            v25 = *(unsigned __int8 *)v23;
            v24 = (v24 + (v25 << 7) - 128);
            if ((v25 & 0x80) != 0)
            {
              v23 = (google::protobuf::internal *)((char *)v6 + 3);
              v31 = 14;
              while (1)
              {
                v24 += (*((unsigned __int8 *)v23 - 1) - 1) << v31;
                if ((*((char *)v23 - 1) & 0x80000000) == 0)
                  break;
                v23 = (google::protobuf::internal *)((char *)v23 + 1);
                v31 += 7;
                if (v31 == 70)
                  goto LABEL_69;
              }
            }
            else
            {
              v23 = (google::protobuf::internal *)((char *)v6 + 2);
            }
          }
          v35 = v23;
          if (v24 > 2)
          {
            if ((*v8 & 1) != 0)
            {
              v33 = (google::protobuf::UnknownFieldSet *)((*v8 & 0xFFFFFFFFFFFFFFFELL) + 8);
            }
            else
            {
              v34 = v24;
              v33 = (google::protobuf::UnknownFieldSet *)google::protobuf::internal::InternalMetadata::mutable_unknown_fields_slow<google::protobuf::UnknownFieldSet>((uint64_t *)(a1 + 8));
              v24 = v34;
            }
            google::protobuf::UnknownFieldSet::AddVarint(v33, 0x22u, v24);
          }
          else
          {
            *(_DWORD *)(a1 + 40) |= 2u;
            *(_DWORD *)(a1 + 76) = v24;
          }
          goto LABEL_53;
        }
      }
      else if (v10 == 33 && v9 == 8)
      {
        v26 = (google::protobuf::internal *)((char *)v6 + 1);
        v27 = *(unsigned __int8 *)v6;
        if (*(char *)v6 < 0)
        {
          v28 = *(unsigned __int8 *)v26;
          v27 = (v27 + (v28 << 7) - 128);
          if ((v28 & 0x80) != 0)
          {
            v26 = (google::protobuf::internal *)((char *)v6 + 3);
            v32 = 14;
            while (1)
            {
              v27 += (*((unsigned __int8 *)v26 - 1) - 1) << v32;
              if ((*((char *)v26 - 1) & 0x80000000) == 0)
                break;
              v26 = (google::protobuf::internal *)((char *)v26 + 1);
              v32 += 7;
              if (v32 == 70)
              {
                v6 = 0;
                *(_BYTE *)(a1 + 72) = 0;
                v5 = 1;
                goto LABEL_3;
              }
            }
          }
          else
          {
            v26 = (google::protobuf::internal *)((char *)v6 + 2);
          }
        }
        v35 = v26;
        *(_BYTE *)(a1 + 72) = v27 != 0;
        v5 = 1;
        goto LABEL_53;
      }
LABEL_14:
      if (v9)
        v12 = (v9 & 7) == 4;
      else
        v12 = 1;
      if (v12)
      {
        this[10].i32[0] = v9 - 1;
        goto LABEL_3;
      }
      v13 = v9;
      if (v9 >> 6 < 0x7D)
      {
        if ((*v8 & 1) != 0)
        {
          v30 = (google::protobuf::UnknownFieldSet *)((*v8 & 0xFFFFFFFFFFFFFFFELL) + 8);
        }
        else
        {
          v30 = (google::protobuf::UnknownFieldSet *)google::protobuf::internal::InternalMetadata::mutable_unknown_fields_slow<google::protobuf::UnknownFieldSet>((uint64_t *)(a1 + 8));
          v6 = v35;
        }
        v36 = v30;
        v14 = google::protobuf::internal::FieldParser<google::protobuf::internal::UnknownFieldParserHelper>(v13, &v36, (uint64_t *)v6, this);
      }
      else
      {
        v14 = (google::protobuf::internal *)google::protobuf::internal::ExtensionSet::ParseField((google::protobuf::internal::ExtensionSet *)(a1 + 16), v9, (unsigned __int8 *)v6, (uint64_t)&google::protobuf::_MethodOptions_default_instance_, (uint64_t *)(a1 + 8), this);
      }
      v35 = v14;
      if (!v14)
      {
LABEL_69:
        v6 = 0;
        goto LABEL_3;
      }
LABEL_53:
      if (google::protobuf::internal::EpsCopyInputStream::DoneWithCheck((google::protobuf::internal::EpsCopyInputStream *)this, (const char **)&v35, this[11].i32[1]))goto LABEL_2;
    }
    if (v9 != 58)
      goto LABEL_14;
    v15 = (google::protobuf::internal *)((char *)v6 - 2);
    while (1)
    {
      v16 = (google::protobuf::internal *)((char *)v15 + 2);
      v35 = (google::protobuf::internal *)((char *)v15 + 2);
      v17 = *(int **)(a1 + 64);
      if (!v17)
        break;
      v18 = *(_DWORD *)(a1 + 56);
      v19 = *v17;
      if (v18 >= *v17)
      {
        if (v19 == *(_DWORD *)(a1 + 60))
        {
LABEL_27:
          if (v18 <= v19)
          {
            google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 48), v19 - v18 + 1);
            v17 = *(int **)(a1 + 64);
          }
          v19 = *v17;
        }
        *v17 = v19 + 1;
        v20 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::UninterpretedOption>(*(google::protobuf::internal::ArenaImpl **)(a1 + 48));
        v21 = *(_QWORD *)(a1 + 64);
        v22 = *(int *)(a1 + 56);
        *(_DWORD *)(a1 + 56) = v22 + 1;
        *(_QWORD *)(v21 + 8 * v22 + 8) = v20;
        v16 = v35;
        goto LABEL_31;
      }
      *(_DWORD *)(a1 + 56) = v18 + 1;
      v20 = *(google::protobuf::UninterpretedOption **)&v17[2 * v18 + 2];
LABEL_31:
      v15 = google::protobuf::internal::ParseContext::ParseMessage<google::protobuf::UninterpretedOption>((google::protobuf::internal::EpsCopyInputStream *)this, (uint64_t)v20, v16);
      v35 = v15;
      if (!v15)
        goto LABEL_69;
      if (*(_QWORD *)this <= (unint64_t)v15 || *(_WORD *)v15 != 16058)
        goto LABEL_53;
    }
    v18 = *(_DWORD *)(a1 + 56);
    v19 = *(_DWORD *)(a1 + 60);
    goto LABEL_27;
  }
LABEL_2:
  v6 = v35;
LABEL_3:
  *(_DWORD *)(a1 + 40) |= v5;
  return v6;
}

const google::protobuf::UnknownFieldSet *google::protobuf::MethodOptions::_InternalSerialize(google::protobuf::MethodOptions *this, unsigned __int8 *a2, google::protobuf::io::EpsCopyOutputStream *a3)
{
  unsigned __int8 *v4;
  int v6;
  unsigned __int8 v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  int v12;
  int i;
  google::protobuf::UninterpretedOption *v14;
  unsigned int v15;
  unsigned __int8 *v16;
  unsigned int v17;
  unsigned int v18;
  unsigned int v19;
  const google::protobuf::UnknownFieldSet *result;
  google::protobuf::io::EpsCopyOutputStream *v21;
  uint64_t v22;

  v4 = a2;
  v6 = *((_DWORD *)this + 10);
  if ((v6 & 1) != 0)
  {
    if (*(_QWORD *)a3 <= (unint64_t)a2)
      v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
    v7 = *((_BYTE *)this + 72);
    *(_WORD *)v4 = 648;
    v4[2] = v7;
    v4 += 3;
  }
  if ((v6 & 2) != 0)
  {
    if (*(_QWORD *)a3 <= (unint64_t)v4)
      v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
    v8 = *((int *)this + 19);
    *(_WORD *)v4 = 656;
    if (v8 > 0x7F)
    {
      v4[2] = v8 | 0x80;
      v9 = v8 >> 7;
      if (v8 >> 14)
      {
        v4 += 4;
        do
        {
          *(v4 - 1) = v9 | 0x80;
          v10 = v9 >> 7;
          ++v4;
          v11 = v9 >> 14;
          v9 >>= 7;
        }
        while (v11);
        *(v4 - 1) = v10;
      }
      else
      {
        v4[3] = v9;
        v4 += 4;
      }
    }
    else
    {
      v4[2] = v8;
      v4 += 3;
    }
  }
  v12 = *((_DWORD *)this + 14);
  if (v12)
  {
    for (i = 0; i != v12; ++i)
    {
      if (*(_QWORD *)a3 <= (unint64_t)v4)
        v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
      v14 = *(google::protobuf::UninterpretedOption **)(*((_QWORD *)this + 8) + 8 * i + 8);
      *(_WORD *)v4 = 16058;
      v15 = *((_DWORD *)v14 + 5);
      if (v15 > 0x7F)
      {
        v4[2] = v15 | 0x80;
        v17 = v15 >> 7;
        if (v15 >> 14)
        {
          v16 = v4 + 4;
          do
          {
            *(v16 - 1) = v17 | 0x80;
            v18 = v17 >> 7;
            ++v16;
            v19 = v17 >> 14;
            v17 >>= 7;
          }
          while (v19);
          *(v16 - 1) = v18;
        }
        else
        {
          v4[3] = v17;
          v16 = v4 + 4;
        }
      }
      else
      {
        v4[2] = v15;
        v16 = v4 + 3;
      }
      v4 = (unsigned __int8 *)google::protobuf::UninterpretedOption::_InternalSerialize(v14, v16, a3);
    }
  }
  result = (const google::protobuf::UnknownFieldSet *)google::protobuf::internal::ExtensionSet::_InternalSerialize((google::protobuf::MethodOptions *)((char *)this + 16), 1000, 0x20000000, v4, a3);
  v22 = *((_QWORD *)this + 1);
  if ((v22 & 1) != 0)
    return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v22 & 0xFFFFFFFFFFFFFFFELL) + 8), result, a3, v21);
  return result;
}

const InternalMetadata *google::protobuf::MethodOptions::ByteSizeLong(google::protobuf::MethodOptions *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  CachedSize *v5;
  uint64_t v6;
  const InternalMetadata *v7;
  uint64_t v8;
  google::protobuf::UninterpretedOption **v9;
  uint64_t v10;
  google::protobuf::UninterpretedOption *v11;
  const InternalMetadata *v12;
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;

  v2 = google::protobuf::internal::ExtensionSet::ByteSize((google::protobuf::MethodOptions *)((char *)this + 16));
  v6 = *((int *)this + 14);
  v7 = (const InternalMetadata *)(v2 + 2 * v6);
  v8 = *((_QWORD *)this + 8);
  if (v8)
    v9 = (google::protobuf::UninterpretedOption **)(v8 + 8);
  else
    v9 = 0;
  if ((_DWORD)v6)
  {
    v10 = 8 * v6;
    do
    {
      v11 = *v9++;
      v12 = google::protobuf::UninterpretedOption::ByteSizeLong(v11, v3, v4, v5);
      v7 = (const InternalMetadata *)((char *)v7 + (_QWORD)v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6));
      v10 -= 8;
    }
    while (v10);
  }
  v13 = *((_DWORD *)this + 10);
  if ((v13 & 3) != 0)
  {
    if ((v13 & 1) != 0)
      v7 = (const InternalMetadata *)((char *)v7 + 3);
    if ((v13 & 2) != 0)
    {
      v14 = *((_DWORD *)this + 19);
      v15 = ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 2;
      if (v14 >= 0)
        v16 = v15;
      else
        v16 = 12;
      v7 = (const InternalMetadata *)((char *)v7 + v16);
    }
  }
  if ((*((_BYTE *)this + 8) & 1) != 0)
    return (const InternalMetadata *)google::protobuf::internal::ComputeUnknownFieldsSize((google::protobuf::MethodOptions *)((char *)this + 8), v7, (_DWORD *)this + 11, v5);
  *((_DWORD *)this + 11) = (_DWORD)v7;
  return v7;
}

void google::protobuf::MethodOptions::MergeFrom(google::protobuf::MethodOptions *this, const google::protobuf::Message *a2, google::protobuf::Message *a3)
{
  if (*(void (***)(google::protobuf::MethodOptions *__hidden))a2 == &off_1E1BF77B0)
    google::protobuf::MethodOptions::MergeFrom(this, a2);
  else
    google::protobuf::internal::ReflectionOps::Merge(a2, this, a3);
}

void google::protobuf::MethodOptions::CopyFrom(uint64_t **this, uint64_t **a2)
{
  google::protobuf::Message *v4;

  if (a2 != this)
  {
    google::protobuf::MethodOptions::Clear(this);
    google::protobuf::MethodOptions::MergeFrom((google::protobuf::MethodOptions *)this, (const google::protobuf::Message *)a2, v4);
  }
}

uint64_t google::protobuf::MethodOptions::GetMetadata(google::protobuf::MethodOptions *this)
{
  google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0);
  return off_1EDF46FE8[40];
}

void google::protobuf::UninterpretedOption_NamePart::~UninterpretedOption_NamePart(google::protobuf::UninterpretedOption_NamePart *this)
{
  uint64_t v2;

  v2 = *((_QWORD *)this + 3);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v2 + 23) < 0)
      operator delete(*(void **)v2);
    MEMORY[0x18D76437C](v2, 0x1012C40EC159624);
  }
  google::protobuf::internal::InternalMetadata::Delete<google::protobuf::UnknownFieldSet>((uint64_t *)this + 1);
}

{
  google::protobuf::UninterpretedOption_NamePart::~UninterpretedOption_NamePart(this);
  JUMPOUT(0x18D76437CLL);
}

uint64_t google::protobuf::UninterpretedOption_NamePart::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 20) = a2;
  return this;
}

google::protobuf::UnknownFieldSet *google::protobuf::UninterpretedOption_NamePart::Clear(google::protobuf::UninterpretedOption_NamePart *this)
{
  unint64_t v1;
  google::protobuf::UnknownFieldSet *result;
  char v3;

  if ((*((_BYTE *)this + 16) & 1) != 0)
  {
    v1 = *((_QWORD *)this + 3) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v1 + 23) < 0)
    {
      **(_BYTE **)v1 = 0;
      *(_QWORD *)(v1 + 8) = 0;
    }
    else
    {
      *(_BYTE *)v1 = 0;
      *(_BYTE *)(v1 + 23) = 0;
    }
  }
  v3 = *((_BYTE *)this + 8);
  result = (google::protobuf::UninterpretedOption_NamePart *)((char *)this + 8);
  *((_BYTE *)result + 24) = 0;
  *((_DWORD *)result + 2) = 0;
  if ((v3 & 1) != 0)
    return google::protobuf::internal::InternalMetadata::DoClear<google::protobuf::UnknownFieldSet>((uint64_t *)result);
  return result;
}

google::protobuf::internal *google::protobuf::UninterpretedOption_NamePart::_InternalParse(uint64_t a1, google::protobuf::internal *a2, int32x2_t *this)
{
  int v5;
  google::protobuf::internal *v6;
  _QWORD *v8;
  std::string **v9;
  unsigned int v10;
  BOOL v12;
  google::protobuf::UnknownFieldSet *v13;
  google::protobuf::internal *v14;
  google::protobuf::internal *v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  google::protobuf::internal::ArenaImpl *v19;
  std::string *v20;
  uint64_t v21;
  uint64_t v22;
  google::protobuf::internal *v23;
  google::protobuf::UnknownFieldSet *v24;

  v23 = a2;
  v5 = 0;
  if ((google::protobuf::internal::EpsCopyInputStream::DoneWithCheck((google::protobuf::internal::EpsCopyInputStream *)this, (const char **)&v23, this[11].i32[1]) & 1) == 0)
  {
    v8 = (_QWORD *)(a1 + 8);
    v9 = (std::string **)(a1 + 24);
    do
    {
      v6 = (google::protobuf::internal *)((char *)v23 + 1);
      v10 = *(unsigned __int8 *)v23;
      if (*(char *)v23 < 0)
      {
        v10 = v10 + (*(unsigned __int8 *)v6 << 7) - 128;
        if (*(char *)v6 < 0)
        {
          v6 = (google::protobuf::internal *)((char *)v23 + 3);
          v21 = -21;
          while (1)
          {
            v10 += (*((unsigned __int8 *)v6 - 1) - 1) << (v21 + 35);
            if ((*((char *)v6 - 1) & 0x80000000) == 0)
              break;
            v6 = (google::protobuf::internal *)((char *)v6 + 1);
            v21 += 7;
            if (!v21)
              goto LABEL_43;
          }
        }
        else
        {
          v6 = (google::protobuf::internal *)((char *)v23 + 2);
        }
      }
      v23 = v6;
      if (v10 >> 3 == 2)
      {
        if (v10 == 16)
        {
          v5 |= 2u;
          v15 = (google::protobuf::internal *)((char *)v6 + 1);
          v16 = *(unsigned __int8 *)v6;
          if (*(char *)v6 < 0)
          {
            v17 = *(unsigned __int8 *)v15;
            v16 = (v16 + (v17 << 7) - 128);
            if ((v17 & 0x80) != 0)
            {
              v15 = (google::protobuf::internal *)((char *)v6 + 3);
              v22 = 14;
              while (1)
              {
                v16 += (*((unsigned __int8 *)v15 - 1) - 1) << v22;
                if ((*((char *)v15 - 1) & 0x80000000) == 0)
                  break;
                v15 = (google::protobuf::internal *)((char *)v15 + 1);
                v22 += 7;
                if (v22 == 70)
                {
                  v6 = 0;
                  *(_BYTE *)(a1 + 32) = 0;
                  goto LABEL_3;
                }
              }
            }
            else
            {
              v15 = (google::protobuf::internal *)((char *)v6 + 2);
            }
          }
          v23 = v15;
          *(_BYTE *)(a1 + 32) = v16 != 0;
          continue;
        }
      }
      else if (v10 >> 3 == 1 && v10 == 10)
      {
        *(_DWORD *)(a1 + 16) |= 1u;
        v18 = *(_QWORD *)(a1 + 8);
        v19 = (google::protobuf::internal::ArenaImpl *)(v18 & 0xFFFFFFFFFFFFFFFELL);
        if ((v18 & 1) != 0)
          v19 = *(google::protobuf::internal::ArenaImpl **)v19;
        v20 = *v9;
        if (*v9 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
        {
          v20 = (std::string *)google::protobuf::internal::ArenaStringPtr::MutableSlow<>((_QWORD *)(a1 + 24), v19);
          v6 = v23;
        }
        v14 = (google::protobuf::internal *)google::protobuf::internal::InlineGreedyStringParser(v20, (std::string::value_type *)v6, (uint64_t)this);
        goto LABEL_30;
      }
      if (v10)
        v12 = (v10 & 7) == 4;
      else
        v12 = 1;
      if (v12)
      {
        this[10].i32[0] = v10 - 1;
        goto LABEL_3;
      }
      if ((*v8 & 1) != 0)
      {
        v13 = (google::protobuf::UnknownFieldSet *)((*v8 & 0xFFFFFFFFFFFFFFFELL) + 8);
      }
      else
      {
        v13 = (google::protobuf::UnknownFieldSet *)google::protobuf::internal::InternalMetadata::mutable_unknown_fields_slow<google::protobuf::UnknownFieldSet>((uint64_t *)(a1 + 8));
        v6 = v23;
      }
      v24 = v13;
      v14 = google::protobuf::internal::FieldParser<google::protobuf::internal::UnknownFieldParserHelper>(v10, &v24, (uint64_t *)v6, this);
LABEL_30:
      v23 = v14;
      if (!v14)
      {
LABEL_43:
        v6 = 0;
        goto LABEL_3;
      }
    }
    while (!google::protobuf::internal::EpsCopyInputStream::DoneWithCheck((google::protobuf::internal::EpsCopyInputStream *)this, (const char **)&v23, this[11].i32[1]));
  }
  v6 = v23;
LABEL_3:
  *(_DWORD *)(a1 + 16) |= v5;
  return v6;
}

const google::protobuf::UnknownFieldSet *google::protobuf::UninterpretedOption_NamePart::_InternalSerialize(google::protobuf::UninterpretedOption_NamePart *this, unsigned __int8 *a2, google::protobuf::io::EpsCopyOutputStream *a3)
{
  unsigned __int8 *v4;
  int v6;
  unsigned __int8 v7;
  uint64_t v8;

  v4 = a2;
  v6 = *((_DWORD *)this + 4);
  if ((v6 & 1) != 0)
    v4 = google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 1, *((_QWORD *)this + 3) & 0xFFFFFFFFFFFFFFFELL, a2);
  if ((v6 & 2) != 0)
  {
    if (*(_QWORD *)a3 <= (unint64_t)v4)
      v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
    v7 = *((_BYTE *)this + 32);
    *v4 = 16;
    v4[1] = v7;
    v4 += 2;
  }
  v8 = *((_QWORD *)this + 1);
  if ((v8 & 1) != 0)
    return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v8 & 0xFFFFFFFFFFFFFFFELL) + 8), (const google::protobuf::UnknownFieldSet *)v4, a3, (google::protobuf::io::EpsCopyOutputStream *)v4);
  else
    return (const google::protobuf::UnknownFieldSet *)v4;
}

const InternalMetadata *google::protobuf::UninterpretedOption_NamePart::ByteSizeLong(google::protobuf::UninterpretedOption_NamePart *this, uint64_t a2, uint64_t a3, CachedSize *a4)
{
  int v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  const InternalMetadata *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = *((_DWORD *)this + 4);
  if ((~v4 & 3) != 0)
  {
    if ((v4 & 1) != 0)
    {
      v10 = *((_QWORD *)this + 3) & 0xFFFFFFFFFFFFFFFELL;
      v11 = *(unsigned __int8 *)(v10 + 23);
      v12 = *(_QWORD *)(v10 + 8);
      if ((v11 & 0x80u) == 0)
        v12 = v11;
      v9 = v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    else
    {
      v9 = 0;
    }
    if ((v4 & 2) != 0)
      v8 = (const InternalMetadata *)(v9 + 2);
    else
      v8 = (const InternalMetadata *)v9;
  }
  else
  {
    v5 = *((_QWORD *)this + 3) & 0xFFFFFFFFFFFFFFFELL;
    v6 = *(unsigned __int8 *)(v5 + 23);
    v7 = *(_QWORD *)(v5 + 8);
    if ((v6 & 0x80u) == 0)
      v7 = v6;
    v8 = (const InternalMetadata *)(v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 3);
  }
  if ((*((_BYTE *)this + 8) & 1) != 0)
    return (const InternalMetadata *)google::protobuf::internal::ComputeUnknownFieldsSize((google::protobuf::UninterpretedOption_NamePart *)((char *)this + 8), v8, (_DWORD *)this + 5, a4);
  *((_DWORD *)this + 5) = (_DWORD)v8;
  return v8;
}

void google::protobuf::UninterpretedOption_NamePart::MergeFrom(google::protobuf::UninterpretedOption_NamePart *this, const google::protobuf::Message *a2, google::protobuf::Message *a3)
{
  if (*(void (***)(google::protobuf::UninterpretedOption_NamePart *__hidden))a2 == &off_1E1BF8648)
    google::protobuf::UninterpretedOption_NamePart::MergeFrom(this, a2);
  else
    google::protobuf::internal::ReflectionOps::Merge(a2, this, a3);
}

void google::protobuf::UninterpretedOption_NamePart::MergeFrom(google::protobuf::UninterpretedOption_NamePart *this, const google::protobuf::UninterpretedOption_NamePart *a2)
{
  uint64_t v4;
  int v5;
  __int128 *v6;
  uint64_t v7;
  google::protobuf::internal::ArenaImpl *v8;

  v4 = *((_QWORD *)a2 + 1);
  if ((v4 & 1) != 0)
    google::protobuf::internal::InternalMetadata::DoMergeFrom<google::protobuf::UnknownFieldSet>((uint64_t *)this + 1, (const google::protobuf::UnknownFieldSet *)((v4 & 0xFFFFFFFFFFFFFFFELL) + 8));
  v5 = *((_DWORD *)a2 + 4);
  if ((v5 & 3) != 0)
  {
    if ((v5 & 1) != 0)
    {
      v6 = (__int128 *)(*((_QWORD *)a2 + 3) & 0xFFFFFFFFFFFFFFFELL);
      *((_DWORD *)this + 4) |= 1u;
      v7 = *((_QWORD *)this + 1);
      v8 = (google::protobuf::internal::ArenaImpl *)(v7 & 0xFFFFFFFFFFFFFFFELL);
      if ((v7 & 1) != 0)
        v8 = *(google::protobuf::internal::ArenaImpl **)v8;
      google::protobuf::internal::ArenaStringPtr::Set((std::string **)this + 3, (std::string *)&google::protobuf::internal::fixed_address_empty_string, v6, v8);
    }
    if ((v5 & 2) != 0)
      *((_BYTE *)this + 32) = *((_BYTE *)a2 + 32);
    *((_DWORD *)this + 4) |= v5;
  }
}

void google::protobuf::UninterpretedOption_NamePart::CopyFrom(google::protobuf::UninterpretedOption_NamePart *this, const google::protobuf::Message *a2)
{
  google::protobuf::Message *v4;

  if (a2 != this)
  {
    google::protobuf::UninterpretedOption_NamePart::Clear(this);
    google::protobuf::UninterpretedOption_NamePart::MergeFrom(this, a2, v4);
  }
}

BOOL google::protobuf::UninterpretedOption_NamePart::IsInitialized(google::protobuf::UninterpretedOption_NamePart *this)
{
  return (~*((_DWORD *)this + 4) & 3) == 0;
}

uint64_t google::protobuf::UninterpretedOption_NamePart::GetMetadata(google::protobuf::UninterpretedOption_NamePart *this)
{
  google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0);
  return off_1EDF46FE8[42];
}

google::protobuf::UninterpretedOption *google::protobuf::UninterpretedOption::UninterpretedOption(google::protobuf::UninterpretedOption *this, Arena *a2)
{
  *(_QWORD *)this = &off_1E1BF7FA8;
  *((_QWORD *)this + 1) = a2;
  *((_QWORD *)this + 3) = a2;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 4) = 0;
  *((_QWORD *)this + 5) = 0;
  if (atomic_load(scc_info_UninterpretedOption_google_2fprotobuf_2fdescriptor_2eproto))
    google::protobuf::internal::InitSCCImpl(scc_info_UninterpretedOption_google_2fprotobuf_2fdescriptor_2eproto);
  *((_QWORD *)this + 6) = &google::protobuf::internal::fixed_address_empty_string;
  *((_QWORD *)this + 7) = &google::protobuf::internal::fixed_address_empty_string;
  *((_QWORD *)this + 8) = &google::protobuf::internal::fixed_address_empty_string;
  *((_QWORD *)this + 9) = 0;
  *((_QWORD *)this + 10) = 0;
  *((_QWORD *)this + 11) = 0;
  return this;
}

void sub_1888B5834(_Unwind_Exception *a1)
{
  _QWORD *v1;

  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::TypeHandler>(v1);
  _Unwind_Resume(a1);
}

void google::protobuf::UninterpretedOption::~UninterpretedOption(google::protobuf::UninterpretedOption *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *((_QWORD *)this + 6);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v2 + 23) < 0)
      operator delete(*(void **)v2);
    MEMORY[0x18D76437C](v2, 0x1012C40EC159624);
  }
  v3 = *((_QWORD *)this + 7);
  if ((uint64_t *)v3 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v3 + 23) < 0)
      operator delete(*(void **)v3);
    MEMORY[0x18D76437C](v3, 0x1012C40EC159624);
  }
  v4 = *((_QWORD *)this + 8);
  if ((uint64_t *)v4 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v4 + 23) < 0)
      operator delete(*(void **)v4);
    MEMORY[0x18D76437C](v4, 0x1012C40EC159624);
  }
  google::protobuf::internal::InternalMetadata::Delete<google::protobuf::UnknownFieldSet>((uint64_t *)this + 1);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::TypeHandler>((_QWORD *)this + 3);
}

{
  google::protobuf::UninterpretedOption::~UninterpretedOption(this);
  JUMPOUT(0x18D76437CLL);
}

uint64_t google::protobuf::UninterpretedOption::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 20) = a2;
  return this;
}

google::protobuf::UnknownFieldSet *google::protobuf::UninterpretedOption::Clear(google::protobuf::UnknownFieldSet *this)
{
  uint64_t v1;
  uint64_t v2;
  google::protobuf::UninterpretedOption_NamePart **v3;
  google::protobuf::UninterpretedOption_NamePart *v4;
  int v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  char v10;

  v1 = (uint64_t)this;
  v2 = *((unsigned int *)this + 8);
  if ((int)v2 >= 1)
  {
    v3 = (google::protobuf::UninterpretedOption_NamePart **)(*((_QWORD *)this + 5) + 8);
    do
    {
      v4 = *v3++;
      this = google::protobuf::UninterpretedOption_NamePart::Clear(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  v5 = *(_DWORD *)(v1 + 16);
  if ((v5 & 7) != 0)
  {
    if ((v5 & 1) == 0)
    {
      if ((v5 & 2) == 0)
        goto LABEL_8;
LABEL_14:
      v7 = *(_QWORD *)(v1 + 56) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v7 + 23) < 0)
      {
        **(_BYTE **)v7 = 0;
        *(_QWORD *)(v7 + 8) = 0;
        if ((v5 & 4) == 0)
          goto LABEL_21;
      }
      else
      {
        *(_BYTE *)v7 = 0;
        *(_BYTE *)(v7 + 23) = 0;
        if ((v5 & 4) == 0)
          goto LABEL_21;
      }
      goto LABEL_18;
    }
    v6 = *(_QWORD *)(v1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v6 + 23) < 0)
    {
      **(_BYTE **)v6 = 0;
      *(_QWORD *)(v6 + 8) = 0;
      if ((v5 & 2) != 0)
        goto LABEL_14;
    }
    else
    {
      *(_BYTE *)v6 = 0;
      *(_BYTE *)(v6 + 23) = 0;
      if ((v5 & 2) != 0)
        goto LABEL_14;
    }
LABEL_8:
    if ((v5 & 4) == 0)
      goto LABEL_21;
LABEL_18:
    v8 = *(_QWORD *)(v1 + 64) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v8 + 23) < 0)
    {
      **(_BYTE **)v8 = 0;
      *(_QWORD *)(v8 + 8) = 0;
    }
    else
    {
      *(_BYTE *)v8 = 0;
      *(_BYTE *)(v8 + 23) = 0;
    }
  }
LABEL_21:
  if ((v5 & 0x38) != 0)
  {
    *(_QWORD *)(v1 + 72) = 0;
    *(_QWORD *)(v1 + 80) = 0;
    *(_QWORD *)(v1 + 88) = 0;
  }
  v10 = *(_BYTE *)(v1 + 8);
  v9 = v1 + 8;
  *(_DWORD *)(v9 + 8) = 0;
  if ((v10 & 1) != 0)
    return google::protobuf::internal::InternalMetadata::DoClear<google::protobuf::UnknownFieldSet>((uint64_t *)v9);
  return this;
}

google::protobuf::internal *google::protobuf::UninterpretedOption::_InternalParse(uint64_t a1, google::protobuf::internal *a2, google::protobuf::internal::EpsCopyInputStream *this)
{
  int v5;
  google::protobuf::internal *v6;
  std::string **v7;
  std::string **v8;
  unsigned int v9;
  google::protobuf::internal *v10;
  google::protobuf::internal *v11;
  int *v12;
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  const char *v18;
  google::protobuf::internal *v19;
  char *SizeFallback;
  uint64_t v21;
  int v22;
  int v23;
  BOOL v24;
  int v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  google::protobuf::internal::ArenaImpl *v29;
  std::string *v30;
  _QWORD *v31;
  google::protobuf::internal *v32;
  uint64_t v33;
  int v34;
  google::protobuf::internal *v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  google::protobuf::internal *v40;
  BOOL v41;
  google::protobuf::UnknownFieldSet *v42;
  uint64_t i;
  uint64_t j;
  uint64_t *v46;
  std::string **v47;
  google::protobuf::internal *v48;
  google::protobuf::UnknownFieldSet *v49;

  v48 = a2;
  v5 = 0;
  if ((google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(this, (const char **)&v48, *((_DWORD *)this + 23)) & 1) != 0)
  {
LABEL_2:
    v6 = v48;
    goto LABEL_82;
  }
  v46 = (uint64_t *)(a1 + 8);
  v47 = (std::string **)(a1 + 64);
  v7 = (std::string **)(a1 + 56);
  v8 = (std::string **)(a1 + 48);
  while (2)
  {
    v6 = (google::protobuf::internal *)((char *)v48 + 1);
    v9 = *(unsigned __int8 *)v48;
    if (*(char *)v48 < 0)
    {
      v9 = v9 + (*(unsigned __int8 *)v6 << 7) - 128;
      if (*(char *)v6 < 0)
      {
        v6 = (google::protobuf::internal *)((char *)v48 + 3);
        v27 = -21;
        while (1)
        {
          v9 += (*((unsigned __int8 *)v6 - 1) - 1) << (v27 + 35);
          if ((*((char *)v6 - 1) & 0x80000000) == 0)
            break;
          v6 = (google::protobuf::internal *)((char *)v6 + 1);
          v27 += 7;
          if (!v27)
            goto LABEL_81;
        }
      }
      else
      {
        v6 = (google::protobuf::internal *)((char *)v48 + 2);
      }
    }
    v48 = v6;
    switch(v9 >> 3)
    {
      case 2u:
        if (v9 != 18)
          goto LABEL_62;
        v10 = (google::protobuf::internal *)((char *)v6 - 1);
        while (1)
        {
          v11 = (google::protobuf::internal *)((char *)v10 + 1);
          v48 = v11;
          v12 = *(int **)(a1 + 40);
          if (!v12)
            break;
          v13 = *(_DWORD *)(a1 + 32);
          v14 = *v12;
          if (v13 < *v12)
          {
            *(_DWORD *)(a1 + 32) = v13 + 1;
            v15 = *(_QWORD *)&v12[2 * v13 + 2];
            goto LABEL_19;
          }
          if (v14 == *(_DWORD *)(a1 + 36))
            goto LABEL_15;
LABEL_18:
          *v12 = v14 + 1;
          v15 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::UninterpretedOption_NamePart>(*(google::protobuf::internal::ArenaImpl **)(a1 + 24));
          v16 = *(_QWORD *)(a1 + 40);
          v17 = *(int *)(a1 + 32);
          *(_DWORD *)(a1 + 32) = v17 + 1;
          *(_QWORD *)(v16 + 8 * v17 + 8) = v15;
          v11 = v48;
LABEL_19:
          v18 = (const char *)*(unsigned __int8 *)v11;
          if (*(char *)v11 < 0)
          {
            SizeFallback = google::protobuf::internal::ReadSizeFallback(v11, v18);
            if (!SizeFallback)
              goto LABEL_81;
            v19 = (google::protobuf::internal *)SizeFallback;
          }
          else
          {
            v19 = (google::protobuf::internal *)((char *)v11 + 1);
          }
          v21 = *((_QWORD *)this + 1);
          v22 = (_DWORD)v18 + (_DWORD)v19 - v21;
          *(_QWORD *)this = v21 + (v22 & (v22 >> 31));
          v23 = *((_DWORD *)this + 7);
          *((_DWORD *)this + 7) = v22;
          LODWORD(v21) = *((_DWORD *)this + 22);
          v24 = __OFSUB__((_DWORD)v21, 1);
          LODWORD(v21) = v21 - 1;
          *((_DWORD *)this + 22) = v21;
          if ((int)v21 < 0 != v24)
            goto LABEL_81;
          v10 = google::protobuf::UninterpretedOption_NamePart::_InternalParse(v15, v19, (int32x2_t *)this);
          if (!v10)
            goto LABEL_81;
          ++*((_DWORD *)this + 22);
          if (*((_DWORD *)this + 20))
            goto LABEL_81;
          v25 = *((_DWORD *)this + 7) + v23 - v22;
          *((_DWORD *)this + 7) = v25;
          v26 = *((_QWORD *)this + 1) + (v25 & (v25 >> 31));
          *(_QWORD *)this = v26;
          v48 = v10;
          if (v26 <= (unint64_t)v10 || *(_BYTE *)v10 != 18)
            goto LABEL_70;
        }
        v13 = *(_DWORD *)(a1 + 32);
        v14 = *(_DWORD *)(a1 + 36);
LABEL_15:
        if (v13 <= v14)
        {
          google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 24), v14 - v13 + 1);
          v12 = *(int **)(a1 + 40);
        }
        v14 = *v12;
        goto LABEL_18;
      case 3u:
        if (v9 != 26)
          goto LABEL_62;
        *(_DWORD *)(a1 + 16) |= 1u;
        v28 = *(_QWORD *)(a1 + 8);
        v29 = (google::protobuf::internal::ArenaImpl *)(v28 & 0xFFFFFFFFFFFFFFFELL);
        if ((v28 & 1) != 0)
          v29 = *(google::protobuf::internal::ArenaImpl **)v29;
        v30 = *v8;
        if (*v8 != (std::string *)&google::protobuf::internal::fixed_address_empty_string)
          goto LABEL_61;
        v31 = (_QWORD *)(a1 + 48);
        goto LABEL_60;
      case 4u:
        if (v9 != 32)
          goto LABEL_62;
        v5 |= 8u;
        v32 = (google::protobuf::internal *)((char *)v6 + 1);
        v33 = *(unsigned __int8 *)v6;
        if ((*(char *)v6 & 0x80000000) == 0)
          goto LABEL_42;
        v34 = *(unsigned __int8 *)v32;
        v33 = (v33 + (v34 << 7) - 128);
        if ((v34 & 0x80) != 0)
        {
          v32 = (google::protobuf::internal *)((char *)v6 + 3);
          for (i = 14; i != 70; i += 7)
          {
            v33 += (*((unsigned __int8 *)v32 - 1) - 1) << i;
            if ((*((char *)v32 - 1) & 0x80000000) == 0)
              goto LABEL_42;
            v32 = (google::protobuf::internal *)((char *)v32 + 1);
          }
          v6 = 0;
          *(_QWORD *)(a1 + 72) = 0;
          goto LABEL_82;
        }
        v32 = (google::protobuf::internal *)((char *)v6 + 2);
LABEL_42:
        v48 = v32;
        *(_QWORD *)(a1 + 72) = v33;
        goto LABEL_70;
      case 5u:
        if (v9 != 40)
          goto LABEL_62;
        v5 |= 0x10u;
        v35 = (google::protobuf::internal *)((char *)v6 + 1);
        v36 = *(unsigned __int8 *)v6;
        if ((*(char *)v6 & 0x80000000) == 0)
          goto LABEL_47;
        v37 = *(unsigned __int8 *)v35;
        v36 = (v36 + (v37 << 7) - 128);
        if ((v37 & 0x80) == 0)
        {
          v35 = (google::protobuf::internal *)((char *)v6 + 2);
LABEL_47:
          v48 = v35;
          *(_QWORD *)(a1 + 80) = v36;
LABEL_70:
          if (google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(this, (const char **)&v48, *((_DWORD *)this + 23)))goto LABEL_2;
          continue;
        }
        v35 = (google::protobuf::internal *)((char *)v6 + 3);
        for (j = 14; j != 70; j += 7)
        {
          v36 += (*((unsigned __int8 *)v35 - 1) - 1) << j;
          if ((*((char *)v35 - 1) & 0x80000000) == 0)
            goto LABEL_47;
          v35 = (google::protobuf::internal *)((char *)v35 + 1);
        }
        v6 = 0;
        *(_QWORD *)(a1 + 80) = 0;
LABEL_82:
        *(_DWORD *)(a1 + 16) |= v5;
        return v6;
      case 6u:
        if (v9 != 49)
          goto LABEL_62;
        v5 |= 0x20u;
        *(_QWORD *)(a1 + 88) = *(_QWORD *)v6;
        v48 = (google::protobuf::internal *)((char *)v6 + 8);
        goto LABEL_70;
      case 7u:
        if (v9 != 58)
          goto LABEL_62;
        *(_DWORD *)(a1 + 16) |= 2u;
        v38 = *(_QWORD *)(a1 + 8);
        v29 = (google::protobuf::internal::ArenaImpl *)(v38 & 0xFFFFFFFFFFFFFFFELL);
        if ((v38 & 1) != 0)
          v29 = *(google::protobuf::internal::ArenaImpl **)v29;
        v30 = *v7;
        if (*v7 != (std::string *)&google::protobuf::internal::fixed_address_empty_string)
          goto LABEL_61;
        v31 = (_QWORD *)(a1 + 56);
        goto LABEL_60;
      case 8u:
        if (v9 != 66)
          goto LABEL_62;
        *(_DWORD *)(a1 + 16) |= 4u;
        v39 = *(_QWORD *)(a1 + 8);
        v29 = (google::protobuf::internal::ArenaImpl *)(v39 & 0xFFFFFFFFFFFFFFFELL);
        if ((v39 & 1) != 0)
          v29 = *(google::protobuf::internal::ArenaImpl **)v29;
        v30 = *v47;
        if (*v47 != (std::string *)&google::protobuf::internal::fixed_address_empty_string)
          goto LABEL_61;
        v31 = (_QWORD *)(a1 + 64);
LABEL_60:
        v30 = (std::string *)google::protobuf::internal::ArenaStringPtr::MutableSlow<>(v31, v29);
        v6 = v48;
LABEL_61:
        v40 = (google::protobuf::internal *)google::protobuf::internal::InlineGreedyStringParser(v30, (std::string::value_type *)v6, (uint64_t)this);
        goto LABEL_69;
      default:
LABEL_62:
        if (v9)
          v41 = (v9 & 7) == 4;
        else
          v41 = 1;
        if (v41)
        {
          *((_DWORD *)this + 20) = v9 - 1;
          goto LABEL_82;
        }
        if ((*v46 & 1) != 0)
        {
          v42 = (google::protobuf::UnknownFieldSet *)((*v46 & 0xFFFFFFFFFFFFFFFELL) + 8);
        }
        else
        {
          v42 = (google::protobuf::UnknownFieldSet *)google::protobuf::internal::InternalMetadata::mutable_unknown_fields_slow<google::protobuf::UnknownFieldSet>(v46);
          v6 = v48;
        }
        v49 = v42;
        v40 = google::protobuf::internal::FieldParser<google::protobuf::internal::UnknownFieldParserHelper>(v9, &v49, (uint64_t *)v6, (int32x2_t *)this);
LABEL_69:
        v48 = v40;
        if (v40)
          goto LABEL_70;
LABEL_81:
        v6 = 0;
        goto LABEL_82;
    }
  }
}

const google::protobuf::UnknownFieldSet *google::protobuf::UninterpretedOption::_InternalSerialize(google::protobuf::UninterpretedOption *this, unsigned __int8 *a2, google::protobuf::io::EpsCopyOutputStream *a3)
{
  int v6;
  int i;
  google::protobuf::UninterpretedOption_NamePart *v8;
  unsigned int v9;
  unsigned __int8 *v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  int v14;
  uint64_t v15;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;

  v6 = *((_DWORD *)this + 8);
  if (v6)
  {
    for (i = 0; i != v6; ++i)
    {
      if (*(_QWORD *)a3 <= (unint64_t)a2)
        a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
      v8 = *(google::protobuf::UninterpretedOption_NamePart **)(*((_QWORD *)this + 5) + 8 * i + 8);
      *a2 = 18;
      v9 = *((_DWORD *)v8 + 5);
      if (v9 > 0x7F)
      {
        a2[1] = v9 | 0x80;
        v11 = v9 >> 7;
        if (v9 >> 14)
        {
          v10 = a2 + 3;
          do
          {
            *(v10 - 1) = v11 | 0x80;
            v12 = v11 >> 7;
            ++v10;
            v13 = v11 >> 14;
            v11 >>= 7;
          }
          while (v13);
          *(v10 - 1) = v12;
        }
        else
        {
          a2[2] = v11;
          v10 = a2 + 3;
        }
      }
      else
      {
        a2[1] = v9;
        v10 = a2 + 2;
      }
      a2 = (unsigned __int8 *)google::protobuf::UninterpretedOption_NamePart::_InternalSerialize(v8, v10, a3);
    }
  }
  v14 = *((_DWORD *)this + 4);
  if ((v14 & 1) != 0)
  {
    a2 = google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 3, *((_QWORD *)this + 6) & 0xFFFFFFFFFFFFFFFELL, a2);
    if ((v14 & 8) == 0)
    {
LABEL_15:
      if ((v14 & 0x10) == 0)
        goto LABEL_16;
LABEL_34:
      if (*(_QWORD *)a3 <= (unint64_t)a2)
        a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
      v21 = *((_QWORD *)this + 10);
      *a2 = 40;
      if (v21 > 0x7F)
      {
        a2[1] = v21 | 0x80;
        v22 = v21 >> 7;
        if (v21 >> 14)
        {
          a2 += 3;
          do
          {
            *(a2 - 1) = v22 | 0x80;
            v23 = v22 >> 7;
            ++a2;
            v24 = v22 >> 14;
            v22 >>= 7;
          }
          while (v24);
          *(a2 - 1) = v23;
          if ((v14 & 0x20) != 0)
            goto LABEL_45;
        }
        else
        {
          a2[2] = v22;
          a2 += 3;
          if ((v14 & 0x20) != 0)
            goto LABEL_45;
        }
      }
      else
      {
        a2[1] = v21;
        a2 += 2;
        if ((v14 & 0x20) != 0)
          goto LABEL_45;
      }
LABEL_17:
      if ((v14 & 2) == 0)
        goto LABEL_18;
      goto LABEL_48;
    }
  }
  else if ((v14 & 8) == 0)
  {
    goto LABEL_15;
  }
  if (*(_QWORD *)a3 <= (unint64_t)a2)
    a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
  v17 = *((_QWORD *)this + 9);
  *a2 = 32;
  if (v17 > 0x7F)
  {
    a2[1] = v17 | 0x80;
    v18 = v17 >> 7;
    if (v17 >> 14)
    {
      a2 += 3;
      do
      {
        *(a2 - 1) = v18 | 0x80;
        v19 = v18 >> 7;
        ++a2;
        v20 = v18 >> 14;
        v18 >>= 7;
      }
      while (v20);
      *(a2 - 1) = v19;
      if ((v14 & 0x10) != 0)
        goto LABEL_34;
    }
    else
    {
      a2[2] = v18;
      a2 += 3;
      if ((v14 & 0x10) != 0)
        goto LABEL_34;
    }
  }
  else
  {
    a2[1] = v17;
    a2 += 2;
    if ((v14 & 0x10) != 0)
      goto LABEL_34;
  }
LABEL_16:
  if ((v14 & 0x20) == 0)
    goto LABEL_17;
LABEL_45:
  if (*(_QWORD *)a3 <= (unint64_t)a2)
    a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
  v25 = *((_QWORD *)this + 11);
  *a2 = 49;
  *(_QWORD *)(a2 + 1) = v25;
  a2 += 9;
  if ((v14 & 2) == 0)
  {
LABEL_18:
    if ((v14 & 4) == 0)
      goto LABEL_20;
    goto LABEL_19;
  }
LABEL_48:
  a2 = google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 7, *((_QWORD *)this + 7) & 0xFFFFFFFFFFFFFFFELL, a2);
  if ((v14 & 4) != 0)
LABEL_19:
    a2 = google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 8, *((_QWORD *)this + 8) & 0xFFFFFFFFFFFFFFFELL, a2);
LABEL_20:
  v15 = *((_QWORD *)this + 1);
  if ((v15 & 1) != 0)
    return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v15 & 0xFFFFFFFFFFFFFFFELL) + 8), (const google::protobuf::UnknownFieldSet *)a2, a3, (google::protobuf::io::EpsCopyOutputStream *)a2);
  else
    return (const google::protobuf::UnknownFieldSet *)a2;
}

const InternalMetadata *google::protobuf::UninterpretedOption::ByteSizeLong(google::protobuf::UninterpretedOption *this, uint64_t a2, uint64_t a3, CachedSize *a4)
{
  const InternalMetadata *v5;
  uint64_t v6;
  google::protobuf::UninterpretedOption_NamePart **v7;
  uint64_t v8;
  google::protobuf::UninterpretedOption_NamePart *v9;
  const InternalMetadata *v10;
  int v11;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v5 = (const InternalMetadata *)*((int *)this + 8);
  v6 = *((_QWORD *)this + 5);
  if (v6)
    v7 = (google::protobuf::UninterpretedOption_NamePart **)(v6 + 8);
  else
    v7 = 0;
  if ((_DWORD)v5)
  {
    v8 = 8 * (_QWORD)v5;
    do
    {
      v9 = *v7++;
      v10 = google::protobuf::UninterpretedOption_NamePart::ByteSizeLong(v9, a2, a3, a4);
      v5 = (const InternalMetadata *)((char *)v5 + (_QWORD)v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6));
      v8 -= 8;
    }
    while (v8);
  }
  else
  {
    v5 = 0;
  }
  v11 = *((_DWORD *)this + 4);
  if ((v11 & 0x3F) == 0)
    goto LABEL_18;
  if ((v11 & 1) != 0)
  {
    v13 = *((_QWORD *)this + 6) & 0xFFFFFFFFFFFFFFFELL;
    v14 = *(unsigned __int8 *)(v13 + 23);
    v15 = *(_QWORD *)(v13 + 8);
    if ((v14 & 0x80u) == 0)
      v15 = v14;
    v5 = (const InternalMetadata *)((char *)v5 + v15 + ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 1);
    if ((v11 & 2) == 0)
    {
LABEL_12:
      if ((v11 & 4) == 0)
        goto LABEL_13;
      goto LABEL_26;
    }
  }
  else if ((v11 & 2) == 0)
  {
    goto LABEL_12;
  }
  v16 = *((_QWORD *)this + 7) & 0xFFFFFFFFFFFFFFFELL;
  v17 = *(unsigned __int8 *)(v16 + 23);
  v18 = *(_QWORD *)(v16 + 8);
  if ((v17 & 0x80u) == 0)
    v18 = v17;
  v5 = (const InternalMetadata *)((char *)v5 + v18 + ((9 * (__clz(v18 | 1) ^ 0x1F) + 73) >> 6) + 1);
  if ((v11 & 4) == 0)
  {
LABEL_13:
    if ((v11 & 8) == 0)
      goto LABEL_14;
    goto LABEL_29;
  }
LABEL_26:
  v19 = *((_QWORD *)this + 8) & 0xFFFFFFFFFFFFFFFELL;
  v20 = *(unsigned __int8 *)(v19 + 23);
  v21 = *(_QWORD *)(v19 + 8);
  if ((v20 & 0x80u) == 0)
    v21 = v20;
  v5 = (const InternalMetadata *)((char *)v5 + v21 + ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6) + 1);
  if ((v11 & 8) == 0)
  {
LABEL_14:
    if ((v11 & 0x10) == 0)
      goto LABEL_16;
    goto LABEL_15;
  }
LABEL_29:
  v5 = (const InternalMetadata *)((char *)v5 + ((9 * (__clz(*((_QWORD *)this + 9) | 1) ^ 0x3F) + 73) >> 6) + 1);
  if ((v11 & 0x10) != 0)
LABEL_15:
    v5 = (const InternalMetadata *)((char *)v5 + ((9 * (__clz(*((_QWORD *)this + 10) | 1) ^ 0x3F) + 73) >> 6) + 1);
LABEL_16:
  if ((v11 & 0x20) != 0)
    v5 = (const InternalMetadata *)((char *)v5 + 9);
LABEL_18:
  if ((*((_BYTE *)this + 8) & 1) != 0)
    return (const InternalMetadata *)google::protobuf::internal::ComputeUnknownFieldsSize((google::protobuf::UninterpretedOption *)((char *)this + 8), v5, (_DWORD *)this + 5, a4);
  *((_DWORD *)this + 5) = (_DWORD)v5;
  return v5;
}

void google::protobuf::UninterpretedOption::MergeFrom(google::protobuf::UninterpretedOption *this, const google::protobuf::Message *a2, google::protobuf::Message *a3)
{
  if (*(void (***)(google::protobuf::UninterpretedOption *__hidden))a2 == &off_1E1BF7FA8)
    google::protobuf::UninterpretedOption::MergeFrom(this, a2);
  else
    google::protobuf::internal::ReflectionOps::Merge(a2, this, a3);
}

void google::protobuf::UninterpretedOption::MergeFrom(google::protobuf::UninterpretedOption *this, const google::protobuf::UninterpretedOption *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  google::protobuf::UninterpretedOption_NamePart **v10;
  google::protobuf::UninterpretedOption_NamePart **v11;
  google::protobuf::UninterpretedOption_NamePart *v12;
  google::protobuf::UninterpretedOption_NamePart *v13;
  google::protobuf::UninterpretedOption_NamePart *v14;
  google::protobuf::internal::ArenaImpl *v15;
  int v16;
  uint64_t v17;
  google::protobuf::UninterpretedOption_NamePart **v18;
  google::protobuf::UninterpretedOption_NamePart **v19;
  google::protobuf::UninterpretedOption_NamePart *v20;
  google::protobuf::UninterpretedOption_NamePart *v21;
  int v22;
  int *v23;
  int v24;
  __int128 *v25;
  uint64_t v26;
  google::protobuf::internal::ArenaImpl *v27;
  __int128 *v28;
  uint64_t v29;
  google::protobuf::internal::ArenaImpl *v30;
  __int128 *v31;
  uint64_t v32;
  google::protobuf::internal::ArenaImpl *v33;
  unsigned int *v34;
  uint64_t v35;

  v4 = *((_QWORD *)a2 + 1);
  if ((v4 & 1) != 0)
    google::protobuf::internal::InternalMetadata::DoMergeFrom<google::protobuf::UnknownFieldSet>((uint64_t *)this + 1, (const google::protobuf::UnknownFieldSet *)((v4 & 0xFFFFFFFFFFFFFFFELL) + 8));
  v5 = *((_DWORD *)a2 + 8);
  if (v5)
  {
    v35 = *((_QWORD *)a2 + 5);
    v34 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::UninterpretedOption *)((char *)this + 24), v5);
    v6 = **((int **)this + 5);
    v7 = *((int *)this + 8);
    v8 = v6 - v7;
    if ((int)v6 - (int)v7 >= v5)
      v9 = v5;
    else
      v9 = v8;
    if ((int)v9 >= 1)
    {
      v10 = (google::protobuf::UninterpretedOption_NamePart **)v34;
      v11 = (google::protobuf::UninterpretedOption_NamePart **)(v35 + 8);
      do
      {
        v13 = *v11++;
        v12 = v13;
        v14 = *v10++;
        google::protobuf::internal::GenericTypeHandler<google::protobuf::UninterpretedOption_NamePart>::Merge(v12, v14);
        --v9;
      }
      while (v9);
    }
    if (v8 < v5)
    {
      v15 = (google::protobuf::internal::ArenaImpl *)*((_QWORD *)this + 3);
      v16 = v7 + v5 - v6;
      v17 = 8 * v6 - 8 * v7;
      v18 = (google::protobuf::UninterpretedOption_NamePart **)((char *)v34 + v17);
      v19 = (google::protobuf::UninterpretedOption_NamePart **)(v17 + v35 + 8);
      do
      {
        v20 = *v19++;
        v21 = (google::protobuf::UninterpretedOption_NamePart *)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::UninterpretedOption_NamePart>(v15);
        google::protobuf::internal::GenericTypeHandler<google::protobuf::UninterpretedOption_NamePart>::Merge(v20, v21);
        *v18++ = v21;
        --v16;
      }
      while (v16);
    }
    v22 = *((_DWORD *)this + 8) + v5;
    *((_DWORD *)this + 8) = v22;
    v23 = (int *)*((_QWORD *)this + 5);
    if (*v23 < v22)
      *v23 = v22;
  }
  v24 = *((_DWORD *)a2 + 4);
  if ((v24 & 0x3F) != 0)
  {
    if ((v24 & 1) != 0)
    {
      v25 = (__int128 *)(*((_QWORD *)a2 + 6) & 0xFFFFFFFFFFFFFFFELL);
      *((_DWORD *)this + 4) |= 1u;
      v26 = *((_QWORD *)this + 1);
      v27 = (google::protobuf::internal::ArenaImpl *)(v26 & 0xFFFFFFFFFFFFFFFELL);
      if ((v26 & 1) != 0)
        v27 = *(google::protobuf::internal::ArenaImpl **)v27;
      google::protobuf::internal::ArenaStringPtr::Set((std::string **)this + 6, (std::string *)&google::protobuf::internal::fixed_address_empty_string, v25, v27);
      if ((v24 & 2) == 0)
      {
LABEL_18:
        if ((v24 & 4) == 0)
          goto LABEL_19;
        goto LABEL_31;
      }
    }
    else if ((v24 & 2) == 0)
    {
      goto LABEL_18;
    }
    v28 = (__int128 *)(*((_QWORD *)a2 + 7) & 0xFFFFFFFFFFFFFFFELL);
    *((_DWORD *)this + 4) |= 2u;
    v29 = *((_QWORD *)this + 1);
    v30 = (google::protobuf::internal::ArenaImpl *)(v29 & 0xFFFFFFFFFFFFFFFELL);
    if ((v29 & 1) != 0)
      v30 = *(google::protobuf::internal::ArenaImpl **)v30;
    google::protobuf::internal::ArenaStringPtr::Set((std::string **)this + 7, (std::string *)&google::protobuf::internal::fixed_address_empty_string, v28, v30);
    if ((v24 & 4) == 0)
    {
LABEL_19:
      if ((v24 & 8) == 0)
        goto LABEL_20;
      goto LABEL_34;
    }
LABEL_31:
    v31 = (__int128 *)(*((_QWORD *)a2 + 8) & 0xFFFFFFFFFFFFFFFELL);
    *((_DWORD *)this + 4) |= 4u;
    v32 = *((_QWORD *)this + 1);
    v33 = (google::protobuf::internal::ArenaImpl *)(v32 & 0xFFFFFFFFFFFFFFFELL);
    if ((v32 & 1) != 0)
      v33 = *(google::protobuf::internal::ArenaImpl **)v33;
    google::protobuf::internal::ArenaStringPtr::Set((std::string **)this + 8, (std::string *)&google::protobuf::internal::fixed_address_empty_string, v31, v33);
    if ((v24 & 8) == 0)
    {
LABEL_20:
      if ((v24 & 0x10) == 0)
        goto LABEL_21;
      goto LABEL_35;
    }
LABEL_34:
    *((_QWORD *)this + 9) = *((_QWORD *)a2 + 9);
    if ((v24 & 0x10) == 0)
    {
LABEL_21:
      if ((v24 & 0x20) == 0)
      {
LABEL_23:
        *((_DWORD *)this + 4) |= v24;
        return;
      }
LABEL_22:
      *((_QWORD *)this + 11) = *((_QWORD *)a2 + 11);
      goto LABEL_23;
    }
LABEL_35:
    *((_QWORD *)this + 10) = *((_QWORD *)a2 + 10);
    if ((v24 & 0x20) == 0)
      goto LABEL_23;
    goto LABEL_22;
  }
}

void google::protobuf::UninterpretedOption::CopyFrom(google::protobuf::UninterpretedOption *this, const google::protobuf::Message *a2)
{
  google::protobuf::Message *v4;

  if (a2 != this)
  {
    google::protobuf::UninterpretedOption::Clear(this);
    google::protobuf::UninterpretedOption::MergeFrom(this, a2, v4);
  }
}

BOOL google::protobuf::UninterpretedOption::IsInitialized(google::protobuf::UninterpretedOption *this)
{
  uint64_t v1;
  int v2;
  uint64_t v3;

  v1 = *((unsigned int *)this + 8);
  do
  {
    v2 = v1;
    if ((int)v1 < 1)
      break;
    v3 = *(_QWORD *)(*((_QWORD *)this + 5) + 8 * v1--);
  }
  while ((~*(_DWORD *)(v3 + 16) & 3) == 0);
  return v2 < 1;
}

uint64_t google::protobuf::UninterpretedOption::GetMetadata(google::protobuf::UninterpretedOption *this)
{
  google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0);
  return off_1EDF46FE8[44];
}

google::protobuf::SourceCodeInfo_Location *google::protobuf::SourceCodeInfo_Location::SourceCodeInfo_Location(google::protobuf::SourceCodeInfo_Location *this, Arena *a2)
{
  *(_QWORD *)this = &off_1E1BF83F0;
  *((_QWORD *)this + 1) = a2;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  *((_QWORD *)this + 4) = a2;
  *((_QWORD *)this + 6) = 0;
  *((_QWORD *)this + 7) = a2;
  *((_QWORD *)this + 9) = a2;
  *((_QWORD *)this + 10) = 0;
  *((_QWORD *)this + 11) = 0;
  if (atomic_load(scc_info_SourceCodeInfo_Location_google_2fprotobuf_2fdescriptor_2eproto))
    google::protobuf::internal::InitSCCImpl(scc_info_SourceCodeInfo_Location_google_2fprotobuf_2fdescriptor_2eproto);
  *((_QWORD *)this + 12) = &google::protobuf::internal::fixed_address_empty_string;
  *((_QWORD *)this + 13) = &google::protobuf::internal::fixed_address_empty_string;
  return this;
}

void sub_1888B67CC(_Unwind_Exception *a1)
{
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v3 = v2;
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>(v3);
  if (*(int *)(v1 + 52) >= 1)
  {
    v5 = *(_QWORD *)(v1 + 56);
    v7 = *(_QWORD *)(v5 - 8);
    v6 = (void *)(v5 - 8);
    if (!v7)
      operator delete(v6);
  }
  if (*(int *)(v1 + 28) >= 1)
  {
    v8 = *(_QWORD *)(v1 + 32);
    v10 = *(_QWORD *)(v8 - 8);
    v9 = (void *)(v8 - 8);
    if (!v10)
      operator delete(v9);
  }
  _Unwind_Resume(a1);
}

void google::protobuf::SourceCodeInfo_Location::~SourceCodeInfo_Location(google::protobuf::SourceCodeInfo_Location *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;

  v2 = *((_QWORD *)this + 12);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v2 + 23) < 0)
      operator delete(*(void **)v2);
    MEMORY[0x18D76437C](v2, 0x1012C40EC159624);
  }
  v3 = *((_QWORD *)this + 13);
  if ((uint64_t *)v3 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v3 + 23) < 0)
      operator delete(*(void **)v3);
    MEMORY[0x18D76437C](v3, 0x1012C40EC159624);
  }
  google::protobuf::internal::InternalMetadata::Delete<google::protobuf::UnknownFieldSet>((uint64_t *)this + 1);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((_QWORD *)this + 9);
  if (*((int *)this + 13) >= 1)
  {
    v4 = *((_QWORD *)this + 7);
    v6 = *(_QWORD *)(v4 - 8);
    v5 = (void *)(v4 - 8);
    if (!v6)
      operator delete(v5);
  }
  if (*((int *)this + 7) >= 1)
  {
    v7 = *((_QWORD *)this + 4);
    v9 = *(_QWORD *)(v7 - 8);
    v8 = (void *)(v7 - 8);
    if (!v9)
      operator delete(v8);
  }
}

{
  google::protobuf::SourceCodeInfo_Location::~SourceCodeInfo_Location(this);
  JUMPOUT(0x18D76437CLL);
}

uint64_t google::protobuf::SourceCodeInfo_Location::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 20) = a2;
  return this;
}

google::protobuf::UnknownFieldSet *google::protobuf::SourceCodeInfo_Location::Clear(google::protobuf::SourceCodeInfo_Location *this)
{
  google::protobuf::UnknownFieldSet *result;
  int v3;
  unint64_t v4;
  unint64_t v5;
  char *v6;
  char v7;

  *((_DWORD *)this + 6) = 0;
  *((_DWORD *)this + 12) = 0;
  result = (google::protobuf::UnknownFieldSet *)google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 72);
  v3 = *((_DWORD *)this + 4);
  if ((v3 & 3) == 0)
    goto LABEL_11;
  if ((v3 & 1) == 0)
  {
LABEL_5:
    if ((v3 & 2) != 0)
      goto LABEL_6;
    goto LABEL_11;
  }
  v4 = *((_QWORD *)this + 12) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v4 + 23) & 0x80000000) == 0)
  {
    *(_BYTE *)v4 = 0;
    *(_BYTE *)(v4 + 23) = 0;
    goto LABEL_5;
  }
  **(_BYTE **)v4 = 0;
  *(_QWORD *)(v4 + 8) = 0;
  if ((v3 & 2) != 0)
  {
LABEL_6:
    v5 = *((_QWORD *)this + 13) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v5 + 23) < 0)
    {
      **(_BYTE **)v5 = 0;
      *(_QWORD *)(v5 + 8) = 0;
    }
    else
    {
      *(_BYTE *)v5 = 0;
      *(_BYTE *)(v5 + 23) = 0;
    }
  }
LABEL_11:
  v7 = *((_BYTE *)this + 8);
  v6 = (char *)this + 8;
  *((_DWORD *)v6 + 2) = 0;
  if ((v7 & 1) != 0)
    return google::protobuf::internal::InternalMetadata::DoClear<google::protobuf::UnknownFieldSet>((uint64_t *)v6);
  return result;
}

google::protobuf::internal *google::protobuf::SourceCodeInfo_Location::_InternalParse(uint64_t a1, google::protobuf::internal *a2, google::protobuf::internal::EpsCopyInputStream *this)
{
  const char **v5;
  char v6;
  google::protobuf::internal *result;
  uint64_t *v8;
  std::string **v9;
  std::string **v10;
  google::protobuf::internal *v11;
  unsigned int v12;
  google::protobuf::internal::EpsCopyInputStream *v13;
  google::protobuf::internal *v14;
  unsigned int *v15;
  uint64_t v16;
  google::protobuf::internal::ArenaImpl *v17;
  std::string *v18;
  _QWORD *v19;
  uint64_t v20;
  std::string::value_type *v21;
  int *v22;
  int v23;
  int v24;
  std::string *AlignedAndAddCleanup;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int Varint64;
  int v31;
  BOOL v32;
  google::protobuf::UnknownFieldSet *v33;
  int v34;
  uint64_t *v35;
  google::protobuf::internal *v36;
  google::protobuf::UnknownFieldSet *v37;

  v36 = a2;
  v6 = google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(this, (const char **)&v36, *((_DWORD *)this + 23));
  result = v36;
  if ((v6 & 1) == 0)
  {
    v8 = (uint64_t *)(a1 + 72);
    v35 = (uint64_t *)(a1 + 8);
    v9 = (std::string **)(a1 + 104);
    v10 = (std::string **)(a1 + 96);
    while (2)
    {
      v11 = (google::protobuf::internal *)((char *)result + 1);
      v12 = *(unsigned __int8 *)result;
      if (*(char *)result < 0)
      {
        v12 = v12 + (*(unsigned __int8 *)v11 << 7) - 128;
        if (*(char *)v11 < 0)
        {
          v11 = (google::protobuf::internal *)((char *)result + 3);
          v29 = -21;
          while (1)
          {
            v12 += (*((unsigned __int8 *)v11 - 1) - 1) << (v29 + 35);
            if ((*((char *)v11 - 1) & 0x80000000) == 0)
              break;
            v11 = (google::protobuf::internal *)((char *)v11 + 1);
            v29 += 7;
            if (!v29)
              return 0;
          }
        }
        else
        {
          v11 = (google::protobuf::internal *)((char *)result + 2);
        }
      }
      v36 = v11;
      switch(v12 >> 3)
      {
        case 1u:
          if (v12 == 10)
          {
            v13 = this;
            v14 = v11;
            v15 = (unsigned int *)(a1 + 24);
            goto LABEL_12;
          }
          if (v12 != 8)
            goto LABEL_55;
          Varint64 = google::protobuf::internal::ReadVarint64((google::protobuf::internal *)&v36, v5);
          google::protobuf::SourceCodeInfo_Location::_internal_add_path((google::protobuf::SourceCodeInfo_Location *)a1, Varint64);
          goto LABEL_53;
        case 2u:
          if (v12 == 18)
          {
            v13 = this;
            v14 = v11;
            v15 = (unsigned int *)(a1 + 48);
LABEL_12:
            result = (google::protobuf::internal *)google::protobuf::internal::EpsCopyInputStream::ReadPackedVarint<char const* google::protobuf::internal::VarintParser<int,false>(void *,char const*,google::protobuf::internal::ParseContext *)::{lambda(unsigned long long)#1}>((uint64_t)v13, v14, v15);
LABEL_62:
            v36 = result;
            if (!result)
              return result;
            goto LABEL_63;
          }
          if (v12 != 16)
          {
LABEL_55:
            if (v12)
              v32 = (v12 & 7) == 4;
            else
              v32 = 1;
            if (v32)
            {
              *((_DWORD *)this + 20) = v12 - 1;
              return v11;
            }
            if ((*v35 & 1) != 0)
            {
              v33 = (google::protobuf::UnknownFieldSet *)((*v35 & 0xFFFFFFFFFFFFFFFELL) + 8);
            }
            else
            {
              v33 = (google::protobuf::UnknownFieldSet *)google::protobuf::internal::InternalMetadata::mutable_unknown_fields_slow<google::protobuf::UnknownFieldSet>(v35);
              v11 = v36;
            }
            v37 = v33;
            result = google::protobuf::internal::FieldParser<google::protobuf::internal::UnknownFieldParserHelper>(v12, &v37, (uint64_t *)v11, (int32x2_t *)this);
            goto LABEL_62;
          }
          v31 = google::protobuf::internal::ReadVarint64((google::protobuf::internal *)&v36, v5);
          google::protobuf::SourceCodeInfo_Location::_internal_add_span((google::protobuf::SourceCodeInfo_Location *)a1, v31);
LABEL_53:
          if (!v36)
            return 0;
LABEL_63:
          v34 = google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(this, (const char **)&v36, *((_DWORD *)this + 23));
          result = v36;
          if (v34)
            return result;
          continue;
        case 3u:
          if (v12 != 26)
            goto LABEL_55;
          *(_DWORD *)(a1 + 16) |= 1u;
          v16 = *(_QWORD *)(a1 + 8);
          v17 = (google::protobuf::internal::ArenaImpl *)(v16 & 0xFFFFFFFFFFFFFFFELL);
          if ((v16 & 1) != 0)
            v17 = *(google::protobuf::internal::ArenaImpl **)v17;
          v18 = *v10;
          if (*v10 != (std::string *)&google::protobuf::internal::fixed_address_empty_string)
            goto LABEL_24;
          v19 = (_QWORD *)(a1 + 96);
          goto LABEL_23;
        case 4u:
          if (v12 != 34)
            goto LABEL_55;
          *(_DWORD *)(a1 + 16) |= 2u;
          v20 = *(_QWORD *)(a1 + 8);
          v17 = (google::protobuf::internal::ArenaImpl *)(v20 & 0xFFFFFFFFFFFFFFFELL);
          if ((v20 & 1) != 0)
            v17 = *(google::protobuf::internal::ArenaImpl **)v17;
          v18 = *v9;
          if (*v9 != (std::string *)&google::protobuf::internal::fixed_address_empty_string)
            goto LABEL_24;
          v19 = (_QWORD *)(a1 + 104);
LABEL_23:
          v18 = (std::string *)google::protobuf::internal::ArenaStringPtr::MutableSlow<>(v19, v17);
          v11 = v36;
LABEL_24:
          result = (google::protobuf::internal *)google::protobuf::internal::InlineGreedyStringParser(v18, (std::string::value_type *)v11, (uint64_t)this);
          goto LABEL_62;
        case 6u:
          if (v12 != 50)
            goto LABEL_55;
          result = (google::protobuf::internal *)((char *)v11 - 1);
          break;
        default:
          goto LABEL_55;
      }
      break;
    }
    while (1)
    {
      v21 = (char *)result + 1;
      v36 = (google::protobuf::internal *)((char *)result + 1);
      v22 = *(int **)(a1 + 88);
      if (!v22)
        break;
      v23 = *(_DWORD *)(a1 + 80);
      v24 = *v22;
      if (v23 >= *v22)
      {
        if (v24 == *(_DWORD *)(a1 + 84))
        {
LABEL_32:
          if (v23 <= v24)
          {
            google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 72), v24 - v23 + 1);
            v22 = *(int **)(a1 + 88);
          }
          v24 = *v22;
        }
        *v22 = v24 + 1;
        v26 = *v8;
        if (*v8)
        {
          if ((*(_BYTE *)(v26 + 24) & 1) != 0)
          AlignedAndAddCleanup = (std::string *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((google::protobuf::internal::ArenaImpl *)v26, 0x18uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<std::string>);
        }
        else
        {
          AlignedAndAddCleanup = (std::string *)operator new();
        }
        AlignedAndAddCleanup->__r_.__value_.__r.__words[0] = 0;
        AlignedAndAddCleanup->__r_.__value_.__l.__size_ = 0;
        AlignedAndAddCleanup->__r_.__value_.__r.__words[2] = 0;
        v27 = *(_QWORD *)(a1 + 88);
        v28 = *(int *)(a1 + 80);
        *(_DWORD *)(a1 + 80) = v28 + 1;
        *(_QWORD *)(v27 + 8 * v28 + 8) = AlignedAndAddCleanup;
        v21 = (std::string::value_type *)v36;
        goto LABEL_41;
      }
      *(_DWORD *)(a1 + 80) = v23 + 1;
      AlignedAndAddCleanup = *(std::string **)&v22[2 * v23 + 2];
LABEL_41:
      result = (google::protobuf::internal *)google::protobuf::internal::InlineGreedyStringParser(AlignedAndAddCleanup, v21, (uint64_t)this);
      v36 = result;
      if (!result)
        return result;
      if (*(_QWORD *)this <= (unint64_t)result || *(_BYTE *)result != 50)
        goto LABEL_63;
    }
    v23 = *(_DWORD *)(a1 + 80);
    v24 = *(_DWORD *)(a1 + 84);
    goto LABEL_32;
  }
  return result;
}

void google::protobuf::SourceCodeInfo_Location::_internal_add_path(google::protobuf::SourceCodeInfo_Location *this, int a2)
{
  _DWORD *v4;
  uint64_t v5;
  int v6;

  v5 = *((unsigned int *)this + 6);
  v4 = (_DWORD *)((char *)this + 24);
  if ((_DWORD)v5 == *((_DWORD *)this + 7))
  {
    v6 = v5 + 1;
    google::protobuf::RepeatedField<int>::Reserve((unsigned int *)this + 6, v5 + 1);
    *(_DWORD *)(*((_QWORD *)this + 4) + 4 * v5) = a2;
  }
  else
  {
    *(_DWORD *)(*((_QWORD *)this + 4) + 4 * v5) = a2;
    v6 = v5 + 1;
  }
  *v4 = v6;
}

void google::protobuf::SourceCodeInfo_Location::_internal_add_span(google::protobuf::SourceCodeInfo_Location *this, int a2)
{
  _DWORD *v4;
  uint64_t v5;
  int v6;

  v5 = *((unsigned int *)this + 12);
  v4 = (_DWORD *)((char *)this + 48);
  if ((_DWORD)v5 == *((_DWORD *)this + 13))
  {
    v6 = v5 + 1;
    google::protobuf::RepeatedField<int>::Reserve((unsigned int *)this + 12, v5 + 1);
    *(_DWORD *)(*((_QWORD *)this + 7) + 4 * v5) = a2;
  }
  else
  {
    *(_DWORD *)(*((_QWORD *)this + 7) + 4 * v5) = a2;
    v6 = v5 + 1;
  }
  *v4 = v6;
}

const google::protobuf::UnknownFieldSet *google::protobuf::SourceCodeInfo_Location::_InternalSerialize(google::protobuf::SourceCodeInfo_Location *this, unsigned __int8 *a2, google::protobuf::io::EpsCopyOutputStream *a3)
{
  unsigned __int8 *v4;
  unsigned int v6;
  _BYTE *v7;
  int *v8;
  int *v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unsigned int v15;
  _BYTE *v16;
  int *v17;
  int *v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  int64_t v29;
  unsigned __int8 *v30;
  uint64_t v31;
  unsigned int v33;
  unsigned int v34;

  v4 = a2;
  v6 = *((_DWORD *)this + 10);
  if ((int)v6 >= 1)
  {
    if (*(_QWORD *)a3 <= (unint64_t)a2)
      v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
    *v4 = 10;
    v7 = v4 + 1;
    if (v6 >= 0x80)
    {
      do
      {
        *v7++ = v6 | 0x80;
        v33 = v6 >> 14;
        v6 >>= 7;
      }
      while (v33);
      v4 = v7 - 1;
    }
    v4 += 2;
    *v7 = v6;
    v8 = (int *)*((_QWORD *)this + 4);
    v9 = &v8[*((int *)this + 6)];
    do
    {
      if (*(_QWORD *)a3 <= (unint64_t)v4)
        v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
      v11 = *v8++;
      v10 = v11;
      if (v11 > 0x7F)
      {
        *v4 = v10 | 0x80;
        v12 = v10 >> 7;
        if (v10 >> 14)
        {
          v4 += 2;
          do
          {
            *(v4 - 1) = v12 | 0x80;
            v13 = v12 >> 7;
            ++v4;
            v14 = v12 >> 14;
            v12 >>= 7;
          }
          while (v14);
          *(v4 - 1) = v13;
        }
        else
        {
          v4[1] = v12;
          v4 += 2;
        }
      }
      else
      {
        *v4++ = v10;
      }
    }
    while (v8 < v9);
  }
  v15 = *((_DWORD *)this + 16);
  if ((int)v15 >= 1)
  {
    if (*(_QWORD *)a3 <= (unint64_t)v4)
      v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
    *v4 = 18;
    v16 = v4 + 1;
    if (v15 >= 0x80)
    {
      do
      {
        *v16++ = v15 | 0x80;
        v34 = v15 >> 14;
        v15 >>= 7;
      }
      while (v34);
      v4 = v16 - 1;
    }
    v4 += 2;
    *v16 = v15;
    v17 = (int *)*((_QWORD *)this + 7);
    v18 = &v17[*((int *)this + 12)];
    do
    {
      if (*(_QWORD *)a3 <= (unint64_t)v4)
        v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
      v20 = *v17++;
      v19 = v20;
      if (v20 > 0x7F)
      {
        *v4 = v19 | 0x80;
        v21 = v19 >> 7;
        if (v19 >> 14)
        {
          v4 += 2;
          do
          {
            *(v4 - 1) = v21 | 0x80;
            v22 = v21 >> 7;
            ++v4;
            v23 = v21 >> 14;
            v21 >>= 7;
          }
          while (v23);
          *(v4 - 1) = v22;
        }
        else
        {
          v4[1] = v21;
          v4 += 2;
        }
      }
      else
      {
        *v4++ = v19;
      }
    }
    while (v17 < v18);
  }
  v24 = *((_DWORD *)this + 4);
  if ((v24 & 1) != 0)
    v4 = google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 3, *((_QWORD *)this + 12) & 0xFFFFFFFFFFFFFFFELL, v4);
  if ((v24 & 2) != 0)
    v4 = google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 4, *((_QWORD *)this + 13) & 0xFFFFFFFFFFFFFFFELL, v4);
  v25 = *((unsigned int *)this + 20);
  if ((int)v25 >= 1)
  {
    v26 = 0;
    v27 = 8 * v25;
    do
    {
      v28 = *(_QWORD **)(*((_QWORD *)this + 11) + v26 + 8);
      if (*((char *)v28 + 23) < 0)
      {
        v29 = v28[1];
        if (v29 > 127)
          goto LABEL_46;
      }
      else
      {
        v29 = *((unsigned __int8 *)v28 + 23);
      }
      if (*(_QWORD *)a3 - (_QWORD)v4 + 14 >= v29)
      {
        *v4 = 50;
        v4[1] = v29;
        if (*((char *)v28 + 23) < 0)
          v28 = (_QWORD *)*v28;
        v30 = v4 + 2;
        memcpy(v4 + 2, v28, v29);
        v4 = &v30[v29];
        goto LABEL_44;
      }
LABEL_46:
      v4 = google::protobuf::io::EpsCopyOutputStream::WriteStringOutline(a3, 6, (uint64_t)v28, v4);
LABEL_44:
      v26 += 8;
    }
    while (v27 != v26);
  }
  v31 = *((_QWORD *)this + 1);
  if ((v31 & 1) != 0)
    return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v31 & 0xFFFFFFFFFFFFFFFELL) + 8), (const google::protobuf::UnknownFieldSet *)v4, a3, (google::protobuf::io::EpsCopyOutputStream *)v4);
  else
    return (const google::protobuf::UnknownFieldSet *)v4;
}

const InternalMetadata *google::protobuf::SourceCodeInfo_Location::ByteSizeLong(google::protobuf::SourceCodeInfo_Location *this)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  CachedSize *v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  const InternalMetadata *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v2 = google::protobuf::internal::WireFormatLite::Int32Size((unsigned int *)this + 6);
  if (v2)
  {
    v3 = v2;
    if ((v2 & 0x80000000) != 0)
      v4 = 11;
    else
      v4 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  else
  {
    v3 = 0;
    v4 = 0;
  }
  *((_DWORD *)this + 10) = v3;
  v5 = v4 + v2;
  v6 = google::protobuf::internal::WireFormatLite::Int32Size((unsigned int *)this + 12);
  if (v6)
  {
    v8 = v6;
    if ((v6 & 0x80000000) != 0)
      v9 = 11;
    else
      v9 = ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    v5 += v9;
  }
  else
  {
    v8 = 0;
  }
  *((_DWORD *)this + 16) = v8;
  v10 = *((unsigned int *)this + 20);
  v11 = (const InternalMetadata *)(v5 + v6 + v10);
  if ((int)v10 >= 1)
  {
    v12 = (uint64_t *)(*((_QWORD *)this + 11) + 8);
    do
    {
      v13 = *v12++;
      v14 = *(unsigned __int8 *)(v13 + 23);
      v15 = *(_QWORD *)(v13 + 8);
      if ((v14 & 0x80u) == 0)
        v15 = v14;
      v11 = (const InternalMetadata *)((char *)v11 + v15 + ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6));
      --v10;
    }
    while (v10);
  }
  v16 = *((_DWORD *)this + 4);
  if ((v16 & 3) != 0)
  {
    if ((v16 & 1) != 0)
    {
      v17 = *((_QWORD *)this + 12) & 0xFFFFFFFFFFFFFFFELL;
      v18 = *(unsigned __int8 *)(v17 + 23);
      v19 = *(_QWORD *)(v17 + 8);
      if ((v18 & 0x80u) == 0)
        v19 = v18;
      v11 = (const InternalMetadata *)((char *)v11 + v19 + ((9 * (__clz(v19 | 1) ^ 0x1F) + 73) >> 6) + 1);
    }
    if ((v16 & 2) != 0)
    {
      v20 = *((_QWORD *)this + 13) & 0xFFFFFFFFFFFFFFFELL;
      v21 = *(unsigned __int8 *)(v20 + 23);
      v22 = *(_QWORD *)(v20 + 8);
      if ((v21 & 0x80u) == 0)
        v22 = v21;
      v11 = (const InternalMetadata *)((char *)v11 + v22 + ((9 * (__clz(v22 | 1) ^ 0x1F) + 73) >> 6) + 1);
    }
  }
  if ((*((_BYTE *)this + 8) & 1) != 0)
    return (const InternalMetadata *)google::protobuf::internal::ComputeUnknownFieldsSize((google::protobuf::SourceCodeInfo_Location *)((char *)this + 8), v11, (_DWORD *)this + 5, v7);
  *((_DWORD *)this + 5) = (_DWORD)v11;
  return v11;
}

void google::protobuf::SourceCodeInfo_Location::MergeFrom(google::protobuf::SourceCodeInfo_Location *this, const google::protobuf::Message *a2, google::protobuf::Message *a3)
{
  if (*(void (***)(google::protobuf::SourceCodeInfo_Location *__hidden))a2 == &off_1E1BF83F0)
    google::protobuf::SourceCodeInfo_Location::MergeFrom(this, a2);
  else
    google::protobuf::internal::ReflectionOps::Merge(a2, this, a3);
}

void google::protobuf::SourceCodeInfo_Location::MergeFrom(google::protobuf::SourceCodeInfo_Location *this, const google::protobuf::SourceCodeInfo_Location *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  signed int v11;
  const std::string **v12;
  unsigned int *v13;
  int v14;
  int *v15;
  int v16;
  __int128 *v17;
  uint64_t v18;
  google::protobuf::internal::ArenaImpl *v19;
  __int128 *v20;
  uint64_t v21;
  google::protobuf::internal::ArenaImpl *v22;

  v4 = *((_QWORD *)a2 + 1);
  if ((v4 & 1) != 0)
    google::protobuf::internal::InternalMetadata::DoMergeFrom<google::protobuf::UnknownFieldSet>((uint64_t *)this + 1, (const google::protobuf::UnknownFieldSet *)((v4 & 0xFFFFFFFFFFFFFFFELL) + 8));
  v5 = *((_DWORD *)a2 + 6);
  if (v5)
  {
    v6 = *((int *)this + 6);
    google::protobuf::RepeatedField<int>::Reserve((unsigned int *)this + 6, v6 + v5);
    v7 = *((_QWORD *)this + 4);
    *((_DWORD *)this + 6) += *((_DWORD *)a2 + 6);
    memcpy((void *)(v7 + 4 * v6), *((const void **)a2 + 4), 4 * *((int *)a2 + 6));
  }
  v8 = *((_DWORD *)a2 + 12);
  if (v8)
  {
    v9 = *((int *)this + 12);
    google::protobuf::RepeatedField<int>::Reserve((unsigned int *)this + 12, v9 + v8);
    v10 = *((_QWORD *)this + 7);
    *((_DWORD *)this + 12) += *((_DWORD *)a2 + 12);
    memcpy((void *)(v10 + 4 * v9), *((const void **)a2 + 7), 4 * *((int *)a2 + 12));
  }
  v11 = *((_DWORD *)a2 + 20);
  if (v11)
  {
    v12 = (const std::string **)(*((_QWORD *)a2 + 11) + 8);
    v13 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::SourceCodeInfo_Location *)((char *)this + 72), *((_DWORD *)a2 + 20));
    google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((std::string *)this + 3, (std::string **)v13, v12, v11, **((_DWORD **)this + 11) - *((_DWORD *)this + 20));
    v14 = *((_DWORD *)this + 20) + v11;
    *((_DWORD *)this + 20) = v14;
    v15 = (int *)*((_QWORD *)this + 11);
    if (*v15 < v14)
      *v15 = v14;
  }
  v16 = *((_DWORD *)a2 + 4);
  if ((v16 & 3) != 0)
  {
    if ((v16 & 1) != 0)
    {
      v17 = (__int128 *)(*((_QWORD *)a2 + 12) & 0xFFFFFFFFFFFFFFFELL);
      *((_DWORD *)this + 4) |= 1u;
      v18 = *((_QWORD *)this + 1);
      v19 = (google::protobuf::internal::ArenaImpl *)(v18 & 0xFFFFFFFFFFFFFFFELL);
      if ((v18 & 1) != 0)
        v19 = *(google::protobuf::internal::ArenaImpl **)v19;
      google::protobuf::internal::ArenaStringPtr::Set((std::string **)this + 12, (std::string *)&google::protobuf::internal::fixed_address_empty_string, v17, v19);
    }
    if ((v16 & 2) != 0)
    {
      v20 = (__int128 *)(*((_QWORD *)a2 + 13) & 0xFFFFFFFFFFFFFFFELL);
      *((_DWORD *)this + 4) |= 2u;
      v21 = *((_QWORD *)this + 1);
      v22 = (google::protobuf::internal::ArenaImpl *)(v21 & 0xFFFFFFFFFFFFFFFELL);
      if ((v21 & 1) != 0)
        v22 = *(google::protobuf::internal::ArenaImpl **)v22;
      google::protobuf::internal::ArenaStringPtr::Set((std::string **)this + 13, (std::string *)&google::protobuf::internal::fixed_address_empty_string, v20, v22);
    }
  }
}

void google::protobuf::SourceCodeInfo_Location::CopyFrom(google::protobuf::SourceCodeInfo_Location *this, const google::protobuf::Message *a2)
{
  google::protobuf::Message *v4;

  if (a2 != this)
  {
    google::protobuf::SourceCodeInfo_Location::Clear(this);
    google::protobuf::SourceCodeInfo_Location::MergeFrom(this, a2, v4);
  }
}

uint64_t google::protobuf::SourceCodeInfo_Location::IsInitialized(google::protobuf::SourceCodeInfo_Location *this)
{
  return 1;
}

uint64_t google::protobuf::SourceCodeInfo_Location::GetMetadata(google::protobuf::SourceCodeInfo_Location *this)
{
  google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0);
  return off_1EDF46FE8[46];
}

google::protobuf::SourceCodeInfo *google::protobuf::SourceCodeInfo::SourceCodeInfo(google::protobuf::SourceCodeInfo *this, Arena *a2)
{
  *(_QWORD *)this = &off_1E1BF7A98;
  *((_QWORD *)this + 1) = a2;
  *((_QWORD *)this + 2) = a2;
  *((_QWORD *)this + 3) = 0;
  *((_QWORD *)this + 4) = 0;
  *((_DWORD *)this + 10) = 0;
  if (atomic_load(scc_info_SourceCodeInfo_google_2fprotobuf_2fdescriptor_2eproto))
    google::protobuf::internal::InitSCCImpl(scc_info_SourceCodeInfo_google_2fprotobuf_2fdescriptor_2eproto);
  return this;
}

void sub_1888B767C(_Unwind_Exception *a1)
{
  _QWORD *v1;

  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<google::protobuf::SourceCodeInfo_Location>::TypeHandler>(v1);
  _Unwind_Resume(a1);
}

void google::protobuf::SourceCodeInfo::~SourceCodeInfo(google::protobuf::SourceCodeInfo *this)
{
  google::protobuf::internal::InternalMetadata::Delete<google::protobuf::UnknownFieldSet>((uint64_t *)this + 1);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<google::protobuf::SourceCodeInfo_Location>::TypeHandler>((_QWORD *)this + 2);
}

{
  google::protobuf::SourceCodeInfo::~SourceCodeInfo(this);
  JUMPOUT(0x18D76437CLL);
}

uint64_t google::protobuf::SourceCodeInfo::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 40) = a2;
  return this;
}

google::protobuf::internal *google::protobuf::SourceCodeInfo::_InternalParse(uint64_t a1, google::protobuf::internal *a2, google::protobuf::internal::EpsCopyInputStream *this)
{
  char v5;
  google::protobuf::internal *result;
  _QWORD *v7;
  google::protobuf::internal *v8;
  unsigned int v9;
  BOOL v10;
  google::protobuf::UnknownFieldSet *v11;
  google::protobuf::internal *v12;
  int *v13;
  int v14;
  int v15;
  google::protobuf::SourceCodeInfo_Location *v16;
  uint64_t v17;
  uint64_t v18;
  const char *v19;
  google::protobuf::internal *v20;
  uint64_t v21;
  int v22;
  int v23;
  BOOL v24;
  int v25;
  unint64_t v26;
  int v27;
  uint64_t v28;
  google::protobuf::internal *v29;
  google::protobuf::UnknownFieldSet *v30;

  v29 = a2;
  v5 = google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(this, (const char **)&v29, *((_DWORD *)this + 23));
  result = v29;
  if ((v5 & 1) == 0)
  {
    v7 = (_QWORD *)(a1 + 8);
    while (1)
    {
      v8 = (google::protobuf::internal *)((char *)result + 1);
      v9 = *(unsigned __int8 *)result;
      if (*(char *)result < 0)
      {
        v9 = v9 + (*(unsigned __int8 *)v8 << 7) - 128;
        if (*(char *)v8 < 0)
        {
          v8 = (google::protobuf::internal *)((char *)result + 3);
          v28 = -21;
          while (1)
          {
            v9 += (*((unsigned __int8 *)v8 - 1) - 1) << (v28 + 35);
            if ((*((char *)v8 - 1) & 0x80000000) == 0)
              break;
            result = 0;
            v8 = (google::protobuf::internal *)((char *)v8 + 1);
            v28 += 7;
            if (!v28)
              return result;
          }
        }
        else
        {
          v8 = (google::protobuf::internal *)((char *)result + 2);
        }
      }
      v29 = v8;
      if (v9 == 10)
        break;
      if (v9)
        v10 = (v9 & 7) == 4;
      else
        v10 = 1;
      if (v10)
      {
        *((_DWORD *)this + 20) = v9 - 1;
        return v8;
      }
      if ((*v7 & 1) != 0)
      {
        v11 = (google::protobuf::UnknownFieldSet *)((*v7 & 0xFFFFFFFFFFFFFFFELL) + 8);
      }
      else
      {
        v11 = (google::protobuf::UnknownFieldSet *)google::protobuf::internal::InternalMetadata::mutable_unknown_fields_slow<google::protobuf::UnknownFieldSet>((uint64_t *)(a1 + 8));
        v8 = v29;
      }
      v30 = v11;
      result = google::protobuf::internal::FieldParser<google::protobuf::internal::UnknownFieldParserHelper>(v9, &v30, (uint64_t *)v8, (int32x2_t *)this);
      v29 = result;
      if (!result)
        return result;
LABEL_34:
      v27 = google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(this, (const char **)&v29, *((_DWORD *)this + 23));
      result = v29;
      if (v27)
        return result;
    }
    result = (google::protobuf::internal *)((char *)v8 - 1);
    while (1)
    {
      v12 = (google::protobuf::internal *)((char *)result + 1);
      v29 = v12;
      v13 = *(int **)(a1 + 32);
      if (!v13)
        break;
      v14 = *(_DWORD *)(a1 + 24);
      v15 = *v13;
      if (v14 >= *v13)
      {
        if (v15 == *(_DWORD *)(a1 + 28))
        {
LABEL_21:
          if (v14 <= v15)
          {
            google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 16), v15 - v14 + 1);
            v13 = *(int **)(a1 + 32);
          }
          v15 = *v13;
        }
        *v13 = v15 + 1;
        v16 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::SourceCodeInfo_Location>(*(google::protobuf::internal::ArenaImpl **)(a1 + 16));
        v17 = *(_QWORD *)(a1 + 32);
        v18 = *(int *)(a1 + 24);
        *(_DWORD *)(a1 + 24) = v18 + 1;
        *(_QWORD *)(v17 + 8 * v18 + 8) = v16;
        v12 = v29;
        goto LABEL_25;
      }
      *(_DWORD *)(a1 + 24) = v14 + 1;
      v16 = *(google::protobuf::SourceCodeInfo_Location **)&v13[2 * v14 + 2];
LABEL_25:
      v19 = (const char *)*(unsigned __int8 *)v12;
      if (*(char *)v12 < 0)
      {
        result = (google::protobuf::internal *)google::protobuf::internal::ReadSizeFallback(v12, v19);
        if (!result)
          return result;
        v20 = result;
      }
      else
      {
        v20 = (google::protobuf::internal *)((char *)v12 + 1);
      }
      v21 = *((_QWORD *)this + 1);
      v22 = (_DWORD)v19 + (_DWORD)v20 - v21;
      *(_QWORD *)this = v21 + (v22 & (v22 >> 31));
      v23 = *((_DWORD *)this + 7);
      *((_DWORD *)this + 7) = v22;
      LODWORD(v21) = *((_DWORD *)this + 22);
      v24 = __OFSUB__((_DWORD)v21, 1);
      LODWORD(v21) = v21 - 1;
      *((_DWORD *)this + 22) = v21;
      if ((int)v21 < 0 != v24)
        return 0;
      result = google::protobuf::SourceCodeInfo_Location::_InternalParse((uint64_t)v16, v20, this);
      if (!result)
        return result;
      ++*((_DWORD *)this + 22);
      if (*((_DWORD *)this + 20))
        return 0;
      v25 = *((_DWORD *)this + 7) + v23 - v22;
      *((_DWORD *)this + 7) = v25;
      v26 = *((_QWORD *)this + 1) + (v25 & (v25 >> 31));
      *(_QWORD *)this = v26;
      v29 = result;
      if (v26 <= (unint64_t)result || *(_BYTE *)result != 10)
        goto LABEL_34;
    }
    v14 = *(_DWORD *)(a1 + 24);
    v15 = *(_DWORD *)(a1 + 28);
    goto LABEL_21;
  }
  return result;
}

const google::protobuf::UnknownFieldSet *google::protobuf::SourceCodeInfo::_InternalSerialize(google::protobuf::SourceCodeInfo *this, unsigned __int8 *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  int v6;
  int i;
  google::protobuf::SourceCodeInfo_Location *v8;
  unsigned int v9;
  unsigned __int8 *v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  uint64_t v14;

  v6 = *((_DWORD *)this + 6);
  if (v6)
  {
    for (i = 0; i != v6; ++i)
    {
      if (*(_QWORD *)a3 <= (unint64_t)a2)
        a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
      v8 = *(google::protobuf::SourceCodeInfo_Location **)(*((_QWORD *)this + 4) + 8 * i + 8);
      *a2 = 10;
      v9 = *((_DWORD *)v8 + 5);
      if (v9 > 0x7F)
      {
        a2[1] = v9 | 0x80;
        v11 = v9 >> 7;
        if (v9 >> 14)
        {
          v10 = a2 + 3;
          do
          {
            *(v10 - 1) = v11 | 0x80;
            v12 = v11 >> 7;
            ++v10;
            v13 = v11 >> 14;
            v11 >>= 7;
          }
          while (v13);
          *(v10 - 1) = v12;
        }
        else
        {
          a2[2] = v11;
          v10 = a2 + 3;
        }
      }
      else
      {
        a2[1] = v9;
        v10 = a2 + 2;
      }
      a2 = (unsigned __int8 *)google::protobuf::SourceCodeInfo_Location::_InternalSerialize(v8, v10, a3);
    }
  }
  v14 = *((_QWORD *)this + 1);
  if ((v14 & 1) != 0)
    return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v14 & 0xFFFFFFFFFFFFFFFELL) + 8), (const google::protobuf::UnknownFieldSet *)a2, a3, a4);
  else
    return (const google::protobuf::UnknownFieldSet *)a2;
}

const InternalMetadata *google::protobuf::SourceCodeInfo::ByteSizeLong(google::protobuf::SourceCodeInfo *this, uint64_t a2, uint64_t a3, CachedSize *a4)
{
  const InternalMetadata *v5;
  uint64_t v6;
  google::protobuf::SourceCodeInfo_Location **v7;
  uint64_t v8;
  google::protobuf::SourceCodeInfo_Location *v9;
  const InternalMetadata *v10;

  v5 = (const InternalMetadata *)*((int *)this + 6);
  v6 = *((_QWORD *)this + 4);
  if (v6)
    v7 = (google::protobuf::SourceCodeInfo_Location **)(v6 + 8);
  else
    v7 = 0;
  if ((_DWORD)v5)
  {
    v8 = 8 * (_QWORD)v5;
    do
    {
      v9 = *v7++;
      v10 = google::protobuf::SourceCodeInfo_Location::ByteSizeLong(v9);
      v5 = (const InternalMetadata *)((char *)v5 + (_QWORD)v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6));
      v8 -= 8;
    }
    while (v8);
  }
  else
  {
    v5 = 0;
  }
  if ((*((_BYTE *)this + 8) & 1) != 0)
    return (const InternalMetadata *)google::protobuf::internal::ComputeUnknownFieldsSize((google::protobuf::SourceCodeInfo *)((char *)this + 8), v5, (_DWORD *)this + 10, a4);
  *((_DWORD *)this + 10) = (_DWORD)v5;
  return v5;
}

void google::protobuf::SourceCodeInfo::MergeFrom(google::protobuf::SourceCodeInfo *this, const google::protobuf::Message *a2, google::protobuf::Message *a3)
{
  if (*(void (***)(google::protobuf::SourceCodeInfo *__hidden))a2 == &off_1E1BF7A98)
    google::protobuf::SourceCodeInfo::MergeFrom(this, a2);
  else
    google::protobuf::internal::ReflectionOps::Merge(a2, this, a3);
}

void google::protobuf::SourceCodeInfo::CopyFrom(google::protobuf::SourceCodeInfo *this, const google::protobuf::Message *a2)
{
  google::protobuf::Message *v4;

  if (a2 != this)
  {
    google::protobuf::SourceCodeInfo::Clear(this);
    google::protobuf::SourceCodeInfo::MergeFrom(this, a2, v4);
  }
}

uint64_t google::protobuf::SourceCodeInfo::IsInitialized(google::protobuf::SourceCodeInfo *this)
{
  return 1;
}

uint64_t google::protobuf::SourceCodeInfo::GetMetadata(google::protobuf::SourceCodeInfo *this)
{
  google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0);
  return off_1EDF46FE8[48];
}

google::protobuf::GeneratedCodeInfo_Annotation *google::protobuf::GeneratedCodeInfo_Annotation::GeneratedCodeInfo_Annotation(google::protobuf::GeneratedCodeInfo_Annotation *this, Arena *a2)
{
  *(_QWORD *)this = &off_1E1BF8598;
  *((_QWORD *)this + 1) = a2;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  *((_QWORD *)this + 4) = a2;
  if (atomic_load(scc_info_GeneratedCodeInfo_Annotation_google_2fprotobuf_2fdescriptor_2eproto))
    google::protobuf::internal::InitSCCImpl(scc_info_GeneratedCodeInfo_Annotation_google_2fprotobuf_2fdescriptor_2eproto);
  *((_QWORD *)this + 6) = &google::protobuf::internal::fixed_address_empty_string;
  *((_QWORD *)this + 7) = 0;
  return this;
}

void sub_1888B7C5C(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  uint64_t v5;

  if (*(int *)(v1 + 28) >= 1)
  {
    v3 = *(_QWORD *)(v1 + 32);
    v5 = *(_QWORD *)(v3 - 8);
    v4 = (void *)(v3 - 8);
    if (!v5)
      operator delete(v4);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::GeneratedCodeInfo_Annotation::~GeneratedCodeInfo_Annotation(google::protobuf::GeneratedCodeInfo_Annotation *this)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;

  v2 = *((_QWORD *)this + 6);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v2 + 23) < 0)
      operator delete(*(void **)v2);
    MEMORY[0x18D76437C](v2, 0x1012C40EC159624);
  }
  google::protobuf::internal::InternalMetadata::Delete<google::protobuf::UnknownFieldSet>((uint64_t *)this + 1);
  if (*((int *)this + 7) >= 1)
  {
    v3 = *((_QWORD *)this + 4);
    v5 = *(_QWORD *)(v3 - 8);
    v4 = (void *)(v3 - 8);
    if (!v5)
      operator delete(v4);
  }
}

{
  google::protobuf::GeneratedCodeInfo_Annotation::~GeneratedCodeInfo_Annotation(this);
  JUMPOUT(0x18D76437CLL);
}

uint64_t google::protobuf::GeneratedCodeInfo_Annotation::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 20) = a2;
  return this;
}

google::protobuf::UnknownFieldSet *google::protobuf::GeneratedCodeInfo_Annotation::Clear(google::protobuf::GeneratedCodeInfo_Annotation *this)
{
  int v1;
  unint64_t v2;
  google::protobuf::UnknownFieldSet *result;
  char v4;

  *((_DWORD *)this + 6) = 0;
  v1 = *((_DWORD *)this + 4);
  if ((v1 & 1) != 0)
  {
    v2 = *((_QWORD *)this + 6) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v2 + 23) < 0)
    {
      **(_BYTE **)v2 = 0;
      *(_QWORD *)(v2 + 8) = 0;
    }
    else
    {
      *(_BYTE *)v2 = 0;
      *(_BYTE *)(v2 + 23) = 0;
    }
  }
  if ((v1 & 6) != 0)
    *((_QWORD *)this + 7) = 0;
  v4 = *((_BYTE *)this + 8);
  result = (google::protobuf::GeneratedCodeInfo_Annotation *)((char *)this + 8);
  *((_DWORD *)result + 2) = 0;
  if ((v4 & 1) != 0)
    return google::protobuf::internal::InternalMetadata::DoClear<google::protobuf::UnknownFieldSet>((uint64_t *)result);
  return result;
}

google::protobuf::internal *google::protobuf::GeneratedCodeInfo_Annotation::_InternalParse(uint64_t a1, google::protobuf::internal *a2, google::protobuf::internal::EpsCopyInputStream *this)
{
  const char **v5;
  int v6;
  google::protobuf::internal *v7;
  _QWORD *v9;
  std::string **v10;
  unsigned int v11;
  google::protobuf::internal *v12;
  uint64_t v13;
  google::protobuf::internal::ArenaImpl *v14;
  std::string *v15;
  uint64_t v16;
  google::protobuf::internal *v17;
  int v18;
  uint64_t v19;
  google::protobuf::internal *v20;
  int v21;
  uint64_t v22;
  uint64_t i;
  uint64_t j;
  int Varint64;
  BOOL v26;
  google::protobuf::UnknownFieldSet *v27;
  google::protobuf::internal *v28;
  google::protobuf::UnknownFieldSet *v29;

  v28 = a2;
  v6 = 0;
  if ((google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(this, (const char **)&v28, *((_DWORD *)this + 23)) & 1) != 0)
  {
LABEL_2:
    v7 = v28;
    goto LABEL_3;
  }
  v9 = (_QWORD *)(a1 + 8);
  v10 = (std::string **)(a1 + 48);
  while (2)
  {
    v7 = (google::protobuf::internal *)((char *)v28 + 1);
    v11 = *(unsigned __int8 *)v28;
    if (*(char *)v28 < 0)
    {
      v11 = v11 + (*(unsigned __int8 *)v7 << 7) - 128;
      if (*(char *)v7 < 0)
      {
        v7 = (google::protobuf::internal *)((char *)v28 + 3);
        v22 = -21;
        while (1)
        {
          v11 += (*((unsigned __int8 *)v7 - 1) - 1) << (v22 + 35);
          if ((*((char *)v7 - 1) & 0x80000000) == 0)
            break;
          v7 = (google::protobuf::internal *)((char *)v7 + 1);
          v22 += 7;
          if (!v22)
            goto LABEL_54;
        }
      }
      else
      {
        v7 = (google::protobuf::internal *)((char *)v28 + 2);
      }
    }
    v28 = v7;
    switch(v11 >> 3)
    {
      case 1u:
        if (v11 == 10)
        {
          v12 = (google::protobuf::internal *)google::protobuf::internal::EpsCopyInputStream::ReadPackedVarint<char const* google::protobuf::internal::VarintParser<int,false>(void *,char const*,google::protobuf::internal::ParseContext *)::{lambda(unsigned long long)#1}>((uint64_t)this, v7, (unsigned int *)(a1 + 24));
          goto LABEL_49;
        }
        if (v11 != 8)
          goto LABEL_42;
        Varint64 = google::protobuf::internal::ReadVarint64((google::protobuf::internal *)&v28, v5);
        google::protobuf::SourceCodeInfo_Location::_internal_add_path((google::protobuf::SourceCodeInfo_Location *)a1, Varint64);
        if (!v28)
          goto LABEL_54;
        goto LABEL_50;
      case 2u:
        if (v11 != 18)
          goto LABEL_42;
        *(_DWORD *)(a1 + 16) |= 1u;
        v13 = *(_QWORD *)(a1 + 8);
        v14 = (google::protobuf::internal::ArenaImpl *)(v13 & 0xFFFFFFFFFFFFFFFELL);
        if ((v13 & 1) != 0)
          v14 = *(google::protobuf::internal::ArenaImpl **)v14;
        v15 = *v10;
        if (*v10 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
        {
          v15 = (std::string *)google::protobuf::internal::ArenaStringPtr::MutableSlow<>((_QWORD *)(a1 + 48), v14);
          v7 = v28;
        }
        v12 = (google::protobuf::internal *)google::protobuf::internal::InlineGreedyStringParser(v15, (std::string::value_type *)v7, (uint64_t)this);
        goto LABEL_49;
      case 3u:
        if (v11 != 24)
          goto LABEL_42;
        v6 |= 2u;
        v17 = (google::protobuf::internal *)((char *)v7 + 1);
        LODWORD(v16) = *(unsigned __int8 *)v7;
        if ((v16 & 0x80) == 0)
          goto LABEL_21;
        v18 = *(char *)v17;
        v16 = v16 + (v18 << 7) - 128;
        if (v18 < 0)
        {
          v17 = (google::protobuf::internal *)((char *)v7 + 3);
          for (i = 14; i != 70; i += 7)
          {
            v16 += (*((unsigned __int8 *)v17 - 1) - 1) << i;
            if ((*((char *)v17 - 1) & 0x80000000) == 0)
              goto LABEL_21;
            v17 = (google::protobuf::internal *)((char *)v17 + 1);
          }
          v7 = 0;
          *(_DWORD *)(a1 + 56) = 0;
          goto LABEL_3;
        }
        v17 = (google::protobuf::internal *)((char *)v7 + 2);
LABEL_21:
        v28 = v17;
        *(_DWORD *)(a1 + 56) = v16;
        goto LABEL_50;
      case 4u:
        if (v11 != 32)
          goto LABEL_42;
        v6 |= 4u;
        v20 = (google::protobuf::internal *)((char *)v7 + 1);
        LODWORD(v19) = *(unsigned __int8 *)v7;
        if ((v19 & 0x80) == 0)
          goto LABEL_26;
        v21 = *(char *)v20;
        v19 = v19 + (v21 << 7) - 128;
        if ((v21 & 0x80000000) == 0)
        {
          v20 = (google::protobuf::internal *)((char *)v7 + 2);
LABEL_26:
          v28 = v20;
          *(_DWORD *)(a1 + 60) = v19;
LABEL_50:
          if (google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(this, (const char **)&v28, *((_DWORD *)this + 23)))goto LABEL_2;
          continue;
        }
        v20 = (google::protobuf::internal *)((char *)v7 + 3);
        for (j = 14; j != 70; j += 7)
        {
          v19 += (*((unsigned __int8 *)v20 - 1) - 1) << j;
          if ((*((char *)v20 - 1) & 0x80000000) == 0)
            goto LABEL_26;
          v20 = (google::protobuf::internal *)((char *)v20 + 1);
        }
        v7 = 0;
        *(_DWORD *)(a1 + 60) = 0;
LABEL_3:
        *(_DWORD *)(a1 + 16) |= v6;
        return v7;
      default:
LABEL_42:
        if (v11)
          v26 = (v11 & 7) == 4;
        else
          v26 = 1;
        if (v26)
        {
          *((_DWORD *)this + 20) = v11 - 1;
          goto LABEL_3;
        }
        if ((*v9 & 1) != 0)
        {
          v27 = (google::protobuf::UnknownFieldSet *)((*v9 & 0xFFFFFFFFFFFFFFFELL) + 8);
        }
        else
        {
          v27 = (google::protobuf::UnknownFieldSet *)google::protobuf::internal::InternalMetadata::mutable_unknown_fields_slow<google::protobuf::UnknownFieldSet>((uint64_t *)(a1 + 8));
          v7 = v28;
        }
        v29 = v27;
        v12 = google::protobuf::internal::FieldParser<google::protobuf::internal::UnknownFieldParserHelper>(v11, &v29, (uint64_t *)v7, (int32x2_t *)this);
LABEL_49:
        v28 = v12;
        if (!v12)
        {
LABEL_54:
          v7 = 0;
          goto LABEL_3;
        }
        goto LABEL_50;
    }
  }
}

const google::protobuf::UnknownFieldSet *google::protobuf::GeneratedCodeInfo_Annotation::_InternalSerialize(google::protobuf::GeneratedCodeInfo_Annotation *this, unsigned __int8 *a2, google::protobuf::io::EpsCopyOutputStream *a3)
{
  unsigned __int8 *v4;
  unsigned int v6;
  _BYTE *v7;
  int *v8;
  int *v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unsigned int v26;

  v4 = a2;
  v6 = *((_DWORD *)this + 10);
  if ((int)v6 >= 1)
  {
    if (*(_QWORD *)a3 <= (unint64_t)a2)
      v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
    *v4 = 10;
    v7 = v4 + 1;
    if (v6 >= 0x80)
    {
      do
      {
        *v7++ = v6 | 0x80;
        v26 = v6 >> 14;
        v6 >>= 7;
      }
      while (v26);
      v4 = v7 - 1;
    }
    v4 += 2;
    *v7 = v6;
    v8 = (int *)*((_QWORD *)this + 4);
    v9 = &v8[*((int *)this + 6)];
    do
    {
      if (*(_QWORD *)a3 <= (unint64_t)v4)
        v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
      v11 = *v8++;
      v10 = v11;
      if (v11 > 0x7F)
      {
        *v4 = v10 | 0x80;
        v12 = v10 >> 7;
        if (v10 >> 14)
        {
          v4 += 2;
          do
          {
            *(v4 - 1) = v12 | 0x80;
            v13 = v12 >> 7;
            ++v4;
            v14 = v12 >> 14;
            v12 >>= 7;
          }
          while (v14);
          *(v4 - 1) = v13;
        }
        else
        {
          v4[1] = v12;
          v4 += 2;
        }
      }
      else
      {
        *v4++ = v10;
      }
    }
    while (v8 < v9);
  }
  v15 = *((_DWORD *)this + 4);
  if ((v15 & 1) != 0)
  {
    v4 = google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 2, *((_QWORD *)this + 6) & 0xFFFFFFFFFFFFFFFELL, v4);
    if ((v15 & 2) == 0)
    {
LABEL_18:
      if ((v15 & 4) == 0)
        goto LABEL_41;
      goto LABEL_32;
    }
  }
  else if ((v15 & 2) == 0)
  {
    goto LABEL_18;
  }
  if (*(_QWORD *)a3 <= (unint64_t)v4)
    v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
  v16 = *((int *)this + 14);
  *v4 = 24;
  if (v16 > 0x7F)
  {
    v4[1] = v16 | 0x80;
    v17 = v16 >> 7;
    if (v16 >> 14)
    {
      v4 += 3;
      do
      {
        *(v4 - 1) = v17 | 0x80;
        v18 = v17 >> 7;
        ++v4;
        v19 = v17 >> 14;
        v17 >>= 7;
      }
      while (v19);
      *(v4 - 1) = v18;
      if ((v15 & 4) == 0)
        goto LABEL_41;
    }
    else
    {
      v4[2] = v17;
      v4 += 3;
      if ((v15 & 4) == 0)
        goto LABEL_41;
    }
  }
  else
  {
    v4[1] = v16;
    v4 += 2;
    if ((v15 & 4) == 0)
      goto LABEL_41;
  }
LABEL_32:
  if (*(_QWORD *)a3 <= (unint64_t)v4)
    v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
  v20 = *((int *)this + 15);
  *v4 = 32;
  if (v20 > 0x7F)
  {
    v4[1] = v20 | 0x80;
    v21 = v20 >> 7;
    if (v20 >> 14)
    {
      v4 += 3;
      do
      {
        *(v4 - 1) = v21 | 0x80;
        v22 = v21 >> 7;
        ++v4;
        v23 = v21 >> 14;
        v21 >>= 7;
      }
      while (v23);
      *(v4 - 1) = v22;
    }
    else
    {
      v4[2] = v21;
      v4 += 3;
    }
  }
  else
  {
    v4[1] = v20;
    v4 += 2;
  }
LABEL_41:
  v24 = *((_QWORD *)this + 1);
  if ((v24 & 1) != 0)
    return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v24 & 0xFFFFFFFFFFFFFFFELL) + 8), (const google::protobuf::UnknownFieldSet *)v4, a3, (google::protobuf::io::EpsCopyOutputStream *)v4);
  else
    return (const google::protobuf::UnknownFieldSet *)v4;
}

const InternalMetadata *google::protobuf::GeneratedCodeInfo_Annotation::ByteSizeLong(google::protobuf::GeneratedCodeInfo_Annotation *this)
{
  uint64_t v2;
  CachedSize *v3;
  int v4;
  uint64_t v5;
  const InternalMetadata *v6;
  int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  int v13;
  uint64_t v14;

  v2 = google::protobuf::internal::WireFormatLite::Int32Size((unsigned int *)this + 6);
  if (v2)
  {
    v4 = v2;
    if ((v2 & 0x80000000) != 0)
      v5 = 11;
    else
      v5 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  else
  {
    v4 = 0;
    v5 = 0;
  }
  *((_DWORD *)this + 10) = v4;
  v6 = (const InternalMetadata *)(v5 + v2);
  v7 = *((_DWORD *)this + 4);
  if ((v7 & 7) == 0)
    goto LABEL_22;
  if ((v7 & 1) != 0)
  {
    v8 = *((_QWORD *)this + 6) & 0xFFFFFFFFFFFFFFFELL;
    v9 = *(unsigned __int8 *)(v8 + 23);
    v10 = *(_QWORD *)(v8 + 8);
    if ((v9 & 0x80u) == 0)
      v10 = v9;
    v6 = (const InternalMetadata *)((char *)v6 + v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1);
    if ((v7 & 2) == 0)
    {
LABEL_9:
      if ((v7 & 4) == 0)
        goto LABEL_22;
      goto LABEL_18;
    }
  }
  else if ((v7 & 2) == 0)
  {
    goto LABEL_9;
  }
  v11 = *((_DWORD *)this + 14);
  if (v11 < 0)
    v12 = 11;
  else
    v12 = ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
  v6 = (const InternalMetadata *)((char *)v6 + v12);
  if ((v7 & 4) != 0)
  {
LABEL_18:
    v13 = *((_DWORD *)this + 15);
    if (v13 < 0)
      v14 = 11;
    else
      v14 = ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
    v6 = (const InternalMetadata *)((char *)v6 + v14);
  }
LABEL_22:
  if ((*((_BYTE *)this + 8) & 1) != 0)
    return (const InternalMetadata *)google::protobuf::internal::ComputeUnknownFieldsSize((google::protobuf::GeneratedCodeInfo_Annotation *)((char *)this + 8), v6, (_DWORD *)this + 5, v3);
  *((_DWORD *)this + 5) = (_DWORD)v6;
  return v6;
}

void google::protobuf::GeneratedCodeInfo_Annotation::MergeFrom(google::protobuf::GeneratedCodeInfo_Annotation *this, const google::protobuf::Message *a2, google::protobuf::Message *a3)
{
  if (*(void (***)(google::protobuf::GeneratedCodeInfo_Annotation *__hidden))a2 == &off_1E1BF8598)
    google::protobuf::GeneratedCodeInfo_Annotation::MergeFrom(this, a2);
  else
    google::protobuf::internal::ReflectionOps::Merge(a2, this, a3);
}

void google::protobuf::GeneratedCodeInfo_Annotation::MergeFrom(google::protobuf::GeneratedCodeInfo_Annotation *this, const google::protobuf::GeneratedCodeInfo_Annotation *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  __int128 *v9;
  uint64_t v10;
  google::protobuf::internal::ArenaImpl *v11;

  v4 = *((_QWORD *)a2 + 1);
  if ((v4 & 1) != 0)
    google::protobuf::internal::InternalMetadata::DoMergeFrom<google::protobuf::UnknownFieldSet>((uint64_t *)this + 1, (const google::protobuf::UnknownFieldSet *)((v4 & 0xFFFFFFFFFFFFFFFELL) + 8));
  v5 = *((_DWORD *)a2 + 6);
  if (v5)
  {
    v6 = *((int *)this + 6);
    google::protobuf::RepeatedField<int>::Reserve((unsigned int *)this + 6, v6 + v5);
    v7 = *((_QWORD *)this + 4);
    *((_DWORD *)this + 6) += *((_DWORD *)a2 + 6);
    memcpy((void *)(v7 + 4 * v6), *((const void **)a2 + 4), 4 * *((int *)a2 + 6));
  }
  v8 = *((_DWORD *)a2 + 4);
  if ((v8 & 7) != 0)
  {
    if ((v8 & 1) != 0)
    {
      v9 = (__int128 *)(*((_QWORD *)a2 + 6) & 0xFFFFFFFFFFFFFFFELL);
      *((_DWORD *)this + 4) |= 1u;
      v10 = *((_QWORD *)this + 1);
      v11 = (google::protobuf::internal::ArenaImpl *)(v10 & 0xFFFFFFFFFFFFFFFELL);
      if ((v10 & 1) != 0)
        v11 = *(google::protobuf::internal::ArenaImpl **)v11;
      google::protobuf::internal::ArenaStringPtr::Set((std::string **)this + 6, (std::string *)&google::protobuf::internal::fixed_address_empty_string, v9, v11);
      if ((v8 & 2) == 0)
      {
LABEL_8:
        if ((v8 & 4) == 0)
        {
LABEL_10:
          *((_DWORD *)this + 4) |= v8;
          return;
        }
LABEL_9:
        *((_DWORD *)this + 15) = *((_DWORD *)a2 + 15);
        goto LABEL_10;
      }
    }
    else if ((v8 & 2) == 0)
    {
      goto LABEL_8;
    }
    *((_DWORD *)this + 14) = *((_DWORD *)a2 + 14);
    if ((v8 & 4) == 0)
      goto LABEL_10;
    goto LABEL_9;
  }
}

void google::protobuf::GeneratedCodeInfo_Annotation::CopyFrom(google::protobuf::GeneratedCodeInfo_Annotation *this, const google::protobuf::Message *a2)
{
  google::protobuf::Message *v4;

  if (a2 != this)
  {
    google::protobuf::GeneratedCodeInfo_Annotation::Clear(this);
    google::protobuf::GeneratedCodeInfo_Annotation::MergeFrom(this, a2, v4);
  }
}

uint64_t google::protobuf::GeneratedCodeInfo_Annotation::IsInitialized(google::protobuf::GeneratedCodeInfo_Annotation *this)
{
  return 1;
}

uint64_t google::protobuf::GeneratedCodeInfo_Annotation::GetMetadata(google::protobuf::GeneratedCodeInfo_Annotation *this)
{
  google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0);
  return off_1EDF46FE8[50];
}

google::protobuf::GeneratedCodeInfo *google::protobuf::GeneratedCodeInfo::GeneratedCodeInfo(google::protobuf::GeneratedCodeInfo *this, Arena *a2)
{
  *(_QWORD *)this = &off_1E1BF7D98;
  *((_QWORD *)this + 1) = a2;
  *((_QWORD *)this + 2) = a2;
  *((_QWORD *)this + 3) = 0;
  *((_QWORD *)this + 4) = 0;
  *((_DWORD *)this + 10) = 0;
  if (atomic_load(scc_info_GeneratedCodeInfo_google_2fprotobuf_2fdescriptor_2eproto))
    google::protobuf::internal::InitSCCImpl(scc_info_GeneratedCodeInfo_google_2fprotobuf_2fdescriptor_2eproto);
  return this;
}

void sub_1888B8694(_Unwind_Exception *a1)
{
  _QWORD *v1;

  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<google::protobuf::GeneratedCodeInfo_Annotation>::TypeHandler>(v1);
  _Unwind_Resume(a1);
}

void google::protobuf::GeneratedCodeInfo::~GeneratedCodeInfo(google::protobuf::GeneratedCodeInfo *this)
{
  google::protobuf::internal::InternalMetadata::Delete<google::protobuf::UnknownFieldSet>((uint64_t *)this + 1);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<google::protobuf::GeneratedCodeInfo_Annotation>::TypeHandler>((_QWORD *)this + 2);
}

{
  google::protobuf::GeneratedCodeInfo::~GeneratedCodeInfo(this);
  JUMPOUT(0x18D76437CLL);
}

uint64_t google::protobuf::GeneratedCodeInfo::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 40) = a2;
  return this;
}

google::protobuf::UnknownFieldSet *google::protobuf::GeneratedCodeInfo::Clear(google::protobuf::UnknownFieldSet *this)
{
  uint64_t v1;
  uint64_t v2;
  google::protobuf::GeneratedCodeInfo_Annotation **v3;
  google::protobuf::GeneratedCodeInfo_Annotation *v4;
  uint64_t *v5;
  char v6;

  v1 = (uint64_t)this;
  v2 = *((unsigned int *)this + 6);
  if ((int)v2 >= 1)
  {
    v3 = (google::protobuf::GeneratedCodeInfo_Annotation **)(*((_QWORD *)this + 4) + 8);
    do
    {
      v4 = *v3++;
      this = google::protobuf::GeneratedCodeInfo_Annotation::Clear(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 24) = 0;
  }
  v6 = *(_BYTE *)(v1 + 8);
  v5 = (uint64_t *)(v1 + 8);
  if ((v6 & 1) != 0)
    return google::protobuf::internal::InternalMetadata::DoClear<google::protobuf::UnknownFieldSet>(v5);
  return this;
}

google::protobuf::internal *google::protobuf::GeneratedCodeInfo::_InternalParse(uint64_t a1, google::protobuf::internal *a2, google::protobuf::internal::EpsCopyInputStream *this)
{
  char v5;
  google::protobuf::internal *result;
  _QWORD *v7;
  google::protobuf::internal *v8;
  unsigned int v9;
  BOOL v10;
  google::protobuf::UnknownFieldSet *v11;
  google::protobuf::internal *v12;
  int *v13;
  int v14;
  int v15;
  google::protobuf::GeneratedCodeInfo_Annotation *v16;
  uint64_t v17;
  uint64_t v18;
  const char *v19;
  google::protobuf::internal *v20;
  uint64_t v21;
  int v22;
  int v23;
  BOOL v24;
  int v25;
  unint64_t v26;
  int v27;
  uint64_t v28;
  google::protobuf::internal *v29;
  google::protobuf::UnknownFieldSet *v30;

  v29 = a2;
  v5 = google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(this, (const char **)&v29, *((_DWORD *)this + 23));
  result = v29;
  if ((v5 & 1) == 0)
  {
    v7 = (_QWORD *)(a1 + 8);
    while (1)
    {
      v8 = (google::protobuf::internal *)((char *)result + 1);
      v9 = *(unsigned __int8 *)result;
      if (*(char *)result < 0)
      {
        v9 = v9 + (*(unsigned __int8 *)v8 << 7) - 128;
        if (*(char *)v8 < 0)
        {
          v8 = (google::protobuf::internal *)((char *)result + 3);
          v28 = -21;
          while (1)
          {
            v9 += (*((unsigned __int8 *)v8 - 1) - 1) << (v28 + 35);
            if ((*((char *)v8 - 1) & 0x80000000) == 0)
              break;
            result = 0;
            v8 = (google::protobuf::internal *)((char *)v8 + 1);
            v28 += 7;
            if (!v28)
              return result;
          }
        }
        else
        {
          v8 = (google::protobuf::internal *)((char *)result + 2);
        }
      }
      v29 = v8;
      if (v9 == 10)
        break;
      if (v9)
        v10 = (v9 & 7) == 4;
      else
        v10 = 1;
      if (v10)
      {
        *((_DWORD *)this + 20) = v9 - 1;
        return v8;
      }
      if ((*v7 & 1) != 0)
      {
        v11 = (google::protobuf::UnknownFieldSet *)((*v7 & 0xFFFFFFFFFFFFFFFELL) + 8);
      }
      else
      {
        v11 = (google::protobuf::UnknownFieldSet *)google::protobuf::internal::InternalMetadata::mutable_unknown_fields_slow<google::protobuf::UnknownFieldSet>((uint64_t *)(a1 + 8));
        v8 = v29;
      }
      v30 = v11;
      result = google::protobuf::internal::FieldParser<google::protobuf::internal::UnknownFieldParserHelper>(v9, &v30, (uint64_t *)v8, (int32x2_t *)this);
      v29 = result;
      if (!result)
        return result;
LABEL_34:
      v27 = google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(this, (const char **)&v29, *((_DWORD *)this + 23));
      result = v29;
      if (v27)
        return result;
    }
    result = (google::protobuf::internal *)((char *)v8 - 1);
    while (1)
    {
      v12 = (google::protobuf::internal *)((char *)result + 1);
      v29 = v12;
      v13 = *(int **)(a1 + 32);
      if (!v13)
        break;
      v14 = *(_DWORD *)(a1 + 24);
      v15 = *v13;
      if (v14 >= *v13)
      {
        if (v15 == *(_DWORD *)(a1 + 28))
        {
LABEL_21:
          if (v14 <= v15)
          {
            google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 16), v15 - v14 + 1);
            v13 = *(int **)(a1 + 32);
          }
          v15 = *v13;
        }
        *v13 = v15 + 1;
        v16 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::GeneratedCodeInfo_Annotation>(*(google::protobuf::internal::ArenaImpl **)(a1 + 16));
        v17 = *(_QWORD *)(a1 + 32);
        v18 = *(int *)(a1 + 24);
        *(_DWORD *)(a1 + 24) = v18 + 1;
        *(_QWORD *)(v17 + 8 * v18 + 8) = v16;
        v12 = v29;
        goto LABEL_25;
      }
      *(_DWORD *)(a1 + 24) = v14 + 1;
      v16 = *(google::protobuf::GeneratedCodeInfo_Annotation **)&v13[2 * v14 + 2];
LABEL_25:
      v19 = (const char *)*(unsigned __int8 *)v12;
      if (*(char *)v12 < 0)
      {
        result = (google::protobuf::internal *)google::protobuf::internal::ReadSizeFallback(v12, v19);
        if (!result)
          return result;
        v20 = result;
      }
      else
      {
        v20 = (google::protobuf::internal *)((char *)v12 + 1);
      }
      v21 = *((_QWORD *)this + 1);
      v22 = (_DWORD)v19 + (_DWORD)v20 - v21;
      *(_QWORD *)this = v21 + (v22 & (v22 >> 31));
      v23 = *((_DWORD *)this + 7);
      *((_DWORD *)this + 7) = v22;
      LODWORD(v21) = *((_DWORD *)this + 22);
      v24 = __OFSUB__((_DWORD)v21, 1);
      LODWORD(v21) = v21 - 1;
      *((_DWORD *)this + 22) = v21;
      if ((int)v21 < 0 != v24)
        return 0;
      result = google::protobuf::GeneratedCodeInfo_Annotation::_InternalParse((uint64_t)v16, v20, this);
      if (!result)
        return result;
      ++*((_DWORD *)this + 22);
      if (*((_DWORD *)this + 20))
        return 0;
      v25 = *((_DWORD *)this + 7) + v23 - v22;
      *((_DWORD *)this + 7) = v25;
      v26 = *((_QWORD *)this + 1) + (v25 & (v25 >> 31));
      *(_QWORD *)this = v26;
      v29 = result;
      if (v26 <= (unint64_t)result || *(_BYTE *)result != 10)
        goto LABEL_34;
    }
    v14 = *(_DWORD *)(a1 + 24);
    v15 = *(_DWORD *)(a1 + 28);
    goto LABEL_21;
  }
  return result;
}

const google::protobuf::UnknownFieldSet *google::protobuf::GeneratedCodeInfo::_InternalSerialize(google::protobuf::GeneratedCodeInfo *this, unsigned __int8 *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  int v6;
  int i;
  google::protobuf::GeneratedCodeInfo_Annotation *v8;
  unsigned int v9;
  unsigned __int8 *v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  uint64_t v14;

  v6 = *((_DWORD *)this + 6);
  if (v6)
  {
    for (i = 0; i != v6; ++i)
    {
      if (*(_QWORD *)a3 <= (unint64_t)a2)
        a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
      v8 = *(google::protobuf::GeneratedCodeInfo_Annotation **)(*((_QWORD *)this + 4) + 8 * i + 8);
      *a2 = 10;
      v9 = *((_DWORD *)v8 + 5);
      if (v9 > 0x7F)
      {
        a2[1] = v9 | 0x80;
        v11 = v9 >> 7;
        if (v9 >> 14)
        {
          v10 = a2 + 3;
          do
          {
            *(v10 - 1) = v11 | 0x80;
            v12 = v11 >> 7;
            ++v10;
            v13 = v11 >> 14;
            v11 >>= 7;
          }
          while (v13);
          *(v10 - 1) = v12;
        }
        else
        {
          a2[2] = v11;
          v10 = a2 + 3;
        }
      }
      else
      {
        a2[1] = v9;
        v10 = a2 + 2;
      }
      a2 = (unsigned __int8 *)google::protobuf::GeneratedCodeInfo_Annotation::_InternalSerialize(v8, v10, a3);
    }
  }
  v14 = *((_QWORD *)this + 1);
  if ((v14 & 1) != 0)
    return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v14 & 0xFFFFFFFFFFFFFFFELL) + 8), (const google::protobuf::UnknownFieldSet *)a2, a3, a4);
  else
    return (const google::protobuf::UnknownFieldSet *)a2;
}

const InternalMetadata *google::protobuf::GeneratedCodeInfo::ByteSizeLong(google::protobuf::GeneratedCodeInfo *this, uint64_t a2, uint64_t a3, CachedSize *a4)
{
  const InternalMetadata *v5;
  uint64_t v6;
  google::protobuf::GeneratedCodeInfo_Annotation **v7;
  uint64_t v8;
  google::protobuf::GeneratedCodeInfo_Annotation *v9;
  const InternalMetadata *v10;

  v5 = (const InternalMetadata *)*((int *)this + 6);
  v6 = *((_QWORD *)this + 4);
  if (v6)
    v7 = (google::protobuf::GeneratedCodeInfo_Annotation **)(v6 + 8);
  else
    v7 = 0;
  if ((_DWORD)v5)
  {
    v8 = 8 * (_QWORD)v5;
    do
    {
      v9 = *v7++;
      v10 = google::protobuf::GeneratedCodeInfo_Annotation::ByteSizeLong(v9);
      v5 = (const InternalMetadata *)((char *)v5 + (_QWORD)v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6));
      v8 -= 8;
    }
    while (v8);
  }
  else
  {
    v5 = 0;
  }
  if ((*((_BYTE *)this + 8) & 1) != 0)
    return (const InternalMetadata *)google::protobuf::internal::ComputeUnknownFieldsSize((google::protobuf::GeneratedCodeInfo *)((char *)this + 8), v5, (_DWORD *)this + 10, a4);
  *((_DWORD *)this + 10) = (_DWORD)v5;
  return v5;
}

void google::protobuf::GeneratedCodeInfo::MergeFrom(google::protobuf::GeneratedCodeInfo *this, const google::protobuf::Message *a2, google::protobuf::Message *a3)
{
  uint64_t v5;
  int v6;
  unsigned int *v7;
  unsigned int *v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  google::protobuf::GeneratedCodeInfo_Annotation **v13;
  google::protobuf::GeneratedCodeInfo_Annotation **v14;
  google::protobuf::GeneratedCodeInfo_Annotation *v15;
  google::protobuf::GeneratedCodeInfo_Annotation *v16;
  google::protobuf::GeneratedCodeInfo_Annotation *v17;
  google::protobuf::internal::ArenaImpl *v18;
  int v19;
  uint64_t v20;
  google::protobuf::GeneratedCodeInfo_Annotation **v21;
  google::protobuf::GeneratedCodeInfo_Annotation **v22;
  google::protobuf::GeneratedCodeInfo_Annotation *v23;
  google::protobuf::GeneratedCodeInfo_Annotation *v24;
  int v25;
  int *v26;
  uint64_t v27;

  if (*(void (***)(google::protobuf::GeneratedCodeInfo *__hidden))a2 == &off_1E1BF7D98)
  {
    v5 = *((_QWORD *)a2 + 1);
    if ((v5 & 1) != 0)
      google::protobuf::internal::InternalMetadata::DoMergeFrom<google::protobuf::UnknownFieldSet>((uint64_t *)this + 1, (const google::protobuf::UnknownFieldSet *)((v5 & 0xFFFFFFFFFFFFFFFELL) + 8));
    v6 = *((_DWORD *)a2 + 6);
    if (v6)
    {
      v27 = *((_QWORD *)a2 + 4);
      v7 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::GeneratedCodeInfo *)((char *)this + 16), v6);
      v8 = v7;
      v9 = **((int **)this + 4);
      v10 = *((int *)this + 6);
      v11 = v9 - v10;
      if ((int)v9 - (int)v10 >= v6)
        v12 = v6;
      else
        v12 = v11;
      if ((int)v12 >= 1)
      {
        v13 = (google::protobuf::GeneratedCodeInfo_Annotation **)(v27 + 8);
        v14 = (google::protobuf::GeneratedCodeInfo_Annotation **)v7;
        do
        {
          v16 = *v13++;
          v15 = v16;
          v17 = *v14++;
          google::protobuf::internal::GenericTypeHandler<google::protobuf::GeneratedCodeInfo_Annotation>::Merge(v15, v17);
          --v12;
        }
        while (v12);
      }
      if (v11 < v6)
      {
        v18 = (google::protobuf::internal::ArenaImpl *)*((_QWORD *)this + 2);
        v19 = v10 + v6 - v9;
        v20 = 8 * v9 - 8 * v10;
        v21 = (google::protobuf::GeneratedCodeInfo_Annotation **)((char *)v8 + v20);
        v22 = (google::protobuf::GeneratedCodeInfo_Annotation **)(v20 + v27 + 8);
        do
        {
          v23 = *v22++;
          v24 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::GeneratedCodeInfo_Annotation>(v18);
          google::protobuf::internal::GenericTypeHandler<google::protobuf::GeneratedCodeInfo_Annotation>::Merge(v23, v24);
          *v21++ = v24;
          --v19;
        }
        while (v19);
      }
      v25 = *((_DWORD *)this + 6) + v6;
      *((_DWORD *)this + 6) = v25;
      v26 = (int *)*((_QWORD *)this + 4);
      if (*v26 < v25)
        *v26 = v25;
    }
  }
  else
  {
    google::protobuf::internal::ReflectionOps::Merge(a2, this, a3);
  }
}

void google::protobuf::GeneratedCodeInfo::CopyFrom(google::protobuf::GeneratedCodeInfo *this, const google::protobuf::Message *a2)
{
  google::protobuf::Message *v4;

  if (a2 != this)
  {
    google::protobuf::GeneratedCodeInfo::Clear(this);
    google::protobuf::GeneratedCodeInfo::MergeFrom(this, a2, v4);
  }
}

uint64_t google::protobuf::GeneratedCodeInfo::IsInitialized(google::protobuf::GeneratedCodeInfo *this)
{
  return 1;
}

uint64_t google::protobuf::GeneratedCodeInfo::GetMetadata(google::protobuf::GeneratedCodeInfo *this)
{
  google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0);
  return off_1EDF46FE8[52];
}

google::protobuf::FileDescriptorSet *google::protobuf::Arena::CreateMaybeMessage<google::protobuf::FileDescriptorSet>(google::protobuf::internal::ArenaImpl *this)
{
  google::protobuf::FileDescriptorSet *Aligned;

  if (this)
  {
    if ((*((_BYTE *)this + 24) & 1) != 0)
    Aligned = (google::protobuf::FileDescriptorSet *)google::protobuf::internal::ArenaImpl::AllocateAligned(this, 0x30uLL);
    google::protobuf::FileDescriptorSet::FileDescriptorSet(Aligned, (Arena *)this);
  }
  else
  {
    Aligned = (google::protobuf::FileDescriptorSet *)operator new();
    google::protobuf::FileDescriptorSet::FileDescriptorSet(Aligned, 0);
  }
  return Aligned;
}

void sub_1888B8E4C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x18D76437C](v1, 0x10A1C40290C9B23);
  _Unwind_Resume(a1);
}

google::protobuf::FileDescriptorProto *google::protobuf::Arena::CreateMaybeMessage<google::protobuf::FileDescriptorProto>(google::protobuf::internal::ArenaImpl *this)
{
  google::protobuf::FileDescriptorProto *Aligned;

  if (this)
  {
    if ((*((_BYTE *)this + 24) & 1) != 0)
    Aligned = (google::protobuf::FileDescriptorProto *)google::protobuf::internal::ArenaImpl::AllocateAligned(this, 0xD8uLL);
    google::protobuf::FileDescriptorProto::FileDescriptorProto(Aligned, (Arena *)this);
  }
  else
  {
    Aligned = (google::protobuf::FileDescriptorProto *)operator new();
    google::protobuf::FileDescriptorProto::FileDescriptorProto(Aligned, 0);
  }
  return Aligned;
}

void sub_1888B8F00(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x18D76437C](v1, 0x10A1C40FAD37B1FLL);
  _Unwind_Resume(a1);
}

_QWORD *google::protobuf::Arena::CreateMaybeMessage<google::protobuf::DescriptorProto_ExtensionRange>(google::protobuf::internal::ArenaImpl *this)
{
  _QWORD *Aligned;

  if (this)
  {
    if ((*((_BYTE *)this + 24) & 1) != 0)
    Aligned = google::protobuf::internal::ArenaImpl::AllocateAligned(this, 0x28uLL);
    *Aligned = &off_1E1BF8830;
    Aligned[1] = this;
    Aligned[2] = 0;
    if (atomic_load(scc_info_DescriptorProto_ExtensionRange_google_2fprotobuf_2fdescriptor_2eproto))
      goto LABEL_7;
  }
  else
  {
    Aligned = (_QWORD *)operator new();
    *Aligned = &off_1E1BF8830;
    Aligned[1] = 0;
    Aligned[2] = 0;
    if (atomic_load(scc_info_DescriptorProto_ExtensionRange_google_2fprotobuf_2fdescriptor_2eproto))
LABEL_7:
      google::protobuf::internal::InitSCCImpl(scc_info_DescriptorProto_ExtensionRange_google_2fprotobuf_2fdescriptor_2eproto);
  }
  Aligned[3] = 0;
  Aligned[4] = 0;
  return Aligned;
}

void sub_1888B9004(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x18D76437C](v1, 0x10A1C406130BDD3);
  _Unwind_Resume(a1);
}

_QWORD *google::protobuf::Arena::CreateMaybeMessage<google::protobuf::DescriptorProto_ReservedRange>(google::protobuf::internal::ArenaImpl *this)
{
  _QWORD *result;

  if (this)
  {
    if ((*((_BYTE *)this + 24) & 1) != 0)
    result = google::protobuf::internal::ArenaImpl::AllocateAligned(this, 0x20uLL);
  }
  else
  {
    result = (_QWORD *)operator new();
  }
  *result = &off_1E1BF86F8;
  result[1] = this;
  result[2] = 0;
  result[3] = 0;
  return result;
}

google::protobuf::DescriptorProto *google::protobuf::Arena::CreateMaybeMessage<google::protobuf::DescriptorProto>(google::protobuf::internal::ArenaImpl *this)
{
  google::protobuf::DescriptorProto *Aligned;

  if (this)
  {
    if ((*((_BYTE *)this + 24) & 1) != 0)
    Aligned = (google::protobuf::DescriptorProto *)google::protobuf::internal::ArenaImpl::AllocateAligned(this, 0xE8uLL);
    google::protobuf::DescriptorProto::DescriptorProto(Aligned, (Arena *)this);
  }
  else
  {
    Aligned = (google::protobuf::DescriptorProto *)operator new();
    google::protobuf::DescriptorProto::DescriptorProto(Aligned, 0);
  }
  return Aligned;
}

void sub_1888B913C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x18D76437C](v1, 0x10A1C408886AC97);
  _Unwind_Resume(a1);
}

google::protobuf::ExtensionRangeOptions *google::protobuf::Arena::CreateMaybeMessage<google::protobuf::ExtensionRangeOptions>(google::protobuf::internal::ArenaImpl *this)
{
  google::protobuf::ExtensionRangeOptions *Aligned;

  if (this)
  {
    if ((*((_BYTE *)this + 24) & 1) != 0)
    Aligned = (google::protobuf::ExtensionRangeOptions *)google::protobuf::internal::ArenaImpl::AllocateAligned(this, 0x48uLL);
    google::protobuf::ExtensionRangeOptions::ExtensionRangeOptions(Aligned, (Arena *)this);
  }
  else
  {
    Aligned = (google::protobuf::ExtensionRangeOptions *)operator new();
    google::protobuf::ExtensionRangeOptions::ExtensionRangeOptions(Aligned, 0);
  }
  return Aligned;
}

void sub_1888B91F0(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x18D76437C](v1, 0x10A1C4075D007F8);
  _Unwind_Resume(a1);
}

google::protobuf::FieldDescriptorProto *google::protobuf::Arena::CreateMaybeMessage<google::protobuf::FieldDescriptorProto>(google::protobuf::internal::ArenaImpl *this)
{
  google::protobuf::FieldDescriptorProto *Aligned;

  if (this)
  {
    if ((*((_BYTE *)this + 24) & 1) != 0)
    Aligned = (google::protobuf::FieldDescriptorProto *)google::protobuf::internal::ArenaImpl::AllocateAligned(this, 0x60uLL);
    google::protobuf::FieldDescriptorProto::FieldDescriptorProto(Aligned, (Arena *)this);
  }
  else
  {
    Aligned = (google::protobuf::FieldDescriptorProto *)operator new();
    google::protobuf::FieldDescriptorProto::FieldDescriptorProto(Aligned, 0);
  }
  return Aligned;
}

void sub_1888B92A4(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x18D76437C](v1, 0x10A1C408C1DDBBELL);
  _Unwind_Resume(a1);
}

_QWORD *google::protobuf::Arena::CreateMaybeMessage<google::protobuf::OneofDescriptorProto>(google::protobuf::internal::ArenaImpl *this)
{
  _QWORD *Aligned;

  if (this)
  {
    if ((*((_BYTE *)this + 24) & 1) != 0)
    Aligned = google::protobuf::internal::ArenaImpl::AllocateAligned(this, 0x28uLL);
    *Aligned = &off_1E1BF8108;
    Aligned[1] = this;
    Aligned[2] = 0;
    if (atomic_load(scc_info_OneofDescriptorProto_google_2fprotobuf_2fdescriptor_2eproto))
      goto LABEL_7;
  }
  else
  {
    Aligned = (_QWORD *)operator new();
    *Aligned = &off_1E1BF8108;
    Aligned[1] = 0;
    Aligned[2] = 0;
    if (atomic_load(scc_info_OneofDescriptorProto_google_2fprotobuf_2fdescriptor_2eproto))
LABEL_7:
      google::protobuf::internal::InitSCCImpl(scc_info_OneofDescriptorProto_google_2fprotobuf_2fdescriptor_2eproto);
  }
  Aligned[3] = &google::protobuf::internal::fixed_address_empty_string;
  Aligned[4] = 0;
  return Aligned;
}

void sub_1888B93B0(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x18D76437C](v1, 0x10A1C407EE01FB0);
  _Unwind_Resume(a1);
}

_QWORD *google::protobuf::Arena::CreateMaybeMessage<google::protobuf::EnumDescriptorProto_EnumReservedRange>(google::protobuf::internal::ArenaImpl *this)
{
  _QWORD *result;

  if (this)
  {
    if ((*((_BYTE *)this + 24) & 1) != 0)
    result = google::protobuf::internal::ArenaImpl::AllocateAligned(this, 0x20uLL);
  }
  else
  {
    result = (_QWORD *)operator new();
  }
  *result = &off_1E1BF88E0;
  result[1] = this;
  result[2] = 0;
  result[3] = 0;
  return result;
}

google::protobuf::EnumDescriptorProto *google::protobuf::Arena::CreateMaybeMessage<google::protobuf::EnumDescriptorProto>(google::protobuf::internal::ArenaImpl *this)
{
  google::protobuf::EnumDescriptorProto *Aligned;

  if (this)
  {
    if ((*((_BYTE *)this + 24) & 1) != 0)
    Aligned = (google::protobuf::EnumDescriptorProto *)google::protobuf::internal::ArenaImpl::AllocateAligned(this, 0x70uLL);
    google::protobuf::EnumDescriptorProto::EnumDescriptorProto(Aligned, (Arena *)this);
  }
  else
  {
    Aligned = (google::protobuf::EnumDescriptorProto *)operator new();
    google::protobuf::EnumDescriptorProto::EnumDescriptorProto(Aligned, 0);
  }
  return Aligned;
}

void sub_1888B94E8(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x18D76437C](v1, 0x10A1C409453E5E0);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::Arena::CreateMaybeMessage<google::protobuf::EnumValueDescriptorProto>(google::protobuf::internal::ArenaImpl *this)
{
  uint64_t Aligned;

  if (this)
  {
    if ((*((_BYTE *)this + 24) & 1) != 0)
    Aligned = (uint64_t)google::protobuf::internal::ArenaImpl::AllocateAligned(this, 0x30uLL);
    *(_QWORD *)Aligned = &off_1E1BF84A0;
    *(_QWORD *)(Aligned + 8) = this;
    *(_QWORD *)(Aligned + 16) = 0;
    if (atomic_load(scc_info_EnumValueDescriptorProto_google_2fprotobuf_2fdescriptor_2eproto))
      goto LABEL_7;
  }
  else
  {
    Aligned = operator new();
    *(_QWORD *)Aligned = &off_1E1BF84A0;
    *(_QWORD *)(Aligned + 8) = 0;
    *(_QWORD *)(Aligned + 16) = 0;
    if (atomic_load(scc_info_EnumValueDescriptorProto_google_2fprotobuf_2fdescriptor_2eproto))
LABEL_7:
      google::protobuf::internal::InitSCCImpl(scc_info_EnumValueDescriptorProto_google_2fprotobuf_2fdescriptor_2eproto);
  }
  *(_QWORD *)(Aligned + 24) = &google::protobuf::internal::fixed_address_empty_string;
  *(_QWORD *)(Aligned + 32) = 0;
  *(_DWORD *)(Aligned + 40) = 0;
  return Aligned;
}

void sub_1888B95F8(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x18D76437C](v1, 0x10A1C408F8E7294);
  _Unwind_Resume(a1);
}

google::protobuf::ServiceDescriptorProto *google::protobuf::Arena::CreateMaybeMessage<google::protobuf::ServiceDescriptorProto>(google::protobuf::internal::ArenaImpl *this)
{
  google::protobuf::ServiceDescriptorProto *Aligned;

  if (this)
  {
    if ((*((_BYTE *)this + 24) & 1) != 0)
    Aligned = (google::protobuf::ServiceDescriptorProto *)google::protobuf::internal::ArenaImpl::AllocateAligned(this, 0x40uLL);
    google::protobuf::ServiceDescriptorProto::ServiceDescriptorProto(Aligned, (Arena *)this);
  }
  else
  {
    Aligned = (google::protobuf::ServiceDescriptorProto *)operator new();
    google::protobuf::ServiceDescriptorProto::ServiceDescriptorProto(Aligned, 0);
  }
  return Aligned;
}

void sub_1888B96AC(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x18D76437C](v1, 0x10A1C404773F172);
  _Unwind_Resume(a1);
}

google::protobuf::MethodDescriptorProto *google::protobuf::Arena::CreateMaybeMessage<google::protobuf::MethodDescriptorProto>(google::protobuf::internal::ArenaImpl *this)
{
  google::protobuf::MethodDescriptorProto *Aligned;

  if (this)
  {
    if ((*((_BYTE *)this + 24) & 1) != 0)
    Aligned = (google::protobuf::MethodDescriptorProto *)google::protobuf::internal::ArenaImpl::AllocateAligned(this, 0x40uLL);
    google::protobuf::MethodDescriptorProto::MethodDescriptorProto(Aligned, (Arena *)this);
  }
  else
  {
    Aligned = (google::protobuf::MethodDescriptorProto *)operator new();
    google::protobuf::MethodDescriptorProto::MethodDescriptorProto(Aligned, 0);
  }
  return Aligned;
}

void sub_1888B9760(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x18D76437C](v1, 0x10A1C40C26F2959);
  _Unwind_Resume(a1);
}

google::protobuf::FileOptions *google::protobuf::Arena::CreateMaybeMessage<google::protobuf::FileOptions>(google::protobuf::internal::ArenaImpl *this)
{
  google::protobuf::FileOptions *Aligned;

  if (this)
  {
    if ((*((_BYTE *)this + 24) & 1) != 0)
    Aligned = (google::protobuf::FileOptions *)google::protobuf::internal::ArenaImpl::AllocateAligned(this, 0xA8uLL);
    google::protobuf::FileOptions::FileOptions(Aligned, (Arena *)this);
  }
  else
  {
    Aligned = (google::protobuf::FileOptions *)operator new();
    google::protobuf::FileOptions::FileOptions(Aligned, 0);
  }
  return Aligned;
}

void sub_1888B9814(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x18D76437C](v1, 0x10A1C4045925DF1);
  _Unwind_Resume(a1);
}

google::protobuf::MessageOptions *google::protobuf::Arena::CreateMaybeMessage<google::protobuf::MessageOptions>(google::protobuf::internal::ArenaImpl *this)
{
  google::protobuf::MessageOptions *Aligned;

  if (this)
  {
    if ((*((_BYTE *)this + 24) & 1) != 0)
    Aligned = (google::protobuf::MessageOptions *)google::protobuf::internal::ArenaImpl::AllocateAligned(this, 0x50uLL);
    google::protobuf::MessageOptions::MessageOptions(Aligned, (Arena *)this);
  }
  else
  {
    Aligned = (google::protobuf::MessageOptions *)operator new();
    google::protobuf::MessageOptions::MessageOptions(Aligned, 0);
  }
  return Aligned;
}

void sub_1888B98C8(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x18D76437C](v1, 0x10A1C40813C779CLL);
  _Unwind_Resume(a1);
}

google::protobuf::FieldOptions *google::protobuf::Arena::CreateMaybeMessage<google::protobuf::FieldOptions>(google::protobuf::internal::ArenaImpl *this)
{
  google::protobuf::FieldOptions *Aligned;

  if (this)
  {
    if ((*((_BYTE *)this + 24) & 1) != 0)
    Aligned = (google::protobuf::FieldOptions *)google::protobuf::internal::ArenaImpl::AllocateAligned(this, 0x58uLL);
    google::protobuf::FieldOptions::FieldOptions(Aligned, (Arena *)this);
  }
  else
  {
    Aligned = (google::protobuf::FieldOptions *)operator new();
    google::protobuf::FieldOptions::FieldOptions(Aligned, 0);
  }
  return Aligned;
}

void sub_1888B997C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x18D76437C](v1, 0x10A1C404C5392B4);
  _Unwind_Resume(a1);
}

google::protobuf::OneofOptions *google::protobuf::Arena::CreateMaybeMessage<google::protobuf::OneofOptions>(google::protobuf::internal::ArenaImpl *this)
{
  google::protobuf::OneofOptions *Aligned;

  if (this)
  {
    if ((*((_BYTE *)this + 24) & 1) != 0)
    Aligned = (google::protobuf::OneofOptions *)google::protobuf::internal::ArenaImpl::AllocateAligned(this, 0x48uLL);
    google::protobuf::OneofOptions::OneofOptions(Aligned, (Arena *)this);
  }
  else
  {
    Aligned = (google::protobuf::OneofOptions *)operator new();
    google::protobuf::OneofOptions::OneofOptions(Aligned, 0);
  }
  return Aligned;
}

void sub_1888B9A30(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x18D76437C](v1, 0x10A1C4075D007F8);
  _Unwind_Resume(a1);
}

google::protobuf::EnumOptions *google::protobuf::Arena::CreateMaybeMessage<google::protobuf::EnumOptions>(google::protobuf::internal::ArenaImpl *this)
{
  google::protobuf::EnumOptions *Aligned;

  if (this)
  {
    if ((*((_BYTE *)this + 24) & 1) != 0)
    Aligned = (google::protobuf::EnumOptions *)google::protobuf::internal::ArenaImpl::AllocateAligned(this, 0x50uLL);
    google::protobuf::EnumOptions::EnumOptions(Aligned, (Arena *)this);
  }
  else
  {
    Aligned = (google::protobuf::EnumOptions *)operator new();
    google::protobuf::EnumOptions::EnumOptions(Aligned, 0);
  }
  return Aligned;
}

void sub_1888B9AE4(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x18D76437C](v1, 0x10A1C400A6016E7);
  _Unwind_Resume(a1);
}

google::protobuf::EnumValueOptions *google::protobuf::Arena::CreateMaybeMessage<google::protobuf::EnumValueOptions>(google::protobuf::internal::ArenaImpl *this)
{
  google::protobuf::EnumValueOptions *Aligned;

  if (this)
  {
    if ((*((_BYTE *)this + 24) & 1) != 0)
    Aligned = (google::protobuf::EnumValueOptions *)google::protobuf::internal::ArenaImpl::AllocateAligned(this, 0x50uLL);
    google::protobuf::EnumValueOptions::EnumValueOptions(Aligned, (Arena *)this);
  }
  else
  {
    Aligned = (google::protobuf::EnumValueOptions *)operator new();
    google::protobuf::EnumValueOptions::EnumValueOptions(Aligned, 0);
  }
  return Aligned;
}

void sub_1888B9B98(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x18D76437C](v1, 0x10A1C40AF389210);
  _Unwind_Resume(a1);
}

google::protobuf::ServiceOptions *google::protobuf::Arena::CreateMaybeMessage<google::protobuf::ServiceOptions>(google::protobuf::internal::ArenaImpl *this)
{
  google::protobuf::ServiceOptions *Aligned;

  if (this)
  {
    if ((*((_BYTE *)this + 24) & 1) != 0)
    Aligned = (google::protobuf::ServiceOptions *)google::protobuf::internal::ArenaImpl::AllocateAligned(this, 0x50uLL);
    google::protobuf::ServiceOptions::ServiceOptions(Aligned, (Arena *)this);
  }
  else
  {
    Aligned = (google::protobuf::ServiceOptions *)operator new();
    google::protobuf::ServiceOptions::ServiceOptions(Aligned, 0);
  }
  return Aligned;
}

void sub_1888B9C4C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x18D76437C](v1, 0x10A1C40AF389210);
  _Unwind_Resume(a1);
}

google::protobuf::MethodOptions *google::protobuf::Arena::CreateMaybeMessage<google::protobuf::MethodOptions>(google::protobuf::internal::ArenaImpl *this)
{
  google::protobuf::MethodOptions *Aligned;

  if (this)
  {
    if ((*((_BYTE *)this + 24) & 1) != 0)
    Aligned = (google::protobuf::MethodOptions *)google::protobuf::internal::ArenaImpl::AllocateAligned(this, 0x50uLL);
    google::protobuf::MethodOptions::MethodOptions(Aligned, (Arena *)this);
  }
  else
  {
    Aligned = (google::protobuf::MethodOptions *)operator new();
    google::protobuf::MethodOptions::MethodOptions(Aligned, 0);
  }
  return Aligned;
}

void sub_1888B9D00(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x18D76437C](v1, 0x10A1C40393C8679);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::Arena::CreateMaybeMessage<google::protobuf::UninterpretedOption_NamePart>(google::protobuf::internal::ArenaImpl *this)
{
  uint64_t Aligned;

  if (this)
  {
    if ((*((_BYTE *)this + 24) & 1) != 0)
    Aligned = (uint64_t)google::protobuf::internal::ArenaImpl::AllocateAligned(this, 0x28uLL);
    *(_QWORD *)Aligned = &off_1E1BF8648;
    *(_QWORD *)(Aligned + 8) = this;
    *(_QWORD *)(Aligned + 16) = 0;
    if (atomic_load(scc_info_UninterpretedOption_NamePart_google_2fprotobuf_2fdescriptor_2eproto))
      goto LABEL_7;
  }
  else
  {
    Aligned = operator new();
    *(_QWORD *)Aligned = &off_1E1BF8648;
    *(_QWORD *)(Aligned + 8) = 0;
    *(_QWORD *)(Aligned + 16) = 0;
    if (atomic_load(scc_info_UninterpretedOption_NamePart_google_2fprotobuf_2fdescriptor_2eproto))
LABEL_7:
      google::protobuf::internal::InitSCCImpl(scc_info_UninterpretedOption_NamePart_google_2fprotobuf_2fdescriptor_2eproto);
  }
  *(_QWORD *)(Aligned + 24) = &google::protobuf::internal::fixed_address_empty_string;
  *(_BYTE *)(Aligned + 32) = 0;
  return Aligned;
}

void sub_1888B9E10(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x18D76437C](v1, 0x1081C40FD51F717);
  _Unwind_Resume(a1);
}

google::protobuf::UninterpretedOption *google::protobuf::Arena::CreateMaybeMessage<google::protobuf::UninterpretedOption>(google::protobuf::internal::ArenaImpl *this)
{
  google::protobuf::UninterpretedOption *Aligned;

  if (this)
  {
    if ((*((_BYTE *)this + 24) & 1) != 0)
    Aligned = (google::protobuf::UninterpretedOption *)google::protobuf::internal::ArenaImpl::AllocateAligned(this, 0x60uLL);
    google::protobuf::UninterpretedOption::UninterpretedOption(Aligned, (Arena *)this);
  }
  else
  {
    Aligned = (google::protobuf::UninterpretedOption *)operator new();
    google::protobuf::UninterpretedOption::UninterpretedOption(Aligned, 0);
  }
  return Aligned;
}

void sub_1888B9EC4(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x18D76437C](v1, 0x10A1C40AC35CA03);
  _Unwind_Resume(a1);
}

google::protobuf::SourceCodeInfo_Location *google::protobuf::Arena::CreateMaybeMessage<google::protobuf::SourceCodeInfo_Location>(google::protobuf::internal::ArenaImpl *this)
{
  google::protobuf::SourceCodeInfo_Location *Aligned;

  if (this)
  {
    if ((*((_BYTE *)this + 24) & 1) != 0)
    Aligned = (google::protobuf::SourceCodeInfo_Location *)google::protobuf::internal::ArenaImpl::AllocateAligned(this, 0x70uLL);
    google::protobuf::SourceCodeInfo_Location::SourceCodeInfo_Location(Aligned, (Arena *)this);
  }
  else
  {
    Aligned = (google::protobuf::SourceCodeInfo_Location *)operator new();
    google::protobuf::SourceCodeInfo_Location::SourceCodeInfo_Location(Aligned, 0);
  }
  return Aligned;
}

void sub_1888B9F78(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x18D76437C](v1, 0x10A1C40EC7908E4);
  _Unwind_Resume(a1);
}

google::protobuf::SourceCodeInfo *google::protobuf::Arena::CreateMaybeMessage<google::protobuf::SourceCodeInfo>(google::protobuf::internal::ArenaImpl *this)
{
  google::protobuf::SourceCodeInfo *Aligned;

  if (this)
  {
    if ((*((_BYTE *)this + 24) & 1) != 0)
    Aligned = (google::protobuf::SourceCodeInfo *)google::protobuf::internal::ArenaImpl::AllocateAligned(this, 0x30uLL);
    google::protobuf::SourceCodeInfo::SourceCodeInfo(Aligned, (Arena *)this);
  }
  else
  {
    Aligned = (google::protobuf::SourceCodeInfo *)operator new();
    google::protobuf::SourceCodeInfo::SourceCodeInfo(Aligned, 0);
  }
  return Aligned;
}

void sub_1888BA02C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x18D76437C](v1, 0x10A1C40290C9B23);
  _Unwind_Resume(a1);
}

google::protobuf::GeneratedCodeInfo_Annotation *google::protobuf::Arena::CreateMaybeMessage<google::protobuf::GeneratedCodeInfo_Annotation>(google::protobuf::internal::ArenaImpl *this)
{
  google::protobuf::GeneratedCodeInfo_Annotation *Aligned;

  if (this)
  {
    if ((*((_BYTE *)this + 24) & 1) != 0)
    Aligned = (google::protobuf::GeneratedCodeInfo_Annotation *)google::protobuf::internal::ArenaImpl::AllocateAligned(this, 0x40uLL);
    google::protobuf::GeneratedCodeInfo_Annotation::GeneratedCodeInfo_Annotation(Aligned, (Arena *)this);
  }
  else
  {
    Aligned = (google::protobuf::GeneratedCodeInfo_Annotation *)operator new();
    google::protobuf::GeneratedCodeInfo_Annotation::GeneratedCodeInfo_Annotation(Aligned, 0);
  }
  return Aligned;
}

void sub_1888BA0E0(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x18D76437C](v1, 0x1081C408A70D0C6);
  _Unwind_Resume(a1);
}

google::protobuf::GeneratedCodeInfo *google::protobuf::Arena::CreateMaybeMessage<google::protobuf::GeneratedCodeInfo>(google::protobuf::internal::ArenaImpl *this)
{
  google::protobuf::GeneratedCodeInfo *Aligned;

  if (this)
  {
    if ((*((_BYTE *)this + 24) & 1) != 0)
    Aligned = (google::protobuf::GeneratedCodeInfo *)google::protobuf::internal::ArenaImpl::AllocateAligned(this, 0x30uLL);
    google::protobuf::GeneratedCodeInfo::GeneratedCodeInfo(Aligned, (Arena *)this);
  }
  else
  {
    Aligned = (google::protobuf::GeneratedCodeInfo *)operator new();
    google::protobuf::GeneratedCodeInfo::GeneratedCodeInfo(Aligned, 0);
  }
  return Aligned;
}

void sub_1888BA194(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x18D76437C](v1, 0x10A1C40290C9B23);
  _Unwind_Resume(a1);
}

google::protobuf::FileDescriptorSet *google::protobuf::FileDescriptorSet::New(google::protobuf::FileDescriptorSet *this)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::FileDescriptorSet>(0);
}

google::protobuf::FileDescriptorSet *google::protobuf::FileDescriptorSet::New(google::protobuf::FileDescriptorSet *this, Arena *a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::FileDescriptorSet>((google::protobuf::internal::ArenaImpl *)a2);
}

uint64_t google::protobuf::FileDescriptorSet::GetCachedSize(google::protobuf::FileDescriptorSet *this)
{
  return *((unsigned int *)this + 10);
}

google::protobuf::FileDescriptorProto *google::protobuf::FileDescriptorProto::New(google::protobuf::FileDescriptorProto *this)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::FileDescriptorProto>(0);
}

google::protobuf::FileDescriptorProto *google::protobuf::FileDescriptorProto::New(google::protobuf::FileDescriptorProto *this, Arena *a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::FileDescriptorProto>((google::protobuf::internal::ArenaImpl *)a2);
}

uint64_t google::protobuf::FileDescriptorProto::GetCachedSize(google::protobuf::FileDescriptorProto *this)
{
  return *((unsigned int *)this + 5);
}

_QWORD *google::protobuf::DescriptorProto_ExtensionRange::New(google::protobuf::DescriptorProto_ExtensionRange *this)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::DescriptorProto_ExtensionRange>(0);
}

_QWORD *google::protobuf::DescriptorProto_ExtensionRange::New(google::protobuf::DescriptorProto_ExtensionRange *this, Arena *a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::DescriptorProto_ExtensionRange>((google::protobuf::internal::ArenaImpl *)a2);
}

uint64_t google::protobuf::DescriptorProto_ExtensionRange::GetCachedSize(google::protobuf::DescriptorProto_ExtensionRange *this)
{
  return *((unsigned int *)this + 5);
}

_QWORD *google::protobuf::DescriptorProto_ReservedRange::New(google::protobuf::DescriptorProto_ReservedRange *this)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::DescriptorProto_ReservedRange>(0);
}

_QWORD *google::protobuf::DescriptorProto_ReservedRange::New(google::protobuf::DescriptorProto_ReservedRange *this, Arena *a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::DescriptorProto_ReservedRange>((google::protobuf::internal::ArenaImpl *)a2);
}

uint64_t google::protobuf::DescriptorProto_ReservedRange::GetCachedSize(google::protobuf::DescriptorProto_ReservedRange *this)
{
  return *((unsigned int *)this + 5);
}

google::protobuf::DescriptorProto *google::protobuf::DescriptorProto::New(google::protobuf::DescriptorProto *this)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::DescriptorProto>(0);
}

google::protobuf::DescriptorProto *google::protobuf::DescriptorProto::New(google::protobuf::DescriptorProto *this, Arena *a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::DescriptorProto>((google::protobuf::internal::ArenaImpl *)a2);
}

uint64_t google::protobuf::DescriptorProto::GetCachedSize(google::protobuf::DescriptorProto *this)
{
  return *((unsigned int *)this + 5);
}

google::protobuf::ExtensionRangeOptions *google::protobuf::ExtensionRangeOptions::New(google::protobuf::ExtensionRangeOptions *this)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::ExtensionRangeOptions>(0);
}

google::protobuf::ExtensionRangeOptions *google::protobuf::ExtensionRangeOptions::New(google::protobuf::ExtensionRangeOptions *this, Arena *a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::ExtensionRangeOptions>((google::protobuf::internal::ArenaImpl *)a2);
}

uint64_t google::protobuf::ExtensionRangeOptions::GetCachedSize(google::protobuf::ExtensionRangeOptions *this)
{
  return *((unsigned int *)this + 16);
}

google::protobuf::FieldDescriptorProto *google::protobuf::FieldDescriptorProto::New(google::protobuf::FieldDescriptorProto *this)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::FieldDescriptorProto>(0);
}

google::protobuf::FieldDescriptorProto *google::protobuf::FieldDescriptorProto::New(google::protobuf::FieldDescriptorProto *this, Arena *a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::FieldDescriptorProto>((google::protobuf::internal::ArenaImpl *)a2);
}

uint64_t google::protobuf::FieldDescriptorProto::GetCachedSize(google::protobuf::FieldDescriptorProto *this)
{
  return *((unsigned int *)this + 5);
}

_QWORD *google::protobuf::OneofDescriptorProto::New(google::protobuf::OneofDescriptorProto *this)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::OneofDescriptorProto>(0);
}

_QWORD *google::protobuf::OneofDescriptorProto::New(google::protobuf::OneofDescriptorProto *this, Arena *a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::OneofDescriptorProto>((google::protobuf::internal::ArenaImpl *)a2);
}

uint64_t google::protobuf::OneofDescriptorProto::GetCachedSize(google::protobuf::OneofDescriptorProto *this)
{
  return *((unsigned int *)this + 5);
}

_QWORD *google::protobuf::EnumDescriptorProto_EnumReservedRange::New(google::protobuf::EnumDescriptorProto_EnumReservedRange *this)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::EnumDescriptorProto_EnumReservedRange>(0);
}

_QWORD *google::protobuf::EnumDescriptorProto_EnumReservedRange::New(google::protobuf::EnumDescriptorProto_EnumReservedRange *this, Arena *a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::EnumDescriptorProto_EnumReservedRange>((google::protobuf::internal::ArenaImpl *)a2);
}

uint64_t google::protobuf::EnumDescriptorProto_EnumReservedRange::GetCachedSize(google::protobuf::EnumDescriptorProto_EnumReservedRange *this)
{
  return *((unsigned int *)this + 5);
}

google::protobuf::EnumDescriptorProto *google::protobuf::EnumDescriptorProto::New(google::protobuf::EnumDescriptorProto *this)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::EnumDescriptorProto>(0);
}

google::protobuf::EnumDescriptorProto *google::protobuf::EnumDescriptorProto::New(google::protobuf::EnumDescriptorProto *this, Arena *a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::EnumDescriptorProto>((google::protobuf::internal::ArenaImpl *)a2);
}

uint64_t google::protobuf::EnumDescriptorProto::GetCachedSize(google::protobuf::EnumDescriptorProto *this)
{
  return *((unsigned int *)this + 5);
}

uint64_t google::protobuf::EnumValueDescriptorProto::New(google::protobuf::EnumValueDescriptorProto *this)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::EnumValueDescriptorProto>(0);
}

uint64_t google::protobuf::EnumValueDescriptorProto::New(google::protobuf::EnumValueDescriptorProto *this, Arena *a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::EnumValueDescriptorProto>((google::protobuf::internal::ArenaImpl *)a2);
}

uint64_t google::protobuf::EnumValueDescriptorProto::GetCachedSize(google::protobuf::EnumValueDescriptorProto *this)
{
  return *((unsigned int *)this + 5);
}

google::protobuf::ServiceDescriptorProto *google::protobuf::ServiceDescriptorProto::New(google::protobuf::ServiceDescriptorProto *this)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::ServiceDescriptorProto>(0);
}

google::protobuf::ServiceDescriptorProto *google::protobuf::ServiceDescriptorProto::New(google::protobuf::ServiceDescriptorProto *this, Arena *a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::ServiceDescriptorProto>((google::protobuf::internal::ArenaImpl *)a2);
}

uint64_t google::protobuf::ServiceDescriptorProto::GetCachedSize(google::protobuf::ServiceDescriptorProto *this)
{
  return *((unsigned int *)this + 5);
}

google::protobuf::MethodDescriptorProto *google::protobuf::MethodDescriptorProto::New(google::protobuf::MethodDescriptorProto *this)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::MethodDescriptorProto>(0);
}

google::protobuf::MethodDescriptorProto *google::protobuf::MethodDescriptorProto::New(google::protobuf::MethodDescriptorProto *this, Arena *a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::MethodDescriptorProto>((google::protobuf::internal::ArenaImpl *)a2);
}

uint64_t google::protobuf::MethodDescriptorProto::GetCachedSize(google::protobuf::MethodDescriptorProto *this)
{
  return *((unsigned int *)this + 5);
}

google::protobuf::FileOptions *google::protobuf::FileOptions::New(google::protobuf::FileOptions *this)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::FileOptions>(0);
}

google::protobuf::FileOptions *google::protobuf::FileOptions::New(google::protobuf::FileOptions *this, Arena *a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::FileOptions>((google::protobuf::internal::ArenaImpl *)a2);
}

uint64_t google::protobuf::FileOptions::GetCachedSize(google::protobuf::FileOptions *this)
{
  return *((unsigned int *)this + 11);
}

google::protobuf::MessageOptions *google::protobuf::MessageOptions::New(google::protobuf::MessageOptions *this)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::MessageOptions>(0);
}

google::protobuf::MessageOptions *google::protobuf::MessageOptions::New(google::protobuf::MessageOptions *this, Arena *a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::MessageOptions>((google::protobuf::internal::ArenaImpl *)a2);
}

uint64_t google::protobuf::MessageOptions::GetCachedSize(google::protobuf::MessageOptions *this)
{
  return *((unsigned int *)this + 11);
}

google::protobuf::FieldOptions *google::protobuf::FieldOptions::New(google::protobuf::FieldOptions *this)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::FieldOptions>(0);
}

google::protobuf::FieldOptions *google::protobuf::FieldOptions::New(google::protobuf::FieldOptions *this, Arena *a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::FieldOptions>((google::protobuf::internal::ArenaImpl *)a2);
}

uint64_t google::protobuf::FieldOptions::GetCachedSize(google::protobuf::FieldOptions *this)
{
  return *((unsigned int *)this + 11);
}

google::protobuf::OneofOptions *google::protobuf::OneofOptions::New(google::protobuf::OneofOptions *this)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::OneofOptions>(0);
}

google::protobuf::OneofOptions *google::protobuf::OneofOptions::New(google::protobuf::OneofOptions *this, Arena *a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::OneofOptions>((google::protobuf::internal::ArenaImpl *)a2);
}

uint64_t google::protobuf::OneofOptions::GetCachedSize(google::protobuf::OneofOptions *this)
{
  return *((unsigned int *)this + 16);
}

google::protobuf::EnumOptions *google::protobuf::EnumOptions::New(google::protobuf::EnumOptions *this)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::EnumOptions>(0);
}

google::protobuf::EnumOptions *google::protobuf::EnumOptions::New(google::protobuf::EnumOptions *this, Arena *a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::EnumOptions>((google::protobuf::internal::ArenaImpl *)a2);
}

uint64_t google::protobuf::EnumOptions::GetCachedSize(google::protobuf::EnumOptions *this)
{
  return *((unsigned int *)this + 11);
}

google::protobuf::EnumValueOptions *google::protobuf::EnumValueOptions::New(google::protobuf::EnumValueOptions *this)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::EnumValueOptions>(0);
}

google::protobuf::EnumValueOptions *google::protobuf::EnumValueOptions::New(google::protobuf::EnumValueOptions *this, Arena *a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::EnumValueOptions>((google::protobuf::internal::ArenaImpl *)a2);
}

uint64_t google::protobuf::EnumValueOptions::GetCachedSize(google::protobuf::EnumValueOptions *this)
{
  return *((unsigned int *)this + 11);
}

google::protobuf::ServiceOptions *google::protobuf::ServiceOptions::New(google::protobuf::ServiceOptions *this)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::ServiceOptions>(0);
}

google::protobuf::ServiceOptions *google::protobuf::ServiceOptions::New(google::protobuf::ServiceOptions *this, Arena *a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::ServiceOptions>((google::protobuf::internal::ArenaImpl *)a2);
}

uint64_t google::protobuf::ServiceOptions::GetCachedSize(google::protobuf::ServiceOptions *this)
{
  return *((unsigned int *)this + 11);
}

google::protobuf::MethodOptions *google::protobuf::MethodOptions::New(google::protobuf::MethodOptions *this)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::MethodOptions>(0);
}

google::protobuf::MethodOptions *google::protobuf::MethodOptions::New(google::protobuf::MethodOptions *this, Arena *a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::MethodOptions>((google::protobuf::internal::ArenaImpl *)a2);
}

uint64_t google::protobuf::MethodOptions::GetCachedSize(google::protobuf::MethodOptions *this)
{
  return *((unsigned int *)this + 11);
}

uint64_t google::protobuf::UninterpretedOption_NamePart::New(google::protobuf::UninterpretedOption_NamePart *this)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::UninterpretedOption_NamePart>(0);
}

uint64_t google::protobuf::UninterpretedOption_NamePart::New(google::protobuf::UninterpretedOption_NamePart *this, Arena *a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::UninterpretedOption_NamePart>((google::protobuf::internal::ArenaImpl *)a2);
}

uint64_t google::protobuf::UninterpretedOption_NamePart::GetCachedSize(google::protobuf::UninterpretedOption_NamePart *this)
{
  return *((unsigned int *)this + 5);
}

google::protobuf::UninterpretedOption *google::protobuf::UninterpretedOption::New(google::protobuf::UninterpretedOption *this)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::UninterpretedOption>(0);
}

google::protobuf::UninterpretedOption *google::protobuf::UninterpretedOption::New(google::protobuf::UninterpretedOption *this, Arena *a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::UninterpretedOption>((google::protobuf::internal::ArenaImpl *)a2);
}

uint64_t google::protobuf::UninterpretedOption::GetCachedSize(google::protobuf::UninterpretedOption *this)
{
  return *((unsigned int *)this + 5);
}

google::protobuf::SourceCodeInfo_Location *google::protobuf::SourceCodeInfo_Location::New(google::protobuf::SourceCodeInfo_Location *this)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::SourceCodeInfo_Location>(0);
}

google::protobuf::SourceCodeInfo_Location *google::protobuf::SourceCodeInfo_Location::New(google::protobuf::SourceCodeInfo_Location *this, Arena *a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::SourceCodeInfo_Location>((google::protobuf::internal::ArenaImpl *)a2);
}

uint64_t google::protobuf::SourceCodeInfo_Location::GetCachedSize(google::protobuf::SourceCodeInfo_Location *this)
{
  return *((unsigned int *)this + 5);
}

google::protobuf::SourceCodeInfo *google::protobuf::SourceCodeInfo::New(google::protobuf::SourceCodeInfo *this)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::SourceCodeInfo>(0);
}

google::protobuf::SourceCodeInfo *google::protobuf::SourceCodeInfo::New(google::protobuf::SourceCodeInfo *this, Arena *a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::SourceCodeInfo>((google::protobuf::internal::ArenaImpl *)a2);
}

uint64_t google::protobuf::SourceCodeInfo::GetCachedSize(google::protobuf::SourceCodeInfo *this)
{
  return *((unsigned int *)this + 10);
}

google::protobuf::GeneratedCodeInfo_Annotation *google::protobuf::GeneratedCodeInfo_Annotation::New(google::protobuf::GeneratedCodeInfo_Annotation *this)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::GeneratedCodeInfo_Annotation>(0);
}

google::protobuf::GeneratedCodeInfo_Annotation *google::protobuf::GeneratedCodeInfo_Annotation::New(google::protobuf::GeneratedCodeInfo_Annotation *this, Arena *a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::GeneratedCodeInfo_Annotation>((google::protobuf::internal::ArenaImpl *)a2);
}

uint64_t google::protobuf::GeneratedCodeInfo_Annotation::GetCachedSize(google::protobuf::GeneratedCodeInfo_Annotation *this)
{
  return *((unsigned int *)this + 5);
}

google::protobuf::GeneratedCodeInfo *google::protobuf::GeneratedCodeInfo::New(google::protobuf::GeneratedCodeInfo *this)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::GeneratedCodeInfo>(0);
}

google::protobuf::GeneratedCodeInfo *google::protobuf::GeneratedCodeInfo::New(google::protobuf::GeneratedCodeInfo *this, Arena *a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::GeneratedCodeInfo>((google::protobuf::internal::ArenaImpl *)a2);
}

uint64_t google::protobuf::GeneratedCodeInfo::GetCachedSize(google::protobuf::GeneratedCodeInfo *this)
{
  return *((unsigned int *)this + 10);
}

void google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<google::protobuf::FileDescriptorProto>::TypeHandler>(_QWORD *a1)
{
  google::protobuf::FileDescriptorProto **v2;
  google::protobuf::FileDescriptorProto **v3;
  uint64_t v4;

  v2 = (google::protobuf::FileDescriptorProto **)a1[2];
  if (v2 && !*a1)
  {
    v3 = v2 + 1;
    v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          google::protobuf::FileDescriptorProto::~FileDescriptorProto(*v3);
          MEMORY[0x18D76437C]();
        }
        ++v3;
        --v4;
      }
      while (v4);
      v2 = (google::protobuf::FileDescriptorProto **)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void google::protobuf::internal::GenericTypeHandler<google::protobuf::FileDescriptorProto>::Merge(google::protobuf::FileDescriptorProto *a1, google::protobuf::FileDescriptorProto *this)
{
  google::protobuf::FileDescriptorProto::MergeFrom(this, a1);
}

void google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto>::TypeHandler>(_QWORD *a1)
{
  google::protobuf::DescriptorProto **v2;
  google::protobuf::DescriptorProto **v3;
  uint64_t v4;

  v2 = (google::protobuf::DescriptorProto **)a1[2];
  if (v2 && !*a1)
  {
    v3 = v2 + 1;
    v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          google::protobuf::DescriptorProto::~DescriptorProto(*v3);
          MEMORY[0x18D76437C]();
        }
        ++v3;
        --v4;
      }
      while (v4);
      v2 = (google::protobuf::DescriptorProto **)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto>::TypeHandler>(_QWORD *a1)
{
  google::protobuf::EnumDescriptorProto **v2;
  google::protobuf::EnumDescriptorProto **v3;
  uint64_t v4;

  v2 = (google::protobuf::EnumDescriptorProto **)a1[2];
  if (v2 && !*a1)
  {
    v3 = v2 + 1;
    v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          google::protobuf::EnumDescriptorProto::~EnumDescriptorProto(*v3);
          MEMORY[0x18D76437C]();
        }
        ++v3;
        --v4;
      }
      while (v4);
      v2 = (google::protobuf::EnumDescriptorProto **)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<google::protobuf::ServiceDescriptorProto>::TypeHandler>(_QWORD *a1)
{
  google::protobuf::ServiceDescriptorProto **v2;
  google::protobuf::ServiceDescriptorProto **v3;
  uint64_t v4;

  v2 = (google::protobuf::ServiceDescriptorProto **)a1[2];
  if (v2 && !*a1)
  {
    v3 = v2 + 1;
    v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          google::protobuf::ServiceDescriptorProto::~ServiceDescriptorProto(*v3);
          MEMORY[0x18D76437C]();
        }
        ++v3;
        --v4;
      }
      while (v4);
      v2 = (google::protobuf::ServiceDescriptorProto **)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::TypeHandler>(_QWORD *a1)
{
  google::protobuf::FieldDescriptorProto **v2;
  google::protobuf::FieldDescriptorProto **v3;
  uint64_t v4;

  v2 = (google::protobuf::FieldDescriptorProto **)a1[2];
  if (v2 && !*a1)
  {
    v3 = v2 + 1;
    v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          google::protobuf::FieldDescriptorProto::~FieldDescriptorProto(*v3);
          MEMORY[0x18D76437C]();
        }
        ++v3;
        --v4;
      }
      while (v4);
      v2 = (google::protobuf::FieldDescriptorProto **)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto>::TypeHandler>(google::protobuf::internal::ArenaImpl **a1, google::protobuf::DescriptorProto **a2, google::protobuf::DescriptorProto **a3, unsigned int a4, unsigned int a5)
{
  uint64_t v10;
  google::protobuf::DescriptorProto **v11;
  google::protobuf::DescriptorProto **v12;
  google::protobuf::DescriptorProto *v13;
  google::protobuf::DescriptorProto *v14;
  google::protobuf::DescriptorProto *v15;
  BOOL v16;
  int v17;
  google::protobuf::internal::ArenaImpl *v18;
  google::protobuf::DescriptorProto **v19;
  google::protobuf::DescriptorProto **v20;
  google::protobuf::DescriptorProto *v21;
  google::protobuf::DescriptorProto *v22;

  if ((int)a5 >= (int)a4)
    v10 = a4;
  else
    v10 = a5;
  if ((int)v10 >= 1)
  {
    v11 = a3;
    v12 = a2;
    do
    {
      v14 = *v11++;
      v13 = v14;
      v15 = *v12++;
      google::protobuf::internal::GenericTypeHandler<google::protobuf::DescriptorProto>::Merge(v13, v15);
      --v10;
    }
    while (v10);
  }
  v16 = __OFSUB__(a4, a5);
  v17 = a4 - a5;
  if (!((v17 < 0) ^ v16 | (v17 == 0)))
  {
    v18 = *a1;
    v19 = &a2[a5];
    v20 = &a3[a5];
    do
    {
      v21 = *v20++;
      v22 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::DescriptorProto>(v18);
      google::protobuf::internal::GenericTypeHandler<google::protobuf::DescriptorProto>::Merge(v21, v22);
      *v19++ = v22;
      --v17;
    }
    while (v17);
  }
}

void google::protobuf::internal::GenericTypeHandler<google::protobuf::DescriptorProto>::Merge(google::protobuf::DescriptorProto *a1, google::protobuf::DescriptorProto *this)
{
  google::protobuf::DescriptorProto::MergeFrom(this, a1);
}

void google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto>::TypeHandler>(google::protobuf::internal::ArenaImpl **a1, google::protobuf::EnumDescriptorProto **a2, google::protobuf::EnumDescriptorProto **a3, unsigned int a4, unsigned int a5)
{
  uint64_t v10;
  google::protobuf::EnumDescriptorProto **v11;
  google::protobuf::EnumDescriptorProto **v12;
  google::protobuf::EnumDescriptorProto *v13;
  google::protobuf::EnumDescriptorProto *v14;
  google::protobuf::EnumDescriptorProto *v15;
  BOOL v16;
  int v17;
  google::protobuf::internal::ArenaImpl *v18;
  google::protobuf::EnumDescriptorProto **v19;
  google::protobuf::EnumDescriptorProto **v20;
  google::protobuf::EnumDescriptorProto *v21;
  google::protobuf::EnumDescriptorProto *v22;

  if ((int)a5 >= (int)a4)
    v10 = a4;
  else
    v10 = a5;
  if ((int)v10 >= 1)
  {
    v11 = a3;
    v12 = a2;
    do
    {
      v14 = *v11++;
      v13 = v14;
      v15 = *v12++;
      google::protobuf::internal::GenericTypeHandler<google::protobuf::EnumDescriptorProto>::Merge(v13, v15);
      --v10;
    }
    while (v10);
  }
  v16 = __OFSUB__(a4, a5);
  v17 = a4 - a5;
  if (!((v17 < 0) ^ v16 | (v17 == 0)))
  {
    v18 = *a1;
    v19 = &a2[a5];
    v20 = &a3[a5];
    do
    {
      v21 = *v20++;
      v22 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::EnumDescriptorProto>(v18);
      google::protobuf::internal::GenericTypeHandler<google::protobuf::EnumDescriptorProto>::Merge(v21, v22);
      *v19++ = v22;
      --v17;
    }
    while (v17);
  }
}

void google::protobuf::internal::GenericTypeHandler<google::protobuf::EnumDescriptorProto>::Merge(google::protobuf::EnumDescriptorProto *a1, google::protobuf::EnumDescriptorProto *this)
{
  google::protobuf::EnumDescriptorProto::MergeFrom(this, a1);
}

void google::protobuf::internal::GenericTypeHandler<google::protobuf::ServiceDescriptorProto>::Merge(google::protobuf::ServiceDescriptorProto *a1, google::protobuf::ServiceDescriptorProto *this)
{
  google::protobuf::ServiceDescriptorProto::MergeFrom(this, a1);
}

void google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::TypeHandler>(google::protobuf::internal::ArenaImpl **a1, google::protobuf::FieldDescriptorProto **a2, google::protobuf::FieldDescriptorProto **a3, unsigned int a4, unsigned int a5)
{
  uint64_t v10;
  google::protobuf::FieldDescriptorProto **v11;
  google::protobuf::FieldDescriptorProto **v12;
  google::protobuf::FieldDescriptorProto *v13;
  google::protobuf::FieldDescriptorProto *v14;
  google::protobuf::FieldDescriptorProto *v15;
  BOOL v16;
  int v17;
  google::protobuf::internal::ArenaImpl *v18;
  google::protobuf::FieldDescriptorProto **v19;
  google::protobuf::FieldDescriptorProto **v20;
  google::protobuf::FieldDescriptorProto *v21;
  google::protobuf::FieldDescriptorProto *v22;

  if ((int)a5 >= (int)a4)
    v10 = a4;
  else
    v10 = a5;
  if ((int)v10 >= 1)
  {
    v11 = a3;
    v12 = a2;
    do
    {
      v14 = *v11++;
      v13 = v14;
      v15 = *v12++;
      google::protobuf::internal::GenericTypeHandler<google::protobuf::FieldDescriptorProto>::Merge(v13, v15);
      --v10;
    }
    while (v10);
  }
  v16 = __OFSUB__(a4, a5);
  v17 = a4 - a5;
  if (!((v17 < 0) ^ v16 | (v17 == 0)))
  {
    v18 = *a1;
    v19 = &a2[a5];
    v20 = &a3[a5];
    do
    {
      v21 = *v20++;
      v22 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::FieldDescriptorProto>(v18);
      google::protobuf::internal::GenericTypeHandler<google::protobuf::FieldDescriptorProto>::Merge(v21, v22);
      *v19++ = v22;
      --v17;
    }
    while (v17);
  }
}

void google::protobuf::internal::GenericTypeHandler<google::protobuf::FieldDescriptorProto>::Merge(google::protobuf::FieldDescriptorProto *a1, google::protobuf::FieldDescriptorProto *this)
{
  google::protobuf::FieldDescriptorProto::MergeFrom(this, a1);
}

void google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ExtensionRange>::TypeHandler>(_QWORD *a1)
{
  google::protobuf::DescriptorProto_ExtensionRange **v2;
  google::protobuf::DescriptorProto_ExtensionRange **v3;
  uint64_t v4;

  v2 = (google::protobuf::DescriptorProto_ExtensionRange **)a1[2];
  if (v2 && !*a1)
  {
    v3 = v2 + 1;
    v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          google::protobuf::DescriptorProto_ExtensionRange::~DescriptorProto_ExtensionRange(*v3);
          MEMORY[0x18D76437C]();
        }
        ++v3;
        --v4;
      }
      while (v4);
      v2 = (google::protobuf::DescriptorProto_ExtensionRange **)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<google::protobuf::OneofDescriptorProto>::TypeHandler>(_QWORD *a1)
{
  google::protobuf::OneofDescriptorProto **v2;
  google::protobuf::OneofDescriptorProto **v3;
  uint64_t v4;

  v2 = (google::protobuf::OneofDescriptorProto **)a1[2];
  if (v2 && !*a1)
  {
    v3 = v2 + 1;
    v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          google::protobuf::OneofDescriptorProto::~OneofDescriptorProto(*v3);
          MEMORY[0x18D76437C]();
        }
        ++v3;
        --v4;
      }
      while (v4);
      v2 = (google::protobuf::OneofDescriptorProto **)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ReservedRange>::TypeHandler>(_QWORD *a1)
{
  unsigned int *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    v3 = (uint64_t *)(v2 + 2);
    v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        v5 = *v3;
        if (*v3)
        {
          google::protobuf::internal::InternalMetadata::Delete<google::protobuf::UnknownFieldSet>((uint64_t *)(v5 + 8));
          MEMORY[0x18D76437C](v5, 0x1081C404FE48876);
        }
        ++v3;
        --v4;
      }
      while (v4);
      v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void google::protobuf::internal::GenericTypeHandler<google::protobuf::DescriptorProto_ExtensionRange>::Merge(google::protobuf::DescriptorProto_ExtensionRange *a1, google::protobuf::DescriptorProto_ExtensionRange *this)
{
  google::protobuf::DescriptorProto_ExtensionRange::MergeFrom(this, a1);
}

void google::protobuf::internal::GenericTypeHandler<google::protobuf::OneofDescriptorProto>::Merge(google::protobuf::OneofDescriptorProto *a1, google::protobuf::OneofDescriptorProto *this)
{
  google::protobuf::OneofDescriptorProto::MergeFrom(this, a1);
}

void google::protobuf::internal::GenericTypeHandler<google::protobuf::DescriptorProto_ReservedRange>::Merge(google::protobuf::DescriptorProto_ReservedRange *a1, google::protobuf::DescriptorProto_ReservedRange *this)
{
  google::protobuf::DescriptorProto_ReservedRange::MergeFrom(this, a1);
}

void google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::TypeHandler>(_QWORD *a1)
{
  google::protobuf::UninterpretedOption **v2;
  google::protobuf::UninterpretedOption **v3;
  uint64_t v4;

  v2 = (google::protobuf::UninterpretedOption **)a1[2];
  if (v2 && !*a1)
  {
    v3 = v2 + 1;
    v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          google::protobuf::UninterpretedOption::~UninterpretedOption(*v3);
          MEMORY[0x18D76437C]();
        }
        ++v3;
        --v4;
      }
      while (v4);
      v2 = (google::protobuf::UninterpretedOption **)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::TypeHandler>(google::protobuf::internal::ArenaImpl **a1, google::protobuf::UninterpretedOption **a2, google::protobuf::UninterpretedOption **a3, unsigned int a4, unsigned int a5)
{
  uint64_t v10;
  google::protobuf::UninterpretedOption **v11;
  google::protobuf::UninterpretedOption **v12;
  google::protobuf::UninterpretedOption *v13;
  google::protobuf::UninterpretedOption *v14;
  google::protobuf::UninterpretedOption *v15;
  BOOL v16;
  int v17;
  google::protobuf::internal::ArenaImpl *v18;
  google::protobuf::UninterpretedOption **v19;
  google::protobuf::UninterpretedOption **v20;
  google::protobuf::UninterpretedOption *v21;
  google::protobuf::UninterpretedOption *v22;

  if ((int)a5 >= (int)a4)
    v10 = a4;
  else
    v10 = a5;
  if ((int)v10 >= 1)
  {
    v11 = a3;
    v12 = a2;
    do
    {
      v14 = *v11++;
      v13 = v14;
      v15 = *v12++;
      google::protobuf::internal::GenericTypeHandler<google::protobuf::UninterpretedOption>::Merge(v13, v15);
      --v10;
    }
    while (v10);
  }
  v16 = __OFSUB__(a4, a5);
  v17 = a4 - a5;
  if (!((v17 < 0) ^ v16 | (v17 == 0)))
  {
    v18 = *a1;
    v19 = &a2[a5];
    v20 = &a3[a5];
    do
    {
      v21 = *v20++;
      v22 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::UninterpretedOption>(v18);
      google::protobuf::internal::GenericTypeHandler<google::protobuf::UninterpretedOption>::Merge(v21, v22);
      *v19++ = v22;
      --v17;
    }
    while (v17);
  }
}

void google::protobuf::internal::GenericTypeHandler<google::protobuf::UninterpretedOption>::Merge(google::protobuf::UninterpretedOption *a1, google::protobuf::UninterpretedOption *this)
{
  google::protobuf::UninterpretedOption::MergeFrom(this, a1);
}

void google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<google::protobuf::EnumValueDescriptorProto>::TypeHandler>(_QWORD *a1)
{
  google::protobuf::EnumValueDescriptorProto **v2;
  google::protobuf::EnumValueDescriptorProto **v3;
  uint64_t v4;

  v2 = (google::protobuf::EnumValueDescriptorProto **)a1[2];
  if (v2 && !*a1)
  {
    v3 = v2 + 1;
    v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          google::protobuf::EnumValueDescriptorProto::~EnumValueDescriptorProto(*v3);
          MEMORY[0x18D76437C]();
        }
        ++v3;
        --v4;
      }
      while (v4);
      v2 = (google::protobuf::EnumValueDescriptorProto **)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto_EnumReservedRange>::TypeHandler>(_QWORD *a1)
{
  unsigned int *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    v3 = (uint64_t *)(v2 + 2);
    v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        v5 = *v3;
        if (*v3)
        {
          google::protobuf::internal::InternalMetadata::Delete<google::protobuf::UnknownFieldSet>((uint64_t *)(v5 + 8));
          MEMORY[0x18D76437C](v5, 0x1081C404FE48876);
        }
        ++v3;
        --v4;
      }
      while (v4);
      v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void google::protobuf::internal::GenericTypeHandler<google::protobuf::EnumValueDescriptorProto>::Merge(google::protobuf::EnumValueDescriptorProto *a1, google::protobuf::EnumValueDescriptorProto *this)
{
  google::protobuf::EnumValueDescriptorProto::MergeFrom(this, a1);
}

void google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<google::protobuf::MethodDescriptorProto>::TypeHandler>(_QWORD *a1)
{
  google::protobuf::MethodDescriptorProto **v2;
  google::protobuf::MethodDescriptorProto **v3;
  uint64_t v4;

  v2 = (google::protobuf::MethodDescriptorProto **)a1[2];
  if (v2 && !*a1)
  {
    v3 = v2 + 1;
    v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          google::protobuf::MethodDescriptorProto::~MethodDescriptorProto(*v3);
          MEMORY[0x18D76437C]();
        }
        ++v3;
        --v4;
      }
      while (v4);
      v2 = (google::protobuf::MethodDescriptorProto **)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void google::protobuf::internal::GenericTypeHandler<google::protobuf::MethodDescriptorProto>::Merge(google::protobuf::MethodDescriptorProto *a1, google::protobuf::MethodDescriptorProto *this)
{
  google::protobuf::MethodDescriptorProto::MergeFrom(this, a1);
}

void google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::TypeHandler>(_QWORD *a1)
{
  google::protobuf::UninterpretedOption_NamePart **v2;
  google::protobuf::UninterpretedOption_NamePart **v3;
  uint64_t v4;

  v2 = (google::protobuf::UninterpretedOption_NamePart **)a1[2];
  if (v2 && !*a1)
  {
    v3 = v2 + 1;
    v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          google::protobuf::UninterpretedOption_NamePart::~UninterpretedOption_NamePart(*v3);
          MEMORY[0x18D76437C]();
        }
        ++v3;
        --v4;
      }
      while (v4);
      v2 = (google::protobuf::UninterpretedOption_NamePart **)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void google::protobuf::internal::GenericTypeHandler<google::protobuf::UninterpretedOption_NamePart>::Merge(google::protobuf::UninterpretedOption_NamePart *a1, google::protobuf::UninterpretedOption_NamePart *this)
{
  google::protobuf::UninterpretedOption_NamePart::MergeFrom(this, a1);
}

void google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<google::protobuf::GeneratedCodeInfo_Annotation>::TypeHandler>(_QWORD *a1)
{
  google::protobuf::GeneratedCodeInfo_Annotation **v2;
  google::protobuf::GeneratedCodeInfo_Annotation **v3;
  uint64_t v4;

  v2 = (google::protobuf::GeneratedCodeInfo_Annotation **)a1[2];
  if (v2 && !*a1)
  {
    v3 = v2 + 1;
    v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          google::protobuf::GeneratedCodeInfo_Annotation::~GeneratedCodeInfo_Annotation(*v3);
          MEMORY[0x18D76437C]();
        }
        ++v3;
        --v4;
      }
      while (v4);
      v2 = (google::protobuf::GeneratedCodeInfo_Annotation **)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void google::protobuf::internal::GenericTypeHandler<google::protobuf::GeneratedCodeInfo_Annotation>::Merge(google::protobuf::GeneratedCodeInfo_Annotation *a1, google::protobuf::GeneratedCodeInfo_Annotation *this)
{
  google::protobuf::GeneratedCodeInfo_Annotation::MergeFrom(this, a1);
}

uint64_t google::protobuf::UnknownFieldSet::default_instance(google::protobuf::UnknownFieldSet *this)
{
  unsigned __int8 v1;
  uint64_t v3;
  const void *v4;

  if ((v1 & 1) == 0
  {
    v3 = operator new();
    *(_QWORD *)v3 = 0;
    *(_QWORD *)(v3 + 8) = 0;
    *(_QWORD *)(v3 + 16) = 0;
    google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::OnShutdownDelete<google::protobuf::UnknownFieldSet>(google::protobuf::UnknownFieldSet *)::{lambda(void const*)#1}::__invoke, (void (*)(const void *))v3, v4);
    google::protobuf::UnknownFieldSet::default_instance(void)::instance = v3;
  }
  return google::protobuf::UnknownFieldSet::default_instance(void)::instance;
}

void sub_1888BAF28(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::UnknownFieldSet::ClearFallback(google::protobuf::UnknownFieldSet *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v2 = (int)((uint64_t)(*((_QWORD *)this + 1) - *(_QWORD *)this) >> 4);
  v3 = v2 + 1;
  v4 = 16 * v2 - 16;
  do
  {
    result = google::protobuf::UnknownField::Delete(*(_QWORD *)this + v4);
    --v3;
    v4 -= 16;
  }
  while (v3 > 1);
  *((_QWORD *)this + 1) = *(_QWORD *)this;
  return result;
}

uint64_t google::protobuf::UnknownField::Delete(uint64_t this)
{
  int v1;
  uint64_t v2;
  google::protobuf::UnknownFieldSet *v3;
  void *v4;

  v1 = *(_DWORD *)(this + 4);
  if (v1 == 4)
  {
    v3 = *(google::protobuf::UnknownFieldSet **)(this + 8);
    if (v3)
    {
      v4 = *(void **)v3;
      if (*(_QWORD *)v3 != *((_QWORD *)v3 + 1))
      {
        google::protobuf::UnknownFieldSet::ClearFallback(v3);
        v4 = *(void **)v3;
      }
      if (v4)
      {
        *((_QWORD *)v3 + 1) = v4;
        operator delete(v4);
      }
LABEL_14:
      JUMPOUT(0x18D76437CLL);
    }
  }
  else if (v1 == 3)
  {
    v2 = *(_QWORD *)(this + 8);
    if (v2)
    {
      if (*(char *)(v2 + 23) < 0)
        operator delete(*(void **)v2);
      goto LABEL_14;
    }
  }
  return this;
}

void google::protobuf::UnknownFieldSet::InternalMergeFrom(void **this, const google::protobuf::UnknownFieldSet *a2)
{
  unint64_t v2;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  char *v9;
  char *v10;
  _OWORD *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;

  v2 = *((_QWORD *)a2 + 1) - *(_QWORD *)a2;
  if ((int)(v2 >> 4) >= 1)
  {
    v5 = (v2 >> 4);
    std::vector<google::protobuf::UnknownField>::reserve(this, (((_BYTE *)this[1] - (_BYTE *)*this) >> 4) + v5);
    v7 = 0;
    do
    {
      v8 = (_OWORD *)(*(_QWORD *)a2 + 16 * v7);
      v10 = (char *)this[1];
      v9 = (char *)this[2];
      if (v10 >= v9)
      {
        v12 = (v10 - (_BYTE *)*this) >> 4;
        v13 = v12 + 1;
        if ((unint64_t)(v12 + 1) >> 60)
          std::vector<google::protobuf::UnknownField>::__throw_length_error[abi:ne180100]();
        v14 = v9 - (_BYTE *)*this;
        if (v14 >> 3 > v13)
          v13 = v14 >> 3;
        if ((unint64_t)v14 >= 0x7FFFFFFFFFFFFFF0)
          v6 = 0xFFFFFFFFFFFFFFFLL;
        else
          v6 = v13;
        if (v6)
          v15 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::shared_ptr<zilch::TrafficDynamicTile::Incident>>>((uint64_t)(this + 2), v6);
        else
          v15 = 0;
        v16 = &v15[16 * v12];
        *(_OWORD *)v16 = *v8;
        v18 = (char *)*this;
        v17 = (char *)this[1];
        v19 = v16;
        if (v17 != *this)
        {
          do
          {
            *((_OWORD *)v19 - 1) = *((_OWORD *)v17 - 1);
            v19 -= 16;
            v17 -= 16;
          }
          while (v17 != v18);
          v17 = (char *)*this;
        }
        v11 = v16 + 16;
        *this = v19;
        this[1] = v16 + 16;
        this[2] = &v15[16 * v6];
        if (v17)
          operator delete(v17);
      }
      else
      {
        *(_OWORD *)v10 = *v8;
        v11 = v10 + 16;
      }
      this[1] = v11;
      google::protobuf::UnknownField::DeepCopy((google::protobuf::UnknownField *)(v11 - 1), (const google::protobuf::UnknownField *)v6);
      ++v7;
    }
    while (v7 != v5);
  }
}

void std::vector<google::protobuf::UnknownField>::reserve(void **a1, unint64_t a2)
{
  uint64_t v3;
  _BYTE *v4;
  int64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  char *v11;
  char *v12;

  v4 = a1[2];
  v3 = (uint64_t)(a1 + 2);
  if (a2 > (v4 - (_BYTE *)*a1) >> 4)
  {
    if (a2 >> 60)
      std::vector<google::protobuf::UnknownField>::__throw_length_error[abi:ne180100]();
    v5 = (_BYTE *)a1[1] - (_BYTE *)*a1;
    v6 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::shared_ptr<zilch::TrafficDynamicTile::Incident>>>(v3, a2);
    v7 = &v6[v5 & 0xFFFFFFFFFFFFFFF0];
    v9 = &v6[16 * v8];
    v11 = (char *)*a1;
    v10 = (char *)a1[1];
    v12 = v7;
    if (v10 != *a1)
    {
      do
      {
        *((_OWORD *)v12 - 1) = *((_OWORD *)v10 - 1);
        v12 -= 16;
        v10 -= 16;
      }
      while (v10 != v11);
      v10 = (char *)*a1;
    }
    *a1 = v12;
    a1[1] = v7;
    a1[2] = v9;
    if (v10)
      operator delete(v10);
  }
}

void google::protobuf::UnknownField::DeepCopy(google::protobuf::UnknownField *this, const google::protobuf::UnknownField *a2)
{
  int v3;
  std::string *v4;
  google::protobuf::UnknownFieldSet *v5;
  __int128 *v6;
  __int128 v7;

  v3 = *((_DWORD *)this + 1);
  if (v3 == 4)
  {
    v5 = (google::protobuf::UnknownFieldSet *)operator new();
    *((_QWORD *)v5 + 1) = 0;
    *((_QWORD *)v5 + 2) = 0;
    *(_QWORD *)v5 = 0;
    google::protobuf::UnknownFieldSet::InternalMergeFrom(v5, *((const google::protobuf::UnknownFieldSet **)this + 1));
  }
  else
  {
    if (v3 != 3)
      return;
    v4 = (std::string *)operator new();
    v5 = (google::protobuf::UnknownFieldSet *)v4;
    v6 = (__int128 *)*((_QWORD *)this + 1);
    if (*((char *)v6 + 23) < 0)
    {
      std::string::__init_copy_ctor_external(v4, *(const std::string::value_type **)v6, *((_QWORD *)v6 + 1));
    }
    else
    {
      v7 = *v6;
      v4->__r_.__value_.__r.__words[2] = *((_QWORD *)v6 + 2);
      *(_OWORD *)&v4->__r_.__value_.__l.__data_ = v7;
    }
  }
  *((_QWORD *)this + 1) = v5;
}

void sub_1888BB2F0(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x18D76437C](v1, 0x1012C40EC159624);
  _Unwind_Resume(a1);
}

void google::protobuf::UnknownFieldSet::MergeFromAndDestroy(google::protobuf::UnknownFieldSet *this, google::protobuf::UnknownFieldSet *a2)
{
  uint64_t v3;

  v3 = *((_QWORD *)this + 1);
  if (*(_QWORD *)this == v3)
    std::vector<google::protobuf::UnknownField>::__move_assign((uint64_t)this, (__n128 *)a2);
  else
    std::vector<google::protobuf::UnknownField>::__insert_with_size[abi:ne180100]<std::move_iterator<std::__wrap_iter<google::protobuf::UnknownField*>>,std::move_iterator<std::__wrap_iter<google::protobuf::UnknownField*>>>((const void **)this, v3, *(__int128 **)a2, *((__int128 **)a2 + 1), (uint64_t)(*((_QWORD *)a2 + 1) - *(_QWORD *)a2) >> 4);
  *((_QWORD *)a2 + 1) = *(_QWORD *)a2;
}

uint64_t google::protobuf::UnknownFieldSet::SpaceUsedExcludingSelfLong(google::protobuf::UnknownFieldSet *this)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  unint64_t v5;
  BOOL v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)this;
  v2 = *((_QWORD *)this + 1);
  if (*(_QWORD *)this != v2)
  {
    v3 = v2 - v1 + 24;
    while (1)
    {
      v4 = *(_DWORD *)(v1 + 4);
      if (v4 == 4)
        break;
      if (v4 == 3)
      {
        v5 = *(_QWORD *)(v1 + 8);
        if (*(char *)(v5 + 23) < 0 && (*(_QWORD *)v5 >= v5 ? (v6 = *(_QWORD *)v5 >= v5 + 24) : (v6 = 1), v6))
          v7 = (*(_QWORD *)(v5 + 16) & 0x7FFFFFFFFFFFFFFFLL) - 1;
        else
          v7 = 0;
        v8 = v3 + v7;
        goto LABEL_15;
      }
LABEL_16:
      v1 += 16;
      if (v1 == v2)
        return v3;
    }
    v8 = v3
       + (int)google::protobuf::UnknownFieldSet::SpaceUsedExcludingSelfLong(*(google::protobuf::UnknownFieldSet **)(v1 + 8));
LABEL_15:
    v3 = v8 + 24;
    goto LABEL_16;
  }
  return 0;
}

void google::protobuf::UnknownFieldSet::AddVarint(google::protobuf::UnknownFieldSet *this, unsigned int a2, uint64_t a3)
{
  char *v6;
  unint64_t v7;
  unint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;

  v8 = *((_QWORD *)this + 2);
  v6 = (char *)this + 16;
  v7 = v8;
  v9 = (_QWORD *)*((_QWORD *)v6 - 1);
  if ((unint64_t)v9 >= v8)
  {
    v11 = ((uint64_t)v9 - *(_QWORD *)this) >> 4;
    v12 = v11 + 1;
    if ((unint64_t)(v11 + 1) >> 60)
      std::vector<google::protobuf::UnknownField>::__throw_length_error[abi:ne180100]();
    v13 = v7 - *(_QWORD *)this;
    if (v13 >> 3 > v12)
      v12 = v13 >> 3;
    if ((unint64_t)v13 >= 0x7FFFFFFFFFFFFFF0)
      v14 = 0xFFFFFFFFFFFFFFFLL;
    else
      v14 = v12;
    if (v14)
      v15 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::shared_ptr<zilch::TrafficDynamicTile::Incident>>>((uint64_t)v6, v14);
    else
      v15 = 0;
    v16 = &v15[16 * v11];
    v17 = &v15[16 * v14];
    *(_DWORD *)v16 = a2;
    *((_DWORD *)v16 + 1) = 0;
    *((_QWORD *)v16 + 1) = a3;
    v10 = v16 + 16;
    v19 = *(char **)this;
    v18 = (char *)*((_QWORD *)this + 1);
    if (v18 != *(char **)this)
    {
      do
      {
        *((_OWORD *)v16 - 1) = *((_OWORD *)v18 - 1);
        v16 -= 16;
        v18 -= 16;
      }
      while (v18 != v19);
      v18 = *(char **)this;
    }
    *(_QWORD *)this = v16;
    *((_QWORD *)this + 1) = v10;
    *((_QWORD *)this + 2) = v17;
    if (v18)
      operator delete(v18);
  }
  else
  {
    *v9 = a2;
    v10 = v9 + 2;
    v9[1] = a3;
  }
  *((_QWORD *)this + 1) = v10;
}

void google::protobuf::UnknownFieldSet::AddFixed32(google::protobuf::UnknownFieldSet *this, int a2, int a3)
{
  char *v6;
  unint64_t v7;
  unint64_t v8;
  _DWORD *v9;
  _DWORD *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;

  v8 = *((_QWORD *)this + 2);
  v6 = (char *)this + 16;
  v7 = v8;
  v9 = (_DWORD *)*((_QWORD *)v6 - 1);
  if ((unint64_t)v9 >= v8)
  {
    v11 = ((uint64_t)v9 - *(_QWORD *)this) >> 4;
    v12 = v11 + 1;
    if ((unint64_t)(v11 + 1) >> 60)
      std::vector<google::protobuf::UnknownField>::__throw_length_error[abi:ne180100]();
    v13 = v7 - *(_QWORD *)this;
    if (v13 >> 3 > v12)
      v12 = v13 >> 3;
    if ((unint64_t)v13 >= 0x7FFFFFFFFFFFFFF0)
      v14 = 0xFFFFFFFFFFFFFFFLL;
    else
      v14 = v12;
    if (v14)
      v15 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::shared_ptr<zilch::TrafficDynamicTile::Incident>>>((uint64_t)v6, v14);
    else
      v15 = 0;
    v16 = &v15[16 * v11];
    v17 = &v15[16 * v14];
    *(_DWORD *)v16 = a2;
    *((_DWORD *)v16 + 1) = 1;
    *((_DWORD *)v16 + 2) = a3;
    v10 = v16 + 16;
    v19 = *(char **)this;
    v18 = (char *)*((_QWORD *)this + 1);
    if (v18 != *(char **)this)
    {
      do
      {
        *((_OWORD *)v16 - 1) = *((_OWORD *)v18 - 1);
        v16 -= 16;
        v18 -= 16;
      }
      while (v18 != v19);
      v18 = *(char **)this;
    }
    *(_QWORD *)this = v16;
    *((_QWORD *)this + 1) = v10;
    *((_QWORD *)this + 2) = v17;
    if (v18)
      operator delete(v18);
  }
  else
  {
    *v9 = a2;
    v9[1] = 1;
    v9[2] = a3;
    v10 = v9 + 4;
  }
  *((_QWORD *)this + 1) = v10;
}

void google::protobuf::UnknownFieldSet::AddFixed64(google::protobuf::UnknownFieldSet *this, int a2, uint64_t a3)
{
  char *v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;

  v8 = *((_QWORD *)this + 2);
  v6 = (char *)this + 16;
  v7 = v8;
  v9 = *((_QWORD *)v6 - 1);
  if (v9 >= v8)
  {
    v11 = (uint64_t)(v9 - *(_QWORD *)this) >> 4;
    v12 = v11 + 1;
    if ((unint64_t)(v11 + 1) >> 60)
      std::vector<google::protobuf::UnknownField>::__throw_length_error[abi:ne180100]();
    v13 = v7 - *(_QWORD *)this;
    if (v13 >> 3 > v12)
      v12 = v13 >> 3;
    if ((unint64_t)v13 >= 0x7FFFFFFFFFFFFFF0)
      v14 = 0xFFFFFFFFFFFFFFFLL;
    else
      v14 = v12;
    if (v14)
      v15 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::shared_ptr<zilch::TrafficDynamicTile::Incident>>>((uint64_t)v6, v14);
    else
      v15 = 0;
    v16 = &v15[16 * v11];
    v17 = &v15[16 * v14];
    *(_DWORD *)v16 = a2;
    *((_DWORD *)v16 + 1) = 2;
    *((_QWORD *)v16 + 1) = a3;
    v10 = v16 + 16;
    v19 = *(char **)this;
    v18 = (char *)*((_QWORD *)this + 1);
    if (v18 != *(char **)this)
    {
      do
      {
        *((_OWORD *)v16 - 1) = *((_OWORD *)v18 - 1);
        v16 -= 16;
        v18 -= 16;
      }
      while (v18 != v19);
      v18 = *(char **)this;
    }
    *(_QWORD *)this = v16;
    *((_QWORD *)this + 1) = v10;
    *((_QWORD *)this + 2) = v17;
    if (v18)
      operator delete(v18);
  }
  else
  {
    *(_DWORD *)v9 = a2;
    *(_DWORD *)(v9 + 4) = 2;
    *(_QWORD *)(v9 + 8) = a3;
    v10 = (char *)(v9 + 16);
  }
  *((_QWORD *)this + 1) = v10;
}

_QWORD *google::protobuf::UnknownFieldSet::AddLengthDelimited(google::protobuf::UnknownFieldSet *this, int a2)
{
  _QWORD *v4;
  unint64_t v5;
  unint64_t v6;
  char *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char *v12;
  char *v13;
  char *v14;
  char *v15;
  char *v16;

  v4 = (_QWORD *)operator new();
  v4[1] = 0;
  v4[2] = 0;
  *v4 = 0;
  v5 = *((_QWORD *)this + 2);
  v6 = *((_QWORD *)this + 1);
  if (v6 >= v5)
  {
    v8 = (uint64_t)(v6 - *(_QWORD *)this) >> 4;
    v9 = v8 + 1;
    if ((unint64_t)(v8 + 1) >> 60)
      std::vector<google::protobuf::UnknownField>::__throw_length_error[abi:ne180100]();
    v10 = v5 - *(_QWORD *)this;
    if (v10 >> 3 > v9)
      v9 = v10 >> 3;
    if ((unint64_t)v10 >= 0x7FFFFFFFFFFFFFF0)
      v11 = 0xFFFFFFFFFFFFFFFLL;
    else
      v11 = v9;
    if (v11)
      v12 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::shared_ptr<zilch::TrafficDynamicTile::Incident>>>((uint64_t)this + 16, v11);
    else
      v12 = 0;
    v13 = &v12[16 * v8];
    v14 = &v12[16 * v11];
    *(_DWORD *)v13 = a2;
    *((_DWORD *)v13 + 1) = 3;
    *((_QWORD *)v13 + 1) = v4;
    v7 = v13 + 16;
    v16 = *(char **)this;
    v15 = (char *)*((_QWORD *)this + 1);
    if (v15 != *(char **)this)
    {
      do
      {
        *((_OWORD *)v13 - 1) = *((_OWORD *)v15 - 1);
        v13 -= 16;
        v15 -= 16;
      }
      while (v15 != v16);
      v15 = *(char **)this;
    }
    *(_QWORD *)this = v13;
    *((_QWORD *)this + 1) = v7;
    *((_QWORD *)this + 2) = v14;
    if (v15)
      operator delete(v15);
  }
  else
  {
    *(_DWORD *)v6 = a2;
    *(_DWORD *)(v6 + 4) = 3;
    *(_QWORD *)(v6 + 8) = v4;
    v7 = (char *)(v6 + 16);
  }
  *((_QWORD *)this + 1) = v7;
  return v4;
}

_QWORD *google::protobuf::UnknownFieldSet::AddGroup(google::protobuf::UnknownFieldSet *this, int a2)
{
  _QWORD *v4;
  unint64_t v5;
  unint64_t v6;
  char *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char *v12;
  char *v13;
  char *v14;
  char *v15;
  char *v16;

  v4 = (_QWORD *)operator new();
  v4[1] = 0;
  v4[2] = 0;
  *v4 = 0;
  v5 = *((_QWORD *)this + 2);
  v6 = *((_QWORD *)this + 1);
  if (v6 >= v5)
  {
    v8 = (uint64_t)(v6 - *(_QWORD *)this) >> 4;
    v9 = v8 + 1;
    if ((unint64_t)(v8 + 1) >> 60)
      std::vector<google::protobuf::UnknownField>::__throw_length_error[abi:ne180100]();
    v10 = v5 - *(_QWORD *)this;
    if (v10 >> 3 > v9)
      v9 = v10 >> 3;
    if ((unint64_t)v10 >= 0x7FFFFFFFFFFFFFF0)
      v11 = 0xFFFFFFFFFFFFFFFLL;
    else
      v11 = v9;
    if (v11)
      v12 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::shared_ptr<zilch::TrafficDynamicTile::Incident>>>((uint64_t)this + 16, v11);
    else
      v12 = 0;
    v13 = &v12[16 * v8];
    v14 = &v12[16 * v11];
    *(_DWORD *)v13 = a2;
    *((_DWORD *)v13 + 1) = 4;
    *((_QWORD *)v13 + 1) = v4;
    v7 = v13 + 16;
    v16 = *(char **)this;
    v15 = (char *)*((_QWORD *)this + 1);
    if (v15 != *(char **)this)
    {
      do
      {
        *((_OWORD *)v13 - 1) = *((_OWORD *)v15 - 1);
        v13 -= 16;
        v15 -= 16;
      }
      while (v15 != v16);
      v15 = *(char **)this;
    }
    *(_QWORD *)this = v13;
    *((_QWORD *)this + 1) = v7;
    *((_QWORD *)this + 2) = v14;
    if (v15)
      operator delete(v15);
  }
  else
  {
    *(_DWORD *)v6 = a2;
    *(_DWORD *)(v6 + 4) = 4;
    *(_QWORD *)(v6 + 8) = v4;
    v7 = (char *)(v6 + 16);
  }
  *((_QWORD *)this + 1) = v7;
  return v4;
}

uint64_t google::protobuf::UnknownFieldSet::MergeFromCodedStream(google::protobuf::UnknownFieldSet *this, char **a2, google::protobuf::UnknownFieldSet *a3, google::protobuf::UnknownFieldSet *a4)
{
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *__p;
  _BYTE *v13;
  uint64_t v14;

  __p = 0;
  v13 = 0;
  v14 = 0;
  if (google::protobuf::internal::WireFormat::SkipMessage(a2, (google::protobuf::io::CodedInputStream *)&__p, a3, a4)&& *((_BYTE *)a2 + 36))
  {
    google::protobuf::UnknownFieldSet::MergeFromAndDestroy(this, (google::protobuf::UnknownFieldSet *)&__p);
    v6 = 1;
  }
  else
  {
    v6 = 0;
  }
  v7 = __p;
  if (__p != v13)
  {
    v8 = (int)((v13 - (_BYTE *)__p) >> 4);
    v9 = v8 + 1;
    v10 = 16 * v8 - 16;
    do
    {
      google::protobuf::UnknownField::Delete((uint64_t)__p + v10);
      --v9;
      v10 -= 16;
    }
    while (v9 > 1);
    v7 = __p;
  }
  if (v7)
  {
    v13 = v7;
    operator delete(v7);
  }
  return v6;
}

void sub_1888BB9E4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  google::protobuf::UnknownFieldSet::~UnknownFieldSet((google::protobuf::UnknownFieldSet *)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::UnknownFieldSet::ParseFromCodedStream(google::protobuf::UnknownFieldSet *this, char **a2, google::protobuf::UnknownFieldSet *a3, google::protobuf::UnknownFieldSet *a4)
{
  if (*(_QWORD *)this != *((_QWORD *)this + 1))
    google::protobuf::UnknownFieldSet::ClearFallback(this);
  return google::protobuf::UnknownFieldSet::MergeFromCodedStream(this, a2, a3, a4);
}

uint64_t google::protobuf::UnknownFieldSet::ParseFromZeroCopyStream(google::protobuf::UnknownFieldSet *a1, char *a2)
{
  google::protobuf::UnknownFieldSet *v3;
  google::protobuf::UnknownFieldSet *v4;
  unsigned int v5;
  uint64_t v6;
  char *v8[6];
  int v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;

  v8[0] = 0;
  v8[1] = 0;
  v8[2] = a2;
  memset(&v8[3], 0, 14);
  v8[5] = (char *)0x7FFFFFFF;
  v9 = 0x7FFFFFFF;
  v10 = google::protobuf::io::CodedInputStream::default_recursion_limit_;
  v11 = google::protobuf::io::CodedInputStream::default_recursion_limit_;
  v12 = 0;
  v13 = 0;
  google::protobuf::io::CodedInputStream::Refresh((google::protobuf::io::CodedInputStream *)v8);
  v5 = google::protobuf::UnknownFieldSet::ParseFromCodedStream(a1, v8, v3, v4);
  if (BYTE4(v8[4]))
    v6 = v5;
  else
    v6 = 0;
  google::protobuf::io::CodedInputStream::~CodedInputStream((google::protobuf::io::CodedInputStream *)v8);
  return v6;
}

void sub_1888BBAB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  google::protobuf::io::CodedInputStream::~CodedInputStream((google::protobuf::io::CodedInputStream *)&a9);
  _Unwind_Resume(a1);
}

unsigned __int8 *google::protobuf::UnknownField::InternalSerializeLengthDelimitedNoTag(google::protobuf::UnknownField *this, unsigned __int8 *a2, google::protobuf::io::EpsCopyOutputStream *a3)
{
  char *v4;
  uint64_t v5;
  unsigned __int8 *v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;

  v4 = (char *)*((_QWORD *)this + 1);
  if (v4[23] < 0)
    v5 = *((_QWORD *)v4 + 1);
  else
    LODWORD(v5) = v4[23];
  if (v5 > 0x7F)
  {
    *a2 = v5 | 0x80;
    v7 = v5 >> 7;
    if (v5 >> 14)
    {
      v6 = a2 + 2;
      do
      {
        *(v6 - 1) = v7 | 0x80;
        v8 = v7 >> 7;
        ++v6;
        v9 = v7 >> 14;
        v7 >>= 7;
      }
      while (v9);
      *(v6 - 1) = v8;
    }
    else
    {
      a2[1] = v7;
      v6 = a2 + 2;
    }
  }
  else
  {
    *a2 = v5;
    v6 = a2 + 1;
  }
  if (v4[23] < 0)
  {
    v11 = v4;
    v4 = *(char **)v4;
    v10 = *((_QWORD *)v11 + 1);
  }
  else
  {
    LODWORD(v10) = v4[23];
  }
  if (*(_QWORD *)a3 - (_QWORD)v6 < (int)v10)
    return google::protobuf::io::EpsCopyOutputStream::WriteRawFallback(a3, v4, v10, v6);
  v12 = (int)v10;
  memcpy(v6, v4, (int)v10);
  return &v6[v12];
}

google::protobuf::internal::EpsCopyInputStream *google::protobuf::internal::FieldParser<google::protobuf::internal::UnknownFieldParserHelper>(unint64_t a1, google::protobuf::UnknownFieldSet **a2, uint64_t *a3, int32x2_t *a4)
{
  unint64_t v4;
  char *v6;
  int v7;
  unsigned __int8 *v8;
  uint64_t v9;
  int v10;
  std::string *v11;
  int v12;
  std::string::value_type *v13;
  int v14;
  BOOL v15;
  int v16;
  unsigned int v17;
  uint64_t v19;
  char *SizeFallback;
  int v21;
  __int32 v22;
  uint64_t v24;
  char *v25[2];
  int v26;
  std::string __p;
  _QWORD *v28;

  v4 = a1 >> 3;
  if (!(a1 >> 3))
    return 0;
  v6 = (char *)a3;
  switch(a1 & 7)
  {
    case 0uLL:
      v8 = (unsigned __int8 *)a3 + 1;
      v7 = *(char *)a3;
      v9 = *(unsigned __int8 *)a3;
      if ((v7 & 0x80000000) == 0)
        goto LABEL_6;
      v10 = *v8;
      v9 = (v9 + (v10 << 7) - 128);
      if ((v10 & 0x80) != 0)
      {
        v8 = (unsigned __int8 *)(v6 + 3);
        v24 = 14;
        while (1)
        {
          v9 += (*(v8 - 1) - 1) << v24;
          if (((char)*(v8 - 1) & 0x80000000) == 0)
            break;
          v6 = 0;
          ++v8;
          v24 += 7;
          if (v24 == 70)
            return (google::protobuf::internal::EpsCopyInputStream *)v6;
        }
      }
      else
      {
        v8 = (unsigned __int8 *)(v6 + 2);
      }
LABEL_6:
      google::protobuf::UnknownFieldSet::AddVarint(*a2, v4, v9);
      return (google::protobuf::internal::EpsCopyInputStream *)v8;
    case 1uLL:
      v6 = (char *)(a3 + 1);
      google::protobuf::UnknownFieldSet::AddFixed64(*a2, v4, *a3);
      return (google::protobuf::internal::EpsCopyInputStream *)v6;
    case 2uLL:
      v11 = (std::string *)google::protobuf::UnknownFieldSet::AddLengthDelimited(*a2, v4);
      v12 = *v6;
      if ((v12 & 0x80) != 0)
      {
        SizeFallback = google::protobuf::internal::ReadSizeFallback((google::protobuf::internal *)v6, (const char *)*v6);
        if (!SizeFallback)
          return 0;
        v13 = SizeFallback;
        v12 = v21;
      }
      else
      {
        v13 = v6 + 1;
      }
      return google::protobuf::internal::EpsCopyInputStream::ReadString((uint64_t)a4, v13, v12, v11);
    case 3uLL:
      v28 = google::protobuf::UnknownFieldSet::AddGroup(*a2, v4);
      v14 = a4[11].i32[0];
      v15 = __OFSUB__(v14--, 1);
      a4[11].i32[0] = v14;
      if (v14 < 0 != v15)
        return 0;
      v16 = (8 * v4) | 3;
      ++a4[11].i32[1];
      v25[0] = v6;
      break;
    case 4uLL:
      LODWORD(v25[0]) = 3;
      v25[1] = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/parse_context.h";
      v26 = 758;
      memset(&__p, 0, sizeof(__p));
      std::string::append(&__p, "Can't happen");
      google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)v25);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__p.__r_.__value_.__l.__data_);
      return (google::protobuf::internal::EpsCopyInputStream *)v6;
    case 5uLL:
      v6 = (char *)a3 + 4;
      google::protobuf::UnknownFieldSet::AddFixed32(*a2, v4, *(_DWORD *)a3);
      return (google::protobuf::internal::EpsCopyInputStream *)v6;
    default:
      return 0;
  }
  while (1)
  {
    if ((google::protobuf::internal::EpsCopyInputStream::DoneWithCheck((google::protobuf::internal::EpsCopyInputStream *)a4, (const char **)v25, a4[11].i32[1]) & 1) != 0)
    {
      v6 = v25[0];
      goto LABEL_34;
    }
    v6 = v25[0] + 1;
    v17 = *v25[0];
    if (*v25[0] < 0)
    {
      v17 = v17 + (*v6 << 7) - 128;
      if (*v6 < 0)
      {
        v6 = v25[0] + 3;
        v19 = -21;
        while (1)
        {
          v17 += (*(v6 - 1) - 1) << (v19 + 35);
          if ((*(v6 - 1) & 0x80000000) == 0)
            break;
          ++v6;
          v19 += 7;
          if (!v19)
            goto LABEL_27;
        }
      }
      else
      {
        v6 = v25[0] + 2;
      }
    }
    v25[0] = v6;
    if (!v17 || (v17 & 7) == 4)
      break;
    v25[0] = (char *)google::protobuf::internal::FieldParser<google::protobuf::internal::UnknownFieldParserHelper>(v17, &v28, v6, a4);
    if (!v25[0])
    {
LABEL_27:
      v6 = 0;
      goto LABEL_34;
    }
  }
  a4[10].i32[0] = v17 - 1;
LABEL_34:
  a4[11] = vadd_s32(a4[11], (int32x2_t)0xFFFFFFFF00000001);
  v22 = a4[10].i32[0];
  a4[10].i32[0] = 0;
  if (v22 != v16)
    return 0;
  return (google::protobuf::internal::EpsCopyInputStream *)v6;
}

void sub_1888BBE58(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void **google::protobuf::internal::OnShutdownDelete<google::protobuf::UnknownFieldSet>(google::protobuf::UnknownFieldSet *)::{lambda(void const*)#1}::__invoke(void **this)
{
  void **v1;
  void *v2;

  if (this)
  {
    v1 = this;
    v2 = *this;
    if (v2 != v1[1])
    {
      google::protobuf::UnknownFieldSet::ClearFallback((google::protobuf::UnknownFieldSet *)v1);
      v2 = *v1;
    }
    if (v2)
    {
      v1[1] = v2;
      operator delete(v2);
    }
    JUMPOUT(0x18D76437CLL);
  }
  return this;
}

void std::vector<google::protobuf::UnknownField>::__throw_length_error[abi:ne180100]()
{
  std::__throw_length_error[abi:ne180100]("vector");
}

__n128 std::vector<google::protobuf::UnknownField>::__move_assign(uint64_t a1, __n128 *a2)
{
  void *v4;
  __n128 result;

  v4 = *(void **)a1;
  if (v4)
  {
    *(_QWORD *)(a1 + 8) = v4;
    operator delete(v4);
    *(_QWORD *)a1 = 0;
    *(_QWORD *)(a1 + 8) = 0;
    *(_QWORD *)(a1 + 16) = 0;
  }
  result = *a2;
  *(__n128 *)a1 = *a2;
  *(_QWORD *)(a1 + 16) = a2[1].n128_u64[0];
  a2->n128_u64[0] = 0;
  a2->n128_u64[1] = 0;
  a2[1].n128_u64[0] = 0;
  return result;
}

char *std::vector<google::protobuf::UnknownField>::__insert_with_size[abi:ne180100]<std::move_iterator<std::__wrap_iter<google::protobuf::UnknownField*>>,std::move_iterator<std::__wrap_iter<google::protobuf::UnknownField*>>>(const void **a1, uint64_t a2, __int128 *a3, __int128 *a4, uint64_t a5)
{
  char *v5;
  uint64_t v6;
  char *v7;
  __int128 *v9;
  uint64_t v11;
  _BYTE *v12;
  _BYTE *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char *v19;
  uint64_t v20;
  __int128 *v21;
  char *v22;
  __int128 *v23;
  _OWORD *v24;
  __int128 v25;
  char *v26;
  __int128 *v27;
  char *v28;
  __int128 v29;
  char *v30;
  __int128 v31;
  char *v32;
  char *v33;
  uint64_t v34;
  char *v35;
  __int128 v36;
  char *v37;
  char *v38;
  char *v39;
  char *v40;
  char *v41;
  _BYTE *v42;
  uint64_t v43;
  void *v44;

  v5 = (char *)*a1;
  v6 = a2 - (_QWORD)*a1;
  v7 = (char *)*a1 + (v6 & 0xFFFFFFFFFFFFFFF0);
  if (a5 < 1)
    return v7;
  v9 = a3;
  v13 = a1[2];
  v11 = (uint64_t)(a1 + 2);
  v12 = v13;
  v14 = *(_QWORD *)(v11 - 8);
  if (a5 <= (uint64_t)&v13[-v14] >> 4)
  {
    v20 = (uint64_t)(v14 - (_QWORD)v7) >> 4;
    if (v20 >= a5)
    {
      v21 = &a3[a5];
      v22 = *(char **)(v11 - 8);
    }
    else
    {
      v21 = &a3[v20];
      v22 = *(char **)(v11 - 8);
      if (v21 != a4)
      {
        v23 = v21;
        v24 = *(_OWORD **)(v11 - 8);
        do
        {
          v25 = *v23++;
          *v24++ = v25;
          v22 += 16;
        }
        while (v23 != a4);
      }
      a1[1] = v22;
      if ((uint64_t)(v14 - (_QWORD)v7) < 1)
        return v7;
    }
    v26 = &v7[16 * a5];
    v27 = (__int128 *)&v22[-16 * a5];
    v28 = v22;
    if ((unint64_t)v27 < v14)
    {
      v28 = v22;
      do
      {
        v29 = *v27++;
        *(_OWORD *)v28 = v29;
        v28 += 16;
      }
      while ((unint64_t)v27 < v14);
    }
    a1[1] = v28;
    if (v22 != v26)
      memmove(&v22[-16 * ((v22 - v26) >> 4)], v7, v22 - v26);
    if (v21 != v9)
    {
      v30 = v7;
      do
      {
        v31 = *v9++;
        *(_OWORD *)v30 = v31;
        v30 += 16;
      }
      while (v9 != v21);
    }
    return v7;
  }
  v15 = a5 + ((uint64_t)(v14 - (_QWORD)v5) >> 4);
  if (v15 >> 60)
    std::vector<google::protobuf::UnknownField>::__throw_length_error[abi:ne180100]();
  v16 = v6 >> 4;
  v17 = v12 - v5;
  if (v17 >> 3 > v15)
    v15 = v17 >> 3;
  if ((unint64_t)v17 >= 0x7FFFFFFFFFFFFFF0)
    v18 = 0xFFFFFFFFFFFFFFFLL;
  else
    v18 = v15;
  if (v18)
    v19 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::shared_ptr<zilch::TrafficDynamicTile::Incident>>>(v11, v18);
  else
    v19 = 0;
  v32 = &v19[16 * v16];
  v33 = &v32[16 * a5];
  v34 = 16 * a5;
  v35 = v32;
  do
  {
    v36 = *v9++;
    *(_OWORD *)v35 = v36;
    v35 += 16;
    v34 -= 16;
  }
  while (v34);
  v37 = (char *)*a1;
  v38 = v32;
  if (*a1 != v7)
  {
    v39 = v7;
    v40 = v32;
    do
    {
      v38 = v40 - 16;
      *((_OWORD *)v40 - 1) = *((_OWORD *)v39 - 1);
      v39 -= 16;
      v40 -= 16;
    }
    while (v39 != v37);
  }
  v41 = &v19[16 * v18];
  v42 = a1[1];
  v43 = v42 - v7;
  if (v42 != v7)
    memmove(v33, v7, v42 - v7);
  v44 = (void *)*a1;
  *a1 = v38;
  a1[1] = &v33[v43];
  a1[2] = v41;
  if (v44)
    operator delete(v44);
  return v32;
}

BOOL google::protobuf::internal::WireFormat::SkipField(google::protobuf::internal::WireFormat *this, google::protobuf::io::CodedInputStream *a2, google::protobuf::UnknownFieldSet *a3, google::protobuf::UnknownFieldSet *a4)
{
  uint64_t v4;
  int v6;
  unsigned int v9;
  char *v10;
  unint64_t Varint64Fallback;
  unint64_t *v12;
  char *v13;
  uint64_t Varint32Fallback;
  int v15;
  BOOL v16;
  google::protobuf::io::CodedInputStream *v17;
  unsigned int *v18;
  char v19;
  int v20;
  std::string *v21;
  int v22;
  unsigned int v23;
  unint64_t v24;

  if (a2 < 8)
    return 0;
  v6 = (int)a2;
  v4 = 0;
  v9 = a2 >> 3;
  switch(a2 & 7)
  {
    case 0:
      v10 = *(char **)this;
      if (*(_QWORD *)this >= *((_QWORD *)this + 1) || *v10 < 0)
      {
        Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this);
        v4 = v19 & 1;
        if (!a3)
          return v4;
      }
      else
      {
        Varint64Fallback = *v10;
        *(_QWORD *)this = v10 + 1;
        v4 = 1;
        if (!a3)
          return v4;
      }
      if ((_DWORD)v4)
      {
        google::protobuf::UnknownFieldSet::AddVarint(a3, v9, Varint64Fallback);
        return 1;
      }
      return v4;
    case 1:
      v24 = 0;
      v12 = *(unint64_t **)this;
      if ((int)(*((_DWORD *)this + 2) - *(_QWORD *)this) < 8)
      {
        v4 = google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback((unint64_t **)this, &v24);
        if (!a3)
          return v4;
      }
      else
      {
        v24 = *v12;
        *(_QWORD *)this = v12 + 1;
        v4 = 1;
        if (!a3)
          return v4;
      }
      if ((_DWORD)v4)
        google::protobuf::UnknownFieldSet::AddFixed64(a3, v9, v24);
      return v4;
    case 2:
      v13 = *(char **)this;
      if (*(_QWORD *)this >= *((_QWORD *)this + 1))
      {
        LODWORD(Varint32Fallback) = 0;
      }
      else
      {
        Varint32Fallback = *v13;
        if ((*v13 & 0x80000000) == 0)
        {
          *(_QWORD *)this = v13 + 1;
          goto LABEL_35;
        }
      }
      Varint32Fallback = google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, Varint32Fallback);
      if (Varint32Fallback < 0)
        return 0;
LABEL_35:
      if (a3)
      {
        v21 = (std::string *)google::protobuf::UnknownFieldSet::AddLengthDelimited(a3, v9);
        if (!google::protobuf::io::CodedInputStream::ReadString(this, v21, Varint32Fallback))
          return 0;
      }
      else
      {
        if ((Varint32Fallback & 0x80000000) != 0)
          return 0;
        v22 = *((_DWORD *)this + 2) - *(_QWORD *)this;
        if ((int)Varint32Fallback <= v22)
        {
          *(_QWORD *)this += Varint32Fallback;
        }
        else if ((google::protobuf::io::CodedInputStream::SkipFallback(this, Varint32Fallback, v22) & 1) == 0)
        {
          return 0;
        }
      }
      return 1;
    case 3:
      v15 = *((_DWORD *)this + 13);
      v16 = __OFSUB__(v15--, 1);
      *((_DWORD *)this + 13) = v15;
      if (v15 < 0 != v16)
        return 0;
      v17 = a3
          ? (google::protobuf::io::CodedInputStream *)google::protobuf::UnknownFieldSet::AddGroup(a3, a2 >> 3): 0;
      if (!google::protobuf::internal::WireFormat::SkipMessage(this, v17, a3))
        return 0;
      v20 = *((_DWORD *)this + 13);
      if (v20 < *((_DWORD *)this + 14))
        *((_DWORD *)this + 13) = v20 + 1;
      return *((_DWORD *)this + 8) == (v6 & 0xFFFFFFF8 | 4);
    case 5:
      v23 = 0;
      v18 = *(unsigned int **)this;
      if ((int)(*((_DWORD *)this + 2) - *(_QWORD *)this) < 4)
      {
        v4 = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)this, &v23);
        if (!a3)
          return v4;
      }
      else
      {
        v23 = *v18;
        *(_QWORD *)this = v18 + 1;
        v4 = 1;
        if (!a3)
          return v4;
      }
      if ((_DWORD)v4)
        google::protobuf::UnknownFieldSet::AddFixed32(a3, v9, v23);
      break;
    default:
      return v4;
  }
  return v4;
}

uint64_t google::protobuf::internal::WireFormat::SkipMessage(char **this, google::protobuf::io::CodedInputStream *a2, google::protobuf::UnknownFieldSet *a3, google::protobuf::UnknownFieldSet *a4)
{
  char *v6;
  unint64_t TagFallback;
  BOOL v8;
  uint64_t v9;

  do
  {
    v6 = *this;
    if (*this >= this[1])
    {
      TagFallback = 0;
    }
    else
    {
      TagFallback = *v6;
      if ((*v6 & 0x80000000) == 0)
      {
        *this = v6 + 1;
        goto LABEL_6;
      }
    }
    TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)this, TagFallback);
LABEL_6:
    *((_DWORD *)this + 8) = TagFallback;
    if ((_DWORD)TagFallback)
      v8 = (TagFallback & 7) == 4;
    else
      v8 = 1;
    v9 = v8;
  }
  while (!v8
       && google::protobuf::internal::WireFormat::SkipField((google::protobuf::internal::WireFormat *)this, (google::protobuf::io::CodedInputStream *)TagFallback, a2, a4));
  return v9;
}

const google::protobuf::UnknownFieldSet *google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray(google::protobuf::internal::WireFormat *this, const google::protobuf::UnknownFieldSet *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  uint64_t v5;
  uint64_t v8;
  int *v9;
  unint64_t v10;
  unsigned int v11;
  unsigned __int8 *v12;
  int v13;
  int v14;
  unsigned int v15;
  char *v16;
  int v17;
  uint64_t v18;
  unsigned int v19;
  char *v20;
  int v21;
  _QWORD *v22;
  int64_t v23;
  int v24;
  unsigned int v25;
  const google::protobuf::UnknownFieldSet *v26;
  unsigned int v27;
  unsigned int v28;
  unsigned int v29;
  unsigned int v30;
  unsigned int v31;
  uint64_t v32;
  unsigned int v33;
  _BYTE *v34;
  unsigned int v35;
  unsigned int v36;
  unsigned int v37;
  unint64_t v38;
  unsigned int v39;
  unsigned int v40;
  unsigned int v41;
  unsigned int v42;
  unsigned int v43;
  unsigned int v44;
  int v45;
  unsigned int v46;
  unsigned int v47;
  unint64_t v48;
  unint64_t v49;
  unsigned int v50;
  unsigned int v51;
  unsigned int v52;
  unsigned int v53;
  char *v54;

  v5 = *(_QWORD *)this;
  if ((int)((*((_QWORD *)this + 1) - *(_QWORD *)this) >> 4) >= 1)
  {
    v8 = 0;
    while (1)
    {
      if (*(_QWORD *)a3 <= (unint64_t)a2)
        a2 = (const google::protobuf::UnknownFieldSet *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, (unsigned __int8 *)a2);
      v9 = (int *)(v5 + 16 * v8);
      switch(v9[1])
      {
        case 0:
          v10 = *(_QWORD *)(v5 + 16 * v8 + 8);
          v11 = 8 * *v9;
          if (v11 > 0x7F)
          {
            *(_BYTE *)a2 = v11 | 0x80;
            v27 = v11 >> 7;
            if (v11 >> 14)
            {
              v12 = (unsigned __int8 *)a2 + 2;
              do
              {
                *(v12 - 1) = v27 | 0x80;
                v36 = v27 >> 7;
                ++v12;
                v37 = v27 >> 14;
                v27 >>= 7;
              }
              while (v37);
              *(v12 - 1) = v36;
            }
            else
            {
              *((_BYTE *)a2 + 1) = v27;
              v12 = (unsigned __int8 *)a2 + 2;
            }
          }
          else
          {
            *(_BYTE *)a2 = v11;
            v12 = (unsigned __int8 *)a2 + 1;
          }
          if (v10 > 0x7F)
          {
            *v12 = v10 | 0x80;
            v38 = v10 >> 7;
            if (!(v10 >> 14))
            {
              v12[1] = v38;
              goto LABEL_63;
            }
            a2 = (const google::protobuf::UnknownFieldSet *)(v12 + 2);
            do
            {
              *((_BYTE *)a2 - 1) = v38 | 0x80;
              v48 = v38 >> 7;
              a2 = (const google::protobuf::UnknownFieldSet *)((char *)a2 + 1);
              v49 = v38 >> 14;
              v38 >>= 7;
            }
            while (v49);
            *((_BYTE *)a2 - 1) = v48;
          }
          else
          {
            *v12 = v10;
            a2 = (const google::protobuf::UnknownFieldSet *)(v12 + 1);
          }
          goto LABEL_76;
        case 1:
          v13 = *v9;
          v14 = *(_DWORD *)(v5 + 16 * v8 + 8);
          v15 = (8 * *v9) | 5;
          if (v15 > 0x7F)
          {
            *(_BYTE *)a2 = (8 * *(_BYTE *)v9) | 0x85;
            v28 = (8 * v13) >> 7;
            if (v15 >> 14)
            {
              v16 = (char *)a2 + 2;
              do
              {
                *(v16 - 1) = v28 | 0x80;
                v39 = v28 >> 7;
                ++v16;
                v40 = v28 >> 14;
                v28 >>= 7;
              }
              while (v40);
              *(v16 - 1) = v39;
            }
            else
            {
              *((_BYTE *)a2 + 1) = v28;
              v16 = (char *)a2 + 2;
            }
          }
          else
          {
            *(_BYTE *)a2 = v15;
            v16 = (char *)a2 + 1;
          }
          *(_DWORD *)v16 = v14;
          a2 = (const google::protobuf::UnknownFieldSet *)(v16 + 4);
          goto LABEL_76;
        case 2:
          v17 = *v9;
          v18 = *(_QWORD *)(v5 + 16 * v8 + 8);
          v19 = (8 * *v9) | 1;
          if (v19 > 0x7F)
          {
            *(_BYTE *)a2 = (8 * *(_BYTE *)v9) | 0x81;
            v29 = (8 * v17) >> 7;
            if (v19 >> 14)
            {
              v20 = (char *)a2 + 2;
              do
              {
                *(v20 - 1) = v29 | 0x80;
                v41 = v29 >> 7;
                ++v20;
                v42 = v29 >> 14;
                v29 >>= 7;
              }
              while (v42);
              *(v20 - 1) = v41;
            }
            else
            {
              *((_BYTE *)a2 + 1) = v29;
              v20 = (char *)a2 + 2;
            }
          }
          else
          {
            *(_BYTE *)a2 = v19;
            v20 = (char *)a2 + 1;
          }
          *(_QWORD *)v20 = v18;
          a2 = (const google::protobuf::UnknownFieldSet *)(v20 + 8);
          goto LABEL_76;
        case 3:
          v21 = *v9;
          v22 = *(_QWORD **)(v5 + 16 * v8 + 8);
          if (*((char *)v22 + 23) < 0)
          {
            v23 = v22[1];
            if (v23 > 127)
              goto LABEL_78;
          }
          else
          {
            v23 = *((unsigned __int8 *)v22 + 23);
          }
          v31 = 8 * v21;
          if ((8 * v21) >> 28)
            v32 = 5;
          else
            v32 = 4;
          if (v31 < 0x200000)
            v32 = 3;
          if (v31 < 0x4000)
            v32 = 2;
          if (v31 < 0x80)
            v32 = 1;
          if ((uint64_t)(*(_QWORD *)a3 + ~((unint64_t)a2 + v32) + 16) >= v23)
          {
            v33 = v31 | 2;
            if ((v31 | 2) > 0x7F)
            {
              *(_BYTE *)a2 = v31 | 0x82;
              v35 = v31 >> 7;
              if (v33 >> 14)
              {
                v34 = (char *)a2 + 2;
                do
                {
                  *(v34 - 1) = v35 | 0x80;
                  v52 = v35 >> 7;
                  ++v34;
                  v53 = v35 >> 14;
                  v35 >>= 7;
                }
                while (v53);
                *(v34 - 1) = v52;
              }
              else
              {
                *((_BYTE *)a2 + 1) = v35;
                v34 = (char *)a2 + 2;
              }
            }
            else
            {
              *(_BYTE *)a2 = v33;
              v34 = (char *)a2 + 1;
            }
            *v34 = v23;
            v54 = v34 + 1;
            if (*((char *)v22 + 23) < 0)
              v22 = (_QWORD *)*v22;
            memcpy(v54, v22, v23);
            a2 = (const google::protobuf::UnknownFieldSet *)&v54[v23];
            goto LABEL_76;
          }
LABEL_78:
          a2 = (const google::protobuf::UnknownFieldSet *)google::protobuf::io::EpsCopyOutputStream::WriteStringOutline(a3, v21, (uint64_t)v22, (unsigned __int8 *)a2);
LABEL_76:
          ++v8;
          v5 = *(_QWORD *)this;
          if (v8 >= (int)((*((_QWORD *)this + 1) - *(_QWORD *)this) >> 4))
            return a2;
          break;
        case 4:
          v24 = *v9;
          v25 = (8 * *v9) | 3;
          if (v25 > 0x7F)
          {
            *(_BYTE *)a2 = (8 * *(_BYTE *)v9) | 0x83;
            v30 = (8 * v24) >> 7;
            if (v25 >> 14)
            {
              v26 = (const google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
              do
              {
                *((_BYTE *)v26 - 1) = v30 | 0x80;
                v43 = v30 >> 7;
                v26 = (const google::protobuf::UnknownFieldSet *)((char *)v26 + 1);
                v44 = v30 >> 14;
                v30 >>= 7;
              }
              while (v44);
              *((_BYTE *)v26 - 1) = v43;
            }
            else
            {
              *((_BYTE *)a2 + 1) = v30;
              v26 = (const google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
            }
          }
          else
          {
            *(_BYTE *)a2 = v25;
            v26 = (const google::protobuf::UnknownFieldSet *)((char *)a2 + 1);
          }
          v12 = (unsigned __int8 *)google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray(*(google::protobuf::internal::WireFormat **)(v5 + 16 * v8 + 8), v26, (unsigned __int8 *)a3, a4);
          if (*(_QWORD *)a3 <= (unint64_t)v12)
            v12 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v12);
          v45 = *v9;
          v46 = (8 * *v9) | 4;
          if (v46 > 0x7F)
          {
            *v12 = (8 * *(_BYTE *)v9) | 0x84;
            v47 = (8 * v45) >> 7;
            if (v46 >> 14)
            {
              a2 = (const google::protobuf::UnknownFieldSet *)(v12 + 2);
              do
              {
                *((_BYTE *)a2 - 1) = v47 | 0x80;
                v50 = v47 >> 7;
                a2 = (const google::protobuf::UnknownFieldSet *)((char *)a2 + 1);
                v51 = v47 >> 14;
                v47 >>= 7;
              }
              while (v51);
              *((_BYTE *)a2 - 1) = v50;
            }
            else
            {
              v12[1] = v47;
LABEL_63:
              a2 = (const google::protobuf::UnknownFieldSet *)(v12 + 2);
            }
          }
          else
          {
            *v12 = v46;
            a2 = (const google::protobuf::UnknownFieldSet *)(v12 + 1);
          }
          goto LABEL_76;
        default:
          goto LABEL_76;
      }
    }
  }
  return a2;
}

uint64_t google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(google::protobuf::internal::WireFormat *this, const google::protobuf::UnknownFieldSet *a2)
{
  int *v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;

  v2 = *(int **)this;
  v3 = *((_QWORD *)this + 1) - *(_QWORD *)this;
  if ((int)(v3 >> 4) >= 1)
  {
    v4 = 0;
    v5 = (v3 >> 4);
    while (2)
    {
      switch(v2[1])
      {
        case 0:
          v6 = (9 * (__clz((8 * *v2) | 1) ^ 0x1F) + 73) >> 6;
          v7 = v4 + ((9 * (__clz(*((_QWORD *)v2 + 1) | 1) ^ 0x3F) + 73) >> 6);
          goto LABEL_12;
        case 1:
          v4 += ((9 * (__clz((8 * *v2) | 5) ^ 0x1F) + 73) >> 6) + 4;
          goto LABEL_13;
        case 2:
          v4 += ((9 * (__clz((8 * *v2) | 1) ^ 0x1F) + 73) >> 6) + 8;
          goto LABEL_13;
        case 3:
          v8 = *((_QWORD *)v2 + 1);
          v6 = *(unsigned __int8 *)(v8 + 23);
          if ((*(char *)(v8 + 23) & 0x80000000) == 0)
          {
            LODWORD(v9) = *(unsigned __int8 *)(v8 + 23);
            if ((v6 & 0x80) == 0)
              goto LABEL_10;
LABEL_9:
            v6 = *(_QWORD *)(v8 + 8);
            goto LABEL_10;
          }
          v9 = *(_QWORD *)(v8 + 8);
          if ((v6 & 0x80) != 0)
            goto LABEL_9;
LABEL_10:
          v7 = v4 + ((9 * (__clz((8 * *v2) | 3) ^ 0x1F) + 73) >> 6) + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
LABEL_12:
          v4 = v7 + v6;
LABEL_13:
          v2 += 4;
          if (!--v5)
            return v4;
          continue;
        case 4:
          v10 = *v2;
          v11 = (9 * (__clz((8 * *v2) | 3) ^ 0x1F) + 73) >> 6;
          v12 = google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(*((google::protobuf::internal::WireFormat **)v2 + 1), a2);
          v6 = (9 * (__clz((8 * v10) | 5) ^ 0x1F) + 73) >> 6;
          v7 = v12 + v4 + v11;
          goto LABEL_12;
        default:
          goto LABEL_13;
      }
    }
  }
  return 0;
}

char *google::protobuf::internal::WireFormat::_InternalParse(google::protobuf::Message *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  google::protobuf::Message *v7;
  google::protobuf::Message *v8;
  char *result;
  char *v10;
  unsigned int v11;
  int v12;
  BOOL v13;
  signed int v14;
  google::protobuf::FieldDescriptor *FieldByNumber;
  uint64_t v16;
  signed int *v17;
  uint64_t v18;
  std::mutex **v19;
  const google::protobuf::Descriptor *v20;
  char v21;
  google::protobuf::Message *v22[3];
  char *v23;

  v23 = a2;
  v6 = (*(uint64_t (**)(google::protobuf::Message *))(*(_QWORD *)a1 + 152))(a1);
  (*(void (**)(google::protobuf::Message *))(*(_QWORD *)a1 + 152))(a1);
  v8 = v7;
  if (!*(_BYTE *)(*(_QWORD *)(v6 + 32) + 72))
  {
    while (1)
    {
      v21 = google::protobuf::internal::EpsCopyInputStream::DoneWithCheck((google::protobuf::internal::EpsCopyInputStream *)a3, (const char **)&v23, *(_DWORD *)(a3 + 92));
      result = v23;
      if ((v21 & 1) != 0)
        return result;
      v10 = v23 + 1;
      v11 = *v23;
      if (*v23 < 0)
      {
        v12 = *v10;
        v11 = v11 + (v12 << 7) - 128;
        if (v12 < 0)
        {
          v10 = v23 + 3;
          v18 = -21;
          while (1)
          {
            v11 += (*(v10 - 1) - 1) << (v18 + 35);
            if ((*(v10 - 1) & 0x80000000) == 0)
              break;
            result = 0;
            ++v10;
            v18 += 7;
            if (!v18)
              return result;
          }
        }
        else
        {
          v10 = v23 + 2;
        }
      }
      v23 = v10;
      if (v11)
        v13 = (v11 & 7) == 4;
      else
        v13 = 1;
      if (v13)
      {
        *(_DWORD *)(a3 + 80) = v11 - 1;
        return v10;
      }
      v14 = v11 >> 3;
      FieldByNumber = (google::protobuf::FieldDescriptor *)google::protobuf::Descriptor::FindFieldByNumber((google::protobuf::Descriptor *)v6, v11 >> 3);
      if (!FieldByNumber)
      {
        v16 = *(unsigned int *)(v6 + 124);
        if ((int)v16 >= 1)
        {
          v17 = (signed int *)(*(_QWORD *)(v6 + 72) + 4);
          while (*(v17 - 1) > v14 || *v17 <= v14)
          {
            v17 += 4;
            if (!--v16)
              goto LABEL_16;
          }
          v19 = *(std::mutex ***)(a3 + 96);
          if (v19)
          {
            v20 = (const google::protobuf::Descriptor *)v6;
LABEL_27:
            FieldByNumber = (google::protobuf::FieldDescriptor *)google::protobuf::DescriptorPool::FindExtensionByNumber(v19, v20, v11 >> 3);
            goto LABEL_17;
          }
          if (*((_DWORD *)v8 + 10) != -1)
          {
            v19 = (std::mutex **)*((_QWORD *)v8 + 7);
            v20 = *(const google::protobuf::Descriptor **)v8;
            goto LABEL_27;
          }
        }
LABEL_16:
        FieldByNumber = 0;
      }
LABEL_17:
      result = (char *)google::protobuf::internal::WireFormat::_InternalParseAndMergeField(a1, (unsigned __int8 *)v23, (int32x2_t *)a3, v11, v8, FieldByNumber);
      v23 = result;
      if (!result)
        return result;
    }
  }
  v22[0] = a1;
  v22[1] = (google::protobuf::Message *)v6;
  v22[2] = v7;
  return google::protobuf::internal::WireFormat::MessageSetParser::ParseMessageSet(v22, a2, (int32x2_t *)a3);
}

char *google::protobuf::internal::WireFormat::MessageSetParser::ParseMessageSet(google::protobuf::Message **a1, char *a2, int32x2_t *this)
{
  char *result;
  unsigned int v6;
  BOOL v7;
  int v8;
  BOOL v9;
  uint64_t v10;
  char v11;
  int v12;
  uint64_t *v13;
  char v14;
  char *v15;
  char *v16;
  unsigned int v17;
  int v18;
  unsigned int v19;
  unsigned int v20;
  BOOL v21;
  uint64_t v23;
  std::mutex **v24;
  google::protobuf::FieldDescriptor *v25;
  google::protobuf::Message *v26;
  uint64_t v27;
  _DWORD *v28;
  google::protobuf::FieldDescriptor *v29;
  unsigned __int8 *v30;
  BOOL v31;
  int v32;
  std::string::value_type *v33;
  google::protobuf::Message *v34;
  google::protobuf::FieldDescriptor *v35;
  const char *v36;
  google::protobuf::_anonymous_namespace_ **v37;
  google::protobuf::Message *v38;
  google::protobuf::MessageFactory *v39;
  uint64_t v40;
  google::protobuf::UnknownFieldSet *v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  char *SizeFallback;
  int v47;
  std::mutex **v48;
  uint64_t v49;
  uint64_t v50;
  google::protobuf::Message *v51;
  uint64_t v52;
  int v53;
  unsigned int v54;
  google::protobuf::Message *v55;
  uint64_t v56;
  uint64_t v57;
  _DWORD *v58;
  google::protobuf::FieldDescriptor *v59;
  uint64_t v60;
  std::mutex **v61;
  uint64_t ExtensionByNumber;
  google::protobuf::Message *v63;
  __int32 v64;
  char *v65;
  uint64_t v66;
  _QWORD v67[2];
  std::string __p;
  char *v69;
  std::string *v70[10];
  int v71;
  __int128 v72;
  uint64_t v73;

  v73 = *MEMORY[0x1E0C80C00];
  v65 = a2;
  do
  {
    if ((google::protobuf::internal::EpsCopyInputStream::DoneWithCheck((google::protobuf::internal::EpsCopyInputStream *)this, (const char **)&v65, this[11].i32[1]) & 1) != 0)return v65;
    result = v65 + 1;
    v6 = *v65;
    if (*v65 < 0)
    {
      v6 = v6 + (*result << 7) - 128;
      if (*result < 0)
      {
        result = v65 + 3;
        v60 = -21;
        while (1)
        {
          v6 += (*(result - 1) - 1) << (v60 + 35);
          if ((*(result - 1) & 0x80000000) == 0)
            break;
          ++result;
          v60 += 7;
          if (!v60)
            return 0;
        }
      }
      else
      {
        result = v65 + 2;
      }
    }
    v65 = result;
    if (v6)
      v7 = (v6 & 7) == 4;
    else
      v7 = 1;
    if (v7)
    {
      this[10].i32[0] = v6 - 1;
      return result;
    }
    if (v6 != 11)
    {
      v55 = a1[1];
      v56 = *((unsigned int *)v55 + 31);
      if ((int)v56 >= 1)
      {
        v57 = v6 >> 3;
        v58 = (_DWORD *)(*((_QWORD *)v55 + 9) + 4);
        while (*(v58 - 1) > (int)v57 || *v58 <= (int)v57)
        {
          v58 += 4;
          if (!--v56)
            goto LABEL_86;
        }
        v61 = (std::mutex **)this[12];
        if (v61)
        {
          ExtensionByNumber = google::protobuf::DescriptorPool::FindExtensionByNumber(v61, v55, v57);
LABEL_97:
          v59 = (google::protobuf::FieldDescriptor *)ExtensionByNumber;
          goto LABEL_87;
        }
        v63 = a1[2];
        if (*((_DWORD *)v63 + 10) != -1)
        {
          ExtensionByNumber = google::protobuf::DescriptorPool::FindExtensionByNumber(*((std::mutex ***)v63 + 7), *(const google::protobuf::Descriptor **)v63, v57);
          goto LABEL_97;
        }
      }
LABEL_86:
      v59 = 0;
LABEL_87:
      v15 = (char *)google::protobuf::internal::WireFormat::_InternalParseAndMergeField(*a1, (unsigned __int8 *)v65, this, v6, a1[2], v59);
      goto LABEL_102;
    }
    v8 = this[11].i32[0];
    v9 = __OFSUB__(v8--, 1);
    this[11].i32[0] = v8;
    if (v8 < 0 != v9)
      return 0;
    v10 = 0;
    v11 = 0;
    v12 = this[11].i32[1] + 1;
    this[11].i32[1] = v12;
    v69 = result;
    v13 = (uint64_t *)((char *)*a1 + *((unsigned int *)a1[2] + 9));
    memset(&__p, 0, sizeof(__p));
    while (1)
    {
      v14 = google::protobuf::internal::EpsCopyInputStream::DoneWithCheck((google::protobuf::internal::EpsCopyInputStream *)this, (const char **)&v69, v12);
      v15 = v69;
      if ((v14 & 1) != 0)
        break;
      v16 = ++v69;
      v17 = *v15;
      if (v17 == 26)
      {
        if (!(_DWORD)v10)
        {
          v32 = *v16;
          if (*v16 < 0)
          {
            SizeFallback = google::protobuf::internal::ReadSizeFallback((google::protobuf::internal *)(v15 + 1), (const char *)*v16);
            v69 = SizeFallback;
            if (!SizeFallback)
              goto LABEL_88;
            v33 = SizeFallback;
            v32 = v47;
          }
          else
          {
            v33 = v15 + 2;
            v69 = v15 + 2;
          }
          v69 = (char *)google::protobuf::internal::EpsCopyInputStream::ReadString((uint64_t)this, v33, v32, &__p);
          if (!v69)
          {
LABEL_88:
            v15 = 0;
            break;
          }
          goto LABEL_70;
        }
        v26 = a1[1];
        v27 = *((unsigned int *)v26 + 31);
        if ((int)v27 < 1)
          goto LABEL_33;
        v28 = (_DWORD *)(*((_QWORD *)v26 + 9) + 4);
        while (*(v28 - 1) > (int)v10 || *v28 <= (int)v10)
        {
          v28 += 4;
          if (!--v27)
            goto LABEL_33;
        }
        v48 = (std::mutex **)this[12];
        if (v48)
        {
          v49 = google::protobuf::DescriptorPool::FindExtensionByNumber(v48, v26, v10);
          goto LABEL_74;
        }
        v51 = a1[2];
        if (*((_DWORD *)v51 + 10) == -1)
        {
LABEL_33:
          v29 = 0;
        }
        else
        {
          v49 = google::protobuf::DescriptorPool::FindExtensionByNumber(*((std::mutex ***)v51 + 7), *(const google::protobuf::Descriptor **)v51, v10);
LABEL_74:
          v29 = (google::protobuf::FieldDescriptor *)v49;
        }
        v30 = google::protobuf::internal::WireFormat::_InternalParseAndMergeField(*a1, (unsigned __int8 *)v69, this, (8 * v10) | 2, a1[2], v29);
        v10 = 0;
        goto LABEL_43;
      }
      if (v17 == 16)
      {
        v18 = *(unsigned __int16 *)v16;
        v19 = v18 + (char)v18;
        v20 = v19 & (2 * (char)v18);
        v10 = v20 >> 1;
        if ((v20 & 0x8000) != 0)
        {
          v16 = v15 + 3;
          v52 = 13;
          while (1)
          {
            v53 = *(unsigned __int16 *)v16;
            v54 = v53 + (char)v53;
            v10 += ((v54 & (2 * (char)v53)) - 2) << v52;
            if (((unsigned __int16)v54 & (unsigned __int16)(2 * (char)v53) & 0x8000) == 0)
              break;
            v52 += 14;
            v16 += 2;
            if (v52 == 69)
            {
              v15 = 0;
              v69 = 0;
              goto LABEL_99;
            }
          }
          v21 = v54 >= (char)v53;
        }
        else
        {
          v21 = v19 >= (char)v18;
        }
        if (!v21)
          v23 = 2;
        else
          v23 = 1;
        v69 = &v16[v23];
        if ((v11 & 1) == 0)
        {
          v11 = 0;
          goto LABEL_71;
        }
        v24 = (std::mutex **)this[12];
        if (v24)
        {
          v25 = (google::protobuf::FieldDescriptor *)google::protobuf::DescriptorPool::FindExtensionByNumber(v24, a1[1], v10);
LABEL_50:
          v35 = v25;
          if (v25 && google::protobuf::FieldDescriptor::message_type(v25))
          {
            v37 = (google::protobuf::_anonymous_namespace_ **)a1[2];
            v38 = *a1;
            v39 = (google::protobuf::MessageFactory *)this[13];
            if (*((_DWORD *)v35 + 15) == 3)
              v40 = google::protobuf::Reflection::AddMessage(v37, v38, (unint64_t **)v35, v39, v36);
            else
              v40 = google::protobuf::Reflection::MutableMessage(v37, v38, v35, v39, v36);
            v50 = v40;
            v66 = 0;
            google::protobuf::internal::ParseContext::ParseContext<std::string &>((uint64_t)v70, this[11].i32[0], 0, &v66, (uint64_t *)&__p);
            v72 = *(_OWORD *)this[12].i8;
            if (!(*(uint64_t (**)(uint64_t, uint64_t, std::string **))(*(_QWORD *)v50 + 88))(v50, v66, v70)
              || v71)
            {
              goto LABEL_88;
            }
            goto LABEL_70;
          }
        }
        else
        {
          v34 = a1[2];
          if (*((_DWORD *)v34 + 10) != -1)
          {
            v25 = (google::protobuf::FieldDescriptor *)google::protobuf::DescriptorPool::FindExtensionByNumber(*((std::mutex ***)v34 + 7), *(const google::protobuf::Descriptor **)v34, v10);
            goto LABEL_50;
          }
        }
        google::protobuf::StringPiece::StringPiece<std::allocator<char>>(v67, (uint64_t *)&__p, v16);
        if ((*v13 & 1) != 0)
          v41 = (google::protobuf::UnknownFieldSet *)((*v13 & 0xFFFFFFFFFFFFFFFELL) + 8);
        else
          v41 = (google::protobuf::UnknownFieldSet *)google::protobuf::internal::InternalMetadata::mutable_unknown_fields_slow<google::protobuf::UnknownFieldSet>(v13);
        v42 = v67[0];
        v43 = v67[1];
        v44 = google::protobuf::UnknownFieldSet::AddLengthDelimited(v41, v10);
        MEMORY[0x18D7640B8](v44, v42, v43);
LABEL_70:
        v10 = 0;
        v11 = 1;
        goto LABEL_71;
      }
      if ((v17 & 0x80) != 0)
      {
        v17 = v17 + (*v16 << 7) - 128;
        if (*v16 < 0)
        {
          v16 = v15 + 3;
          v45 = -21;
          while (1)
          {
            v17 += (*(v16 - 1) - 1) << (v45 + 35);
            if ((*(v16 - 1) & 0x80000000) == 0)
              break;
            ++v16;
            v45 += 7;
            if (!v45)
            {
              v16 = 0;
              v17 = 0;
              v69 = 0;
              goto LABEL_98;
            }
          }
        }
        else
        {
          v16 = v15 + 2;
        }
      }
      v69 = v16;
      if (v17)
        v31 = (v17 & 7) == 4;
      else
        v31 = 1;
      if (v31)
      {
LABEL_98:
        this[10].i32[0] = v17 - 1;
        v15 = v16;
        break;
      }
      v70[0] = 0;
      v30 = google::protobuf::internal::FieldParser<google::protobuf::internal::UnknownFieldLiteParserHelper>(v17, v70, (google::protobuf::internal *)v16, (google::protobuf::internal::EpsCopyInputStream *)this);
LABEL_43:
      v69 = (char *)v30;
      if (!v30)
        goto LABEL_88;
LABEL_71:
      v12 = this[11].i32[1];
    }
LABEL_99:
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
    this[11] = vadd_s32(this[11], (int32x2_t)0xFFFFFFFF00000001);
    v64 = this[10].i32[0];
    this[10].i32[0] = 0;
    if (v64 != 11)
      break;
LABEL_102:
    v65 = v15;
  }
  while (v15);
  return 0;
}

void sub_1888BD238(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (a19 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

unsigned __int8 *google::protobuf::internal::WireFormat::_InternalParseAndMergeField(google::protobuf::Message *a1, unsigned __int8 *a2, int32x2_t *a3, uint64_t a4, google::protobuf::Reflection *this, google::protobuf::FieldDescriptor *a6)
{
  int v11;
  unint64_t *v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  int v17;
  std::string::value_type *v18;
  uint64_t *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t *v23;
  unint64_t *v24;
  unint64_t v25;
  unint64_t *v26;
  unint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  google::protobuf::internal *v31;
  double v32;
  float v33;
  int v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  int v38;
  int data;
  int v40;
  int v41;
  const char *v42;
  google::protobuf::MessageFactory *v43;
  uint64_t v44;
  google::protobuf::MessageFactory *v45;
  uint64_t v46;
  const char *v47;
  int VarintZigZag32;
  unint64_t VarintZigZag64;
  unsigned __int8 *SizeFallback;
  int v51;
  const char *v52;
  google::protobuf::internal *v53;
  int v54;
  BOOL v55;
  uint64_t v56;
  __int32 v57;
  uint64_t *v59;
  uint64_t *v60;
  uint64_t *v61;
  uint64_t *v62;
  uint64_t *v63;
  google::protobuf::internal *v64;
  uint64_t *v65;
  uint64_t *v66;
  uint64_t *v67;
  uint64_t *v68;
  uint64_t *v69;
  uint64_t *v70;
  uint64_t *v71;
  uint64_t *v72;
  uint64_t *v73;
  std::string *v74;
  std::string v75;
  std::string v76;
  std::string v77;
  std::string __p;
  __int128 v79;
  google::protobuf::Reflection *v80;
  google::protobuf::Message *v81;
  google::protobuf::internal *v82;
  google::protobuf::FieldDescriptor *v83;
  void (*v84)(google::protobuf::FieldDescriptor *, const google::protobuf::FieldDescriptor *, const char *);
  std::string *v85;

  v82 = (google::protobuf::internal *)a2;
  if (!a6)
  {
    v20 = (uint64_t *)((char *)a1 + *((unsigned int *)this + 9));
    if ((*v20 & 1) != 0)
      v21 = (*v20 & 0xFFFFFFFFFFFFFFFELL) + 8;
    else
      v21 = google::protobuf::internal::InternalMetadata::mutable_unknown_fields_slow<google::protobuf::UnknownFieldSet>(v20);
    v77.__r_.__value_.__r.__words[0] = v21;
    v22 = a4;
    v23 = (uint64_t *)a2;
    return (unsigned __int8 *)google::protobuf::internal::FieldParser<google::protobuf::internal::UnknownFieldParserHelper>(v22, (google::protobuf::UnknownFieldSet **)&v77, v23, a3);
  }
  v11 = a4 & 7;
  v12 = (unint64_t *)*((_QWORD *)a6 + 6);
  if (v12)
  {
    v83 = a6;
    v84 = google::protobuf::FieldDescriptor::TypeOnceInit;
    v13 = atomic_load(v12);
    if (v13 != -1)
    {
      v77.__r_.__value_.__r.__words[0] = (std::string::size_type)&v84;
      v77.__r_.__value_.__l.__size_ = (std::string::size_type)&v83;
      v85 = &v77;
      std::__call_once(v12, &v85, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  v14 = *((unsigned int *)a6 + 14);
  if (v11 != google::protobuf::internal::WireFormatLite::kWireTypeForFieldType[v14])
  {
    if (*((_DWORD *)a6 + 15) == 3)
    {
      v24 = (unint64_t *)*((_QWORD *)a6 + 6);
      if (v24)
      {
        v83 = a6;
        v84 = google::protobuf::FieldDescriptor::TypeOnceInit;
        v25 = atomic_load(v24);
        if (v25 != -1)
        {
          v77.__r_.__value_.__r.__words[0] = (std::string::size_type)&v84;
          v77.__r_.__value_.__l.__size_ = (std::string::size_type)&v83;
          v85 = &v77;
          std::__call_once(v24, &v85, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
        }
        LODWORD(v14) = *((_DWORD *)a6 + 14);
      }
      if (v11 == 2 && (v14 - 13) <= 0xFFFFFFFB)
      {
        v26 = (unint64_t *)*((_QWORD *)a6 + 6);
        if (v26)
        {
          v83 = a6;
          v84 = google::protobuf::FieldDescriptor::TypeOnceInit;
          v27 = atomic_load(v26);
          if (v27 != -1)
          {
            v77.__r_.__value_.__r.__words[0] = (std::string::size_type)&v84;
            v77.__r_.__value_.__l.__size_ = (std::string::size_type)&v83;
            v85 = &v77;
            std::__call_once(v26, &v85, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
          }
          LODWORD(v14) = *((_DWORD *)a6 + 14);
        }
        switch((int)v14)
        {
          case 1:
            v59 = google::protobuf::Reflection::MutableRawRepeatedField((uint64_t)this, (uint64_t)a1, a6, 5, (const char *)this, 0);
            return (unsigned __int8 *)google::protobuf::internal::FixedParser<unsigned long long>((unsigned int *)v59, v82, (google::protobuf::internal::EpsCopyInputStream *)a3);
          case 2:
            v60 = google::protobuf::Reflection::MutableRawRepeatedField((uint64_t)this, (uint64_t)a1, a6, 6, (const char *)this, 0);
            return (unsigned __int8 *)google::protobuf::internal::FixedParser<unsigned int>((unsigned int *)v60, v82, (google::protobuf::internal::EpsCopyInputStream *)a3);
          case 3:
            v61 = google::protobuf::Reflection::MutableRawRepeatedField((uint64_t)this, (uint64_t)a1, a6, 2, (const char *)this, 0);
            return google::protobuf::internal::EpsCopyInputStream::ReadPackedVarint<char const* google::protobuf::internal::VarintParser<long long,false>(void *,char const*,google::protobuf::internal::ParseContext *)::{lambda(unsigned long long)#1}>((uint64_t)a3, v82, (unsigned int *)v61);
          case 4:
            v62 = google::protobuf::Reflection::MutableRawRepeatedField((uint64_t)this, (uint64_t)a1, a6, 4, (const char *)this, 0);
            return google::protobuf::internal::EpsCopyInputStream::ReadPackedVarint<char const* google::protobuf::internal::VarintParser<unsigned long long,false>(void *,char const*,google::protobuf::internal::ParseContext *)::{lambda(unsigned long long)#1}>((uint64_t)a3, v82, (unsigned int *)v62);
          case 5:
            v63 = google::protobuf::Reflection::MutableRawRepeatedField((uint64_t)this, (uint64_t)a1, a6, 1, (const char *)this, 0);
            v64 = v82;
            return google::protobuf::internal::EpsCopyInputStream::ReadPackedVarint<char const* google::protobuf::internal::VarintParser<int,false>(void *,char const*,google::protobuf::internal::ParseContext *)::{lambda(unsigned long long)#1}>((uint64_t)a3, v64, (unsigned int *)v63);
          case 6:
            v65 = google::protobuf::Reflection::MutableRawRepeatedField((uint64_t)this, (uint64_t)a1, a6, 4, (const char *)this, 0);
            return (unsigned __int8 *)google::protobuf::internal::FixedParser<unsigned long long>((unsigned int *)v65, v82, (google::protobuf::internal::EpsCopyInputStream *)a3);
          case 7:
            v66 = google::protobuf::Reflection::MutableRawRepeatedField((uint64_t)this, (uint64_t)a1, a6, 3, (const char *)this, 0);
            return (unsigned __int8 *)google::protobuf::internal::FixedParser<unsigned int>((unsigned int *)v66, v82, (google::protobuf::internal::EpsCopyInputStream *)a3);
          case 8:
            v67 = google::protobuf::Reflection::MutableRawRepeatedField((uint64_t)this, (uint64_t)a1, a6, 7, (const char *)this, 0);
            return google::protobuf::internal::EpsCopyInputStream::ReadPackedVarint<char const* google::protobuf::internal::VarintParser<BOOL,false>(void *,char const*,google::protobuf::internal::ParseContext *)::{lambda(unsigned long long)#1}>((uint64_t)a3, v82, (unsigned int *)v67);
          case 9:
          case 10:
          case 11:
          case 12:
            LODWORD(v77.__r_.__value_.__l.__data_) = 3;
            v77.__r_.__value_.__l.__size_ = (std::string::size_type)"/Library/Caches/com.apple.xbs/Sources/GeoServices/li"
                                                                    "bprotobuf/src/google/protobuf/wire_format.cc";
            LODWORD(v77.__r_.__value_.__r.__words[2]) = 884;
            memset(&__p, 0, sizeof(__p));
            std::string::append(&__p, "Can't reach");
            google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v77);
            if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
              operator delete(__p.__r_.__value_.__l.__data_);
            return 0;
          case 13:
            v68 = google::protobuf::Reflection::MutableRawRepeatedField((uint64_t)this, (uint64_t)a1, a6, 3, (const char *)this, 0);
            return google::protobuf::internal::EpsCopyInputStream::ReadPackedVarint<char const* google::protobuf::internal::VarintParser<unsigned int,false>(void *,char const*,google::protobuf::internal::ParseContext *)::{lambda(unsigned long long)#1}>((uint64_t)a3, v82, (unsigned int *)v68);
          case 14:
            v69 = google::protobuf::Reflection::MutableRawRepeatedField((uint64_t)this, (uint64_t)a1, a6, 1, (const char *)this, 0);
            v63 = v69;
            v64 = v82;
            if (*(_DWORD *)(*((_QWORD *)a6 + 5) + 60) == 3)
              return google::protobuf::internal::EpsCopyInputStream::ReadPackedVarint<char const* google::protobuf::internal::VarintParser<int,false>(void *,char const*,google::protobuf::internal::ParseContext *)::{lambda(unsigned long long)#1}>((uint64_t)a3, v64, (unsigned int *)v63);
            *(_QWORD *)&v79 = v69;
            *((_QWORD *)&v79 + 1) = a6;
            v80 = this;
            v81 = a1;
            return (unsigned __int8 *)google::protobuf::internal::EpsCopyInputStream::ReadPackedVarint<google::protobuf::internal::WireFormat::_InternalParseAndMergeField(google::protobuf::Message *,char const*,google::protobuf::internal::ParseContext *,unsigned long long,google::protobuf::Reflection const*,google::protobuf::FieldDescriptor const*)::$_0>((uint64_t)a3, v82, &v79);
          case 15:
            v70 = google::protobuf::Reflection::MutableRawRepeatedField((uint64_t)this, (uint64_t)a1, a6, 1, (const char *)this, 0);
            return (unsigned __int8 *)google::protobuf::internal::FixedParser<unsigned int>((unsigned int *)v70, v82, (google::protobuf::internal::EpsCopyInputStream *)a3);
          case 16:
            v71 = google::protobuf::Reflection::MutableRawRepeatedField((uint64_t)this, (uint64_t)a1, a6, 2, (const char *)this, 0);
            return (unsigned __int8 *)google::protobuf::internal::FixedParser<unsigned long long>((unsigned int *)v71, v82, (google::protobuf::internal::EpsCopyInputStream *)a3);
          case 17:
            v72 = google::protobuf::Reflection::MutableRawRepeatedField((uint64_t)this, (uint64_t)a1, a6, 1, (const char *)this, 0);
            return google::protobuf::internal::EpsCopyInputStream::ReadPackedVarint<char const* google::protobuf::internal::VarintParser<int,true>(void *,char const*,google::protobuf::internal::ParseContext *)::{lambda(unsigned long long)#1}>((uint64_t)a3, v82, (unsigned int *)v72);
          case 18:
            v73 = google::protobuf::Reflection::MutableRawRepeatedField((uint64_t)this, (uint64_t)a1, a6, 2, (const char *)this, 0);
            return google::protobuf::internal::EpsCopyInputStream::ReadPackedVarint<char const* google::protobuf::internal::VarintParser<long long,true>(void *,char const*,google::protobuf::internal::ParseContext *)::{lambda(unsigned long long)#1}>((uint64_t)a3, v82, (unsigned int *)v73);
          default:
            goto LABEL_6;
        }
      }
    }
    v28 = (uint64_t *)((char *)a1 + *((unsigned int *)this + 9));
    if ((*v28 & 1) != 0)
      v29 = (*v28 & 0xFFFFFFFFFFFFFFFELL) + 8;
    else
      v29 = google::protobuf::internal::InternalMetadata::mutable_unknown_fields_slow<google::protobuf::UnknownFieldSet>(v28);
    v23 = (uint64_t *)v82;
    v77.__r_.__value_.__r.__words[0] = v29;
    v22 = a4;
    return (unsigned __int8 *)google::protobuf::internal::FieldParser<google::protobuf::internal::UnknownFieldParserHelper>(v22, (google::protobuf::UnknownFieldSet **)&v77, v23, a3);
  }
LABEL_6:
  v15 = (unint64_t *)*((_QWORD *)a6 + 6);
  if (v15)
  {
    v83 = a6;
    v84 = google::protobuf::FieldDescriptor::TypeOnceInit;
    v16 = atomic_load(v15);
    if (v16 != -1)
    {
      v77.__r_.__value_.__r.__words[0] = (std::string::size_type)&v84;
      v77.__r_.__value_.__l.__size_ = (std::string::size_type)&v83;
      v85 = &v77;
      std::__call_once(v15, &v85, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
    LODWORD(v14) = *((_DWORD *)a6 + 14);
  }
  switch((int)v14)
  {
    case 1:
      v32 = *(double *)v82;
      v82 = (google::protobuf::internal *)((char *)v82 + 8);
      if (*((_DWORD *)a6 + 15) == 3)
        google::protobuf::Reflection::AddDouble((google::protobuf::_anonymous_namespace_ **)this, a1, a6, v32, a4, (const char *)this);
      else
        google::protobuf::Reflection::SetDouble((google::protobuf::_anonymous_namespace_ **)this, a1, a6, v32, a4, (const char *)this);
      return (unsigned __int8 *)v82;
    case 2:
      v33 = *(float *)v82;
      v82 = (google::protobuf::internal *)((char *)v82 + 4);
      if (*((_DWORD *)a6 + 15) == 3)
        google::protobuf::Reflection::AddFloat((google::protobuf::_anonymous_namespace_ **)this, a1, a6, v33, a4, (const char *)this);
      else
        google::protobuf::Reflection::SetFloat((google::protobuf::_anonymous_namespace_ **)this, a1, a6, v33, a4, (const char *)this);
      return (unsigned __int8 *)v82;
    case 3:
      v77.__r_.__value_.__r.__words[0] = 0;
      v82 = (google::protobuf::internal *)google::protobuf::internal::VarintParse<unsigned long long>((char *)v82, &v77);
      if (!v82)
        return 0;
      v34 = *((_DWORD *)a6 + 15);
      v35 = v77.__r_.__value_.__r.__words[0];
      goto LABEL_74;
    case 4:
      v77.__r_.__value_.__r.__words[0] = 0;
      v82 = (google::protobuf::internal *)google::protobuf::internal::VarintParse<unsigned long long>((char *)v82, &v77);
      if (!v82)
        return 0;
      v36 = *((_DWORD *)a6 + 15);
      v37 = v77.__r_.__value_.__r.__words[0];
      goto LABEL_46;
    case 5:
      LODWORD(v77.__r_.__value_.__l.__data_) = 0;
      v82 = (google::protobuf::internal *)google::protobuf::internal::VarintParse<unsigned int>((unsigned __int8 *)v82, &v77);
      if (!v82)
        return 0;
      v38 = *((_DWORD *)a6 + 15);
      data = (int)v77.__r_.__value_.__l.__data_;
      goto LABEL_68;
    case 6:
      v37 = *(_QWORD *)v82;
      v82 = (google::protobuf::internal *)((char *)v82 + 8);
      v36 = *((_DWORD *)a6 + 15);
LABEL_46:
      if (v36 == 3)
        google::protobuf::Reflection::AddUInt64((google::protobuf::_anonymous_namespace_ **)this, a1, a6, v37, (const char *)this);
      else
        google::protobuf::Reflection::SetUInt64((google::protobuf::_anonymous_namespace_ **)this, a1, a6, v37, (const char *)this);
      return (unsigned __int8 *)v82;
    case 7:
      v40 = *(_DWORD *)v82;
      v82 = (google::protobuf::internal *)((char *)v82 + 4);
      v41 = *((_DWORD *)a6 + 15);
      goto LABEL_58;
    case 8:
      v77.__r_.__value_.__r.__words[0] = 0;
      v82 = (google::protobuf::internal *)google::protobuf::internal::VarintParse<unsigned long long>((char *)v82, &v77);
      if (!v82)
        return 0;
      if (*((_DWORD *)a6 + 15) == 3)
        google::protobuf::Reflection::AddBool((google::protobuf::_anonymous_namespace_ **)this, a1, a6, v77.__r_.__value_.__r.__words[0] != 0, v42);
      else
        google::protobuf::Reflection::SetBool((google::protobuf::_anonymous_namespace_ **)this, a1, a6, v77.__r_.__value_.__r.__words[0] != 0, v42);
      return (unsigned __int8 *)v82;
    case 9:
    case 12:
      v17 = *(unsigned __int8 *)v82;
      if (*(char *)v82 < 0)
      {
        SizeFallback = (unsigned __int8 *)google::protobuf::internal::ReadSizeFallback(v82, (const char *)*(unsigned __int8 *)v82);
        v82 = (google::protobuf::internal *)SizeFallback;
        if (!SizeFallback)
          return 0;
        v18 = (std::string::value_type *)SizeFallback;
        v17 = v51;
      }
      else
      {
        v18 = (char *)v82 + 1;
        v82 = (google::protobuf::internal *)((char *)v82 + 1);
      }
      memset(&v77, 0, sizeof(v77));
      v82 = google::protobuf::internal::EpsCopyInputStream::ReadString((uint64_t)a3, v18, v17, &v77);
      if (!v82)
      {
        v31 = 0;
        goto LABEL_125;
      }
      if (*((_DWORD *)a6 + 15) == 3)
      {
        if (SHIBYTE(v77.__r_.__value_.__r.__words[2]) < 0)
          std::string::__init_copy_ctor_external(&v76, v77.__r_.__value_.__l.__data_, v77.__r_.__value_.__l.__size_);
        else
          v76 = v77;
        google::protobuf::Reflection::AddString((uint64_t)this, (uint64_t)a1, a6, (uint64_t)&v76, v52);
        if (SHIBYTE(v76.__r_.__value_.__r.__words[2]) < 0)
        {
          v74 = &v76;
LABEL_123:
          operator delete(v74->__r_.__value_.__l.__data_);
        }
      }
      else
      {
        if (SHIBYTE(v77.__r_.__value_.__r.__words[2]) < 0)
          std::string::__init_copy_ctor_external(&v75, v77.__r_.__value_.__l.__data_, v77.__r_.__value_.__l.__size_);
        else
          v75 = v77;
        google::protobuf::Reflection::SetString((uint64_t)this, a1, a6, (uint64_t)&v75, v52);
        if (SHIBYTE(v75.__r_.__value_.__r.__words[2]) < 0)
        {
          v74 = &v75;
          goto LABEL_123;
        }
      }
      v31 = v82;
LABEL_125:
      if (SHIBYTE(v77.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v77.__r_.__value_.__l.__data_);
      break;
    case 10:
      v43 = (google::protobuf::MessageFactory *)a3[13];
      if (*((_DWORD *)a6 + 15) == 3)
        v44 = google::protobuf::Reflection::AddMessage((google::protobuf::_anonymous_namespace_ **)this, a1, (unint64_t **)a6, v43, (const char *)this);
      else
        v44 = google::protobuf::Reflection::MutableMessage((google::protobuf::_anonymous_namespace_ **)this, a1, a6, v43, (const char *)this);
      v53 = v82;
      v54 = a3[11].i32[0];
      v55 = __OFSUB__(v54--, 1);
      a3[11].i32[0] = v54;
      if (v54 < 0 != v55)
        return 0;
      ++a3[11].i32[1];
      v56 = (*(uint64_t (**)(uint64_t, google::protobuf::internal *, int32x2_t *))(*(_QWORD *)v44 + 88))(v44, v53, a3);
      a3[11] = vadd_s32(a3[11], (int32x2_t)0xFFFFFFFF00000001);
      v57 = a3[10].i32[0];
      a3[10].i32[0] = 0;
      if (v57 == (_DWORD)a4)
        return (unsigned __int8 *)v56;
      else
        return 0;
    case 11:
      v45 = (google::protobuf::MessageFactory *)a3[13];
      if (*((_DWORD *)a6 + 15) == 3)
        v46 = google::protobuf::Reflection::AddMessage((google::protobuf::_anonymous_namespace_ **)this, a1, (unint64_t **)a6, v45, (const char *)this);
      else
        v46 = google::protobuf::Reflection::MutableMessage((google::protobuf::_anonymous_namespace_ **)this, a1, a6, v45, (const char *)this);
      return (unsigned __int8 *)google::protobuf::internal::ParseContext::ParseMessage<google::protobuf::MessageLite>((uint64_t)a3, v46, v82);
    case 13:
      LODWORD(v77.__r_.__value_.__l.__data_) = 0;
      v82 = (google::protobuf::internal *)google::protobuf::internal::VarintParse<unsigned int>((unsigned __int8 *)v82, &v77);
      if (!v82)
        return 0;
      v41 = *((_DWORD *)a6 + 15);
      v40 = (int)v77.__r_.__value_.__l.__data_;
LABEL_58:
      if (v41 == 3)
        google::protobuf::Reflection::AddUInt32((google::protobuf::_anonymous_namespace_ **)this, a1, a6, v40, (const char *)this);
      else
        google::protobuf::Reflection::SetUInt32((google::protobuf::_anonymous_namespace_ **)this, a1, a6, v40, (const char *)this);
      return (unsigned __int8 *)v82;
    case 14:
      LODWORD(v77.__r_.__value_.__l.__data_) = 0;
      v82 = (google::protobuf::internal *)google::protobuf::internal::VarintParse<unsigned int>((unsigned __int8 *)v82, &v77);
      if (!v82)
        return 0;
      if (*((_DWORD *)a6 + 15) == 3)
        google::protobuf::Reflection::AddEnumValue((google::protobuf::_anonymous_namespace_ **)this, a1, a6, (int)v77.__r_.__value_.__l.__data_, v47);
      else
        google::protobuf::Reflection::SetEnumValue((google::protobuf::_anonymous_namespace_ **)this, a1, a6, (int)v77.__r_.__value_.__l.__data_, v47);
      return (unsigned __int8 *)v82;
    case 15:
      data = *(_DWORD *)v82;
      v82 = (google::protobuf::internal *)((char *)v82 + 4);
      goto LABEL_67;
    case 16:
      v35 = *(_QWORD *)v82;
      v82 = (google::protobuf::internal *)((char *)v82 + 8);
      goto LABEL_73;
    case 17:
      VarintZigZag32 = google::protobuf::internal::ReadVarintZigZag32((google::protobuf::internal *)&v82, (const char **)a2);
      if (!v82)
        return 0;
      data = VarintZigZag32;
LABEL_67:
      v38 = *((_DWORD *)a6 + 15);
LABEL_68:
      if (v38 == 3)
        google::protobuf::Reflection::AddInt32((google::protobuf::_anonymous_namespace_ **)this, a1, a6, data, (const char *)this);
      else
        google::protobuf::Reflection::SetInt32((google::protobuf::_anonymous_namespace_ **)this, a1, a6, data, (const char *)this);
      return (unsigned __int8 *)v82;
    case 18:
      VarintZigZag64 = google::protobuf::internal::ReadVarintZigZag64((google::protobuf::internal *)&v82, (const char **)a2);
      if (!v82)
        return 0;
      v35 = VarintZigZag64;
LABEL_73:
      v34 = *((_DWORD *)a6 + 15);
LABEL_74:
      if (v34 == 3)
        google::protobuf::Reflection::AddInt64((google::protobuf::_anonymous_namespace_ **)this, a1, a6, v35, (const char *)this);
      else
        google::protobuf::Reflection::SetInt64((google::protobuf::_anonymous_namespace_ **)this, a1, a6, v35, (const char *)this);
      return (unsigned __int8 *)v82;
    default:
      return 0;
  }
  return (unsigned __int8 *)v31;
}

void sub_1888BDC18(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,uint64_t a30,int a31,__int16 a32,char a33,char a34)
{
  if (a14 < 0)
    operator delete(__p);
  if (a28 < 0)
    operator delete(a23);
  _Unwind_Resume(exception_object);
}

char *google::protobuf::internal::EpsCopyInputStream::ReadPackedVarint<google::protobuf::internal::WireFormat::_InternalParseAndMergeField(google::protobuf::Message *,char const*,google::protobuf::internal::ParseContext *,unsigned long long,google::protobuf::Reflection const*,google::protobuf::FieldDescriptor const*)::$_0>(uint64_t a1, google::protobuf::internal *this, _OWORD *a3)
{
  int v5;
  char *result;
  int v7;
  unint64_t v8;
  int v9;
  __int128 v10;
  __int128 *v11;
  int v12;
  int v13;
  __int128 v14;
  unint64_t v15;
  __int128 v16;
  char *v17;
  BOOL v18;
  _OWORD v19[2];
  _OWORD v20[2];
  _OWORD v21[2];
  __int128 v22;
  uint64_t v23;
  __int16 v24;
  uint64_t v25;

  v25 = *MEMORY[0x1E0C80C00];
  v5 = *(unsigned __int8 *)this;
  if ((*(char *)this & 0x80000000) == 0)
  {
    result = (char *)this + 1;
    goto LABEL_5;
  }
  result = google::protobuf::internal::ReadSizeFallback(this, (const char *)*(unsigned __int8 *)this);
  if (result)
  {
    v5 = v7;
    while (1)
    {
LABEL_5:
      v8 = *(_QWORD *)(a1 + 8);
      v9 = v8 - (_DWORD)result;
      if (v5 <= (int)v8 - (int)result)
      {
        v14 = a3[1];
        v15 = (unint64_t)&result[v5];
        v19[0] = *a3;
        v19[1] = v14;
        result = google::protobuf::internal::ReadPackedVarintArray<google::protobuf::internal::WireFormat::_InternalParseAndMergeField(google::protobuf::Message *,char const*,google::protobuf::internal::ParseContext *,unsigned long long,google::protobuf::Reflection const*,google::protobuf::FieldDescriptor const*)::$_0>(result, v15, (unsigned int **)v19);
        if ((char *)v15 != result)
          return 0;
        return result;
      }
      v10 = a3[1];
      v21[0] = *a3;
      v21[1] = v10;
      result = google::protobuf::internal::ReadPackedVarintArray<google::protobuf::internal::WireFormat::_InternalParseAndMergeField(google::protobuf::Message *,char const*,google::protobuf::internal::ParseContext *,unsigned long long,google::protobuf::Reflection const*,google::protobuf::FieldDescriptor const*)::$_0>(result, v8, (unsigned int **)v21);
      if (!result)
        return result;
      v11 = *(__int128 **)(a1 + 8);
      v12 = (_DWORD)result - (_DWORD)v11;
      v13 = v5 - v9;
      if (v5 - v9 <= 16)
        break;
      if (*(int *)(a1 + 28) < 17)
        return 0;
      result = (char *)google::protobuf::internal::EpsCopyInputStream::Next((google::protobuf::internal::EpsCopyInputStream *)a1);
      if (!result)
        return result;
      v5 = v5 - v9 - v12;
      result += v12;
    }
    v24 = 0;
    v23 = 0;
    v22 = *v11;
    v16 = a3[1];
    v20[0] = *a3;
    v20[1] = v16;
    v17 = google::protobuf::internal::ReadPackedVarintArray<google::protobuf::internal::WireFormat::_InternalParseAndMergeField(google::protobuf::Message *,char const*,google::protobuf::internal::ParseContext *,unsigned long long,google::protobuf::Reflection const*,google::protobuf::FieldDescriptor const*)::$_0>((char *)&v22 + v12, (unint64_t)&v22 + v13, (unsigned int **)v20);
    if (v17)
      v18 = v17 == (char *)&v22 + v13;
    else
      v18 = 0;
    if (!v18)
      return 0;
    return (char *)(*(_QWORD *)(a1 + 8) + v13);
  }
  return result;
}

unsigned __int8 *google::protobuf::internal::VarintParse<unsigned long long>(char *a1, _QWORD *a2)
{
  uint64_t v2;
  unsigned __int8 *result;
  int v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *a1;
  if (*a1 < 0)
  {
    v4 = a1[1];
    v5 = (v2 + (v4 << 7) - 128);
    if ((v4 & 0x80) != 0)
    {
      result = (unsigned __int8 *)(a1 + 3);
      v6 = 14;
      while (1)
      {
        v5 += (*(result - 1) - 1) << v6;
        if (((char)*(result - 1) & 0x80000000) == 0)
          break;
        ++result;
        v6 += 7;
        if (v6 == 70)
        {
          result = 0;
          v5 = 0;
          break;
        }
      }
      *a2 = v5;
    }
    else
    {
      *a2 = v5;
      return (unsigned __int8 *)(a1 + 2);
    }
  }
  else
  {
    *a2 = v2;
    return (unsigned __int8 *)(a1 + 1);
  }
  return result;
}

uint64_t google::protobuf::internal::VarintParse<unsigned int>(unsigned __int8 *a1, _DWORD *a2)
{
  int v3;
  uint64_t result;
  const char *v5;
  int v6;

  v3 = *a1;
  if ((char)*a1 < 0)
  {
    v5 = (const char *)(v3 + (a1[1] << 7) - 128);
    if ((char)a1[1] < 0)
    {
      result = google::protobuf::internal::VarintParseSlow32((google::protobuf::internal *)a1, v5);
      *a2 = v6;
    }
    else
    {
      *a2 = (_DWORD)v5;
      return (uint64_t)(a1 + 2);
    }
  }
  else
  {
    *a2 = v3;
    return (uint64_t)(a1 + 1);
  }
  return result;
}

uint64_t google::protobuf::internal::ReadVarintZigZag32(google::protobuf::internal *this, const char **a2)
{
  unsigned __int8 *v2;
  unsigned __int8 *v3;
  unsigned int v4;
  int v5;
  uint64_t v6;
  unsigned __int8 *v7;
  uint64_t v8;

  v2 = *(unsigned __int8 **)this;
  v3 = (unsigned __int8 *)(*(_QWORD *)this + 1);
  v4 = **(unsigned __int8 **)this;
  if (**(char **)this < 0)
  {
    v5 = *v3;
    v6 = v4 + (v5 << 7) - 128;
    if ((v5 & 0x80) != 0)
    {
      v7 = v2 + 3;
      v8 = 14;
      while (1)
      {
        v6 += (*(v7 - 1) - 1) << v8;
        if (((char)*(v7 - 1) & 0x80000000) == 0)
          break;
        v4 = 0;
        v3 = 0;
        ++v7;
        v8 += 7;
        if (v8 == 70)
          goto LABEL_9;
      }
      v4 = v6;
      v3 = v7;
    }
    else
    {
      v3 = v2 + 2;
      v4 = v6;
    }
  }
LABEL_9:
  *(_QWORD *)this = v3;
  return -(v4 & 1) ^ (v4 >> 1);
}

unint64_t google::protobuf::internal::ReadVarintZigZag64(google::protobuf::internal *this, const char **a2)
{
  unsigned __int8 *v2;
  unsigned __int8 *v3;
  unint64_t v4;
  int v5;
  unint64_t v6;
  unsigned __int8 *v7;
  uint64_t v8;

  v2 = *(unsigned __int8 **)this;
  v3 = (unsigned __int8 *)(*(_QWORD *)this + 1);
  v4 = **(unsigned __int8 **)this;
  if (**(char **)this < 0)
  {
    v5 = *v3;
    v6 = (v4 + (v5 << 7) - 128);
    if ((v5 & 0x80) != 0)
    {
      v7 = v2 + 3;
      v8 = 14;
      while (1)
      {
        v6 += (*(v7 - 1) - 1) << v8;
        if (((char)*(v7 - 1) & 0x80000000) == 0)
          break;
        v4 = 0;
        v3 = 0;
        ++v7;
        v8 += 7;
        if (v8 == 70)
          goto LABEL_9;
      }
      v4 = v6;
      v3 = v7;
    }
    else
    {
      v3 = v2 + 2;
      v4 = v6;
    }
  }
LABEL_9:
  *(_QWORD *)this = v3;
  return -(uint64_t)(v4 & 1) ^ (v4 >> 1);
}

const google::protobuf::Message *google::protobuf::internal::WireFormat::_InternalSerialize(google::protobuf::internal::WireFormat *this, const google::protobuf::Message *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  const google::protobuf::Message *v5;
  uint64_t v7;
  google::protobuf::UnknownFieldSet *MayFailOnStripped;
  uint64_t v9;
  google::protobuf::io::EpsCopyOutputStream *v10;
  google::protobuf::io::EpsCopyOutputStream *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t *v18;
  char *v19;
  char *v20;
  uint64_t v21;
  google::protobuf::internal::WireFormat **i;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  google::protobuf::UnknownField *v28;
  unsigned int v29;
  _BYTE *v30;
  unsigned int v31;
  unsigned int v32;
  unsigned int v33;
  unsigned __int8 *v34;
  google::protobuf::internal::WireFormat *v35;
  uint64_t v37;
  void *__p;
  uint64_t *v39;
  uint64_t *v40;

  v5 = a2;
  v7 = (*(uint64_t (**)(google::protobuf::internal::WireFormat *, const google::protobuf::Message *, google::protobuf::io::EpsCopyOutputStream *, google::protobuf::io::EpsCopyOutputStream *))(*(_QWORD *)this + 152))(this, a2, a3, a4);
  MayFailOnStripped = (google::protobuf::UnknownFieldSet *)(*(uint64_t (**)(google::protobuf::internal::WireFormat *))(*(_QWORD *)this + 152))(this);
  __p = 0;
  v39 = 0;
  v40 = 0;
  v37 = v9;
  if (*(_BYTE *)(*(_QWORD *)(v7 + 32) + 75))
  {
    if (*(int *)(v7 + 104) < 1)
    {
      v12 = 0;
    }
    else
    {
      v12 = 0;
      v13 = 0;
      do
      {
        v14 = *(_QWORD *)(v7 + 40) + 152 * v13;
        if (v12 >= v40)
        {
          v15 = ((char *)v12 - (_BYTE *)__p) >> 3;
          if ((unint64_t)(v15 + 1) >> 61)
            std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
          v16 = ((char *)v40 - (_BYTE *)__p) >> 2;
          if (v16 <= v15 + 1)
            v16 = v15 + 1;
          if ((unint64_t)((char *)v40 - (_BYTE *)__p) >= 0x7FFFFFFFFFFFFFF8)
            v17 = 0x1FFFFFFFFFFFFFFFLL;
          else
            v17 = v16;
          if (v17)
            MayFailOnStripped = (google::protobuf::UnknownFieldSet *)std::__allocate_at_least[abi:ne180100]<std::allocator<zilch::StringList::Entry>>((uint64_t)&v40, v17);
          else
            MayFailOnStripped = 0;
          v18 = (uint64_t *)((char *)MayFailOnStripped + 8 * v15);
          *v18 = v14;
          v12 = v18 + 1;
          v20 = (char *)__p;
          v19 = (char *)v39;
          if (v39 != __p)
          {
            do
            {
              v21 = *((_QWORD *)v19 - 1);
              v19 -= 8;
              *--v18 = v21;
            }
            while (v19 != v20);
            v19 = (char *)__p;
          }
          __p = v18;
          v39 = v12;
          v40 = (uint64_t *)((char *)MayFailOnStripped + 8 * v17);
          if (v19)
            operator delete(v19);
        }
        else
        {
          *v12++ = v14;
        }
        v39 = v12;
        ++v13;
      }
      while (v13 < *(int *)(v7 + 104));
    }
  }
  else
  {
    MayFailOnStripped = (google::protobuf::UnknownFieldSet *)google::protobuf::Reflection::ListFieldsMayFailOnStripped(v9, this, 0, (uint64_t)&__p);
    v12 = v39;
  }
  for (i = (google::protobuf::internal::WireFormat **)__p; i != (google::protobuf::internal::WireFormat **)v12; ++i)
  {
    MayFailOnStripped = google::protobuf::internal::WireFormat::InternalSerializeField(*i, this, v5, a3, v11);
    v5 = MayFailOnStripped;
  }
  v23 = *(_QWORD *)((char *)this + *(unsigned int *)(v37 + 36));
  if (*(_BYTE *)(*(_QWORD *)(v7 + 32) + 72))
  {
    if ((v23 & 1) != 0)
      v24 = (uint64_t *)((v23 & 0xFFFFFFFFFFFFFFFELL) + 8);
    else
      v24 = (uint64_t *)google::protobuf::UnknownFieldSet::default_instance(MayFailOnStripped);
    v26 = *v24;
    v25 = v24[1];
    if ((int)((unint64_t)(v25 - *v24) >> 4) >= 1)
    {
      v27 = 0;
      do
      {
        v28 = (google::protobuf::UnknownField *)(v26 + 16 * v27);
        if (*((_DWORD *)v28 + 1) == 3)
        {
          if (*(_QWORD *)a3 <= (unint64_t)v5)
            v5 = (const google::protobuf::Message *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, (unsigned __int8 *)v5);
          *(_WORD *)v5 = 4107;
          v29 = *(_DWORD *)v28;
          if (*(_DWORD *)v28 > 0x7Fu)
          {
            *((_BYTE *)v5 + 2) = v29 | 0x80;
            v31 = v29 >> 7;
            if (v29 >> 14)
            {
              v30 = (char *)v5 + 4;
              do
              {
                *(v30 - 1) = v31 | 0x80;
                v32 = v31 >> 7;
                ++v30;
                v33 = v31 >> 14;
                v31 >>= 7;
              }
              while (v33);
              *(v30 - 1) = v32;
            }
            else
            {
              *((_BYTE *)v5 + 3) = v31;
              v30 = (char *)v5 + 4;
            }
          }
          else
          {
            *((_BYTE *)v5 + 2) = v29;
            v30 = (char *)v5 + 3;
          }
          *v30 = 26;
          v34 = google::protobuf::UnknownField::InternalSerializeLengthDelimitedNoTag(v28, v30 + 1, a3);
          if (*(_QWORD *)a3 <= (unint64_t)v34)
            v34 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v34);
          *v34 = 12;
          v5 = (const google::protobuf::Message *)(v34 + 1);
          v26 = *v24;
          v25 = v24[1];
        }
        ++v27;
      }
      while (v27 < (int)((unint64_t)(v25 - v26) >> 4));
    }
  }
  else
  {
    if ((v23 & 1) != 0)
      v35 = (google::protobuf::internal::WireFormat *)((v23 & 0xFFFFFFFFFFFFFFFELL) + 8);
    else
      v35 = (google::protobuf::internal::WireFormat *)google::protobuf::UnknownFieldSet::default_instance(MayFailOnStripped);
    v5 = google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray(v35, v5, a3, v10);
  }
  if (__p)
  {
    v39 = (uint64_t *)__p;
    operator delete(__p);
  }
  return v5;
}

void sub_1888BE2EC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

const google::protobuf::Message *google::protobuf::internal::WireFormat::InternalSerializeField(google::protobuf::internal::WireFormat *this, const google::protobuf::FieldDescriptor *a2, const google::protobuf::Message *a3, google::protobuf::io::EpsCopyOutputStream *a4, google::protobuf::io::EpsCopyOutputStream *a5)
{
  uint64_t v8;
  const char *v9;
  google::protobuf::_anonymous_namespace_ **v10;
  google::protobuf::_anonymous_namespace_ **v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t *v14;
  unint64_t v15;
  unsigned int v16;
  int v17;
  unint64_t *v18;
  unint64_t v19;
  void (*v20)(google::protobuf::FieldDescriptor *, const google::protobuf::FieldDescriptor *, const char *);
  uint64_t v21;
  void (*v22)(google::protobuf::FieldDescriptor *, const google::protobuf::FieldDescriptor *, const char *);
  void (*v23)(google::protobuf::FieldDescriptor *, const google::protobuf::FieldDescriptor *, const char *);
  void (*v24)(google::protobuf::FieldDescriptor *, const google::protobuf::FieldDescriptor *, const char *);
  uint64_t v25;
  uint64_t v26;
  google::protobuf::Reflection *v27;
  uint64_t *v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t *v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  char *v42;
  void (*v43)(google::protobuf::FieldDescriptor *, const google::protobuf::FieldDescriptor *, const char *);
  void (*v44)(google::protobuf::FieldDescriptor *, const google::protobuf::FieldDescriptor *, const char *);
  void (*v45)(google::protobuf::FieldDescriptor *, const google::protobuf::FieldDescriptor *, const char *);
  uint64_t v46;
  void (*v47)(google::protobuf::FieldDescriptor *, const google::protobuf::FieldDescriptor *, const char *);
  uint64_t *v48;
  uint64_t v49;
  const char *v50;
  unint64_t *v51;
  unint64_t v52;
  uint64_t *v53;
  int v54;
  google::protobuf::io::EpsCopyOutputStream *v55;
  int v56;
  unsigned int v57;
  _BYTE *v58;
  uint64_t v59;
  unint64_t *v60;
  unint64_t v61;
  double RepeatedDouble;
  int RepeatedInt32;
  int RepeatedUInt32;
  unint64_t StringReference;
  unint64_t RepeatedInt64;
  unsigned int UInt32;
  int v68;
  uint64_t RepeatedMessage;
  uint64_t RepeatedUInt64;
  float RepeatedFloat;
  uint64_t Int64;
  uint64_t RepeatedEnum;
  int v74;
  uint64_t v75;
  unint64_t RepeatedStringReference;
  unsigned int v77;
  unsigned __int8 *v78;
  int v79;
  unsigned int v80;
  unsigned int v81;
  char *v82;
  unsigned int v83;
  unsigned int v84;
  const void **v85;
  int v86;
  int64_t v87;
  unsigned int v88;
  unsigned int v89;
  unsigned int v90;
  int v91;
  unsigned int v92;
  unsigned int v93;
  char *v94;
  unsigned int v95;
  unsigned int v96;
  unsigned int v97;
  unsigned int v98;
  int v99;
  unsigned int v100;
  double *v101;
  int v102;
  unsigned int v103;
  float *v104;
  unsigned int v105;
  int v106;
  unint64_t v107;
  unsigned int v108;
  int v109;
  uint64_t v110;
  unsigned int v111;
  unsigned int v112;
  unsigned int v113;
  unsigned int v114;
  unsigned int v115;
  unsigned int v116;
  unsigned int v117;
  unsigned int v118;
  unsigned int v119;
  unsigned int v120;
  unsigned int v121;
  uint64_t v122;
  unsigned int v123;
  unsigned int v124;
  _BYTE *v125;
  unsigned int v126;
  unsigned int v127;
  unsigned int v128;
  uint64_t v129;
  unsigned int v130;
  unsigned int v131;
  unsigned int v132;
  unsigned int v133;
  unsigned int v134;
  unsigned int v135;
  unsigned int v136;
  unsigned int v137;
  unint64_t v138;
  unint64_t v139;
  unint64_t v140;
  unsigned int v141;
  unsigned int v142;
  unsigned int v143;
  unsigned int v144;
  unsigned int v145;
  unint64_t v146;
  unsigned int v147;
  unsigned int v148;
  unint64_t v149;
  unsigned int v150;
  unsigned int v151;
  unsigned int v152;
  unsigned int v153;
  unsigned int v154;
  unsigned int v155;
  unsigned int v156;
  unsigned int v157;
  unint64_t v158;
  unint64_t v159;
  unsigned int v160;
  unsigned int v161;
  unsigned int v162;
  unint64_t v163;
  unint64_t v164;
  unint64_t v165;
  unsigned int v166;
  unsigned int v167;
  char *v168;
  unsigned int v169;
  unsigned int v170;
  char *v171;
  unsigned int v172;
  unsigned int v173;
  unsigned int v174;
  unsigned int v175;
  unsigned int v176;
  char *v177;
  unsigned int v178;
  unsigned int v179;
  unsigned int v180;
  unsigned int v181;
  char *v182;
  unsigned int v183;
  unsigned int v184;
  unsigned int v185;
  int v186;
  std::string *v187;
  google::protobuf::MapKey *v188;
  int64_t v189;
  unint64_t v190;
  unint64_t v191;
  google::protobuf::MapKey ***v192;
  google::protobuf::MapKey *v193;
  const google::protobuf::MapKey *v194;
  google::protobuf::MapKey *v195;
  google::protobuf::MapKey *v196;
  __int128 v197;
  const char *v198;
  google::protobuf::_anonymous_namespace_ **v199;
  google::protobuf::_anonymous_namespace_ **v200;
  unsigned int v201;
  char *v202;
  unint64_t v203;
  uint64_t v204;
  const google::protobuf::MapKey *i;
  google::protobuf::io::EpsCopyOutputStream *v206;
  int v207;
  google::protobuf::io::EpsCopyOutputStream *v208;
  unsigned int v209;
  uint64_t v210;
  const google::protobuf::Message **v211;
  const google::protobuf::Message **v212;
  const google::protobuf::Message **v213;
  uint64_t v214;
  uint64_t v215;
  unsigned int v216;
  unsigned int v217;
  uint64_t Message;
  unsigned int v219;
  char *v220;
  google::protobuf::io::EpsCopyOutputStream *v221;
  unsigned int v222;
  unsigned int v223;
  unsigned int v224;
  unsigned __int8 *v225;
  uint64_t *v226;
  int v227;
  const google::protobuf::Message *v228;
  unsigned int v229;
  unsigned int v230;
  char *v231;
  uint64_t *v232;
  int v233;
  unsigned int v234;
  _BYTE *v235;
  uint64_t *v236;
  int v237;
  const google::protobuf::Message *v238;
  unsigned int v239;
  unsigned int v240;
  char *v241;
  uint64_t *v242;
  int v243;
  const google::protobuf::Message *v244;
  unsigned int v245;
  unsigned int v246;
  char *v247;
  uint64_t *v248;
  int v249;
  unsigned int v250;
  _BYTE *v251;
  uint64_t *v252;
  int v253;
  unsigned int v254;
  _BYTE *v255;
  uint64_t *v256;
  int v257;
  const google::protobuf::Message *v258;
  unsigned int v259;
  unsigned int v260;
  char *v261;
  uint64_t *v262;
  int v263;
  const google::protobuf::Message *v264;
  unsigned int v265;
  unsigned int v266;
  char *v267;
  uint64_t *v268;
  int v269;
  unsigned int v270;
  _BYTE *v271;
  uint64_t *v272;
  int v273;
  unsigned int v274;
  _BYTE *v275;
  uint64_t *v276;
  int v277;
  unsigned int v278;
  _BYTE *v279;
  uint64_t *v280;
  int v281;
  const google::protobuf::Message *v282;
  unsigned int v283;
  unsigned int v284;
  char *v285;
  uint64_t *v286;
  int v287;
  const google::protobuf::Message *v288;
  unsigned int v289;
  unsigned int v290;
  char *v291;
  google::protobuf::MapKey **v292;
  unsigned int v293;
  unsigned int v294;
  unsigned int v295;
  unsigned int v296;
  unsigned int v297;
  unsigned int v298;
  unsigned int v299;
  unsigned int v300;
  unsigned int v301;
  unsigned int v302;
  unsigned int v303;
  unsigned int v304;
  unsigned int v305;
  unsigned int v306;
  unsigned int v307;
  unsigned int v308;
  unsigned int v309;
  char *v310;
  google::protobuf::MapKey **v311;
  unsigned int v312;
  unsigned int v313;
  unsigned int v314;
  unsigned int v315;
  unsigned int v316;
  unsigned int v317;
  unsigned int v318;
  unsigned int v319;
  unsigned int v320;
  unsigned int v321;
  unsigned int v322;
  unsigned int v323;
  unsigned int v324;
  unsigned int v325;
  unsigned int v326;
  uint64_t v327;
  unsigned int v329;
  unsigned int v330;
  uint64_t v331;
  unsigned int v332;
  unsigned int v333;
  unsigned int v334;
  unsigned int v335;
  google::protobuf::MapKey **v336;
  google::protobuf::MapKey **v337;
  google::protobuf::io::EpsCopyOutputStream *v338;
  uint64_t v339;
  unint64_t v340;
  unint64_t v341;
  unint64_t v342;
  unint64_t v343;
  unsigned int v344;
  unsigned int v345;
  unsigned int v346;
  google::protobuf::MapKey **v347;
  google::protobuf::MapKey **v348;
  google::protobuf::io::EpsCopyOutputStream *v349;
  unint64_t v350;
  unint64_t v351;
  unint64_t v352;
  unint64_t v353;
  unint64_t v354;
  unsigned int v355;
  unsigned int v356;
  unsigned int v357;
  google::protobuf::MapKey **v358;
  google::protobuf::MapKey **v359;
  google::protobuf::io::EpsCopyOutputStream *v360;
  int v361;
  unsigned int v362;
  unsigned int v363;
  unsigned int v364;
  unsigned int v365;
  unsigned int v366;
  unsigned int v367;
  unsigned int v368;
  google::protobuf::MapKey **v369;
  google::protobuf::MapKey **v370;
  google::protobuf::io::EpsCopyOutputStream *v371;
  unint64_t v372;
  unint64_t v373;
  unint64_t v374;
  unint64_t v375;
  unint64_t v376;
  unsigned int v377;
  unsigned int v378;
  unsigned int v379;
  google::protobuf::MapKey **v380;
  google::protobuf::MapKey **v381;
  google::protobuf::io::EpsCopyOutputStream *v382;
  unint64_t v383;
  unint64_t v384;
  unint64_t v385;
  unint64_t v386;
  unint64_t v387;
  unsigned int v388;
  unsigned int v389;
  unsigned int v390;
  google::protobuf::MapKey **v391;
  google::protobuf::MapKey **v392;
  google::protobuf::io::EpsCopyOutputStream *v393;
  unint64_t v394;
  unint64_t v395;
  unint64_t v396;
  unint64_t v397;
  unint64_t v398;
  unsigned int v399;
  unsigned int v400;
  unsigned int v401;
  google::protobuf::MapKey **v402;
  google::protobuf::MapKey **v403;
  google::protobuf::io::EpsCopyOutputStream *v404;
  unsigned int v405;
  unsigned int v406;
  unsigned int v407;
  unsigned int v408;
  unsigned int v409;
  unsigned int v410;
  unsigned int v411;
  unsigned int v412;
  unsigned int v413;
  unsigned int v414;
  unsigned int v415;
  unsigned int v416;
  unsigned int v417;
  unsigned int v418;
  unsigned int v419;
  unsigned int v420;
  unsigned int v421;
  unsigned int v422;
  unsigned int v423;
  unsigned int v424;
  unsigned int v425;
  unsigned int v426;
  unsigned int v427;
  unsigned int v428;
  unsigned int v429;
  unsigned int v430;
  uint64_t *v431;
  void (*__p)(google::protobuf::FieldDescriptor *, const google::protobuf::FieldDescriptor *, const char *);
  void *__pa[2];
  google::protobuf::io::EpsCopyOutputStream *v434;
  google::protobuf::MapKey *v435[4];
  void (*v436)(google::protobuf::FieldDescriptor *, const google::protobuf::FieldDescriptor *, const char *);
  uint64_t *v437;
  char *v438;
  char v439;
  __int128 v440;
  __int128 v441;
  google::protobuf::MapKey ***v442;
  _BYTE v443[24];
  google::protobuf::MapKey **v444;
  google::protobuf::MapKey **v445;
  google::protobuf::MapKey **v446;
  uint64_t v447;
  std::string v448;
  _QWORD v449[4];

  v434 = a4;
  v449[2] = *MEMORY[0x1E0C80C00];
  (*(void (**)(const google::protobuf::FieldDescriptor *))(*(_QWORD *)a2 + 152))(a2);
  v11 = v10;
  if (*((_BYTE *)this + 67) && *(_BYTE *)(*(_QWORD *)(*((_QWORD *)this + 10) + 32) + 72))
  {
    v12 = (unint64_t *)*((_QWORD *)this + 6);
    if (v12)
    {
      v436 = google::protobuf::FieldDescriptor::TypeOnceInit;
      v435[0] = this;
      v13 = atomic_load(v12);
      if (v13 != -1)
      {
        v445 = (google::protobuf::MapKey **)&v436;
        v446 = v435;
        v442 = &v445;
        std::__call_once(v12, &v442, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
      }
    }
    if ((*((_DWORD *)this + 14) & 0xFFFFFFFE) == 0xA && *((_DWORD *)this + 15) != 3)
    {
      (*(void (**)(const google::protobuf::FieldDescriptor *))(*(_QWORD *)a2 + 152))(a2);
      v200 = v199;
      if (*(_QWORD *)v434 <= (unint64_t)a3)
        a3 = (const google::protobuf::Message *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(v434, (unsigned __int8 *)a3);
      *(_BYTE *)a3 = 11;
      v201 = *((_DWORD *)this + 17);
      *((_BYTE *)a3 + 1) = 16;
      if (v201 > 0x7F)
      {
        *((_BYTE *)a3 + 2) = v201 | 0x80;
        v209 = v201 >> 7;
        if (v201 >> 14)
        {
          v202 = (char *)a3 + 4;
          do
          {
            *(v202 - 1) = v209 | 0x80;
            v216 = v209 >> 7;
            ++v202;
            v217 = v209 >> 14;
            v209 >>= 7;
          }
          while (v217);
          *(v202 - 1) = v216;
        }
        else
        {
          *((_BYTE *)a3 + 3) = v209;
          v202 = (char *)a3 + 4;
        }
      }
      else
      {
        *((_BYTE *)a3 + 2) = v201;
        v202 = (char *)a3 + 3;
      }
      Message = google::protobuf::Reflection::GetMessage(v200, a2, this, 0, v198);
      *v202 = 26;
      v219 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)Message + 80))(Message);
      if (v219 > 0x7F)
      {
        v202[1] = v219 | 0x80;
        v222 = v219 >> 7;
        v221 = v434;
        if (v219 >> 14)
        {
          v220 = v202 + 3;
          do
          {
            *(v220 - 1) = v222 | 0x80;
            v223 = v222 >> 7;
            ++v220;
            v224 = v222 >> 14;
            v222 >>= 7;
          }
          while (v224);
          *(v220 - 1) = v223;
        }
        else
        {
          v202[2] = v222;
          v220 = v202 + 3;
        }
      }
      else
      {
        v202[1] = v219;
        v220 = v202 + 2;
        v221 = v434;
      }
      v225 = (unsigned __int8 *)(*(uint64_t (**)(uint64_t, char *, google::protobuf::io::EpsCopyOutputStream *))(*(_QWORD *)Message + 96))(Message, v220, v221);
      if (*(_QWORD *)v434 <= (unint64_t)v225)
        v225 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(v434, v225);
      *v225 = 12;
      return (const google::protobuf::Message *)(v225 + 1);
    }
  }
  v14 = (unint64_t *)*((_QWORD *)this + 6);
  if (v14)
  {
    v436 = google::protobuf::FieldDescriptor::TypeOnceInit;
    v435[0] = this;
    v15 = atomic_load(v14);
    if (v15 != -1)
    {
      v445 = (google::protobuf::MapKey **)&v436;
      v446 = v435;
      v442 = &v445;
      std::__call_once(v14, &v442, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  if (*((_DWORD *)this + 14) == 11)
  {
    if (*(_BYTE *)(*(_QWORD *)(*((_QWORD *)this + 13) + 32) + 75))
    {
      v16 = atomic_load((unsigned int *)(google::protobuf::Reflection::MutableMapData(v11, a2, this) + 88));
      if (v16 != 1)
      {
        if (*((_BYTE *)v434 + 58))
        {
          memset(v435, 0, 24);
          google::protobuf::Reflection::MapBegin(v11, a2, this, (google::protobuf::MapIterator *)&v445);
          while (1)
          {
            google::protobuf::Reflection::MapEnd(v11, a2, this, (google::protobuf::MapIterator *)&v442);
            v186 = (*((uint64_t (**)(google::protobuf::MapKey **, google::protobuf::MapKey ***, google::protobuf::MapKey ****))*v446
                    + 6))(v446, &v445, &v442);
            google::protobuf::MapIterator::~MapIterator((google::protobuf::MapIterator *)&v442);
            if (v186)
              break;
            v187 = (std::string *)v435[1];
            if (v435[1] >= v435[2])
            {
              v189 = (v435[1] - v435[0]) >> 5;
              if ((unint64_t)(v189 + 1) >> 59)
                std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
              v190 = (v435[2] - v435[0]) >> 4;
              if (v190 <= v189 + 1)
                v190 = v189 + 1;
              if ((google::protobuf::MapKey *)(v435[2] - v435[0]) >= (google::protobuf::MapKey *)0x7FFFFFFFFFFFFFE0)
                v191 = 0x7FFFFFFFFFFFFFFLL;
              else
                v191 = v190;
              v444 = &v435[2];
              if (v191 >> 59)
                std::__throw_bad_array_new_length[abi:ne180100]();
              v192 = (google::protobuf::MapKey ***)operator new(32 * v191);
              v442 = v192;
              *(_QWORD *)v443 = &v192[4 * v189];
              *(_QWORD *)&v443[8] = *(_QWORD *)v443;
              *(_QWORD *)&v443[16] = &v192[4 * v191];
              *(_DWORD *)(*(_QWORD *)v443 + 24) = 0;
              google::protobuf::MapKey::CopyFrom((std::string *)&v192[4 * v189], (const google::protobuf::MapKey *)&v447);
              v193 = *(google::protobuf::MapKey **)v443;
              *(_QWORD *)&v443[8] += 32;
              v195 = v435[0];
              v194 = v435[1];
              *(_QWORD *)&v441 = *(_QWORD *)v443;
              *((_QWORD *)&v441 + 1) = *(_QWORD *)v443;
              v440 = v441;
              v436 = (void (*)(google::protobuf::FieldDescriptor *, const google::protobuf::FieldDescriptor *, const char *))&v435[2];
              v437 = (uint64_t *)&v440;
              v438 = (char *)&v441;
              v439 = 0;
              while (v194 != v195)
              {
                v194 = (const google::protobuf::MapKey *)((char *)v194 - 32);
                *((_DWORD *)v193 - 2) = 0;
                google::protobuf::MapKey::CopyFrom((std::string *)((char *)v193 - 32), v194);
                v193 = (google::protobuf::MapKey *)(*((_QWORD *)&v441 + 1) - 32);
                *((_QWORD *)&v441 + 1) -= 32;
              }
              v439 = 1;
              std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<google::protobuf::MapKey>,std::reverse_iterator<google::protobuf::MapKey*>>>::~__exception_guard_exceptions[abi:ne180100]((uint64_t)&v436);
              v196 = v435[2];
              *(_OWORD *)__pa = *(_OWORD *)&v443[8];
              v197 = *(_OWORD *)v435;
              v435[0] = v193;
              *(_OWORD *)v443 = v197;
              *(_OWORD *)&v435[1] = *(_OWORD *)__pa;
              *(_QWORD *)&v443[16] = v196;
              v442 = (google::protobuf::MapKey ***)v197;
              std::__split_buffer<google::protobuf::MapKey>::~__split_buffer((uint64_t)&v442);
              v188 = (google::protobuf::MapKey *)__pa[0];
            }
            else
            {
              *((_DWORD *)v435[1] + 6) = 0;
              google::protobuf::MapKey::CopyFrom(v187, (const google::protobuf::MapKey *)&v447);
              v188 = (google::protobuf::MapKey *)&v187[1].__r_.__value_.__r.__words[1];
            }
            v435[1] = v188;
            (*((void (**)(google::protobuf::MapKey **, google::protobuf::MapKey ***))*v446 + 19))(v446, &v445);
          }
          google::protobuf::MapIterator::~MapIterator((google::protobuf::MapIterator *)&v445);
          v203 = 126 - 2 * __clz((v435[1] - v435[0]) >> 5);
          if (v435[1] == v435[0])
            v204 = 0;
          else
            v204 = v203;
          std::__introsort<std::_ClassicAlgPolicy,google::protobuf::internal::MapKeySorter::MapKeyComparator &,google::protobuf::MapKey *,false>(v435[0], v435[1], v204, 1);
          for (i = v435[0]; i != v435[1]; i = (const google::protobuf::MapKey *)((char *)i + 32))
          {
            v445 = 0;
            LODWORD(v446) = 0;
            google::protobuf::Reflection::LookupMapValue(v11, a2, this, i, (google::protobuf::MapValueConstRef *)&v445);
            a3 = (const google::protobuf::Message *)google::protobuf::internal::InternalSerializeMapEntry(this, i, (const google::protobuf::MapKey *)&v445, a3, v434, v206);
          }
          v445 = v435;
          std::vector<google::protobuf::MapKey>::__destroy_vector::operator()[abi:ne180100]((void ***)&v445);
        }
        else
        {
          google::protobuf::Reflection::MapBegin(v11, a2, this, (google::protobuf::MapIterator *)&v445);
          while (1)
          {
            google::protobuf::Reflection::MapEnd(v11, a2, this, (google::protobuf::MapIterator *)&v442);
            v207 = (*((uint64_t (**)(google::protobuf::MapKey **, google::protobuf::MapKey ***, google::protobuf::MapKey ****))*v446
                    + 6))(v446, &v445, &v442);
            google::protobuf::MapIterator::~MapIterator((google::protobuf::MapIterator *)&v442);
            if (v207)
              break;
            a3 = (const google::protobuf::Message *)google::protobuf::internal::InternalSerializeMapEntry(this, (const google::protobuf::FieldDescriptor *)&v447, (const google::protobuf::MapKey *)v449, a3, v434, v208);
            (*((void (**)(google::protobuf::MapKey **, google::protobuf::MapKey ***))*v446 + 19))(v446, &v445);
          }
          google::protobuf::MapIterator::~MapIterator((google::protobuf::MapIterator *)&v445);
        }
        return a3;
      }
    }
  }
  if (*((_DWORD *)this + 15) == 3)
  {
    v17 = google::protobuf::Reflection::FieldSize(v11, a2, this, v8, v9);
    if (v17 >= 2)
    {
      v18 = (unint64_t *)*((_QWORD *)this + 6);
      if (v18)
      {
        v436 = google::protobuf::FieldDescriptor::TypeOnceInit;
        v435[0] = this;
        v19 = atomic_load(v18);
        if (v19 != -1)
        {
          v445 = (google::protobuf::MapKey **)&v436;
          v446 = v435;
          v442 = &v445;
          std::__call_once(v18, &v442, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
        }
      }
      if (*((_DWORD *)this + 14) == 11
        && *(_BYTE *)(*(_QWORD *)(*((_QWORD *)this + 13) + 32) + 75)
        && *((_BYTE *)v434 + 58))
      {
        v436 = 0;
        v437 = 0;
        v438 = 0;
        v20 = (void (*)(google::protobuf::FieldDescriptor *, const google::protobuf::FieldDescriptor *, const char *))std::__allocate_at_least[abi:ne180100]<std::allocator<zilch::StringList::Entry>>((uint64_t)&v438, v17);
        v23 = v436;
        v22 = (void (*)(google::protobuf::FieldDescriptor *, const google::protobuf::FieldDescriptor *, const char *))v437;
        v24 = v20;
        if (v437 != (uint64_t *)v436)
        {
          do
          {
            v25 = *((_QWORD *)v22 - 1);
            v22 = (void (*)(google::protobuf::FieldDescriptor *, const google::protobuf::FieldDescriptor *, const char *))((char *)v22 - 8);
            *((_QWORD *)v24 - 1) = v25;
            v24 = (void (*)(google::protobuf::FieldDescriptor *, const google::protobuf::FieldDescriptor *, const char *))((char *)v24 - 8);
          }
          while (v22 != v23);
          v22 = v436;
        }
        v436 = v24;
        v437 = (uint64_t *)v20;
        v438 = (char *)v20 + 8 * v21;
        if (v22)
          operator delete(v22);
        (*(void (**)(const google::protobuf::FieldDescriptor *))(*(_QWORD *)a2 + 152))(a2);
        v27 = (google::protobuf::Reflection *)v26;
        v28 = google::protobuf::Reflection::RepeatedFieldData(v26, (uint64_t)a2, this, 10, 0);
        v29 = google::protobuf::Reflection::RepeatedFieldAccessor(v27, this);
        v30 = *((_QWORD *)v27 + 8);
        v31 = google::protobuf::FieldDescriptor::message_type(this);
        v32 = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v30 + 16))(v30, v31);
        v33 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v32 + 24))(v32);
        v445 = (google::protobuf::MapKey **)v28;
        v446 = (google::protobuf::MapKey **)v29;
        v447 = (*(uint64_t (**)(uint64_t *, uint64_t *))(*v29 + 72))(v29, v28);
        v448.__r_.__value_.__r.__words[0] = v33;
        while (1)
        {
          v442 = (google::protobuf::MapKey ***)v28;
          *(_QWORD *)v443 = v29;
          *(_QWORD *)&v443[8] = (*(uint64_t (**)(uint64_t *, uint64_t *))(*v29 + 80))(v29, v28);
          *(_QWORD *)&v443[16] = 0;
          v34 = (*((uint64_t (**)(google::protobuf::MapKey **, google::protobuf::MapKey **, uint64_t, _QWORD))*v446
                 + 13))(v446, v445, v447, *(_QWORD *)&v443[8]);
          google::protobuf::internal::RepeatedFieldRefIterator<google::protobuf::Message>::~RepeatedFieldRefIterator((uint64_t)&v442);
          if (v34)
            break;
          v35 = (*((uint64_t (**)(google::protobuf::MapKey **, google::protobuf::MapKey **, uint64_t, std::string::size_type))*v446
                 + 15))(v446, v445, v447, v448.__r_.__value_.__r.__words[0]);
          v36 = v35;
          v37 = v437;
          if (v437 >= (uint64_t *)v438)
          {
            v39 = ((char *)v437 - (char *)v436) >> 3;
            if ((unint64_t)(v39 + 1) >> 61)
              std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
            v40 = (v438 - (char *)v436) >> 2;
            if (v40 <= v39 + 1)
              v40 = v39 + 1;
            if ((unint64_t)(v438 - (char *)v436) >= 0x7FFFFFFFFFFFFFF8)
              v41 = 0x1FFFFFFFFFFFFFFFLL;
            else
              v41 = v40;
            if (v41)
              v42 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<zilch::StringList::Entry>>((uint64_t)&v438, v41);
            else
              v42 = 0;
            v43 = (void (*)(google::protobuf::FieldDescriptor *, const google::protobuf::FieldDescriptor *, const char *))&v42[8 * v39];
            *(_QWORD *)v43 = v36;
            v38 = (uint64_t *)((char *)v43 + 8);
            v45 = v436;
            v44 = (void (*)(google::protobuf::FieldDescriptor *, const google::protobuf::FieldDescriptor *, const char *))v437;
            if (v437 != (uint64_t *)v436)
            {
              do
              {
                v46 = *((_QWORD *)v44 - 1);
                v44 = (void (*)(google::protobuf::FieldDescriptor *, const google::protobuf::FieldDescriptor *, const char *))((char *)v44 - 8);
                *((_QWORD *)v43 - 1) = v46;
                v43 = (void (*)(google::protobuf::FieldDescriptor *, const google::protobuf::FieldDescriptor *, const char *))((char *)v43 - 8);
              }
              while (v44 != v45);
              v44 = v436;
            }
            v436 = v43;
            v437 = v38;
            v438 = &v42[8 * v41];
            if (v44)
              operator delete(v44);
          }
          else
          {
            *v437 = v35;
            v38 = v37 + 1;
          }
          v437 = v38;
          v447 = (*((uint64_t (**)(google::protobuf::MapKey **, google::protobuf::MapKey **, uint64_t))*v446
                  + 12))(v446, v445, v447);
        }
        google::protobuf::internal::RepeatedFieldRefIterator<google::protobuf::Message>::~RepeatedFieldRefIterator((uint64_t)&v445);
        v210 = google::protobuf::FieldDescriptor::message_type(this);
        v211 = (const google::protobuf::Message **)v436;
        v212 = (const google::protobuf::Message **)v437;
        v445 = *(google::protobuf::MapKey ***)(v210 + 40);
        if ((char *)v437 - (char *)v436 < 1025)
        {
          v213 = 0;
          v215 = 0;
        }
        else
        {
          v213 = (const google::protobuf::Message **)std::get_temporary_buffer[abi:ne180100]<google::protobuf::Message const*>(((char *)v437 - (char *)v436) >> 3);
          v215 = v214;
        }
        std::__stable_sort<std::_ClassicAlgPolicy,google::protobuf::DynamicMapSorter::MapEntryMessageComparator &,std::__wrap_iter<google::protobuf::Message const**>>(v211, v212, (const google::protobuf::FieldDescriptor **)&v445, v212 - v211, v213, v215);
        if (v213)
          operator delete(v213);
        v47 = v436;
        v48 = v437;
        goto LABEL_50;
      }
    }
    goto LABEL_49;
  }
  if (!*(_BYTE *)(*(_QWORD *)(*((_QWORD *)this + 10) + 32) + 75))
  {
    v17 = google::protobuf::Reflection::HasField(v11, a2, this, v8, v9);
LABEL_49:
    v47 = 0;
    v48 = 0;
    goto LABEL_50;
  }
  v47 = 0;
  v48 = 0;
  v17 = 1;
LABEL_50:
  __p = v47;
  if (google::protobuf::FieldDescriptor::is_packed(this))
  {
    if (v17)
    {
      if (*(_QWORD *)v434 <= (unint64_t)a3)
        a3 = (const google::protobuf::Message *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(v434, (unsigned __int8 *)a3);
      v51 = (unint64_t *)*((_QWORD *)this + 6);
      if (v51)
      {
        v436 = google::protobuf::FieldDescriptor::TypeOnceInit;
        v435[0] = this;
        v52 = atomic_load(v51);
        if (v52 != -1)
        {
          v445 = (google::protobuf::MapKey **)&v436;
          v446 = v435;
          v442 = &v445;
          std::__call_once(v51, &v442, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
        }
      }
      switch(*((_DWORD *)this + 14))
      {
        case 1:
          v53 = google::protobuf::Reflection::MutableRawRepeatedField((uint64_t)v11, (uint64_t)a2, this, 5, v50, 0);
          google::protobuf::RepeatedField<long long>::RepeatedField((uint64_t)&v445, (int *)v53);
          v54 = *((_DWORD *)this + 17);
          v55 = v434;
          if (*(_QWORD *)v434 <= (unint64_t)a3)
          {
            a3 = (const google::protobuf::Message *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(v434, (unsigned __int8 *)a3);
            v55 = v434;
          }
          v56 = 8 * (_DWORD)v445;
          v57 = (8 * v54) | 2;
          if (v57 > 0x7F)
          {
            *(_BYTE *)a3 = (8 * v54) | 0x82;
            v296 = (8 * v54) >> 7;
            if (v57 >> 14)
            {
              v58 = (char *)a3 + 2;
              do
              {
                *(v58 - 1) = v296 | 0x80;
                v318 = v296 >> 7;
                ++v58;
                v319 = v296 >> 14;
                v296 >>= 7;
              }
              while (v319);
              *(v58 - 1) = v318;
            }
            else
            {
              *((_BYTE *)a3 + 1) = v296;
              v58 = (char *)a3 + 2;
            }
          }
          else
          {
            *(_BYTE *)a3 = v57;
            v58 = (char *)a3 + 1;
          }
          if (v56 >= 0x80)
          {
            v423 = v56;
            do
            {
              *v58++ = v423 | 0x80;
              v320 = v423 >> 7;
              v424 = v423 >> 14;
              v423 >>= 7;
            }
            while (v424);
          }
          else
          {
            LOBYTE(v320) = v56;
          }
          *v58 = v320;
          v310 = v58 + 1;
          v311 = v446;
          if (*(_QWORD *)v55 - (_QWORD)v310 >= v56)
            goto LABEL_520;
          goto LABEL_689;
        case 2:
          v268 = google::protobuf::Reflection::MutableRawRepeatedField((uint64_t)v11, (uint64_t)a2, this, 6, v50, 0);
          google::protobuf::RepeatedField<int>::RepeatedField((uint64_t)&v445, (int *)v268);
          v269 = *((_DWORD *)this + 17);
          v55 = v434;
          if (*(_QWORD *)v434 <= (unint64_t)a3)
          {
            a3 = (const google::protobuf::Message *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(v434, (unsigned __int8 *)a3);
            v55 = v434;
          }
          v56 = 4 * (_DWORD)v445;
          v270 = (8 * v269) | 2;
          if (v270 > 0x7F)
          {
            *(_BYTE *)a3 = (8 * v269) | 0x82;
            v297 = (8 * v269) >> 7;
            if (v270 >> 14)
            {
              v271 = (char *)a3 + 2;
              do
              {
                *(v271 - 1) = v297 | 0x80;
                v321 = v297 >> 7;
                ++v271;
                v322 = v297 >> 14;
                v297 >>= 7;
              }
              while (v322);
              *(v271 - 1) = v321;
            }
            else
            {
              *((_BYTE *)a3 + 1) = v297;
              v271 = (char *)a3 + 2;
            }
          }
          else
          {
            *(_BYTE *)a3 = v270;
            v271 = (char *)a3 + 1;
          }
          if (v56 >= 0x80)
          {
            v425 = v56;
            do
            {
              *v271++ = v425 | 0x80;
              v323 = v425 >> 7;
              v426 = v425 >> 14;
              v425 >>= 7;
            }
            while (v426);
          }
          else
          {
            LOBYTE(v323) = v56;
          }
          *v271 = v323;
          v310 = v271 + 1;
          v311 = v446;
          if (*(_QWORD *)v55 - (_QWORD)v310 < v56)
            goto LABEL_689;
          goto LABEL_520;
        case 3:
          v262 = google::protobuf::Reflection::MutableRawRepeatedField((uint64_t)v11, (uint64_t)a2, this, 2, v50, 0);
          google::protobuf::RepeatedField<long long>::RepeatedField((uint64_t)&v445, (int *)v262);
          v263 = *((_DWORD *)this + 17);
          v265 = google::protobuf::internal::WireFormat::FieldDataOnlyByteSize(this, a2, v264);
          if (*(_QWORD *)v434 <= (unint64_t)a3)
            a3 = (const google::protobuf::Message *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(v434, (unsigned __int8 *)a3);
          v266 = (8 * v263) | 2;
          if (v266 > 0x7F)
          {
            *(_BYTE *)a3 = (8 * v263) | 0x82;
            v304 = (8 * v263) >> 7;
            if (v266 >> 14)
            {
              v267 = (char *)a3 + 2;
              do
              {
                *(v267 - 1) = v304 | 0x80;
                v377 = v304 >> 7;
                ++v267;
                v378 = v304 >> 14;
                v304 >>= 7;
              }
              while (v378);
              *(v267 - 1) = v377;
            }
            else
            {
              *((_BYTE *)a3 + 1) = v304;
              v267 = (char *)a3 + 2;
            }
          }
          else
          {
            *(_BYTE *)a3 = v266;
            v267 = (char *)a3 + 1;
          }
          if (v265 >= 0x80)
          {
            do
            {
              *v267++ = v265 | 0x80;
              v379 = v265 >> 7;
              v414 = v265 >> 14;
              v265 >>= 7;
            }
            while (v414);
          }
          else
          {
            LOBYTE(v379) = v265;
          }
          *v267 = v379;
          a3 = (const google::protobuf::Message *)(v267 + 1);
          v380 = v446;
          v381 = &v446[(int)v445];
          v382 = v434;
          do
          {
            if (*(_QWORD *)v382 <= (unint64_t)a3)
              a3 = (const google::protobuf::Message *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(v382, (unsigned __int8 *)a3);
            v384 = (unint64_t)*v380++;
            v383 = v384;
            if (v384 > 0x7F)
            {
              *(_BYTE *)a3 = v383 | 0x80;
              v385 = v383 >> 7;
              if (v383 >> 14)
              {
                a3 = (const google::protobuf::Message *)((char *)a3 + 2);
                do
                {
                  *((_BYTE *)a3 - 1) = v385 | 0x80;
                  v386 = v385 >> 7;
                  a3 = (const google::protobuf::Message *)((char *)a3 + 1);
                  v387 = v385 >> 14;
                  v385 >>= 7;
                }
                while (v387);
                *((_BYTE *)a3 - 1) = v386;
              }
              else
              {
                *((_BYTE *)a3 + 1) = v385;
                a3 = (const google::protobuf::Message *)((char *)a3 + 2);
              }
            }
            else
            {
              *(_BYTE *)a3 = v383;
              a3 = (const google::protobuf::Message *)((char *)a3 + 1);
            }
          }
          while (v380 < v381);
          goto LABEL_521;
        case 4:
          v256 = google::protobuf::Reflection::MutableRawRepeatedField((uint64_t)v11, (uint64_t)a2, this, 4, v50, 0);
          google::protobuf::RepeatedField<long long>::RepeatedField((uint64_t)&v445, (int *)v256);
          v257 = *((_DWORD *)this + 17);
          v259 = google::protobuf::internal::WireFormat::FieldDataOnlyByteSize(this, a2, v258);
          if (*(_QWORD *)v434 <= (unint64_t)a3)
            a3 = (const google::protobuf::Message *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(v434, (unsigned __int8 *)a3);
          v260 = (8 * v257) | 2;
          if (v260 > 0x7F)
          {
            *(_BYTE *)a3 = (8 * v257) | 0x82;
            v303 = (8 * v257) >> 7;
            if (v260 >> 14)
            {
              v261 = (char *)a3 + 2;
              do
              {
                *(v261 - 1) = v303 | 0x80;
                v366 = v303 >> 7;
                ++v261;
                v367 = v303 >> 14;
                v303 >>= 7;
              }
              while (v367);
              *(v261 - 1) = v366;
            }
            else
            {
              *((_BYTE *)a3 + 1) = v303;
              v261 = (char *)a3 + 2;
            }
          }
          else
          {
            *(_BYTE *)a3 = v260;
            v261 = (char *)a3 + 1;
          }
          if (v259 >= 0x80)
          {
            do
            {
              *v261++ = v259 | 0x80;
              v368 = v259 >> 7;
              v413 = v259 >> 14;
              v259 >>= 7;
            }
            while (v413);
          }
          else
          {
            LOBYTE(v368) = v259;
          }
          *v261 = v368;
          a3 = (const google::protobuf::Message *)(v261 + 1);
          v369 = v446;
          v370 = &v446[(int)v445];
          v371 = v434;
          do
          {
            if (*(_QWORD *)v371 <= (unint64_t)a3)
              a3 = (const google::protobuf::Message *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(v371, (unsigned __int8 *)a3);
            v373 = (unint64_t)*v369++;
            v372 = v373;
            if (v373 > 0x7F)
            {
              *(_BYTE *)a3 = v372 | 0x80;
              v374 = v372 >> 7;
              if (v372 >> 14)
              {
                a3 = (const google::protobuf::Message *)((char *)a3 + 2);
                do
                {
                  *((_BYTE *)a3 - 1) = v374 | 0x80;
                  v375 = v374 >> 7;
                  a3 = (const google::protobuf::Message *)((char *)a3 + 1);
                  v376 = v374 >> 14;
                  v374 >>= 7;
                }
                while (v376);
                *((_BYTE *)a3 - 1) = v375;
              }
              else
              {
                *((_BYTE *)a3 + 1) = v374;
                a3 = (const google::protobuf::Message *)((char *)a3 + 2);
              }
            }
            else
            {
              *(_BYTE *)a3 = v372;
              a3 = (const google::protobuf::Message *)((char *)a3 + 1);
            }
          }
          while (v369 < v370);
          goto LABEL_521;
        case 5:
          v236 = google::protobuf::Reflection::MutableRawRepeatedField((uint64_t)v11, (uint64_t)a2, this, 1, v50, 0);
          google::protobuf::RepeatedField<int>::RepeatedField((uint64_t)&v445, (int *)v236);
          v237 = *((_DWORD *)this + 17);
          v239 = google::protobuf::internal::WireFormat::FieldDataOnlyByteSize(this, a2, v238);
          if (*(_QWORD *)v434 <= (unint64_t)a3)
            a3 = (const google::protobuf::Message *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(v434, (unsigned __int8 *)a3);
          v240 = (8 * v237) | 2;
          if (v240 > 0x7F)
          {
            *(_BYTE *)a3 = (8 * v237) | 0x82;
            v301 = (8 * v237) >> 7;
            if (v240 >> 14)
            {
              v241 = (char *)a3 + 2;
              do
              {
                *(v241 - 1) = v301 | 0x80;
                v344 = v301 >> 7;
                ++v241;
                v345 = v301 >> 14;
                v301 >>= 7;
              }
              while (v345);
              *(v241 - 1) = v344;
            }
            else
            {
              *((_BYTE *)a3 + 1) = v301;
              v241 = (char *)a3 + 2;
            }
          }
          else
          {
            *(_BYTE *)a3 = v240;
            v241 = (char *)a3 + 1;
          }
          if (v239 >= 0x80)
          {
            do
            {
              *v241++ = v239 | 0x80;
              v346 = v239 >> 7;
              v411 = v239 >> 14;
              v239 >>= 7;
            }
            while (v411);
          }
          else
          {
            LOBYTE(v346) = v239;
          }
          *v241 = v346;
          a3 = (const google::protobuf::Message *)(v241 + 1);
          v347 = v446;
          v348 = (google::protobuf::MapKey **)((char *)v446 + 4 * (int)v445);
          v349 = v434;
          do
          {
            if (*(_QWORD *)v349 <= (unint64_t)a3)
              a3 = (const google::protobuf::Message *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(v349, (unsigned __int8 *)a3);
            v351 = *(int *)v347;
            v347 = (google::protobuf::MapKey **)((char *)v347 + 4);
            v350 = v351;
            if (v351 > 0x7F)
            {
              *(_BYTE *)a3 = v350 | 0x80;
              v352 = v350 >> 7;
              if (v350 >> 14)
              {
                a3 = (const google::protobuf::Message *)((char *)a3 + 2);
                do
                {
                  *((_BYTE *)a3 - 1) = v352 | 0x80;
                  v353 = v352 >> 7;
                  a3 = (const google::protobuf::Message *)((char *)a3 + 1);
                  v354 = v352 >> 14;
                  v352 >>= 7;
                }
                while (v354);
                *((_BYTE *)a3 - 1) = v353;
              }
              else
              {
                *((_BYTE *)a3 + 1) = v352;
                a3 = (const google::protobuf::Message *)((char *)a3 + 2);
              }
            }
            else
            {
              *(_BYTE *)a3 = v350;
              a3 = (const google::protobuf::Message *)((char *)a3 + 1);
            }
          }
          while (v347 < v348);
          goto LABEL_521;
        case 6:
          v248 = google::protobuf::Reflection::MutableRawRepeatedField((uint64_t)v11, (uint64_t)a2, this, 4, v50, 0);
          google::protobuf::RepeatedField<long long>::RepeatedField((uint64_t)&v445, (int *)v248);
          v249 = *((_DWORD *)this + 17);
          v55 = v434;
          if (*(_QWORD *)v434 <= (unint64_t)a3)
          {
            a3 = (const google::protobuf::Message *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(v434, (unsigned __int8 *)a3);
            v55 = v434;
          }
          v56 = 8 * (_DWORD)v445;
          v250 = (8 * v249) | 2;
          if (v250 > 0x7F)
          {
            *(_BYTE *)a3 = (8 * v249) | 0x82;
            v294 = (8 * v249) >> 7;
            if (v250 >> 14)
            {
              v251 = (char *)a3 + 2;
              do
              {
                *(v251 - 1) = v294 | 0x80;
                v312 = v294 >> 7;
                ++v251;
                v313 = v294 >> 14;
                v294 >>= 7;
              }
              while (v313);
              *(v251 - 1) = v312;
            }
            else
            {
              *((_BYTE *)a3 + 1) = v294;
              v251 = (char *)a3 + 2;
            }
          }
          else
          {
            *(_BYTE *)a3 = v250;
            v251 = (char *)a3 + 1;
          }
          if (v56 >= 0x80)
          {
            v419 = v56;
            do
            {
              *v251++ = v419 | 0x80;
              v314 = v419 >> 7;
              v420 = v419 >> 14;
              v419 >>= 7;
            }
            while (v420);
          }
          else
          {
            LOBYTE(v314) = v56;
          }
          *v251 = v314;
          v310 = v251 + 1;
          v311 = v446;
          if (*(_QWORD *)v55 - (_QWORD)v310 < v56)
            goto LABEL_689;
          goto LABEL_520;
        case 7:
          v272 = google::protobuf::Reflection::MutableRawRepeatedField((uint64_t)v11, (uint64_t)a2, this, 3, v50, 0);
          google::protobuf::RepeatedField<int>::RepeatedField((uint64_t)&v445, (int *)v272);
          v273 = *((_DWORD *)this + 17);
          v55 = v434;
          if (*(_QWORD *)v434 <= (unint64_t)a3)
          {
            a3 = (const google::protobuf::Message *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(v434, (unsigned __int8 *)a3);
            v55 = v434;
          }
          v56 = 4 * (_DWORD)v445;
          v274 = (8 * v273) | 2;
          if (v274 > 0x7F)
          {
            *(_BYTE *)a3 = (8 * v273) | 0x82;
            v298 = (8 * v273) >> 7;
            if (v274 >> 14)
            {
              v275 = (char *)a3 + 2;
              do
              {
                *(v275 - 1) = v298 | 0x80;
                v324 = v298 >> 7;
                ++v275;
                v325 = v298 >> 14;
                v298 >>= 7;
              }
              while (v325);
              *(v275 - 1) = v324;
            }
            else
            {
              *((_BYTE *)a3 + 1) = v298;
              v275 = (char *)a3 + 2;
            }
          }
          else
          {
            *(_BYTE *)a3 = v274;
            v275 = (char *)a3 + 1;
          }
          if (v56 >= 0x80)
          {
            v427 = v56;
            do
            {
              *v275++ = v427 | 0x80;
              v326 = v427 >> 7;
              v428 = v427 >> 14;
              v427 >>= 7;
            }
            while (v428);
          }
          else
          {
            LOBYTE(v326) = v56;
          }
          *v275 = v326;
          v310 = v275 + 1;
          v311 = v446;
          if (*(_QWORD *)v55 - (_QWORD)v310 >= v56)
            goto LABEL_520;
          goto LABEL_689;
        case 8:
          v276 = google::protobuf::Reflection::MutableRawRepeatedField((uint64_t)v11, (uint64_t)a2, this, 7, v50, 0);
          google::protobuf::RepeatedField<BOOL>::RepeatedField((uint64_t)&v445, (int *)v276);
          v277 = *((_DWORD *)this + 17);
          if (*(_QWORD *)v434 <= (unint64_t)a3)
            a3 = (const google::protobuf::Message *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(v434, (unsigned __int8 *)a3);
          v56 = (int)v445;
          v278 = (8 * v277) | 2;
          if (v278 > 0x7F)
          {
            *(_BYTE *)a3 = (8 * v277) | 0x82;
            v299 = (8 * v277) >> 7;
            if (v278 >> 14)
            {
              v279 = (char *)a3 + 2;
              do
              {
                *(v279 - 1) = v299 | 0x80;
                v329 = v299 >> 7;
                ++v279;
                v330 = v299 >> 14;
                v299 >>= 7;
              }
              while (v330);
              *(v279 - 1) = v329;
            }
            else
            {
              *((_BYTE *)a3 + 1) = v299;
              v279 = (char *)a3 + 2;
            }
          }
          else
          {
            *(_BYTE *)a3 = v278;
            v279 = (char *)a3 + 1;
          }
          v331 = v56;
          if (v56 >= 0x80)
          {
            v429 = v56;
            do
            {
              *v279++ = v429 | 0x80;
              v332 = v429 >> 7;
              v430 = v429 >> 14;
              v429 >>= 7;
            }
            while (v430);
          }
          else
          {
            LOBYTE(v332) = v56;
          }
          *v279 = v332;
          v310 = v279 + 1;
          v311 = v446;
          v55 = v434;
          if (*(_QWORD *)v434 - (_QWORD)v310 < v56)
            goto LABEL_689;
          memcpy(v310, v446, v56);
          a3 = (const google::protobuf::Message *)&v310[v331];
          goto LABEL_521;
        case 0xD:
          v286 = google::protobuf::Reflection::MutableRawRepeatedField((uint64_t)v11, (uint64_t)a2, this, 3, v50, 0);
          google::protobuf::RepeatedField<int>::RepeatedField((uint64_t)&v445, (int *)v286);
          v287 = *((_DWORD *)this + 17);
          v289 = google::protobuf::internal::WireFormat::FieldDataOnlyByteSize(this, a2, v288);
          if (*(_QWORD *)v434 <= (unint64_t)a3)
            a3 = (const google::protobuf::Message *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(v434, (unsigned __int8 *)a3);
          v290 = (8 * v287) | 2;
          if (v290 > 0x7F)
          {
            *(_BYTE *)a3 = (8 * v287) | 0x82;
            v306 = (8 * v287) >> 7;
            if (v290 >> 14)
            {
              v291 = (char *)a3 + 2;
              do
              {
                *(v291 - 1) = v306 | 0x80;
                v399 = v306 >> 7;
                ++v291;
                v400 = v306 >> 14;
                v306 >>= 7;
              }
              while (v400);
              *(v291 - 1) = v399;
            }
            else
            {
              *((_BYTE *)a3 + 1) = v306;
              v291 = (char *)a3 + 2;
            }
          }
          else
          {
            *(_BYTE *)a3 = v290;
            v291 = (char *)a3 + 1;
          }
          if (v289 >= 0x80)
          {
            do
            {
              *v291++ = v289 | 0x80;
              v401 = v289 >> 7;
              v416 = v289 >> 14;
              v289 >>= 7;
            }
            while (v416);
          }
          else
          {
            LOBYTE(v401) = v289;
          }
          *v291 = v401;
          a3 = (const google::protobuf::Message *)(v291 + 1);
          v402 = v446;
          v403 = (google::protobuf::MapKey **)((char *)v446 + 4 * (int)v445);
          v404 = v434;
          do
          {
            if (*(_QWORD *)v404 <= (unint64_t)a3)
              a3 = (const google::protobuf::Message *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(v404, (unsigned __int8 *)a3);
            v406 = *(_DWORD *)v402;
            v402 = (google::protobuf::MapKey **)((char *)v402 + 4);
            v405 = v406;
            if (v406 > 0x7F)
            {
              *(_BYTE *)a3 = v405 | 0x80;
              v407 = v405 >> 7;
              if (v405 >> 14)
              {
                a3 = (const google::protobuf::Message *)((char *)a3 + 2);
                do
                {
                  *((_BYTE *)a3 - 1) = v407 | 0x80;
                  v408 = v407 >> 7;
                  a3 = (const google::protobuf::Message *)((char *)a3 + 1);
                  v409 = v407 >> 14;
                  v407 >>= 7;
                }
                while (v409);
                *((_BYTE *)a3 - 1) = v408;
              }
              else
              {
                *((_BYTE *)a3 + 1) = v407;
                a3 = (const google::protobuf::Message *)((char *)a3 + 2);
              }
            }
            else
            {
              *(_BYTE *)a3 = v405;
              a3 = (const google::protobuf::Message *)((char *)a3 + 1);
            }
          }
          while (v402 < v403);
          goto LABEL_521;
        case 0xE:
          v280 = google::protobuf::Reflection::MutableRawRepeatedField((uint64_t)v11, (uint64_t)a2, this, 1, v50, 0);
          google::protobuf::RepeatedField<int>::RepeatedField((uint64_t)&v445, (int *)v280);
          v281 = *((_DWORD *)this + 17);
          v283 = google::protobuf::internal::WireFormat::FieldDataOnlyByteSize(this, a2, v282);
          if (*(_QWORD *)v434 <= (unint64_t)a3)
            a3 = (const google::protobuf::Message *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(v434, (unsigned __int8 *)a3);
          v284 = (8 * v281) | 2;
          if (v284 > 0x7F)
          {
            *(_BYTE *)a3 = (8 * v281) | 0x82;
            v305 = (8 * v281) >> 7;
            if (v284 >> 14)
            {
              v285 = (char *)a3 + 2;
              do
              {
                *(v285 - 1) = v305 | 0x80;
                v388 = v305 >> 7;
                ++v285;
                v389 = v305 >> 14;
                v305 >>= 7;
              }
              while (v389);
              *(v285 - 1) = v388;
            }
            else
            {
              *((_BYTE *)a3 + 1) = v305;
              v285 = (char *)a3 + 2;
            }
          }
          else
          {
            *(_BYTE *)a3 = v284;
            v285 = (char *)a3 + 1;
          }
          if (v283 >= 0x80)
          {
            do
            {
              *v285++ = v283 | 0x80;
              v390 = v283 >> 7;
              v415 = v283 >> 14;
              v283 >>= 7;
            }
            while (v415);
          }
          else
          {
            LOBYTE(v390) = v283;
          }
          *v285 = v390;
          a3 = (const google::protobuf::Message *)(v285 + 1);
          v391 = v446;
          v392 = (google::protobuf::MapKey **)((char *)v446 + 4 * (int)v445);
          v393 = v434;
          do
          {
            if (*(_QWORD *)v393 <= (unint64_t)a3)
              a3 = (const google::protobuf::Message *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(v393, (unsigned __int8 *)a3);
            v395 = *(int *)v391;
            v391 = (google::protobuf::MapKey **)((char *)v391 + 4);
            v394 = v395;
            if (v395 > 0x7F)
            {
              *(_BYTE *)a3 = v394 | 0x80;
              v396 = v394 >> 7;
              if (v394 >> 14)
              {
                a3 = (const google::protobuf::Message *)((char *)a3 + 2);
                do
                {
                  *((_BYTE *)a3 - 1) = v396 | 0x80;
                  v397 = v396 >> 7;
                  a3 = (const google::protobuf::Message *)((char *)a3 + 1);
                  v398 = v396 >> 14;
                  v396 >>= 7;
                }
                while (v398);
                *((_BYTE *)a3 - 1) = v397;
              }
              else
              {
                *((_BYTE *)a3 + 1) = v396;
                a3 = (const google::protobuf::Message *)((char *)a3 + 2);
              }
            }
            else
            {
              *(_BYTE *)a3 = v394;
              a3 = (const google::protobuf::Message *)((char *)a3 + 1);
            }
          }
          while (v391 < v392);
          goto LABEL_521;
        case 0xF:
          v232 = google::protobuf::Reflection::MutableRawRepeatedField((uint64_t)v11, (uint64_t)a2, this, 1, v50, 0);
          google::protobuf::RepeatedField<int>::RepeatedField((uint64_t)&v445, (int *)v232);
          v233 = *((_DWORD *)this + 17);
          v55 = v434;
          if (*(_QWORD *)v434 <= (unint64_t)a3)
          {
            a3 = (const google::protobuf::Message *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(v434, (unsigned __int8 *)a3);
            v55 = v434;
          }
          v56 = 4 * (_DWORD)v445;
          v234 = (8 * v233) | 2;
          if (v234 > 0x7F)
          {
            *(_BYTE *)a3 = (8 * v233) | 0x82;
            v293 = (8 * v233) >> 7;
            if (v234 >> 14)
            {
              v235 = (char *)a3 + 2;
              do
              {
                *(v235 - 1) = v293 | 0x80;
                v307 = v293 >> 7;
                ++v235;
                v308 = v293 >> 14;
                v293 >>= 7;
              }
              while (v308);
              *(v235 - 1) = v307;
            }
            else
            {
              *((_BYTE *)a3 + 1) = v293;
              v235 = (char *)a3 + 2;
            }
          }
          else
          {
            *(_BYTE *)a3 = v234;
            v235 = (char *)a3 + 1;
          }
          if (v56 >= 0x80)
          {
            v417 = v56;
            do
            {
              *v235++ = v417 | 0x80;
              v309 = v417 >> 7;
              v418 = v417 >> 14;
              v417 >>= 7;
            }
            while (v418);
          }
          else
          {
            LOBYTE(v309) = v56;
          }
          *v235 = v309;
          v310 = v235 + 1;
          v311 = v446;
          if (*(_QWORD *)v55 - (_QWORD)v310 < v56)
            goto LABEL_689;
          goto LABEL_520;
        case 0x10:
          v252 = google::protobuf::Reflection::MutableRawRepeatedField((uint64_t)v11, (uint64_t)a2, this, 2, v50, 0);
          google::protobuf::RepeatedField<long long>::RepeatedField((uint64_t)&v445, (int *)v252);
          v253 = *((_DWORD *)this + 17);
          v55 = v434;
          if (*(_QWORD *)v434 <= (unint64_t)a3)
          {
            a3 = (const google::protobuf::Message *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(v434, (unsigned __int8 *)a3);
            v55 = v434;
          }
          v56 = 8 * (_DWORD)v445;
          v254 = (8 * v253) | 2;
          if (v254 > 0x7F)
          {
            *(_BYTE *)a3 = (8 * v253) | 0x82;
            v295 = (8 * v253) >> 7;
            if (v254 >> 14)
            {
              v255 = (char *)a3 + 2;
              do
              {
                *(v255 - 1) = v295 | 0x80;
                v315 = v295 >> 7;
                ++v255;
                v316 = v295 >> 14;
                v295 >>= 7;
              }
              while (v316);
              *(v255 - 1) = v315;
            }
            else
            {
              *((_BYTE *)a3 + 1) = v295;
              v255 = (char *)a3 + 2;
            }
          }
          else
          {
            *(_BYTE *)a3 = v254;
            v255 = (char *)a3 + 1;
          }
          if (v56 >= 0x80)
          {
            v421 = v56;
            do
            {
              *v255++ = v421 | 0x80;
              v317 = v421 >> 7;
              v422 = v421 >> 14;
              v421 >>= 7;
            }
            while (v422);
          }
          else
          {
            LOBYTE(v317) = v56;
          }
          *v255 = v317;
          v310 = v255 + 1;
          v311 = v446;
          if (*(_QWORD *)v55 - (_QWORD)v310 >= v56)
          {
LABEL_520:
            v327 = v56;
            memcpy(v310, v311, v56);
            a3 = (const google::protobuf::Message *)&v310[v327];
          }
          else
          {
LABEL_689:
            a3 = (const google::protobuf::Message *)google::protobuf::io::EpsCopyOutputStream::WriteRawFallback(v55, (char *)v311, v56, (unsigned __int8 *)v310);
          }
          goto LABEL_521;
        case 0x11:
          v242 = google::protobuf::Reflection::MutableRawRepeatedField((uint64_t)v11, (uint64_t)a2, this, 1, v50, 0);
          google::protobuf::RepeatedField<int>::RepeatedField((uint64_t)&v445, (int *)v242);
          v243 = *((_DWORD *)this + 17);
          v245 = google::protobuf::internal::WireFormat::FieldDataOnlyByteSize(this, a2, v244);
          if (*(_QWORD *)v434 <= (unint64_t)a3)
            a3 = (const google::protobuf::Message *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(v434, (unsigned __int8 *)a3);
          v246 = (8 * v243) | 2;
          if (v246 > 0x7F)
          {
            *(_BYTE *)a3 = (8 * v243) | 0x82;
            v302 = (8 * v243) >> 7;
            if (v246 >> 14)
            {
              v247 = (char *)a3 + 2;
              do
              {
                *(v247 - 1) = v302 | 0x80;
                v355 = v302 >> 7;
                ++v247;
                v356 = v302 >> 14;
                v302 >>= 7;
              }
              while (v356);
              *(v247 - 1) = v355;
            }
            else
            {
              *((_BYTE *)a3 + 1) = v302;
              v247 = (char *)a3 + 2;
            }
          }
          else
          {
            *(_BYTE *)a3 = v246;
            v247 = (char *)a3 + 1;
          }
          if (v245 >= 0x80)
          {
            do
            {
              *v247++ = v245 | 0x80;
              v357 = v245 >> 7;
              v412 = v245 >> 14;
              v245 >>= 7;
            }
            while (v412);
          }
          else
          {
            LOBYTE(v357) = v245;
          }
          *v247 = v357;
          a3 = (const google::protobuf::Message *)(v247 + 1);
          v358 = v446;
          v359 = (google::protobuf::MapKey **)((char *)v446 + 4 * (int)v445);
          v360 = v434;
          do
          {
            if (*(_QWORD *)v360 <= (unint64_t)a3)
              a3 = (const google::protobuf::Message *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(v360, (unsigned __int8 *)a3);
            v361 = *(_DWORD *)v358;
            v358 = (google::protobuf::MapKey **)((char *)v358 + 4);
            v362 = (2 * v361) ^ (v361 >> 31);
            if (v362 > 0x7F)
            {
              *(_BYTE *)a3 = v362 | 0x80;
              v363 = v362 >> 7;
              if (v362 >> 14)
              {
                a3 = (const google::protobuf::Message *)((char *)a3 + 2);
                do
                {
                  *((_BYTE *)a3 - 1) = v363 | 0x80;
                  v364 = v363 >> 7;
                  a3 = (const google::protobuf::Message *)((char *)a3 + 1);
                  v365 = v363 >> 14;
                  v363 >>= 7;
                }
                while (v365);
                *((_BYTE *)a3 - 1) = v364;
              }
              else
              {
                *((_BYTE *)a3 + 1) = v363;
                a3 = (const google::protobuf::Message *)((char *)a3 + 2);
              }
            }
            else
            {
              *(_BYTE *)a3 = v362;
              a3 = (const google::protobuf::Message *)((char *)a3 + 1);
            }
          }
          while (v358 < v359);
          goto LABEL_521;
        case 0x12:
          v226 = google::protobuf::Reflection::MutableRawRepeatedField((uint64_t)v11, (uint64_t)a2, this, 2, v50, 0);
          google::protobuf::RepeatedField<long long>::RepeatedField((uint64_t)&v445, (int *)v226);
          v227 = *((_DWORD *)this + 17);
          v229 = google::protobuf::internal::WireFormat::FieldDataOnlyByteSize(this, a2, v228);
          if (*(_QWORD *)v434 <= (unint64_t)a3)
            a3 = (const google::protobuf::Message *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(v434, (unsigned __int8 *)a3);
          v230 = (8 * v227) | 2;
          if (v230 > 0x7F)
          {
            *(_BYTE *)a3 = (8 * v227) | 0x82;
            v300 = (8 * v227) >> 7;
            if (v230 >> 14)
            {
              v231 = (char *)a3 + 2;
              do
              {
                *(v231 - 1) = v300 | 0x80;
                v333 = v300 >> 7;
                ++v231;
                v334 = v300 >> 14;
                v300 >>= 7;
              }
              while (v334);
              *(v231 - 1) = v333;
            }
            else
            {
              *((_BYTE *)a3 + 1) = v300;
              v231 = (char *)a3 + 2;
            }
          }
          else
          {
            *(_BYTE *)a3 = v230;
            v231 = (char *)a3 + 1;
          }
          if (v229 >= 0x80)
          {
            do
            {
              *v231++ = v229 | 0x80;
              v335 = v229 >> 7;
              v410 = v229 >> 14;
              v229 >>= 7;
            }
            while (v410);
          }
          else
          {
            LOBYTE(v335) = v229;
          }
          *v231 = v335;
          a3 = (const google::protobuf::Message *)(v231 + 1);
          v336 = v446;
          v337 = &v446[(int)v445];
          v338 = v434;
          do
          {
            if (*(_QWORD *)v338 <= (unint64_t)a3)
              a3 = (const google::protobuf::Message *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(v338, (unsigned __int8 *)a3);
            v339 = (uint64_t)*v336++;
            v340 = (2 * v339) ^ (v339 >> 63);
            if (v340 > 0x7F)
            {
              *(_BYTE *)a3 = v340 | 0x80;
              v341 = v340 >> 7;
              if (v340 >> 14)
              {
                a3 = (const google::protobuf::Message *)((char *)a3 + 2);
                do
                {
                  *((_BYTE *)a3 - 1) = v341 | 0x80;
                  v342 = v341 >> 7;
                  a3 = (const google::protobuf::Message *)((char *)a3 + 1);
                  v343 = v341 >> 14;
                  v341 >>= 7;
                }
                while (v343);
                *((_BYTE *)a3 - 1) = v342;
              }
              else
              {
                *((_BYTE *)a3 + 1) = v341;
                a3 = (const google::protobuf::Message *)((char *)a3 + 2);
              }
            }
            else
            {
              *(_BYTE *)a3 = v340;
              a3 = (const google::protobuf::Message *)((char *)a3 + 1);
            }
          }
          while (v336 < v337);
LABEL_521:
          if (SHIDWORD(v445) >= 1)
          {
            v292 = v446 - 1;
            if (!*(v446 - 1))
              goto LABEL_523;
          }
          break;
        default:
          LODWORD(v445) = 3;
          v446 = (google::protobuf::MapKey **)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/p"
                                              "rotobuf/wire_format.cc";
          LODWORD(v447) = 1319;
          memset(&v448, 0, sizeof(v448));
          std::string::append(&v448, "Invalid descriptor");
          google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v445);
          if ((SHIBYTE(v448.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
            break;
          v292 = (google::protobuf::MapKey **)v448.__r_.__value_.__r.__words[0];
LABEL_523:
          operator delete(v292);
          break;
      }
    }
  }
  else if (v17 >= 1)
  {
    v431 = v48;
    v59 = 0;
    while (2)
    {
      if (*(_QWORD *)v434 <= (unint64_t)a3)
        a3 = (const google::protobuf::Message *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(v434, (unsigned __int8 *)a3);
      v60 = (unint64_t *)*((_QWORD *)this + 6);
      if (v60)
      {
        v436 = google::protobuf::FieldDescriptor::TypeOnceInit;
        v435[0] = this;
        v61 = atomic_load(v60);
        if (v61 != -1)
        {
          v445 = (google::protobuf::MapKey **)&v436;
          v446 = v435;
          v442 = &v445;
          std::__call_once(v60, &v442, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
        }
      }
      switch(*((_DWORD *)this + 14))
      {
        case 1:
          if (*((_DWORD *)this + 15) == 3)
            RepeatedDouble = google::protobuf::Reflection::GetRepeatedDouble(v11, a2, this, v59, v50);
          else
            RepeatedDouble = google::protobuf::Reflection::GetDouble(v11, a2, this, v49, v50);
          v99 = *((_DWORD *)this + 17);
          v100 = (8 * v99) | 1;
          if (v100 > 0x7F)
          {
            *(_BYTE *)a3 = (8 * v99) | 0x81;
            v117 = (8 * v99) >> 7;
            if (v100 >> 14)
            {
              v101 = (double *)((char *)a3 + 2);
              do
              {
                *((_BYTE *)v101 - 1) = v117 | 0x80;
                v152 = v117 >> 7;
                v101 = (double *)((char *)v101 + 1);
                v153 = v117 >> 14;
                v117 >>= 7;
              }
              while (v153);
              *((_BYTE *)v101 - 1) = v152;
            }
            else
            {
              *((_BYTE *)a3 + 1) = v117;
              v101 = (double *)((char *)a3 + 2);
            }
          }
          else
          {
            *(_BYTE *)a3 = v100;
            v101 = (double *)((char *)a3 + 1);
          }
          *v101 = RepeatedDouble;
          a3 = (const google::protobuf::Message *)(v101 + 1);
          goto LABEL_341;
        case 2:
          if (*((_DWORD *)this + 15) == 3)
            RepeatedFloat = google::protobuf::Reflection::GetRepeatedFloat(v11, a2, this, v59, v50);
          else
            RepeatedFloat = google::protobuf::Reflection::GetFloat(v11, a2, this, v49, v50);
          v102 = *((_DWORD *)this + 17);
          v103 = (8 * v102) | 5;
          if (v103 > 0x7F)
          {
            *(_BYTE *)a3 = (8 * v102) | 0x85;
            v118 = (8 * v102) >> 7;
            if (v103 >> 14)
            {
              v104 = (float *)((char *)a3 + 2);
              do
              {
                *((_BYTE *)v104 - 1) = v118 | 0x80;
                v154 = v118 >> 7;
                v104 = (float *)((char *)v104 + 1);
                v155 = v118 >> 14;
                v118 >>= 7;
              }
              while (v155);
              *((_BYTE *)v104 - 1) = v154;
            }
            else
            {
              *((_BYTE *)a3 + 1) = v118;
              v104 = (float *)((char *)a3 + 2);
            }
          }
          else
          {
            *(_BYTE *)a3 = v103;
            v104 = (float *)((char *)a3 + 1);
          }
          *v104 = RepeatedFloat;
          a3 = (const google::protobuf::Message *)(v104 + 1);
          goto LABEL_341;
        case 3:
          if (*((_DWORD *)this + 15) == 3)
            RepeatedInt64 = google::protobuf::Reflection::GetRepeatedInt64(v11, a2, this, v59, v50);
          else
            RepeatedInt64 = google::protobuf::Reflection::GetInt64(v11, a2, this, v49, v50);
          v90 = 8 * *((_DWORD *)this + 17);
          if (v90 > 0x7F)
          {
            *(_BYTE *)a3 = v90 | 0x80;
            v114 = v90 >> 7;
            if (v90 >> 14)
            {
              v78 = (unsigned __int8 *)a3 + 2;
              do
              {
                *(v78 - 1) = v114 | 0x80;
                v144 = v114 >> 7;
                ++v78;
                v145 = v114 >> 14;
                v114 >>= 7;
              }
              while (v145);
              *(v78 - 1) = v144;
            }
            else
            {
              *((_BYTE *)a3 + 1) = v114;
              v78 = (unsigned __int8 *)a3 + 2;
            }
          }
          else
          {
            *(_BYTE *)a3 = v90;
            v78 = (unsigned __int8 *)a3 + 1;
          }
          if (RepeatedInt64 <= 0x7F)
            goto LABEL_253;
          *v78 = RepeatedInt64 | 0x80;
          v138 = RepeatedInt64 >> 7;
          if (!(RepeatedInt64 >> 14))
            goto LABEL_276;
          a3 = (const google::protobuf::Message *)(v78 + 2);
          do
          {
            *((_BYTE *)a3 - 1) = v138 | 0x80;
            v139 = v138 >> 7;
            a3 = (const google::protobuf::Message *)((char *)a3 + 1);
            v146 = v138 >> 14;
            v138 >>= 7;
          }
          while (v146);
          goto LABEL_279;
        case 4:
          if (*((_DWORD *)this + 15) == 3)
            RepeatedInt64 = google::protobuf::Reflection::GetRepeatedUInt64(v11, a2, this, v59, v50);
          else
            RepeatedInt64 = google::protobuf::Reflection::GetUInt64(v11, a2, this, v49, v50);
          v97 = 8 * *((_DWORD *)this + 17);
          if (v97 > 0x7F)
          {
            *(_BYTE *)a3 = v97 | 0x80;
            v115 = v97 >> 7;
            if (v97 >> 14)
            {
              v78 = (unsigned __int8 *)a3 + 2;
              do
              {
                *(v78 - 1) = v115 | 0x80;
                v147 = v115 >> 7;
                ++v78;
                v148 = v115 >> 14;
                v115 >>= 7;
              }
              while (v148);
              *(v78 - 1) = v147;
            }
            else
            {
              *((_BYTE *)a3 + 1) = v115;
              v78 = (unsigned __int8 *)a3 + 2;
            }
          }
          else
          {
            *(_BYTE *)a3 = v97;
            v78 = (unsigned __int8 *)a3 + 1;
          }
          if (RepeatedInt64 <= 0x7F)
            goto LABEL_253;
          *v78 = RepeatedInt64 | 0x80;
          v138 = RepeatedInt64 >> 7;
          if (!(RepeatedInt64 >> 14))
            goto LABEL_276;
          a3 = (const google::protobuf::Message *)(v78 + 2);
          do
          {
            *((_BYTE *)a3 - 1) = v138 | 0x80;
            v139 = v138 >> 7;
            a3 = (const google::protobuf::Message *)((char *)a3 + 1);
            v149 = v138 >> 14;
            v138 >>= 7;
          }
          while (v149);
          goto LABEL_279;
        case 5:
          if (*((_DWORD *)this + 15) == 3)
            LODWORD(RepeatedInt64) = google::protobuf::Reflection::GetRepeatedInt32(v11, a2, this, v59, v50);
          else
            LODWORD(RepeatedInt64) = google::protobuf::Reflection::GetInt32(v11, a2, this, v49, v50);
          v88 = 8 * *((_DWORD *)this + 17);
          if (v88 > 0x7F)
          {
            *(_BYTE *)a3 = v88 | 0x80;
            v112 = v88 >> 7;
            if (v88 >> 14)
            {
              v78 = (unsigned __int8 *)a3 + 2;
              do
              {
                *(v78 - 1) = v112 | 0x80;
                v136 = v112 >> 7;
                ++v78;
                v137 = v112 >> 14;
                v112 >>= 7;
              }
              while (v137);
              *(v78 - 1) = v136;
            }
            else
            {
              *((_BYTE *)a3 + 1) = v112;
              v78 = (unsigned __int8 *)a3 + 2;
            }
          }
          else
          {
            *(_BYTE *)a3 = v88;
            v78 = (unsigned __int8 *)a3 + 1;
          }
          if (RepeatedInt64 <= 0x7F)
          {
LABEL_253:
            *v78 = RepeatedInt64;
            a3 = (const google::protobuf::Message *)(v78 + 1);
            goto LABEL_341;
          }
          *v78 = RepeatedInt64 | 0x80;
          v138 = (unint64_t)(int)RepeatedInt64 >> 7;
          if (!(RepeatedInt64 >> 14))
            goto LABEL_276;
          a3 = (const google::protobuf::Message *)(v78 + 2);
          do
          {
            *((_BYTE *)a3 - 1) = v138 | 0x80;
            v139 = v138 >> 7;
            a3 = (const google::protobuf::Message *)((char *)a3 + 1);
            v140 = v138 >> 14;
            v138 >>= 7;
          }
          while (v140);
          goto LABEL_279;
        case 6:
          if (*((_DWORD *)this + 15) == 3)
            RepeatedUInt64 = google::protobuf::Reflection::GetRepeatedUInt64(v11, a2, this, v59, v50);
          else
            RepeatedUInt64 = google::protobuf::Reflection::GetUInt64(v11, a2, this, v49, v50);
          v106 = *((_DWORD *)this + 17);
          v92 = (8 * v106) | 1;
          if (v92 <= 0x7F)
            goto LABEL_153;
          *(_BYTE *)a3 = (8 * v106) | 0x81;
          v93 = (8 * v106) >> 7;
          if (!(v92 >> 14))
            goto LABEL_183;
          v94 = (char *)a3 + 2;
          do
          {
            *(v94 - 1) = v93 | 0x80;
            v95 = v93 >> 7;
            ++v94;
            v160 = v93 >> 14;
            v93 >>= 7;
          }
          while (v160);
          goto LABEL_282;
        case 7:
          if (*((_DWORD *)this + 15) == 3)
            RepeatedUInt32 = google::protobuf::Reflection::GetRepeatedUInt32(v11, a2, this, v59, v50);
          else
            RepeatedUInt32 = google::protobuf::Reflection::GetUInt32(v11, a2, this, v49, v50);
          v109 = *((_DWORD *)this + 17);
          v80 = (8 * v109) | 5;
          if (v80 <= 0x7F)
            goto LABEL_159;
          *(_BYTE *)a3 = (8 * v109) | 0x85;
          v81 = (8 * v109) >> 7;
          if (!(v80 >> 14))
            goto LABEL_187;
          v82 = (char *)a3 + 2;
          do
          {
            *(v82 - 1) = v81 | 0x80;
            v83 = v81 >> 7;
            ++v82;
            v166 = v81 >> 14;
            v81 >>= 7;
          }
          while (v166);
          goto LABEL_296;
        case 8:
          if (*((_DWORD *)this + 15) == 3)
            LOBYTE(UInt32) = google::protobuf::Reflection::GetRepeatedBool(v11, a2, this, v59, v50);
          else
            LOBYTE(UInt32) = google::protobuf::Reflection::GetBool(v11, a2, this, v49, v50);
          v98 = 8 * *((_DWORD *)this + 17);
          if (v98 > 0x7F)
          {
            *(_BYTE *)a3 = v98 | 0x80;
            v116 = v98 >> 7;
            if (v98 >> 14)
            {
              v78 = (unsigned __int8 *)a3 + 2;
              do
              {
                *(v78 - 1) = v116 | 0x80;
                v150 = v116 >> 7;
                ++v78;
                v151 = v116 >> 14;
                v116 >>= 7;
              }
              while (v151);
              *(v78 - 1) = v150;
            }
            else
            {
              *((_BYTE *)a3 + 1) = v116;
              v78 = (unsigned __int8 *)a3 + 2;
            }
          }
          else
          {
            *(_BYTE *)a3 = v98;
            v78 = (unsigned __int8 *)a3 + 1;
          }
          goto LABEL_261;
        case 9:
          v445 = 0;
          v446 = 0;
          v447 = 0;
          if (*((_DWORD *)this + 15) == 3)
            RepeatedStringReference = google::protobuf::Reflection::GetRepeatedStringReference((uint64_t)v11, (uint64_t)a2, this, v59, (const char *)&v445);
          else
            RepeatedStringReference = google::protobuf::Reflection::GetStringReference((uint64_t)v11, (uint64_t)a2, this, (uint64_t)&v445, v50);
          v85 = (const void **)RepeatedStringReference;
          v86 = *((_DWORD *)this + 17);
          if (*(char *)(RepeatedStringReference + 23) < 0)
          {
            v87 = *(_QWORD *)(RepeatedStringReference + 8);
            if (v87 > 127)
              goto LABEL_343;
          }
          else
          {
            v87 = *(unsigned __int8 *)(RepeatedStringReference + 23);
          }
          v128 = 8 * v86;
          v129 = 4;
          if ((8 * v86) >> 28)
            v129 = 5;
          if (v128 < 0x200000)
            v129 = 3;
          if (v128 < 0x4000)
            v129 = 2;
          if (v128 < 0x80)
            v129 = 1;
          if ((uint64_t)(*(_QWORD *)v434 + ~((unint64_t)a3 + v129) + 16) < v87)
            goto LABEL_343;
          v123 = v128 | 2;
          if ((v128 | 2) <= 0x7F)
            goto LABEL_214;
          *(_BYTE *)a3 = v128 | 0x82;
          v124 = v128 >> 7;
          if (!(v123 >> 14))
            goto LABEL_216;
          v125 = (char *)a3 + 2;
          do
          {
            *(v125 - 1) = v124 | 0x80;
            v126 = v124 >> 7;
            ++v125;
            v167 = v124 >> 14;
            v124 >>= 7;
          }
          while (v167);
          goto LABEL_300;
        case 0xA:
          v68 = *((_DWORD *)this + 17);
          if (*((_DWORD *)this + 15) == 3)
          {
            if ((char *)v47 == (char *)v431)
              RepeatedMessage = google::protobuf::Reflection::GetRepeatedMessage(v11, a2, this, v59, v50);
            else
              RepeatedMessage = *((_QWORD *)v47 + v59);
          }
          else
          {
            RepeatedMessage = google::protobuf::Reflection::GetMessage(v11, a2, this, 0, v50);
          }
          v169 = 8 * v68;
          v170 = (8 * v68) | 3;
          if (v170 > 0x7F)
          {
            *(_BYTE *)a3 = (8 * v68) | 0x83;
            v172 = v169 >> 7;
            if (v170 >> 14)
            {
              v171 = (char *)a3 + 2;
              do
              {
                *(v171 - 1) = v172 | 0x80;
                v173 = v172 >> 7;
                ++v171;
                v174 = v172 >> 14;
                v172 >>= 7;
              }
              while (v174);
              *(v171 - 1) = v173;
            }
            else
            {
              *((_BYTE *)a3 + 1) = v172;
              v171 = (char *)a3 + 2;
            }
          }
          else
          {
            *(_BYTE *)a3 = v170;
            v171 = (char *)a3 + 1;
          }
          v78 = (unsigned __int8 *)(*(uint64_t (**)(uint64_t, char *, google::protobuf::io::EpsCopyOutputStream *))(*(_QWORD *)RepeatedMessage + 96))(RepeatedMessage, v171, v434);
          if (*(_QWORD *)v434 <= (unint64_t)v78)
            v78 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(v434, v78);
          v132 = v169 | 4;
          if ((v169 | 4) <= 0x7F)
            goto LABEL_317;
          *v78 = v169 | 0x84;
          v133 = v169 >> 7;
          if (!(v132 >> 14))
            goto LABEL_319;
          a3 = (const google::protobuf::Message *)(v78 + 2);
          do
          {
            *((_BYTE *)a3 - 1) = v133 | 0x80;
            v134 = v133 >> 7;
            a3 = (const google::protobuf::Message *)((char *)a3 + 1);
            v175 = v133 >> 14;
            v133 >>= 7;
          }
          while (v175);
          goto LABEL_323;
        case 0xB:
          v74 = *((_DWORD *)this + 17);
          if (*((_DWORD *)this + 15) == 3)
          {
            if ((char *)v47 != (char *)v431)
            {
              v75 = *((_QWORD *)v47 + v59);
              goto LABEL_326;
            }
            v110 = google::protobuf::Reflection::GetRepeatedMessage(v11, a2, this, v59, v50);
          }
          else
          {
            v110 = google::protobuf::Reflection::GetMessage(v11, a2, this, 0, v50);
          }
          v75 = v110;
LABEL_326:
          v176 = (8 * v74) | 2;
          if (v176 > 0x7F)
          {
            *(_BYTE *)a3 = (8 * v74) | 0x82;
            v178 = (8 * v74) >> 7;
            if (v176 >> 14)
            {
              v177 = (char *)a3 + 2;
              do
              {
                *(v177 - 1) = v178 | 0x80;
                v179 = v178 >> 7;
                ++v177;
                v180 = v178 >> 14;
                v178 >>= 7;
              }
              while (v180);
              *(v177 - 1) = v179;
            }
            else
            {
              *((_BYTE *)a3 + 1) = v178;
              v177 = (char *)a3 + 2;
            }
          }
          else
          {
            *(_BYTE *)a3 = v176;
            v177 = (char *)a3 + 1;
          }
          v181 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v75 + 80))(v75);
          if (v181 > 0x7F)
          {
            *v177 = v181 | 0x80;
            v183 = v181 >> 7;
            if (v181 >> 14)
            {
              v182 = v177 + 2;
              do
              {
                *(v182 - 1) = v183 | 0x80;
                v184 = v183 >> 7;
                ++v182;
                v185 = v183 >> 14;
                v183 >>= 7;
              }
              while (v185);
              *(v182 - 1) = v184;
            }
            else
            {
              v177[1] = v183;
              v182 = v177 + 2;
            }
          }
          else
          {
            *v177 = v181;
            v182 = v177 + 1;
          }
          a3 = (const google::protobuf::Message *)(*(uint64_t (**)(uint64_t, char *, google::protobuf::io::EpsCopyOutputStream *))(*(_QWORD *)v75 + 96))(v75, v182, v434);
          goto LABEL_341;
        case 0xC:
          v445 = 0;
          v446 = 0;
          v447 = 0;
          if (*((_DWORD *)this + 15) == 3)
            StringReference = google::protobuf::Reflection::GetRepeatedStringReference((uint64_t)v11, (uint64_t)a2, this, v59, (const char *)&v445);
          else
            StringReference = google::protobuf::Reflection::GetStringReference((uint64_t)v11, (uint64_t)a2, this, (uint64_t)&v445, v50);
          v85 = (const void **)StringReference;
          v86 = *((_DWORD *)this + 17);
          if (*(char *)(StringReference + 23) < 0)
          {
            v87 = *(_QWORD *)(StringReference + 8);
            if (v87 > 127)
              goto LABEL_343;
          }
          else
          {
            v87 = *(unsigned __int8 *)(StringReference + 23);
          }
          v121 = 8 * v86;
          v122 = 4;
          if ((8 * v86) >> 28)
            v122 = 5;
          if (v121 < 0x200000)
            v122 = 3;
          if (v121 < 0x4000)
            v122 = 2;
          if (v121 < 0x80)
            v122 = 1;
          if ((uint64_t)(*(_QWORD *)v434 + ~((unint64_t)a3 + v122) + 16) < v87)
          {
LABEL_343:
            a3 = (const google::protobuf::Message *)google::protobuf::io::EpsCopyOutputStream::WriteStringOutline(v434, v86, (uint64_t)v85, (unsigned __int8 *)a3);
            goto LABEL_304;
          }
          v123 = v121 | 2;
          if ((v121 | 2) <= 0x7F)
          {
LABEL_214:
            *(_BYTE *)a3 = v123;
            v125 = (char *)a3 + 1;
          }
          else
          {
            *(_BYTE *)a3 = v121 | 0x82;
            v124 = v121 >> 7;
            if (v123 >> 14)
            {
              v125 = (char *)a3 + 2;
              do
              {
                *(v125 - 1) = v124 | 0x80;
                v126 = v124 >> 7;
                ++v125;
                v127 = v124 >> 14;
                v124 >>= 7;
              }
              while (v127);
LABEL_300:
              *(v125 - 1) = v126;
            }
            else
            {
LABEL_216:
              *((_BYTE *)a3 + 1) = v124;
              v125 = (char *)a3 + 2;
            }
          }
          *v125 = v87;
          v168 = v125 + 1;
          if (*((char *)v85 + 23) < 0)
            v85 = (const void **)*v85;
          memcpy(v168, v85, v87);
          a3 = (const google::protobuf::Message *)&v168[v87];
LABEL_304:
          if (SHIBYTE(v447) < 0)
            operator delete(v445);
LABEL_341:
          if (++v59 == v17)
            break;
          continue;
        case 0xD:
          if (*((_DWORD *)this + 15) == 3)
            UInt32 = google::protobuf::Reflection::GetRepeatedUInt32(v11, a2, this, v59, v50);
          else
            UInt32 = google::protobuf::Reflection::GetUInt32(v11, a2, this, v49, v50);
          v89 = 8 * *((_DWORD *)this + 17);
          if (v89 > 0x7F)
          {
            *(_BYTE *)a3 = v89 | 0x80;
            v113 = v89 >> 7;
            if (v89 >> 14)
            {
              v78 = (unsigned __int8 *)a3 + 2;
              do
              {
                *(v78 - 1) = v113 | 0x80;
                v141 = v113 >> 7;
                ++v78;
                v142 = v113 >> 14;
                v113 >>= 7;
              }
              while (v142);
              *(v78 - 1) = v141;
            }
            else
            {
              *((_BYTE *)a3 + 1) = v113;
              v78 = (unsigned __int8 *)a3 + 2;
            }
          }
          else
          {
            *(_BYTE *)a3 = v89;
            v78 = (unsigned __int8 *)a3 + 1;
          }
          if (UInt32 <= 0x7F)
          {
LABEL_261:
            *v78 = UInt32;
            a3 = (const google::protobuf::Message *)(v78 + 1);
            goto LABEL_341;
          }
          *v78 = UInt32 | 0x80;
          v133 = UInt32 >> 7;
          if (!(UInt32 >> 14))
            goto LABEL_319;
          a3 = (const google::protobuf::Message *)(v78 + 2);
          do
          {
            *((_BYTE *)a3 - 1) = v133 | 0x80;
            v134 = v133 >> 7;
            a3 = (const google::protobuf::Message *)((char *)a3 + 1);
            v143 = v133 >> 14;
            v133 >>= 7;
          }
          while (v143);
          goto LABEL_323;
        case 0xE:
          if (*((_DWORD *)this + 15) == 3)
            RepeatedEnum = google::protobuf::Reflection::GetRepeatedEnum(v11, a2, this, v59, v50);
          else
            RepeatedEnum = google::protobuf::Reflection::GetEnum(v11, a2, this, v49, v50);
          v107 = *(int *)(RepeatedEnum + 16);
          v108 = 8 * *((_DWORD *)this + 17);
          if (v108 > 0x7F)
          {
            *(_BYTE *)a3 = v108 | 0x80;
            v120 = v108 >> 7;
            if (v108 >> 14)
            {
              v78 = (unsigned __int8 *)a3 + 2;
              do
              {
                *(v78 - 1) = v120 | 0x80;
                v161 = v120 >> 7;
                ++v78;
                v162 = v120 >> 14;
                v120 >>= 7;
              }
              while (v162);
              *(v78 - 1) = v161;
            }
            else
            {
              *((_BYTE *)a3 + 1) = v120;
              v78 = (unsigned __int8 *)a3 + 2;
            }
          }
          else
          {
            *(_BYTE *)a3 = v108;
            v78 = (unsigned __int8 *)a3 + 1;
          }
          if (v107 <= 0x7F)
          {
            *v78 = v107;
            a3 = (const google::protobuf::Message *)(v78 + 1);
            goto LABEL_341;
          }
          *v78 = v107 | 0x80;
          v163 = v107 >> 7;
          if (!(v107 >> 14))
          {
            v78[1] = v163;
            goto LABEL_320;
          }
          a3 = (const google::protobuf::Message *)(v78 + 2);
          do
          {
            *((_BYTE *)a3 - 1) = v163 | 0x80;
            v164 = v163 >> 7;
            a3 = (const google::protobuf::Message *)((char *)a3 + 1);
            v165 = v163 >> 14;
            v163 >>= 7;
          }
          while (v165);
          *((_BYTE *)a3 - 1) = v164;
          goto LABEL_341;
        case 0xF:
          if (*((_DWORD *)this + 15) == 3)
            RepeatedUInt32 = google::protobuf::Reflection::GetRepeatedInt32(v11, a2, this, v59, v50);
          else
            RepeatedUInt32 = google::protobuf::Reflection::GetInt32(v11, a2, this, v49, v50);
          v79 = *((_DWORD *)this + 17);
          v80 = (8 * v79) | 5;
          if (v80 <= 0x7F)
          {
LABEL_159:
            *(_BYTE *)a3 = v80;
            v82 = (char *)a3 + 1;
          }
          else
          {
            *(_BYTE *)a3 = (8 * v79) | 0x85;
            v81 = (8 * v79) >> 7;
            if (v80 >> 14)
            {
              v82 = (char *)a3 + 2;
              do
              {
                *(v82 - 1) = v81 | 0x80;
                v83 = v81 >> 7;
                ++v82;
                v84 = v81 >> 14;
                v81 >>= 7;
              }
              while (v84);
LABEL_296:
              *(v82 - 1) = v83;
            }
            else
            {
LABEL_187:
              *((_BYTE *)a3 + 1) = v81;
              v82 = (char *)a3 + 2;
            }
          }
          *(_DWORD *)v82 = RepeatedUInt32;
          a3 = (const google::protobuf::Message *)(v82 + 4);
          goto LABEL_341;
        case 0x10:
          if (*((_DWORD *)this + 15) == 3)
            RepeatedUInt64 = google::protobuf::Reflection::GetRepeatedInt64(v11, a2, this, v59, v50);
          else
            RepeatedUInt64 = google::protobuf::Reflection::GetInt64(v11, a2, this, v49, v50);
          v91 = *((_DWORD *)this + 17);
          v92 = (8 * v91) | 1;
          if (v92 <= 0x7F)
          {
LABEL_153:
            *(_BYTE *)a3 = v92;
            v94 = (char *)a3 + 1;
          }
          else
          {
            *(_BYTE *)a3 = (8 * v91) | 0x81;
            v93 = (8 * v91) >> 7;
            if (v92 >> 14)
            {
              v94 = (char *)a3 + 2;
              do
              {
                *(v94 - 1) = v93 | 0x80;
                v95 = v93 >> 7;
                ++v94;
                v96 = v93 >> 14;
                v93 >>= 7;
              }
              while (v96);
LABEL_282:
              *(v94 - 1) = v95;
            }
            else
            {
LABEL_183:
              *((_BYTE *)a3 + 1) = v93;
              v94 = (char *)a3 + 2;
            }
          }
          *(_QWORD *)v94 = RepeatedUInt64;
          a3 = (const google::protobuf::Message *)(v94 + 8);
          goto LABEL_341;
        case 0x11:
          if (*((_DWORD *)this + 15) == 3)
            RepeatedInt32 = google::protobuf::Reflection::GetRepeatedInt32(v11, a2, this, v59, v50);
          else
            RepeatedInt32 = google::protobuf::Reflection::GetInt32(v11, a2, this, v49, v50);
          v77 = 8 * *((_DWORD *)this + 17);
          if (v77 > 0x7F)
          {
            *(_BYTE *)a3 = v77 | 0x80;
            v111 = v77 >> 7;
            if (v77 >> 14)
            {
              v78 = (unsigned __int8 *)a3 + 2;
              do
              {
                *(v78 - 1) = v111 | 0x80;
                v130 = v111 >> 7;
                ++v78;
                v131 = v111 >> 14;
                v111 >>= 7;
              }
              while (v131);
              *(v78 - 1) = v130;
            }
            else
            {
              *((_BYTE *)a3 + 1) = v111;
              v78 = (unsigned __int8 *)a3 + 2;
            }
          }
          else
          {
            *(_BYTE *)a3 = v77;
            v78 = (unsigned __int8 *)a3 + 1;
          }
          v132 = (2 * RepeatedInt32) ^ (RepeatedInt32 >> 31);
          if (v132 <= 0x7F)
          {
LABEL_317:
            *v78 = v132;
            a3 = (const google::protobuf::Message *)(v78 + 1);
            goto LABEL_341;
          }
          *v78 = v132 | 0x80;
          v133 = v132 >> 7;
          if (!(v132 >> 14))
          {
LABEL_319:
            v78[1] = v133;
            goto LABEL_320;
          }
          a3 = (const google::protobuf::Message *)(v78 + 2);
          do
          {
            *((_BYTE *)a3 - 1) = v133 | 0x80;
            v134 = v133 >> 7;
            a3 = (const google::protobuf::Message *)((char *)a3 + 1);
            v135 = v133 >> 14;
            v133 >>= 7;
          }
          while (v135);
LABEL_323:
          *((_BYTE *)a3 - 1) = v134;
          goto LABEL_341;
        case 0x12:
          if (*((_DWORD *)this + 15) == 3)
            Int64 = google::protobuf::Reflection::GetRepeatedInt64(v11, a2, this, v59, v50);
          else
            Int64 = google::protobuf::Reflection::GetInt64(v11, a2, this, v49, v50);
          v105 = 8 * *((_DWORD *)this + 17);
          if (v105 > 0x7F)
          {
            *(_BYTE *)a3 = v105 | 0x80;
            v119 = v105 >> 7;
            if (v105 >> 14)
            {
              v78 = (unsigned __int8 *)a3 + 2;
              do
              {
                *(v78 - 1) = v119 | 0x80;
                v156 = v119 >> 7;
                ++v78;
                v157 = v119 >> 14;
                v119 >>= 7;
              }
              while (v157);
              *(v78 - 1) = v156;
            }
            else
            {
              *((_BYTE *)a3 + 1) = v119;
              v78 = (unsigned __int8 *)a3 + 2;
            }
          }
          else
          {
            *(_BYTE *)a3 = v105;
            v78 = (unsigned __int8 *)a3 + 1;
          }
          v158 = (2 * Int64) ^ (Int64 >> 63);
          if (v158 > 0x7F)
          {
            *v78 = v158 | 0x80;
            v138 = v158 >> 7;
            if (v158 >> 14)
            {
              a3 = (const google::protobuf::Message *)(v78 + 2);
              do
              {
                *((_BYTE *)a3 - 1) = v138 | 0x80;
                v139 = v138 >> 7;
                a3 = (const google::protobuf::Message *)((char *)a3 + 1);
                v159 = v138 >> 14;
                v138 >>= 7;
              }
              while (v159);
LABEL_279:
              *((_BYTE *)a3 - 1) = v139;
            }
            else
            {
LABEL_276:
              v78[1] = v138;
LABEL_320:
              a3 = (const google::protobuf::Message *)(v78 + 2);
            }
          }
          else
          {
            *v78 = v158;
            a3 = (const google::protobuf::Message *)(v78 + 1);
          }
          goto LABEL_341;
        default:
          goto LABEL_341;
      }
      break;
    }
  }
  if (__p)
    operator delete(__p);
  return a3;
}

void sub_1888C0F20(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  uint64_t v27;
  uint64_t v29;
  void *v30;
  uint64_t v31;

  if (*(int *)(v27 - 156) >= 1)
  {
    v29 = *(_QWORD *)(v27 - 152);
    v31 = *(_QWORD *)(v29 - 8);
    v30 = (void *)(v29 - 8);
    if (!v31)
      operator delete(v30);
  }
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

unsigned __int8 *google::protobuf::internal::InternalSerializeMapEntry(google::protobuf::internal *this, const google::protobuf::FieldDescriptor *a2, const google::protobuf::MapKey *a3, const google::protobuf::MapValueConstRef *a4, google::protobuf::io::EpsCopyOutputStream *a5, google::protobuf::io::EpsCopyOutputStream *a6)
{
  uint64_t v11;
  uint64_t v12;
  const google::protobuf::MapKey *v13;
  int v14;
  const google::protobuf::MapValueConstRef *v15;
  unsigned int v16;
  int v17;
  unsigned int v18;
  char *v19;
  unsigned int v20;
  unsigned int v21;
  unsigned int v22;
  unsigned __int8 *v23;
  unsigned int v24;
  unsigned int v25;
  unsigned int v26;
  unint64_t *v27;
  unint64_t v28;
  unint64_t Int64Value;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t UInt64Value;
  int UInt32Value;
  unsigned int v36;
  google::protobuf::MapKey *StringValue;
  int64_t v38;
  int v39;
  unsigned int v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unsigned int v44;
  unsigned int v45;
  unsigned int v46;
  google::protobuf::MapKey *v47;
  unsigned int v48;
  unint64_t v49;
  unint64_t *v50;
  unint64_t v51;
  uint64_t v52;
  int64_t v53;
  double DoubleValue;
  float FloatValue;
  unint64_t v56;
  unint64_t v57;
  unint64_t v58;
  unint64_t v59;
  unint64_t v60;
  unint64_t v61;
  uint64_t v62;
  int Int32Value;
  unsigned int v64;
  uint64_t MessageValue;
  unsigned __int8 *v66;
  uint64_t v67;
  unsigned int v68;
  unsigned __int8 *v69;
  int v70;
  unsigned int v71;
  uint64_t v72;
  unint64_t v73;
  const void *v74;
  unsigned int v75;
  unsigned int v76;
  unsigned int v77;
  unsigned int v78;
  unint64_t v79;
  unsigned int v80;
  unsigned int v81;
  unsigned int v83;
  unint64_t v84;
  void (**v86)(google::protobuf::FieldDescriptor *, const google::protobuf::FieldDescriptor *, const char *);
  const char *v87;
  int v88;
  std::string __p;
  uint64_t v90;
  void (*v91)(google::protobuf::FieldDescriptor *, const google::protobuf::FieldDescriptor *, const char *);
  void (***v92)(google::protobuf::FieldDescriptor *, const google::protobuf::FieldDescriptor *, const char *);

  v11 = *(_QWORD *)(google::protobuf::FieldDescriptor::message_type(this) + 40);
  v12 = *(_QWORD *)(google::protobuf::FieldDescriptor::message_type(this) + 40);
  v14 = google::protobuf::internal::MapKeyDataOnlyByteSize((google::protobuf::internal *)v11, a2, v13);
  v16 = v14
      + google::protobuf::internal::MapValueRefDataOnlyByteSize((google::protobuf::internal *)(v12 + 152), a3, v15)
      + 2;
  if (*(_QWORD *)a5 <= (unint64_t)a4)
    a4 = (const google::protobuf::MapValueConstRef *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a5, (unsigned __int8 *)a4);
  v17 = *((_DWORD *)this + 17);
  v18 = (8 * v17) | 2;
  if (v18 > 0x7F)
  {
    *(_BYTE *)a4 = (8 * v17) | 0x82;
    v20 = (8 * v17) >> 7;
    if (v18 >> 14)
    {
      v19 = (char *)a4 + 2;
      do
      {
        *(v19 - 1) = v20 | 0x80;
        v21 = v20 >> 7;
        ++v19;
        v22 = v20 >> 14;
        v20 >>= 7;
      }
      while (v22);
      *(v19 - 1) = v21;
    }
    else
    {
      *((_BYTE *)a4 + 1) = v20;
      v19 = (char *)a4 + 2;
    }
  }
  else
  {
    *(_BYTE *)a4 = v18;
    v19 = (char *)a4 + 1;
  }
  if (v16 > 0x7F)
  {
    *v19 = v16 | 0x80;
    v24 = v16 >> 7;
    if (v16 >> 14)
    {
      v23 = (unsigned __int8 *)(v19 + 2);
      do
      {
        *(v23 - 1) = v24 | 0x80;
        v25 = v24 >> 7;
        ++v23;
        v26 = v24 >> 14;
        v24 >>= 7;
      }
      while (v26);
      *(v23 - 1) = v25;
    }
    else
    {
      v19[1] = v24;
      v23 = (unsigned __int8 *)(v19 + 2);
    }
  }
  else
  {
    *v19 = v16;
    v23 = (unsigned __int8 *)(v19 + 1);
  }
  if (*(_QWORD *)a5 <= (unint64_t)v23)
    v23 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a5, v23);
  v27 = *(unint64_t **)(v11 + 48);
  if (v27)
  {
    v90 = v11;
    v91 = google::protobuf::FieldDescriptor::TypeOnceInit;
    v28 = atomic_load(v27);
    if (v28 != -1)
    {
      v86 = &v91;
      v87 = (const char *)&v90;
      v92 = &v86;
      std::__call_once(v27, &v92, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  switch(*(_DWORD *)(v11 + 56))
  {
    case 1:
    case 2:
    case 0xA:
    case 0xB:
    case 0xC:
    case 0xE:
      LODWORD(v86) = 3;
      v87 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/wire_format.cc";
      v88 = 1075;
      memset(&__p, 0, sizeof(__p));
      std::string::append(&__p, "Unsupported");
      google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v86);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__p.__r_.__value_.__l.__data_);
      goto LABEL_78;
    case 3:
      Int64Value = google::protobuf::MapKey::GetInt64Value(a2);
      *v23 = 8;
      if (Int64Value <= 0x7F)
        goto LABEL_36;
      v23[1] = Int64Value | 0x80;
      v30 = Int64Value >> 7;
      if (!(Int64Value >> 14))
        goto LABEL_64;
      v23 += 3;
      do
      {
        *(v23 - 1) = v30 | 0x80;
        v31 = v30 >> 7;
        ++v23;
        v32 = v30 >> 14;
        v30 >>= 7;
      }
      while (v32);
      goto LABEL_77;
    case 4:
      Int64Value = google::protobuf::MapKey::GetUInt64Value(a2);
      *v23 = 8;
      if (Int64Value <= 0x7F)
        goto LABEL_36;
      v23[1] = Int64Value | 0x80;
      v30 = Int64Value >> 7;
      if (!(Int64Value >> 14))
        goto LABEL_64;
      v23 += 3;
      do
      {
        *(v23 - 1) = v30 | 0x80;
        v31 = v30 >> 7;
        ++v23;
        v33 = v30 >> 14;
        v30 >>= 7;
      }
      while (v33);
      goto LABEL_77;
    case 5:
      LODWORD(Int64Value) = google::protobuf::MapKey::GetInt32Value(a2);
      *v23 = 8;
      if (Int64Value <= 0x7F)
      {
LABEL_36:
        v23[1] = Int64Value;
        goto LABEL_52;
      }
      v23[1] = Int64Value | 0x80;
      v30 = (unint64_t)(int)Int64Value >> 7;
      if (!(Int64Value >> 14))
        goto LABEL_64;
      v23 += 3;
      do
      {
        *(v23 - 1) = v30 | 0x80;
        v31 = v30 >> 7;
        ++v23;
        v43 = v30 >> 14;
        v30 >>= 7;
      }
      while (v43);
      goto LABEL_77;
    case 6:
      UInt64Value = google::protobuf::MapKey::GetUInt64Value(a2);
      goto LABEL_47;
    case 7:
      UInt32Value = google::protobuf::MapKey::GetUInt32Value(a2);
      goto LABEL_45;
    case 8:
      LOBYTE(v36) = google::protobuf::MapKey::GetBoolValue(a2);
      *v23 = 8;
      goto LABEL_43;
    case 9:
      StringValue = google::protobuf::MapKey::GetStringValue(a2);
      if (*((char *)StringValue + 23) < 0)
      {
        v38 = *((_QWORD *)StringValue + 1);
        if (v38 > 127)
        {
LABEL_160:
          v23 = google::protobuf::io::EpsCopyOutputStream::WriteStringOutline(a5, 1, (uint64_t)StringValue, v23);
          goto LABEL_78;
        }
      }
      else
      {
        v38 = *((unsigned __int8 *)StringValue + 23);
      }
      if (*(_QWORD *)a5 - (_QWORD)v23 + 14 < v38)
        goto LABEL_160;
      *v23 = 10;
      v23[1] = v38;
      if (*((char *)StringValue + 23) >= 0)
        v47 = StringValue;
      else
        v47 = *(google::protobuf::MapKey **)StringValue;
      memcpy(v23 + 2, v47, v38);
      v23 += v38 + 2;
LABEL_78:
      if (*(_QWORD *)a5 <= (unint64_t)v23)
        v23 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a5, v23);
      v50 = *(unint64_t **)(v12 + 200);
      if (v50)
      {
        v90 = v12 + 152;
        v91 = google::protobuf::FieldDescriptor::TypeOnceInit;
        v51 = atomic_load(v50);
        if (v51 != -1)
        {
          v86 = &v91;
          v87 = (const char *)&v90;
          v92 = &v86;
          std::__call_once(v50, &v92, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
        }
      }
      switch(*(_DWORD *)(v12 + 208))
      {
        case 1:
          DoubleValue = google::protobuf::MapValueConstRef::GetDoubleValue(a3);
          *v23 = 17;
          *(double *)(v23 + 1) = DoubleValue;
          goto LABEL_121;
        case 2:
          FloatValue = google::protobuf::MapValueConstRef::GetFloatValue(a3);
          *v23 = 21;
          *(float *)(v23 + 1) = FloatValue;
          goto LABEL_118;
        case 3:
          v56 = google::protobuf::MapValueConstRef::GetInt64Value(a3);
          *v23 = 16;
          if (v56 <= 0x7F)
            goto LABEL_114;
          v23[1] = v56 | 0x80;
          v57 = v56 >> 7;
          if (!(v56 >> 14))
            goto LABEL_145;
          v23 += 3;
          do
          {
            *(v23 - 1) = v57 | 0x80;
            v58 = v57 >> 7;
            ++v23;
            v59 = v57 >> 14;
            v57 >>= 7;
          }
          while (v59);
          goto LABEL_157;
        case 4:
          v56 = google::protobuf::MapValueConstRef::GetUInt64Value(a3);
          *v23 = 16;
          if (v56 <= 0x7F)
            goto LABEL_114;
          v23[1] = v56 | 0x80;
          v57 = v56 >> 7;
          if (!(v56 >> 14))
            goto LABEL_145;
          v23 += 3;
          do
          {
            *(v23 - 1) = v57 | 0x80;
            v58 = v57 >> 7;
            ++v23;
            v60 = v57 >> 14;
            v57 >>= 7;
          }
          while (v60);
          goto LABEL_157;
        case 5:
          LODWORD(v56) = google::protobuf::MapValueConstRef::GetInt32Value(a3);
          *v23 = 16;
          if (v56 <= 0x7F)
            goto LABEL_114;
          v23[1] = v56 | 0x80;
          v57 = (unint64_t)(int)v56 >> 7;
          if (!(v56 >> 14))
            goto LABEL_145;
          v23 += 3;
          do
          {
            *(v23 - 1) = v57 | 0x80;
            v58 = v57 >> 7;
            ++v23;
            v61 = v57 >> 14;
            v57 >>= 7;
          }
          while (v61);
          goto LABEL_157;
        case 6:
          v62 = google::protobuf::MapValueConstRef::GetUInt64Value(a3);
          goto LABEL_120;
        case 7:
          Int32Value = google::protobuf::MapValueConstRef::GetUInt32Value(a3);
          goto LABEL_117;
        case 8:
          LOBYTE(v64) = google::protobuf::MapValueConstRef::GetBoolValue(a3);
          *v23 = 16;
          goto LABEL_112;
        case 9:
        case 0xC:
          v52 = google::protobuf::MapValueConstRef::GetStringValue(a3);
          if (*(char *)(v52 + 23) < 0)
          {
            v53 = *(_QWORD *)(v52 + 8);
            if (v53 > 127)
              return google::protobuf::io::EpsCopyOutputStream::WriteStringOutline(a5, 2, v52, v23);
          }
          else
          {
            v53 = *(unsigned __int8 *)(v52 + 23);
          }
          if (*(_QWORD *)a5 - (_QWORD)v23 + 14 >= v53)
          {
            *v23 = 18;
            v23[1] = v53;
            if (*(char *)(v52 + 23) >= 0)
              v74 = (const void *)v52;
            else
              v74 = *(const void **)v52;
            memcpy(v23 + 2, v74, v53);
            v23 += v53 + 2;
            return v23;
          }
          return google::protobuf::io::EpsCopyOutputStream::WriteStringOutline(a5, 2, v52, v23);
        case 0xA:
          MessageValue = google::protobuf::MapValueConstRef::GetMessageValue(a3);
          *v23 = 19;
          v66 = (unsigned __int8 *)(*(uint64_t (**)(uint64_t, unsigned __int8 *, google::protobuf::io::EpsCopyOutputStream *))(*(_QWORD *)MessageValue + 96))(MessageValue, v23 + 1, a5);
          if (*(_QWORD *)a5 <= (unint64_t)v66)
            v66 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a5, v66);
          *v66 = 20;
          return v66 + 1;
        case 0xB:
          v67 = google::protobuf::MapValueConstRef::GetMessageValue(a3);
          *v23 = 18;
          v68 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v67 + 80))(v67);
          if (v68 > 0x7F)
          {
            v23[1] = v68 | 0x80;
            v75 = v68 >> 7;
            if (v68 >> 14)
            {
              v69 = v23 + 3;
              do
              {
                *(v69 - 1) = v75 | 0x80;
                v80 = v75 >> 7;
                ++v69;
                v81 = v75 >> 14;
                v75 >>= 7;
              }
              while (v81);
              *(v69 - 1) = v80;
            }
            else
            {
              v23[2] = v75;
              v69 = v23 + 3;
            }
          }
          else
          {
            v23[1] = v68;
            v69 = v23 + 2;
          }
          return (unsigned __int8 *)(*(uint64_t (**)(uint64_t, unsigned __int8 *, google::protobuf::io::EpsCopyOutputStream *))(*(_QWORD *)v67 + 96))(v67, v69, a5);
        case 0xD:
          v64 = google::protobuf::MapValueConstRef::GetUInt32Value(a3);
          *v23 = 16;
          if (v64 <= 0x7F)
          {
LABEL_112:
            v23[1] = v64;
            goto LABEL_115;
          }
          v23[1] = v64 | 0x80;
          v76 = v64 >> 7;
          if (!(v64 >> 14))
            goto LABEL_143;
          v23 += 3;
          do
          {
            *(v23 - 1) = v76 | 0x80;
            v77 = v76 >> 7;
            ++v23;
            v78 = v76 >> 14;
            v76 >>= 7;
          }
          while (v78);
          goto LABEL_154;
        case 0xE:
          LODWORD(v56) = google::protobuf::MapValueConstRef::GetEnumValue(a3);
          *v23 = 16;
          if (v56 <= 0x7F)
          {
LABEL_114:
            v23[1] = v56;
            goto LABEL_115;
          }
          v23[1] = v56 | 0x80;
          v57 = (unint64_t)(int)v56 >> 7;
          if (!(v56 >> 14))
            goto LABEL_145;
          v23 += 3;
          do
          {
            *(v23 - 1) = v57 | 0x80;
            v58 = v57 >> 7;
            ++v23;
            v79 = v57 >> 14;
            v57 >>= 7;
          }
          while (v79);
          goto LABEL_157;
        case 0xF:
          Int32Value = google::protobuf::MapValueConstRef::GetInt32Value(a3);
LABEL_117:
          *v23 = 21;
          *(_DWORD *)(v23 + 1) = Int32Value;
LABEL_118:
          v23 += 5;
          return v23;
        case 0x10:
          v62 = google::protobuf::MapValueConstRef::GetInt64Value(a3);
LABEL_120:
          *v23 = 17;
          *(_QWORD *)(v23 + 1) = v62;
LABEL_121:
          v23 += 9;
          return v23;
        case 0x11:
          v70 = google::protobuf::MapValueConstRef::GetInt32Value(a3);
          *v23 = 16;
          v71 = (2 * v70) ^ (v70 >> 31);
          if (v71 <= 0x7F)
          {
            v23[1] = v71;
            goto LABEL_115;
          }
          v23[1] = v71 | 0x80;
          v76 = v71 >> 7;
          if (!(v71 >> 14))
          {
LABEL_143:
            v23[2] = v76;
            goto LABEL_146;
          }
          v23 += 3;
          do
          {
            *(v23 - 1) = v76 | 0x80;
            v77 = v76 >> 7;
            ++v23;
            v83 = v76 >> 14;
            v76 >>= 7;
          }
          while (v83);
LABEL_154:
          *(v23 - 1) = v77;
          break;
        case 0x12:
          v72 = google::protobuf::MapValueConstRef::GetInt64Value(a3);
          *v23 = 16;
          v73 = (2 * v72) ^ (v72 >> 63);
          if (v73 > 0x7F)
          {
            v23[1] = v73 | 0x80;
            v57 = v73 >> 7;
            if (v73 >> 14)
            {
              v23 += 3;
              do
              {
                *(v23 - 1) = v57 | 0x80;
                v58 = v57 >> 7;
                ++v23;
                v84 = v57 >> 14;
                v57 >>= 7;
              }
              while (v84);
LABEL_157:
              *(v23 - 1) = v58;
            }
            else
            {
LABEL_145:
              v23[2] = v57;
LABEL_146:
              v23 += 3;
            }
          }
          else
          {
            v23[1] = v73;
LABEL_115:
            v23 += 2;
          }
          break;
        default:
          return v23;
      }
      return v23;
    case 0xD:
      v36 = google::protobuf::MapKey::GetUInt32Value(a2);
      *v23 = 8;
      if (v36 <= 0x7F)
      {
LABEL_43:
        v23[1] = v36;
        goto LABEL_52;
      }
      v23[1] = v36 | 0x80;
      v44 = v36 >> 7;
      if (!(v36 >> 14))
        goto LABEL_62;
      v23 += 3;
      do
      {
        *(v23 - 1) = v44 | 0x80;
        v45 = v44 >> 7;
        ++v23;
        v46 = v44 >> 14;
        v44 >>= 7;
      }
      while (v46);
      goto LABEL_74;
    case 0xF:
      UInt32Value = google::protobuf::MapKey::GetInt32Value(a2);
LABEL_45:
      *v23 = 13;
      *(_DWORD *)(v23 + 1) = UInt32Value;
      v23 += 5;
      goto LABEL_78;
    case 0x10:
      UInt64Value = google::protobuf::MapKey::GetInt64Value(a2);
LABEL_47:
      *v23 = 9;
      *(_QWORD *)(v23 + 1) = UInt64Value;
      v23 += 9;
      goto LABEL_78;
    case 0x11:
      v39 = google::protobuf::MapKey::GetInt32Value(a2);
      *v23 = 8;
      v40 = (2 * v39) ^ (v39 >> 31);
      if (v40 <= 0x7F)
      {
        v23[1] = v40;
        goto LABEL_52;
      }
      v23[1] = v40 | 0x80;
      v44 = v40 >> 7;
      if (!(v40 >> 14))
      {
LABEL_62:
        v23[2] = v44;
        goto LABEL_65;
      }
      v23 += 3;
      do
      {
        *(v23 - 1) = v44 | 0x80;
        v45 = v44 >> 7;
        ++v23;
        v48 = v44 >> 14;
        v44 >>= 7;
      }
      while (v48);
LABEL_74:
      *(v23 - 1) = v45;
      goto LABEL_78;
    case 0x12:
      v41 = google::protobuf::MapKey::GetInt64Value(a2);
      *v23 = 8;
      v42 = (2 * v41) ^ (v41 >> 63);
      if (v42 > 0x7F)
      {
        v23[1] = v42 | 0x80;
        v30 = v42 >> 7;
        if (v42 >> 14)
        {
          v23 += 3;
          do
          {
            *(v23 - 1) = v30 | 0x80;
            v31 = v30 >> 7;
            ++v23;
            v49 = v30 >> 14;
            v30 >>= 7;
          }
          while (v49);
LABEL_77:
          *(v23 - 1) = v31;
        }
        else
        {
LABEL_64:
          v23[2] = v30;
LABEL_65:
          v23 += 3;
        }
      }
      else
      {
        v23[1] = v42;
LABEL_52:
        v23 += 2;
      }
      goto LABEL_78;
    default:
      goto LABEL_78;
  }
}

void sub_1888C1BC8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::internal::WireFormat::FieldDataOnlyByteSize(google::protobuf::internal::WireFormat *this, const google::protobuf::FieldDescriptor *a2, const google::protobuf::Message *a3)
{
  uint64_t v5;
  const char *v6;
  google::protobuf::_anonymous_namespace_ **v7;
  google::protobuf::_anonymous_namespace_ **v8;
  unint64_t *v9;
  unint64_t v10;
  unsigned int *v11;
  unsigned int v12;
  unsigned int v13;
  uint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  google::protobuf::internal *v18;
  uint64_t v19;
  google::protobuf::internal *v20;
  const google::protobuf::MapKey *v21;
  uint64_t v22;
  const google::protobuf::MapValueConstRef *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t RepeatedStringReference;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int RepeatedInt32;
  uint64_t v32;
  uint64_t v33;
  uint64_t RepeatedMessage;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  uint64_t RepeatedInt64;
  uint64_t Int64;
  unint64_t v47;
  int Int32;
  uint64_t Message;
  uint64_t v50;
  uint64_t v51;
  unsigned int v52;
  int v53;
  int v54;
  uint64_t v55;
  google::protobuf::internal::WireFormat *v57;
  void (*v58)(google::protobuf::FieldDescriptor *, const google::protobuf::FieldDescriptor *, const char *);
  _QWORD v59[8];
  void *__p;
  google::protobuf::internal::WireFormat **v61;
  uint64_t v62;
  _QWORD v63[3];

  v63[2] = *MEMORY[0x1E0C80C00];
  (*(void (**)(const google::protobuf::FieldDescriptor *))(*(_QWORD *)a2 + 152))(a2);
  v8 = v7;
  v9 = (unint64_t *)*((_QWORD *)this + 6);
  if (v9)
  {
    v57 = this;
    v58 = google::protobuf::FieldDescriptor::TypeOnceInit;
    v10 = atomic_load(v9);
    if (v10 != -1)
    {
      __p = &v58;
      v61 = &v57;
      v59[0] = &__p;
      std::__call_once(v9, v59, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  if (*((_DWORD *)this + 14) == 11)
  {
    if (*(_BYTE *)(*(_QWORD *)(*((_QWORD *)this + 13) + 32) + 75))
    {
      v11 = (unsigned int *)google::protobuf::Reflection::MutableMapData(v8, a2, this);
      v12 = atomic_load(v11 + 22);
      if (v12 != 1)
      {
        google::protobuf::MapIterator::MapIterator((google::protobuf::MapIterator *)&__p, a2, this);
        google::protobuf::MapIterator::MapIterator((google::protobuf::MapIterator *)v59, a2, this);
        v18 = *(google::protobuf::internal **)(google::protobuf::FieldDescriptor::message_type(this) + 40);
        v19 = *(_QWORD *)(google::protobuf::FieldDescriptor::message_type(this) + 40);
        (*(void (**)(unsigned int *, void **))(*(_QWORD *)v11 + 56))(v11, &__p);
        (*(void (**)(unsigned int *, _QWORD *))(*(_QWORD *)v11 + 64))(v11, v59);
        v17 = 0;
        v20 = (google::protobuf::internal *)(v19 + 152);
        while (((*((uint64_t (**)(google::protobuf::internal::WireFormat **, void **, _QWORD *))*v61 + 6))(v61, &__p, v59) & 1) == 0)
        {
          v22 = google::protobuf::internal::MapKeyDataOnlyByteSize(v18, (const google::protobuf::FieldDescriptor *)&v62, v21);
          v24 = google::protobuf::internal::MapValueRefDataOnlyByteSize(v20, (const google::protobuf::FieldDescriptor *)v63, v23);
          v17 += v22 + v24 + 2 + ((9 * (__clz((v22 + v24 + 2) | 1) ^ 0x1F) + 73) >> 6);
          (*((void (**)(google::protobuf::internal::WireFormat **, void **))*v61 + 19))(v61, &__p);
        }
        google::protobuf::MapIterator::~MapIterator((google::protobuf::MapIterator *)v59);
        google::protobuf::MapIterator::~MapIterator((google::protobuf::MapIterator *)&__p);
        return v17;
      }
    }
  }
  if (*((_DWORD *)this + 15) == 3)
  {
    v13 = google::protobuf::Reflection::FieldSize(v8, a2, this, v5, v6);
  }
  else
  {
    if (*(_BYTE *)(*(_QWORD *)(*((_QWORD *)this + 10) + 32) + 75))
    {
      v14 = 1;
      goto LABEL_13;
    }
    v13 = google::protobuf::Reflection::HasField(v8, a2, this, v5, v6);
  }
  v14 = v13;
LABEL_13:
  v15 = (unint64_t *)*((_QWORD *)this + 6);
  if (v15)
  {
    v57 = this;
    v58 = google::protobuf::FieldDescriptor::TypeOnceInit;
    v16 = atomic_load(v15);
    if (v16 != -1)
    {
      __p = &v58;
      v61 = &v57;
      v59[0] = &__p;
      std::__call_once(v15, v59, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  switch(*((_DWORD *)this + 14))
  {
    case 1:
    case 6:
    case 0x10:
      v17 = 8 * v14;
      break;
    case 2:
    case 7:
    case 0xF:
      v17 = 4 * v14;
      break;
    case 3:
      if (*((_DWORD *)this + 15) != 3)
      {
        Int64 = google::protobuf::Reflection::GetInt64(v8, a2, this, v5, v6);
        goto LABEL_90;
      }
      if (!v14)
        goto LABEL_87;
      v28 = 0;
      v17 = 0;
      do
        v17 += (9 * (__clz(google::protobuf::Reflection::GetRepeatedInt64(v8, a2, this, v28++, v6) | 1) ^ 0x3F) + 73) >> 6;
      while (v14 != v28);
      break;
    case 4:
      if (*((_DWORD *)this + 15) != 3)
      {
        Int64 = google::protobuf::Reflection::GetUInt64(v8, a2, this, v5, v6);
LABEL_90:
        v47 = Int64 | 1;
        goto LABEL_103;
      }
      if (!v14)
        goto LABEL_87;
      v29 = 0;
      v17 = 0;
      do
        v17 += (9 * (__clz(google::protobuf::Reflection::GetRepeatedUInt64(v8, a2, this, v29++, v6) | 1) ^ 0x3F) + 73) >> 6;
      while (v14 != v29);
      break;
    case 5:
      if (*((_DWORD *)this + 15) != 3)
      {
        Int32 = google::protobuf::Reflection::GetInt32(v8, a2, this, v5, v6);
        if ((Int32 & 0x80000000) == 0)
          goto LABEL_96;
        goto LABEL_98;
      }
      if (!v14)
        goto LABEL_87;
      v30 = 0;
      v17 = 0;
      do
      {
        RepeatedInt32 = google::protobuf::Reflection::GetRepeatedInt32(v8, a2, this, v30, v6);
        if (RepeatedInt32 < 0)
          v32 = 10;
        else
          v32 = (9 * (__clz(RepeatedInt32 | 1) ^ 0x1F) + 73) >> 6;
        v17 += v32;
        ++v30;
      }
      while (v14 != v30);
      break;
    case 8:
      v17 = v14;
      break;
    case 9:
    case 0xC:
      if (!v14)
        goto LABEL_87;
      v25 = 0;
      v17 = 0;
      do
      {
        __p = 0;
        v61 = 0;
        v62 = 0;
        if (*((_DWORD *)this + 15) == 3)
          RepeatedStringReference = google::protobuf::Reflection::GetRepeatedStringReference((uint64_t)v8, (uint64_t)a2, this, v25, (const char *)&__p);
        else
          RepeatedStringReference = google::protobuf::Reflection::GetStringReference((uint64_t)v8, (uint64_t)a2, this, (uint64_t)&__p, v6);
        if (*(char *)(RepeatedStringReference + 23) >= 0)
          v27 = *(unsigned __int8 *)(RepeatedStringReference + 23);
        else
          v27 = *(_QWORD *)(RepeatedStringReference + 8);
        if (SHIBYTE(v62) < 0)
          operator delete(__p);
        v17 += v27 + ((9 * (__clz(v27 | 1) ^ 0x1F) + 73) >> 6);
        ++v25;
      }
      while (v14 != v25);
      break;
    case 0xA:
      if (*((_DWORD *)this + 15) == 3)
      {
        if (!v14)
          goto LABEL_87;
        v33 = 0;
        v17 = 0;
        do
        {
          RepeatedMessage = google::protobuf::Reflection::GetRepeatedMessage(v8, a2, this, v33, v6);
          v17 += (*(uint64_t (**)(uint64_t))(*(_QWORD *)RepeatedMessage + 72))(RepeatedMessage);
          ++v33;
        }
        while (v14 != v33);
      }
      else
      {
        Message = google::protobuf::Reflection::GetMessage(v8, a2, this, 0, v6);
        v17 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)Message + 72))(Message);
      }
      break;
    case 0xB:
      if (*((_DWORD *)this + 15) == 3)
      {
        if (!v14)
          goto LABEL_87;
        v35 = 0;
        v17 = 0;
        do
        {
          v36 = google::protobuf::Reflection::GetRepeatedMessage(v8, a2, this, v35, v6);
          v37 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v36 + 72))(v36);
          v17 += v37 + ((9 * (__clz(v37 | 1) ^ 0x1F) + 73) >> 6);
          ++v35;
        }
        while (v14 != v35);
      }
      else
      {
        v50 = google::protobuf::Reflection::GetMessage(v8, a2, this, 0, v6);
        v51 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v50 + 72))(v50);
        v17 = v51 + ((9 * (__clz(v51 | 1) ^ 0x1F) + 73) >> 6);
      }
      break;
    case 0xD:
      if (*((_DWORD *)this + 15) != 3)
      {
        Int32 = google::protobuf::Reflection::GetUInt32(v8, a2, this, v5, v6);
LABEL_96:
        v52 = Int32 | 1;
        goto LABEL_101;
      }
      if (!v14)
        goto LABEL_87;
      v38 = 0;
      v17 = 0;
      do
        v17 += (9 * (__clz(google::protobuf::Reflection::GetRepeatedUInt32(v8, a2, this, v38++, v6) | 1) ^ 0x1F) + 73) >> 6;
      while (v14 != v38);
      break;
    case 0xE:
      if (*((_DWORD *)this + 15) == 3)
      {
        if (!v14)
          goto LABEL_87;
        v39 = 0;
        v17 = 0;
        do
        {
          v40 = *(_DWORD *)(google::protobuf::Reflection::GetRepeatedEnum(v8, a2, this, v39, v6) + 16);
          if (v40 < 0)
            v41 = 10;
          else
            v41 = (9 * (__clz(v40 | 1) ^ 0x1F) + 73) >> 6;
          v17 += v41;
          ++v39;
        }
        while (v14 != v39);
      }
      else
      {
        v53 = *(_DWORD *)(google::protobuf::Reflection::GetEnum(v8, a2, this, v5, v6) + 16);
        if ((v53 & 0x80000000) == 0)
          goto LABEL_100;
LABEL_98:
        v17 = 10;
      }
      break;
    case 0x11:
      if (*((_DWORD *)this + 15) == 3)
      {
        if (!v14)
          goto LABEL_87;
        v42 = 0;
        v17 = 0;
        do
        {
          v43 = google::protobuf::Reflection::GetRepeatedInt32(v8, a2, this, v42, v6);
          v17 += (9 * (__clz((2 * v43) ^ (v43 >> 31) | 1) ^ 0x1F) + 73) >> 6;
          ++v42;
        }
        while (v14 != v42);
      }
      else
      {
        v54 = google::protobuf::Reflection::GetInt32(v8, a2, this, v5, v6);
        v53 = (2 * v54) ^ (v54 >> 31);
LABEL_100:
        v52 = v53 | 1;
LABEL_101:
        v17 = (9 * (__clz(v52) ^ 0x1F) + 73) >> 6;
      }
      break;
    case 0x12:
      if (*((_DWORD *)this + 15) == 3)
      {
        if (!v14)
          goto LABEL_87;
        v44 = 0;
        v17 = 0;
        do
        {
          RepeatedInt64 = google::protobuf::Reflection::GetRepeatedInt64(v8, a2, this, v44, v6);
          v17 += (9 * (__clz((2 * RepeatedInt64) ^ (RepeatedInt64 >> 63) | 1) ^ 0x3F) + 73) >> 6;
          ++v44;
        }
        while (v14 != v44);
      }
      else
      {
        v55 = google::protobuf::Reflection::GetInt64(v8, a2, this, v5, v6);
        v47 = (2 * v55) ^ (v55 >> 63) | 1;
LABEL_103:
        v17 = (9 * (__clz(v47) ^ 0x3F) + 73) >> 6;
      }
      break;
    default:
LABEL_87:
      v17 = 0;
      break;
  }
  return v17;
}

void sub_1888C23E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *__p,uint64_t a21,int a22,__int16 a23,char a24,char a25)
{
  google::protobuf::MapIterator::~MapIterator((google::protobuf::MapIterator *)&a12);
  google::protobuf::MapIterator::~MapIterator((google::protobuf::MapIterator *)&__p);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::WireFormat::ByteSize(google::protobuf::internal::WireFormat *this, const google::protobuf::Message *a2)
{
  uint64_t v3;
  uint64_t MayFailOnStripped;
  unint64_t v5;
  unint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t *v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  const google::protobuf::Message *v19;
  uint64_t v20;
  const char *v21;
  google::protobuf::_anonymous_namespace_ **v22;
  google::protobuf::_anonymous_namespace_ **v23;
  unint64_t *v24;
  unint64_t v25;
  unint64_t *v26;
  unint64_t v27;
  unsigned int *v28;
  unsigned int v29;
  unsigned int v30;
  unsigned int v31;
  int v32;
  google::protobuf::_anonymous_namespace_ **v33;
  const char *v34;
  uint64_t Message;
  uint64_t v36;
  uint64_t v37;
  int v38;
  unint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  google::protobuf::internal::WireFormat *v47;
  void *__p;
  uint64_t *v50;
  unint64_t v51;
  uint64_t v52;
  void (*v53)(google::protobuf::FieldDescriptor *, const google::protobuf::FieldDescriptor *, const char *);
  void (***v54)(google::protobuf::FieldDescriptor *, const google::protobuf::FieldDescriptor *, const char *);
  void (**v55)(google::protobuf::FieldDescriptor *, const google::protobuf::FieldDescriptor *, const char *);
  uint64_t *v56;

  v3 = (*(uint64_t (**)(google::protobuf::internal::WireFormat *, const google::protobuf::Message *))(*(_QWORD *)this + 152))(this, a2);
  MayFailOnStripped = (*(uint64_t (**)(google::protobuf::internal::WireFormat *))(*(_QWORD *)this + 152))(this);
  v6 = v5;
  __p = 0;
  v50 = 0;
  v51 = 0;
  if (*(_BYTE *)(*(_QWORD *)(v3 + 32) + 75))
  {
    if (*(int *)(v3 + 104) < 1)
    {
      v7 = 0;
    }
    else
    {
      v7 = 0;
      v8 = 0;
      do
      {
        v9 = *(_QWORD *)(v3 + 40) + 152 * v8;
        if ((unint64_t)v7 >= v51)
        {
          v10 = ((char *)v7 - (_BYTE *)__p) >> 3;
          if ((unint64_t)(v10 + 1) >> 61)
            std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
          v11 = (uint64_t)(v51 - (_QWORD)__p) >> 2;
          if (v11 <= v10 + 1)
            v11 = v10 + 1;
          if (v51 - (unint64_t)__p >= 0x7FFFFFFFFFFFFFF8)
            v5 = 0x1FFFFFFFFFFFFFFFLL;
          else
            v5 = v11;
          if (v5)
            MayFailOnStripped = (uint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<zilch::StringList::Entry>>((uint64_t)&v51, v5);
          else
            MayFailOnStripped = 0;
          v12 = (uint64_t *)(MayFailOnStripped + 8 * v10);
          *v12 = v9;
          v7 = v12 + 1;
          v14 = (char *)__p;
          v13 = (char *)v50;
          if (v50 != __p)
          {
            do
            {
              v15 = *((_QWORD *)v13 - 1);
              v13 -= 8;
              *--v12 = v15;
            }
            while (v13 != v14);
            v13 = (char *)__p;
          }
          __p = v12;
          v50 = v7;
          v51 = MayFailOnStripped + 8 * v5;
          if (v13)
            operator delete(v13);
        }
        else
        {
          *v7++ = v9;
        }
        v50 = v7;
        ++v8;
      }
      while (v8 < *(int *)(v3 + 104));
    }
  }
  else
  {
    MayFailOnStripped = google::protobuf::Reflection::ListFieldsMayFailOnStripped(v5, this, 0, (uint64_t)&__p);
    v7 = v50;
  }
  v16 = (uint64_t *)__p;
  if (__p != v7)
  {
    v17 = 0;
    while (1)
    {
      v18 = *v16;
      (*(void (**)(google::protobuf::internal::WireFormat *))(*(_QWORD *)this + 152))(this);
      v23 = v22;
      if (!*(_BYTE *)(v18 + 67) || !*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v18 + 80) + 32) + 72))
        break;
      v24 = *(unint64_t **)(v18 + 48);
      if (v24)
      {
        v52 = v18;
        v53 = google::protobuf::FieldDescriptor::TypeOnceInit;
        v25 = atomic_load(v24);
        if (v25 != -1)
        {
          v55 = &v53;
          v56 = &v52;
          v54 = &v55;
          std::__call_once(v24, &v54, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
        }
      }
      if ((*(_DWORD *)(v18 + 56) & 0xFFFFFFFE) != 0xA || *(_DWORD *)(v18 + 60) == 3)
        break;
      (*(void (**)(google::protobuf::internal::WireFormat *))(*(_QWORD *)this + 152))(this);
      v32 = *(_DWORD *)(v18 + 68);
      Message = google::protobuf::Reflection::GetMessage(v33, this, (const google::protobuf::FieldDescriptor *)v18, 0, v34);
      MayFailOnStripped = (*(uint64_t (**)(uint64_t))(*(_QWORD *)Message + 72))(Message);
      v36 = MayFailOnStripped
          + ((9 * (__clz(v32 | 1) ^ 0x1F) + 73) >> 6)
          + 4
          + ((9 * (__clz(MayFailOnStripped | 1) ^ 0x1F) + 73) >> 6);
LABEL_56:
      v17 += v36;
      if (++v16 == v7)
        goto LABEL_59;
    }
    if (*(_DWORD *)(v18 + 60) == 3)
    {
      v26 = *(unint64_t **)(v18 + 48);
      if (v26)
      {
        v52 = v18;
        v53 = google::protobuf::FieldDescriptor::TypeOnceInit;
        v27 = atomic_load(v26);
        if (v27 != -1)
        {
          v55 = &v53;
          v56 = &v52;
          v54 = &v55;
          std::__call_once(v26, &v54, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
        }
      }
      if (*(_DWORD *)(v18 + 56) == 11
        && *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v18 + 104) + 32) + 75)
        && (v28 = (unsigned int *)google::protobuf::Reflection::MutableMapData(v23, this, (const google::protobuf::FieldDescriptor *)v18), v29 = atomic_load(v28 + 22), v29 != 1))
      {
        v30 = (*(uint64_t (**)(unsigned int *))(*(_QWORD *)v28 + 88))(v28);
      }
      else
      {
        v30 = google::protobuf::Reflection::FieldSize(v23, this, (const google::protobuf::FieldDescriptor *)v18, v20, v21);
      }
    }
    else
    {
      if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v18 + 80) + 32) + 75))
      {
        v31 = 1;
        goto LABEL_48;
      }
      v30 = google::protobuf::Reflection::HasField(v23, this, (const google::protobuf::FieldDescriptor *)v18, v20, v21);
    }
    v31 = v30;
LABEL_48:
    v37 = google::protobuf::internal::WireFormat::FieldDataOnlyByteSize((google::protobuf::internal::WireFormat *)v18, this, v19);
    MayFailOnStripped = google::protobuf::FieldDescriptor::is_packed((google::protobuf::FieldDescriptor *)v18);
    if ((_DWORD)MayFailOnStripped)
    {
      if (v37)
        v36 = v37
            + ((9 * (__clz(v37 | 1) ^ 0x1F) + 73) >> 6)
            + ((9 * (__clz((8 * *(_DWORD *)(v18 + 68)) | 1) ^ 0x1F) + 73) >> 6);
      else
        v36 = 0;
    }
    else
    {
      v38 = *(_DWORD *)(v18 + 68);
      MayFailOnStripped = *(_QWORD *)(v18 + 48);
      if (MayFailOnStripped)
      {
        v52 = v18;
        v53 = google::protobuf::FieldDescriptor::TypeOnceInit;
        v39 = atomic_load((unint64_t *)MayFailOnStripped);
        if (v39 != -1)
        {
          v55 = &v53;
          v56 = &v52;
          v54 = &v55;
          std::__call_once((std::once_flag::_State_type *)MayFailOnStripped, &v54, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
        }
      }
      v36 = v37
          + ((unint64_t)((9 * (__clz((8 * v38) | 1) ^ 0x1F) + 73) >> 6) << (*(_DWORD *)(v18 + 56) == 10))
          * (unint64_t)v31;
    }
    goto LABEL_56;
  }
  v17 = 0;
LABEL_59:
  v40 = *(_QWORD *)((char *)this + *(unsigned int *)(v6 + 36));
  if (*(_BYTE *)(*(_QWORD *)(v3 + 32) + 72))
  {
    if ((v40 & 1) != 0)
      v41 = (_QWORD *)((v40 & 0xFFFFFFFFFFFFFFFELL) + 8);
    else
      v41 = (_QWORD *)google::protobuf::UnknownFieldSet::default_instance((google::protobuf::UnknownFieldSet *)MayFailOnStripped);
    v42 = v41[1] - *v41;
    if ((int)(v42 >> 4) < 1)
    {
      v43 = 0;
    }
    else
    {
      v43 = 0;
      v44 = (v42 >> 4);
      v45 = *v41 + 8;
      do
      {
        if (*(_DWORD *)(v45 - 4) == 3)
        {
          if (*(char *)(*(_QWORD *)v45 + 23) < 0)
            v46 = *(_QWORD *)(*(_QWORD *)v45 + 8);
          else
            LODWORD(v46) = *(unsigned __int8 *)(*(_QWORD *)v45 + 23);
          v43 += ((9 * (__clz(*(_DWORD *)(v45 - 8) | 1) ^ 0x1F) + 73) >> 6)
               + 4
               + (int)v46
               + ((9 * (__clz(v46 | 1) ^ 0x1F) + 73) >> 6);
        }
        v45 += 16;
        --v44;
      }
      while (v44);
    }
  }
  else
  {
    if ((v40 & 1) != 0)
      v47 = (google::protobuf::internal::WireFormat *)((v40 & 0xFFFFFFFFFFFFFFFELL) + 8);
    else
      v47 = (google::protobuf::internal::WireFormat *)google::protobuf::UnknownFieldSet::default_instance((google::protobuf::UnknownFieldSet *)MayFailOnStripped);
    v43 = google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v47, (const google::protobuf::UnknownFieldSet *)v5);
  }
  if (__p)
  {
    v50 = (uint64_t *)__p;
    operator delete(__p);
  }
  return v43 + v17;
}

void sub_1888C29C0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::internal::MapKeyDataOnlyByteSize(google::protobuf::internal *this, const google::protobuf::FieldDescriptor *a2, const google::protobuf::MapKey *a3)
{
  unint64_t *v5;
  unint64_t v6;
  uint64_t result;
  uint64_t Int64Value;
  unint64_t v9;
  int Int32Value;
  google::protobuf::MapKey *StringValue;
  uint64_t v12;
  unsigned int v13;
  uint64_t v14;
  int v15;
  void (**v16)(google::protobuf::FieldDescriptor *, const google::protobuf::FieldDescriptor *, const char *);
  google::protobuf::internal **v17;
  int v18;
  std::string __p;
  google::protobuf::internal *v20;
  void (*v21)(google::protobuf::FieldDescriptor *, const google::protobuf::FieldDescriptor *, const char *);
  void (***v22)(google::protobuf::FieldDescriptor *, const google::protobuf::FieldDescriptor *, const char *);

  v5 = (unint64_t *)*((_QWORD *)this + 6);
  if (v5)
  {
    v20 = this;
    v21 = google::protobuf::FieldDescriptor::TypeOnceInit;
    v6 = atomic_load(v5);
    if (v6 != -1)
    {
      v16 = &v21;
      v17 = &v20;
      v22 = &v16;
      std::__call_once(v5, &v22, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  result = 4;
  switch(*((_DWORD *)this + 14))
  {
    case 1:
    case 2:
    case 0xA:
    case 0xB:
    case 0xC:
    case 0xE:
      LODWORD(v16) = 3;
      v17 = (google::protobuf::internal **)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/prot"
                                           "obuf/wire_format.cc";
      v18 = 1537;
      memset(&__p, 0, sizeof(__p));
      std::string::append(&__p, "Unsupported");
      google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v16);
      goto LABEL_6;
    case 3:
      Int64Value = google::protobuf::MapKey::GetInt64Value(a2);
      goto LABEL_13;
    case 4:
      Int64Value = google::protobuf::MapKey::GetUInt64Value(a2);
LABEL_13:
      v9 = Int64Value | 1;
      goto LABEL_23;
    case 5:
      Int32Value = google::protobuf::MapKey::GetInt32Value(a2);
      if ((Int32Value & 0x80000000) == 0)
        goto LABEL_21;
      return 10;
    case 6:
    case 0x10:
      return 8;
    case 7:
    case 0xF:
      return result;
    case 8:
      return 1;
    case 9:
      StringValue = google::protobuf::MapKey::GetStringValue(a2);
      v12 = *((unsigned __int8 *)StringValue + 23);
      if ((v12 & 0x80u) != 0)
        v12 = *((_QWORD *)StringValue + 1);
      return v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6);
    case 0xD:
      Int32Value = google::protobuf::MapKey::GetUInt32Value(a2);
LABEL_21:
      v13 = Int32Value | 1;
      goto LABEL_25;
    case 0x11:
      v15 = google::protobuf::MapKey::GetInt32Value(a2);
      v13 = (2 * v15) ^ (v15 >> 31) | 1;
LABEL_25:
      result = (9 * (__clz(v13) ^ 0x1F) + 73) >> 6;
      break;
    case 0x12:
      v14 = google::protobuf::MapKey::GetInt64Value(a2);
      v9 = (2 * v14) ^ (v14 >> 63) | 1;
LABEL_23:
      result = (9 * (__clz(v9) ^ 0x3F) + 73) >> 6;
      break;
    default:
      LODWORD(v16) = 3;
      v17 = (google::protobuf::internal **)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/prot"
                                           "obuf/wire_format.cc";
      v18 = 1564;
      memset(&__p, 0, sizeof(__p));
      std::string::append(&__p, "Cannot get here");
      google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v16);
LABEL_6:
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__p.__r_.__value_.__l.__data_);
      result = 0;
      break;
  }
  return result;
}

void sub_1888C2BFC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::internal::MapValueRefDataOnlyByteSize(google::protobuf::internal *this, const google::protobuf::FieldDescriptor *a2, const google::protobuf::MapValueConstRef *a3)
{
  unint64_t *v5;
  unint64_t v6;
  uint64_t result;
  uint64_t StringValue;
  uint64_t v9;
  uint64_t Int64Value;
  unint64_t v11;
  uint64_t MessageValue;
  uint64_t v13;
  int Int32Value;
  int v15;
  unsigned int v16;
  uint64_t v17;
  void (**v18)(google::protobuf::FieldDescriptor *, const google::protobuf::FieldDescriptor *, const char *);
  google::protobuf::internal **v19;
  int v20;
  std::string __p;
  google::protobuf::internal *v22;
  void (*v23)(google::protobuf::FieldDescriptor *, const google::protobuf::FieldDescriptor *, const char *);
  void (***v24)(google::protobuf::FieldDescriptor *, const google::protobuf::FieldDescriptor *, const char *);

  v5 = (unint64_t *)*((_QWORD *)this + 6);
  if (v5)
  {
    v22 = this;
    v23 = google::protobuf::FieldDescriptor::TypeOnceInit;
    v6 = atomic_load(v5);
    if (v6 != -1)
    {
      v18 = &v23;
      v19 = &v22;
      v24 = &v18;
      std::__call_once(v5, &v24, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  result = 4;
  switch(*((_DWORD *)this + 14))
  {
    case 1:
    case 6:
    case 0x10:
      return 8;
    case 2:
    case 7:
    case 0xF:
      return result;
    case 3:
      Int64Value = google::protobuf::MapValueConstRef::GetInt64Value(a2);
      goto LABEL_12;
    case 4:
      Int64Value = google::protobuf::MapValueConstRef::GetUInt64Value(a2);
LABEL_12:
      v11 = Int64Value | 1;
      return (9 * (__clz(v11) ^ 0x3F) + 73) >> 6;
    case 5:
      Int32Value = google::protobuf::MapValueConstRef::GetInt32Value(a2);
      if ((Int32Value & 0x80000000) == 0)
        goto LABEL_26;
      return 10;
    case 8:
      return 1;
    case 9:
    case 0xC:
      StringValue = google::protobuf::MapValueConstRef::GetStringValue(a2);
      v9 = *(unsigned __int8 *)(StringValue + 23);
      if ((v9 & 0x80u) != 0)
        v9 = *(_QWORD *)(StringValue + 8);
      return v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
    case 0xA:
      LODWORD(v18) = 3;
      v19 = (google::protobuf::internal **)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/prot"
                                           "obuf/wire_format.cc";
      v20 = 1572;
      memset(&__p, 0, sizeof(__p));
      std::string::append(&__p, "Unsupported");
      google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v18);
      goto LABEL_15;
    case 0xB:
      MessageValue = google::protobuf::MapValueConstRef::GetMessageValue(a2);
      v13 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)MessageValue + 72))(MessageValue);
      return v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6);
    case 0xD:
      Int32Value = google::protobuf::MapValueConstRef::GetUInt32Value(a2);
      goto LABEL_26;
    case 0xE:
      Int32Value = google::protobuf::MapValueConstRef::GetEnumValue(a2);
      if (Int32Value < 0)
        return 10;
LABEL_26:
      v16 = Int32Value | 1;
      return (9 * (__clz(v16) ^ 0x1F) + 73) >> 6;
    case 0x11:
      v15 = google::protobuf::MapValueConstRef::GetInt32Value(a2);
      v16 = (2 * v15) ^ (v15 >> 31) | 1;
      return (9 * (__clz(v16) ^ 0x1F) + 73) >> 6;
    case 0x12:
      v17 = google::protobuf::MapValueConstRef::GetInt64Value(a2);
      v11 = (2 * v17) ^ (v17 >> 63) | 1;
      return (9 * (__clz(v11) ^ 0x3F) + 73) >> 6;
    default:
      LODWORD(v18) = 3;
      v19 = (google::protobuf::internal **)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/prot"
                                           "obuf/wire_format.cc";
      v20 = 1604;
      memset(&__p, 0, sizeof(__p));
      std::string::append(&__p, "Cannot get here");
      google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v18);
LABEL_15:
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__p.__r_.__value_.__l.__data_);
      return 0;
  }
}

void sub_1888C2E7C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::internal::ComputeUnknownFieldsSize(google::protobuf::internal *this, const InternalMetadata *a2, _DWORD *a3, CachedSize *a4)
{
  google::protobuf::internal::WireFormat *v6;
  uint64_t result;

  if ((*(_QWORD *)this & 1) != 0)
    v6 = (google::protobuf::internal::WireFormat *)((*(_QWORD *)this & 0xFFFFFFFFFFFFFFFELL) + 8);
  else
    v6 = (google::protobuf::internal::WireFormat *)google::protobuf::UnknownFieldSet::default_instance(this);
  result = (uint64_t)a2
         + google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v6, (const google::protobuf::UnknownFieldSet *)a2);
  *a3 = result;
  return result;
}

uint64_t std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<google::protobuf::MapKey>,std::reverse_iterator<google::protobuf::MapKey*>>>::~__exception_guard_exceptions[abi:ne180100](uint64_t a1)
{
  uint64_t v3;
  uint64_t i;

  if (!*(_BYTE *)(a1 + 24))
  {
    v3 = *(_QWORD *)(*(_QWORD *)(a1 + 8) + 8);
    for (i = *(_QWORD *)(*(_QWORD *)(a1 + 16) + 8); i != v3; i += 32)
    {
      if (*(_DWORD *)(i + 24) == 9 && *(char *)(i + 23) < 0)
        operator delete(*(void **)i);
    }
  }
  return a1;
}

uint64_t std::__split_buffer<google::protobuf::MapKey>::~__split_buffer(uint64_t a1)
{
  void **v2;
  void **v3;
  void **v4;

  v3 = *(void ***)(a1 + 8);
  v2 = *(void ***)(a1 + 16);
  if (v2 != v3)
  {
    do
    {
      v4 = v2 - 4;
      *(_QWORD *)(a1 + 16) = v2 - 4;
      if (*((_DWORD *)v2 - 2) == 9 && *((char *)v2 - 9) < 0)
      {
        operator delete(*v4);
        v4 = *(void ***)(a1 + 16);
      }
      v2 = v4;
    }
    while (v4 != v3);
  }
  if (*(_QWORD *)a1)
    operator delete(*(void **)a1);
  return a1;
}

void std::__introsort<std::_ClassicAlgPolicy,google::protobuf::internal::MapKeySorter::MapKeyComparator &,google::protobuf::MapKey *,false>(google::protobuf::MapKey *a1, const google::protobuf::MapKey *a2, uint64_t a3, char a4)
{
  uint64_t v8;
  google::protobuf::MapKey *v9;
  const google::protobuf::MapKey *v10;
  uint64_t v11;
  uint64_t v12;
  const google::protobuf::MapKey *v13;
  unint64_t v14;
  google::protobuf::MapKey *v15;
  google::protobuf::MapKey *v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  unint64_t v20;
  google::protobuf::MapKey *v21;
  google::protobuf::MapKey *v22;
  const google::protobuf::MapKey *v23;
  BOOL v24;
  google::protobuf::MapKey *v25;
  int v26;
  google::protobuf::MapKey *v27;
  google::protobuf::MapKey *v28;
  uint64_t v29;
  const google::protobuf::MapKey *v30;
  google::protobuf::MapKey *v31;
  uint64_t v32;
  char v33;
  std::string *v34;
  int64_t v35;
  int64_t v36;
  int64_t v37;
  uint64_t v38;
  std::string *v39;
  std::string *v40;
  std::string *v41;
  uint64_t v42;
  uint64_t v43;
  const google::protobuf::MapKey *v44;
  uint64_t v45;
  std::string *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  const google::protobuf::MapKey *v52;
  std::string *v53;
  google::protobuf::MapKey *v55;
  const google::protobuf::MapKey *v56;
  google::protobuf::MapKey *v57;
  google::protobuf::MapKey *v58;
  const google::protobuf::MapKey *v59;
  std::string v60;
  int v61;
  std::string __p;
  int v63;
  uint64_t v64;

  v64 = *MEMORY[0x1E0C80C00];
LABEL_2:
  v8 = (uint64_t)a1;
  v57 = (google::protobuf::MapKey *)((char *)a1 + 64);
  v58 = (google::protobuf::MapKey *)((char *)a1 + 32);
  v9 = (google::protobuf::MapKey *)((char *)a1 - 32);
  v10 = a2;
  while (2)
  {
    v11 = (uint64_t)v10 - v8;
    v12 = ((uint64_t)v10 - v8) >> 5;
    switch(v12)
    {
      case 0:
      case 1:
        return;
      case 2:
        if (google::protobuf::internal::MapKeySorter::MapKeyComparator::operator()((const google::protobuf::MapKey *)((char *)v10 - 32), (google::protobuf::MapKey *)v8))std::_IterOps<std::_ClassicAlgPolicy>::iter_swap[abi:ne180100]<google::protobuf::MapKey *&,google::protobuf::MapKey *&>((google::protobuf::MapKey *)v8, (const google::protobuf::MapKey *)((char *)v10 - 32));
        return;
      case 3:
        std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::MapKeySorter::MapKeyComparator &,google::protobuf::MapKey *>((google::protobuf::MapKey *)v8, (google::protobuf::MapKey *)(v8 + 32), (const google::protobuf::MapKey *)((char *)v10 - 32));
        return;
      case 4:
        std::__sort4[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::MapKeySorter::MapKeyComparator &,google::protobuf::MapKey *>((google::protobuf::MapKey *)v8, (google::protobuf::MapKey *)(v8 + 32), (google::protobuf::MapKey *)(v8 + 64), (const google::protobuf::MapKey *)((char *)v10 - 32));
        return;
      case 5:
        std::__sort5[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::MapKeySorter::MapKeyComparator &,google::protobuf::MapKey *>((google::protobuf::MapKey *)v8, (google::protobuf::MapKey *)(v8 + 32), (google::protobuf::MapKey *)(v8 + 64), (const google::protobuf::MapKey *)(v8 + 96), (const google::protobuf::MapKey *)((char *)v10 - 32));
        return;
      default:
        if (v11 > 767)
        {
          if (!a3)
          {
            if ((const google::protobuf::MapKey *)v8 != v10)
            {
              v59 = v10;
              v35 = (unint64_t)(v12 - 2) >> 1;
              v36 = v35;
              do
              {
                v37 = v36;
                if (v35 >= v36)
                {
                  v38 = (2 * v36) | 1;
                  v39 = (std::string *)(v8 + 32 * v38);
                  if (2 * v36 + 2 < v12
                    && google::protobuf::internal::MapKeySorter::MapKeyComparator::operator()((google::protobuf::MapKey *)(v8 + 32 * v38), (google::protobuf::MapKey *)&v39[1].__r_.__value_.__r.__words[1]))
                  {
                    v39 = (std::string *)((char *)v39 + 32);
                    v38 = 2 * v37 + 2;
                  }
                  v40 = (std::string *)(v8 + 32 * v37);
                  if ((google::protobuf::internal::MapKeySorter::MapKeyComparator::operator()((google::protobuf::MapKey *)v39, (google::protobuf::MapKey *)v40) & 1) == 0)
                  {
                    v63 = 0;
                    google::protobuf::MapKey::CopyFrom(&__p, (const google::protobuf::MapKey *)(v8 + 32 * v37));
                    do
                    {
                      v41 = v39;
                      google::protobuf::MapKey::CopyFrom(v40, (const google::protobuf::MapKey *)v39);
                      if (v35 < v38)
                        break;
                      v42 = (2 * v38) | 1;
                      v39 = (std::string *)(v8 + 32 * v42);
                      v38 = 2 * v38 + 2;
                      if (v38 >= v12)
                      {
                        v38 = v42;
                      }
                      else if (google::protobuf::internal::MapKeySorter::MapKeyComparator::operator()((google::protobuf::MapKey *)(v8 + 32 * v42), (google::protobuf::MapKey *)&v39[1].__r_.__value_.__r.__words[1]))
                      {
                        v39 = (std::string *)((char *)v39 + 32);
                      }
                      else
                      {
                        v38 = v42;
                      }
                      v40 = v41;
                    }
                    while (!google::protobuf::internal::MapKeySorter::MapKeyComparator::operator()((google::protobuf::MapKey *)v39, (google::protobuf::MapKey *)&__p));
                    google::protobuf::MapKey::CopyFrom(v41, (const google::protobuf::MapKey *)&__p);
                    if (v63 == 9 && SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
                      operator delete(__p.__r_.__value_.__l.__data_);
                  }
                }
                v36 = v37 - 1;
              }
              while (v37);
              v43 = (unint64_t)v11 >> 5;
              v44 = v59;
              do
              {
                if (v43 >= 2)
                {
                  v61 = 0;
                  google::protobuf::MapKey::CopyFrom(&v60, (const google::protobuf::MapKey *)v8);
                  v45 = 0;
                  v46 = (std::string *)v8;
                  do
                  {
                    v47 = (uint64_t)(&v46[1].__r_.__value_.__l.__size_ + 4 * v45);
                    v48 = 2 * v45;
                    v45 = (2 * v45) | 1;
                    v49 = v48 + 2;
                    if (v48 + 2 < v43
                      && google::protobuf::internal::MapKeySorter::MapKeyComparator::operator()((google::protobuf::MapKey *)v47, (google::protobuf::MapKey *)(v47 + 32)))
                    {
                      v47 += 32;
                      v45 = v49;
                    }
                    google::protobuf::MapKey::CopyFrom(v46, (const google::protobuf::MapKey *)v47);
                    v46 = (std::string *)v47;
                  }
                  while (v45 <= (uint64_t)((unint64_t)(v43 - 2) >> 1));
                  if ((const google::protobuf::MapKey *)v47 == (const google::protobuf::MapKey *)((char *)v44 - 32))
                  {
                    google::protobuf::MapKey::CopyFrom((std::string *)v47, (const google::protobuf::MapKey *)&v60);
                  }
                  else
                  {
                    google::protobuf::MapKey::CopyFrom((std::string *)v47, (const google::protobuf::MapKey *)((char *)v44 - 32));
                    google::protobuf::MapKey::CopyFrom((std::string *)((char *)v44 - 32), (const google::protobuf::MapKey *)&v60);
                    v50 = v47 - v8 + 32;
                    if (v50 >= 33)
                    {
                      v51 = (((unint64_t)v50 >> 5) - 2) >> 1;
                      v52 = (const google::protobuf::MapKey *)(v8 + 32 * v51);
                      if (google::protobuf::internal::MapKeySorter::MapKeyComparator::operator()(v52, (google::protobuf::MapKey *)v47))
                      {
                        v63 = 0;
                        google::protobuf::MapKey::CopyFrom(&__p, (const google::protobuf::MapKey *)v47);
                        do
                        {
                          v53 = (std::string *)v52;
                          google::protobuf::MapKey::CopyFrom((std::string *)v47, v52);
                          if (!v51)
                            break;
                          v51 = (v51 - 1) >> 1;
                          v52 = (const google::protobuf::MapKey *)(v8 + 32 * v51);
                          v47 = (uint64_t)v53;
                        }
                        while ((google::protobuf::internal::MapKeySorter::MapKeyComparator::operator()(v52, (google::protobuf::MapKey *)&__p) & 1) != 0);
                        google::protobuf::MapKey::CopyFrom(v53, (const google::protobuf::MapKey *)&__p);
                        if (v63 == 9 && SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
                          operator delete(__p.__r_.__value_.__l.__data_);
                      }
                    }
                  }
                  if (v61 == 9 && SHIBYTE(v60.__r_.__value_.__r.__words[2]) < 0)
                    operator delete(v60.__r_.__value_.__l.__data_);
                }
                v44 = (const google::protobuf::MapKey *)((char *)v44 - 32);
              }
              while ((unint64_t)v43-- > 2);
            }
            return;
          }
          v13 = v10;
          v14 = (unint64_t)v12 >> 1;
          v15 = (google::protobuf::MapKey *)(v8 + 32 * ((unint64_t)v12 >> 1));
          a2 = v13;
          v16 = (const google::protobuf::MapKey *)((char *)v13 - 32);
          if ((unint64_t)v11 <= 0x1000)
          {
            std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::MapKeySorter::MapKeyComparator &,google::protobuf::MapKey *>(v15, (google::protobuf::MapKey *)v8, (const google::protobuf::MapKey *)((char *)v13 - 32));
          }
          else
          {
            std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::MapKeySorter::MapKeyComparator &,google::protobuf::MapKey *>((google::protobuf::MapKey *)v8, v15, (const google::protobuf::MapKey *)((char *)v13 - 32));
            v17 = v8 + 32 * v14;
            std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::MapKeySorter::MapKeyComparator &,google::protobuf::MapKey *>(v58, (google::protobuf::MapKey *)(v17 - 32), (const google::protobuf::MapKey *)((char *)a2 - 64));
            std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::MapKeySorter::MapKeyComparator &,google::protobuf::MapKey *>(v57, (google::protobuf::MapKey *)(v17 + 32), (const google::protobuf::MapKey *)((char *)a2 - 96));
            std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::MapKeySorter::MapKeyComparator &,google::protobuf::MapKey *>((google::protobuf::MapKey *)(v17 - 32), v15, (google::protobuf::MapKey *)(v17 + 32));
            v63 = 0;
            google::protobuf::MapKey::CopyFrom(&__p, (const google::protobuf::MapKey *)v8);
            google::protobuf::MapKey::CopyFrom((std::string *)v8, v15);
            google::protobuf::MapKey::CopyFrom((std::string *)v15, (const google::protobuf::MapKey *)&__p);
            if (v63 == 9 && SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
              operator delete(__p.__r_.__value_.__l.__data_);
          }
          --a3;
          if ((a4 & 1) != 0
            || (google::protobuf::internal::MapKeySorter::MapKeyComparator::operator()(v9, (google::protobuf::MapKey *)v8) & 1) != 0)
          {
            v63 = 0;
            google::protobuf::MapKey::CopyFrom(&__p, (const google::protobuf::MapKey *)v8);
            v18 = 0;
            do
            {
              v19 = google::protobuf::internal::MapKeySorter::MapKeyComparator::operator()((google::protobuf::MapKey *)(v8 + v18 + 32), (google::protobuf::MapKey *)&__p);
              v18 += 32;
            }
            while ((v19 & 1) != 0);
            v20 = v8 + v18;
            v21 = a2;
            if (v18 == 32)
            {
              v21 = a2;
              do
              {
                if (v20 >= (unint64_t)v21)
                  break;
                v21 = (google::protobuf::MapKey *)((char *)v21 - 32);
              }
              while ((google::protobuf::internal::MapKeySorter::MapKeyComparator::operator()(v21, (google::protobuf::MapKey *)&__p) & 1) == 0);
            }
            else
            {
              do
                v21 = (google::protobuf::MapKey *)((char *)v21 - 32);
              while (!google::protobuf::internal::MapKeySorter::MapKeyComparator::operator()(v21, (google::protobuf::MapKey *)&__p));
            }
            if (v20 >= (unint64_t)v21)
            {
              v10 = (const google::protobuf::MapKey *)(v20 - 32);
            }
            else
            {
              v22 = (google::protobuf::MapKey *)(v8 + v18);
              v23 = v21;
              do
              {
                std::_IterOps<std::_ClassicAlgPolicy>::iter_swap[abi:ne180100]<google::protobuf::MapKey *&,google::protobuf::MapKey *&>(v22, v23);
                do
                  v22 = (google::protobuf::MapKey *)((char *)v22 + 32);
                while ((google::protobuf::internal::MapKeySorter::MapKeyComparator::operator()(v22, (google::protobuf::MapKey *)&__p) & 1) != 0);
                do
                  v23 = (const google::protobuf::MapKey *)((char *)v23 - 32);
                while (!google::protobuf::internal::MapKeySorter::MapKeyComparator::operator()(v23, (google::protobuf::MapKey *)&__p));
              }
              while (v22 < v23);
              v10 = (google::protobuf::MapKey *)((char *)v22 - 32);
            }
            if (v10 != (const google::protobuf::MapKey *)v8)
              google::protobuf::MapKey::CopyFrom((std::string *)v8, v10);
            google::protobuf::MapKey::CopyFrom((std::string *)v10, (const google::protobuf::MapKey *)&__p);
            if (v63 == 9 && SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
              operator delete(__p.__r_.__value_.__l.__data_);
            if (v20 >= (unint64_t)v21)
            {
              v24 = std::__insertion_sort_incomplete[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::MapKeySorter::MapKeyComparator &,google::protobuf::MapKey *>(v8, v10);
              a1 = (const google::protobuf::MapKey *)((char *)v10 + 32);
              if (std::__insertion_sort_incomplete[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::MapKeySorter::MapKeyComparator &,google::protobuf::MapKey *>((uint64_t)v10 + 32, a2))
              {
                if (!v24)
                  continue;
                return;
              }
              if (v24)
                goto LABEL_2;
            }
            std::__introsort<std::_ClassicAlgPolicy,google::protobuf::internal::MapKeySorter::MapKeyComparator &,google::protobuf::MapKey *,false>(v8, v10, a3, a4 & 1);
            a4 = 0;
            a1 = (const google::protobuf::MapKey *)((char *)v10 + 32);
            goto LABEL_2;
          }
          v63 = 0;
          google::protobuf::MapKey::CopyFrom(&__p, (const google::protobuf::MapKey *)v8);
          if ((google::protobuf::internal::MapKeySorter::MapKeyComparator::operator()((google::protobuf::MapKey *)&__p, v16) & 1) != 0)
          {
            a1 = (google::protobuf::MapKey *)v8;
            do
              a1 = (google::protobuf::MapKey *)((char *)a1 + 32);
            while ((google::protobuf::internal::MapKeySorter::MapKeyComparator::operator()((google::protobuf::MapKey *)&__p, a1) & 1) == 0);
          }
          else
          {
            v25 = (google::protobuf::MapKey *)(v8 + 32);
            do
            {
              a1 = v25;
              if (v25 >= a2)
                break;
              v26 = google::protobuf::internal::MapKeySorter::MapKeyComparator::operator()((google::protobuf::MapKey *)&__p, v25);
              v25 = (google::protobuf::MapKey *)((char *)a1 + 32);
            }
            while (!v26);
          }
          v27 = a2;
          if (a1 < a2)
          {
            v27 = a2;
            do
              v27 = (google::protobuf::MapKey *)((char *)v27 - 32);
            while ((google::protobuf::internal::MapKeySorter::MapKeyComparator::operator()((google::protobuf::MapKey *)&__p, v27) & 1) != 0);
          }
          while (a1 < v27)
          {
            std::_IterOps<std::_ClassicAlgPolicy>::iter_swap[abi:ne180100]<google::protobuf::MapKey *&,google::protobuf::MapKey *&>(a1, v27);
            do
              a1 = (google::protobuf::MapKey *)((char *)a1 + 32);
            while (!google::protobuf::internal::MapKeySorter::MapKeyComparator::operator()((google::protobuf::MapKey *)&__p, a1));
            do
              v27 = (google::protobuf::MapKey *)((char *)v27 - 32);
            while ((google::protobuf::internal::MapKeySorter::MapKeyComparator::operator()((google::protobuf::MapKey *)&__p, v27) & 1) != 0);
          }
          if ((google::protobuf::MapKey *)((char *)a1 - 32) != (google::protobuf::MapKey *)v8)
            google::protobuf::MapKey::CopyFrom((std::string *)v8, (google::protobuf::MapKey *)((char *)a1 - 32));
          google::protobuf::MapKey::CopyFrom((std::string *)((char *)a1 - 32), (const google::protobuf::MapKey *)&__p);
          if (v63 == 9 && SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
            operator delete(__p.__r_.__value_.__l.__data_);
          a4 = 0;
          goto LABEL_2;
        }
        if ((a4 & 1) != 0)
        {
          if ((const google::protobuf::MapKey *)v8 != v10)
          {
            v28 = (google::protobuf::MapKey *)(v8 + 32);
            if ((const google::protobuf::MapKey *)(v8 + 32) != v10)
            {
              v29 = 0;
              v30 = (const google::protobuf::MapKey *)v8;
              do
              {
                v31 = v30;
                v30 = v28;
                if (google::protobuf::internal::MapKeySorter::MapKeyComparator::operator()(v28, v31))
                {
                  v63 = 0;
                  google::protobuf::MapKey::CopyFrom(&__p, v30);
                  v32 = v29;
                  while (1)
                  {
                    google::protobuf::MapKey::CopyFrom((std::string *)(v8 + v32 + 32), (const google::protobuf::MapKey *)(v8 + v32));
                    if (!v32)
                      break;
                    v33 = google::protobuf::internal::MapKeySorter::MapKeyComparator::operator()((google::protobuf::MapKey *)&__p, (google::protobuf::MapKey *)(v8 + v32 - 32));
                    v32 -= 32;
                    if ((v33 & 1) == 0)
                    {
                      v34 = (std::string *)(v8 + v32 + 32);
                      goto LABEL_77;
                    }
                  }
                  v34 = (std::string *)v8;
LABEL_77:
                  google::protobuf::MapKey::CopyFrom(v34, (const google::protobuf::MapKey *)&__p);
                  if (v63 == 9 && SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
                    operator delete(__p.__r_.__value_.__l.__data_);
                }
                v28 = (const google::protobuf::MapKey *)((char *)v30 + 32);
                v29 += 32;
              }
              while ((const google::protobuf::MapKey *)((char *)v30 + 32) != v10);
            }
          }
        }
        else if ((const google::protobuf::MapKey *)v8 != v10)
        {
          v55 = (google::protobuf::MapKey *)(v8 + 32);
          while (v55 != v10)
          {
            v56 = v55;
            if (google::protobuf::internal::MapKeySorter::MapKeyComparator::operator()(v55, (google::protobuf::MapKey *)v8))
            {
              v63 = 0;
              google::protobuf::MapKey::CopyFrom(&__p, v56);
              do
              {
                google::protobuf::MapKey::CopyFrom((std::string *)(v8 + 32), (const google::protobuf::MapKey *)v8);
                v8 -= 32;
              }
              while ((google::protobuf::internal::MapKeySorter::MapKeyComparator::operator()((google::protobuf::MapKey *)&__p, (google::protobuf::MapKey *)v8) & 1) != 0);
              google::protobuf::MapKey::CopyFrom((std::string *)(v8 + 32), (const google::protobuf::MapKey *)&__p);
              if (v63 == 9 && SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
                operator delete(__p.__r_.__value_.__l.__data_);
            }
            v55 = (const google::protobuf::MapKey *)((char *)v56 + 32);
            v8 = (uint64_t)v56;
          }
        }
        return;
    }
  }
}

void sub_1888C3820(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, int a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24,int a25)
{
  if (a25 == 9 && a24 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::internal::MapKeySorter::MapKeyComparator::operator()(google::protobuf::MapKey *a1, google::protobuf::MapKey *a2)
{
  int Int32Value;
  unsigned int UInt32Value;
  BOOL v7;
  uint64_t result;
  google::protobuf::MapKey *StringValue;
  google::protobuf::MapKey *v10;
  int v11;
  int v12;
  size_t v13;
  google::protobuf::MapKey *v14;
  size_t v15;
  google::protobuf::MapKey *v16;
  size_t v17;
  int v18;
  uint64_t Int64Value;
  unint64_t UInt64Value;
  int BoolValue;
  int v22;
  const char *v23;
  int v24;
  std::string __p;

  switch(google::protobuf::MapKey::type(a1))
  {
    case 1u:
      Int32Value = google::protobuf::MapKey::GetInt32Value(a1);
      return Int32Value < (int)google::protobuf::MapKey::GetInt32Value(a2);
    case 2u:
      Int64Value = google::protobuf::MapKey::GetInt64Value(a1);
      return Int64Value < google::protobuf::MapKey::GetInt64Value(a2);
    case 3u:
      UInt32Value = google::protobuf::MapKey::GetUInt32Value(a1);
      v7 = UInt32Value >= google::protobuf::MapKey::GetUInt32Value(a2);
      goto LABEL_30;
    case 4u:
      UInt64Value = google::protobuf::MapKey::GetUInt64Value(a1);
      v7 = UInt64Value >= google::protobuf::MapKey::GetUInt64Value(a2);
LABEL_30:
      result = !v7;
      break;
    case 7u:
      BoolValue = google::protobuf::MapKey::GetBoolValue(a1);
      result = google::protobuf::MapKey::GetBoolValue(a2) & (BoolValue ^ 1);
      break;
    case 9u:
      StringValue = google::protobuf::MapKey::GetStringValue(a1);
      v10 = google::protobuf::MapKey::GetStringValue(a2);
      v11 = *((char *)v10 + 23);
      v12 = *((char *)StringValue + 23);
      if (v12 >= 0)
        v13 = *((unsigned __int8 *)StringValue + 23);
      else
        v13 = *((_QWORD *)StringValue + 1);
      if (v12 >= 0)
        v14 = StringValue;
      else
        v14 = *(google::protobuf::MapKey **)StringValue;
      if (v11 >= 0)
        v15 = *((unsigned __int8 *)v10 + 23);
      else
        v15 = *((_QWORD *)v10 + 1);
      if (v11 >= 0)
        v16 = v10;
      else
        v16 = *(google::protobuf::MapKey **)v10;
      if (v15 >= v13)
        v17 = v13;
      else
        v17 = v15;
      v18 = memcmp(v14, v16, v17);
      if (v18)
        result = v18 < 0;
      else
        result = v13 < v15;
      break;
    default:
      v22 = 2;
      v23 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/wire_format.cc";
      v24 = 1178;
      memset(&__p, 0, sizeof(__p));
      std::string::append(&__p, "Invalid key for map field.");
      google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v22);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__p.__r_.__value_.__l.__data_);
      result = 1;
      break;
  }
  return result;
}

void sub_1888C3A98(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void std::_IterOps<std::_ClassicAlgPolicy>::iter_swap[abi:ne180100]<google::protobuf::MapKey *&,google::protobuf::MapKey *&>(google::protobuf::MapKey *a1, const google::protobuf::MapKey *a2)
{
  std::string __p;
  int v5;
  uint64_t v6;

  v6 = *MEMORY[0x1E0C80C00];
  v5 = 0;
  google::protobuf::MapKey::CopyFrom(&__p, a1);
  google::protobuf::MapKey::CopyFrom((std::string *)a1, a2);
  google::protobuf::MapKey::CopyFrom((std::string *)a2, (const google::protobuf::MapKey *)&__p);
  if (v5 == 9 && SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
}

void sub_1888C3B50(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, int a16)
{
  _Unwind_Resume(exception_object);
}

void std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::MapKeySorter::MapKeyComparator &,google::protobuf::MapKey *>(google::protobuf::MapKey *a1, google::protobuf::MapKey *a2, google::protobuf::MapKey *a3)
{
  char v6;
  int v7;
  google::protobuf::MapKey *v8;

  v6 = google::protobuf::internal::MapKeySorter::MapKeyComparator::operator()(a2, a1);
  v7 = google::protobuf::internal::MapKeySorter::MapKeyComparator::operator()(a3, a2);
  if ((v6 & 1) != 0)
  {
    if (v7)
    {
      v8 = a1;
    }
    else
    {
      std::_IterOps<std::_ClassicAlgPolicy>::iter_swap[abi:ne180100]<google::protobuf::MapKey *&,google::protobuf::MapKey *&>(a1, a2);
      if (!google::protobuf::internal::MapKeySorter::MapKeyComparator::operator()(a3, a2))
        return;
      v8 = a2;
    }
    std::_IterOps<std::_ClassicAlgPolicy>::iter_swap[abi:ne180100]<google::protobuf::MapKey *&,google::protobuf::MapKey *&>(v8, a3);
  }
  else if (v7)
  {
    std::_IterOps<std::_ClassicAlgPolicy>::iter_swap[abi:ne180100]<google::protobuf::MapKey *&,google::protobuf::MapKey *&>(a2, a3);
    if (google::protobuf::internal::MapKeySorter::MapKeyComparator::operator()(a2, a1))
      std::_IterOps<std::_ClassicAlgPolicy>::iter_swap[abi:ne180100]<google::protobuf::MapKey *&,google::protobuf::MapKey *&>(a1, a2);
  }
}

BOOL std::__insertion_sort_incomplete[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::MapKeySorter::MapKeyComparator &,google::protobuf::MapKey *>(uint64_t a1, const google::protobuf::MapKey *a2)
{
  uint64_t v4;
  _BOOL8 result;
  const google::protobuf::MapKey *v6;
  google::protobuf::MapKey *v7;
  const google::protobuf::MapKey *v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  char v12;
  std::string *v13;
  std::string __p;
  int v15;
  uint64_t v16;

  v16 = *MEMORY[0x1E0C80C00];
  v4 = ((uint64_t)a2 - a1) >> 5;
  result = 1;
  switch(v4)
  {
    case 0:
    case 1:
      return result;
    case 2:
      v6 = (const google::protobuf::MapKey *)((char *)a2 - 32);
      if (google::protobuf::internal::MapKeySorter::MapKeyComparator::operator()((const google::protobuf::MapKey *)((char *)a2 - 32), (google::protobuf::MapKey *)a1))std::_IterOps<std::_ClassicAlgPolicy>::iter_swap[abi:ne180100]<google::protobuf::MapKey *&,google::protobuf::MapKey *&>((google::protobuf::MapKey *)a1, v6);
      return 1;
    case 3:
      std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::MapKeySorter::MapKeyComparator &,google::protobuf::MapKey *>((google::protobuf::MapKey *)a1, (google::protobuf::MapKey *)(a1 + 32), (const google::protobuf::MapKey *)((char *)a2 - 32));
      return 1;
    case 4:
      std::__sort4[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::MapKeySorter::MapKeyComparator &,google::protobuf::MapKey *>((google::protobuf::MapKey *)a1, (google::protobuf::MapKey *)(a1 + 32), (google::protobuf::MapKey *)(a1 + 64), (const google::protobuf::MapKey *)((char *)a2 - 32));
      return 1;
    case 5:
      std::__sort5[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::MapKeySorter::MapKeyComparator &,google::protobuf::MapKey *>((google::protobuf::MapKey *)a1, (google::protobuf::MapKey *)(a1 + 32), (google::protobuf::MapKey *)(a1 + 64), (const google::protobuf::MapKey *)(a1 + 96), (const google::protobuf::MapKey *)((char *)a2 - 32));
      return 1;
    default:
      v7 = (google::protobuf::MapKey *)(a1 + 64);
      std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::MapKeySorter::MapKeyComparator &,google::protobuf::MapKey *>((google::protobuf::MapKey *)a1, (google::protobuf::MapKey *)(a1 + 32), (google::protobuf::MapKey *)(a1 + 64));
      v8 = (const google::protobuf::MapKey *)(a1 + 96);
      if ((const google::protobuf::MapKey *)(a1 + 96) == a2)
        return 1;
      v9 = 0;
      v10 = 0;
      break;
  }
  while (1)
  {
    if (google::protobuf::internal::MapKeySorter::MapKeyComparator::operator()(v8, v7))
    {
      v15 = 0;
      google::protobuf::MapKey::CopyFrom(&__p, v8);
      v11 = v9;
      while (1)
      {
        google::protobuf::MapKey::CopyFrom((std::string *)(a1 + v11 + 96), (const google::protobuf::MapKey *)(a1 + v11 + 64));
        if (v11 == -64)
          break;
        v12 = google::protobuf::internal::MapKeySorter::MapKeyComparator::operator()((google::protobuf::MapKey *)&__p, (google::protobuf::MapKey *)(a1 + v11 + 32));
        v11 -= 32;
        if ((v12 & 1) == 0)
        {
          v13 = (std::string *)(a1 + v11 + 96);
          goto LABEL_12;
        }
      }
      v13 = (std::string *)a1;
LABEL_12:
      google::protobuf::MapKey::CopyFrom(v13, (const google::protobuf::MapKey *)&__p);
      if (v15 == 9 && SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__p.__r_.__value_.__l.__data_);
      if (++v10 == 8)
        return (const google::protobuf::MapKey *)((char *)v8 + 32) == a2;
    }
    v7 = v8;
    v9 += 32;
    v8 = (const google::protobuf::MapKey *)((char *)v8 + 32);
    if (v8 == a2)
      return 1;
  }
}

void sub_1888C3E1C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, int a16)
{
  if (a16 == 9 && a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void std::__sort4[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::MapKeySorter::MapKeyComparator &,google::protobuf::MapKey *>(google::protobuf::MapKey *a1, google::protobuf::MapKey *a2, google::protobuf::MapKey *a3, const google::protobuf::MapKey *a4)
{
  std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::MapKeySorter::MapKeyComparator &,google::protobuf::MapKey *>(a1, a2, a3);
  if (google::protobuf::internal::MapKeySorter::MapKeyComparator::operator()(a4, a3))
  {
    std::_IterOps<std::_ClassicAlgPolicy>::iter_swap[abi:ne180100]<google::protobuf::MapKey *&,google::protobuf::MapKey *&>(a3, a4);
    if (google::protobuf::internal::MapKeySorter::MapKeyComparator::operator()(a3, a2))
    {
      std::_IterOps<std::_ClassicAlgPolicy>::iter_swap[abi:ne180100]<google::protobuf::MapKey *&,google::protobuf::MapKey *&>(a2, a3);
      if (google::protobuf::internal::MapKeySorter::MapKeyComparator::operator()(a2, a1))
        std::_IterOps<std::_ClassicAlgPolicy>::iter_swap[abi:ne180100]<google::protobuf::MapKey *&,google::protobuf::MapKey *&>(a1, a2);
    }
  }
}

void std::__sort5[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::MapKeySorter::MapKeyComparator &,google::protobuf::MapKey *>(google::protobuf::MapKey *a1, google::protobuf::MapKey *a2, google::protobuf::MapKey *a3, const google::protobuf::MapKey *a4, const google::protobuf::MapKey *a5)
{
  std::__sort4[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::MapKeySorter::MapKeyComparator &,google::protobuf::MapKey *>(a1, a2, a3, a4);
  if (google::protobuf::internal::MapKeySorter::MapKeyComparator::operator()(a5, a4))
  {
    std::_IterOps<std::_ClassicAlgPolicy>::iter_swap[abi:ne180100]<google::protobuf::MapKey *&,google::protobuf::MapKey *&>(a4, a5);
    if (google::protobuf::internal::MapKeySorter::MapKeyComparator::operator()(a4, a3))
    {
      std::_IterOps<std::_ClassicAlgPolicy>::iter_swap[abi:ne180100]<google::protobuf::MapKey *&,google::protobuf::MapKey *&>(a3, a4);
      if (google::protobuf::internal::MapKeySorter::MapKeyComparator::operator()(a3, a2))
      {
        std::_IterOps<std::_ClassicAlgPolicy>::iter_swap[abi:ne180100]<google::protobuf::MapKey *&,google::protobuf::MapKey *&>(a2, a3);
        if (google::protobuf::internal::MapKeySorter::MapKeyComparator::operator()(a2, a1))
          std::_IterOps<std::_ClassicAlgPolicy>::iter_swap[abi:ne180100]<google::protobuf::MapKey *&,google::protobuf::MapKey *&>(a1, a2);
      }
    }
  }
}

uint64_t google::protobuf::internal::RepeatedFieldRefIterator<google::protobuf::Message>::~RepeatedFieldRefIterator(uint64_t a1)
{
  uint64_t v2;

  (*(void (**)(_QWORD, _QWORD, _QWORD))(**(_QWORD **)(a1 + 8) + 112))(*(_QWORD *)(a1 + 8), *(_QWORD *)a1, *(_QWORD *)(a1 + 16));
  v2 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  return a1;
}

const google::protobuf::Message **std::__stable_sort<std::_ClassicAlgPolicy,google::protobuf::DynamicMapSorter::MapEntryMessageComparator &,std::__wrap_iter<google::protobuf::Message const**>>(const google::protobuf::Message **result, const google::protobuf::Message **a2, const google::protobuf::FieldDescriptor **a3, unint64_t a4, const google::protobuf::Message **a5, uint64_t a6)
{
  const google::protobuf::Message **v8;
  const google::protobuf::Message *v9;
  const google::protobuf::Message **v11;
  uint64_t v12;
  const google::protobuf::Message **v13;
  const google::protobuf::Message *v14;
  const google::protobuf::Message *v15;
  uint64_t v16;
  const google::protobuf::Message **v17;
  const google::protobuf::Message **v19;
  unint64_t v20;
  const google::protobuf::Message **v21;
  unint64_t v22;
  const google::protobuf::Message **v23;
  const google::protobuf::Message **v24;
  const google::protobuf::Message **v25;
  const google::protobuf::Message **v26;
  uint64_t v27;
  uint64_t v28;

  if (a4 >= 2)
  {
    v8 = result;
    if (a4 == 2)
    {
      result = (const google::protobuf::Message **)google::protobuf::DynamicMapSorter::MapEntryMessageComparator::operator()(a3, *(a2 - 1), *result);
      if ((_DWORD)result)
      {
        v9 = *v8;
        *v8 = *(a2 - 1);
        *(a2 - 1) = v9;
      }
    }
    else if ((uint64_t)a4 > 128)
    {
      v19 = a5;
      v20 = a4 >> 1;
      v21 = &result[a4 >> 1];
      v22 = a4 >> 1;
      if ((uint64_t)a4 <= a6)
      {
        std::__stable_sort_move<std::_ClassicAlgPolicy,google::protobuf::DynamicMapSorter::MapEntryMessageComparator &,std::__wrap_iter<google::protobuf::Message const**>>(result, v21, a3, v22, a5);
        v23 = &v19[v20];
        result = std::__stable_sort_move<std::_ClassicAlgPolicy,google::protobuf::DynamicMapSorter::MapEntryMessageComparator &,std::__wrap_iter<google::protobuf::Message const**>>(&v8[a4 >> 1], a2, a3, a4 - (a4 >> 1), v23);
        v24 = &v19[a4];
        v25 = v23;
        while (v25 != v24)
        {
          result = (const google::protobuf::Message **)google::protobuf::DynamicMapSorter::MapEntryMessageComparator::operator()(a3, *v25, *v19);
          if ((_DWORD)result)
            v26 = v25;
          else
            v26 = v19;
          v19 += result ^ 1;
          v25 += result;
          *v8++ = *v26;
          if (v19 == v23)
          {
            if (v25 != v24)
            {
              v27 = 0;
              do
              {
                v8[v27] = v25[v27];
                ++v27;
              }
              while (&v25[v27] != v24);
            }
            return result;
          }
        }
        if (v19 != v23)
        {
          v28 = 0;
          do
          {
            v8[v28] = v19[v28];
            ++v28;
          }
          while (&v19[v28] != v23);
        }
      }
      else
      {
        std::__stable_sort<std::_ClassicAlgPolicy,google::protobuf::DynamicMapSorter::MapEntryMessageComparator &,std::__wrap_iter<google::protobuf::Message const**>>(result, v21, a3, v22, a5, a6);
        std::__stable_sort<std::_ClassicAlgPolicy,google::protobuf::DynamicMapSorter::MapEntryMessageComparator &,std::__wrap_iter<google::protobuf::Message const**>>(&v8[a4 >> 1], a2, a3, a4 - (a4 >> 1), v19, a6);
        return (const google::protobuf::Message **)std::__inplace_merge<std::_ClassicAlgPolicy,google::protobuf::DynamicMapSorter::MapEntryMessageComparator &,std::__wrap_iter<google::protobuf::Message const**>>((uint64_t)v8, &v8[a4 >> 1], a2, a3, a4 >> 1, a4 - (a4 >> 1), v19, a6);
      }
    }
    else if (result != a2)
    {
      v11 = result + 1;
      if (result + 1 != a2)
      {
        v12 = 0;
        v13 = result;
        do
        {
          v14 = *v13;
          v13 = v11;
          result = (const google::protobuf::Message **)google::protobuf::DynamicMapSorter::MapEntryMessageComparator::operator()(a3, *v11, v14);
          if ((_DWORD)result)
          {
            v15 = *v13;
            v16 = v12;
            while (1)
            {
              *(const google::protobuf::Message **)((char *)v8 + v16 + 8) = *(const google::protobuf::Message **)((char *)v8 + v16);
              if (!v16)
                break;
              result = (const google::protobuf::Message **)google::protobuf::DynamicMapSorter::MapEntryMessageComparator::operator()(a3, v15, *(const google::protobuf::Message **)((char *)v8 + v16 - 8));
              v16 -= 8;
              if ((result & 1) == 0)
              {
                v17 = (const google::protobuf::Message **)((char *)v8 + v16 + 8);
                goto LABEL_15;
              }
            }
            v17 = v8;
LABEL_15:
            *v17 = v15;
          }
          v11 = v13 + 1;
          v12 += 8;
        }
        while (v13 + 1 != a2);
      }
    }
  }
  return result;
}

BOOL google::protobuf::DynamicMapSorter::MapEntryMessageComparator::operator()(const google::protobuf::FieldDescriptor **a1, const google::protobuf::Message *a2, const google::protobuf::Message *a3)
{
  uint64_t v6;
  const char *v7;
  google::protobuf::_anonymous_namespace_ **v8;
  google::protobuf::_anonymous_namespace_ **v9;
  const google::protobuf::FieldDescriptor *v10;
  unint64_t *v11;
  unint64_t v12;
  int Int32;
  uint64_t v14;
  const char *v15;
  unsigned int UInt32;
  uint64_t v18;
  const char *v19;
  BOOL v20;
  uint64_t Int64;
  uint64_t v22;
  const char *v23;
  uint64_t v24;
  unint64_t UInt64;
  uint64_t v26;
  const char *v27;
  _BOOL4 Bool;
  uint64_t v29;
  const char *v30;
  const char *v31;
  int v32;
  void *v33;
  char v34;
  std::string::size_type size;
  std::string *v36;
  std::string::size_type v37;
  std::string *v38;
  size_t v39;
  int v40;
  std::string v42;
  std::string __p;
  std::string v44;
  const google::protobuf::FieldDescriptor *v45;
  void (*v46)(google::protobuf::FieldDescriptor *, const google::protobuf::FieldDescriptor *, const char *);

  (*(void (**)(const google::protobuf::Message *))(*(_QWORD *)a2 + 152))(a2);
  v9 = v8;
  v10 = *a1;
  v11 = (unint64_t *)*((_QWORD *)*a1 + 6);
  if (v11)
  {
    v45 = *a1;
    v46 = google::protobuf::FieldDescriptor::TypeOnceInit;
    v12 = atomic_load(v11);
    if (v12 != -1)
    {
      v42.__r_.__value_.__r.__words[0] = (std::string::size_type)&v46;
      v42.__r_.__value_.__l.__size_ = (std::string::size_type)&v45;
      v44.__r_.__value_.__r.__words[0] = (std::string::size_type)&v42;
      std::__call_once(v11, &v44, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  switch(*((_DWORD *)v10 + 14))
  {
    case 3:
      Int64 = google::protobuf::Reflection::GetInt64(v9, a2, *a1, v6, v7);
      return Int64 < google::protobuf::Reflection::GetInt64(v9, a3, *a1, v22, v23);
    case 4:
    case 6:
      UInt64 = google::protobuf::Reflection::GetUInt64(v9, a2, *a1, v6, v7);
      v20 = UInt64 >= google::protobuf::Reflection::GetUInt64(v9, a3, *a1, v26, v27);
      goto LABEL_12;
    case 5:
      Int32 = google::protobuf::Reflection::GetInt32(v9, a2, *a1, v6, v7);
      return Int32 < (int)google::protobuf::Reflection::GetInt32(v9, a3, *a1, v14, v15);
    case 7:
      UInt32 = google::protobuf::Reflection::GetUInt32(v9, a2, *a1, v6, v7);
      v20 = UInt32 >= google::protobuf::Reflection::GetUInt32(v9, a3, *a1, v18, v19);
LABEL_12:
      v24 = !v20;
      break;
    case 8:
      Bool = google::protobuf::Reflection::GetBool(v9, a2, *a1, v6, v7);
      v24 = google::protobuf::Reflection::GetBool(v9, a3, *a1, v29, v30) && !Bool;
      break;
    case 9:
      google::protobuf::Reflection::GetString(v9, a2, *a1, v7, &v42);
      google::protobuf::Reflection::GetString(v9, a3, *a1, v31, &v44);
      v32 = SHIBYTE(v44.__r_.__value_.__r.__words[2]);
      v33 = (void *)v44.__r_.__value_.__r.__words[0];
      v34 = HIBYTE(v42.__r_.__value_.__r.__words[2]);
      if ((v42.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        size = HIBYTE(v42.__r_.__value_.__r.__words[2]);
      else
        size = v42.__r_.__value_.__l.__size_;
      if ((v42.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v36 = &v42;
      else
        v36 = (std::string *)v42.__r_.__value_.__r.__words[0];
      if ((v44.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v37 = HIBYTE(v44.__r_.__value_.__r.__words[2]);
      else
        v37 = v44.__r_.__value_.__l.__size_;
      if ((v44.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v38 = &v44;
      else
        v38 = (std::string *)v44.__r_.__value_.__r.__words[0];
      if (v37 >= size)
        v39 = size;
      else
        v39 = v37;
      v40 = memcmp(v36, v38, v39);
      if (v40)
        v24 = v40 < 0;
      else
        v24 = size < v37;
      if (v32 < 0)
      {
        operator delete(v33);
        v34 = HIBYTE(v42.__r_.__value_.__r.__words[2]);
      }
      if (v34 < 0)
        operator delete(v42.__r_.__value_.__l.__data_);
      break;
    default:
      LODWORD(v42.__r_.__value_.__l.__data_) = 2;
      v42.__r_.__value_.__l.__size_ = (std::string::size_type)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libproto"
                                                              "buf/src/google/protobuf/dynamic_message.h";
      LODWORD(v42.__r_.__value_.__r.__words[2]) = 224;
      memset(&__p, 0, sizeof(__p));
      std::string::append(&__p, "Invalid key for map field.");
      google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v42);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__p.__r_.__value_.__l.__data_);
      v24 = 1;
      break;
  }
  return v24;
}

void sub_1888C44F0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

const google::protobuf::Message **std::__stable_sort_move<std::_ClassicAlgPolicy,google::protobuf::DynamicMapSorter::MapEntryMessageComparator &,std::__wrap_iter<google::protobuf::Message const**>>(const google::protobuf::Message **result, const google::protobuf::Message **a2, const google::protobuf::FieldDescriptor **a3, unint64_t a4, const google::protobuf::Message **a5)
{
  const google::protobuf::Message **v5;
  const google::protobuf::Message **v7;
  const google::protobuf::Message **v10;
  const google::protobuf::Message **v11;
  const google::protobuf::Message **v12;
  uint64_t v13;
  const google::protobuf::Message **v14;
  const google::protobuf::Message **v15;
  const google::protobuf::Message *v16;
  const google::protobuf::Message **v17;
  uint64_t v18;
  const google::protobuf::Message *v19;
  const google::protobuf::Message **v20;
  const google::protobuf::Message **v21;
  const google::protobuf::Message **v22;
  uint64_t v23;
  uint64_t v24;

  if (a4)
  {
    v5 = a5;
    v7 = result;
    if (a4 == 1)
    {
LABEL_9:
      *v5 = *v7;
      return result;
    }
    if (a4 == 2)
    {
      v10 = a2 - 1;
      result = (const google::protobuf::Message **)google::protobuf::DynamicMapSorter::MapEntryMessageComparator::operator()(a3, *(a2 - 1), *result);
      if ((_DWORD)result)
        v11 = v10;
      else
        v11 = v7;
      *v5++ = *v11;
      if (!(_DWORD)result)
        v7 = v10;
      goto LABEL_9;
    }
    if ((uint64_t)a4 > 8)
    {
      v20 = &result[a4 >> 1];
      std::__stable_sort<std::_ClassicAlgPolicy,google::protobuf::DynamicMapSorter::MapEntryMessageComparator &,std::__wrap_iter<google::protobuf::Message const**>>(result, v20, a3, a4 >> 1, a5, a4 >> 1);
      result = (const google::protobuf::Message **)std::__stable_sort<std::_ClassicAlgPolicy,google::protobuf::DynamicMapSorter::MapEntryMessageComparator &,std::__wrap_iter<google::protobuf::Message const**>>(&v7[a4 >> 1], a2, a3, a4 - (a4 >> 1), &v5[a4 >> 1], a4 - (a4 >> 1));
      v21 = &v7[a4 >> 1];
      while (v21 != a2)
      {
        result = (const google::protobuf::Message **)google::protobuf::DynamicMapSorter::MapEntryMessageComparator::operator()(a3, *v21, *v7);
        if ((_DWORD)result)
          v22 = v21;
        else
          v22 = v7;
        v21 += result;
        v7 += result ^ 1;
        *v5++ = *v22;
        if (v7 == v20)
        {
          if (v21 != a2)
          {
            v23 = 0;
            do
            {
              v5[v23] = v21[v23];
              ++v23;
            }
            while (&v21[v23] != a2);
          }
          return result;
        }
      }
      if (v7 != v20)
      {
        v24 = 0;
        do
        {
          v5[v24] = v7[v24];
          ++v24;
        }
        while (&v7[v24] != v20);
      }
    }
    else if (result != a2)
    {
      v12 = result + 1;
      *a5 = *result;
      if (result + 1 != a2)
      {
        v13 = 0;
        v14 = a5;
        do
        {
          v15 = v14;
          v16 = *v14++;
          result = (const google::protobuf::Message **)google::protobuf::DynamicMapSorter::MapEntryMessageComparator::operator()(a3, *v12, v16);
          v17 = v14;
          if ((_DWORD)result)
          {
            v15[1] = *v15;
            v17 = v5;
            if (v15 != v5)
            {
              v18 = v13;
              while (1)
              {
                v17 = (const google::protobuf::Message **)((char *)v5 + v18);
                result = (const google::protobuf::Message **)google::protobuf::DynamicMapSorter::MapEntryMessageComparator::operator()(a3, *v12, *(const google::protobuf::Message **)((char *)v5 + v18 - 8));
                if (!(_DWORD)result)
                  break;
                *v17 = *(v17 - 1);
                v18 -= 8;
                if (!v18)
                {
                  v17 = v5;
                  break;
                }
              }
            }
          }
          v19 = *v12++;
          *v17 = v19;
          v13 += 8;
        }
        while (v12 != a2);
      }
    }
  }
  return result;
}

uint64_t std::__inplace_merge<std::_ClassicAlgPolicy,google::protobuf::DynamicMapSorter::MapEntryMessageComparator &,std::__wrap_iter<google::protobuf::Message const**>>(uint64_t result, const google::protobuf::Message **a2, const google::protobuf::Message **a3, const google::protobuf::FieldDescriptor **a4, uint64_t a5, uint64_t a6, const google::protobuf::Message **a7, uint64_t a8)
{
  const google::protobuf::Message **v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  const google::protobuf::Message **v22;
  const google::protobuf::Message **v23;
  unint64_t v24;
  const google::protobuf::Message **v25;
  const google::protobuf::Message **v26;
  const google::protobuf::Message *v27;
  uint64_t v28;
  const google::protobuf::Message **v29;
  unint64_t v30;
  const google::protobuf::Message **v31;
  const google::protobuf::Message **v32;
  const google::protobuf::Message *v33;
  _BOOL4 v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  const google::protobuf::Message **v43;
  uint64_t v44;
  uint64_t v45;
  const google::protobuf::Message **v46;
  const google::protobuf::Message **v47;
  const google::protobuf::Message **v48;
  uint64_t v49;
  const google::protobuf::Message **v50;
  const google::protobuf::Message **v51;
  const google::protobuf::Message *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  const google::protobuf::Message **v58;
  const google::protobuf::Message **v59;
  uint64_t v60;
  uint64_t v61;
  const google::protobuf::FieldDescriptor *v62;

  v60 = a6;
  if (a6)
  {
    v14 = (const google::protobuf::Message **)result;
    while (a5 > a8 && v60 > a8)
    {
      if (!a5)
        return result;
      v15 = 0;
      v16 = -a5;
      while (1)
      {
        result = google::protobuf::DynamicMapSorter::MapEntryMessageComparator::operator()(a4, *a2, v14[v15 / 8]);
        if ((result & 1) != 0)
          break;
        v15 += 8;
        if (__CFADD__(v16++, 1))
          return result;
      }
      v18 = -v16;
      v19 = v60;
      v58 = a7;
      v59 = a3;
      v56 = (char *)&v14[v15 / 8];
      v57 = a8;
      if (-v16 >= v60)
      {
        if (v16 == -1)
        {
          v52 = v14[v15 / 8];
          v14[v15 / 8] = *a2;
          *a2 = v52;
          return result;
        }
        if (v16 > 0)
          v18 = 1 - v16;
        v28 = v18 >> 1;
        v29 = a3;
        v23 = (const google::protobuf::Message **)((char *)&v14[v18 >> 1] + v15);
        v62 = *a4;
        v22 = a2;
        if (a2 != v29)
        {
          v55 = v18 >> 1;
          v30 = v59 - a2;
          v22 = a2;
          do
          {
            v31 = &v22[v30 >> 1];
            v33 = *v31;
            v32 = v31 + 1;
            v34 = google::protobuf::DynamicMapSorter::MapEntryMessageComparator::operator()(&v62, v33, *v23);
            if (v34)
              v30 += ~(v30 >> 1);
            else
              v30 >>= 1;
            if (v34)
              v22 = v32;
          }
          while (v30);
          v19 = v60;
          v28 = v55;
        }
        v21 = v22 - a2;
      }
      else
      {
        if (v60 >= 0)
          v20 = v60;
        else
          v20 = v60 + 1;
        v21 = v20 >> 1;
        v22 = &a2[v20 >> 1];
        v23 = a2;
        if ((char *)a2 - (char *)v14 != v15)
        {
          v54 = v20 >> 1;
          v24 = (uint64_t)((char *)a2 - (char *)v14 - v15) >> 3;
          v23 = &v14[v15 / 8];
          do
          {
            v25 = &v23[v24 >> 1];
            v27 = *v25;
            v26 = v25 + 1;
            if (google::protobuf::DynamicMapSorter::MapEntryMessageComparator::operator()(a4, *v22, v27))
            {
              v24 >>= 1;
            }
            else
            {
              v23 = v26;
              v24 += ~(v24 >> 1);
            }
          }
          while (v24);
          v19 = v60;
          v21 = v54;
        }
        v28 = (uint64_t)((char *)v23 - (char *)v14 - v15) >> 3;
      }
      a5 = -v28 - v16;
      v61 = v19 - v21;
      v35 = (char *)a2;
      v36 = v19;
      v37 = v28;
      v38 = std::__rotate[abi:ne180100]<std::_ClassicAlgPolicy,std::__wrap_iter<google::protobuf::Message const**>,std::__wrap_iter<google::protobuf::Message const**>>((char *)v23, v35, (char *)v22);
      v39 = v21;
      v40 = v38;
      if (v37 + v39 >= v36 - (v37 + v39) - v16)
      {
        v43 = v22;
        v44 = v37;
        v42 = v39;
        a8 = v57;
        a7 = v58;
        result = std::__inplace_merge<std::_ClassicAlgPolicy,google::protobuf::DynamicMapSorter::MapEntryMessageComparator &,std::__wrap_iter<google::protobuf::Message const**>>(v38, v43, v59, a4, a5, v61, v58, v57);
        a2 = v23;
        a5 = v44;
        a3 = (const google::protobuf::Message **)v40;
        v40 = v56;
      }
      else
      {
        v41 = v37;
        a7 = v58;
        result = std::__inplace_merge<std::_ClassicAlgPolicy,google::protobuf::DynamicMapSorter::MapEntryMessageComparator &,std::__wrap_iter<google::protobuf::Message const**>>(&v14[v15 / 8], v23, v38, a4, v41, v39, v58, v57);
        a2 = v22;
        a8 = v57;
        a3 = v59;
        v42 = v61;
      }
      v60 = v42;
      v14 = (const google::protobuf::Message **)v40;
      if (!v42)
        return result;
    }
    if (a5 <= v60)
    {
      if (v14 != a2)
      {
        v49 = 0;
        do
        {
          a7[v49] = v14[v49];
          ++v49;
        }
        while (&v14[v49] != a2);
        if (v49 * 8)
        {
          v50 = a7;
          while (a2 != a3)
          {
            result = google::protobuf::DynamicMapSorter::MapEntryMessageComparator::operator()(a4, *a2, *v50);
            if ((_DWORD)result)
              v51 = a2;
            else
              v51 = v50;
            a2 += result;
            v50 += result ^ 1;
            *v14++ = *v51;
            if (&a7[v49] == v50)
              return result;
          }
          return (uint64_t)memmove(v14, v50, (char *)a7 - (char *)v50 + v49 * 8);
        }
      }
    }
    else if (a3 != a2)
    {
      v45 = 0;
      do
      {
        a7[v45] = a2[v45];
        ++v45;
      }
      while (&a2[v45] != a3);
      if (v45 * 8)
      {
        v46 = &a7[v45];
        v47 = a3 - 1;
        while (a2 != v14)
        {
          result = google::protobuf::DynamicMapSorter::MapEntryMessageComparator::operator()(a4, *(v46 - 1), *(a2 - 1));
          if ((_DWORD)result)
            v48 = a2;
          else
            v48 = v46;
          if ((_DWORD)result)
            --a2;
          else
            --v46;
          *v47-- = *(v48 - 1);
          if (v46 == a7)
            return result;
        }
        v53 = 0;
        do
        {
          v47[v53] = v46[v53 - 1];
          --v53;
        }
        while (&v46[v53] != a7);
      }
    }
  }
  return result;
}

char *google::protobuf::internal::ReadPackedVarintArray<google::protobuf::internal::WireFormat::_InternalParseAndMergeField(google::protobuf::Message *,char const*,google::protobuf::internal::ParseContext *,unsigned long long,google::protobuf::Reflection const*,google::protobuf::FieldDescriptor const*)::$_0>(char *a1, unint64_t a2, unsigned int **a3)
{
  char *v3;
  uint64_t v6;
  int v7;
  uint64_t v8;
  _QWORD *v9;
  unsigned int *v10;
  uint64_t v11;
  unsigned int v12;
  unsigned int v13;
  uint64_t *v14;
  google::protobuf::UnknownFieldSet *v15;
  uint64_t v16;
  _QWORD v18[2];

  v3 = a1;
  while ((unint64_t)v3 < a2)
  {
    v6 = *v3;
    if (*v3 < 0)
    {
      v7 = v3[1];
      v6 = (v6 + (v7 << 7) - 128);
      if ((v7 & 0x80) != 0)
      {
        v3 += 3;
        v16 = 14;
        while (1)
        {
          v6 += (*(v3 - 1) - 1) << v16;
          if ((*(v3 - 1) & 0x80000000) == 0)
            break;
          ++v3;
          v16 += 7;
          if (v16 == 70)
            return 0;
        }
      }
      else
      {
        v3 += 2;
      }
    }
    else
    {
      ++v3;
    }
    v8 = google::protobuf::FieldDescriptor::enum_type((google::protobuf::FieldDescriptor *)a3[1]);
    v9 = (_QWORD *)(*(_QWORD *)(*(_QWORD *)(v8 + 16) + 144) + 192);
    v18[0] = v8;
    v18[1] = v6;
    {
      v10 = *a3;
      v11 = **a3;
      if ((_DWORD)v11 == (*a3)[1])
      {
        v12 = v11 + 1;
        google::protobuf::RepeatedField<int>::Reserve(*a3, v11 + 1);
        *(_DWORD *)(*((_QWORD *)v10 + 1) + 4 * v11) = v6;
      }
      else
      {
        *(_DWORD *)(*((_QWORD *)v10 + 1) + 4 * v11) = v6;
        v12 = v11 + 1;
      }
      *v10 = v12;
    }
    else
    {
      v13 = a3[1][17];
      v14 = (uint64_t *)((char *)a3[3] + a3[2][9]);
      if ((*v14 & 1) != 0)
        v15 = (google::protobuf::UnknownFieldSet *)((*v14 & 0xFFFFFFFFFFFFFFFELL) + 8);
      else
        v15 = (google::protobuf::UnknownFieldSet *)google::protobuf::internal::InternalMetadata::mutable_unknown_fields_slow<google::protobuf::UnknownFieldSet>(v14);
      google::protobuf::UnknownFieldSet::AddVarint(v15, v13, v6);
    }
  }
  return v3;
}

void std::vector<google::protobuf::MapKey>::__destroy_vector::operator()[abi:ne180100](void ***a1)
{
  void **v1;
  void **v2;
  void **v4;
  void *v5;

  v1 = *a1;
  v2 = (void **)**a1;
  if (v2)
  {
    v4 = (void **)v1[1];
    v5 = **a1;
    if (v4 != v2)
    {
      do
      {
        if (*((_DWORD *)v4 - 2) == 9 && *((char *)v4 - 9) < 0)
          operator delete(*(v4 - 4));
        v4 -= 4;
      }
      while (v4 != v2);
      v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

google::protobuf::internal::EpsCopyInputStream *google::protobuf::internal::EpsCopyInputStream::Next(google::protobuf::internal::EpsCopyInputStream *this)
{
  google::protobuf::internal::EpsCopyInputStream *v2;
  char *v3;
  size_t v4;
  _QWORD *v5;
  unint64_t v6;
  unint64_t v7;
  void *v8;
  int v9;
  void *__src;

  v2 = (google::protobuf::internal::EpsCopyInputStream *)*((_QWORD *)this + 2);
  if (v2)
  {
    if (v2 == (google::protobuf::internal::EpsCopyInputStream *)((char *)this + 40))
    {
      *(_OWORD *)v2 = *(_OWORD *)*((_QWORD *)this + 1);
      if (*((int *)this + 21) < 1)
      {
LABEL_14:
        if (*((_QWORD *)this + 9) == 2)
          *((_QWORD *)this + 9) = *((_QWORD *)this + 1) - (_QWORD)v2;
        v3 = (char *)this + 56;
        *((_QWORD *)this + 1) = (char *)this + 56;
        *((_QWORD *)this + 2) = 0;
        *((_DWORD *)this + 6) = 0;
      }
      else
      {
        __src = 0;
        while (1)
        {
          if (!(*(unsigned int (**)(_QWORD, void **, char *))(**((_QWORD **)this + 4) + 16))(*((_QWORD *)this + 4), &__src, (char *)this + 24))
          {
            *((_DWORD *)this + 21) = 0;
            goto LABEL_14;
          }
          v4 = *((unsigned int *)this + 6);
          *((_DWORD *)this + 21) -= v4;
          if ((int)v4 >= 17)
            break;
          if ((int)v4 >= 1)
          {
            memcpy((char *)this + 56, __src, v4);
            v5 = (_QWORD *)((char *)this + 72);
            v6 = *((_QWORD *)this + 9);
            v3 = (char *)v2 + v4;
            *((_QWORD *)this + 1) = (char *)v2 + v4;
            *((_QWORD *)this + 2) = v2;
            if (v6 < 2)
              goto LABEL_19;
            goto LABEL_18;
          }
        }
        v5 = (_QWORD *)((char *)this + 72);
        v7 = *((_QWORD *)this + 9);
        v3 = (char *)this + 56;
        v8 = __src;
        *(_OWORD *)((char *)this + 56) = *(_OWORD *)__src;
        *((_QWORD *)this + 1) = (char *)this + 56;
        *((_QWORD *)this + 2) = v8;
        if (v7 <= 1)
          goto LABEL_19;
LABEL_18:
        *v5 = 1;
      }
    }
    else
    {
      v3 = (char *)v2 + *((int *)this + 6) - 16;
      *((_QWORD *)this + 1) = v3;
      *((_QWORD *)this + 2) = (char *)this + 40;
      if (*((_QWORD *)this + 9) == 1)
        *((_QWORD *)this + 9) = 2;
    }
LABEL_19:
    v9 = *((_DWORD *)this + 7) + (_DWORD)v2 - (_DWORD)v3;
    *((_DWORD *)this + 7) = v9;
    *(_QWORD *)this = &v3[v9 & (v9 >> 31)];
  }
  else
  {
    *(_QWORD *)this = *((_QWORD *)this + 1);
    *((_DWORD *)this + 20) = 1;
  }
  return v2;
}

google::protobuf::internal::EpsCopyInputStream *google::protobuf::internal::EpsCopyInputStream::NextBuffer(google::protobuf::internal::EpsCopyInputStream *this, int a2, int a3)
{
  google::protobuf::internal::EpsCopyInputStream *v3;
  int v5;
  unsigned __int8 *v6;
  unsigned __int8 *v7;
  unsigned __int8 *v8;
  int v9;
  int v10;
  const char *v11;
  char *SizeFallback;
  BOOL v13;
  uint64_t v14;
  size_t v15;
  _QWORD *v16;
  unint64_t v17;
  unint64_t v18;
  void *v19;
  void *__src;

  v3 = (google::protobuf::internal::EpsCopyInputStream *)*((_QWORD *)this + 2);
  if (v3)
  {
    if (v3 == (google::protobuf::internal::EpsCopyInputStream *)((char *)this + 40))
    {
      *(_OWORD *)v3 = *(_OWORD *)*((_QWORD *)this + 1);
      if (*((int *)this + 21) < 1)
      {
LABEL_40:
        if (*((_QWORD *)this + 9) == 2)
          *((_QWORD *)this + 9) = *((_QWORD *)this + 1) - (_QWORD)v3;
        *((_QWORD *)this + 1) = (char *)this + 56;
        *((_QWORD *)this + 2) = 0;
        *((_DWORD *)this + 6) = 0;
      }
      else
      {
        v5 = a3;
        if ((a3 & 0x80000000) == 0 && a2 <= 15)
        {
          v6 = (unsigned __int8 *)this + 56;
          v7 = (unsigned __int8 *)v3 + a2;
          v8 = v7;
          while (2)
          {
            v9 = (char)*v8++;
            v10 = v9;
            if (v9 < 0)
            {
              v10 = v10 + (*v8 << 7) - 128;
              if ((char)*v8 < 0)
              {
                v8 = v7 + 3;
                v14 = -21;
                while (1)
                {
                  v10 += (*(v8 - 1) - 1) << (v14 + 35);
                  if (((char)*(v8 - 1) & 0x80000000) == 0)
                    break;
                  ++v8;
                  v14 += 7;
                  if (!v14)
                    goto LABEL_33;
                }
              }
              else
              {
                v8 = v7 + 2;
              }
            }
            if (v8 <= v6)
            {
              if (!v10)
                goto LABEL_40;
              switch(v10 & 7)
              {
                case 0:
                  __src = 0;
                  v8 = google::protobuf::internal::VarintParse<unsigned long long>((char *)v8, &__src);
                  if (!v8)
                    break;
                  goto LABEL_32;
                case 1:
                  v8 += 8;
                  goto LABEL_32;
                case 2:
                  v11 = (const char *)*v8;
                  if ((char)*v8 < 0)
                  {
                    SizeFallback = google::protobuf::internal::ReadSizeFallback((google::protobuf::internal *)v8, v11);
                    if (!SizeFallback)
                      break;
                  }
                  else
                  {
                    SizeFallback = (char *)(v8 + 1);
                  }
                  if (v6 - (unsigned __int8 *)SizeFallback < (int)v11)
                    break;
                  v8 = (unsigned __int8 *)&SizeFallback[(int)v11];
LABEL_32:
                  v7 = v8;
                  if (v8 >= v6)
                    break;
                  continue;
                case 3:
                  ++v5;
                  goto LABEL_32;
                case 4:
                  v13 = __OFSUB__(v5--, 1);
                  if (v5 < 0 != v13)
                    goto LABEL_40;
                  goto LABEL_32;
                case 5:
                  v8 += 4;
                  goto LABEL_32;
                default:
                  goto LABEL_33;
              }
            }
            break;
          }
        }
LABEL_33:
        __src = 0;
        while (1)
        {
          if (!(*(unsigned int (**)(_QWORD, void **, char *))(**((_QWORD **)this + 4) + 16))(*((_QWORD *)this + 4), &__src, (char *)this + 24))
          {
            *((_DWORD *)this + 21) = 0;
            goto LABEL_40;
          }
          v15 = *((unsigned int *)this + 6);
          *((_DWORD *)this + 21) -= v15;
          if ((int)v15 >= 17)
            break;
          if ((int)v15 >= 1)
          {
            memcpy((char *)this + 56, __src, v15);
            v17 = *((_QWORD *)this + 9);
            v16 = (_QWORD *)((char *)this + 72);
            *(v16 - 8) = (char *)v3 + v15;
            *(v16 - 7) = v3;
            if (v17 < 2)
              return v3;
            goto LABEL_44;
          }
        }
        v18 = *((_QWORD *)this + 9);
        v16 = (_QWORD *)((char *)this + 72);
        v19 = __src;
        *((_OWORD *)v16 - 1) = *(_OWORD *)__src;
        *(v16 - 8) = v16 - 2;
        *(v16 - 7) = v19;
        if (v18 <= 1)
          return v3;
LABEL_44:
        *v16 = 1;
      }
    }
    else
    {
      *((_QWORD *)this + 1) = (char *)v3 + *((int *)this + 6) - 16;
      *((_QWORD *)this + 2) = (char *)this + 40;
      if (*((_QWORD *)this + 9) == 1)
        *((_QWORD *)this + 9) = 2;
    }
  }
  return v3;
}

uint64_t google::protobuf::internal::EpsCopyInputStream::DoneFallback(google::protobuf::internal::EpsCopyInputStream *this, int a2, int a3)
{
  int v4;
  google::protobuf::internal::EpsCopyInputStream *Buffer;
  uint64_t v7;
  int v8;
  uint64_t result;

  if (*((_DWORD *)this + 7) < a2)
    return 0;
  v4 = a2;
  while (1)
  {
    Buffer = google::protobuf::internal::EpsCopyInputStream::NextBuffer(this, v4, a3);
    if (!Buffer)
      break;
    v7 = *((_QWORD *)this + 1);
    v8 = *((_DWORD *)this + 7) + (_DWORD)Buffer - v7;
    *((_DWORD *)this + 7) = v8;
    result = (uint64_t)Buffer + v4;
    v4 = result - v7;
    if ((int)result - (int)v7 < 0)
    {
      *(_QWORD *)this = v7 + (v8 & (v8 >> 31));
      return result;
    }
  }
  if (v4)
    return 0;
  result = *((_QWORD *)this + 1);
  *(_QWORD *)this = result;
  *((_DWORD *)this + 20) = 1;
  return result;
}

google::protobuf::internal::EpsCopyInputStream *google::protobuf::internal::EpsCopyInputStream::ReadStringFallback(uint64_t a1, std::string::value_type *__s, int a3, std::string *this)
{
  int v5;
  const std::string::value_type *v6;
  uint64_t v8;
  std::string::size_type size;
  int v10;
  int v11;
  google::protobuf::internal::EpsCopyInputStream *result;

  v5 = a3;
  v6 = __s;
  if (SHIBYTE(this->__r_.__value_.__r.__words[2]) < 0)
  {
    *this->__r_.__value_.__l.__data_ = 0;
    this->__r_.__value_.__l.__size_ = 0;
  }
  else
  {
    this->__r_.__value_.__s.__data_[0] = 0;
    *((_BYTE *)&this->__r_.__value_.__s + 23) = 0;
  }
  v8 = *(_QWORD *)(a1 + 8);
  if (v8 - (uint64_t)__s + *(int *)(a1 + 28) >= a3)
  {
    if (SHIBYTE(this->__r_.__value_.__r.__words[2]) < 0)
      size = this->__r_.__value_.__l.__size_;
    else
      size = HIBYTE(this->__r_.__value_.__r.__words[2]);
    if (a3 >= 50000000)
      v10 = 50000000;
    else
      v10 = a3;
    std::string::reserve(this, size + v10);
    v8 = *(_QWORD *)(a1 + 8);
  }
  v11 = v8 - (_DWORD)v6 + 16;
  while (*(_QWORD *)(a1 + 16))
  {
    std::string::append(this, v6, v11);
    if (*(int *)(a1 + 28) < 17)
      break;
    result = google::protobuf::internal::EpsCopyInputStream::Next((google::protobuf::internal::EpsCopyInputStream *)a1);
    if (!result)
      return result;
    v5 -= v11;
    v6 = (char *)result + 16;
    v11 = *(_DWORD *)(a1 + 8) - (_DWORD)result;
    if (v5 <= v11)
    {
      std::string::append(this, v6, v5);
      return (google::protobuf::internal::EpsCopyInputStream *)&v6[v5];
    }
  }
  return 0;
}

char *google::protobuf::internal::ParseContext::ParseMessage<google::protobuf::MessageLite>(uint64_t a1, uint64_t a2, google::protobuf::internal *this)
{
  const char *v5;
  char *v6;
  char *result;
  uint64_t v8;
  int v9;
  int v10;
  BOOL v11;
  int v12;

  v5 = (const char *)*(unsigned __int8 *)this;
  if (*(char *)this < 0)
  {
    result = google::protobuf::internal::ReadSizeFallback(this, v5);
    if (!result)
      return result;
    v6 = result;
  }
  else
  {
    v6 = (char *)this + 1;
  }
  v8 = *(_QWORD *)(a1 + 8);
  v9 = (_DWORD)v5 + (_DWORD)v6 - v8;
  *(_QWORD *)a1 = v8 + (v9 & (v9 >> 31));
  v10 = *(_DWORD *)(a1 + 28);
  *(_DWORD *)(a1 + 28) = v9;
  LODWORD(v8) = *(_DWORD *)(a1 + 88);
  v11 = __OFSUB__((_DWORD)v8, 1);
  LODWORD(v8) = v8 - 1;
  *(_DWORD *)(a1 + 88) = v8;
  if ((int)v8 < 0 != v11)
    return 0;
  result = (char *)(*(uint64_t (**)(uint64_t, char *, uint64_t))(*(_QWORD *)a2 + 88))(a2, v6, a1);
  if (!result)
    return result;
  ++*(_DWORD *)(a1 + 88);
  if (*(_DWORD *)(a1 + 80))
    return 0;
  v12 = *(_DWORD *)(a1 + 28) + v10 - v9;
  *(_DWORD *)(a1 + 28) = v12;
  *(_QWORD *)a1 = *(_QWORD *)(a1 + 8) + (v12 & (v12 >> 31));
  return result;
}

uint64_t google::protobuf::internal::VarintParseSlow32(google::protobuf::internal *this, const char *a2)
{
  uint64_t result;
  uint64_t v4;

  result = (uint64_t)this + 3;
  v4 = -21;
  while (1)
  {
    LODWORD(a2) = ((*(unsigned __int8 *)(result - 1) - 1) << (v4 + 35)) + (_DWORD)a2;
    if ((*(char *)(result - 1) & 0x80000000) == 0)
      break;
    ++result;
    v4 += 7;
    if (!v4)
    {
      while (*((char *)this + v4 + 5) < 0)
      {
        result = 0;
        if (++v4 == 5)
          return result;
      }
      return (uint64_t)this + v4 + 6;
    }
  }
  return result;
}

char *google::protobuf::internal::ReadSizeFallback(google::protobuf::internal *this, const char *a2)
{
  char *result;
  uint64_t v4;
  unsigned int v5;
  char *v6;

  result = (char *)this + 2;
  v4 = -21;
  while (1)
  {
    LODWORD(a2) = ((*(result - 1) - 1) << (v4 + 28)) + (_DWORD)a2;
    if ((*(result - 1) & 0x80000000) == 0)
      break;
    ++result;
    v4 += 7;
    if (!v4)
    {
      v5 = *((unsigned __int8 *)this + 4);
      v6 = (char *)this + 5;
      if (a2 + (v5 << 28) - 0x10000000 > 0x7FFFFFEF)
        v6 = 0;
      if (v5 <= 7)
        return v6;
      else
        return 0;
    }
  }
  return result;
}

char *google::protobuf::internal::InlineGreedyStringParser(std::string *a1, std::string::value_type *this, uint64_t a3)
{
  int v5;
  std::string::value_type *v6;
  char *result;
  int v8;

  v5 = *this;
  if (*this < 0)
  {
    result = google::protobuf::internal::ReadSizeFallback((google::protobuf::internal *)this, (const char *)*this);
    if (!result)
      return result;
    v6 = result;
    v5 = v8;
  }
  else
  {
    v6 = this + 1;
  }
  return (char *)google::protobuf::internal::EpsCopyInputStream::ReadString(a3, v6, v5, a1);
}

char *google::protobuf::internal::FixedParser<unsigned int>(unsigned int *a1, google::protobuf::internal *this, google::protobuf::internal::EpsCopyInputStream *a3)
{
  int v5;
  char *v6;
  char *result;
  int v8;

  v5 = *(unsigned __int8 *)this;
  if (*(char *)this < 0)
  {
    result = google::protobuf::internal::ReadSizeFallback(this, (const char *)*(unsigned __int8 *)this);
    if (!result)
      return result;
    v6 = result;
    v5 = v8;
  }
  else
  {
    v6 = (char *)this + 1;
  }
  return (char *)google::protobuf::internal::EpsCopyInputStream::ReadPackedFixed<unsigned int>(a3, v6, v5, a1);
}

char *google::protobuf::internal::FixedParser<unsigned long long>(unsigned int *a1, google::protobuf::internal *this, google::protobuf::internal::EpsCopyInputStream *a3)
{
  int v5;
  char *v6;
  char *result;
  int v8;

  v5 = *(unsigned __int8 *)this;
  if (*(char *)this < 0)
  {
    result = google::protobuf::internal::ReadSizeFallback(this, (const char *)*(unsigned __int8 *)this);
    if (!result)
      return result;
    v6 = result;
    v5 = v8;
  }
  else
  {
    v6 = (char *)this + 1;
  }
  return (char *)google::protobuf::internal::EpsCopyInputStream::ReadPackedFixed<unsigned long long>(a3, v6, v5, a1);
}

unsigned __int8 *google::protobuf::internal::FieldParser<google::protobuf::internal::UnknownFieldLiteParserHelper>(unint64_t a1, std::string **this, google::protobuf::internal *a3, google::protobuf::internal::EpsCopyInputStream *a4)
{
  unint64_t v4;
  unsigned __int8 *v5;
  unsigned __int8 *v7;
  unint64_t v9[2];
  int v10;
  std::string __p;

  v4 = a1 >> 3;
  if (!(a1 >> 3))
    return 0;
  v5 = (unsigned __int8 *)a3;
  switch(a1 & 7)
  {
    case 0uLL:
      v9[0] = 0;
      v5 = google::protobuf::internal::VarintParse<unsigned long long>((char *)a3, v9);
      if (v5)
        google::protobuf::internal::UnknownFieldLiteParserHelper::AddVarint(this, v4, v9[0]);
      return v5;
    case 1uLL:
      v5 = (unsigned __int8 *)a3 + 8;
      google::protobuf::internal::UnknownFieldLiteParserHelper::AddFixed64((std::string *)this, v4, *(_QWORD *)a3);
      return v5;
    case 2uLL:
      v7 = (unsigned __int8 *)google::protobuf::internal::UnknownFieldLiteParserHelper::ParseLengthDelimited(this, v4, (std::string::value_type *)a3, a4);
      goto LABEL_11;
    case 3uLL:
      v7 = (unsigned __int8 *)google::protobuf::internal::UnknownFieldLiteParserHelper::ParseGroup((google::protobuf::internal::UnknownFieldLiteParserHelper *)this, v4, a3, (int32x2_t *)a4);
LABEL_11:
      v5 = v7;
      break;
    case 4uLL:
      LODWORD(v9[0]) = 3;
      v9[1] = (unint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/parse_context.h";
      v10 = 758;
      memset(&__p, 0, sizeof(__p));
      std::string::append(&__p, "Can't happen");
      google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)v9);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__p.__r_.__value_.__l.__data_);
      break;
    case 5uLL:
      v5 = (unsigned __int8 *)a3 + 4;
      google::protobuf::internal::UnknownFieldLiteParserHelper::AddFixed32((std::string *)this, v4, *(_DWORD *)a3);
      break;
    default:
      return 0;
  }
  return v5;
}

void sub_1888C5690(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

unsigned __int8 *google::protobuf::internal::EpsCopyInputStream::ReadPackedVarint<char const* google::protobuf::internal::VarintParser<int,false>(void *,char const*,google::protobuf::internal::ParseContext *)::{lambda(unsigned long long)#1}>(uint64_t a1, google::protobuf::internal *this, unsigned int *a3)
{
  int v5;
  unsigned __int8 *result;
  int v7;
  unint64_t v8;
  int v9;
  __int128 *v10;
  int v11;
  int v12;
  unint64_t v13;
  unsigned __int8 *v14;
  BOOL v15;
  __int128 v16;
  uint64_t v17;
  __int16 v18;
  uint64_t v19;

  v19 = *MEMORY[0x1E0C80C00];
  v5 = *(unsigned __int8 *)this;
  if ((*(char *)this & 0x80000000) == 0)
  {
    result = (unsigned __int8 *)this + 1;
    goto LABEL_5;
  }
  result = (unsigned __int8 *)google::protobuf::internal::ReadSizeFallback(this, (const char *)*(unsigned __int8 *)this);
  if (result)
  {
    v5 = v7;
    while (1)
    {
LABEL_5:
      v8 = *(_QWORD *)(a1 + 8);
      v9 = v8 - (_DWORD)result;
      if (v5 <= (int)v8 - (int)result)
      {
        v13 = (unint64_t)&result[v5];
        result = google::protobuf::internal::ReadPackedVarintArray<char const* google::protobuf::internal::VarintParser<int,false>(void *,char const*,google::protobuf::internal::ParseContext *)::{lambda(unsigned long long)#1}>(result, v13, a3);
        if ((unsigned __int8 *)v13 != result)
          return 0;
        return result;
      }
      result = google::protobuf::internal::ReadPackedVarintArray<char const* google::protobuf::internal::VarintParser<int,false>(void *,char const*,google::protobuf::internal::ParseContext *)::{lambda(unsigned long long)#1}>(result, v8, a3);
      if (!result)
        return result;
      v10 = *(__int128 **)(a1 + 8);
      v11 = (_DWORD)result - (_DWORD)v10;
      v12 = v5 - v9;
      if (v5 - v9 <= 16)
        break;
      if (*(int *)(a1 + 28) < 17)
        return 0;
      result = (unsigned __int8 *)google::protobuf::internal::EpsCopyInputStream::Next((google::protobuf::internal::EpsCopyInputStream *)a1);
      if (!result)
        return result;
      v5 = v5 - v9 - v11;
      result += v11;
    }
    v18 = 0;
    v17 = 0;
    v16 = *v10;
    v14 = google::protobuf::internal::ReadPackedVarintArray<char const* google::protobuf::internal::VarintParser<int,false>(void *,char const*,google::protobuf::internal::ParseContext *)::{lambda(unsigned long long)#1}>((unsigned __int8 *)&v16 + v11, (unint64_t)&v16 + v12, a3);
    if (v14)
      v15 = v14 == (unsigned __int8 *)((char *)&v16 + v12);
    else
      v15 = 0;
    if (!v15)
      return 0;
    return (unsigned __int8 *)(*(_QWORD *)(a1 + 8) + v12);
  }
  return result;
}

unsigned __int8 *google::protobuf::internal::ReadPackedVarintArray<char const* google::protobuf::internal::VarintParser<int,false>(void *,char const*,google::protobuf::internal::ParseContext *)::{lambda(unsigned long long)#1}>(unsigned __int8 *a1, unint64_t a2, unsigned int *a3)
{
  unsigned __int8 *i;
  int v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v10;

  for (i = a1; (unint64_t)i < a2; *a3 = v8)
  {
    v10 = 0;
    i = google::protobuf::internal::VarintParse<unsigned long long>((char *)i, &v10);
    if (!i)
      break;
    v6 = v10;
    v7 = *a3;
    if ((_DWORD)v7 == a3[1])
    {
      v8 = v7 + 1;
      google::protobuf::RepeatedField<int>::Reserve(a3, v7 + 1);
      *(_DWORD *)(*((_QWORD *)a3 + 1) + 4 * v7) = v6;
    }
    else
    {
      *(_DWORD *)(*((_QWORD *)a3 + 1) + 4 * v7) = v10;
      v8 = v7 + 1;
    }
  }
  return i;
}

unsigned __int8 *google::protobuf::internal::EpsCopyInputStream::ReadPackedVarint<char const* google::protobuf::internal::VarintParser<unsigned int,false>(void *,char const*,google::protobuf::internal::ParseContext *)::{lambda(unsigned long long)#1}>(uint64_t a1, google::protobuf::internal *this, unsigned int *a3)
{
  int v5;
  unsigned __int8 *result;
  int v7;
  unint64_t v8;
  int v9;
  __int128 *v10;
  int v11;
  int v12;
  unint64_t v13;
  unsigned __int8 *v14;
  BOOL v15;
  __int128 v16;
  uint64_t v17;
  __int16 v18;
  uint64_t v19;

  v19 = *MEMORY[0x1E0C80C00];
  v5 = *(unsigned __int8 *)this;
  if ((*(char *)this & 0x80000000) == 0)
  {
    result = (unsigned __int8 *)this + 1;
    goto LABEL_5;
  }
  result = (unsigned __int8 *)google::protobuf::internal::ReadSizeFallback(this, (const char *)*(unsigned __int8 *)this);
  if (result)
  {
    v5 = v7;
    while (1)
    {
LABEL_5:
      v8 = *(_QWORD *)(a1 + 8);
      v9 = v8 - (_DWORD)result;
      if (v5 <= (int)v8 - (int)result)
      {
        v13 = (unint64_t)&result[v5];
        result = google::protobuf::internal::ReadPackedVarintArray<char const* google::protobuf::internal::VarintParser<int,false>(void *,char const*,google::protobuf::internal::ParseContext *)::{lambda(unsigned long long)#1}>(result, v13, a3);
        if ((unsigned __int8 *)v13 != result)
          return 0;
        return result;
      }
      result = google::protobuf::internal::ReadPackedVarintArray<char const* google::protobuf::internal::VarintParser<int,false>(void *,char const*,google::protobuf::internal::ParseContext *)::{lambda(unsigned long long)#1}>(result, v8, a3);
      if (!result)
        return result;
      v10 = *(__int128 **)(a1 + 8);
      v11 = (_DWORD)result - (_DWORD)v10;
      v12 = v5 - v9;
      if (v5 - v9 <= 16)
        break;
      if (*(int *)(a1 + 28) < 17)
        return 0;
      result = (unsigned __int8 *)google::protobuf::internal::EpsCopyInputStream::Next((google::protobuf::internal::EpsCopyInputStream *)a1);
      if (!result)
        return result;
      v5 = v5 - v9 - v11;
      result += v11;
    }
    v18 = 0;
    v17 = 0;
    v16 = *v10;
    v14 = google::protobuf::internal::ReadPackedVarintArray<char const* google::protobuf::internal::VarintParser<int,false>(void *,char const*,google::protobuf::internal::ParseContext *)::{lambda(unsigned long long)#1}>((unsigned __int8 *)&v16 + v11, (unint64_t)&v16 + v12, a3);
    if (v14)
      v15 = v14 == (unsigned __int8 *)((char *)&v16 + v12);
    else
      v15 = 0;
    if (!v15)
      return 0;
    return (unsigned __int8 *)(*(_QWORD *)(a1 + 8) + v12);
  }
  return result;
}

unsigned __int8 *google::protobuf::internal::EpsCopyInputStream::ReadPackedVarint<char const* google::protobuf::internal::VarintParser<long long,false>(void *,char const*,google::protobuf::internal::ParseContext *)::{lambda(unsigned long long)#1}>(uint64_t a1, google::protobuf::internal *this, unsigned int *a3)
{
  int v5;
  unsigned __int8 *result;
  int v7;
  unint64_t v8;
  int v9;
  __int128 *v10;
  int v11;
  int v12;
  unint64_t v13;
  unsigned __int8 *v14;
  BOOL v15;
  __int128 v16;
  uint64_t v17;
  __int16 v18;
  uint64_t v19;

  v19 = *MEMORY[0x1E0C80C00];
  v5 = *(unsigned __int8 *)this;
  if ((*(char *)this & 0x80000000) == 0)
  {
    result = (unsigned __int8 *)this + 1;
    goto LABEL_5;
  }
  result = (unsigned __int8 *)google::protobuf::internal::ReadSizeFallback(this, (const char *)*(unsigned __int8 *)this);
  if (result)
  {
    v5 = v7;
    while (1)
    {
LABEL_5:
      v8 = *(_QWORD *)(a1 + 8);
      v9 = v8 - (_DWORD)result;
      if (v5 <= (int)v8 - (int)result)
      {
        v13 = (unint64_t)&result[v5];
        result = google::protobuf::internal::ReadPackedVarintArray<char const* google::protobuf::internal::VarintParser<long long,false>(void *,char const*,google::protobuf::internal::ParseContext *)::{lambda(unsigned long long)#1}>(result, v13, a3);
        if ((unsigned __int8 *)v13 != result)
          return 0;
        return result;
      }
      result = google::protobuf::internal::ReadPackedVarintArray<char const* google::protobuf::internal::VarintParser<long long,false>(void *,char const*,google::protobuf::internal::ParseContext *)::{lambda(unsigned long long)#1}>(result, v8, a3);
      if (!result)
        return result;
      v10 = *(__int128 **)(a1 + 8);
      v11 = (_DWORD)result - (_DWORD)v10;
      v12 = v5 - v9;
      if (v5 - v9 <= 16)
        break;
      if (*(int *)(a1 + 28) < 17)
        return 0;
      result = (unsigned __int8 *)google::protobuf::internal::EpsCopyInputStream::Next((google::protobuf::internal::EpsCopyInputStream *)a1);
      if (!result)
        return result;
      v5 = v5 - v9 - v11;
      result += v11;
    }
    v18 = 0;
    v17 = 0;
    v16 = *v10;
    v14 = google::protobuf::internal::ReadPackedVarintArray<char const* google::protobuf::internal::VarintParser<long long,false>(void *,char const*,google::protobuf::internal::ParseContext *)::{lambda(unsigned long long)#1}>((unsigned __int8 *)&v16 + v11, (unint64_t)&v16 + v12, a3);
    if (v14)
      v15 = v14 == (unsigned __int8 *)((char *)&v16 + v12);
    else
      v15 = 0;
    if (!v15)
      return 0;
    return (unsigned __int8 *)(*(_QWORD *)(a1 + 8) + v12);
  }
  return result;
}

unsigned __int8 *google::protobuf::internal::ReadPackedVarintArray<char const* google::protobuf::internal::VarintParser<long long,false>(void *,char const*,google::protobuf::internal::ParseContext *)::{lambda(unsigned long long)#1}>(unsigned __int8 *a1, unint64_t a2, unsigned int *a3)
{
  unsigned __int8 *i;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v10;

  for (i = a1; (unint64_t)i < a2; *a3 = v8)
  {
    v10 = 0;
    i = google::protobuf::internal::VarintParse<unsigned long long>((char *)i, &v10);
    if (!i)
      break;
    v6 = v10;
    v7 = *a3;
    if ((_DWORD)v7 == a3[1])
    {
      v8 = v7 + 1;
      google::protobuf::RepeatedField<long long>::Reserve(a3, v7 + 1);
      *(_QWORD *)(*((_QWORD *)a3 + 1) + 8 * v7) = v6;
    }
    else
    {
      *(_QWORD *)(*((_QWORD *)a3 + 1) + 8 * v7) = v10;
      v8 = v7 + 1;
    }
  }
  return i;
}

unsigned __int8 *google::protobuf::internal::EpsCopyInputStream::ReadPackedVarint<char const* google::protobuf::internal::VarintParser<unsigned long long,false>(void *,char const*,google::protobuf::internal::ParseContext *)::{lambda(unsigned long long)#1}>(uint64_t a1, google::protobuf::internal *this, unsigned int *a3)
{
  int v5;
  unsigned __int8 *result;
  int v7;
  unint64_t v8;
  int v9;
  __int128 *v10;
  int v11;
  int v12;
  unint64_t v13;
  unsigned __int8 *v14;
  BOOL v15;
  __int128 v16;
  uint64_t v17;
  __int16 v18;
  uint64_t v19;

  v19 = *MEMORY[0x1E0C80C00];
  v5 = *(unsigned __int8 *)this;
  if ((*(char *)this & 0x80000000) == 0)
  {
    result = (unsigned __int8 *)this + 1;
    goto LABEL_5;
  }
  result = (unsigned __int8 *)google::protobuf::internal::ReadSizeFallback(this, (const char *)*(unsigned __int8 *)this);
  if (result)
  {
    v5 = v7;
    while (1)
    {
LABEL_5:
      v8 = *(_QWORD *)(a1 + 8);
      v9 = v8 - (_DWORD)result;
      if (v5 <= (int)v8 - (int)result)
      {
        v13 = (unint64_t)&result[v5];
        result = google::protobuf::internal::ReadPackedVarintArray<char const* google::protobuf::internal::VarintParser<long long,false>(void *,char const*,google::protobuf::internal::ParseContext *)::{lambda(unsigned long long)#1}>(result, v13, a3);
        if ((unsigned __int8 *)v13 != result)
          return 0;
        return result;
      }
      result = google::protobuf::internal::ReadPackedVarintArray<char const* google::protobuf::internal::VarintParser<long long,false>(void *,char const*,google::protobuf::internal::ParseContext *)::{lambda(unsigned long long)#1}>(result, v8, a3);
      if (!result)
        return result;
      v10 = *(__int128 **)(a1 + 8);
      v11 = (_DWORD)result - (_DWORD)v10;
      v12 = v5 - v9;
      if (v5 - v9 <= 16)
        break;
      if (*(int *)(a1 + 28) < 17)
        return 0;
      result = (unsigned __int8 *)google::protobuf::internal::EpsCopyInputStream::Next((google::protobuf::internal::EpsCopyInputStream *)a1);
      if (!result)
        return result;
      v5 = v5 - v9 - v11;
      result += v11;
    }
    v18 = 0;
    v17 = 0;
    v16 = *v10;
    v14 = google::protobuf::internal::ReadPackedVarintArray<char const* google::protobuf::internal::VarintParser<long long,false>(void *,char const*,google::protobuf::internal::ParseContext *)::{lambda(unsigned long long)#1}>((unsigned __int8 *)&v16 + v11, (unint64_t)&v16 + v12, a3);
    if (v14)
      v15 = v14 == (unsigned __int8 *)((char *)&v16 + v12);
    else
      v15 = 0;
    if (!v15)
      return 0;
    return (unsigned __int8 *)(*(_QWORD *)(a1 + 8) + v12);
  }
  return result;
}

unsigned __int8 *google::protobuf::internal::EpsCopyInputStream::ReadPackedVarint<char const* google::protobuf::internal::VarintParser<int,true>(void *,char const*,google::protobuf::internal::ParseContext *)::{lambda(unsigned long long)#1}>(uint64_t a1, google::protobuf::internal *this, unsigned int *a3)
{
  int v5;
  unsigned __int8 *result;
  int v7;
  unint64_t v8;
  int v9;
  __int128 *v10;
  int v11;
  int v12;
  unint64_t v13;
  unsigned __int8 *v14;
  BOOL v15;
  __int128 v16;
  uint64_t v17;
  __int16 v18;
  uint64_t v19;

  v19 = *MEMORY[0x1E0C80C00];
  v5 = *(unsigned __int8 *)this;
  if ((*(char *)this & 0x80000000) == 0)
  {
    result = (unsigned __int8 *)this + 1;
    goto LABEL_5;
  }
  result = (unsigned __int8 *)google::protobuf::internal::ReadSizeFallback(this, (const char *)*(unsigned __int8 *)this);
  if (result)
  {
    v5 = v7;
    while (1)
    {
LABEL_5:
      v8 = *(_QWORD *)(a1 + 8);
      v9 = v8 - (_DWORD)result;
      if (v5 <= (int)v8 - (int)result)
      {
        v13 = (unint64_t)&result[v5];
        result = google::protobuf::internal::ReadPackedVarintArray<char const* google::protobuf::internal::VarintParser<int,true>(void *,char const*,google::protobuf::internal::ParseContext *)::{lambda(unsigned long long)#1}>(result, v13, a3);
        if ((unsigned __int8 *)v13 != result)
          return 0;
        return result;
      }
      result = google::protobuf::internal::ReadPackedVarintArray<char const* google::protobuf::internal::VarintParser<int,true>(void *,char const*,google::protobuf::internal::ParseContext *)::{lambda(unsigned long long)#1}>(result, v8, a3);
      if (!result)
        return result;
      v10 = *(__int128 **)(a1 + 8);
      v11 = (_DWORD)result - (_DWORD)v10;
      v12 = v5 - v9;
      if (v5 - v9 <= 16)
        break;
      if (*(int *)(a1 + 28) < 17)
        return 0;
      result = (unsigned __int8 *)google::protobuf::internal::EpsCopyInputStream::Next((google::protobuf::internal::EpsCopyInputStream *)a1);
      if (!result)
        return result;
      v5 = v5 - v9 - v11;
      result += v11;
    }
    v18 = 0;
    v17 = 0;
    v16 = *v10;
    v14 = google::protobuf::internal::ReadPackedVarintArray<char const* google::protobuf::internal::VarintParser<int,true>(void *,char const*,google::protobuf::internal::ParseContext *)::{lambda(unsigned long long)#1}>((unsigned __int8 *)&v16 + v11, (unint64_t)&v16 + v12, a3);
    if (v14)
      v15 = v14 == (unsigned __int8 *)((char *)&v16 + v12);
    else
      v15 = 0;
    if (!v15)
      return 0;
    return (unsigned __int8 *)(*(_QWORD *)(a1 + 8) + v12);
  }
  return result;
}

unsigned __int8 *google::protobuf::internal::ReadPackedVarintArray<char const* google::protobuf::internal::VarintParser<int,true>(void *,char const*,google::protobuf::internal::ParseContext *)::{lambda(unsigned long long)#1}>(unsigned __int8 *a1, unint64_t a2, unsigned int *a3)
{
  unsigned __int8 *i;
  int v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v10;

  for (i = a1; (unint64_t)i < a2; *a3 = v8)
  {
    v10 = 0;
    i = google::protobuf::internal::VarintParse<unsigned long long>((char *)i, &v10);
    if (!i)
      break;
    v6 = -(v10 & 1) ^ (v10 >> 1);
    v7 = *a3;
    if ((_DWORD)v7 == a3[1])
    {
      v8 = v7 + 1;
      google::protobuf::RepeatedField<int>::Reserve(a3, v7 + 1);
      *(_DWORD *)(*((_QWORD *)a3 + 1) + 4 * v7) = v6;
    }
    else
    {
      *(_DWORD *)(*((_QWORD *)a3 + 1) + 4 * v7) = v6;
      v8 = v7 + 1;
    }
  }
  return i;
}

unsigned __int8 *google::protobuf::internal::EpsCopyInputStream::ReadPackedVarint<char const* google::protobuf::internal::VarintParser<long long,true>(void *,char const*,google::protobuf::internal::ParseContext *)::{lambda(unsigned long long)#1}>(uint64_t a1, google::protobuf::internal *this, unsigned int *a3)
{
  int v5;
  unsigned __int8 *result;
  int v7;
  unint64_t v8;
  int v9;
  __int128 *v10;
  int v11;
  int v12;
  unint64_t v13;
  unsigned __int8 *v14;
  BOOL v15;
  __int128 v16;
  uint64_t v17;
  __int16 v18;
  uint64_t v19;

  v19 = *MEMORY[0x1E0C80C00];
  v5 = *(unsigned __int8 *)this;
  if ((*(char *)this & 0x80000000) == 0)
  {
    result = (unsigned __int8 *)this + 1;
    goto LABEL_5;
  }
  result = (unsigned __int8 *)google::protobuf::internal::ReadSizeFallback(this, (const char *)*(unsigned __int8 *)this);
  if (result)
  {
    v5 = v7;
    while (1)
    {
LABEL_5:
      v8 = *(_QWORD *)(a1 + 8);
      v9 = v8 - (_DWORD)result;
      if (v5 <= (int)v8 - (int)result)
      {
        v13 = (unint64_t)&result[v5];
        result = google::protobuf::internal::ReadPackedVarintArray<char const* google::protobuf::internal::VarintParser<long long,true>(void *,char const*,google::protobuf::internal::ParseContext *)::{lambda(unsigned long long)#1}>(result, v13, a3);
        if ((unsigned __int8 *)v13 != result)
          return 0;
        return result;
      }
      result = google::protobuf::internal::ReadPackedVarintArray<char const* google::protobuf::internal::VarintParser<long long,true>(void *,char const*,google::protobuf::internal::ParseContext *)::{lambda(unsigned long long)#1}>(result, v8, a3);
      if (!result)
        return result;
      v10 = *(__int128 **)(a1 + 8);
      v11 = (_DWORD)result - (_DWORD)v10;
      v12 = v5 - v9;
      if (v5 - v9 <= 16)
        break;
      if (*(int *)(a1 + 28) < 17)
        return 0;
      result = (unsigned __int8 *)google::protobuf::internal::EpsCopyInputStream::Next((google::protobuf::internal::EpsCopyInputStream *)a1);
      if (!result)
        return result;
      v5 = v5 - v9 - v11;
      result += v11;
    }
    v18 = 0;
    v17 = 0;
    v16 = *v10;
    v14 = google::protobuf::internal::ReadPackedVarintArray<char const* google::protobuf::internal::VarintParser<long long,true>(void *,char const*,google::protobuf::internal::ParseContext *)::{lambda(unsigned long long)#1}>((unsigned __int8 *)&v16 + v11, (unint64_t)&v16 + v12, a3);
    if (v14)
      v15 = v14 == (unsigned __int8 *)((char *)&v16 + v12);
    else
      v15 = 0;
    if (!v15)
      return 0;
    return (unsigned __int8 *)(*(_QWORD *)(a1 + 8) + v12);
  }
  return result;
}

unsigned __int8 *google::protobuf::internal::ReadPackedVarintArray<char const* google::protobuf::internal::VarintParser<long long,true>(void *,char const*,google::protobuf::internal::ParseContext *)::{lambda(unsigned long long)#1}>(unsigned __int8 *a1, unint64_t a2, unsigned int *a3)
{
  unsigned __int8 *i;
  unint64_t v6;
  uint64_t v7;
  unsigned int v8;
  unint64_t v10;

  for (i = a1; (unint64_t)i < a2; *a3 = v8)
  {
    v10 = 0;
    i = google::protobuf::internal::VarintParse<unsigned long long>((char *)i, &v10);
    if (!i)
      break;
    v6 = -(uint64_t)(v10 & 1) ^ (v10 >> 1);
    v7 = *a3;
    if ((_DWORD)v7 == a3[1])
    {
      v8 = v7 + 1;
      google::protobuf::RepeatedField<long long>::Reserve(a3, v7 + 1);
      *(_QWORD *)(*((_QWORD *)a3 + 1) + 8 * v7) = v6;
    }
    else
    {
      *(_QWORD *)(*((_QWORD *)a3 + 1) + 8 * v7) = v6;
      v8 = v7 + 1;
    }
  }
  return i;
}

unsigned __int8 *google::protobuf::internal::EpsCopyInputStream::ReadPackedVarint<char const* google::protobuf::internal::VarintParser<BOOL,false>(void *,char const*,google::protobuf::internal::ParseContext *)::{lambda(unsigned long long)#1}>(uint64_t a1, google::protobuf::internal *this, unsigned int *a3)
{
  int v5;
  unsigned __int8 *result;
  int v7;
  unint64_t v8;
  int v9;
  __int128 *v10;
  int v11;
  int v12;
  unint64_t v13;
  unsigned __int8 *v14;
  BOOL v15;
  __int128 v16;
  uint64_t v17;
  __int16 v18;
  uint64_t v19;

  v19 = *MEMORY[0x1E0C80C00];
  v5 = *(unsigned __int8 *)this;
  if ((*(char *)this & 0x80000000) == 0)
  {
    result = (unsigned __int8 *)this + 1;
    goto LABEL_5;
  }
  result = (unsigned __int8 *)google::protobuf::internal::ReadSizeFallback(this, (const char *)*(unsigned __int8 *)this);
  if (result)
  {
    v5 = v7;
    while (1)
    {
LABEL_5:
      v8 = *(_QWORD *)(a1 + 8);
      v9 = v8 - (_DWORD)result;
      if (v5 <= (int)v8 - (int)result)
      {
        v13 = (unint64_t)&result[v5];
        result = google::protobuf::internal::ReadPackedVarintArray<char const* google::protobuf::internal::VarintParser<BOOL,false>(void *,char const*,google::protobuf::internal::ParseContext *)::{lambda(unsigned long long)#1}>(result, v13, a3);
        if ((unsigned __int8 *)v13 != result)
          return 0;
        return result;
      }
      result = google::protobuf::internal::ReadPackedVarintArray<char const* google::protobuf::internal::VarintParser<BOOL,false>(void *,char const*,google::protobuf::internal::ParseContext *)::{lambda(unsigned long long)#1}>(result, v8, a3);
      if (!result)
        return result;
      v10 = *(__int128 **)(a1 + 8);
      v11 = (_DWORD)result - (_DWORD)v10;
      v12 = v5 - v9;
      if (v5 - v9 <= 16)
        break;
      if (*(int *)(a1 + 28) < 17)
        return 0;
      result = (unsigned __int8 *)google::protobuf::internal::EpsCopyInputStream::Next((google::protobuf::internal::EpsCopyInputStream *)a1);
      if (!result)
        return result;
      v5 = v5 - v9 - v11;
      result += v11;
    }
    v18 = 0;
    v17 = 0;
    v16 = *v10;
    v14 = google::protobuf::internal::ReadPackedVarintArray<char const* google::protobuf::internal::VarintParser<BOOL,false>(void *,char const*,google::protobuf::internal::ParseContext *)::{lambda(unsigned long long)#1}>((unsigned __int8 *)&v16 + v11, (unint64_t)&v16 + v12, a3);
    if (v14)
      v15 = v14 == (unsigned __int8 *)((char *)&v16 + v12);
    else
      v15 = 0;
    if (!v15)
      return 0;
    return (unsigned __int8 *)(*(_QWORD *)(a1 + 8) + v12);
  }
  return result;
}

unsigned __int8 *google::protobuf::internal::ReadPackedVarintArray<char const* google::protobuf::internal::VarintParser<BOOL,false>(void *,char const*,google::protobuf::internal::ParseContext *)::{lambda(unsigned long long)#1}>(unsigned __int8 *a1, unint64_t a2, unsigned int *a3)
{
  unsigned __int8 *i;
  BOOL v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v10;

  for (i = a1; (unint64_t)i < a2; *a3 = v8)
  {
    v10 = 0;
    i = google::protobuf::internal::VarintParse<unsigned long long>((char *)i, &v10);
    if (!i)
      break;
    v6 = v10 != 0;
    v7 = *a3;
    if ((_DWORD)v7 == a3[1])
    {
      v8 = v7 + 1;
      google::protobuf::RepeatedField<BOOL>::Reserve(a3, v7 + 1);
      *(_BYTE *)(*((_QWORD *)a3 + 1) + v7) = v6;
    }
    else
    {
      *(_BYTE *)(*((_QWORD *)a3 + 1) + v7) = v6;
      v8 = v7 + 1;
    }
  }
  return i;
}

google::protobuf::internal::EpsCopyInputStream *google::protobuf::internal::EpsCopyInputStream::ReadPackedFixed<unsigned int>(google::protobuf::internal::EpsCopyInputStream *a1, char *a2, int a3, unsigned int *a4)
{
  int v5;
  char *v6;
  int v7;
  uint64_t v9;
  void *v10;
  google::protobuf::internal::EpsCopyInputStream *result;
  uint64_t v12;
  void *v13;

  v5 = a3;
  v6 = a2;
  v7 = *((_DWORD *)a1 + 2) - (_DWORD)a2 + 16;
  if (v7 >= a3)
  {
LABEL_5:
    google::protobuf::RepeatedField<int>::Reserve(a4, *a4 + (v5 >> 2));
    v12 = (int)*a4;
    v13 = (void *)(*((_QWORD *)a4 + 1) + 4 * v12);
    *a4 = v12 + (v5 >> 2);
    memcpy(v13, v6, (int)(v5 & 0xFFFFFFFC));
    if (v5 == (v5 & 0xFFFFFFFC))
      return (google::protobuf::internal::EpsCopyInputStream *)&v6[v5 & 0xFFFFFFFC];
    else
      return 0;
  }
  else
  {
    while (1)
    {
      google::protobuf::RepeatedField<int>::Reserve(a4, *a4 + (v7 >> 2));
      v9 = (int)*a4;
      v10 = (void *)(*((_QWORD *)a4 + 1) + 4 * v9);
      *a4 = v9 + (v7 >> 2);
      memcpy(v10, v6, (int)(v7 & 0xFFFFFFFC));
      if (*((int *)a1 + 7) < 17)
        return 0;
      result = google::protobuf::internal::EpsCopyInputStream::Next(a1);
      if (!result)
        return result;
      v5 -= v7 & 0xFFFFFFFC;
      v6 = (char *)result - (v7 & 3) + 16;
      v7 = *((_DWORD *)a1 + 2) - ((_DWORD)result - (v7 & 3));
      if (v5 <= v7)
        goto LABEL_5;
    }
  }
}

google::protobuf::internal::EpsCopyInputStream *google::protobuf::internal::EpsCopyInputStream::ReadPackedFixed<unsigned long long>(google::protobuf::internal::EpsCopyInputStream *a1, char *a2, int a3, unsigned int *a4)
{
  int v5;
  char *v6;
  int v7;
  uint64_t v9;
  void *v10;
  google::protobuf::internal::EpsCopyInputStream *result;
  uint64_t v12;
  void *v13;

  v5 = a3;
  v6 = a2;
  v7 = *((_DWORD *)a1 + 2) - (_DWORD)a2 + 16;
  if (v7 >= a3)
  {
LABEL_5:
    google::protobuf::RepeatedField<long long>::Reserve(a4, *a4 + (v5 >> 3));
    v12 = (int)*a4;
    v13 = (void *)(*((_QWORD *)a4 + 1) + 8 * v12);
    *a4 = v12 + (v5 >> 3);
    memcpy(v13, v6, (int)(v5 & 0xFFFFFFF8));
    if (v5 == (v5 & 0xFFFFFFF8))
      return (google::protobuf::internal::EpsCopyInputStream *)&v6[v5 & 0xFFFFFFF8];
    else
      return 0;
  }
  else
  {
    while (1)
    {
      google::protobuf::RepeatedField<long long>::Reserve(a4, *a4 + (v7 >> 3));
      v9 = (int)*a4;
      v10 = (void *)(*((_QWORD *)a4 + 1) + 8 * v9);
      *a4 = v9 + (v7 >> 3);
      memcpy(v10, v6, (int)(v7 & 0xFFFFFFF8));
      if (*((int *)a1 + 7) < 17)
        return 0;
      result = google::protobuf::internal::EpsCopyInputStream::Next(a1);
      if (!result)
        return result;
      v5 -= v7 & 0xFFFFFFF8;
      v6 = (char *)result - (v7 & 7) + 16;
      v7 = *((_DWORD *)a1 + 2) - ((_DWORD)result - (v7 & 7));
      if (v5 <= v7)
        goto LABEL_5;
    }
  }
}

void google::protobuf::internal::UnknownFieldLiteParserHelper::AddVarint(std::string **this, int a2, unint64_t a3)
{
  std::string *v3;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  std::string *v9;
  unint64_t v10;
  unint64_t v11;

  v3 = *this;
  if (*this)
  {
    v6 = (8 * a2);
    if (v6 < 0x80)
    {
      LOBYTE(v7) = 8 * a2;
    }
    else
    {
      do
      {
        std::string::push_back(v3, v6 | 0x80);
        v7 = v6 >> 7;
        v8 = v6 >> 14;
        v6 >>= 7;
      }
      while (v8);
    }
    std::string::push_back(v3, v7);
    v9 = *this;
    if (a3 < 0x80)
    {
      LOBYTE(v10) = a3;
    }
    else
    {
      do
      {
        std::string::push_back(v9, a3 | 0x80);
        v10 = a3 >> 7;
        v11 = a3 >> 14;
        a3 >>= 7;
      }
      while (v11);
    }
    std::string::push_back(v9, v10);
  }
}

std::string *google::protobuf::internal::UnknownFieldLiteParserHelper::AddFixed64(std::string *this, int a2, uint64_t a3)
{
  std::string *v3;
  std::string **v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  _QWORD v9[2];

  v9[1] = *MEMORY[0x1E0C80C00];
  v3 = (std::string *)this->__r_.__value_.__r.__words[0];
  if (this->__r_.__value_.__r.__words[0])
  {
    v5 = (std::string **)this;
    v6 = (8 * a2) | 1u;
    if (v6 < 0x80)
    {
      LOBYTE(v7) = (8 * a2) | 1;
    }
    else
    {
      do
      {
        std::string::push_back(v3, v6 | 0x80);
        v7 = v6 >> 7;
        v8 = v6 >> 14;
        v6 >>= 7;
      }
      while (v8);
    }
    std::string::push_back(v3, v7);
    v9[0] = a3;
    return std::string::append(*v5, (const std::string::value_type *)v9, 8uLL);
  }
  return this;
}

const std::string::value_type *google::protobuf::internal::UnknownFieldLiteParserHelper::ParseLengthDelimited(std::string **a1, int a2, std::string::value_type *this, google::protobuf::internal::EpsCopyInputStream *a4)
{
  int v7;
  const std::string::value_type *v8;
  const std::string::value_type *result;
  int v10;
  std::string *v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::string *v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  std::string *v20;
  uint64_t v21;
  std::string::size_type size;
  int v23;
  int v24;

  v7 = *this;
  if (*this < 0)
  {
    result = google::protobuf::internal::ReadSizeFallback((google::protobuf::internal *)this, (const char *)*this);
    if (!result)
      return result;
    v8 = result;
    v7 = v10;
  }
  else
  {
    v8 = this + 1;
  }
  v11 = *a1;
  if (*a1)
  {
    v12 = (8 * a2) | 2u;
    if (v12 < 0x80)
    {
      LOBYTE(v13) = v12;
    }
    else
    {
      do
      {
        std::string::push_back(v11, v12 | 0x80);
        v13 = v12 >> 7;
        v14 = v12 >> 14;
        v12 >>= 7;
      }
      while (v14);
    }
    std::string::push_back(v11, v13);
    v16 = *a1;
    LOBYTE(v17) = v7;
    if (v7 >= 0x80)
    {
      v18 = v7;
      do
      {
        std::string::push_back(v16, v18 | 0x80);
        v17 = v18 >> 7;
        v19 = v18 >> 14;
        v18 >>= 7;
      }
      while (v19);
    }
    std::string::push_back(v16, v17);
    v20 = *a1;
    v21 = *((_QWORD *)a4 + 1);
    if (v21 - (uint64_t)v8 + 16 >= v7)
    {
LABEL_35:
      std::string::append(v20, v8, v7);
      return &v8[v7];
    }
    if (v21 - (uint64_t)v8 + *((int *)a4 + 7) >= v7)
    {
      if (SHIBYTE(v20->__r_.__value_.__r.__words[2]) < 0)
        size = v20->__r_.__value_.__l.__size_;
      else
        size = HIBYTE(v20->__r_.__value_.__r.__words[2]);
      if (v7 >= 50000000)
        v23 = 50000000;
      else
        v23 = v7;
      std::string::reserve(v20, size + v23);
      v21 = *((_QWORD *)a4 + 1);
    }
    v24 = v21 - (_DWORD)v8 + 16;
    while (*((_QWORD *)a4 + 2))
    {
      std::string::append(v20, v8, v24);
      if (*((int *)a4 + 7) < 17)
        break;
      result = (const std::string::value_type *)google::protobuf::internal::EpsCopyInputStream::Next(a4);
      if (!result)
        return result;
      v7 -= v24;
      v8 = result + 16;
      v24 = *((_DWORD *)a4 + 2) - (_DWORD)result;
      if (v7 <= v24)
        goto LABEL_35;
    }
  }
  else
  {
    v15 = *((_QWORD *)a4 + 1) - (_QWORD)v8 + 16;
    if (v15 >= v7)
      return &v8[v7];
    while (*((_QWORD *)a4 + 2) && *((int *)a4 + 7) >= 17)
    {
      result = (const std::string::value_type *)google::protobuf::internal::EpsCopyInputStream::Next(a4);
      if (!result)
        return result;
      v7 -= v15;
      LODWORD(v15) = *((_DWORD *)a4 + 2) - (_DWORD)result;
      if (v7 <= (int)v15)
      {
        result += v7 + 16;
        return result;
      }
    }
  }
  return 0;
}

google::protobuf::internal *google::protobuf::internal::UnknownFieldLiteParserHelper::ParseGroup(google::protobuf::internal::UnknownFieldLiteParserHelper *a1, int a2, google::protobuf::internal *a3, int32x2_t *this)
{
  std::string *v7;
  int v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  int v12;
  BOOL v13;
  google::protobuf::internal *v14;
  int v15;
  uint64_t v17;
  __int32 v18;
  std::string *v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  google::protobuf::internal *v25;

  v7 = *(std::string **)a1;
  v8 = 8 * a2;
  if (*(_QWORD *)a1)
  {
    v9 = v8 | 3u;
    if (v9 < 0x80)
    {
      LOBYTE(v10) = v8 | 3;
    }
    else
    {
      do
      {
        std::string::push_back(v7, v9 | 0x80);
        v10 = v9 >> 7;
        v11 = v9 >> 14;
        v9 >>= 7;
      }
      while (v11);
    }
    std::string::push_back(v7, v10);
  }
  v12 = this[11].i32[0];
  v13 = __OFSUB__(v12--, 1);
  this[11].i32[0] = v12;
  if (v12 < 0 != v13)
    return 0;
  ++this[11].i32[1];
  v25 = a3;
  while (1)
  {
    if ((google::protobuf::internal::EpsCopyInputStream::DoneWithCheck((google::protobuf::internal::EpsCopyInputStream *)this, (const char **)&v25, this[11].i32[1]) & 1) != 0)
    {
      v14 = v25;
      goto LABEL_25;
    }
    v14 = (google::protobuf::internal *)((char *)v25 + 1);
    v15 = *(unsigned __int8 *)v25;
    if (*(char *)v25 < 0)
    {
      v15 = v15 + (*(unsigned __int8 *)v14 << 7) - 128;
      if (*(char *)v14 < 0)
      {
        v14 = (google::protobuf::internal *)((char *)v25 + 3);
        v17 = -21;
        while (1)
        {
          v15 += (*((unsigned __int8 *)v14 - 1) - 1) << (v17 + 35);
          if ((*((char *)v14 - 1) & 0x80000000) == 0)
            break;
          v14 = (google::protobuf::internal *)((char *)v14 + 1);
          v17 += 7;
          if (!v17)
            goto LABEL_22;
        }
      }
      else
      {
        v14 = (google::protobuf::internal *)((char *)v25 + 2);
      }
    }
    v25 = v14;
    if (!v15 || (v15 & 7) == 4)
      break;
    v25 = (google::protobuf::internal *)google::protobuf::internal::FieldParser<google::protobuf::internal::UnknownFieldLiteParserHelper>(v15, a1, v14);
    if (!v25)
    {
LABEL_22:
      v14 = 0;
      goto LABEL_25;
    }
  }
  this[10].i32[0] = v15 - 1;
LABEL_25:
  this[11] = vadd_s32(this[11], (int32x2_t)0xFFFFFFFF00000001);
  v18 = this[10].i32[0];
  this[10].i32[0] = 0;
  if (v18 != (v8 | 3) || v14 == 0)
    return 0;
  v20 = *(std::string **)a1;
  if (v20)
  {
    v21 = v8 | 4u;
    if (v21 < 0x80)
    {
      LOBYTE(v22) = v8 | 4;
    }
    else
    {
      do
      {
        std::string::push_back(v20, v21 | 0x80);
        v22 = v21 >> 7;
        v23 = v21 >> 14;
        v21 >>= 7;
      }
      while (v23);
    }
    std::string::push_back(v20, v22);
  }
  return v14;
}

std::string *google::protobuf::internal::UnknownFieldLiteParserHelper::AddFixed32(std::string *this, int a2, int a3)
{
  std::string *v3;
  std::string **v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  std::string::value_type __s[4];

  v3 = (std::string *)this->__r_.__value_.__r.__words[0];
  if (this->__r_.__value_.__r.__words[0])
  {
    v5 = (std::string **)this;
    v6 = (8 * a2) | 5u;
    if (v6 < 0x80)
    {
      LOBYTE(v7) = (8 * a2) | 5;
    }
    else
    {
      do
      {
        std::string::push_back(v3, v6 | 0x80);
        v7 = v6 >> 7;
        v8 = v6 >> 14;
        v6 >>= 7;
      }
      while (v8);
    }
    std::string::push_back(v3, v7);
    *(_DWORD *)__s = a3;
    return std::string::append(*v5, __s, 4uLL);
  }
  return this;
}

void google::protobuf::internal::ArenaStringPtr::Set(std::string **a1, std::string *a2, __int128 *a3, google::protobuf::internal::ArenaImpl *this)
{
  std::string *AlignedAndAddCleanup;
  std::string *v8;
  __int128 v9;

  if (*a1 != a2)
    JUMPOUT(0x18D7640B8);
  if (!this)
  {
    AlignedAndAddCleanup = (std::string *)operator new();
    v8 = AlignedAndAddCleanup;
    if ((*((char *)a3 + 23) & 0x80000000) == 0)
    {
      *(_OWORD *)&AlignedAndAddCleanup->__r_.__value_.__l.__data_ = *a3;
      AlignedAndAddCleanup->__r_.__value_.__r.__words[2] = *((_QWORD *)a3 + 2);
      goto LABEL_10;
    }
LABEL_9:
    std::string::__init_copy_ctor_external(AlignedAndAddCleanup, *(const std::string::value_type **)a3, *((_QWORD *)a3 + 1));
    goto LABEL_10;
  }
  if ((*((_BYTE *)this + 24) & 1) != 0)
  AlignedAndAddCleanup = (std::string *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x18uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<std::string>);
  v8 = AlignedAndAddCleanup;
  if (*((char *)a3 + 23) < 0)
    goto LABEL_9;
  v9 = *a3;
  AlignedAndAddCleanup->__r_.__value_.__r.__words[2] = *((_QWORD *)a3 + 2);
  *(_OWORD *)&AlignedAndAddCleanup->__r_.__value_.__l.__data_ = v9;
LABEL_10:
  *a1 = v8;
}

void sub_1888C6C4C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x18D76437C](v1, 0x1012C40EC159624);
  _Unwind_Resume(a1);
}

void google::protobuf::internal::ArenaStringPtr::Set(uint64_t *a1, uint64_t a2, __int128 *a3, google::protobuf::internal::ArenaImpl *this)
{
  uint64_t v5;
  __int128 v6;
  uint64_t AlignedAndAddCleanup;
  uint64_t v9;
  google::protobuf::internal::ArenaImpl *v10;

  v5 = *a1;
  if (*a1 == a2)
  {
    if (this)
    {
      if ((*((_BYTE *)this + 24) & 1) != 0)
      {
        v10 = this;
        this = v10;
      }
      AlignedAndAddCleanup = (uint64_t)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x18uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<std::string>);
      v9 = *((_QWORD *)a3 + 2);
      *(_OWORD *)AlignedAndAddCleanup = *a3;
      *(_QWORD *)(AlignedAndAddCleanup + 16) = v9;
      *((_QWORD *)a3 + 1) = 0;
      *((_QWORD *)a3 + 2) = 0;
      *(_QWORD *)a3 = 0;
    }
    else
    {
      AlignedAndAddCleanup = operator new();
      *(_OWORD *)AlignedAndAddCleanup = *a3;
      *(_QWORD *)(AlignedAndAddCleanup + 16) = *((_QWORD *)a3 + 2);
      *(_QWORD *)a3 = 0;
      *((_QWORD *)a3 + 1) = 0;
      *((_QWORD *)a3 + 2) = 0;
    }
    *a1 = AlignedAndAddCleanup;
  }
  else
  {
    if (*(char *)(v5 + 23) < 0)
      operator delete(*(void **)v5);
    v6 = *a3;
    *(_QWORD *)(v5 + 16) = *((_QWORD *)a3 + 2);
    *(_OWORD *)v5 = v6;
    *((_BYTE *)a3 + 23) = 0;
    *(_BYTE *)a3 = 0;
  }
}

_QWORD *google::protobuf::internal::ArenaStringPtr::MutableSlow<>(_QWORD *a1, google::protobuf::internal::ArenaImpl *this)
{
  _QWORD *result;

  if (this)
  {
    if ((*((_BYTE *)this + 24) & 1) != 0)
    result = google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x18uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<std::string>);
  }
  else
  {
    result = (_QWORD *)operator new();
  }
  *result = 0;
  result[1] = 0;
  result[2] = 0;
  *a1 = result;
  return result;
}

char *google::protobuf::internal::ArenaStringPtr::SetAllocated(char *result, uint64_t a2, void *a3, char *a4)
{
  char *v6;
  uint64_t v7;

  v6 = result;
  if (a4)
  {
    if (a3)
    {
      *(_QWORD *)result = a3;
      return google::protobuf::Arena::Own<std::string>(a4, a3);
    }
  }
  else
  {
    v7 = *(_QWORD *)result;
    if (*(_QWORD *)result != a2)
    {
      if (*(char *)(v7 + 23) < 0)
        operator delete(*(void **)v7);
      result = (char *)MEMORY[0x18D76437C](v7, 0x1012C40EC159624);
    }
    if (a3)
    {
      *(_QWORD *)v6 = a3;
      return result;
    }
  }
  *(_QWORD *)v6 = a2;
  return result;
}

uint64_t *google::protobuf::internal::ArenaStringPtr::Destroy(uint64_t *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  if (!a3)
  {
    v3 = *result;
    if (*result != a2)
    {
      if (*(char *)(v3 + 23) < 0)
        operator delete(*(void **)v3);
      JUMPOUT(0x18D76437CLL);
    }
  }
  return result;
}

uint64_t google::protobuf::io::ZeroCopyOutputStream::WriteAliasedRaw(google::protobuf::io::ZeroCopyOutputStream *this, const void *a2)
{
  int v3;
  const char *v4;
  int v5;
  std::string __p;

  v3 = 3;
  v4 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/io/zero_copy_stream.cc";
  v5 = 47;
  memset(&__p, 0, sizeof(__p));
  std::string::append(&__p, "This ZeroCopyOutputStream doesn't support aliasing. Reaching here usually means a ZeroCopyOutputStream implementation bug.");
  google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v3);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  return 0;
}

void sub_1888C6F58(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::internal::WireFormatLite::Int32Size(unsigned int *a1)
{
  uint64_t v1;
  uint64_t result;
  int *v4;
  int v5;
  int v6;
  uint64_t v7;

  v1 = *a1;
  if ((int)v1 < 1)
    return 0;
  result = 0;
  v4 = (int *)*((_QWORD *)a1 + 1);
  do
  {
    v6 = *v4++;
    v5 = v6;
    if (v6 < 0)
      v7 = 10;
    else
      v7 = (9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6;
    result += v7;
    --v1;
  }
  while (v1);
  return result;
}

uint64_t google::protobuf::internal::WireFormatLite::SInt32Size(unsigned int *a1)
{
  uint64_t v1;
  uint64_t result;
  int *v4;
  int v5;

  v1 = *a1;
  if ((int)v1 < 1)
    return 0;
  result = 0;
  v4 = (int *)*((_QWORD *)a1 + 1);
  do
  {
    v5 = *v4++;
    result += (9 * (__clz((2 * v5) ^ (v5 >> 31) | 1) ^ 0x1F) + 73) >> 6;
    --v1;
  }
  while (v1);
  return result;
}

uint64_t google::protobuf::internal::WireFormatLite::SInt64Size(unsigned int *a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;

  v1 = *a1;
  if ((int)v1 < 1)
    return 0;
  result = 0;
  v4 = (uint64_t *)*((_QWORD *)a1 + 1);
  do
  {
    v5 = *v4++;
    result += (9 * (__clz((2 * v5) ^ (v5 >> 63) | 1) ^ 0x3F) + 73) >> 6;
    --v1;
  }
  while (v1);
  return result;
}

void maps::path_codec::RoadProperties::~RoadProperties(void **this)
{
  void *v2;

  if (*((char *)this + 63) < 0)
    operator delete(this[5]);
  v2 = this[1];
  if (v2)
  {
    this[2] = v2;
    operator delete(v2);
  }
}

uint64_t *maps::path_codec::operator<<(uint64_t *a1, uint64_t a2, double a3)
{
  uint64_t v5;
  char *v6;
  int v7;
  long double v8;
  double v9;
  long double v10;
  _QWORD *v11;

  v5 = *a1;
  v6 = (char *)a1 + *(_QWORD *)(*a1 - 24);
  v7 = *((_DWORD *)v6 + 2);
  *((_QWORD *)v6 + 2) = 6;
  *(_DWORD *)((char *)a1 + *(_QWORD *)(v5 - 24) + 8) = *(_DWORD *)((_BYTE *)a1 + *(_QWORD *)(v5 - 24) + 8) & 0xFFFFFEFB | 4;
  LODWORD(a3) = *(_DWORD *)(a2 + 4);
  v8 = (double)*(unint64_t *)&a3 * -6.28318531 / 4294967300.0 + 3.14159265;
  v9 = exp(v8);
  v10 = exp(-v8);
  atan((v9 - v10) * 0.5);
  v11 = (_QWORD *)std::ostream::operator<<();
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v11, (uint64_t)",", 1);
  std::ostream::operator<<();
  if (*(_DWORD *)(a2 + 8) != 0x7FFFFFFF)
  {
    std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(a1, (uint64_t)",", 1);
    std::ostream::operator<<();
  }
  *(_DWORD *)((char *)a1 + *(_QWORD *)(*a1 - 24) + 8) = v7;
  return a1;
}

void std::vector<double>::reserve(void **a1, unint64_t a2)
{
  uint64_t v3;
  _BYTE *v4;
  int64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  char *v11;
  char *v12;
  uint64_t v13;

  v4 = a1[2];
  v3 = (uint64_t)(a1 + 2);
  if (a2 > (v4 - (_BYTE *)*a1) >> 3)
  {
    if (a2 >> 61)
      std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
    v5 = (_BYTE *)a1[1] - (_BYTE *)*a1;
    v6 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<zilch::StringList::Entry>>(v3, a2);
    v7 = &v6[v5 & 0xFFFFFFFFFFFFFFF8];
    v9 = &v6[8 * v8];
    v10 = (char *)*a1;
    v11 = (char *)a1[1];
    v12 = v7;
    if (v11 != *a1)
    {
      v12 = v7;
      do
      {
        v13 = *((_QWORD *)v11 - 1);
        v11 -= 8;
        *((_QWORD *)v12 - 1) = v13;
        v12 -= 8;
      }
      while (v11 != v10);
    }
    *a1 = v12;
    a1[1] = v7;
    a1[2] = v9;
    if (v10)
      operator delete(v10);
  }
}

void maps::path_codec::great_circle_distance_in_m(uint64_t a1, unsigned int *a2, double a3)
{
  long double v5;
  double v6;
  long double v7;
  long double v8;
  unint64_t v9;
  long double v10;
  double v11;
  long double v12;
  long double v13;
  uint64x2_t v14;
  float64x2_t v15;
  long double v16;
  long double v17;
  double v18;
  long double v19;
  long double v20;
  unsigned int v21;
  double v22;

  LODWORD(a3) = *(_DWORD *)(a1 + 4);
  v5 = 3.14159265 - (double)*(unint64_t *)&a3 * 6.28318531 / 4294967300.0;
  v6 = exp(v5);
  v7 = exp(-v5);
  v8 = atan((v6 - v7) * 0.5) * 57.2957795 * 0.0174532925;
  v9 = *(_QWORD *)a1;
  v21 = *(_QWORD *)a1;
  LODWORD(v9) = a2[1];
  v10 = 3.14159265 - (double)v9 * 6.28318531 / 4294967300.0;
  v11 = exp(v10);
  v12 = exp(-v10);
  v13 = atan((v11 - v12) * 0.5) * 57.2957795 * 0.0174532925;
  v14.i64[0] = v21;
  v14.i64[1] = *a2;
  v15 = vmulq_f64(vaddq_f64(vdivq_f64(vmulq_f64(vcvtq_f64_u64(v14), (float64x2_t)vdupq_n_s64(0x4076800000000000uLL)), (float64x2_t)vdupq_n_s64(0x41EFFFFFFFE00000uLL)), (float64x2_t)vdupq_n_s64(0xC066800000000000)), (float64x2_t)vdupq_n_s64(0x3F91DF46A2529D39uLL));
  v22 = vsubq_f64(v15, (float64x2_t)vdupq_laneq_s64((int64x2_t)v15, 1)).f64[0];
  v16 = sin((v8 - v13) * 0.5);
  v17 = v16 * v16;
  v18 = cos(v8);
  v19 = v18 * cos(v13);
  v20 = sin(0.5 * v22);
  atan2(sqrt(v17 + v19 * (v20 * v20)), sqrt(1.0 - (v17 + v19 * (v20 * v20))));
}

uint64_t maps::path_codec::compute_bearing(_DWORD *a1, _DWORD *a2, double a3, double a4, double a5)
{
  long double v6;
  double v7;
  long double v8;
  unint64_t v9;
  long double v10;
  double v11;
  long double v12;
  long double v13;
  long double v14;
  double v15;
  double i;
  unsigned int v17;
  double v19;
  double v20;

  LODWORD(a3) = *a2;
  LODWORD(a4) = a2[1];
  LODWORD(a5) = *a1;
  v20 = (double)*(unint64_t *)&a3 * 360.0 / 4294967300.0
      + -180.0
      - ((double)*(unint64_t *)&a5 * 360.0 / 4294967300.0
       + -180.0);
  v6 = 3.14159265 - (double)*(unint64_t *)&a4 * 6.28318531 / 4294967300.0;
  v7 = exp(v6);
  v8 = exp(-v6);
  *(double *)&v9 = atan((v7 - v8) * 0.5) * 57.2957795;
  v19 = *(double *)&v9;
  LODWORD(v9) = a1[1];
  v10 = 3.14159265 - (double)v9 * 6.28318531 / 4294967300.0;
  v11 = exp(v10);
  v12 = exp(-v10);
  v13 = atan((v11 - v12) * 0.5) * 57.2957795;
  v14 = cos((v19 + v13) * 0.5 * 3.14159265 / 180.0);
  v15 = atan2(v20 * v14, v19 - v13);
  if (v15 < 0.0)
    v15 = v15 + 6.28318531;
  for (i = v15 * 180.0 / 3.14159265; i >= 180.0; i = i + -360.0)
    ;
  while (i < -180.0)
    i = i + 360.0;
  while (i < 0.0)
    i = i + 360.0;
  v17 = llround(i);
  return v17 - 360 * (((int)(11651 * v17) >> 22) + ((11651 * v17) >> 31));
}

_QWORD *std::vector<maps::path_codec::Coordinate>::__init_with_size[abi:ne180100]<maps::path_codec::Coordinate*,maps::path_codec::Coordinate*>(_QWORD *result, const void *a2, uint64_t a3, unint64_t a4)
{
  _QWORD *v6;
  uint64_t v7;
  size_t v8;

  if (a4)
  {
    v6 = result;
    result = std::vector<maps::path_codec::Coordinate>::__vallocate[abi:ne180100](result, a4);
    v7 = v6[1];
    v8 = a3 - (_QWORD)a2;
    if (v8)
      result = memmove((void *)v6[1], a2, v8);
    v6[1] = v7 + v8;
  }
  return result;
}

void sub_1888C76AC(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

char *std::vector<maps::path_codec::Coordinate>::__vallocate[abi:ne180100](_QWORD *a1, unint64_t a2)
{
  char *result;
  uint64_t v4;

  if (a2 >= 0x1555555555555556)
    std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
  result = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<zilch::GeoCoordinates>>((uint64_t)(a1 + 2), a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[12 * v4];
  return result;
}

void sub_1888C77AC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void maps::path_codec::snap_point(uint64_t *a1@<X0>, _DWORD *a2@<X1>, uint64_t a3@<X8>, unint64_t a4@<D1>, unint64_t a5@<D2>, unint64_t a6@<D3>)
{
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v11;
  uint64_t v13;
  unint64_t v14;
  int v15;
  unint64_t v16;
  uint64_t v17;
  unsigned int *v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  unint64_t v25;
  uint64_t v27;
  int v28;
  double v29;
  uint64_t v30;
  int v31;
  int v32;
  double v33;
  BOOL v34;
  signed int v35;
  _DWORD *v36;
  double v37;
  double v38;
  double v39;
  double v40;
  double v41;
  double v42;
  int v43;
  int v44;
  double v45;
  double v46;
  int v47;
  double v48;
  _DWORD *v49;
  double v50;
  int v51;
  double v52;
  int v53;
  double v54;
  int v55;
  uint64_t v56;
  int v57;

  v7 = *a1;
  v8 = a1[1] - *a1;
  HIDWORD(v9) = -1;
  *(_OWORD *)a3 = xmmword_189CC0540;
  *(_QWORD *)(a3 + 16) = -1;
  if (0xAAAAAAAAAAAAAAABLL * (v8 >> 2) < 2)
    return;
  if (v8 != 12)
  {
    v13 = 0;
    v14 = 0;
    v11 = -1;
    v15 = 0x7FFFFFFF;
    while (1)
    {
      HIDWORD(v16) = -1;
      v56 = -1;
      v57 = 0x7FFFFFFF;
      v17 = v7 + v13;
      v18 = (unsigned int *)(v7 + v13 + 12);
      LODWORD(v16) = *(_DWORD *)(v7 + v13);
      LODWORD(a5) = *(_DWORD *)(v7 + v13 + 4);
      v19 = (double)v16;
      v20 = (double)a5;
      LODWORD(a6) = *(_DWORD *)(v7 + v13 + 16);
      v21 = (double)*v18 - v19;
      v22 = (double)a6 - (double)a5;
      v23 = v22 * v22 + v21 * v21;
      v24 = fabs(v23);
      HIDWORD(v25) = 1018167296;
      if (v23 != 0.0 && v24 >= 2.22044605e-16)
      {
        LODWORD(v24) = *a2;
        LODWORD(v25) = a2[1];
        v29 = (v22 * ((double)v25 - v20) + ((double)*(unint64_t *)&v24 - v19) * v21) / v23;
        if (v29 <= 0.0)
        {
          v27 = *(_QWORD *)v17;
          v28 = *(_DWORD *)(v17 + 8);
          goto LABEL_17;
        }
        if (v29 < 1.0)
        {
          v20 = v20 + v29 * v22;
          LODWORD(v56) = llround(v19 + v29 * v21);
          HIDWORD(v56) = llround(v20);
          v30 = v7 + v13;
          v31 = *(_DWORD *)(v7 + v13 + 8);
          if (v31 != 0x7FFFFFFF)
          {
            v32 = *(_DWORD *)(v30 + 20);
            if (v32 != 0x7FFFFFFF)
            {
              v20 = (double)v31 + v29 * (double)(v32 - v31);
              v57 = (int)v20;
            }
          }
          goto LABEL_18;
        }
      }
      v27 = *(_QWORD *)v18;
      v28 = v18[2];
LABEL_17:
      v57 = v28;
      v56 = v27;
LABEL_18:
      maps::path_codec::great_circle_distance_in_m((uint64_t)a2, (unsigned int *)&v56, v20);
      v9 = v33 * 100.0;
      HIDWORD(a4) = -1042284544;
      v34 = v9 >= -2147483650.0 && v9 < 2147483650.0;
      v35 = llround(v9);
      if (!v34)
        v35 = 0x7FFFFFFF;
      if (v15 == 0x7FFFFFFF || v35 < v15)
      {
        *(_QWORD *)a3 = v56;
        *(_DWORD *)(a3 + 8) = v57;
        *(_DWORD *)(a3 + 12) = v35;
        *(_QWORD *)(a3 + 16) = v14;
        v11 = v14;
        v15 = v35;
      }
      ++v14;
      v7 = *a1;
      v13 += 12;
      if (v14 >= -1 - 0x5555555555555555 * ((a1[1] - *a1) >> 2))
        goto LABEL_27;
    }
  }
  v11 = -1;
LABEL_27:
  v36 = (_DWORD *)(v7 + 12 * v11);
  LODWORD(v9) = *v36;
  LODWORD(a5) = v36[1];
  LODWORD(a4) = *a2;
  LODWORD(a6) = a2[1];
  v37 = (double)a4;
  HIDWORD(v38) = 1079574528;
  v39 = ((double)*(unint64_t *)&v9 - v37) / 100.0;
  v40 = (double)a5;
  v41 = (double)a6;
  v42 = (v40 - (double)a6) / 100.0;
  v43 = v36[2];
  if (v43 == 0x7FFFFFFF || (v44 = a2[2], v44 == 0x7FFFFFFF))
  {
    v45 = v42 * v42;
    v46 = v45 + v39 * v39;
  }
  else
  {
    v47 = v43 - v44;
    if (v47 < 0)
      v47 = -v47;
    v38 = (double)v47 / 100.0;
    v45 = v42 * v42;
    v46 = v45 + v39 * v39 + v38 * v38;
  }
  v48 = sqrt(v46);
  v49 = (_DWORD *)(v7 + 12 * (v11 + 1));
  LODWORD(v45) = *v49;
  LODWORD(v38) = v49[1];
  v50 = ((double)*(unint64_t *)&v45 - v37) / 100.0;
  v51 = v49[2];
  v52 = ((double)*(unint64_t *)&v38 - v41) / 100.0;
  if (v51 == 0x7FFFFFFF || (v53 = a2[2], v53 == 0x7FFFFFFF))
  {
    v54 = v52 * v52 + v50 * v50;
  }
  else
  {
    v55 = v51 - v53;
    if (v55 < 0)
      v55 = -v55;
    v54 = v52 * v52 + v50 * v50 + (double)v55 / 100.0 * ((double)v55 / 100.0);
  }
  if (v48 > sqrt(v54))
    *(_QWORD *)(a3 + 16) = v11 + 1;
}

uint64_t std::__hash_table<std::__hash_value_type<unsigned long,std::vector<maps::path_codec::Coordinate>>,std::__unordered_map_hasher<unsigned long,std::__hash_value_type<unsigned long,std::vector<maps::path_codec::Coordinate>>,std::hash<unsigned long>,std::equal_to<unsigned long>,true>,std::__unordered_map_equal<unsigned long,std::__hash_value_type<unsigned long,std::vector<maps::path_codec::Coordinate>>,std::equal_to<unsigned long>,std::hash<unsigned long>,true>,std::allocator<std::__hash_value_type<unsigned long,std::vector<maps::path_codec::Coordinate>>>>::~__hash_table(uint64_t a1)
{
  void *v2;

  std::__hash_table<std::__hash_value_type<unsigned long,std::vector<maps::path_codec::Coordinate>>,std::__unordered_map_hasher<unsigned long,std::__hash_value_type<unsigned long,std::vector<maps::path_codec::Coordinate>>,std::hash<unsigned long>,std::equal_to<unsigned long>,true>,std::__unordered_map_equal<unsigned long,std::__hash_value_type<unsigned long,std::vector<maps::path_codec::Coordinate>>,std::equal_to<unsigned long>,std::hash<unsigned long>,true>,std::allocator<std::__hash_value_type<unsigned long,std::vector<maps::path_codec::Coordinate>>>>::__deallocate_node(a1, *(_QWORD **)(a1 + 16));
  v2 = *(void **)a1;
  *(_QWORD *)a1 = 0;
  if (v2)
    operator delete(v2);
  return a1;
}

void std::__hash_table<std::__hash_value_type<unsigned long,std::vector<maps::path_codec::Coordinate>>,std::__unordered_map_hasher<unsigned long,std::__hash_value_type<unsigned long,std::vector<maps::path_codec::Coordinate>>,std::hash<unsigned long>,std::equal_to<unsigned long>,true>,std::__unordered_map_equal<unsigned long,std::__hash_value_type<unsigned long,std::vector<maps::path_codec::Coordinate>>,std::equal_to<unsigned long>,std::hash<unsigned long>,true>,std::allocator<std::__hash_value_type<unsigned long,std::vector<maps::path_codec::Coordinate>>>>::__deallocate_node(int a1, _QWORD *__p)
{
  _QWORD *v2;
  _QWORD *v3;
  void *v4;

  if (__p)
  {
    v2 = __p;
    do
    {
      v3 = (_QWORD *)*v2;
      v4 = (void *)v2[3];
      if (v4)
      {
        v2[4] = v4;
        operator delete(v4);
      }
      operator delete(v2);
      v2 = v3;
    }
    while (v3);
  }
}

uint64_t std::__hash_table<std::__hash_value_type<unsigned long,std::vector<maps::path_codec::Coordinate>>,std::__unordered_map_hasher<unsigned long,std::__hash_value_type<unsigned long,std::vector<maps::path_codec::Coordinate>>,std::hash<unsigned long>,std::equal_to<unsigned long>,true>,std::__unordered_map_equal<unsigned long,std::__hash_value_type<unsigned long,std::vector<maps::path_codec::Coordinate>>,std::equal_to<unsigned long>,std::hash<unsigned long>,true>,std::allocator<std::__hash_value_type<unsigned long,std::vector<maps::path_codec::Coordinate>>>>::__hash_table(uint64_t result, uint64_t *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;

  v2 = *a2;
  *a2 = 0;
  *(_QWORD *)result = v2;
  *(_QWORD *)(result + 8) = a2[1];
  a2[1] = 0;
  v5 = a2[2];
  v3 = a2 + 2;
  v4 = v5;
  *(_QWORD *)(result + 16) = v5;
  v6 = v3[1];
  *(_QWORD *)(result + 24) = v6;
  *(_DWORD *)(result + 32) = *((_DWORD *)v3 + 4);
  if (v6)
  {
    v7 = *(_QWORD *)(v4 + 8);
    v8 = *(_QWORD *)(result + 8);
    if ((v8 & (v8 - 1)) != 0)
    {
      if (v7 >= v8)
        v7 %= v8;
    }
    else
    {
      v7 &= v8 - 1;
    }
    *(_QWORD *)(v2 + 8 * v7) = result + 16;
    *v3 = 0;
    v3[1] = 0;
  }
  return result;
}

unint64_t maps::path_codec::Coordinate::from_lat_lon(maps::path_codec::Coordinate *this, double a2, double a3)
{
  unint64_t result;
  double v5;
  double v6;
  BOOL v7;
  double v8;
  long double v9;
  uint64_t v10;

  result = -1;
  if (a3 <= 180.0 && a2 >= -85.0511288 && a2 <= 85.0511288 && a3 >= -180.0)
  {
    v5 = fmax(a2, -85.0511288);
    v6 = v5 * 3.14159265 / 180.0;
    v7 = v5 < 85.0511288;
    v8 = 1.48442223;
    if (v7)
      v8 = v6;
    v9 = sin(v8);
    LODWORD(v10) = ((log((v9 + 1.0) / (1.0 - v9)) / -12.5663706 + 0.5) * 4294967300.0);
    if (v10 >= 0xFFFFFFFE)
      v10 = 4294967294;
    else
      v10 = v10;
    return ((a3 + 180.0) / 360.0 * 4294967300.0) | (unint64_t)(v10 << 32);
  }
  return result;
}

double maps::path_codec::get_name_diff_score(char *a1, char *a2)
{
  char *v3;
  int v4;
  char *v5;
  unint64_t v6;
  _BYTE *p_s1;
  uint64_t v8;
  uint64_t v9;
  int v10;
  char *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void **v15;
  uint64_t v16;
  unsigned __int8 v17;
  size_t v18;
  unint64_t v19;
  int v20;
  double v21;
  void **v22;
  void **v23;
  void *__p[2];
  unsigned __int8 v26;
  void *__s1;
  size_t __n;
  unsigned __int8 v29;

  v3 = a1;
  v4 = a1[23];
  if (v4 >= 0)
    v5 = a1;
  else
    v5 = *(char **)a1;
  if (v4 >= 0)
    v6 = a1[23];
  else
    v6 = *((_QWORD *)a1 + 1);
  p_s1 = &__s1;
  std::string::__init_with_size[abi:ne180100]<std::__wrap_iter<char const*>,std::__wrap_iter<char const*>>(&__s1, v5, &v5[v6], v6);
  v8 = *((_QWORD *)v3 + 1);
  if (v3[23] >= 0)
  {
    v9 = v3[23];
  }
  else
  {
    v3 = *(char **)v3;
    v9 = v8;
  }
  if (v9)
  {
    if ((v29 & 0x80u) != 0)
      p_s1 = __s1;
    do
    {
      *p_s1++ = __tolower(*v3++);
      --v9;
    }
    while (v9);
  }
  v10 = a2[23];
  if (v10 >= 0)
    v11 = a2;
  else
    v11 = *(char **)a2;
  if (v10 >= 0)
    v12 = a2[23];
  else
    v12 = *((_QWORD *)a2 + 1);
  std::string::__init_with_size[abi:ne180100]<std::__wrap_iter<char const*>,std::__wrap_iter<char const*>>(__p, v11, &v11[v12], v12);
  v13 = *((_QWORD *)a2 + 1);
  if (a2[23] >= 0)
  {
    v14 = a2[23];
  }
  else
  {
    a2 = *(char **)a2;
    v14 = v13;
  }
  if (v14)
  {
    if ((v26 & 0x80u) == 0)
      v15 = __p;
    else
      v15 = (void **)__p[0];
    do
    {
      *(_BYTE *)v15 = __tolower(*a2);
      v15 = (void **)((char *)v15 + 1);
      ++a2;
      --v14;
    }
    while (v14);
  }
  v16 = v29;
  v17 = v29;
  if ((v29 & 0x80u) == 0)
    v18 = v29;
  else
    v18 = __n;
  v19 = v26;
  v20 = (char)v26;
  if ((v26 & 0x80u) != 0)
    v19 = (unint64_t)__p[1];
  v21 = 1.0;
  if (v18 != v19)
    goto LABEL_43;
  if ((v26 & 0x80u) == 0)
    v22 = __p;
  else
    v22 = (void **)__p[0];
  if (((char)v29 & 0x80000000) == 0)
  {
    if (v29)
    {
      v23 = &__s1;
      while (*(unsigned __int8 *)v23 == *(unsigned __int8 *)v22)
      {
        v23 = (void **)((char *)v23 + 1);
        v22 = (void **)((char *)v22 + 1);
        if (!--v16)
          goto LABEL_42;
      }
    }
    else
    {
LABEL_42:
      v21 = 0.0;
    }
LABEL_43:
    if (((char)v26 & 0x80000000) == 0)
      goto LABEL_44;
LABEL_50:
    operator delete(__p[0]);
    if ((v29 & 0x80) == 0)
      return v21;
LABEL_51:
    operator delete(__s1);
    return v21;
  }
  if (!memcmp(__s1, v22, __n))
    v21 = 0.0;
  else
    v21 = 1.0;
  if (v20 < 0)
    goto LABEL_50;
LABEL_44:
  if ((v17 & 0x80) != 0)
    goto LABEL_51;
  return v21;
}

void sub_1888C80DC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a20 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

double maps::path_codec::CostFunction::get_default_cost_function@<D0>(uint64_t a1@<X8>)
{
  double result;
  __int16 __src[2];
  int v5;
  __int16 v6;
  int v7;
  __int16 v8;
  int v9;
  __int16 v10;
  int v11;
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  *(_DWORD *)(a1 + 60) = 0;
  *(_DWORD *)(a1 + 64) = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 24) = 0;
  __src[0] = 10;
  v6 = 60;
  v7 = 4;
  v8 = 120;
  v9 = 16;
  v10 = 180;
  v11 = 45;
  v5 = 0;
  std::vector<maps::path_codec::CostFunction::AngleCost>::__assign_with_size[abi:ne180100]<maps::path_codec::CostFunction::AngleCost const*,maps::path_codec::CostFunction::AngleCost const*>((char *)a1, (char *)__src, (uint64_t)&v12, 4uLL);
  *(_BYTE *)(a1 + 24) = 0;
  *(_QWORD *)&result = 0x190000001CLL;
  *(_OWORD *)(a1 + 28) = xmmword_189CC0594;
  *(_OWORD *)(a1 + 44) = unk_189CC05A4;
  *(_DWORD *)(a1 + 60) = 0;
  *(_DWORD *)(a1 + 64) = 0;
  return result;
}

void sub_1888C81E4(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

uint64_t maps::path_codec::KHeap<unsigned int,2u,std::less<unsigned int>>::KHeap(uint64_t a1, int a2)
{
  *(_DWORD *)(a1 + 48) = 0;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  std::vector<int>::reserve((std::vector<unsigned int> *)(a1 + 24), (a2 + 1));
  std::vector<google::protobuf::FieldDescriptor const*>::reserve((void **)a1, 0x7FuLL);
  return a1;
}

void sub_1888C824C(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void **v2;
  void **v3;
  void *v5;
  void *v6;

  v3 = v2;
  v5 = *v3;
  if (*v3)
  {
    *(_QWORD *)(v1 + 32) = v5;
    operator delete(v5);
  }
  v6 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v6;
    operator delete(v6);
  }
  _Unwind_Resume(exception_object);
}

char *std::vector<maps::path_codec::CostFunction::AngleCost>::__assign_with_size[abi:ne180100]<maps::path_codec::CostFunction::AngleCost const*,maps::path_codec::CostFunction::AngleCost const*>(char *result, char *__src, uint64_t a3, unint64_t a4)
{
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  void **v12;
  char *v13;
  _BYTE *v14;
  unint64_t v15;
  char *v16;
  size_t v17;
  void *v18;
  char *v19;

  v7 = result;
  v8 = *((_QWORD *)result + 2);
  v9 = *(char **)result;
  if (a4 > (v8 - *(_QWORD *)result) >> 3)
  {
    if (v9)
    {
      *((_QWORD *)result + 1) = v9;
      operator delete(v9);
      v8 = 0;
      *v7 = 0;
      v7[1] = 0;
      v7[2] = 0;
    }
    if (a4 >> 61)
      std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
    v10 = v8 >> 2;
    if (v8 >> 2 <= a4)
      v10 = a4;
    if ((unint64_t)v8 >= 0x7FFFFFFFFFFFFFF8)
      v11 = 0x1FFFFFFFFFFFFFFFLL;
    else
      v11 = v10;
    result = std::vector<unsigned long long>::__vallocate[abi:ne180100](v7, v11);
    v13 = (char *)v7[1];
    v12 = (void **)(v7 + 1);
    v9 = v13;
LABEL_16:
    v17 = a3 - (_QWORD)__src;
    if (v17)
    {
      v18 = v9;
      v19 = __src;
      goto LABEL_18;
    }
    goto LABEL_19;
  }
  v12 = (void **)(result + 8);
  v14 = (_BYTE *)*((_QWORD *)result + 1);
  v15 = (v14 - v9) >> 3;
  if (v15 >= a4)
    goto LABEL_16;
  v16 = &__src[8 * v15];
  if (v14 != v9)
  {
    result = (char *)memmove(*(void **)result, __src, v14 - v9);
    v9 = (char *)*v12;
  }
  v17 = a3 - (_QWORD)v16;
  if (v17)
  {
    v18 = v9;
    v19 = v16;
LABEL_18:
    result = (char *)memmove(v18, v19, v17);
  }
LABEL_19:
  *v12 = &v9[v17];
  return result;
}

uint64_t maps::path_codec::CostFunction::get_turn_cost(uint64_t *a1, unsigned __int16 a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned int v5;
  uint64_t v7;

  v2 = *a1;
  v3 = a1[1];
  if (*a1 == v3)
    return 0;
  v4 = 0;
  while (1)
  {
    v5 = *(unsigned __int16 *)(v2 + v4);
    if (v5 >= a2)
      break;
    v4 += 8;
    if (v2 + v4 == v3)
      return *(unsigned int *)(v3 - 4);
  }
  if (v2 + v4 == v3)
    return *(unsigned int *)(v3 - 4);
  if (!v4 || !*((_BYTE *)a1 + 24))
    return *(unsigned int *)(v2 + v4 + 4);
  v7 = v2 + v4;
  return *(_DWORD *)(v7 - 4)
       + vcvtad_u64_f64((double)(a2 - *(unsigned __int16 *)(v7 - 8))/ (double)(int)(v5 - *(unsigned __int16 *)(v7 - 8))* (double)(*(_DWORD *)(v7 + 4) - *(_DWORD *)(v7 - 4)));
}

double maps::path_codec::KHeap<unsigned int,2u,std::less<unsigned int>>::change_priority(uint64_t *a1, unsigned int a2, unsigned int *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int *v11;
  unsigned int v12;
  unsigned int v13;
  uint64_t v14;
  unsigned int *v15;
  unsigned int v16;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  unsigned int v21;
  unsigned int v22;
  int v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int v27;
  uint64_t v28;
  unsigned int *v29;
  unsigned int v30;
  unsigned int v31;
  unsigned int v32;
  double *v33;
  double result;
  uint64_t v35;
  int v36;

  v3 = a1[3];
  v4 = *(unsigned int *)(v3 + 4 * a2);
  v5 = *a1;
  v6 = *a1 + 8 * v4;
  v7 = *(_DWORD *)(v6 + 4);
  *(_DWORD *)(v6 + 4) = *a3;
  if (*a3 >= v7)
  {
    v21 = (4 * v4) | 1;
    v22 = *((_DWORD *)a1 + 12);
    if (v21 < v22)
    {
      v23 = 4 * v4;
      do
      {
        v24 = v23 + 5;
        if (v24 >= v22)
          v25 = v22;
        else
          v25 = v24;
        if (v21 >= v25)
          break;
        v26 = v4;
        v27 = *(_DWORD *)(v5 + 8 * v4 + 4);
        v28 = v21;
        v29 = (unsigned int *)(v5 + 4 + 8 * v21);
        LODWORD(v4) = -1;
        v30 = v27;
        do
        {
          v32 = *v29;
          v29 += 2;
          v31 = v32;
          if (v32 < v30)
          {
            v30 = v31;
            LODWORD(v4) = v28;
          }
          ++v28;
        }
        while (v25 != v28);
        if (v4 >= v22)
          break;
        v33 = (double *)(v5 + 8 * v4);
        result = *v33;
        *(_DWORD *)v33 = *(_DWORD *)(v5 + 8 * v26);
        *((_DWORD *)v33 + 1) = v27;
        *(double *)(v5 + 8 * v26) = result;
        v35 = *(unsigned int *)v33;
        v36 = *(_DWORD *)(v3 + 4 * v35);
        *(_DWORD *)(v3 + 4 * v35) = *(_DWORD *)(v3 + 4 * LODWORD(result));
        *(_DWORD *)(v3 + 4 * LODWORD(result)) = v36;
        v23 = 4 * v4;
        v21 = (4 * v4) | 1;
        v22 = *((_DWORD *)a1 + 12);
      }
      while (v21 < v22);
    }
  }
  else if ((_DWORD)v4)
  {
    do
    {
      v8 = v4 - 1;
      v9 = (v4 - 1) >> 2;
      v10 = v5 + 8 * v9;
      v13 = *(_DWORD *)(v10 + 4);
      v11 = (unsigned int *)(v10 + 4);
      v12 = v13;
      v14 = v5 + 8 * v4;
      v17 = *(_DWORD *)(v14 + 4);
      v15 = (unsigned int *)(v14 + 4);
      v16 = v17;
      if (v12 < v17)
        break;
      v18 = 8 * v4;
      v19 = *(unsigned int *)(v5 + v18);
      *(_DWORD *)(v5 + v18) = *(_DWORD *)(v5 + 8 * v9);
      *(_DWORD *)(v5 + 8 * v9) = v19;
      *v15 = v12;
      *v11 = v16;
      v4 = *(unsigned int *)(v5 + v18);
      v20 = *(_DWORD *)(v3 + 4 * v4);
      *(_DWORD *)(v3 + 4 * v4) = *(_DWORD *)(v3 + 4 * v19);
      *(_DWORD *)(v3 + 4 * v19) = v20;
      LODWORD(v4) = v8 >> 2;
    }
    while (v8 >= 4);
  }
  return result;
}

void maps::path_codec::KHeap<unsigned int,2u,std::less<unsigned int>>::insert(unint64_t **a1, unsigned int a2, unsigned int *a3)
{
  unint64_t v5;
  std::vector<unsigned int> *v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char *v16;
  unint64_t *v17;
  char *v18;
  char *v19;
  char *v20;
  unint64_t v21;
  char *v22;
  unsigned int v23;
  unint64_t *v24;
  unsigned int v25;
  uint64_t v26;
  char *v27;
  unsigned int *v28;
  unsigned int v29;
  unsigned int v30;
  char *v31;
  unsigned int *v32;
  unsigned int v33;
  unsigned int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;

  v5 = a2;
  v6 = (std::vector<unsigned int> *)(a1 + 3);
  v7 = (char *)a1[4] - (char *)a1[3];
  if (a2 >= (unint64_t)(v7 >> 2))
  {
    do
    {
      std::vector<unsigned int>::resize(v6, (v7 >> 1) | 1, &maps::path_codec::KHeap<unsigned int,2u,std::less<unsigned int>>::NOTINHEAP);
      v7 = (char *)a1[4] - (char *)a1[3];
    }
    while (v5 >= v7 >> 2);
  }
  v8 = v5 | ((unint64_t)*a3 << 32);
  v9 = (unint64_t)a1[2];
  v10 = a1[1];
  if ((unint64_t)v10 >= v9)
  {
    v12 = v10 - *a1;
    if ((unint64_t)(v12 + 1) >> 61)
      std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
    v13 = v9 - (_QWORD)*a1;
    v14 = v13 >> 2;
    if (v13 >> 2 <= (unint64_t)(v12 + 1))
      v14 = v12 + 1;
    if ((unint64_t)v13 >= 0x7FFFFFFFFFFFFFF8)
      v15 = 0x1FFFFFFFFFFFFFFFLL;
    else
      v15 = v14;
    if (v15)
      v16 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<zilch::StringList::Entry>>((uint64_t)(a1 + 2), v15);
    else
      v16 = 0;
    v17 = (unint64_t *)&v16[8 * v12];
    v18 = &v16[8 * v15];
    *v17 = v8;
    v11 = (char *)(v17 + 1);
    v20 = (char *)*a1;
    v19 = (char *)a1[1];
    if (v19 != (char *)*a1)
    {
      do
      {
        v21 = *((_QWORD *)v19 - 1);
        v19 -= 8;
        *--v17 = v21;
      }
      while (v19 != v20);
      v19 = (char *)*a1;
    }
    *a1 = v17;
    a1[1] = (unint64_t *)v11;
    a1[2] = (unint64_t *)v18;
    if (v19)
      operator delete(v19);
  }
  else
  {
    *v10 = v8;
    v11 = (char *)(v10 + 1);
  }
  a1[1] = (unint64_t *)v11;
  v22 = (char *)a1[3];
  *(_DWORD *)&v22[4 * v5] = *((_DWORD *)a1 + 12);
  v23 = *((_DWORD *)a1 + 12);
  *((_DWORD *)a1 + 12) = v23 + 1;
  if (v23)
  {
    v24 = *a1;
    do
    {
      v25 = v23 - 1;
      v26 = (v23 - 1) >> 2;
      v27 = (char *)&v24[v26];
      v30 = *((_DWORD *)v27 + 1);
      v28 = (unsigned int *)(v27 + 4);
      v29 = v30;
      v31 = (char *)&v24[v23];
      v34 = *((_DWORD *)v31 + 1);
      v32 = (unsigned int *)(v31 + 4);
      v33 = v34;
      if (v29 < v34)
        break;
      v35 = v23;
      v36 = LODWORD(v24[v35]);
      LODWORD(v24[v35]) = v24[v26];
      LODWORD(v24[v26]) = v36;
      *v32 = v29;
      *v28 = v33;
      v37 = LODWORD(v24[v35]);
      v38 = *(_DWORD *)&v22[4 * v37];
      *(_DWORD *)&v22[4 * v37] = *(_DWORD *)&v22[4 * v36];
      *(_DWORD *)&v22[4 * v36] = v38;
      v23 = v25 >> 2;
    }
    while (v25 > 3);
  }
}

void std::vector<unsigned int>::resize(std::vector<unsigned int> *this, std::vector<unsigned int>::size_type __sz, std::vector<unsigned int>::const_reference __x)
{
  std::vector<unsigned int>::size_type v3;

  v3 = this->__end_ - this->__begin_;
  if (__sz <= v3)
  {
    if (__sz < v3)
      this->__end_ = &this->__begin_[__sz];
  }
  else
  {
    std::vector<unsigned int>::__append(this, __sz - v3, __x);
  }
}

void std::vector<unsigned int>::__append(std::vector<unsigned int> *this, std::vector<unsigned int>::size_type __n, std::vector<unsigned int>::const_reference __x)
{
  std::__compressed_pair<unsigned int *> *p_end_cap;
  unsigned int *v7;
  unsigned int *value;
  unsigned int *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char *v15;
  std::vector<unsigned int>::size_type v16;
  unsigned int *v17;
  unsigned int *v18;
  unsigned int *v19;
  std::vector<unsigned int>::size_type v20;
  unsigned int *v21;
  unsigned int *v22;
  std::vector<unsigned int>::pointer begin;
  std::vector<unsigned int>::pointer i;
  unsigned int v25;

  value = this->__end_cap_.__value_;
  p_end_cap = &this->__end_cap_;
  v7 = value;
  v9 = p_end_cap[-1].__value_;
  if (__n <= value - v9)
  {
    if (__n)
    {
      v16 = 4 * __n;
      v17 = &v9[__n];
      do
      {
        *v9++ = *__x;
        v16 -= 4;
      }
      while (v16);
      v9 = v17;
    }
    this->__end_ = v9;
  }
  else
  {
    v10 = (char *)v9 - (char *)this->__begin_;
    v11 = __n + (v10 >> 2);
    if (v11 >> 62)
      std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
    v12 = v10 >> 2;
    v13 = (char *)v7 - (char *)this->__begin_;
    if (v13 >> 1 > v11)
      v11 = v13 >> 1;
    if ((unint64_t)v13 >= 0x7FFFFFFFFFFFFFFCLL)
      v14 = 0x3FFFFFFFFFFFFFFFLL;
    else
      v14 = v11;
    if (v14)
      v15 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<unsigned int>>((uint64_t)p_end_cap, v14);
    else
      v15 = 0;
    v18 = (unsigned int *)&v15[4 * v12];
    v19 = &v18[__n];
    v20 = 4 * __n;
    v21 = v18;
    do
    {
      *v21++ = *__x;
      v20 -= 4;
    }
    while (v20);
    v22 = (unsigned int *)&v15[4 * v14];
    begin = this->__begin_;
    for (i = this->__end_; i != begin; --i)
    {
      v25 = *(i - 1);
      *--v18 = v25;
    }
    this->__begin_ = v18;
    this->__end_ = v19;
    this->__end_cap_.__value_ = v22;
    if (begin)
      operator delete(begin);
  }
}

double maps::path_codec::CostFunction::get_dfs_cost_function@<D0>(uint64_t a1@<X8>)
{
  double result;
  __int16 v4[2];
  int v5;
  __int16 v6;
  int v7;
  __int16 v8;
  int v9;
  uint64_t v10;

  v10 = *MEMORY[0x1E0C80C00];
  *(_DWORD *)(a1 + 60) = 0;
  *(_DWORD *)(a1 + 64) = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 24) = 0;
  v4[0] = 10;
  v6 = 20;
  v7 = 300;
  v8 = 120;
  v9 = 900;
  v5 = 0;
  std::vector<maps::path_codec::CostFunction::AngleCost>::__assign_with_size[abi:ne180100]<maps::path_codec::CostFunction::AngleCost const*,maps::path_codec::CostFunction::AngleCost const*>((char *)a1, (char *)v4, (uint64_t)&v10, 3uLL);
  *(_BYTE *)(a1 + 24) = 1;
  *(_QWORD *)&result = 0x190000001CLL;
  *(_OWORD *)(a1 + 28) = xmmword_189CC0594;
  *(_OWORD *)(a1 + 44) = unk_189CC05A4;
  *(_DWORD *)(a1 + 60) = 0;
  *(_DWORD *)(a1 + 64) = 0;
  return result;
}

void sub_1888C8930(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

_QWORD *std::vector<unsigned long>::vector(_QWORD *a1, unint64_t a2, _QWORD *a3)
{
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;

  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  if (a2)
  {
    std::vector<unsigned long long>::__vallocate[abi:ne180100](a1, a2);
    v6 = (_QWORD *)a1[1];
    v7 = &v6[a2];
    v8 = 8 * a2;
    do
    {
      *v6++ = *a3;
      v8 -= 8;
    }
    while (v8);
    a1[1] = v7;
  }
  return a1;
}

void sub_1888C89B0(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

void std::vector<maps::path_codec::RelativeSide>::__append(unint64_t *a1, unint64_t a2, _BYTE *a3)
{
  unint64_t v4;
  unint64_t v6;
  _BYTE *v7;
  unint64_t v8;
  _BYTE *v9;
  unint64_t v10;
  unint64_t v11;
  size_t v12;
  char *v13;
  _BYTE *v14;
  char *v15;
  char *v16;
  _BYTE *v17;
  char v18;

  v4 = a2;
  v7 = (_BYTE *)a1[1];
  v6 = a1[2];
  if (v6 - (unint64_t)v7 >= a2)
  {
    if (a2)
    {
      v14 = &v7[a2];
      do
      {
        *v7++ = *a3;
        --v4;
      }
      while (v4);
      v7 = v14;
    }
    a1[1] = (unint64_t)v7;
  }
  else
  {
    v8 = *a1;
    v9 = &v7[-*a1];
    v10 = (unint64_t)&v9[a2];
    if ((uint64_t)&v9[a2] < 0)
      std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
    v11 = v6 - v8;
    if (2 * v11 > v10)
      v10 = 2 * v11;
    if (v11 >= 0x3FFFFFFFFFFFFFFFLL)
      v12 = 0x7FFFFFFFFFFFFFFFLL;
    else
      v12 = v10;
    if (v12)
      v13 = (char *)operator new(v12);
    else
      v13 = 0;
    v15 = &v9[(_QWORD)v13];
    v16 = &v9[(_QWORD)v13 + v4];
    do
    {
      (v9++)[(_QWORD)v13] = *a3;
      --v4;
    }
    while (v4);
    if (v7 != (_BYTE *)v8)
    {
      v17 = &v7[~v8];
      do
      {
        v18 = *--v7;
        (v17--)[(_QWORD)v13] = v18;
      }
      while (v7 != (_BYTE *)v8);
      v15 = v13;
    }
    *a1 = (unint64_t)v15;
    a1[1] = (unint64_t)v16;
    a1[2] = (unint64_t)&v13[v12];
    if (v8)
      operator delete((void *)v8);
  }
}

void maps::path_codec::compress_inplace(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  _QWORD *v5;
  unsigned int v6;
  maps::path_codec::geo3::RiceEncodedIntegers *v7;
  uint64_t v8;
  google::protobuf::internal::ArenaImpl *v9;
  unint64_t v10;
  uint64_t **v11;
  unint64_t v12;
  int v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t *v17;
  double v18;
  int v19;
  int i;
  uint64_t *v21;
  uint64_t *v22;
  int v23;
  int v24;
  double v25;
  double v26;
  uint64_t v27;
  google::protobuf::internal::ArenaImpl *v28;
  uint64_t *v29;
  int v30;
  int v31;
  int v32;
  int j;
  uint64_t v34;
  uint64_t *v35;
  int v36;
  uint64_t *v37;
  int v38;
  int v39;
  uint64_t v40;
  unsigned int v41;
  unsigned int v42;
  _QWORD *v43;
  maps::path_codec::geo3::RiceEncodedIntegers *v44;
  uint64_t v45;
  google::protobuf::internal::ArenaImpl *v46;
  unsigned int v47;
  maps::path_codec::geo3::RiceEncodedIntegers *v48;
  uint64_t v49;
  google::protobuf::internal::ArenaImpl *v50;
  unint64_t v51;
  uint64_t **v52;
  unint64_t v53;
  int v54;
  unsigned int v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t *v58;
  uint64_t *v59;
  double v60;
  int v61;
  int k;
  uint64_t *v63;
  uint64_t *v64;
  int v65;
  int v66;
  double v67;
  double v68;
  uint64_t v69;
  google::protobuf::internal::ArenaImpl *v70;
  uint64_t *v71;
  int v72;
  int v73;
  int v74;
  int m;
  uint64_t v76;
  uint64_t *v77;
  int v78;
  uint64_t *v79;
  int v80;
  int v81;
  uint64_t v82;
  unsigned int v83;
  unsigned int v84;
  _QWORD *v85;
  uint64_t v86;
  maps::path_codec::geo3::RiceEncodedIntegers *v87;
  uint64_t v88;
  google::protobuf::internal::ArenaImpl *v89;
  maps::path_codec::geo3::RiceEncodedIntegers *v90;
  unsigned int v91;
  maps::path_codec::geo3::RiceEncodedIntegers *v92;
  uint64_t v93;
  google::protobuf::internal::ArenaImpl *v94;
  unint64_t v95;
  uint64_t **v96;
  unint64_t v97;
  int v98;
  unsigned int v99;
  uint64_t v100;
  uint64_t v101;
  double v102;
  int v103;
  int v104;
  int n;
  int v106;
  int v107;
  double v108;
  double v109;
  uint64_t v110;
  google::protobuf::internal::ArenaImpl *v111;
  uint64_t *v112;
  int v113;
  int ii;
  int v115;
  unsigned int v116;
  _QWORD *v117;
  maps::path_codec::geo3::RiceEncodedIntegers *v118;
  uint64_t v119;
  google::protobuf::internal::ArenaImpl *v120;
  int v121;
  maps::path_codec::geo3::SupportPointData *v122;
  google::protobuf::internal::ArenaImpl *v123;
  maps::path_codec::geo3::AnchorData *v124;
  google::protobuf::internal::ArenaImpl *v125;
  uint64_t v126;
  uint64_t *v127;
  BOOL v128;
  uint64_t v129;
  uint64_t *v130;
  uint64_t v131;
  uint64_t *v132;
  uint64_t v133;
  char *v134;
  _DWORD *v135;
  void *v136;
  unint64_t v137;
  char *v138;
  _DWORD *v139;
  char *v140;
  uint64_t v141;
  unint64_t v142;
  uint64_t v143;
  unint64_t v144;
  char *v145;
  _DWORD *v146;
  char *v147;
  uint64_t v148;
  unint64_t v149;
  uint64_t v150;
  unint64_t v151;
  char *v152;
  char *v153;
  uint64_t v154;
  unint64_t v155;
  uint64_t v156;
  unint64_t v157;
  char *v158;
  char *v159;
  int v160;
  char *v161;
  int v162;
  char *v163;
  int v164;
  unint64_t v165;
  _OWORD *v166;
  __int128 v167;
  unint64_t v168;
  unint64_t v169;
  unint64_t v170;
  std::string *v171;
  void *v172;
  std::__split_buffer<std::string>::pointer end;
  __int128 v174;
  _DWORD *v175;
  _DWORD *v176;
  const std::string *v177;
  const std::string *v178;
  int v179;
  uint64_t *v180;
  int *v181;
  int v182;
  int v183;
  std::string *AlignedAndAddCleanup;
  BOOL v185;
  int v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  int v193;
  uint64_t v194;
  int v195;
  uint64_t v196;
  int v197;
  uint64_t v198;
  uint64_t v199;
  int v200;
  int v201;
  uint64_t v202;
  int v203;
  int v204;
  unsigned int *v205;
  uint64_t v206;
  int v207;
  unsigned int v208;
  uint64_t v209;
  int v210;
  uint64_t v211;
  uint64_t v212;
  int v213;
  uint64_t v214;
  int v215;
  int v216;
  uint64_t v217;
  unsigned int v218;
  uint64_t v219;
  int v220;
  int *v221;
  int v222;
  int v223;
  maps::path_codec::geo3::UUID *v224;
  uint64_t v225;
  uint64_t v226;
  const maps::path_codec::geo3::UUID *v227;
  uint64_t v228;
  uint64_t v229;
  int v230;
  uint64_t v231;
  uint64_t v232;
  int v233;
  int v234;
  uint64_t v235;
  int v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  int v240;
  int v241;
  uint64_t v242;
  int v243;
  int v244;
  uint64_t v245;
  int v246;
  int v247;
  uint64_t v248;
  int v249;
  int v250;
  uint64_t v251;
  unsigned int v252;
  uint64_t v253;
  unsigned int v254;
  int v255;
  uint64_t v256;
  int v257;
  uint64_t v258;
  unsigned int v259;
  _DWORD *v260;
  uint64_t v261;
  uint64_t v262;
  int v263;
  int v264;
  uint64_t v265;
  int v266;
  uint64_t v267;
  int v268;
  int *v269;
  int v270;
  int v271;
  maps::path_codec::geo3::UUID *v272;
  uint64_t v273;
  uint64_t v274;
  const maps::path_codec::geo3::UUID *v275;
  uint64_t v276;
  uint64_t v277;
  google::protobuf::internal::ArenaImpl *v278;
  std::string *v279;
  uint64_t v280;
  google::protobuf::UnknownFieldSet **v281;
  uint64_t v282;
  google::protobuf::internal::RepeatedPtrFieldBase *v283;
  unsigned int *v284;
  unsigned int *v285;
  _DWORD *v286;
  int v287;
  _QWORD *v288;
  int v289;
  unsigned int *v291;
  unsigned int *v292;
  unsigned int *v293;
  unsigned int *v294;
  uint64_t v295;
  void *__p[2];
  __int128 v297;
  __int128 v298;
  void (**v299)(maps::path_codec::geo3::CompressedPath *__hidden);
  uint64_t v300;
  uint64_t v301;
  _QWORD *v302;
  maps::path_codec::geo3::SupportPointData *v303;
  maps::path_codec::geo3::AnchorData *v304;
  int v305;
  void *v306;
  char v307;
  uint64_t v308;
  std::__split_buffer<std::string> __v;

  if ((*(_BYTE *)(a2 + 16) & 1) != 0)
  {
    if (maps::path_codec::Logger::m_log_level <= 1u)
    {
      std::ostringstream::basic_ostringstream[abi:ne180100]((uint64_t)&v299);
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(&v299, (uint64_t)"The input path leg already has a compressed path populated. Skipping compression.", 81);
      std::string::basic_string[abi:ne180100]<0>(__p, "/Library/Caches/com.apple.xbs/Sources/GeoServices/libpathcodec/path-codec/src/path-codec/PathCompression.cpp");
      std::stringbuf::str();
      maps::path_codec::Logger::log_debug((uint64_t)__p, 43, (uint64_t)&__v);
      if (SHIBYTE(__v.__end_) < 0)
        operator delete(__v.__first_);
      if (SBYTE7(v297) < 0)
        operator delete(__p[0]);
      v299 = (void (**)(maps::path_codec::geo3::CompressedPath *__hidden))*MEMORY[0x1E0DE4F60];
      *(void (***)(maps::path_codec::geo3::CompressedPath *__hidden))((char *)&v299 + (_QWORD)*(v299 - 3)) = *(void (***)(maps::path_codec::geo3::CompressedPath *__hidden))(MEMORY[0x1E0DE4F60] + 24);
      v300 = MEMORY[0x1E0DE4FB8] + 16;
      if (v307 < 0)
        operator delete(v306);
      std::streambuf::~streambuf();
      std::ostream::~ostream();
      MEMORY[0x18D764310](&v308);
    }
    return;
  }
  v299 = &off_1E1BF6A98;
  v300 = 0;
  v301 = 0;
  if (atomic_load(scc_info_CompressedPath_compressed_5fpath_2eproto))
    google::protobuf::internal::InitSCCImpl(scc_info_CompressedPath_compressed_5fpath_2eproto);
  v302 = 0;
  v303 = 0;
  v304 = 0;
  v305 = *(_DWORD *)(a2 + 32);
  LODWORD(v301) = v301 | 9;
  v4 = google::protobuf::Arena::CreateMaybeMessage<maps::path_codec::geo3::CommonPointData>((google::protobuf::internal::ArenaImpl *)(v300 & 0xFFFFFFFFFFFFFFFELL));
  v5 = v4;
  v302 = v4;
  v6 = *(_DWORD *)(a2 + 32);
  v286 = v4 + 2;
  *((_DWORD *)v4 + 4) |= 1u;
  v7 = (maps::path_codec::geo3::RiceEncodedIntegers *)v4[3];
  if (!v7)
  {
    v8 = v4[1];
    v9 = (google::protobuf::internal::ArenaImpl *)(v8 & 0xFFFFFFFFFFFFFFFELL);
    if ((v8 & 1) != 0)
      v9 = *(google::protobuf::internal::ArenaImpl **)v9;
    v7 = google::protobuf::Arena::CreateMaybeMessage<maps::path_codec::geo3::RiceEncodedIntegers>(v9);
    v5[3] = v7;
  }
  v11 = (uint64_t **)((char *)v7 + 48);
  v10 = *((_QWORD *)v7 + 6);
  *((_DWORD *)v7 + 14) = 0;
  *((_DWORD *)v7 + 4) &= ~2u;
  if ((uint64_t *)v10 != &google::protobuf::internal::fixed_address_empty_string)
  {
    v12 = v10 & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v12 + 23) < 0)
    {
      **(_BYTE **)v12 = 0;
      *(_QWORD *)(v12 + 8) = 0;
    }
    else
    {
      *(_BYTE *)v12 = 0;
      *(_BYTE *)(v12 + 23) = 0;
    }
  }
  *((_DWORD *)v7 + 6) = 0;
  v13 = *((_DWORD *)v7 + 4);
  v292 = (unsigned int *)((char *)v7 + 24);
  v295 = a2;
  *((_DWORD *)v7 + 4) = v13 & 0xFFFFFFFE;
  v14 = v6 - 1;
  v15 = *(_QWORD *)(a2 + 40);
  v16 = *(uint64_t **)(*(_QWORD *)(v15 + 8) + 32);
  if (v16)
    v17 = *(uint64_t **)(*(_QWORD *)(v15 + 8) + 32);
  else
    v17 = &maps::path_codec::geo3::_LatLngE7_default_instance_;
  v18 = 0.0;
  if (v6 >= 2)
  {
    v19 = 0;
    for (i = 1; i != v6; ++i)
    {
      v21 = *(uint64_t **)(*(_QWORD *)(v15 + 8 * i + 8) + 32);
      if (v21)
        v22 = *(uint64_t **)(*(_QWORD *)(v15 + 8 * i + 8) + 32);
      else
        v22 = &maps::path_codec::geo3::_LatLngE7_default_instance_;
      v23 = *((_DWORD *)v22 + 6);
      if (!v16)
        v16 = &maps::path_codec::geo3::_LatLngE7_default_instance_;
      v24 = v23 - *((_DWORD *)v16 + 6);
      if (v24 < 0)
        v24 = -v24;
      v19 += v24;
      v16 = v21;
    }
    v18 = (double)v19;
  }
  v25 = (double)v14;
  v26 = log2(fmax(v18 / (double)v14 * *(double *)(a1 + 104), 2.0));
  *((_DWORD *)v7 + 4) = v13 & 0xFFFFFFFA | 4;
  *((_DWORD *)v7 + 15) = 2;
  *((_DWORD *)v7 + 14) = *((_DWORD *)v17 + 6);
  *((_DWORD *)v7 + 4) = v13 | 7;
  v27 = *((_QWORD *)v7 + 1);
  v28 = (google::protobuf::internal::ArenaImpl *)(v27 & 0xFFFFFFFFFFFFFFFELL);
  if ((v27 & 1) != 0)
    v28 = *(google::protobuf::internal::ArenaImpl **)v28;
  v29 = *v11;
  if (*v11 == &google::protobuf::internal::fixed_address_empty_string)
    v29 = google::protobuf::internal::ArenaStringPtr::MutableSlow<>((_QWORD *)v7 + 6, v28);
  __p[0] = v29;
  __p[1] = 0;
  maps::path_codec::BitStream::reserve((std::string **)__p, (unint64_t)((ceil(v26) + 2.0) * v25 * 0.125));
  v30 = vcvtad_u64_f64(v26);
  maps::path_codec::BitStream::write((maps::path_codec::BitStream *)__p, *(unsigned __int8 *)(a1 + 100), v30);
  v288 = v5;
  if (v6 >= 2)
  {
    v31 = 0;
    v32 = *((_DWORD *)v7 + 14) >> 31;
    for (j = 1; j != v6; ++j)
    {
      v34 = *(_QWORD *)(v295 + 40) + 8;
      v35 = *(uint64_t **)(*(_QWORD *)(v34 + 8 * j) + 32);
      if (!v35)
        v35 = &maps::path_codec::geo3::_LatLngE7_default_instance_;
      v36 = *((_DWORD *)v35 + 6);
      v37 = *(uint64_t **)(*(_QWORD *)(v34 + 8 * (j - 1)) + 32);
      if (!v37)
        v37 = &maps::path_codec::geo3::_LatLngE7_default_instance_;
      v38 = v36 - *((_DWORD *)v37 + 6);
      if ((v32 & 1) != v38 >> 31)
      {
        v39 = j - v31;
        v40 = *((unsigned int *)v7 + 6);
        if ((_DWORD)v40 == *((_DWORD *)v7 + 7))
        {
          v41 = v40 + 1;
          google::protobuf::RepeatedField<int>::Reserve(v292, v40 + 1);
          *(_DWORD *)(*((_QWORD *)v7 + 4) + 4 * v40) = v39;
        }
        else
        {
          *(_DWORD *)(*((_QWORD *)v7 + 4) + 4 * v40) = v39;
          v41 = v40 + 1;
        }
        *v292 = v41;
        LOBYTE(v32) = v32 ^ 1;
        v31 = j;
      }
      if (v38 >= 0)
        v42 = v38;
      else
        v42 = -v38;
      maps::path_codec::BitStream::write_rice((maps::path_codec::BitStream *)__p, v30, v42);
    }
  }
  v43 = __p[0];
  std::string::resize((std::string *)__p[0], (LODWORD(__p[1]) + 7) >> 3, 0);
  std::string::shrink_to_fit[abi:ne180100](v43);
  *((_DWORD *)v288 + 4) |= 1u;
  v44 = (maps::path_codec::geo3::RiceEncodedIntegers *)v288[3];
  if (!v44)
  {
    v45 = v288[1];
    v46 = (google::protobuf::internal::ArenaImpl *)(v45 & 0xFFFFFFFFFFFFFFFELL);
    if ((v45 & 1) != 0)
      v46 = *(google::protobuf::internal::ArenaImpl **)v46;
    v44 = google::protobuf::Arena::CreateMaybeMessage<maps::path_codec::geo3::RiceEncodedIntegers>(v46);
    v288[3] = v44;
  }
  *((_DWORD *)v44 + 15) = 0;
  *((_DWORD *)v44 + 4) &= ~4u;
  v47 = *(_DWORD *)(v295 + 32);
  *((_DWORD *)v288 + 4) |= 2u;
  v48 = (maps::path_codec::geo3::RiceEncodedIntegers *)v288[4];
  if (!v48)
  {
    v49 = v288[1];
    v50 = (google::protobuf::internal::ArenaImpl *)(v49 & 0xFFFFFFFFFFFFFFFELL);
    if ((v49 & 1) != 0)
      v50 = *(google::protobuf::internal::ArenaImpl **)v50;
    v48 = google::protobuf::Arena::CreateMaybeMessage<maps::path_codec::geo3::RiceEncodedIntegers>(v50);
    v288[4] = v48;
  }
  v52 = (uint64_t **)((char *)v48 + 48);
  v51 = *((_QWORD *)v48 + 6);
  *((_DWORD *)v48 + 14) = 0;
  *((_DWORD *)v48 + 4) &= ~2u;
  if ((uint64_t *)v51 != &google::protobuf::internal::fixed_address_empty_string)
  {
    v53 = v51 & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v53 + 23) < 0)
    {
      **(_BYTE **)v53 = 0;
      *(_QWORD *)(v53 + 8) = 0;
    }
    else
    {
      *(_BYTE *)v53 = 0;
      *(_BYTE *)(v53 + 23) = 0;
    }
  }
  *((_DWORD *)v48 + 6) = 0;
  v54 = *((_DWORD *)v48 + 4);
  v293 = (unsigned int *)((char *)v48 + 24);
  *((_DWORD *)v48 + 4) = v54 & 0xFFFFFFFE;
  v55 = v47 - 1;
  v56 = *(_QWORD *)(v295 + 40);
  v57 = *(_QWORD *)(v56 + 8);
  v58 = *(uint64_t **)(v57 + 32);
  if (v58)
    v59 = *(uint64_t **)(v57 + 32);
  else
    v59 = &maps::path_codec::geo3::_LatLngE7_default_instance_;
  v60 = 0.0;
  if (v47 >= 2)
  {
    v61 = 0;
    for (k = 1; k != v47; ++k)
    {
      v63 = *(uint64_t **)(*(_QWORD *)(v56 + 8 * k + 8) + 32);
      if (v63)
        v64 = *(uint64_t **)(*(_QWORD *)(v56 + 8 * k + 8) + 32);
      else
        v64 = &maps::path_codec::geo3::_LatLngE7_default_instance_;
      v65 = *((_DWORD *)v64 + 7);
      if (!v58)
        v58 = &maps::path_codec::geo3::_LatLngE7_default_instance_;
      v66 = v65 - *((_DWORD *)v58 + 7);
      if (v66 < 0)
        v66 = -v66;
      v61 += v66;
      v58 = v63;
    }
    v60 = (double)v61;
  }
  v67 = (double)v55;
  v68 = log2(fmax(v60 / (double)v55 * *(double *)(a1 + 104), 2.0));
  *((_DWORD *)v48 + 4) = v54 & 0xFFFFFFFA | 4;
  *((_DWORD *)v48 + 15) = 2;
  *((_DWORD *)v48 + 14) = *((_DWORD *)v59 + 7);
  *((_DWORD *)v48 + 4) = v54 | 7;
  v69 = *((_QWORD *)v48 + 1);
  v70 = (google::protobuf::internal::ArenaImpl *)(v69 & 0xFFFFFFFFFFFFFFFELL);
  if ((v69 & 1) != 0)
    v70 = *(google::protobuf::internal::ArenaImpl **)v70;
  v71 = *v52;
  if (*v52 == &google::protobuf::internal::fixed_address_empty_string)
    v71 = google::protobuf::internal::ArenaStringPtr::MutableSlow<>((_QWORD *)v48 + 6, v70);
  __p[0] = v71;
  __p[1] = 0;
  maps::path_codec::BitStream::reserve((std::string **)__p, (unint64_t)((ceil(v68) + 2.0) * v67 * 0.125));
  v72 = vcvtad_u64_f64(v68);
  maps::path_codec::BitStream::write((maps::path_codec::BitStream *)__p, *(unsigned __int8 *)(a1 + 100), v72);
  if (v47 >= 2)
  {
    v73 = 0;
    v74 = *((_DWORD *)v48 + 14) >> 31;
    for (m = 1; m != v47; ++m)
    {
      v76 = *(_QWORD *)(v295 + 40) + 8;
      v77 = *(uint64_t **)(*(_QWORD *)(v76 + 8 * m) + 32);
      if (!v77)
        v77 = &maps::path_codec::geo3::_LatLngE7_default_instance_;
      v78 = *((_DWORD *)v77 + 7);
      v79 = *(uint64_t **)(*(_QWORD *)(v76 + 8 * (m - 1)) + 32);
      if (!v79)
        v79 = &maps::path_codec::geo3::_LatLngE7_default_instance_;
      v80 = v78 - *((_DWORD *)v79 + 7);
      if ((v74 & 1) != v80 >> 31)
      {
        v81 = m - v73;
        v82 = *((unsigned int *)v48 + 6);
        if ((_DWORD)v82 == *((_DWORD *)v48 + 7))
        {
          v83 = v82 + 1;
          google::protobuf::RepeatedField<int>::Reserve(v293, v82 + 1);
          *(_DWORD *)(*((_QWORD *)v48 + 4) + 4 * v82) = v81;
        }
        else
        {
          *(_DWORD *)(*((_QWORD *)v48 + 4) + 4 * v82) = v81;
          v83 = v82 + 1;
        }
        *v293 = v83;
        LOBYTE(v74) = v74 ^ 1;
        v73 = m;
      }
      if (v80 >= 0)
        v84 = v80;
      else
        v84 = -v80;
      maps::path_codec::BitStream::write_rice((maps::path_codec::BitStream *)__p, v72, v84);
    }
  }
  v85 = __p[0];
  std::string::resize((std::string *)__p[0], (LODWORD(__p[1]) + 7) >> 3, 0);
  v86 = v295;
  std::string::shrink_to_fit[abi:ne180100](v85);
  *((_DWORD *)v288 + 4) |= 2u;
  v87 = (maps::path_codec::geo3::RiceEncodedIntegers *)v288[4];
  if (!v87)
  {
    v88 = v288[1];
    v89 = (google::protobuf::internal::ArenaImpl *)(v88 & 0xFFFFFFFFFFFFFFFELL);
    if ((v88 & 1) != 0)
      v89 = *(google::protobuf::internal::ArenaImpl **)v89;
    v87 = google::protobuf::Arena::CreateMaybeMessage<maps::path_codec::geo3::RiceEncodedIntegers>(v89);
    v288[4] = v87;
  }
  *((_DWORD *)v87 + 15) = 0;
  *((_DWORD *)v87 + 4) &= ~4u;
  if ((*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v295 + 40) + 8) + 16) & 0x10) != 0)
  {
    v91 = *(_DWORD *)(v295 + 32);
    *((_DWORD *)v288 + 4) |= 4u;
    v92 = (maps::path_codec::geo3::RiceEncodedIntegers *)v288[5];
    if (!v92)
    {
      v93 = v288[1];
      v94 = (google::protobuf::internal::ArenaImpl *)(v93 & 0xFFFFFFFFFFFFFFFELL);
      if ((v93 & 1) != 0)
        v94 = *(google::protobuf::internal::ArenaImpl **)v94;
      v92 = google::protobuf::Arena::CreateMaybeMessage<maps::path_codec::geo3::RiceEncodedIntegers>(v94);
      v288[5] = v92;
    }
    v96 = (uint64_t **)((char *)v92 + 48);
    v95 = *((_QWORD *)v92 + 6);
    *((_DWORD *)v92 + 14) = 0;
    *((_DWORD *)v92 + 4) &= ~2u;
    if ((uint64_t *)v95 != &google::protobuf::internal::fixed_address_empty_string)
    {
      v97 = v95 & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v97 + 23) < 0)
      {
        **(_BYTE **)v97 = 0;
        *(_QWORD *)(v97 + 8) = 0;
      }
      else
      {
        *(_BYTE *)v97 = 0;
        *(_BYTE *)(v97 + 23) = 0;
      }
    }
    v98 = *((_DWORD *)v92 + 4);
    *((_DWORD *)v92 + 4) = v98 & 0xFFFFFFFE;
    *((_DWORD *)v92 + 6) = 0;
    v99 = v91 - 1;
    v100 = *(_QWORD *)(v295 + 40);
    v101 = *(_QWORD *)(v100 + 8);
    v102 = 0.0;
    if (v91 >= 2)
    {
      v103 = 0;
      v104 = *(_DWORD *)(v101 + 56);
      for (n = 1; n != v91; ++n)
      {
        v106 = *(_DWORD *)(*(_QWORD *)(v100 + 8 * n + 8) + 56);
        v107 = v106 - v104;
        if (v107 < 0)
          v107 = -v107;
        v103 += v107;
        v104 = v106;
      }
      v102 = (double)v103;
    }
    v108 = (double)v99;
    v109 = log2(fmax(v102 / (double)v99 * *(double *)(a1 + 104), 2.0));
    *((_DWORD *)v92 + 4) = v98 & 0xFFFFFFFA | 4;
    *((_DWORD *)v92 + 15) = 1;
    *((_DWORD *)v92 + 14) = *(_DWORD *)(v101 + 56);
    *((_DWORD *)v92 + 4) = v98 | 7;
    v110 = *((_QWORD *)v92 + 1);
    v111 = (google::protobuf::internal::ArenaImpl *)(v110 & 0xFFFFFFFFFFFFFFFELL);
    if ((v110 & 1) != 0)
      v111 = *(google::protobuf::internal::ArenaImpl **)v111;
    v112 = *v96;
    v86 = v295;
    if (*v96 == &google::protobuf::internal::fixed_address_empty_string)
      v112 = google::protobuf::internal::ArenaStringPtr::MutableSlow<>((_QWORD *)v92 + 6, v111);
    __p[0] = v112;
    __p[1] = 0;
    maps::path_codec::BitStream::reserve((std::string **)__p, (unint64_t)((ceil(v109) + 2.0 + 1.0) * v108 * 0.125));
    v113 = vcvtad_u64_f64(v109);
    maps::path_codec::BitStream::write((maps::path_codec::BitStream *)__p, *(unsigned __int8 *)(a1 + 100), v113);
    if (v91 >= 2)
    {
      for (ii = 1; ii != v91; ++ii)
      {
        v115 = *(_DWORD *)(*(_QWORD *)(*(_QWORD *)(v295 + 40) + 8 + 8 * ii) + 56)
             - *(_DWORD *)(*(_QWORD *)(*(_QWORD *)(v295 + 40) + 8 + 8 * (ii - 1)) + 56);
        maps::path_codec::BitStream::write((maps::path_codec::BitStream *)__p, 1u, v115 >> 31);
        if (v115 >= 0)
          v116 = v115;
        else
          v116 = -v115;
        maps::path_codec::BitStream::write_rice((maps::path_codec::BitStream *)__p, v113, v116);
      }
    }
    v117 = __p[0];
    std::string::resize((std::string *)__p[0], (LODWORD(__p[1]) + 7) >> 3, 0);
    std::string::shrink_to_fit[abi:ne180100](v117);
    *((_DWORD *)v288 + 4) |= 4u;
    v118 = (maps::path_codec::geo3::RiceEncodedIntegers *)v288[5];
    if (!v118)
    {
      v119 = v288[1];
      v120 = (google::protobuf::internal::ArenaImpl *)(v119 & 0xFFFFFFFFFFFFFFFELL);
      if ((v119 & 1) != 0)
        v120 = *(google::protobuf::internal::ArenaImpl **)v120;
      v118 = google::protobuf::Arena::CreateMaybeMessage<maps::path_codec::geo3::RiceEncodedIntegers>(v120);
      v288[5] = v118;
    }
    *((_DWORD *)v118 + 15) = 0;
    v286 = (_DWORD *)((char *)v118 + 16);
  }
  else
  {
    v90 = (maps::path_codec::geo3::RiceEncodedIntegers *)v288[5];
    if (v90)
      maps::path_codec::geo3::RiceEncodedIntegers::Clear(v90);
  }
  *v286 &= ~4u;
  v121 = v301 | 2;
  LODWORD(v301) = v301 | 2;
  v122 = v303;
  if (!v303)
  {
    v123 = (google::protobuf::internal::ArenaImpl *)(v300 & 0xFFFFFFFFFFFFFFFELL);
    if ((v300 & 1) != 0)
      v123 = *(google::protobuf::internal::ArenaImpl **)v123;
    v122 = google::protobuf::Arena::CreateMaybeMessage<maps::path_codec::geo3::SupportPointData>(v123);
    v303 = v122;
    v121 = v301;
  }
  LODWORD(v301) = v121 | 4;
  v124 = v304;
  if (!v304)
  {
    v125 = (google::protobuf::internal::ArenaImpl *)(v300 & 0xFFFFFFFFFFFFFFFELL);
    if ((v300 & 1) != 0)
      v125 = *(google::protobuf::internal::ArenaImpl **)v125;
    v124 = google::protobuf::Arena::CreateMaybeMessage<maps::path_codec::geo3::AnchorData>(v125);
    v304 = v124;
  }
  v297 = 0u;
  v298 = 0u;
  *(_OWORD *)__p = 0u;
  v126 = *(_QWORD *)(v86 + 40);
  v127 = (uint64_t *)(v126 + 8);
  v128 = v126 == 0;
  v129 = v86;
  if (v128)
    v130 = 0;
  else
    v130 = v127;
  v131 = *(int *)(v129 + 32);
  if ((_DWORD)v131)
  {
    v132 = &v130[v131];
    do
    {
      v133 = *v130;
      if (*(_DWORD *)(*v130 + 84) == 1)
      {
        if ((*(_BYTE *)(v133 + 16) & 1) != 0)
        {
          v136 = (void *)std::__find_impl[abi:ne180100]<std::string *,std::string *,std::string,std::__identity>((uint64_t)__p[0], (uint64_t)__p[1], (unsigned __int8 **)(*(_QWORD *)(v133 + 24) & 0xFFFFFFFFFFFFFFFELL));
          v137 = 0xAAAAAAAAAAAAAAABLL * ((int64_t)((uint64_t)v136 - (unint64_t)__p[0]) >> 3);
          v138 = (char *)v298;
          if (v136 == __p[1])
          {
            if ((unint64_t)v298 >= *((_QWORD *)&v298 + 1))
            {
              v153 = (char *)*((_QWORD *)&v297 + 1);
              v154 = (uint64_t)(v298 - *((_QWORD *)&v297 + 1)) >> 2;
              v155 = v154 + 1;
              if ((unint64_t)(v154 + 1) >> 62)
LABEL_370:
                std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
              v156 = *((_QWORD *)&v298 + 1) - *((_QWORD *)&v297 + 1);
              if ((uint64_t)(*((_QWORD *)&v298 + 1) - *((_QWORD *)&v297 + 1)) >> 1 > v155)
                v155 = v156 >> 1;
              if ((unint64_t)v156 >= 0x7FFFFFFFFFFFFFFCLL)
                v157 = 0x3FFFFFFFFFFFFFFFLL;
              else
                v157 = v155;
              if (v157)
              {
                v158 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<unsigned int>>((uint64_t)&v298 + 8, v157);
                v153 = (char *)*((_QWORD *)&v297 + 1);
                v138 = (char *)v298;
              }
              else
              {
                v158 = 0;
              }
              v163 = &v158[4 * v154];
              *(_DWORD *)v163 = v137;
              v146 = v163 + 4;
              while (v138 != v153)
              {
                v164 = *((_DWORD *)v138 - 1);
                v138 -= 4;
                *((_DWORD *)v163 - 1) = v164;
                v163 -= 4;
              }
              *((_QWORD *)&v297 + 1) = v163;
              *(_QWORD *)&v298 = v146;
              *((_QWORD *)&v298 + 1) = &v158[4 * v157];
              if (v153)
                operator delete(v153);
            }
            else
            {
              *(_DWORD *)v298 = v137;
              v146 = v138 + 4;
            }
            *(_QWORD *)&v298 = v146;
            v165 = *(_QWORD *)(v133 + 24) & 0xFFFFFFFFFFFFFFFELL;
            v166 = __p[1];
            if (__p[1] >= (void *)v297)
            {
              v168 = 0xAAAAAAAAAAAAAAABLL * (((char *)__p[1] - (char *)__p[0]) >> 3);
              v169 = v168 + 1;
              if (v168 + 1 > 0xAAAAAAAAAAAAAAALL)
                std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
              if (0x5555555555555556 * ((uint64_t)(v297 - (unint64_t)__p[0]) >> 3) > v169)
                v169 = 0x5555555555555556 * ((uint64_t)(v297 - (unint64_t)__p[0]) >> 3);
              if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v297 - (unint64_t)__p[0]) >> 3) >= 0x555555555555555)
                v170 = 0xAAAAAAAAAAAAAAALL;
              else
                v170 = v169;
              __v.__end_cap_.__value_ = (std::allocator<std::string> *)&v297;
              if (v170)
                v171 = (std::string *)std::__allocate_at_least[abi:ne180100]<std::allocator<zilch::TrafficDynamicTile::Flow>>((uint64_t)&v297, v170);
              else
                v171 = 0;
              end = v171 + v168;
              __v.__first_ = v171;
              __v.__begin_ = end;
              __v.__end_ = end;
              __v.__end_cap_.__value_ = &v171[v170];
              if (*(char *)(v165 + 23) < 0)
              {
                std::string::__init_copy_ctor_external(end, *(const std::string::value_type **)v165, *(_QWORD *)(v165 + 8));
                end = __v.__end_;
              }
              else
              {
                v174 = *(_OWORD *)v165;
                end->__r_.__value_.__r.__words[2] = *(_QWORD *)(v165 + 16);
                *(_OWORD *)&end->__r_.__value_.__l.__data_ = v174;
              }
              __v.__end_ = end + 1;
              std::vector<std::string>::__swap_out_circular_buffer((std::vector<std::string> *)__p, &__v);
              v172 = __p[1];
              std::__split_buffer<std::string>::~__split_buffer(&__v);
            }
            else
            {
              if (*(char *)(v165 + 23) < 0)
              {
                std::string::__init_copy_ctor_external((std::string *)__p[1], *(const std::string::value_type **)v165, *(_QWORD *)(v165 + 8));
              }
              else
              {
                v167 = *(_OWORD *)v165;
                *((_QWORD *)__p[1] + 2) = *(_QWORD *)(v165 + 16);
                *v166 = v167;
              }
              v172 = (char *)v166 + 24;
            }
            __p[1] = v172;
          }
          else
          {
            if ((unint64_t)v298 >= *((_QWORD *)&v298 + 1))
            {
              v147 = (char *)*((_QWORD *)&v297 + 1);
              v148 = (uint64_t)(v298 - *((_QWORD *)&v297 + 1)) >> 2;
              v149 = v148 + 1;
              if ((unint64_t)(v148 + 1) >> 62)
                goto LABEL_370;
              v150 = *((_QWORD *)&v298 + 1) - *((_QWORD *)&v297 + 1);
              if ((uint64_t)(*((_QWORD *)&v298 + 1) - *((_QWORD *)&v297 + 1)) >> 1 > v149)
                v149 = v150 >> 1;
              if ((unint64_t)v150 >= 0x7FFFFFFFFFFFFFFCLL)
                v151 = 0x3FFFFFFFFFFFFFFFLL;
              else
                v151 = v149;
              if (v151)
              {
                v152 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<unsigned int>>((uint64_t)&v298 + 8, v151);
                v147 = (char *)*((_QWORD *)&v297 + 1);
                v138 = (char *)v298;
              }
              else
              {
                v152 = 0;
              }
              v161 = &v152[4 * v148];
              *(_DWORD *)v161 = v137;
              v139 = v161 + 4;
              while (v138 != v147)
              {
                v162 = *((_DWORD *)v138 - 1);
                v138 -= 4;
                *((_DWORD *)v161 - 1) = v162;
                v161 -= 4;
              }
              *((_QWORD *)&v297 + 1) = v161;
              *(_QWORD *)&v298 = v139;
              *((_QWORD *)&v298 + 1) = &v152[4 * v151];
              if (v147)
                operator delete(v147);
            }
            else
            {
              *(_DWORD *)v298 = v137;
              v139 = v138 + 4;
            }
            *(_QWORD *)&v298 = v139;
          }
        }
        else
        {
          v134 = (char *)v298;
          if ((unint64_t)v298 >= *((_QWORD *)&v298 + 1))
          {
            v140 = (char *)*((_QWORD *)&v297 + 1);
            v141 = (uint64_t)(v298 - *((_QWORD *)&v297 + 1)) >> 2;
            v142 = v141 + 1;
            if ((unint64_t)(v141 + 1) >> 62)
              goto LABEL_370;
            v143 = *((_QWORD *)&v298 + 1) - *((_QWORD *)&v297 + 1);
            if ((uint64_t)(*((_QWORD *)&v298 + 1) - *((_QWORD *)&v297 + 1)) >> 1 > v142)
              v142 = v143 >> 1;
            if ((unint64_t)v143 >= 0x7FFFFFFFFFFFFFFCLL)
              v144 = 0x3FFFFFFFFFFFFFFFLL;
            else
              v144 = v142;
            if (v144)
            {
              v145 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<unsigned int>>((uint64_t)&v298 + 8, v144);
              v140 = (char *)*((_QWORD *)&v297 + 1);
              v134 = (char *)v298;
            }
            else
            {
              v145 = 0;
            }
            v159 = &v145[4 * v141];
            *(_DWORD *)v159 = -1;
            v135 = v159 + 4;
            while (v134 != v140)
            {
              v160 = *((_DWORD *)v134 - 1);
              v134 -= 4;
              *((_DWORD *)v159 - 1) = v160;
              v159 -= 4;
            }
            *((_QWORD *)&v297 + 1) = v159;
            *(_QWORD *)&v298 = v135;
            *((_QWORD *)&v298 + 1) = &v145[4 * v144];
            if (v140)
              operator delete(v140);
          }
          else
          {
            *(_DWORD *)v298 = -1;
            v135 = v134 + 4;
          }
          *(_QWORD *)&v298 = v135;
        }
      }
      ++v130;
    }
    while (v130 != v132);
    v175 = (_DWORD *)*((_QWORD *)&v297 + 1);
    v176 = (_DWORD *)v298;
    v177 = (const std::string *)__p[0];
    v178 = (const std::string *)__p[1];
    if (*((_QWORD *)&v297 + 1) != (_QWORD)v298)
    {
      v179 = -1431655765 * ((unint64_t)((char *)__p[1] - (char *)__p[0]) >> 3);
      do
      {
        if (*v175 == -1)
          *v175 = v179;
        ++v175;
      }
      while (v175 != v176);
      v177 = (const std::string *)__p[0];
    }
    if (v177 != v178)
    {
      v180 = (uint64_t *)((char *)v122 + 184);
      while (1)
      {
        v181 = (int *)*((_QWORD *)v122 + 25);
        if (!v181)
          break;
        v182 = *((_DWORD *)v122 + 48);
        v183 = *v181;
        if (v182 >= *v181)
        {
          if (v183 == *((_DWORD *)v122 + 49))
          {
LABEL_233:
            v185 = __OFSUB__(v183, v182);
            v186 = v183 - v182;
            if (v186 < 0 == v185)
            {
              google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((maps::path_codec::geo3::SupportPointData *)((char *)v122 + 184), v186 + 1);
              v181 = (int *)*((_QWORD *)v122 + 25);
            }
            v183 = *v181;
          }
          *v181 = v183 + 1;
          v187 = *v180;
          if (*v180)
          {
            if ((*(_BYTE *)(v187 + 24) & 1) != 0)
            AlignedAndAddCleanup = (std::string *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((google::protobuf::internal::ArenaImpl *)v187, 0x18uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<std::string>);
          }
          else
          {
            AlignedAndAddCleanup = (std::string *)operator new();
          }
          AlignedAndAddCleanup->__r_.__value_.__r.__words[0] = 0;
          AlignedAndAddCleanup->__r_.__value_.__l.__size_ = 0;
          AlignedAndAddCleanup->__r_.__value_.__r.__words[2] = 0;
          v188 = *((_QWORD *)v122 + 25);
          v189 = *((int *)v122 + 48);
          *((_DWORD *)v122 + 48) = v189 + 1;
          *(_QWORD *)(v188 + 8 * v189 + 8) = AlignedAndAddCleanup;
          goto LABEL_242;
        }
        *((_DWORD *)v122 + 48) = v182 + 1;
        AlignedAndAddCleanup = *(std::string **)&v181[2 * v182 + 2];
LABEL_242:
        std::string::operator=(AlignedAndAddCleanup, v177++);
        if (v177 == v178)
          goto LABEL_243;
      }
      v182 = *((_DWORD *)v122 + 48);
      v183 = *((_DWORD *)v122 + 49);
      goto LABEL_233;
    }
  }
LABEL_243:
  v190 = v295;
  v191 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v295 + 40) + 8) + 48);
  v192 = *((unsigned int *)v122 + 4);
  v282 = v191;
  if ((_DWORD)v192 == *((_DWORD *)v122 + 5))
  {
    v193 = v192 + 1;
    google::protobuf::RepeatedField<int>::Reserve((unsigned int *)v122 + 4, v192 + 1);
    *(_DWORD *)(*((_QWORD *)v122 + 3) + 4 * v192) = 0;
    v191 = v282;
  }
  else
  {
    *(_DWORD *)(*((_QWORD *)v122 + 3) + 4 * v192) = 0;
    v193 = v192 + 1;
  }
  v194 = *((unsigned int *)v122 + 10);
  *((_DWORD *)v122 + 4) = v193;
  if ((_DWORD)v194 == *((_DWORD *)v122 + 11))
  {
    v195 = v194 + 1;
    google::protobuf::RepeatedField<long long>::Reserve((unsigned int *)v122 + 10, v194 + 1);
    *(_QWORD *)(*((_QWORD *)v122 + 6) + 8 * v194) = v282;
  }
  else
  {
    *(_QWORD *)(*((_QWORD *)v122 + 6) + 8 * v194) = v191;
    v195 = v194 + 1;
  }
  v196 = *((unsigned int *)v122 + 34);
  *((_DWORD *)v122 + 10) = v195;
  if ((_DWORD)v196 == *((_DWORD *)v122 + 35))
  {
    v197 = v196 + 1;
    google::protobuf::RepeatedField<int>::Reserve((unsigned int *)v122 + 34, v196 + 1);
    *(_DWORD *)(*((_QWORD *)v122 + 18) + 4 * v196) = 0;
  }
  else
  {
    *(_DWORD *)(*((_QWORD *)v122 + 18) + 4 * v196) = 0;
    v197 = v196 + 1;
  }
  v198 = *((unsigned int *)v122 + 16);
  *((_DWORD *)v122 + 34) = v197;
  v199 = *(_QWORD *)(*(_QWORD *)(v295 + 40) + 8);
  v200 = *(_DWORD *)(v199 + 60);
  if ((_DWORD)v198 == *((_DWORD *)v122 + 17))
  {
    v201 = v198 + 1;
    google::protobuf::RepeatedField<int>::Reserve((unsigned int *)v122 + 16, v198 + 1);
    *(_DWORD *)(*((_QWORD *)v122 + 9) + 4 * v198) = v200;
    v199 = *(_QWORD *)(*(_QWORD *)(v295 + 40) + 8);
  }
  else
  {
    *(_DWORD *)(*((_QWORD *)v122 + 9) + 4 * v198) = v200;
    v201 = v198 + 1;
  }
  v202 = *((unsigned int *)v122 + 22);
  *((_DWORD *)v122 + 16) = v201;
  v203 = *(_DWORD *)(v199 + 64);
  if ((_DWORD)v202 == *((_DWORD *)v122 + 23))
  {
    v204 = v202 + 1;
    google::protobuf::RepeatedField<int>::Reserve((unsigned int *)v122 + 22, v202 + 1);
    *(_DWORD *)(*((_QWORD *)v122 + 12) + 4 * v202) = v203;
    v199 = *(_QWORD *)(*(_QWORD *)(v295 + 40) + 8);
  }
  else
  {
    *(_DWORD *)(*((_QWORD *)v122 + 12) + 4 * v202) = v203;
    v204 = v202 + 1;
  }
  v205 = (unsigned int *)((char *)v122 + 112);
  v206 = *((unsigned int *)v122 + 28);
  *((_DWORD *)v122 + 22) = v204;
  v207 = *(_DWORD *)(v199 + 68);
  if ((_DWORD)v206 == *((_DWORD *)v122 + 29))
  {
    v208 = v206 + 1;
    google::protobuf::RepeatedField<int>::Reserve(v205, v206 + 1);
    *(_DWORD *)(*((_QWORD *)v122 + 15) + 4 * v206) = v207;
    v199 = *(_QWORD *)(*(_QWORD *)(v295 + 40) + 8);
    v205 = (unsigned int *)((char *)v122 + 112);
  }
  else
  {
    *(_DWORD *)(*((_QWORD *)v122 + 15) + 4 * v206) = v207;
    v208 = v206 + 1;
  }
  *v205 = v208;
  v291 = v205;
  if (*(_BYTE *)(v199 + 76))
  {
    v209 = *((unsigned int *)v122 + 40);
    if ((_DWORD)v209 == *((_DWORD *)v122 + 41))
    {
      v210 = v209 + 1;
      google::protobuf::RepeatedField<int>::Reserve((unsigned int *)v122 + 40, v209 + 1);
      *(_DWORD *)(*((_QWORD *)v122 + 21) + 4 * v209) = 0;
      v199 = *(_QWORD *)(*(_QWORD *)(v295 + 40) + 8);
    }
    else
    {
      *(_DWORD *)(*((_QWORD *)v122 + 21) + 4 * v209) = 0;
      v210 = v209 + 1;
    }
    *((_DWORD *)v122 + 40) = v210;
  }
  v211 = *(unsigned int *)(v199 + 80);
  if ((_DWORD)v211)
  {
    v212 = *((unsigned int *)v122 + 58);
    if ((_DWORD)v212 == *((_DWORD *)v122 + 59))
    {
      v213 = v212 + 1;
      google::protobuf::RepeatedField<int>::Reserve((unsigned int *)v122 + 58, v212 + 1);
      *(_DWORD *)(*((_QWORD *)v122 + 30) + 4 * v212) = 0;
    }
    else
    {
      *(_DWORD *)(*((_QWORD *)v122 + 30) + 4 * v212) = 0;
      v213 = v212 + 1;
    }
    *((_DWORD *)v122 + 58) = v213;
    v214 = *((unsigned int *)v122 + 64);
    if ((_DWORD)v214 == *((_DWORD *)v122 + 65))
    {
      v215 = v214 + 1;
      google::protobuf::RepeatedField<int>::Reserve((unsigned int *)v122 + 64, v214 + 1);
      *(_DWORD *)(*((_QWORD *)v122 + 33) + 4 * v214) = v211;
    }
    else
    {
      *(_DWORD *)(*((_QWORD *)v122 + 33) + 4 * v214) = v211;
      v215 = v214 + 1;
    }
    *((_DWORD *)v122 + 64) = v215;
  }
  v216 = **((_DWORD **)&v297 + 1);
  v217 = *((unsigned int *)v122 + 52);
  v294 = (unsigned int *)((char *)v122 + 208);
  if ((_DWORD)v217 == *((_DWORD *)v122 + 53))
  {
    v218 = v217 + 1;
    google::protobuf::RepeatedField<int>::Reserve((unsigned int *)v122 + 52, v217 + 1);
    *(_DWORD *)(*((_QWORD *)v122 + 27) + 4 * v217) = v216;
  }
  else
  {
    *(_DWORD *)(*((_QWORD *)v122 + 27) + 4 * v217) = v216;
    v218 = v217 + 1;
  }
  *v294 = v218;
  if ((*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v295 + 40) + 8) + 16) & 4) != 0)
  {
    v219 = *((unsigned int *)v124 + 4);
    if ((_DWORD)v219 == *((_DWORD *)v124 + 5))
    {
      v220 = v219 + 1;
      google::protobuf::RepeatedField<int>::Reserve((unsigned int *)v124 + 4, v219 + 1);
      *(_DWORD *)(*((_QWORD *)v124 + 3) + 4 * v219) = 0;
    }
    else
    {
      *(_DWORD *)(*((_QWORD *)v124 + 3) + 4 * v219) = 0;
      v220 = v219 + 1;
    }
    *((_DWORD *)v124 + 4) = v220;
    v221 = (int *)*((_QWORD *)v124 + 7);
    if (v221)
    {
      v222 = *((_DWORD *)v124 + 12);
      v223 = *v221;
      if (v222 < *v221)
      {
        *((_DWORD *)v124 + 12) = v222 + 1;
        v224 = *(maps::path_codec::geo3::UUID **)&v221[2 * v222 + 2];
        goto LABEL_290;
      }
      if (v223 != *((_DWORD *)v124 + 13))
      {
LABEL_289:
        *v221 = v223 + 1;
        v224 = (maps::path_codec::geo3::UUID *)google::protobuf::Arena::CreateMaybeMessage<maps::path_codec::geo3::UUID>(*((google::protobuf::internal::ArenaImpl **)v124 + 5));
        v225 = *((_QWORD *)v124 + 7);
        v226 = *((int *)v124 + 12);
        *((_DWORD *)v124 + 12) = v226 + 1;
        *(_QWORD *)(v225 + 8 * v226 + 8) = v224;
LABEL_290:
        if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v295 + 40) + 8) + 40))
          v227 = *(const maps::path_codec::geo3::UUID **)(*(_QWORD *)(*(_QWORD *)(v295 + 40) + 8) + 40);
        else
          v227 = (const maps::path_codec::geo3::UUID *)&maps::path_codec::geo3::_UUID_default_instance_;
        if (v227 != v224)
        {
          maps::path_codec::geo3::UUID::Clear(v224);
          maps::path_codec::geo3::UUID::MergeFrom(v224, v227);
        }
        goto LABEL_295;
      }
    }
    else
    {
      v222 = *((_DWORD *)v124 + 12);
      v223 = *((_DWORD *)v124 + 13);
    }
    if (v222 <= v223)
    {
      google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((maps::path_codec::geo3::AnchorData *)((char *)v124 + 40), v223 - v222 + 1);
      v221 = (int *)*((_QWORD *)v124 + 7);
    }
    v223 = *v221;
    goto LABEL_289;
  }
LABEL_295:
  v228 = v282;
  if (*(int *)(v295 + 32) >= 2)
  {
    v229 = 0;
    v287 = 0;
    v289 = 0;
    v230 = 0;
    v284 = (unsigned int *)((char *)v122 + 256);
    v285 = (unsigned int *)((char *)v122 + 160);
    v283 = (maps::path_codec::geo3::AnchorData *)((char *)v124 + 40);
    do
    {
      v231 = *(_QWORD *)(v190 + 40);
      v232 = *(_QWORD *)(v231 + 8 * v229 + 16);
      if (*(_DWORD *)(v232 + 84) == 1)
      {
        v233 = v229 + 1;
        v234 = v229 + 1 - v230;
        v235 = *((unsigned int *)v122 + 4);
        if ((_DWORD)v235 == *((_DWORD *)v122 + 5))
        {
          v236 = v235 + 1;
          google::protobuf::RepeatedField<int>::Reserve((unsigned int *)v122 + 4, v235 + 1);
          *(_DWORD *)(*((_QWORD *)v122 + 3) + 4 * v235) = v234;
          v231 = *(_QWORD *)(v295 + 40);
          v232 = *(_QWORD *)(v231 + 8 * v229 + 16);
        }
        else
        {
          *(_DWORD *)(*((_QWORD *)v122 + 3) + 4 * v235) = v234;
          v236 = v235 + 1;
        }
        *((_DWORD *)v122 + 4) = v236;
        v238 = *(_QWORD *)(v232 + 48) - v228;
        v239 = *((unsigned int *)v122 + 10);
        if ((_DWORD)v239 == *((_DWORD *)v122 + 11))
        {
          v240 = v239 + 1;
          google::protobuf::RepeatedField<long long>::Reserve((unsigned int *)v122 + 10, v239 + 1);
          *(_QWORD *)(*((_QWORD *)v122 + 6) + 8 * v239) = v238;
          v231 = *(_QWORD *)(v295 + 40);
          v232 = *(_QWORD *)(v231 + 8 * v229 + 16);
        }
        else
        {
          *(_QWORD *)(*((_QWORD *)v122 + 6) + 8 * v239) = v238;
          v240 = v239 + 1;
        }
        *((_DWORD *)v122 + 10) = v240;
        v241 = *(_DWORD *)(v232 + 72) - *(_DWORD *)(*(_QWORD *)(v231 + 8 * v230 + 8) + 72);
        v242 = *((unsigned int *)v122 + 34);
        if ((_DWORD)v242 == *((_DWORD *)v122 + 35))
        {
          v243 = v242 + 1;
          google::protobuf::RepeatedField<int>::Reserve((unsigned int *)v122 + 34, v242 + 1);
          *(_DWORD *)(*((_QWORD *)v122 + 18) + 4 * v242) = v241;
          v232 = *(_QWORD *)(*(_QWORD *)(v295 + 40) + 8 * v229 + 16);
        }
        else
        {
          *(_DWORD *)(*((_QWORD *)v122 + 18) + 4 * v242) = v241;
          v243 = v242 + 1;
        }
        *((_DWORD *)v122 + 34) = v243;
        v244 = *(_DWORD *)(v232 + 60);
        v245 = *((unsigned int *)v122 + 16);
        if ((_DWORD)v245 == *((_DWORD *)v122 + 17))
        {
          v246 = v245 + 1;
          google::protobuf::RepeatedField<int>::Reserve((unsigned int *)v122 + 16, v245 + 1);
          *(_DWORD *)(*((_QWORD *)v122 + 9) + 4 * v245) = v244;
          v232 = *(_QWORD *)(*(_QWORD *)(v295 + 40) + 8 * v229 + 16);
        }
        else
        {
          *(_DWORD *)(*((_QWORD *)v122 + 9) + 4 * v245) = v244;
          v246 = v245 + 1;
        }
        *((_DWORD *)v122 + 16) = v246;
        v247 = *(_DWORD *)(v232 + 64);
        v248 = *((unsigned int *)v122 + 22);
        if ((_DWORD)v248 == *((_DWORD *)v122 + 23))
        {
          v249 = v248 + 1;
          google::protobuf::RepeatedField<int>::Reserve((unsigned int *)v122 + 22, v248 + 1);
          *(_DWORD *)(*((_QWORD *)v122 + 12) + 4 * v248) = v247;
          v232 = *(_QWORD *)(*(_QWORD *)(v295 + 40) + 8 * v229 + 16);
        }
        else
        {
          *(_DWORD *)(*((_QWORD *)v122 + 12) + 4 * v248) = v247;
          v249 = v248 + 1;
        }
        *((_DWORD *)v122 + 22) = v249;
        v250 = *(_DWORD *)(v232 + 68);
        v251 = *((unsigned int *)v122 + 28);
        if ((_DWORD)v251 == *((_DWORD *)v122 + 29))
        {
          v252 = v251 + 1;
          google::protobuf::RepeatedField<int>::Reserve(v291, v251 + 1);
          *(_DWORD *)(*((_QWORD *)v122 + 15) + 4 * v251) = v250;
          v190 = v295;
          v232 = *(_QWORD *)(*(_QWORD *)(v295 + 40) + 8 * v229 + 16);
        }
        else
        {
          *(_DWORD *)(*((_QWORD *)v122 + 15) + 4 * v251) = v250;
          v252 = v251 + 1;
          v190 = v295;
        }
        *v291 = v252;
        if (*(_BYTE *)(v232 + 76))
        {
          v253 = *((unsigned int *)v122 + 40);
          if ((_DWORD)v253 == *((_DWORD *)v122 + 41))
          {
            v254 = v253 + 1;
            google::protobuf::RepeatedField<int>::Reserve(v285, v253 + 1);
            *(_DWORD *)(*((_QWORD *)v122 + 21) + 4 * v253) = v233;
            v190 = v295;
            v232 = *(_QWORD *)(*(_QWORD *)(v295 + 40) + 8 * v229 + 16);
          }
          else
          {
            *(_DWORD *)(*((_QWORD *)v122 + 21) + 4 * v253) = v233;
            v254 = v253 + 1;
            v190 = v295;
          }
          *v285 = v254;
        }
        v237 = *(unsigned int *)(v232 + 80);
        if ((_DWORD)v237 == (_DWORD)v211)
        {
          v237 = v211;
        }
        else
        {
          v255 = v229 - v289 + 1;
          v256 = *((unsigned int *)v122 + 58);
          if ((_DWORD)v256 == *((_DWORD *)v122 + 59))
          {
            v257 = v256 + 1;
            google::protobuf::RepeatedField<int>::Reserve((unsigned int *)v122 + 58, v256 + 1);
            *(_DWORD *)(*((_QWORD *)v122 + 30) + 4 * v256) = v255;
          }
          else
          {
            *(_DWORD *)(*((_QWORD *)v122 + 30) + 4 * v256) = v255;
            v257 = v256 + 1;
          }
          *((_DWORD *)v122 + 58) = v257;
          v258 = *((unsigned int *)v122 + 64);
          if ((_DWORD)v258 == *((_DWORD *)v122 + 65))
          {
            v259 = v258 + 1;
            google::protobuf::RepeatedField<int>::Reserve(v284, v258 + 1);
            *(_DWORD *)(*((_QWORD *)v122 + 33) + 4 * v258) = v237;
          }
          else
          {
            *(_DWORD *)(*((_QWORD *)v122 + 33) + 4 * v258) = v237;
            v259 = v258 + 1;
          }
          v190 = v295;
          *v284 = v259;
          v289 = v229 + 1;
        }
        v260 = (_DWORD *)((char *)v122 + 208);
        v261 = *((int *)v122 + 52);
        v262 = *((unsigned int *)v122 + 52);
        v263 = *(_DWORD *)(*((_QWORD *)&v297 + 1) + 4 * v261)
             - *(_DWORD *)(*((_QWORD *)&v297 + 1) + 4 * ((int)v261 - 1));
        if ((_DWORD)v261 == *((_DWORD *)v122 + 53))
        {
          v264 = v262 + 1;
          google::protobuf::RepeatedField<int>::Reserve(v294, v262 + 1);
          *(_DWORD *)(*((_QWORD *)v122 + 27) + 4 * v262) = v263;
          v260 = (_DWORD *)((char *)v122 + 208);
          v190 = v295;
        }
        else
        {
          *(_DWORD *)(*((_QWORD *)v122 + 27) + 4 * v262) = v263;
          v264 = v262 + 1;
        }
        *v260 = v264;
        v265 = *(_QWORD *)(*(_QWORD *)(v190 + 40) + 8 * v229 + 16);
        v228 = *(_QWORD *)(v265 + 48);
        if ((*(_BYTE *)(v265 + 16) & 4) != 0)
        {
          v266 = v229 - v287 + 1;
          v267 = *((unsigned int *)v124 + 4);
          if ((_DWORD)v267 == *((_DWORD *)v124 + 5))
          {
            v268 = v267 + 1;
            google::protobuf::RepeatedField<int>::Reserve((unsigned int *)v124 + 4, v267 + 1);
            *(_DWORD *)(*((_QWORD *)v124 + 3) + 4 * v267) = v266;
          }
          else
          {
            *(_DWORD *)(*((_QWORD *)v124 + 3) + 4 * v267) = v266;
            v268 = v267 + 1;
          }
          *((_DWORD *)v124 + 4) = v268;
          v269 = (int *)*((_QWORD *)v124 + 7);
          v190 = v295;
          if (v269)
          {
            v270 = *((_DWORD *)v124 + 12);
            v271 = *v269;
            if (v270 < *v269)
            {
              *((_DWORD *)v124 + 12) = v270 + 1;
              v272 = *(maps::path_codec::geo3::UUID **)&v269[2 * v270 + 2];
LABEL_348:
              if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v190 + 40) + 8 * v229 + 16) + 40))
                v275 = *(const maps::path_codec::geo3::UUID **)(*(_QWORD *)(*(_QWORD *)(v190 + 40) + 8 * v229 + 16)
                                                              + 40);
              else
                v275 = (const maps::path_codec::geo3::UUID *)&maps::path_codec::geo3::_UUID_default_instance_;
              if (v275 == v272)
              {
                v230 = v229 + 1;
                v287 = v229 + 1;
              }
              else
              {
                maps::path_codec::geo3::UUID::Clear(v272);
                maps::path_codec::geo3::UUID::MergeFrom(v272, v275);
                v230 = v229 + 1;
                v287 = v229 + 1;
                v190 = v295;
              }
              goto LABEL_354;
            }
            if (v271 == *((_DWORD *)v124 + 13))
            {
LABEL_344:
              if (v270 <= v271)
              {
                google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend(v283, v271 - v270 + 1);
                v269 = (int *)*((_QWORD *)v124 + 7);
              }
              v271 = *v269;
            }
            *v269 = v271 + 1;
            v272 = (maps::path_codec::geo3::UUID *)google::protobuf::Arena::CreateMaybeMessage<maps::path_codec::geo3::UUID>(*(google::protobuf::internal::ArenaImpl **)v283);
            v273 = *((_QWORD *)v124 + 7);
            v274 = *((int *)v124 + 12);
            *((_DWORD *)v124 + 12) = v274 + 1;
            *(_QWORD *)(v273 + 8 * v274 + 8) = v272;
            v190 = v295;
            goto LABEL_348;
          }
          v270 = *((_DWORD *)v124 + 12);
          v271 = *((_DWORD *)v124 + 13);
          goto LABEL_344;
        }
        v230 = v229 + 1;
      }
      else
      {
        v237 = v211;
      }
LABEL_354:
      v276 = v229 + 2;
      ++v229;
      v211 = v237;
    }
    while (v276 < *(int *)(v190 + 32));
  }
  *(_DWORD *)(v190 + 16) |= 1u;
  v277 = *(_QWORD *)(v190 + 8);
  v278 = (google::protobuf::internal::ArenaImpl *)(v277 & 0xFFFFFFFFFFFFFFFELL);
  if ((v277 & 1) != 0)
    v278 = *(google::protobuf::internal::ArenaImpl **)v278;
  v279 = *(std::string **)(v190 + 48);
  if (v279 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
    v279 = (std::string *)google::protobuf::internal::ArenaStringPtr::MutableSlow<>((_QWORD *)(v190 + 48), v278);
  if (SHIBYTE(v279->__r_.__value_.__r.__words[2]) < 0)
  {
    *v279->__r_.__value_.__l.__data_ = 0;
    v279->__r_.__value_.__l.__size_ = 0;
  }
  else
  {
    v279->__r_.__value_.__s.__data_[0] = 0;
    *((_BYTE *)&v279->__r_.__value_.__s + 23) = 0;
  }
  google::protobuf::MessageLite::AppendPartialToString((uint64_t)&v299, v279);
  v280 = *(unsigned int *)(v190 + 32);
  if ((int)v280 >= 1)
  {
    v281 = (google::protobuf::UnknownFieldSet **)(*(_QWORD *)(v190 + 40) + 8);
    do
    {
      maps::path_codec::geo3::RoutingPathPoint::Clear(*v281++);
      --v280;
    }
    while (v280);
    *(_DWORD *)(v190 + 32) = 0;
  }
  if (*((_QWORD *)&v297 + 1))
  {
    *(_QWORD *)&v298 = *((_QWORD *)&v297 + 1);
    operator delete(*((void **)&v297 + 1));
  }
  __v.__first_ = (std::__split_buffer<std::string>::pointer)__p;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&__v);
  maps::path_codec::geo3::CompressedPath::~CompressedPath((maps::path_codec::geo3::CompressedPath *)&v299);
}

void sub_1888CA488(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,void *a25,uint64_t a26,int a27,__int16 a28,char a29,char a30,void *__p,uint64_t a32,uint64_t a33,char a34)
{
  uint64_t v34;

  if (__p)
  {
    a32 = (uint64_t)__p;
    operator delete(__p);
  }
  *(_QWORD *)(v34 - 152) = &a25;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)(v34 - 152));
  maps::path_codec::geo3::CompressedPath::~CompressedPath((maps::path_codec::geo3::CompressedPath *)&a34);
  _Unwind_Resume(a1);
}

void maps::path_codec::RoadNames::~RoadNames(maps::path_codec::RoadNames *this)
{
  void *v2;
  void **v3;

  v2 = (void *)*((_QWORD *)this + 3);
  if (v2)
  {
    *((_QWORD *)this + 4) = v2;
    operator delete(v2);
  }
  v3 = (void **)this;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100](&v3);
}

void maps::path_codec::decompress_inplace(uint64_t a1, uint64_t a2)
{
  int v5;
  int *v6;
  int *v7;
  uint64_t v8;
  int v9;
  int *v10;
  int v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  __int128 *v24;
  uint64_t v25;
  google::protobuf::internal::ArenaImpl *v26;
  int v27;
  maps::path_codec::geo3::UUID *v28;
  uint64_t v29;
  google::protobuf::internal::ArenaImpl *v30;
  const maps::path_codec::geo3::UUID *v31;
  int v32;
  int v33;
  int v34;
  int *v35;
  int v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  __int128 *v45;
  uint64_t v46;
  google::protobuf::internal::ArenaImpl *v47;
  maps::path_codec::geo3::UUID *v48;
  uint64_t v49;
  google::protobuf::internal::ArenaImpl *v50;
  const maps::path_codec::geo3::UUID *v51;
  _QWORD *v52;
  google::protobuf::internal::ArenaImpl *v53;
  _DWORD *v54;
  int v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  google::protobuf::internal::ArenaImpl *v59;
  unsigned __int8 v60;
  int v61;
  int v62;
  unsigned int v63;
  unsigned int v64;
  int v65;
  unsigned int v66;
  int rice;
  int v68;
  uint64_t v69;
  _QWORD *v70;
  uint64_t v71;
  google::protobuf::internal::ArenaImpl *v72;
  _DWORD *v73;
  int v74;
  uint64_t v75;
  _QWORD *v76;
  uint64_t v77;
  google::protobuf::internal::ArenaImpl *v78;
  unsigned __int8 v79;
  int v80;
  int v81;
  unsigned int v82;
  unsigned int v83;
  int v84;
  unsigned int v85;
  int v86;
  int v87;
  uint64_t v88;
  _QWORD *v89;
  uint64_t v90;
  google::protobuf::internal::ArenaImpl *v91;
  uint64_t v92;
  unsigned int v93;
  int v94;
  uint64_t v95;
  unsigned __int8 v96;
  int v97;
  int v98;
  unsigned int v99;
  int v100;
  int v101;
  int v102;
  uint64_t v103;
  unint64_t v104;
  unint64_t v105;
  uint64_t v106;
  int v107;
  int v108;
  int v109;
  int *v110;
  unsigned int v111;
  _QWORD *v112;
  google::protobuf::internal::RepeatedPtrFieldBase *v113;
  unsigned int v114;
  unsigned int v115;
  void *v116;
  char v117;
  void *v118;
  uint64_t v119;
  uint64_t v120;
  _QWORD *v121;
  int *v122;
  int *v123;
  signed int v124;
  void *__p[2];
  char v126;
  unint64_t v127;
  uint64_t v128;
  void *v129;
  char v130;
  _BYTE v131[160];

  if (*(int *)(a2 + 32) < 1)
  {
    v118 = &off_1E1BF6A98;
    v119 = 0;
    v120 = 0;
    if (atomic_load(scc_info_CompressedPath_compressed_5fpath_2eproto))
      google::protobuf::internal::InitSCCImpl(scc_info_CompressedPath_compressed_5fpath_2eproto);
    v121 = 0;
    v122 = 0;
    v124 = 0;
    v123 = 0;
    if ((google::protobuf::MessageLite::ParseFrom<(google::protobuf::MessageLite::ParseFlags)1,std::string>((google::protobuf::MessageLite *)&v118, (uint64_t *)(*(_QWORD *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL)) & 1) == 0)
    {
      if (maps::path_codec::Logger::m_log_level <= 4u)
      {
        std::ostringstream::basic_ostringstream[abi:ne180100]((uint64_t)&v127);
        std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(&v127, (uint64_t)"Could not parse the compressed_path bytes into a CompressedPath message.", 72);
        std::string::basic_string[abi:ne180100]<0>(__p, "/Library/Caches/com.apple.xbs/Sources/GeoServices/libpathcodec/path-codec/src/path-codec/PathCompression.cpp");
        std::stringbuf::str();
        maps::path_codec::Logger::log_error((uint64_t)__p, 188, (uint64_t)&v116);
        if (v117 < 0)
          operator delete(v116);
        if (v126 < 0)
          operator delete(__p[0]);
        v127 = *MEMORY[0x1E0DE4F60];
        *(unint64_t *)((char *)&v127 + *(_QWORD *)(v127 - 24)) = *(_QWORD *)(MEMORY[0x1E0DE4F60] + 24);
        v128 = MEMORY[0x1E0DE4FB8] + 16;
        if (v130 < 0)
          operator delete(v129);
        std::streambuf::~streambuf();
        std::ostream::~ostream();
        MEMORY[0x18D764310](v131);
      }
      goto LABEL_153;
    }
    v113 = (google::protobuf::internal::RepeatedPtrFieldBase *)(a2 + 24);
    v5 = *(_DWORD *)(a2 + 32);
    v111 = v124;
    if (v124 > v5)
      google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend(v113, v124 - v5);
    if (v122)
      v6 = v122;
    else
      v6 = (int *)&maps::path_codec::geo3::_SupportPointData_default_instance_;
    v7 = (int *)&maps::path_codec::geo3::_AnchorData_default_instance_;
    if (v123)
      v7 = v123;
    v110 = v7;
    if (v6[4] < 2)
    {
LABEL_153:
      maps::path_codec::geo3::CompressedPath::~CompressedPath((maps::path_codec::geo3::CompressedPath *)&v118);
      return;
    }
    v8 = **((_QWORD **)v6 + 6);
    v9 = **((_DWORD **)v6 + 18);
    v10 = *(int **)(a2 + 40);
    if (v10)
    {
      v11 = *(_DWORD *)(a2 + 32);
      v12 = *v10;
      if (v11 < *v10)
      {
        *(_DWORD *)(a2 + 32) = v11 + 1;
        v13 = *(_QWORD *)&v10[2 * v11 + 2];
        goto LABEL_38;
      }
      if (v12 != *(_DWORD *)(a2 + 36))
      {
LABEL_37:
        *v10 = v12 + 1;
        v13 = google::protobuf::Arena::CreateMaybeMessage<maps::path_codec::geo3::RoutingPathPoint>(*(google::protobuf::internal::ArenaImpl **)v113);
        v14 = *(_QWORD *)(a2 + 40);
        v15 = *(int *)(a2 + 32);
        *(_DWORD *)(a2 + 32) = v15 + 1;
        *(_QWORD *)(v14 + 8 * v15 + 8) = v13;
LABEL_38:
        v16 = *(_DWORD *)(v13 + 16);
        *(_DWORD *)(v13 + 16) = v16 | 8;
        *(_QWORD *)(v13 + 48) = v8;
        v17 = **((_DWORD **)v6 + 9);
        *(_DWORD *)(v13 + 16) = v16 | 0x28;
        *(_DWORD *)(v13 + 60) = v17;
        v18 = **((_DWORD **)v6 + 12);
        *(_DWORD *)(v13 + 16) = v16 | 0x68;
        *(_DWORD *)(v13 + 64) = v18;
        *(_DWORD *)(v13 + 68) = **((_DWORD **)v6 + 15);
        *(_DWORD *)(v13 + 72) = v9;
        v19 = v16 | 0x9E8;
        *(_DWORD *)(v13 + 16) = v16 | 0x9E8;
        *(_DWORD *)(v13 + 84) = 1;
        if (v6[40] < 1 || **((_DWORD **)v6 + 21))
        {
          v20 = 0;
        }
        else
        {
          v19 = v16 | 0xBE8;
          *(_DWORD *)(v13 + 16) = v16 | 0xBE8;
          v20 = 1;
          *(_BYTE *)(v13 + 76) = 1;
        }
        if (v6[58] < 1 || **((_DWORD **)v6 + 30))
        {
          v21 = 0;
          v22 = 0;
        }
        else
        {
          v21 = **((_DWORD **)v6 + 33);
          v22 = 1;
        }
        *(_DWORD *)(v13 + 16) = v19 | 0x400;
        *(_DWORD *)(v13 + 80) = v21;
        if (v6[52] < 1)
        {
          v23 = 0;
        }
        else
        {
          v23 = **((_DWORD **)v6 + 27);
          if (v23 < v6[48])
          {
            v24 = *(__int128 **)(*((_QWORD *)v6 + 25) + 8 * v23 + 8);
            *(_DWORD *)(v13 + 16) = v19 | 0x401;
            v25 = *(_QWORD *)(v13 + 8);
            v26 = (google::protobuf::internal::ArenaImpl *)(v25 & 0xFFFFFFFFFFFFFFFELL);
            if ((v25 & 1) != 0)
              v26 = *(google::protobuf::internal::ArenaImpl **)v26;
            google::protobuf::internal::ArenaStringPtr::Set((std::string **)(v13 + 24), (std::string *)&google::protobuf::internal::fixed_address_empty_string, v24, v26);
          }
        }
        v106 = a1;
        v109 = v21;
        if (v110[4] < 1 || **((_DWORD **)v110 + 3))
        {
          v27 = 0;
        }
        else
        {
          *(_DWORD *)(v13 + 16) |= 4u;
          v28 = *(maps::path_codec::geo3::UUID **)(v13 + 40);
          if (!v28)
          {
            v29 = *(_QWORD *)(v13 + 8);
            v30 = (google::protobuf::internal::ArenaImpl *)(v29 & 0xFFFFFFFFFFFFFFFELL);
            if ((v29 & 1) != 0)
              v30 = *(google::protobuf::internal::ArenaImpl **)v30;
            v28 = (maps::path_codec::geo3::UUID *)google::protobuf::Arena::CreateMaybeMessage<maps::path_codec::geo3::UUID>(v30);
            *(_QWORD *)(v13 + 40) = v28;
          }
          v31 = *(const maps::path_codec::geo3::UUID **)(*((_QWORD *)v110 + 7) + 8);
          if (v31 != v28)
          {
            maps::path_codec::geo3::UUID::Clear(v28);
            maps::path_codec::geo3::UUID::MergeFrom(v28, v31);
          }
          v27 = 1;
        }
        if (v111 >= 2)
        {
          v107 = 0;
          v108 = 0;
          v32 = 0;
          v33 = 1;
          v34 = 1;
          while (1)
          {
            v35 = *(int **)(a2 + 40);
            if (!v35)
              break;
            v36 = *(_DWORD *)(a2 + 32);
            v37 = *v35;
            if (v36 >= *v35)
            {
              if (v37 == *(_DWORD *)(a2 + 36))
              {
LABEL_69:
                if (v36 <= v37)
                {
                  google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend(v113, v37 - v36 + 1);
                  v35 = *(int **)(a2 + 40);
                }
                v37 = *v35;
              }
              *v35 = v37 + 1;
              v38 = google::protobuf::Arena::CreateMaybeMessage<maps::path_codec::geo3::RoutingPathPoint>(*(google::protobuf::internal::ArenaImpl **)v113);
              v39 = *(_QWORD *)(a2 + 40);
              v40 = *(int *)(a2 + 32);
              *(_DWORD *)(a2 + 32) = v40 + 1;
              *(_QWORD *)(v39 + 8 * v40 + 8) = v38;
              goto LABEL_73;
            }
            *(_DWORD *)(a2 + 32) = v36 + 1;
            v38 = *(_QWORD *)&v35[2 * v36 + 2];
LABEL_73:
            v41 = *(_DWORD *)(v38 + 16);
            if (v33 - v32 == *(_DWORD *)(*((_QWORD *)v6 + 3) + 4 * v34))
            {
              *(_DWORD *)(v38 + 84) = 1;
              v42 = *(_QWORD *)(*(_QWORD *)(a2 + 40) + 8 * v32 + 8);
              v43 = *(_QWORD *)(*((_QWORD *)v6 + 6) + 8 * v34) + *(_QWORD *)(v42 + 48);
              *(_DWORD *)(v38 + 16) = v41 | 0x808;
              *(_QWORD *)(v38 + 48) = v43;
              LODWORD(v43) = *(_DWORD *)(*((_QWORD *)v6 + 9) + 4 * v34);
              *(_DWORD *)(v38 + 16) = v41 | 0x828;
              *(_DWORD *)(v38 + 60) = v43;
              LODWORD(v43) = *(_DWORD *)(*((_QWORD *)v6 + 12) + 4 * v34);
              *(_DWORD *)(v38 + 16) = v41 | 0x868;
              *(_DWORD *)(v38 + 64) = v43;
              LODWORD(v43) = *(_DWORD *)(*((_QWORD *)v6 + 15) + 4 * v34);
              *(_DWORD *)(v38 + 16) = v41 | 0x8E8;
              *(_DWORD *)(v38 + 68) = v43;
              LODWORD(v43) = *(_DWORD *)(*((_QWORD *)v6 + 18) + 4 * v34) + *(_DWORD *)(v42 + 72);
              v44 = v41 | 0x9E8;
              *(_DWORD *)(v38 + 16) = v41 | 0x9E8;
              *(_DWORD *)(v38 + 72) = v43;
              if (v20 < v6[40] && v33 == *(_DWORD *)(*((_QWORD *)v6 + 21) + 4 * v20))
              {
                v44 = v41 | 0xBE8;
                *(_DWORD *)(v38 + 16) = v41 | 0xBE8;
                *(_BYTE *)(v38 + 76) = 1;
                ++v20;
              }
              if (v22 < v6[58] && v33 == *(_DWORD *)(*((_QWORD *)v6 + 30) + 4 * v22) + v108)
              {
                v108 = v33;
                v109 = *(_DWORD *)(*((_QWORD *)v6 + 33) + 4 * v22++);
              }
              *(_DWORD *)(v38 + 16) = v44 | 0x400;
              *(_DWORD *)(v38 + 80) = v109;
              if (v34 < v6[52])
              {
                v23 += *(_DWORD *)(*((_QWORD *)v6 + 27) + 4 * v34);
                if (v23 < v6[48])
                {
                  v45 = *(__int128 **)(*((_QWORD *)v6 + 25) + 8 * v23 + 8);
                  *(_DWORD *)(v38 + 16) = v44 | 0x401;
                  v46 = *(_QWORD *)(v38 + 8);
                  v47 = (google::protobuf::internal::ArenaImpl *)(v46 & 0xFFFFFFFFFFFFFFFELL);
                  if ((v46 & 1) != 0)
                    v47 = *(google::protobuf::internal::ArenaImpl **)v47;
                  google::protobuf::internal::ArenaStringPtr::Set((std::string **)(v38 + 24), (std::string *)&google::protobuf::internal::fixed_address_empty_string, v45, v47);
                }
              }
              ++v34;
              if (v110[4] > v27 && v33 == *(_DWORD *)(*((_QWORD *)v110 + 3) + 4 * v27) + v107)
              {
                *(_DWORD *)(v38 + 16) |= 4u;
                v48 = *(maps::path_codec::geo3::UUID **)(v38 + 40);
                if (!v48)
                {
                  v49 = *(_QWORD *)(v38 + 8);
                  v50 = (google::protobuf::internal::ArenaImpl *)(v49 & 0xFFFFFFFFFFFFFFFELL);
                  if ((v49 & 1) != 0)
                    v50 = *(google::protobuf::internal::ArenaImpl **)v50;
                  v48 = (maps::path_codec::geo3::UUID *)google::protobuf::Arena::CreateMaybeMessage<maps::path_codec::geo3::UUID>(v50);
                  *(_QWORD *)(v38 + 40) = v48;
                }
                v51 = *(const maps::path_codec::geo3::UUID **)(*((_QWORD *)v110 + 7) + 8 * v27 + 8);
                if (v51 != v48)
                {
                  maps::path_codec::geo3::UUID::Clear(v48);
                  maps::path_codec::geo3::UUID::MergeFrom(v48, v51);
                }
                ++v27;
                v107 = v33;
              }
              v32 = v33;
            }
            else
            {
              *(_DWORD *)(v38 + 16) = v41 | 0x800;
              *(_DWORD *)(v38 + 84) = 2;
            }
            if (v111 == ++v33)
              goto LABEL_97;
          }
          v36 = *(_DWORD *)(a2 + 32);
          v37 = *(_DWORD *)(a2 + 36);
          goto LABEL_69;
        }
LABEL_97:
        LODWORD(v120) = v120 | 1;
        v52 = v121;
        if (!v121)
        {
          v53 = (google::protobuf::internal::ArenaImpl *)(v119 & 0xFFFFFFFFFFFFFFFELL);
          if ((v119 & 1) != 0)
            v53 = *(google::protobuf::internal::ArenaImpl **)v53;
          v52 = google::protobuf::Arena::CreateMaybeMessage<maps::path_codec::geo3::CommonPointData>(v53);
          v121 = v52;
        }
        v114 = *(_DWORD *)(a2 + 32);
        if (v52[3])
          v54 = (_DWORD *)v52[3];
        else
          v54 = &maps::path_codec::geo3::_RiceEncodedIntegers_default_instance_;
        v55 = v54[14];
        v56 = *(_QWORD *)(*(_QWORD *)(a2 + 40) + 8);
        *(_DWORD *)(v56 + 16) |= 2u;
        v57 = *(_QWORD **)(v56 + 32);
        if (!v57)
        {
          v58 = *(_QWORD *)(v56 + 8);
          v59 = (google::protobuf::internal::ArenaImpl *)(v58 & 0xFFFFFFFFFFFFFFFELL);
          if ((v58 & 1) != 0)
            v59 = *(google::protobuf::internal::ArenaImpl **)v59;
          v57 = google::protobuf::Arena::CreateMaybeMessage<maps::path_codec::geo3::LatLngE7>(v59);
          *(_QWORD *)(v56 + 32) = v57;
        }
        *((_DWORD *)v57 + 4) |= 1u;
        *((_DWORD *)v57 + 6) = v55;
        v127 = *((_QWORD *)v54 + 6) & 0xFFFFFFFFFFFFFFFELL;
        v128 = 0;
        v60 = maps::path_codec::BitStream::read((maps::path_codec::BitStream *)&v127, *(unsigned __int8 *)(v106 + 100));
        v112 = v52;
        if (v114 >= 2)
        {
          v61 = 0;
          v62 = 0;
          v63 = v54[14];
          v64 = v63 >> 31;
          v65 = 1;
          v66 = v60;
          do
          {
            if (v62 < v54[6] && v65 - v61 == *(_DWORD *)(*((_QWORD *)v54 + 4) + 4 * v62))
            {
              ++v62;
              v61 = v65;
              LOBYTE(v64) = v64 ^ 1;
            }
            rice = maps::path_codec::BitStream::read_rice((maps::path_codec::BitStream *)&v127, v66);
            if ((v64 & 1) != 0)
              v68 = -rice;
            else
              v68 = rice;
            v69 = *(_QWORD *)(*(_QWORD *)(a2 + 40) + 8 * v65 + 8);
            *(_DWORD *)(v69 + 16) |= 2u;
            v70 = *(_QWORD **)(v69 + 32);
            if (!v70)
            {
              v71 = *(_QWORD *)(v69 + 8);
              v72 = (google::protobuf::internal::ArenaImpl *)(v71 & 0xFFFFFFFFFFFFFFFELL);
              if ((v71 & 1) != 0)
                v72 = *(google::protobuf::internal::ArenaImpl **)v72;
              v70 = google::protobuf::Arena::CreateMaybeMessage<maps::path_codec::geo3::LatLngE7>(v72);
              *(_QWORD *)(v69 + 32) = v70;
            }
            v63 += v68;
            *((_DWORD *)v70 + 4) |= 1u;
            *((_DWORD *)v70 + 6) = v63;
            ++v65;
          }
          while (v114 != v65);
        }
        v115 = *(_DWORD *)(a2 + 32);
        if (v112[4])
          v73 = (_DWORD *)v112[4];
        else
          v73 = &maps::path_codec::geo3::_RiceEncodedIntegers_default_instance_;
        v74 = v73[14];
        v75 = *(_QWORD *)(*(_QWORD *)(a2 + 40) + 8);
        *(_DWORD *)(v75 + 16) |= 2u;
        v76 = *(_QWORD **)(v75 + 32);
        if (!v76)
        {
          v77 = *(_QWORD *)(v75 + 8);
          v78 = (google::protobuf::internal::ArenaImpl *)(v77 & 0xFFFFFFFFFFFFFFFELL);
          if ((v77 & 1) != 0)
            v78 = *(google::protobuf::internal::ArenaImpl **)v78;
          v76 = google::protobuf::Arena::CreateMaybeMessage<maps::path_codec::geo3::LatLngE7>(v78);
          *(_QWORD *)(v75 + 32) = v76;
        }
        *((_DWORD *)v76 + 4) |= 2u;
        *((_DWORD *)v76 + 7) = v74;
        v127 = *((_QWORD *)v73 + 6) & 0xFFFFFFFFFFFFFFFELL;
        v128 = 0;
        v79 = maps::path_codec::BitStream::read((maps::path_codec::BitStream *)&v127, *(unsigned __int8 *)(v106 + 100));
        if (v115 >= 2)
        {
          v80 = 0;
          v81 = 0;
          v82 = v73[14];
          v83 = v82 >> 31;
          v84 = 1;
          v85 = v79;
          do
          {
            if (v81 < v73[6] && v84 - v80 == *(_DWORD *)(*((_QWORD *)v73 + 4) + 4 * v81))
            {
              ++v81;
              v80 = v84;
              LOBYTE(v83) = v83 ^ 1;
            }
            v86 = maps::path_codec::BitStream::read_rice((maps::path_codec::BitStream *)&v127, v85);
            if ((v83 & 1) != 0)
              v87 = -v86;
            else
              v87 = v86;
            v88 = *(_QWORD *)(*(_QWORD *)(a2 + 40) + 8 * v84 + 8);
            *(_DWORD *)(v88 + 16) |= 2u;
            v89 = *(_QWORD **)(v88 + 32);
            if (!v89)
            {
              v90 = *(_QWORD *)(v88 + 8);
              v91 = (google::protobuf::internal::ArenaImpl *)(v90 & 0xFFFFFFFFFFFFFFFELL);
              if ((v90 & 1) != 0)
                v91 = *(google::protobuf::internal::ArenaImpl **)v91;
              v89 = google::protobuf::Arena::CreateMaybeMessage<maps::path_codec::geo3::LatLngE7>(v91);
              *(_QWORD *)(v88 + 32) = v89;
            }
            v82 += v87;
            *((_DWORD *)v89 + 4) |= 2u;
            *((_DWORD *)v89 + 7) = v82;
            ++v84;
          }
          while (v115 != v84);
        }
        if ((v112[2] & 4) != 0)
        {
          v92 = v112[5];
          v93 = *(_DWORD *)(a2 + 32);
          v94 = *(_DWORD *)(v92 + 56);
          v95 = *(_QWORD *)(*(_QWORD *)(a2 + 40) + 8);
          *(_DWORD *)(v95 + 16) |= 0x10u;
          *(_DWORD *)(v95 + 56) = v94;
          v127 = *(_QWORD *)(v92 + 48) & 0xFFFFFFFFFFFFFFFELL;
          v128 = 0;
          v96 = maps::path_codec::BitStream::read((maps::path_codec::BitStream *)&v127, *(unsigned __int8 *)(v106 + 100));
          if (v93 >= 2)
          {
            v97 = *(_DWORD *)(v92 + 56);
            v98 = 1;
            v99 = v96;
            do
            {
              v100 = maps::path_codec::BitStream::read((maps::path_codec::BitStream *)&v127, 1u);
              v101 = maps::path_codec::BitStream::read_rice((maps::path_codec::BitStream *)&v127, v99);
              if (v100)
                v102 = -v101;
              else
                v102 = v101;
              v97 += v102;
              v103 = *(_QWORD *)(*(_QWORD *)(a2 + 40) + 8 * v98 + 8);
              *(_DWORD *)(v103 + 16) |= 0x10u;
              *(_DWORD *)(v103 + 56) = v97;
              ++v98;
            }
            while (v93 != v98);
          }
        }
        v104 = *(_QWORD *)(a2 + 48);
        if ((uint64_t *)v104 != &google::protobuf::internal::fixed_address_empty_string)
        {
          v105 = v104 & 0xFFFFFFFFFFFFFFFELL;
          if (*(char *)(v105 + 23) < 0)
          {
            **(_BYTE **)v105 = 0;
            *(_QWORD *)(v105 + 8) = 0;
          }
          else
          {
            *(_BYTE *)v105 = 0;
            *(_BYTE *)(v105 + 23) = 0;
          }
        }
        *(_DWORD *)(a2 + 16) &= ~1u;
        goto LABEL_153;
      }
    }
    else
    {
      v11 = *(_DWORD *)(a2 + 32);
      v12 = *(_DWORD *)(a2 + 36);
    }
    if (v11 <= v12)
    {
      google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend(v113, v12 - v11 + 1);
      v10 = *(int **)(a2 + 40);
    }
    v12 = *v10;
    goto LABEL_37;
  }
  if (maps::path_codec::Logger::m_log_level <= 1u)
  {
    std::ostringstream::basic_ostringstream[abi:ne180100]((uint64_t)&v127);
    std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(&v127, (uint64_t)"The input path leg already has a decompressed point list. Skipping decompression.", 81);
    std::string::basic_string[abi:ne180100]<0>(&v118, "/Library/Caches/com.apple.xbs/Sources/GeoServices/libpathcodec/path-codec/src/path-codec/PathCompression.cpp");
    std::stringbuf::str();
    maps::path_codec::Logger::log_debug((uint64_t)&v118, 181, (uint64_t)__p);
    if (v126 < 0)
      operator delete(__p[0]);
    if (SHIBYTE(v120) < 0)
      operator delete(v118);
    v127 = *MEMORY[0x1E0DE4F60];
    *(unint64_t *)((char *)&v127 + *(_QWORD *)(v127 - 24)) = *(_QWORD *)(MEMORY[0x1E0DE4F60] + 24);
    v128 = MEMORY[0x1E0DE4FB8] + 16;
    if (v130 < 0)
      operator delete(v129);
    std::streambuf::~streambuf();
    std::ostream::~ostream();
    MEMORY[0x18D764310](v131);
  }
}

void sub_1888CB1B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,void *a32,uint64_t a33,int a34,__int16 a35,char a36,char a37,char a38)
{
  maps::path_codec::geo3::CompressedPath::~CompressedPath((maps::path_codec::geo3::CompressedPath *)&a22);
  _Unwind_Resume(a1);
}

void maps::path_codec::compress(uint64_t a1@<X0>, const maps::path_codec::geo3::RoutingPathLeg *a2@<X1>, maps::path_codec::geo3::RoutingPathLeg *a3@<X8>)
{
  void *__p;
  char v7;
  void *v8[2];
  char v9;
  _QWORD v10[11];
  char v11;
  uint64_t v12;

  if ((*((_BYTE *)a2 + 16) & 1) != 0)
  {
    if (maps::path_codec::Logger::m_log_level <= 1u)
    {
      std::ostringstream::basic_ostringstream[abi:ne180100]((uint64_t)v10);
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v10, (uint64_t)"The input path leg already has a compressed path populated. Skipping compression.", 81);
      std::string::basic_string[abi:ne180100]<0>(v8, "/Library/Caches/com.apple.xbs/Sources/GeoServices/libpathcodec/path-codec/src/path-codec/PathCompression.cpp");
      std::stringbuf::str();
      maps::path_codec::Logger::log_debug((uint64_t)v8, 356, (uint64_t)&__p);
      if (v7 < 0)
        operator delete(__p);
      if (v9 < 0)
        operator delete(v8[0]);
      v10[0] = *MEMORY[0x1E0DE4F60];
      *(_QWORD *)((char *)v10 + *(_QWORD *)(v10[0] - 24)) = *(_QWORD *)(MEMORY[0x1E0DE4F60] + 24);
      v10[1] = MEMORY[0x1E0DE4FB8] + 16;
      if (v11 < 0)
        operator delete((void *)v10[9]);
      std::streambuf::~streambuf();
      std::ostream::~ostream();
      MEMORY[0x18D764310](&v12);
    }
    maps::path_codec::geo3::RoutingPathLeg::RoutingPathLeg(a3, a2);
  }
  else
  {
    maps::path_codec::geo3::RoutingPathLeg::RoutingPathLeg(a3, a2);
    maps::path_codec::compress_inplace(a1, (uint64_t)a3);
  }
}

void sub_1888CB3C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,char a22)
{
  if (a15 < 0)
    operator delete(__p);
  if (a21 < 0)
    operator delete(a16);
  std::ostringstream::~ostringstream((uint64_t)&a22);
  _Unwind_Resume(a1);
}

void maps::path_codec::BitStream::reserve(std::string **this, std::string::size_type a2)
{
  std::string *v4;
  std::string::size_type size;
  std::string::size_type v6;

  std::string::reserve(*this, a2);
  v4 = *this;
  if (SHIBYTE((*this)->__r_.__value_.__r.__words[2]) < 0)
    size = v4->__r_.__value_.__l.__size_;
  else
    size = HIBYTE((*this)->__r_.__value_.__r.__words[2]);
  if (size <= a2)
    v6 = a2;
  else
    v6 = size;
  std::string::resize(v4, v6, 0);
}

void maps::path_codec::BitStream::write(maps::path_codec::BitStream *this, unsigned int a2, int a3)
{
  int v6;
  uint64_t v7;
  unint64_t v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  int v12;
  _QWORD *v13;
  int v14;

  v6 = *((_DWORD *)this + 3);
  v7 = *(_QWORD *)this;
  if (*(char *)(v7 + 23) < 0)
    v8 = *(_QWORD *)(v7 + 8);
  else
    v8 = *(unsigned __int8 *)(v7 + 23);
  if (v8 <= (v6 + 5))
    std::string::resize((std::string *)v7, (2 * v6 + 10), 0);
  if (a2)
  {
    v9 = 0;
    v10 = 1 << (a2 - 1);
    v11 = *((_DWORD *)this + 3);
    v12 = *((_DWORD *)this + 2) & 7;
    do
    {
      v13 = *(_QWORD **)this;
      if (*(char *)(*(_QWORD *)this + 23) < 0)
        v13 = (_QWORD *)*v13;
      *((_BYTE *)v13 + v11) |= ((v10 & a3) != 0) << v12;
      v14 = *((_DWORD *)this + 2) + 1;
      LOBYTE(v12) = v14 & 7;
      if ((v14 & 7) != 0)
        v11 = *((_DWORD *)this + 3);
      else
        v11 = *((_DWORD *)this + 3) + 1;
      *((_DWORD *)this + 2) = v14;
      *((_DWORD *)this + 3) = v11;
      v10 >>= 1;
      ++v9;
    }
    while (v9 < a2);
  }
}

void maps::path_codec::BitStream::write_rice(maps::path_codec::BitStream *this, unsigned int a2, unsigned int a3)
{
  unsigned int v6;
  unsigned int v7;
  int v8;
  unsigned int v9;
  int v10;
  char v11;
  unsigned int v12;
  maps::path_codec::BitStream *v13;
  unsigned int v14;
  unsigned int v15;

  v6 = a3 >> a2;
  v7 = (a3 >> a2) + 31;
  if (v7 >= 0x20)
  {
    v8 = 0;
    v9 = v7 >> 5;
    if (v7 >> 5 <= 1)
      v10 = 1;
    else
      v10 = v7 >> 5;
    v11 = 32 - v6;
    v12 = a3 >> a2;
    do
    {
      if (++v8 >= v9)
      {
        v15 = 0xFFFFFFFF >> v11;
        v14 = v12;
        v13 = this;
      }
      else
      {
        v13 = this;
        v14 = 32;
        v15 = -1;
      }
      maps::path_codec::BitStream::write(v13, v14, v15);
      LOBYTE(v12) = v12 - 32;
      v11 += 32;
    }
    while (v10 != v8);
  }
  maps::path_codec::BitStream::write(this, 1u, 0);
  maps::path_codec::BitStream::write(this, a2, a3 - (v6 << a2));
}

void std::string::shrink_to_fit[abi:ne180100](_QWORD *__dst)
{
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  char v7;
  uint64_t v8;
  void *v9;
  int v10;
  unint64_t v11;

  v2 = *((unsigned __int8 *)__dst + 23);
  if ((*((char *)__dst + 23) & 0x80000000) == 0)
  {
    if (v2 < 0x17)
      return;
    v3 = v2 | 7;
    if ((v2 | 7) == 0x17)
    {
      v4 = v2 & 0xF8;
      if (v4 <= 0xE)
      {
        v5 = v4 + 9;
        v6 = (_QWORD *)*__dst;
        v7 = 1;
        v8 = *((unsigned __int8 *)__dst + 23);
        v9 = __dst;
        v10 = 1;
        goto LABEL_20;
      }
      v3 = v4 + 8;
    }
    v8 = *((unsigned __int8 *)__dst + 23);
    goto LABEL_16;
  }
  v11 = __dst[1];
  if (v11 < 0x17)
  {
    if ((__dst[2] & 0x7FFFFFFFFFFFFFFFLL) == 0x17)
      return;
    v3 = 22;
    goto LABEL_13;
  }
  v3 = (v11 & 0xFFFFFFFFFFFFFFF8) + 8;
  if ((v11 | 7) != 0x17)
    v3 = v11 | 7;
  if (v3 != (__dst[2] & 0x7FFFFFFFFFFFFFFFLL) - 1)
  {
    if (v3 >= 0x17)
    {
      v8 = __dst[1];
LABEL_16:
      v5 = v3 + 1;
      v9 = operator new(v3 + 1);
      v7 = 0;
      if ((v2 & 0x80) == 0)
      {
        v10 = 0;
        v6 = __dst;
        goto LABEL_20;
      }
      v11 = __dst[1];
LABEL_19:
      v6 = (_QWORD *)*__dst;
      v10 = 1;
      v2 = v11;
LABEL_20:
      if (v2 == -1)
      {
        if (!v10)
          goto LABEL_22;
      }
      else
      {
        memmove(v9, v6, v2 + 1);
        if (!v10)
        {
LABEL_22:
          if ((v7 & 1) != 0)
          {
LABEL_23:
            *((_BYTE *)__dst + 23) = v8 & 0x7F;
            return;
          }
          goto LABEL_26;
        }
      }
      operator delete(v6);
      if ((v7 & 1) != 0)
        goto LABEL_23;
LABEL_26:
      __dst[1] = v8;
      __dst[2] = v5 | 0x8000000000000000;
      *__dst = v9;
      return;
    }
LABEL_13:
    v5 = v3 + 1;
    v7 = 1;
    v8 = __dst[1];
    v9 = __dst;
    goto LABEL_19;
  }
}

