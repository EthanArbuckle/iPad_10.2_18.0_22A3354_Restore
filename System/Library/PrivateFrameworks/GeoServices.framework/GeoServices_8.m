void sub_188B58F20(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B59120(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B59238(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B59438(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B59550(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B5A2C0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B5A3BC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDLocalizedQueryUnderstandingTaxonomyResultItemBrandCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  _BYTE v20[128];
  _BYTE v21[128];
  uint64_t v22;

  v22 = *MEMORY[0x1E0C80C00];
  objc_msgSend(*(id *)(a1 + 128), "readAll:", 1);
  v18 = 0u;
  v19 = 0u;
  v16 = 0u;
  v17 = 0u;
  v2 = *(id *)(a1 + 112);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v16, v21, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v17;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v17 != v5)
          objc_enumerationMutation(v2);
        -[GEOPDIconMapping readAll:](*(_QWORD *)(*((_QWORD *)&v16 + 1) + 8 * v6++), 1);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v16, v21, 16);
    }
    while (v4);
  }

  v14 = 0u;
  v15 = 0u;
  v12 = 0u;
  v13 = 0u;
  v7 = *(id *)(a1 + 88);
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v12, v20, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v13;
    do
    {
      v11 = 0;
      do
      {
        if (*(_QWORD *)v13 != v10)
          objc_enumerationMutation(v7);
        -[GEOPDIconMapping readAll:](*(_QWORD *)(*((_QWORD *)&v12 + 1) + 8 * v11++), 1);
      }
      while (v9 != v11);
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v12, v20, 16);
    }
    while (v9);
  }

  -[GEOPDBusinessConnectAttributes readAll:](*(_QWORD *)(a1 + 64), 1);
}

unint64_t GEOPDLocalizedQueryUnderstandingTaxonomyResultItemBrandReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 156))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDLocalizedQueryUnderstandingTaxonomyResultItemBrandReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 160));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 152) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 156) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDLocalizedQueryUnderstandingTaxonomyResultItemBrandReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDLocalizedQueryUnderstandingTaxonomyResultItemBrandReadAllFrom_initialTag;
  Specified = GEOPDLocalizedQueryUnderstandingTaxonomyResultItemBrandReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDLocalizedQueryUnderstandingTaxonomyResultItemBrandCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 160));
  return Specified;
}

void sub_188B5A7D4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B5AF94(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B5B608(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B5BD2C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDLocationDirectedSearchParametersReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  char v17;
  unsigned __int8 v18;
  int *v19;
  int *v20;
  int *v21;
  int *v22;
  char v23;
  unsigned int v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  BOOL v30;
  int v31;
  unint64_t v33;
  BOOL v34;
  int *v35;
  int v36;
  int v37;
  BOOL v38;
  char v39;
  unsigned int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  id v46;
  void *v47;
  int v48;
  char v49;
  unsigned int v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  uint64_t v55;
  void *v56;
  GEOPDViewportInfo *v57;
  uint64_t v58;
  char v59;
  unsigned int v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  char v64;
  char v65;
  uint64_t v66;
  __int16 v67;
  int v68;
  __int16 v69;
  void *v70;
  int v72;
  int *v73;
  char v74;
  char v75;
  char v76;
  BOOL v77;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 76);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 72));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 96)), (uint16x4_t)0xFFFCFFF9FFF8FFF7), (int8x8_t)0x1000100010001))+ ((*(_WORD *)(a1 + 96) >> 5) & 1)+ ((*(_WORD *)(a1 + 96) >> 6) & 1)+ ((*(_WORD *)(a1 + 96) >> 3) & 1));
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 > 3;
        v17 = v16 & ~(_BYTE)v11 | v9;
        v18 = v16 | v11;
        v74 = v17;
        v75 = v18 | v17;
        if (((v18 | v8) & 1) != 0)
          v19 = 0;
        else
          v19 = a3;
        v20 = (int *)MEMORY[0x1E0D82BF0];
        v76 = (v19 == 0) | v18;
        v77 = v18;
        v21 = (int *)MEMORY[0x1E0D82BC8];
        v22 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v7;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v20) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v21))
      goto LABEL_129;
    v23 = 0;
    v24 = 0;
    v25 = 0;
    while (1)
    {
      v26 = *v20;
      v27 = *(_QWORD *)(v3 + v26);
      v28 = v27 + 1;
      if (v27 == -1 || v28 > *(_QWORD *)(v3 + *v6))
        break;
      v29 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v27);
      *(_QWORD *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0)
        goto LABEL_25;
      v23 += 7;
      v30 = v24++ >= 9;
      if (v30)
      {
        v25 = 0;
        v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v21) = 1;
LABEL_25:
    v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(_BYTE *)(v3 + *v21))
      v25 = 0;
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_129:
      v72 = 1;
      goto LABEL_130;
    }
    v33 = v25 >> 3;
    v34 = v77;
    if ((v76 & 1) == 0)
    {
      v35 = v19;
      do
      {
        v37 = *v35++;
        v36 = v37;
        v34 = v37 != 0;
        if (v37)
          v38 = v36 == (_DWORD)v33;
        else
          v38 = 1;
      }
      while (!v38);
    }
    switch((int)v33)
    {
      case 1:
        if ((v8 & 1) == 0)
          goto LABEL_99;
        v39 = 0;
        v40 = 0;
        v41 = 0;
        *(_WORD *)(a1 + 96) |= 4u;
        while (1)
        {
          v42 = *v20;
          v43 = *(_QWORD *)(v3 + v42);
          v44 = v43 + 1;
          if (v43 == -1 || v44 > *(_QWORD *)(v3 + *v6))
            break;
          v45 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v43);
          *(_QWORD *)(v3 + v42) = v44;
          v41 |= (unint64_t)(v45 & 0x7F) << v39;
          if ((v45 & 0x80) == 0)
            goto LABEL_102;
          v39 += 7;
          v30 = v40++ >= 9;
          if (v30)
          {
            LODWORD(v41) = 0;
            goto LABEL_104;
          }
        }
        *(_BYTE *)(v3 + *v21) = 1;
LABEL_102:
        if (*(_BYTE *)(v3 + *v21))
          LODWORD(v41) = 0;
LABEL_104:
        v66 = 92;
        goto LABEL_113;
      case 2:
        if ((v8 & 1) == 0)
          goto LABEL_99;
        v49 = 0;
        v50 = 0;
        v41 = 0;
        *(_WORD *)(a1 + 96) |= 1u;
        while (2)
        {
          v51 = *v20;
          v52 = *(_QWORD *)(v3 + v51);
          v53 = v52 + 1;
          if (v52 == -1 || v53 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v54 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v52);
            *(_QWORD *)(v3 + v51) = v53;
            v41 |= (unint64_t)(v54 & 0x7F) << v49;
            if (v54 < 0)
            {
              v49 += 7;
              v30 = v50++ >= 9;
              if (v30)
              {
                LODWORD(v41) = 0;
                goto LABEL_108;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          LODWORD(v41) = 0;
LABEL_108:
        v66 = 84;
        goto LABEL_113;
      case 3:
        if (!v34)
          goto LABEL_99;
        if ((*(_WORD *)(a1 + 96) & 0x100) == 0)
        {
          PBReaderReadString();
          v55 = objc_claimAutoreleasedReturnValue();
          v56 = *(void **)(a1 + 56);
          *(_QWORD *)(a1 + 56) = v55;
          goto LABEL_98;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_150;
        v67 = *(_WORD *)(a1 + 96) << 7;
        goto LABEL_126;
      case 4:
        if (!v34)
          goto LABEL_99;
        if ((*(_WORD *)(a1 + 96) & 0x200) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_150;
          v67 = *(_WORD *)(a1 + 96) << 6;
          goto LABEL_126;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_150;
        v57 = objc_alloc_init(GEOPDViewportInfo);
        if (!GEOPDViewportInfoReadAllFrom((uint64_t)v57, (void *)v3))
          goto LABEL_149;
        PBReaderRecallMark();
        v58 = 64;
        goto LABEL_97;
      case 5:
        if (!v34)
          goto LABEL_99;
        if ((*(_WORD *)(a1 + 96) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_150;
          v67 = *(_WORD *)(a1 + 96) << 8;
          goto LABEL_126;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_150;
        v57 = objc_alloc_init(GEOLatLng);
        if (!GEOLatLngReadAllFrom((uint64_t)v57, (void *)v3))
          goto LABEL_149;
        PBReaderRecallMark();
        v58 = 48;
        goto LABEL_97;
      case 6:
        if ((v8 & 1) == 0)
          goto LABEL_99;
        v59 = 0;
        v60 = 0;
        v41 = 0;
        *(_WORD *)(a1 + 96) |= 2u;
        while (2)
        {
          v61 = *v20;
          v62 = *(_QWORD *)(v3 + v61);
          v63 = v62 + 1;
          if (v62 == -1 || v63 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v64 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v62);
            *(_QWORD *)(v3 + v61) = v63;
            v41 |= (unint64_t)(v64 & 0x7F) << v59;
            if (v64 < 0)
            {
              v59 += 7;
              v30 = v60++ >= 9;
              if (v30)
              {
                LODWORD(v41) = 0;
                goto LABEL_112;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          LODWORD(v41) = 0;
LABEL_112:
        v66 = 88;
LABEL_113:
        *(_DWORD *)(a1 + v66) = v41;
        goto LABEL_128;
      case 7:
        if (!v34)
          goto LABEL_99;
        if ((*(_WORD *)(a1 + 96) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_150;
          v67 = *(_WORD *)(a1 + 96) << 11;
          goto LABEL_126;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_150;
        v57 = objc_alloc_init(GEOPDNearestTransitParameters);
        if (!GEOPDNearestTransitParametersReadAllFrom((uint64_t)v57, (void *)v3))
          goto LABEL_149;
        PBReaderRecallMark();
        v58 = 24;
        goto LABEL_97;
      case 8:
        if (!v34)
          goto LABEL_99;
        if ((*(_WORD *)(a1 + 96) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_150;
          v67 = *(_WORD *)(a1 + 96) << 10;
          goto LABEL_126;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_150;
        v57 = objc_alloc_init(GEOPDPaginationParameters);
        if (!GEOPDPaginationParametersReadAllFrom((uint64_t)v57, (void *)v3))
          goto LABEL_149;
        PBReaderRecallMark();
        v58 = 32;
        goto LABEL_97;
      case 9:
        if (!v34)
          goto LABEL_99;
        if ((*(_WORD *)(a1 + 96) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_150;
          v67 = *(_WORD *)(a1 + 96) << 9;
LABEL_126:
          v7 += v67 >> 15;
LABEL_127:
          v21 = (int *)MEMORY[0x1E0D82BC8];
          v22 = (int *)MEMORY[0x1E0D82BB8];
          goto LABEL_128;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_150;
        v57 = objc_alloc_init(GEOPDSSearchFilter);
        if (GEOPDSSearchFilterReadAllFrom((uint64_t)v57, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          v58 = 40;
LABEL_97:
          v56 = *(void **)(a1 + v58);
          *(_QWORD *)(a1 + v58) = v57;
LABEL_98:

          --v7;
          goto LABEL_127;
        }
LABEL_149:

LABEL_150:
        v72 = 0;
        v73 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
        v21 = (int *)MEMORY[0x1E0D82BC8];
LABEL_131:
        if ((v74 & 1) != 0)
LABEL_132:
          *(_WORD *)(a1 + v73[354]) |= 8u;
        if (v77 || (v72 & 1) == 0)
        {
          *(_WORD *)(a1 + v73[354]) |= 0x100u;
          *(_WORD *)(a1 + v73[354]) |= 0x200u;
          *(_WORD *)(a1 + v73[354]) |= 0x80u;
          *(_WORD *)(a1 + v73[354]) |= 0x10u;
          *(_WORD *)(a1 + v73[354]) |= 0x20u;
          *(_WORD *)(a1 + v73[354]) |= 0x40u;
        }
        else if (v19)
        {
          while (1)
          {
            v68 = *v19++;
            v69 = 256;
            switch(v68)
            {
              case 0:
                goto LABEL_143;
              case 3:
                goto LABEL_142;
              case 4:
                v69 = 512;
                goto LABEL_142;
              case 5:
                v69 = 128;
                goto LABEL_142;
              case 7:
                v69 = 16;
                goto LABEL_142;
              case 8:
                v69 = 32;
                goto LABEL_142;
              case 9:
                v69 = 64;
LABEL_142:
                *(_WORD *)(a1 + v73[354]) |= v69;
                break;
              default:
                continue;
            }
          }
        }
LABEL_143:
        if (v72)
          v3 = *(_BYTE *)(v3 + *v21) == 0;
        else
          v3 = 0;
        if (v77)
        {
          v70 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      default:
        if ((v74 & 1) == 0 || (*(_WORD *)(a1 + 96) & 8) != 0)
        {
LABEL_99:
          v65 = PBReaderSkipValueWithTag();
          v22 = (int *)MEMORY[0x1E0D82BB8];
          v21 = (int *)MEMORY[0x1E0D82BC8];
          if ((v65 & 1) == 0)
          {
            v72 = 0;
LABEL_130:
            v73 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
            goto LABEL_131;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v46 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v47 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v46;

          }
          v48 = PBUnknownFieldAdd();
          v21 = (int *)MEMORY[0x1E0D82BC8];
          v22 = (int *)MEMORY[0x1E0D82BB8];
          if (!v48)
          {
            v72 = 0;
            v73 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
            goto LABEL_132;
          }
        }
LABEL_128:
        if (!(v75 & 1 | (v7 != 0)))
          goto LABEL_129;
        continue;
    }
  }
}

void sub_188B5C8C0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B5C9D0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B5CBBC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B5D23C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B5D318(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDLocationDirectedSearchParametersCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 64), "readAll:", 1);
  objc_msgSend(*(id *)(a1 + 48), "readAll:", 1);
  -[GEOPDSSearchFilter readAll:](*(_QWORD *)(a1 + 40), 1);
}

unint64_t GEOPDLocationDirectedSearchParametersReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 76))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDLocationDirectedSearchParametersReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 80));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 72) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 76) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDLocationDirectedSearchParametersReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDLocationDirectedSearchParametersReadAllFrom_initialTag;
  Specified = GEOPDLocationDirectedSearchParametersReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDLocationDirectedSearchParametersCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 80));
  return Specified;
}

void sub_188B5D5C8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B5D838(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

os_unfair_lock_s *_GEOPDLocationDirectedSearchParametersIsDirty(uint64_t a1)
{
  __int16 v2;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  v2 = *(_WORD *)(a1 + 96);
  if ((v2 & 0x7B0) != 0)
    return (os_unfair_lock_s *)1;
  if ((v2 & 0x40) != 0)
    return GEOPDSSearchFilterIsDirty(*(os_unfair_lock_s **)(a1 + 40));
  return 0;
}

os_unfair_lock_s *GEOPDLocationDirectedSearchParametersIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  os_unfair_lock_s *v2;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    v2 = _GEOPDLocationDirectedSearchParametersIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 20);
    return v2;
  }
  return result;
}

void sub_188B5DBF8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B5E100(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDLocationDirectedSearchResultReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  char v17;
  unsigned __int8 v18;
  char v19;
  int *v20;
  int *v21;
  int *v22;
  int *v23;
  char v24;
  unsigned int v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  int v32;
  unint64_t v34;
  BOOL v35;
  int *v36;
  int v37;
  int v38;
  BOOL v39;
  GEOPDPaginationInfo *v40;
  uint64_t v41;
  void *v42;
  id v43;
  void *v44;
  int v45;
  char v46;
  char v47;
  int v48;
  char v49;
  void *v50;
  int v52;
  int *v53;
  char v54;
  char v55;
  char v56;
  BOOL v57;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 52);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 48));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = ((*(unsigned __int8 *)(a1 + 60) >> 1) & 1)
      + (*(_BYTE *)(a1 + 60) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 2) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 3) & 1);
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 > 1;
        v17 = v16 & ~(_BYTE)v11 | v9;
        v18 = v16 | v11;
        v54 = v17;
        v19 = v18 | v17;
        if (((v18 | v8) & 1) != 0)
          v20 = 0;
        else
          v20 = a3;
        v57 = v18;
        v55 = v19;
        v56 = (v20 == 0) | v18;
        v21 = (int *)MEMORY[0x1E0D82BF0];
        v22 = (int *)MEMORY[0x1E0D82BC8];
        v23 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v7;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v21) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v22))
      goto LABEL_72;
    v24 = 0;
    v25 = 0;
    v26 = 0;
    while (1)
    {
      v27 = *v21;
      v28 = *(_QWORD *)(v3 + v27);
      v29 = v28 + 1;
      if (v28 == -1 || v29 > *(_QWORD *)(v3 + *v6))
        break;
      v30 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v28);
      *(_QWORD *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0)
        goto LABEL_25;
      v24 += 7;
      if (v25++ >= 9)
      {
        v26 = 0;
        v32 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v22) = 1;
LABEL_25:
    v32 = *(unsigned __int8 *)(v3 + *v22);
    if (*(_BYTE *)(v3 + *v22))
      v26 = 0;
LABEL_27:
    if (v32 || (v26 & 7) == 4)
    {
LABEL_72:
      v52 = 1;
      goto LABEL_73;
    }
    v34 = v26 >> 3;
    v35 = v57;
    if ((v56 & 1) == 0)
    {
      v36 = v20;
      do
      {
        v38 = *v36++;
        v37 = v38;
        v35 = v38 != 0;
        if (v38)
          v39 = v37 == (_DWORD)v34;
        else
          v39 = 1;
      }
      while (!v39);
    }
    if ((_DWORD)v34 != 3)
      break;
    if (v35)
    {
      if ((*(_BYTE *)(a1 + 60) & 8) == 0)
      {
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_90;
        v40 = objc_alloc_init(GEOPDPaginationInfo);
        if (!GEOPDPaginationInfoReadAllFrom((uint64_t)v40, (void *)v3, v10 & 1))
          goto LABEL_89;
        PBReaderRecallMark();
        v41 = 40;
        goto LABEL_51;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        goto LABEL_90;
      v47 = 16 * *(_BYTE *)(a1 + 60);
LABEL_69:
      v7 += v47 >> 7;
      goto LABEL_70;
    }
LABEL_63:
    v46 = PBReaderSkipValueWithTag();
    v22 = (int *)MEMORY[0x1E0D82BC8];
    if ((v46 & 1) == 0)
    {
      v52 = 0;
LABEL_73:
      v53 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
      goto LABEL_74;
    }
LABEL_71:
    if (!(v55 & 1 | (v7 != 0)))
      goto LABEL_72;
  }
  if ((_DWORD)v34 != 2)
  {
    if ((_DWORD)v34 == 1)
    {
      if (v35)
      {
        if ((*(_BYTE *)(a1 + 60) & 4) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_90;
          v40 = objc_alloc_init(GEOMapRegion);
          if (!GEOMapRegionReadAllFrom((uint64_t)v40, (void *)v3))
            goto LABEL_89;
          PBReaderRecallMark();
          v41 = 32;
LABEL_51:
          v42 = *(void **)(a1 + v41);
          *(_QWORD *)(a1 + v41) = v40;

          --v7;
LABEL_70:
          v22 = (int *)MEMORY[0x1E0D82BC8];
          goto LABEL_71;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_90;
        v47 = 32 * *(_BYTE *)(a1 + 60);
        goto LABEL_69;
      }
    }
    else if ((v54 & 1) != 0 && (*(_BYTE *)(a1 + 60) & 1) == 0)
    {
      if (!*(_QWORD *)(a1 + 16))
      {
        v43 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v44 = *(void **)(a1 + 16);
        *(_QWORD *)(a1 + 16) = v43;

      }
      v45 = PBUnknownFieldAdd();
      v22 = (int *)MEMORY[0x1E0D82BC8];
      if (!v45)
      {
        v52 = 0;
        v53 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
        goto LABEL_75;
      }
      goto LABEL_71;
    }
    goto LABEL_63;
  }
  if (!v35 || (*(_BYTE *)(a1 + 60) & 2) != 0)
    goto LABEL_63;
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_90;
  v40 = objc_alloc_init(GEOPDMultiLocalizedString);
  if (GEOPDMultiLocalizedStringReadAllFrom((uint64_t)v40, (void *)v3, v10 & 1))
  {
    PBReaderRecallMark();
    -[GEOPDLocationDirectedSearchResult _addNoFlagsDisambiguationLabel:](a1, v40);

    goto LABEL_70;
  }
LABEL_89:

LABEL_90:
  v52 = 0;
  v53 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
  v22 = (int *)MEMORY[0x1E0D82BC8];
LABEL_74:
  if ((v54 & 1) == 0)
    goto LABEL_76;
LABEL_75:
  *(_BYTE *)(a1 + v53[364]) |= 1u;
LABEL_76:
  if (v57 || (v52 & 1) == 0)
  {
    *(_BYTE *)(a1 + v53[364]) |= 4u;
    *(_BYTE *)(a1 + v53[364]) |= 2u;
    *(_BYTE *)(a1 + v53[364]) |= 8u;
  }
  else if (v20)
  {
    while (1)
    {
      v48 = *v20++;
      v49 = 4;
      switch(v48)
      {
        case 0:
          goto LABEL_83;
        case 1:
          goto LABEL_82;
        case 2:
          v49 = 2;
          goto LABEL_82;
        case 3:
          v49 = 8;
LABEL_82:
          *(_BYTE *)(a1 + v53[364]) |= v49;
          break;
        default:
          continue;
      }
    }
  }
LABEL_83:
  if (v52)
    v3 = *(_BYTE *)(v3 + *v22) == 0;
  else
    v3 = 0;
  if (v57)
  {
    v50 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_188B5E820(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B5EE28(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B5EF08(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDLocationDirectedSearchResultCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _BYTE v10[128];
  uint64_t v11;

  v11 = *MEMORY[0x1E0C80C00];
  objc_msgSend(*(id *)(a1 + 32), "readAll:", 1);
  v8 = 0u;
  v9 = 0u;
  v6 = 0u;
  v7 = 0u;
  v2 = *(id *)(a1 + 24);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v7;
    while (1)
    {
      if (*(_QWORD *)v7 != v5)
        objc_enumerationMutation(v2);
      if (!--v4)
      {
        v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
        if (!v4)
          break;
      }
    }
  }

  -[GEOPDPaginationInfo readAll:](*(_QWORD *)(a1 + 40), 1);
}

unint64_t GEOPDLocationDirectedSearchResultReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 52))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDLocationDirectedSearchResultReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 52) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDLocationDirectedSearchResultReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDLocationDirectedSearchResultReadAllFrom_initialTag;
  Specified = GEOPDLocationDirectedSearchResultReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDLocationDirectedSearchResultCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_188B5F26C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B5F4B4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL _GEOPDLocationDirectedSearchResultIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  if ((*(_BYTE *)(a1 + 60) & 0x16) != 0)
    return 1;
  if ((*(_BYTE *)(a1 + 60) & 8) != 0)
    return GEOPDPaginationInfoIsDirty(*(_QWORD *)(a1 + 40));
  return 0;
}

void sub_188B5F788(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDMapsHomeParametersReadAllFrom(uint64_t a1, void *a2, int a3)
{
  char *v5;
  int *v6;
  int *v7;
  int *v8;
  int *v9;
  char v10;
  unsigned int v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  BOOL v17;
  int v18;
  GEOPDCollectionSuggestionParameters *v20;
  void *v21;
  char v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  id v29;
  void *v30;
  _BOOL8 v31;

  v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    v6 = (int *)MEMORY[0x1E0D82BF0];
    v7 = (int *)MEMORY[0x1E0D82BD8];
    v8 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v5[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v5[*MEMORY[0x1E0D82BD8]])
    {
      v9 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v5[*v8])
          break;
        v10 = 0;
        v11 = 0;
        v12 = 0;
        while (1)
        {
          v13 = *v6;
          v14 = *(_QWORD *)&v5[v13];
          v15 = v14 + 1;
          if (v14 == -1 || v15 > *(_QWORD *)&v5[*v7])
            break;
          v16 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v14);
          *(_QWORD *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0)
            goto LABEL_13;
          v10 += 7;
          v17 = v11++ >= 9;
          if (v17)
          {
            v12 = 0;
            v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        v18 = v5[*v8];
        if (v5[*v8])
          v12 = 0;
LABEL_15:
        if (v18 || (v12 & 7) == 4)
          break;
        if ((v12 >> 3) == 3)
        {
          v22 = 0;
          v23 = 0;
          v24 = 0;
          *(_BYTE *)(a1 + 28) |= 1u;
          while (1)
          {
            v25 = *v6;
            v26 = *(_QWORD *)&v5[v25];
            v27 = v26 + 1;
            if (v26 == -1 || v27 > *(_QWORD *)&v5[*v7])
              break;
            v28 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v26);
            *(_QWORD *)&v5[v25] = v27;
            v24 |= (unint64_t)(v28 & 0x7F) << v22;
            if ((v28 & 0x80) == 0)
              goto LABEL_36;
            v22 += 7;
            v17 = v23++ >= 9;
            if (v17)
            {
              v24 = 0;
              goto LABEL_38;
            }
          }
          v5[*v8] = 1;
LABEL_36:
          if (v5[*v8])
            v24 = 0;
LABEL_38:
          *(_BYTE *)(a1 + 24) = v24 != 0;
        }
        else if ((v12 >> 3) == 2)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_42;
          v20 = objc_alloc_init(GEOPDCollectionSuggestionParameters);
          if (!GEOPDCollectionSuggestionParametersReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_42;
          }
          PBReaderRecallMark();
          v21 = *(void **)(a1 + 16);
          *(_QWORD *)(a1 + 16) = v20;

        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v29 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v30 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v29;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_42;
        }
      }
      while (*(_QWORD *)&v5[*v6] < *(_QWORD *)&v5[*v7]);
    }
    v31 = v5[*v8] == 0;
  }
  else
  {
LABEL_42:
    v31 = 0;
  }
  objc_sync_exit(v5);

  return v31;
}

void sub_188B5FFB8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDMapsHomeResultReadAllFrom(uint64_t a1, void *a2, int a3)
{
  char *v5;
  int *v6;
  int *v7;
  int *v8;
  int *v9;
  char v10;
  unsigned int v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  int v18;
  GEOPDMapsHomeSection *v20;
  id v21;
  void *v22;
  _BOOL8 v23;

  v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    v6 = (int *)MEMORY[0x1E0D82BF0];
    v7 = (int *)MEMORY[0x1E0D82BD8];
    v8 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v5[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v5[*MEMORY[0x1E0D82BD8]])
    {
      v9 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v5[*v8])
          break;
        v10 = 0;
        v11 = 0;
        v12 = 0;
        while (1)
        {
          v13 = *v6;
          v14 = *(_QWORD *)&v5[v13];
          v15 = v14 + 1;
          if (v14 == -1 || v15 > *(_QWORD *)&v5[*v7])
            break;
          v16 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v14);
          *(_QWORD *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0)
            goto LABEL_13;
          v10 += 7;
          if (v11++ >= 9)
          {
            v12 = 0;
            v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        v18 = v5[*v8];
        if (v5[*v8])
          v12 = 0;
LABEL_15:
        if (v18 || (v12 & 7) == 4)
          break;
        if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_29;
          v20 = objc_alloc_init(GEOPDMapsHomeSection);
          if (!GEOPDMapsHomeSectionReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          -[GEOPDMapsHomeResult addMapsHomeSection:](a1, v20);

        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v21 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v22 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v21;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_29;
        }
      }
      while (*(_QWORD *)&v5[*v6] < *(_QWORD *)&v5[*v7]);
    }
    v23 = v5[*v8] == 0;
  }
  else
  {
LABEL_29:
    v23 = 0;
  }
  objc_sync_exit(v5);

  return v23;
}

void sub_188B608F8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B60F80(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDMapsHomeSectionReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  int *v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  BOOL v28;
  int v29;
  unint64_t v31;
  BOOL v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  char v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  id v44;
  void *v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  GEOPDCollectionSuggestionResult *v49;
  uint64_t v50;
  void *v51;
  char v52;
  char v53;
  int v54;
  char v55;
  void *v56;
  int v58;
  int *v59;
  char v60;
  char v61;
  char v62;
  char v63;
  char v64;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 60);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 56));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = (vaddv_s16((int16x4_t)(*(_QWORD *)&vshl_u16((uint16x4_t)(*(_QWORD *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 72)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFCFFFDFFFBFFFELL) & 0xFF01FF01FF01FF01))+ ((*(_BYTE *)(a1 + 72) & 2) != 0));
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 > 2;
        v61 = v16 & ~(_BYTE)v11 | v9;
        v62 = v16 | v11 | v61;
        v60 = v8;
        if ((((v16 | v11) | v8) & 1) != 0)
          v17 = 0;
        else
          v17 = a3;
        v63 = (v17 == 0) | v16 | v11;
        v64 = v16 | v11;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v7;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v19))
      goto LABEL_89;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0)
        goto LABEL_25;
      v21 += 7;
      v28 = v22++ >= 9;
      if (v28)
      {
        v23 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_25:
    v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_27:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_89:
      v58 = 1;
      goto LABEL_90;
    }
    v31 = v23 >> 3;
    v32 = v64;
    if ((v63 & 1) == 0)
    {
      v33 = v17;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if ((v60 & 1) == 0)
          goto LABEL_72;
        v37 = 0;
        v38 = 0;
        v39 = 0;
        *(_BYTE *)(a1 + 72) |= 1u;
        while (1)
        {
          v40 = *v18;
          v41 = *(_QWORD *)(v3 + v40);
          v42 = v41 + 1;
          if (v41 == -1 || v42 > *(_QWORD *)(v3 + *v6))
            break;
          v43 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v41);
          *(_QWORD *)(v3 + v40) = v42;
          v39 |= (unint64_t)(v43 & 0x7F) << v37;
          if ((v43 & 0x80) == 0)
            goto LABEL_75;
          v37 += 7;
          v28 = v38++ >= 9;
          if (v28)
          {
            LODWORD(v39) = 0;
            goto LABEL_77;
          }
        }
        *(_BYTE *)(v3 + *v19) = 1;
LABEL_75:
        if (*(_BYTE *)(v3 + *v19))
          LODWORD(v39) = 0;
LABEL_77:
        *(_DWORD *)(a1 + 68) = v39;
        goto LABEL_88;
      case 2:
        if (!v32)
          goto LABEL_72;
        if ((*(_BYTE *)(a1 + 72) & 0x20) == 0)
        {
          PBReaderReadString();
          v47 = objc_claimAutoreleasedReturnValue();
          v48 = 48;
          goto LABEL_70;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_108;
        v53 = 4 * *(_BYTE *)(a1 + 72);
        goto LABEL_86;
      case 3:
        if (!v32)
          goto LABEL_72;
        if ((*(_BYTE *)(a1 + 72) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_108;
          v53 = 32 * *(_BYTE *)(a1 + 72);
          goto LABEL_86;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_108;
        v49 = objc_alloc_init(GEOPDCollectionSuggestionResult);
        if (!GEOPDCollectionSuggestionResultReadAllFrom((uint64_t)v49, (void *)v3, v10 & 1))
          goto LABEL_107;
        PBReaderRecallMark();
        v50 = 24;
        goto LABEL_66;
      case 4:
        if (!v32)
          goto LABEL_72;
        if ((*(_BYTE *)(a1 + 72) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_108;
          v53 = 16 * *(_BYTE *)(a1 + 72);
LABEL_86:
          v7 += v53 >> 7;
LABEL_87:
          v19 = (int *)MEMORY[0x1E0D82BC8];
          goto LABEL_88;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_108;
        v49 = objc_alloc_init(GEOPDGuidesLocationEntry);
        if (GEOPDGuidesLocationEntryReadAllFrom((uint64_t)v49, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          v50 = 32;
LABEL_66:
          v51 = *(void **)(a1 + v50);
          *(_QWORD *)(a1 + v50) = v49;
LABEL_71:

          --v7;
          goto LABEL_87;
        }
LABEL_107:

LABEL_108:
        v58 = 0;
        v59 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
        v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_91:
        if ((v61 & 1) != 0)
LABEL_92:
          *(_BYTE *)(a1 + v59[372]) |= 2u;
        if (v64 & 1 | ((v58 & 1) == 0))
        {
          *(_BYTE *)(a1 + v59[372]) |= 0x20u;
          *(_BYTE *)(a1 + v59[372]) |= 4u;
          *(_BYTE *)(a1 + v59[372]) |= 8u;
          *(_BYTE *)(a1 + v59[372]) |= 0x10u;
        }
        else if (v17)
        {
          while (1)
          {
            v54 = *v17++;
            v55 = 32;
            switch(v54)
            {
              case 0:
                goto LABEL_101;
              case 2:
                goto LABEL_100;
              case 3:
                v55 = 4;
                goto LABEL_100;
              case 4:
                v55 = 8;
                goto LABEL_100;
              case 5:
                v55 = 16;
LABEL_100:
                *(_BYTE *)(a1 + v59[372]) |= v55;
                break;
              default:
                continue;
            }
          }
        }
LABEL_101:
        if (v58)
          v3 = *(_BYTE *)(v3 + *v19) == 0;
        else
          v3 = 0;
        if ((v64 & 1) != 0)
        {
          v56 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      case 5:
        if (!v32)
          goto LABEL_72;
        if ((*(_BYTE *)(a1 + 72) & 0x10) == 0)
        {
          PBReaderReadString();
          v47 = objc_claimAutoreleasedReturnValue();
          v48 = 40;
LABEL_70:
          v51 = *(void **)(a1 + v48);
          *(_QWORD *)(a1 + v48) = v47;
          goto LABEL_71;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_108;
        v53 = 8 * *(_BYTE *)(a1 + 72);
        goto LABEL_86;
      default:
        if ((v61 & 1) == 0 || (*(_BYTE *)(a1 + 72) & 2) != 0)
        {
LABEL_72:
          v52 = PBReaderSkipValueWithTag();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if ((v52 & 1) == 0)
          {
            v58 = 0;
LABEL_90:
            v59 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
            goto LABEL_91;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v44 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v45 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v44;

          }
          v46 = PBUnknownFieldAdd();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if (!v46)
          {
            v58 = 0;
            v59 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
            goto LABEL_92;
          }
        }
LABEL_88:
        if (!(v62 & 1 | (v7 != 0)))
          goto LABEL_89;
        continue;
    }
  }
}

void sub_188B617AC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B61880(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B61C6C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B61D64(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDMapsHomeSectionReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 60))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDMapsHomeSectionReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 60) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDMapsHomeSectionReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDMapsHomeSectionReadAllFrom_initialTag;
  Specified = GEOPDMapsHomeSectionReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    -[GEOPDCollectionSuggestionResult readAll:](*(_QWORD *)(a1 + 24), 1);
    -[GEOPDGuidesLocationEntry readAll:](*(_QWORD *)(a1 + 32), 1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_188B61FE0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B62210(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B623FC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDMapsIdentifierPlaceLookupParametersReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  unint64_t v18;
  char v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  char v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  GEOPDMapsIdentifier *v33;
  id v34;
  void *v35;
  _BOOL8 v36;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        v18 = v10 >> 3;
        if ((v10 >> 3) == 4)
        {
          v26 = 0;
          v27 = 0;
          v28 = 0;
          *(_BYTE *)(a1 + 32) |= 2u;
          while (1)
          {
            v29 = *v4;
            v30 = *(_QWORD *)&v3[v29];
            v31 = v30 + 1;
            if (v30 == -1 || v31 > *(_QWORD *)&v3[*v5])
              break;
            v32 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v30);
            *(_QWORD *)&v3[v29] = v31;
            v28 |= (unint64_t)(v32 & 0x7F) << v26;
            if ((v32 & 0x80) == 0)
              goto LABEL_48;
            v26 += 7;
            v15 = v27++ >= 9;
            if (v15)
            {
              v28 = 0;
              goto LABEL_50;
            }
          }
          v3[*v6] = 1;
LABEL_48:
          if (v3[*v6])
            v28 = 0;
LABEL_50:
          *(_BYTE *)(a1 + 28) = v28 != 0;
        }
        else if ((_DWORD)v18 == 2)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_54;
          v33 = objc_alloc_init(GEOPDMapsIdentifier);
          if (!GEOPDMapsIdentifierReadAllFrom((uint64_t)v33, v3))
          {

            goto LABEL_54;
          }
          PBReaderRecallMark();
          -[GEOPDMapsIdentifierPlaceLookupParameters addMapsId:](a1, v33);

        }
        else if ((_DWORD)v18 == 1)
        {
          v19 = 0;
          v20 = 0;
          v21 = 0;
          *(_BYTE *)(a1 + 32) |= 1u;
          while (1)
          {
            v22 = *v4;
            v23 = *(_QWORD *)&v3[v22];
            v24 = v23 + 1;
            if (v23 == -1 || v24 > *(_QWORD *)&v3[*v5])
              break;
            v25 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v23);
            *(_QWORD *)&v3[v22] = v24;
            v21 |= (unint64_t)(v25 & 0x7F) << v19;
            if ((v25 & 0x80) == 0)
              goto LABEL_44;
            v19 += 7;
            v15 = v20++ >= 9;
            if (v15)
            {
              LODWORD(v21) = 0;
              goto LABEL_46;
            }
          }
          v3[*v6] = 1;
LABEL_44:
          if (v3[*v6])
            LODWORD(v21) = 0;
LABEL_46:
          *(_DWORD *)(a1 + 24) = v21;
        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v34 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v35 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v34;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_54;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v36 = v3[*v6] == 0;
  }
  else
  {
LABEL_54:
    v36 = 0;
  }
  objc_sync_exit(v3);

  return v36;
}

void sub_188B62F20(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDMapsIdentifierPlaceLookupResultReadAllFrom(uint64_t a1, void *a2)
{
  unsigned __int8 *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  int v8;
  char v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  char v17;
  BOOL v18;
  id v19;
  void *v20;
  _BOOL8 v21;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    v7 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      v8 = v3[*v6];
      if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
        break;
      if (v3[*v6])
      {
        v8 = 1;
        break;
      }
      v9 = 0;
      v10 = 0;
      v11 = 0;
      while (1)
      {
        v12 = *v4;
        v13 = *(_QWORD *)&v3[v12];
        v14 = v13 + 1;
        if (v13 == -1 || v14 > *(_QWORD *)&v3[*v5])
          break;
        v15 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v13);
        *(_QWORD *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0)
          goto LABEL_13;
        v9 += 7;
        if (v10++ >= 9)
        {
          v17 = 0;
          v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      v8 = v3[*v6];
      if (v3[*v6])
        v17 = 0;
      else
        v17 = v11;
LABEL_16:
      if (v8)
        v18 = 1;
      else
        v18 = (v17 & 7) == 4;
      if (v18)
        break;
      if (!*(_QWORD *)(a1 + 8))
      {
        v19 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v20 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = v19;

      }
      if ((PBUnknownFieldAdd() & 1) == 0)
        goto LABEL_23;
    }
    v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_188B63924(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B63BA4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDMapsSearchHomeParametersReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  char v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  int *v22;
  char v23;
  unsigned int v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  BOOL v30;
  int v31;
  int v32;
  int *v34;
  unint64_t v35;
  BOOL v36;
  int *v37;
  int v38;
  int v39;
  BOOL v40;
  int v41;
  char v42;
  unsigned int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  char v48;
  id v49;
  void *v50;
  int v51;
  GEOPDSearchBrowseCategorySuggestionParameters *v52;
  void *v53;
  uint64_t v54;
  void *v55;
  char v56;
  __int16 v57;
  char v58;
  char v59;
  char v60;
  char v61;
  char v62;
  char v63;
  unsigned int v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  char v69;
  int v70;
  __int16 v71;
  void *v72;
  char v74;
  char v75;
  int v76;
  char v77;
  char v78;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 104));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 100);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 96));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = (*(_WORD *)(a1 + 108) & 1)
      + (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 108)), (uint16x4_t)0xFFFBFFFEFFFFFFFALL), (int8x8_t)0x1000100010001))+ ((*(_WORD *)(a1 + 108) >> 4) & 1)+ ((*(_WORD *)(a1 + 108) >> 3) & 1)+ ((*(_WORD *)(a1 + 108) >> 7) & 1));
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 > 4;
        v17 = v16 | v11;
        if ((((v16 | v11) | v8) & 1) != 0)
          v18 = 0;
        else
          v18 = a3;
        v19 = (int *)MEMORY[0x1E0D82BF0];
        v76 = 1;
        v20 = (int *)MEMORY[0x1E0D82BC8];
        v21 = v16 & ~(_BYTE)v11 | v9;
        if (*(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(v3 + *v6))
          goto LABEL_127;
        v74 = v16 & ~(_BYTE)v11 | v9;
        v75 = v17 | v74;
        v78 = (v18 == 0) | v17;
        v22 = (int *)MEMORY[0x1E0D82BB8];
        v77 = v16 | v11;
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v7;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_BYTE *)(v3 + *v20))
      goto LABEL_125;
    v23 = 0;
    v24 = 0;
    v25 = 0;
    while (1)
    {
      v26 = *v19;
      v27 = *(_QWORD *)(v3 + v26);
      v28 = v27 + 1;
      if (v27 == -1 || v28 > *(_QWORD *)(v3 + *v6))
        break;
      v29 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v27);
      *(_QWORD *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0)
        goto LABEL_25;
      v23 += 7;
      v30 = v24++ >= 9;
      if (v30)
      {
        v25 = 0;
        v31 = *(unsigned __int8 *)(v3 + *v20);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v20) = 1;
LABEL_25:
    v31 = *(unsigned __int8 *)(v3 + *v20);
    if (*(_BYTE *)(v3 + *v20))
      v25 = 0;
LABEL_27:
    v32 = v25 & 7;
    if (v31 || v32 == 4)
    {
LABEL_125:
      v76 = 1;
      goto LABEL_126;
    }
    v34 = v20;
    v35 = v25 >> 3;
    v36 = v17;
    if ((v78 & 1) == 0)
    {
      v37 = v18;
      do
      {
        v39 = *v37++;
        v38 = v39;
        v36 = v39 != 0;
        if (v39)
          v40 = v38 == (_DWORD)v35;
        else
          v40 = 1;
      }
      while (!v40);
    }
    switch((int)v35)
    {
      case 1:
        v20 = v34;
        if (!v36 || (*(_WORD *)(a1 + 108) & 2) != 0)
          goto LABEL_93;
        v6 = (int *)MEMORY[0x1E0D82BD8];
        if (v32 == 2)
        {
          v41 = PBReaderPlaceMark();
          v22 = (int *)MEMORY[0x1E0D82BB8];
          if (!v41)
            goto LABEL_147;
          while (*(_QWORD *)(v3 + *v19) < *(_QWORD *)(v3 + *v6) && !*(_BYTE *)(v3 + *v20))
          {
            v42 = 0;
            v43 = 0;
            v44 = 0;
            while (1)
            {
              v45 = *v19;
              v46 = *(_QWORD *)(v3 + v45);
              v47 = v46 + 1;
              if (v46 == -1 || v47 > *(_QWORD *)(v3 + *v6))
                break;
              v48 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v46);
              *(_QWORD *)(v3 + v45) = v47;
              v44 |= (unint64_t)(v48 & 0x7F) << v42;
              if (v48 < 0)
              {
                v42 += 7;
                v30 = v43++ >= 9;
                if (!v30)
                  continue;
              }
              goto LABEL_53;
            }
            *(_BYTE *)(v3 + *v20) = 1;
LABEL_53:
            PBRepeatedInt32Add();
          }
          PBReaderRecallMark();
        }
        else
        {
          v63 = 0;
          v64 = 0;
          v65 = 0;
          v22 = (int *)MEMORY[0x1E0D82BB8];
          while (1)
          {
            v66 = *v19;
            v67 = *(_QWORD *)(v3 + v66);
            v68 = v67 + 1;
            if (v67 == -1 || v68 > *(_QWORD *)(v3 + *v6))
              break;
            v69 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v67);
            *(_QWORD *)(v3 + v66) = v68;
            v65 |= (unint64_t)(v69 & 0x7F) << v63;
            if (v69 < 0)
            {
              v63 += 7;
              v30 = v64++ >= 9;
              if (!v30)
                continue;
            }
            goto LABEL_123;
          }
          *(_BYTE *)(v3 + *v20) = 1;
LABEL_123:
          PBRepeatedInt32Add();
        }
        v17 = v77;
        goto LABEL_111;
      case 2:
        v20 = v34;
        if (!v36)
          goto LABEL_93;
        v6 = (int *)MEMORY[0x1E0D82BD8];
        if ((*(_WORD *)(a1 + 108) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_147;
          v57 = *(_WORD *)(a1 + 108) << 9;
          goto LABEL_108;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_147;
        v52 = objc_alloc_init(GEOPDSearchBrowseCategorySuggestionParameters);
        if (!GEOPDSearchBrowseCategorySuggestionParametersReadAllFrom((uint64_t)v52, (void *)v3, v10 & 1))
          goto LABEL_146;
        PBReaderRecallMark();
        v53 = *(void **)(a1 + 80);
        *(_QWORD *)(a1 + 80) = v52;

        --v7;
        goto LABEL_109;
      case 3:
        v20 = v34;
        if (!v36)
          goto LABEL_93;
        if ((*(_WORD *)(a1 + 108) & 4) != 0)
        {
          v58 = PBReaderSkipValueWithTag();
          v6 = (int *)MEMORY[0x1E0D82BD8];
          if ((v58 & 1) == 0)
            goto LABEL_147;
          v57 = *(_WORD *)(a1 + 108) << 13;
          goto LABEL_108;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_147;
        v52 = objc_alloc_init(GEOPDCollectionSuggestionParameters);
        if (!GEOPDCollectionSuggestionParametersReadAllFrom((uint64_t)v52, (void *)v3, v10 & 1))
          goto LABEL_146;
        PBReaderRecallMark();
        v54 = 48;
        goto LABEL_90;
      case 4:
        v20 = v34;
        if (!v36)
          goto LABEL_93;
        if ((*(_WORD *)(a1 + 108) & 0x20) != 0)
        {
          v59 = PBReaderSkipValueWithTag();
          v6 = (int *)MEMORY[0x1E0D82BD8];
          if ((v59 & 1) == 0)
            goto LABEL_147;
          v57 = *(_WORD *)(a1 + 108) << 10;
          goto LABEL_108;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_147;
        v52 = objc_alloc_init(GEOPDPublisherSuggestionParameters);
        if (!GEOPDPublisherSuggestionParametersReadAllFrom((uint64_t)v52, (void *)v3))
          goto LABEL_146;
        PBReaderRecallMark();
        v54 = 72;
        goto LABEL_90;
      case 5:
        v20 = v34;
        if (!v36)
          goto LABEL_93;
        if ((*(_WORD *)(a1 + 108) & 0x10) != 0)
        {
          v60 = PBReaderSkipValueWithTag();
          v6 = (int *)MEMORY[0x1E0D82BD8];
          if ((v60 & 1) == 0)
            goto LABEL_147;
          v57 = *(_WORD *)(a1 + 108) << 11;
          goto LABEL_108;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_147;
        v52 = objc_alloc_init(GEOPDPlaceSuggestionParameters);
        if (!GEOPDPlaceSuggestionParametersReadAllFrom((uint64_t)v52, (void *)v3, v10 & 1))
          goto LABEL_146;
        PBReaderRecallMark();
        v54 = 64;
        goto LABEL_90;
      case 6:
        v20 = v34;
        if (!v36)
          goto LABEL_93;
        if ((*(_WORD *)(a1 + 108) & 8) != 0)
        {
          v61 = PBReaderSkipValueWithTag();
          v6 = (int *)MEMORY[0x1E0D82BD8];
          if ((v61 & 1) == 0)
            goto LABEL_147;
          v57 = *(_WORD *)(a1 + 108) << 12;
          goto LABEL_108;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_147;
        v52 = objc_alloc_init(GEOPDGuidesLocationsSuggestionParameters);
        if (!GEOPDGuidesLocationsSuggestionParametersReadAllFrom((uint64_t)v52, (void *)v3))
          goto LABEL_146;
        PBReaderRecallMark();
        v54 = 56;
        goto LABEL_90;
      case 7:
        v20 = v34;
        if (!v36)
        {
LABEL_93:
          v56 = PBReaderSkipValueWithTag();
          v17 = v77;
LABEL_94:
          v6 = (int *)MEMORY[0x1E0D82BD8];
          v22 = (int *)MEMORY[0x1E0D82BB8];
          if ((v56 & 1) == 0)
          {
            v76 = 0;
            goto LABEL_126;
          }
LABEL_111:
          if (!(v75 & 1 | (v7 != 0)) || *(_QWORD *)(v3 + *v19) >= *(_QWORD *)(v3 + *v6))
            goto LABEL_125;
          continue;
        }
        if ((*(_WORD *)(a1 + 108) & 0x80) != 0)
        {
          v62 = PBReaderSkipValueWithTag();
          v6 = (int *)MEMORY[0x1E0D82BD8];
          if ((v62 & 1) == 0)
            goto LABEL_147;
          v57 = *(_WORD *)(a1 + 108) << 8;
LABEL_108:
          v7 += v57 >> 15;
LABEL_109:
          v17 = v77;
LABEL_110:
          v22 = (int *)MEMORY[0x1E0D82BB8];
          goto LABEL_111;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_147;
        v52 = objc_alloc_init(GEOPDSearchOriginationInfo);
        if (GEOPDSearchOriginationInfoReadAllFrom((uint64_t)v52, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          v54 = 88;
LABEL_90:
          v55 = *(void **)(a1 + v54);
          *(_QWORD *)(a1 + v54) = v52;

          --v7;
          v17 = v77;
          v6 = (int *)MEMORY[0x1E0D82BD8];
          goto LABEL_110;
        }
LABEL_146:

LABEL_147:
        v76 = 0;
        v17 = v77;
LABEL_126:
        v21 = v74;
LABEL_127:
        if ((v21 & 1) != 0)
LABEL_128:
          *(_WORD *)(a1 + 108) |= 1u;
        if (v17 & 1 | ((v76 & 1) == 0))
        {
          *(_WORD *)(a1 + 108) |= 2u;
          *(_WORD *)(a1 + 108) |= 0x40u;
          *(_WORD *)(a1 + 108) |= 4u;
          *(_WORD *)(a1 + 108) |= 0x20u;
          *(_WORD *)(a1 + 108) |= 0x10u;
          *(_WORD *)(a1 + 108) |= 8u;
          *(_WORD *)(a1 + 108) |= 0x80u;
        }
        else if (v18)
        {
          while (1)
          {
            v70 = *v18++;
            v71 = 2;
            switch(v70)
            {
              case 0:
                goto LABEL_140;
              case 1:
                goto LABEL_139;
              case 2:
                v71 = 64;
                goto LABEL_139;
              case 3:
                v71 = 4;
                goto LABEL_139;
              case 4:
                v71 = 32;
                goto LABEL_139;
              case 5:
                v71 = 16;
                goto LABEL_139;
              case 6:
                v71 = 8;
                goto LABEL_139;
              case 7:
                v71 = 128;
LABEL_139:
                *(_WORD *)(a1 + 108) |= v71;
                break;
              default:
                continue;
            }
          }
        }
LABEL_140:
        if (v76)
        {
          v3 = *(_BYTE *)(v3 + *v20) == 0;
          if ((v17 & 1) == 0)
            return v3;
LABEL_144:
          v72 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        else
        {
          v3 = 0;
          if ((v17 & 1) != 0)
            goto LABEL_144;
        }
        return v3;
      default:
        if ((v74 & 1) == 0 || (*(_WORD *)(a1 + 108) & 1) != 0)
        {
          v56 = PBReaderSkipValueWithTag();
          v17 = v77;
          v20 = v34;
          goto LABEL_94;
        }
        if (!*(_QWORD *)(a1 + 16))
        {
          v49 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
          v50 = *(void **)(a1 + 16);
          *(_QWORD *)(a1 + 16) = v49;

        }
        v51 = PBUnknownFieldAdd();
        v17 = v77;
        v20 = v34;
        v6 = (int *)MEMORY[0x1E0D82BD8];
        v22 = (int *)MEMORY[0x1E0D82BB8];
        if (!v51)
        {
          v76 = 0;
          goto LABEL_128;
        }
        goto LABEL_111;
    }
  }
}

void sub_188B64780(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B64890(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B649A0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B64AB0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B64BBC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B64CCC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B65318(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDMapsSearchHomeParametersCallReadAllRecursiveWithoutSynchronized(uint64_t *a1)
{
  -[GEOPDSearchBrowseCategorySuggestionParameters readAll:](a1[10], 1);
  -[GEOPDCollectionSuggestionParameters readAll:](a1[6], 1);
  -[GEOPDPlaceSuggestionParameters readAll:](a1[8], 1);
  -[GEOPDSearchOriginationInfo readAll:](a1[11], 1);
}

unint64_t GEOPDMapsSearchHomeParametersReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 100))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDMapsSearchHomeParametersReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 104));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 96) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 100) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDMapsSearchHomeParametersReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDMapsSearchHomeParametersReadAllFrom_initialTag;
  Specified = GEOPDMapsSearchHomeParametersReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDMapsSearchHomeParametersCallReadAllRecursiveWithoutSynchronized((uint64_t *)a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 104));
  return Specified;
}

void sub_188B655DC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchBrowseCategorySuggestionParametersIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  BOOL v13;
  uint64_t v14;
  int v15;
  int v16;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  int v25;
  BOOL v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  int v31;
  unsigned int v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  int v40;
  unsigned int v41;
  unsigned int v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  int v46;
  unsigned int v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  int v51;
  unsigned int v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  int v56;
  unsigned int v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  int v61;
  unsigned int v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  int v66;
  _BOOL8 v67;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (!a1[*v4])
    {
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        v13 = v7++ >= 9;
        if (v13)
        {
          v8 = 0;
          v14 = *v4;
          v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = *v4;
      v15 = a1[v14];
      if (a1[v14])
        v8 = 0;
LABEL_14:
      v16 = v8 & 7;
      if (v15 || v16 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v16 == 2 && PBReaderPlaceMark() && GEOPDViewportInfoIsValid(a1))
            goto LABEL_103;
          goto LABEL_120;
        case 2u:
          if (v16 != 1)
            goto LABEL_120;
          v18 = *v2;
          v19 = *(_QWORD *)&a1[v18];
          if (v19 > 0xFFFFFFFFFFFFFFF7)
            goto LABEL_95;
          v20 = v19 + 8;
          if (v20 > *(_QWORD *)&a1[*v3])
            goto LABEL_95;
          *(_QWORD *)&a1[v18] = v20;
          goto LABEL_106;
        case 3u:
          if ((v8 & 7) != 0)
            goto LABEL_120;
          v21 = 0;
          while (1)
          {
            v22 = *v2;
            v23 = *(_QWORD *)&a1[v22];
            v24 = v23 + 1;
            if (v23 == -1 || v24 > *(_QWORD *)&a1[*v3])
              goto LABEL_94;
            v25 = *(char *)(*(_QWORD *)&a1[*v5] + v23);
            *(_QWORD *)&a1[v22] = v24;
            if (v25 < 0)
            {
              v26 = v21++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_106;
          }
        case 4u:
          if ((v8 & 7) != 0)
            goto LABEL_120;
          v27 = 0;
          while (1)
          {
            v28 = *v2;
            v29 = *(_QWORD *)&a1[v28];
            v30 = v29 + 1;
            if (v29 == -1 || v30 > *(_QWORD *)&a1[*v3])
              goto LABEL_94;
            v31 = *(char *)(*(_QWORD *)&a1[*v5] + v29);
            *(_QWORD *)&a1[v28] = v30;
            if (v31 < 0)
            {
              v26 = v27++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_106;
          }
        case 5u:
          if ((v8 & 7) != 0)
            goto LABEL_120;
          v32 = 0;
          while (1)
          {
            v33 = *v2;
            v34 = *(_QWORD *)&a1[v33];
            v35 = v34 + 1;
            if (v34 == -1 || v35 > *(_QWORD *)&a1[*v3])
              goto LABEL_94;
            v36 = *(char *)(*(_QWORD *)&a1[*v5] + v34);
            *(_QWORD *)&a1[v33] = v35;
            if (v36 < 0)
            {
              v26 = v32++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_106;
          }
        case 6u:
          if (v16 == 2)
          {
            if (!PBReaderPlaceMark())
            {
LABEL_120:
              PBReaderRecallMark();
              return 0;
            }
LABEL_109:
            while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
            {
              v62 = a1[*v4];
              if (a1[*v4])
                break;
              while (1)
              {
                v63 = *v2;
                v64 = *(_QWORD *)&a1[v63];
                v65 = v64 + 1;
                if (v64 == -1 || v65 > *(_QWORD *)&a1[*v3])
                  break;
                v66 = *(char *)(*(_QWORD *)&a1[*v5] + v64);
                *(_QWORD *)&a1[v63] = v65;
                if (v66 < 0)
                {
                  v13 = v62++ >= 9;
                  if (!v13)
                    continue;
                }
                goto LABEL_109;
              }
              a1[*v4] = 1;
            }
LABEL_103:
            PBReaderRecallMark();
          }
          else
          {
            if ((v8 & 7) != 0)
              goto LABEL_120;
            while (1)
            {
              v37 = *v2;
              v38 = *(_QWORD *)&a1[v37];
              v39 = v38 + 1;
              if (v38 == -1 || v39 > *(_QWORD *)&a1[*v3])
                break;
              v40 = *(char *)(*(_QWORD *)&a1[*v5] + v38);
              *(_QWORD *)&a1[v37] = v39;
              if (v40 < 0)
              {
                v41 = v16++;
                if (v41 <= 8)
                  continue;
              }
              goto LABEL_106;
            }
LABEL_94:
            v14 = *v4;
LABEL_95:
            a1[v14] = 1;
          }
LABEL_106:
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_118;
          break;
        case 7u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOPDVenueIdentifierIsValid(a1))
            goto LABEL_120;
          goto LABEL_103;
        case 8u:
          if ((v8 & 7) != 0)
            goto LABEL_120;
          v42 = 0;
          while (1)
          {
            v43 = *v2;
            v44 = *(_QWORD *)&a1[v43];
            v45 = v44 + 1;
            if (v44 == -1 || v45 > *(_QWORD *)&a1[*v3])
              goto LABEL_94;
            v46 = *(char *)(*(_QWORD *)&a1[*v5] + v44);
            *(_QWORD *)&a1[v43] = v45;
            if (v46 < 0)
            {
              v26 = v42++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_106;
          }
        case 9u:
          if ((v8 & 7) != 0)
            goto LABEL_120;
          v47 = 0;
          while (1)
          {
            v48 = *v2;
            v49 = *(_QWORD *)&a1[v48];
            v50 = v49 + 1;
            if (v49 == -1 || v50 > *(_QWORD *)&a1[*v3])
              goto LABEL_94;
            v51 = *(char *)(*(_QWORD *)&a1[*v5] + v49);
            *(_QWORD *)&a1[v48] = v50;
            if (v51 < 0)
            {
              v26 = v47++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_106;
          }
        case 0xAu:
          if ((v8 & 7) != 0)
            goto LABEL_120;
          v52 = 0;
          while (1)
          {
            v53 = *v2;
            v54 = *(_QWORD *)&a1[v53];
            v55 = v54 + 1;
            if (v54 == -1 || v55 > *(_QWORD *)&a1[*v3])
              goto LABEL_94;
            v56 = *(char *)(*(_QWORD *)&a1[*v5] + v54);
            *(_QWORD *)&a1[v53] = v55;
            if (v56 < 0)
            {
              v26 = v52++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_106;
          }
        case 0xBu:
          if ((v8 & 7) != 0)
            goto LABEL_120;
          v57 = 0;
          while (1)
          {
            v58 = *v2;
            v59 = *(_QWORD *)&a1[v58];
            v60 = v59 + 1;
            if (v59 == -1 || v60 > *(_QWORD *)&a1[*v3])
              goto LABEL_94;
            v61 = *(char *)(*(_QWORD *)&a1[*v5] + v59);
            *(_QWORD *)&a1[v58] = v60;
            if (v61 < 0)
            {
              v26 = v57++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_106;
          }
        case 0xCu:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOPDSSearchEvChargingParametersIsValid(a1))
            goto LABEL_120;
          goto LABEL_103;
        case 0xDu:
          if (v16 == 2 && PBReaderPlaceMark() && GEOPDSearchOriginationInfoIsValid(a1))
            goto LABEL_103;
          goto LABEL_120;
        case 0xEu:
          if (v16 == 2)
            goto LABEL_105;
          goto LABEL_120;
        default:
LABEL_105:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            goto LABEL_106;
          goto LABEL_120;
      }
    }
  }
LABEL_118:
  v67 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v67;
}

void sub_188B65DF0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL _GEOPDMapsSearchHomeParametersIsDirty(uint64_t a1)
{
  __int16 v2;
  uint64_t v4;
  int v5;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 104));
  v2 = *(_WORD *)(a1 + 108);
  if ((v2 & 0x102) != 0)
    return 1;
  if ((v2 & 0x40) != 0)
  {
    if ((GEOPDSearchBrowseCategorySuggestionParametersIsDirty(*(os_unfair_lock_s **)(a1 + 80)) & 1) != 0)
      return 1;
    v2 = *(_WORD *)(a1 + 108);
  }
  if ((v2 & 4) != 0)
  {
    if (GEOPDCollectionSuggestionParametersIsDirty(*(_QWORD *)(a1 + 48)))
      return 1;
    v2 = *(_WORD *)(a1 + 108);
  }
  if ((v2 & 0x20) != 0)
    return 1;
  if ((v2 & 0x10) != 0)
  {
    v4 = *(_QWORD *)(a1 + 64);
    if (v4)
    {
      os_unfair_lock_lock_with_options();
      os_unfair_lock_assert_owner((const os_unfair_lock *)(v4 + 56));
      v5 = *(_BYTE *)(v4 + 60) & 0x1E;
      os_unfair_lock_unlock((os_unfair_lock_t)(v4 + 56));
      if (v5)
        return 1;
    }
    v2 = *(_WORD *)(a1 + 108);
  }
  if ((v2 & 8) != 0)
    return 1;
  return (v2 & 0x80) != 0 && GEOPDSearchOriginationInfoIsDirty(*(_QWORD *)(a1 + 88));
}

os_unfair_lock_s *GEOPDMapsSearchHomeParametersIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  _BOOL8 IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOPDMapsSearchHomeParametersIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 26);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_188B66408(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDMapsSearchHomeResultReadAllFrom(uint64_t a1, void *a2, int a3)
{
  char *v5;
  int *v6;
  int *v7;
  int *v8;
  int *v9;
  char v10;
  unsigned int v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  int v18;
  GEOPDMapsSearchHomeSection *v20;
  id v21;
  void *v22;
  _BOOL8 v23;

  v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    v6 = (int *)MEMORY[0x1E0D82BF0];
    v7 = (int *)MEMORY[0x1E0D82BD8];
    v8 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v5[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v5[*MEMORY[0x1E0D82BD8]])
    {
      v9 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v5[*v8])
          break;
        v10 = 0;
        v11 = 0;
        v12 = 0;
        while (1)
        {
          v13 = *v6;
          v14 = *(_QWORD *)&v5[v13];
          v15 = v14 + 1;
          if (v14 == -1 || v15 > *(_QWORD *)&v5[*v7])
            break;
          v16 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v14);
          *(_QWORD *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0)
            goto LABEL_13;
          v10 += 7;
          if (v11++ >= 9)
          {
            v12 = 0;
            v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        v18 = v5[*v8];
        if (v5[*v8])
          v12 = 0;
LABEL_15:
        if (v18 || (v12 & 7) == 4)
          break;
        if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_29;
          v20 = objc_alloc_init(GEOPDMapsSearchHomeSection);
          if (!GEOPDMapsSearchHomeSectionReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          -[GEOPDMapsSearchHomeResult addMapsSearchHomeSection:](a1, v20);

        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v21 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v22 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v21;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_29;
        }
      }
      while (*(_QWORD *)&v5[*v6] < *(_QWORD *)&v5[*v7]);
    }
    v23 = v5[*v8] == 0;
  }
  else
  {
LABEL_29:
    v23 = 0;
  }
  objc_sync_exit(v5);

  return v23;
}

void sub_188B67254(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B67A8C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDMapsSearchHomeSectionReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  char v17;
  unsigned __int8 v18;
  int *v19;
  int *v20;
  int *v21;
  int *v22;
  char v23;
  unsigned int v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  BOOL v30;
  int v31;
  unint64_t v33;
  BOOL v34;
  int *v35;
  int v36;
  int v37;
  BOOL v38;
  char v39;
  unsigned int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  id v46;
  void *v47;
  int v48;
  uint64_t v49;
  void *v50;
  GEOPDSearchBrowseCategorySuggestionResult *v51;
  uint64_t v52;
  char v53;
  __int16 v54;
  int v55;
  __int16 v56;
  void *v57;
  int v59;
  int *v60;
  char v61;
  char v62;
  char v63;
  BOOL v64;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 76);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 72));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 88)), (uint16x4_t)0xFFFAFFFEFFFCFFF9), (int8x8_t)0x1000100010001))+ ((*(_WORD *)(a1 + 88) >> 5) & 1)+ ((*(_WORD *)(a1 + 88) >> 3) & 1)+ ((*(_WORD *)(a1 + 88) >> 1) & 1));
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 > 3;
        v17 = v16 & ~(_BYTE)v11 | v9;
        v18 = v16 | v11;
        v61 = v17;
        v62 = v18 | v17;
        if (((v18 | v8) & 1) != 0)
          v19 = 0;
        else
          v19 = a3;
        v63 = (v19 == 0) | v18;
        v64 = v18;
        v20 = (int *)MEMORY[0x1E0D82BF0];
        v21 = (int *)MEMORY[0x1E0D82BC8];
        v22 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v7;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v20) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v21))
      goto LABEL_104;
    v23 = 0;
    v24 = 0;
    v25 = 0;
    while (1)
    {
      v26 = *v20;
      v27 = *(_QWORD *)(v3 + v26);
      v28 = v27 + 1;
      if (v27 == -1 || v28 > *(_QWORD *)(v3 + *v6))
        break;
      v29 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v27);
      *(_QWORD *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0)
        goto LABEL_25;
      v23 += 7;
      v30 = v24++ >= 9;
      if (v30)
      {
        v25 = 0;
        v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v21) = 1;
LABEL_25:
    v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(_BYTE *)(v3 + *v21))
      v25 = 0;
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_104:
      v59 = 1;
      goto LABEL_105;
    }
    v33 = v25 >> 3;
    v34 = v64;
    if ((v63 & 1) == 0)
    {
      v35 = v19;
      do
      {
        v37 = *v35++;
        v36 = v37;
        v34 = v37 != 0;
        if (v37)
          v38 = v36 == (_DWORD)v33;
        else
          v38 = 1;
      }
      while (!v38);
    }
    switch((int)v33)
    {
      case 1:
        if ((v8 & 1) == 0)
          goto LABEL_83;
        v39 = 0;
        v40 = 0;
        v41 = 0;
        *(_WORD *)(a1 + 88) |= 1u;
        while (1)
        {
          v42 = *v20;
          v43 = *(_QWORD *)(v3 + v42);
          v44 = v43 + 1;
          if (v43 == -1 || v44 > *(_QWORD *)(v3 + *v6))
            break;
          v45 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v43);
          *(_QWORD *)(v3 + v42) = v44;
          v41 |= (unint64_t)(v45 & 0x7F) << v39;
          if ((v45 & 0x80) == 0)
            goto LABEL_86;
          v39 += 7;
          v30 = v40++ >= 9;
          if (v30)
          {
            LODWORD(v41) = 0;
            goto LABEL_88;
          }
        }
        *(_BYTE *)(v3 + *v21) = 1;
LABEL_86:
        if (*(_BYTE *)(v3 + *v21))
          LODWORD(v41) = 0;
LABEL_88:
        *(_DWORD *)(a1 + 84) = v41;
        goto LABEL_103;
      case 2:
        if (!v34)
          goto LABEL_83;
        if ((*(_WORD *)(a1 + 88) & 0x10) == 0)
        {
          PBReaderReadString();
          v49 = objc_claimAutoreleasedReturnValue();
          v50 = *(void **)(a1 + 40);
          *(_QWORD *)(a1 + 40) = v49;
          goto LABEL_82;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_125;
        v54 = *(_WORD *)(a1 + 88) << 11;
        goto LABEL_101;
      case 3:
        if (!v34)
          goto LABEL_83;
        if ((*(_WORD *)(a1 + 88) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_125;
          v54 = *(_WORD *)(a1 + 88) << 8;
          goto LABEL_101;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_125;
        v51 = objc_alloc_init(GEOPDSearchBrowseCategorySuggestionResult);
        if (!GEOPDSearchBrowseCategorySuggestionResultReadAllFrom((uint64_t)v51, (void *)v3, v10 & 1))
          goto LABEL_124;
        PBReaderRecallMark();
        v52 = 64;
        goto LABEL_81;
      case 4:
        if (!v34)
          goto LABEL_83;
        if ((*(_WORD *)(a1 + 88) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_125;
          v54 = *(_WORD *)(a1 + 88) << 13;
          goto LABEL_101;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_125;
        v51 = objc_alloc_init(GEOPDCollectionSuggestionResult);
        if (!GEOPDCollectionSuggestionResultReadAllFrom((uint64_t)v51, (void *)v3, v10 & 1))
          goto LABEL_124;
        PBReaderRecallMark();
        v52 = 24;
        goto LABEL_81;
      case 5:
        if (!v34)
          goto LABEL_83;
        if ((*(_WORD *)(a1 + 88) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_125;
          v54 = *(_WORD *)(a1 + 88) << 9;
          goto LABEL_101;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_125;
        v51 = objc_alloc_init(GEOPDPublisherSuggestionResult);
        if (!GEOPDPublisherSuggestionResultReadAllFrom((uint64_t)v51, (void *)v3))
          goto LABEL_124;
        PBReaderRecallMark();
        v52 = 56;
        goto LABEL_81;
      case 6:
        if (!v34)
          goto LABEL_83;
        if ((*(_WORD *)(a1 + 88) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_125;
          v54 = *(_WORD *)(a1 + 88) << 10;
          goto LABEL_101;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_125;
        v51 = objc_alloc_init(GEOPDPlaceSuggestionResult);
        if (!GEOPDPlaceSuggestionResultReadAllFrom((uint64_t)v51, (void *)v3))
          goto LABEL_124;
        PBReaderRecallMark();
        v52 = 48;
        goto LABEL_81;
      case 7:
        if (!v34)
          goto LABEL_83;
        if ((*(_WORD *)(a1 + 88) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_125;
          v54 = *(_WORD *)(a1 + 88) << 12;
LABEL_101:
          v7 += v54 >> 15;
LABEL_102:
          v21 = (int *)MEMORY[0x1E0D82BC8];
          v22 = (int *)MEMORY[0x1E0D82BB8];
          goto LABEL_103;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_125;
        v51 = objc_alloc_init(GEOPDGuidesLocationsSuggestionResult);
        if (GEOPDGuidesLocationsSuggestionResultReadAllFrom((uint64_t)v51, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          v52 = 32;
LABEL_81:
          v50 = *(void **)(a1 + v52);
          *(_QWORD *)(a1 + v52) = v51;
LABEL_82:

          --v7;
          goto LABEL_102;
        }
LABEL_124:

LABEL_125:
        v59 = 0;
        v60 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
        v21 = (int *)MEMORY[0x1E0D82BC8];
LABEL_106:
        if ((v61 & 1) != 0)
LABEL_107:
          *(_WORD *)(a1 + v60[391]) |= 2u;
        if (v64 || (v59 & 1) == 0)
        {
          *(_WORD *)(a1 + v60[391]) |= 0x10u;
          *(_WORD *)(a1 + v60[391]) |= 0x80u;
          *(_WORD *)(a1 + v60[391]) |= 4u;
          *(_WORD *)(a1 + v60[391]) |= 0x40u;
          *(_WORD *)(a1 + v60[391]) |= 0x20u;
          *(_WORD *)(a1 + v60[391]) |= 8u;
        }
        else if (v19)
        {
          while (1)
          {
            v55 = *v19++;
            v56 = 16;
            switch(v55)
            {
              case 0:
                goto LABEL_118;
              case 2:
                goto LABEL_117;
              case 3:
                v56 = 128;
                goto LABEL_117;
              case 4:
                v56 = 4;
                goto LABEL_117;
              case 5:
                v56 = 64;
                goto LABEL_117;
              case 6:
                v56 = 32;
                goto LABEL_117;
              case 7:
                v56 = 8;
LABEL_117:
                *(_WORD *)(a1 + v60[391]) |= v56;
                break;
              default:
                continue;
            }
          }
        }
LABEL_118:
        if (v59)
          v3 = *(_BYTE *)(v3 + *v21) == 0;
        else
          v3 = 0;
        if (v64)
        {
          v57 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      default:
        if ((v61 & 1) == 0 || (*(_WORD *)(a1 + 88) & 2) != 0)
        {
LABEL_83:
          v53 = PBReaderSkipValueWithTag();
          v22 = (int *)MEMORY[0x1E0D82BB8];
          v21 = (int *)MEMORY[0x1E0D82BC8];
          if ((v53 & 1) == 0)
          {
            v59 = 0;
LABEL_105:
            v60 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
            goto LABEL_106;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v46 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v47 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v46;

          }
          v48 = PBUnknownFieldAdd();
          v21 = (int *)MEMORY[0x1E0D82BC8];
          v22 = (int *)MEMORY[0x1E0D82BB8];
          if (!v48)
          {
            v59 = 0;
            v60 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
            goto LABEL_107;
          }
        }
LABEL_103:
        if (!(v62 & 1 | (v7 != 0)))
          goto LABEL_104;
        continue;
    }
  }
}

void sub_188B68464(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B6854C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B68634(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B68708(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B687BC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B68D18(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDMapsSearchHomeSectionReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 76))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDMapsSearchHomeSectionReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 80));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 72) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 76) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDMapsSearchHomeSectionReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDMapsSearchHomeSectionReadAllFrom_initialTag;
  Specified = GEOPDMapsSearchHomeSectionReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    -[GEOPDCollectionSuggestionResult readAll:](*(_QWORD *)(a1 + 24), 1);
    -[GEOPDGuidesLocationsSuggestionResult readAll:](*(_QWORD *)(a1 + 32), 1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 80));
  return Specified;
}

void sub_188B68F94(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchBrowseCategorySuggestionResultIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  _BOOL8 v17;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDBrowseCategoryIsValid(a1))
        {
LABEL_27:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_27;
      }
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

void sub_188B69400(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B69630(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B69C88(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDMerchantBrandLookupResponseReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  char v15;
  char v16;
  int *v17;
  int *v18;
  int *v19;
  char v20;
  int *v21;
  char v22;
  unsigned int v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  BOOL v29;
  int v30;
  int v31;
  int *v33;
  int *v34;
  unint64_t v35;
  BOOL v36;
  int *v37;
  int v38;
  int v39;
  BOOL v40;
  char v41;
  unsigned int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  char v47;
  id v48;
  void *v49;
  int v50;
  uint64_t v51;
  void *v52;
  void *v53;
  int v54;
  char v55;
  unsigned int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  char v61;
  int v62;
  char v63;
  unsigned int v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  char v69;
  char v70;
  unsigned int v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  char v76;
  char v77;
  unsigned int v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  char v82;
  int v83;
  char v84;
  unsigned int v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  char v90;
  char v91;
  uint64_t v92;
  char v93;
  char v94;
  unsigned int v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  char v100;
  char v101;
  unsigned int v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  char v107;
  char v108;
  unsigned int v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  unint64_t v113;
  char v114;
  int v115;
  __int16 v116;
  void *v117;
  char v119;
  char v120;
  int v121;
  char v122;
  char v123;

  v3 = a2;
  if (a2)
  {
    os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 136));
    v6 = (int *)MEMORY[0x1E0D82BD8];
    *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 132);
    objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 128));
    v7 = 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    v11 = (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 144)), (uint16x4_t)0xFFFAFFFBFFF8FFF9), (int8x8_t)0x1000100010001))+ ((*(_WORD *)(a1 + 144) >> 4) & 1)+ ((*(_WORD *)(a1 + 144) >> 3) & 1));
    while (2)
    {
      v12 = 1;
      v13 = 1;
      switch(a3[v7])
      {
        case -4:
          ++v11;
          goto LABEL_8;
        case -3:
          v8 = 1;
          goto LABEL_7;
        case -2:
        case -1:
          goto LABEL_9;
        case 0:
          v14 = v11 > 3;
          v15 = v14 & ~(_BYTE)v10 | v9;
          v16 = v14 | v10;
          if ((((v14 | v10) | v8) & 1) != 0)
            v17 = 0;
          else
            v17 = a3;
          v18 = (int *)MEMORY[0x1E0D82BF0];
          v121 = 1;
          v19 = (int *)MEMORY[0x1E0D82BC8];
          v20 = v15;
          if (*(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(v3 + *v6))
            goto LABEL_170;
          v119 = v15;
          v122 = v16 | v15;
          v123 = (v17 == 0) | v16;
          v21 = (int *)MEMORY[0x1E0D82BB8];
          v120 = v16;
          break;
        default:
          ++v11;
LABEL_7:
          v12 = v9;
LABEL_8:
          v13 = v10;
LABEL_9:
          ++v7;
          v9 = v12;
          v10 = v13;
          continue;
      }
      break;
    }
    do
    {
      if (*(_BYTE *)(v3 + *v19))
        break;
      v22 = 0;
      v23 = 0;
      v24 = 0;
      while (1)
      {
        v25 = *v18;
        v26 = *(_QWORD *)(v3 + v25);
        v27 = v26 + 1;
        if (v26 == -1 || v27 > *(_QWORD *)(v3 + *v6))
          break;
        v28 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v26);
        *(_QWORD *)(v3 + v25) = v27;
        v24 |= (unint64_t)(v28 & 0x7F) << v22;
        if ((v28 & 0x80) == 0)
          goto LABEL_24;
        v22 += 7;
        v29 = v23++ >= 9;
        if (v29)
        {
          v24 = 0;
          v30 = *(unsigned __int8 *)(v3 + *v19);
          goto LABEL_26;
        }
      }
      *(_BYTE *)(v3 + *v19) = 1;
LABEL_24:
      v30 = *(unsigned __int8 *)(v3 + *v19);
      if (*(_BYTE *)(v3 + *v19))
        v24 = 0;
LABEL_26:
      v31 = v24 & 7;
      if (v30 || v31 == 4)
        break;
      v33 = v21;
      v34 = v19;
      v35 = v24 >> 3;
      v36 = v16;
      if ((v123 & 1) == 0)
      {
        v37 = v17;
        do
        {
          v39 = *v37++;
          v38 = v39;
          v36 = v39 != 0;
          if (v39)
            v40 = v38 == (_DWORD)v35;
          else
            v40 = 1;
        }
        while (!v40);
      }
      switch((int)v35)
      {
        case 1:
          v19 = v34;
          if ((v8 & 1) == 0)
            goto LABEL_123;
          v41 = 0;
          v42 = 0;
          v43 = 0;
          *(_WORD *)(a1 + 144) |= 1u;
          v21 = v33;
          v6 = (int *)MEMORY[0x1E0D82BD8];
          while (1)
          {
            v44 = *v18;
            v45 = *(_QWORD *)(v3 + v44);
            v46 = v45 + 1;
            if (v45 == -1 || v46 > *(_QWORD *)(v3 + *v6))
              break;
            v47 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v45);
            *(_QWORD *)(v3 + v44) = v46;
            v43 |= (unint64_t)(v47 & 0x7F) << v41;
            if ((v47 & 0x80) == 0)
              goto LABEL_130;
            v41 += 7;
            v29 = v42++ >= 9;
            if (v29)
            {
              v43 = 0;
              goto LABEL_132;
            }
          }
          *(_BYTE *)(v3 + *v19) = 1;
LABEL_130:
          if (*(_BYTE *)(v3 + *v19))
            v43 = 0;
LABEL_132:
          v92 = 104;
          goto LABEL_141;
        case 2:
          v19 = v34;
          if (!v36)
            goto LABEL_123;
          v21 = v33;
          if ((*(_WORD *)(a1 + 144) & 0x100) == 0)
          {
            PBReaderReadString();
            v51 = objc_claimAutoreleasedReturnValue();
            v52 = *(void **)(a1 + 120);
            *(_QWORD *)(a1 + 120) = v51;

            --v7;
LABEL_60:
            v16 = v120;
            v6 = (int *)MEMORY[0x1E0D82BD8];
            break;
          }
          v93 = PBReaderSkipValueWithTag();
          v6 = (int *)MEMORY[0x1E0D82BD8];
          if ((v93 & 1) == 0)
          {
LABEL_188:
            v121 = 0;
            v16 = v120;
            goto LABEL_169;
          }
          v7 += *(unsigned __int16 *)(a1 + 144) << 23 >> 31;
          goto LABEL_167;
        case 3:
          v19 = v34;
          if (!v36 || (*(_WORD *)(a1 + 144) & 0x80) != 0)
            goto LABEL_123;
          PBReaderReadString();
          v53 = (void *)objc_claimAutoreleasedReturnValue();
          v21 = v33;
          if (v53)
            -[GEOPDMerchantBrandLookupResponse _addNoFlagsGeoHash:](a1, v53);

          goto LABEL_60;
        case 4:
          v19 = v34;
          if (!v36 || (*(_WORD *)(a1 + 144) & 0x20) != 0)
            goto LABEL_123;
          v21 = v33;
          if (v31 != 2)
          {
            v94 = 0;
            v95 = 0;
            v96 = 0;
            v6 = (int *)MEMORY[0x1E0D82BD8];
            while (1)
            {
              v97 = *v18;
              v98 = *(_QWORD *)(v3 + v97);
              v99 = v98 + 1;
              if (v98 == -1 || v99 > *(_QWORD *)(v3 + *v6))
                goto LABEL_165;
              v100 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v98);
              *(_QWORD *)(v3 + v97) = v99;
              v96 |= (unint64_t)(v100 & 0x7F) << v94;
              if (v100 < 0)
              {
                v94 += 7;
                v29 = v95++ >= 9;
                if (!v29)
                  continue;
              }
              goto LABEL_166;
            }
          }
          v54 = PBReaderPlaceMark();
          v6 = (int *)MEMORY[0x1E0D82BD8];
          if (!v54)
            goto LABEL_188;
          while (*(_QWORD *)(v3 + *v18) < *(_QWORD *)(v3 + *v6) && !*(_BYTE *)(v3 + *v19))
          {
            v55 = 0;
            v56 = 0;
            v57 = 0;
            while (1)
            {
              v58 = *v18;
              v59 = *(_QWORD *)(v3 + v58);
              v60 = v59 + 1;
              if (v59 == -1 || v60 > *(_QWORD *)(v3 + *v6))
                break;
              v61 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v59);
              *(_QWORD *)(v3 + v58) = v60;
              v57 |= (unint64_t)(v61 & 0x7F) << v55;
              if (v61 < 0)
              {
                v55 += 7;
                v29 = v56++ >= 9;
                if (!v29)
                  continue;
              }
              goto LABEL_75;
            }
            *(_BYTE *)(v3 + *v19) = 1;
LABEL_75:
            PBRepeatedUInt64Add();
          }
          goto LABEL_128;
        case 5:
          v19 = v34;
          if (!v36 || (*(_WORD *)(a1 + 144) & 0x40) != 0)
            goto LABEL_123;
          v21 = v33;
          if (v31 != 2)
          {
            v101 = 0;
            v102 = 0;
            v103 = 0;
            v6 = (int *)MEMORY[0x1E0D82BD8];
            while (1)
            {
              v104 = *v18;
              v105 = *(_QWORD *)(v3 + v104);
              v106 = v105 + 1;
              if (v105 == -1 || v106 > *(_QWORD *)(v3 + *v6))
                goto LABEL_165;
              v107 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v105);
              *(_QWORD *)(v3 + v104) = v106;
              v103 |= (unint64_t)(v107 & 0x7F) << v101;
              if (v107 < 0)
              {
                v101 += 7;
                v29 = v102++ >= 9;
                if (!v29)
                  continue;
              }
              goto LABEL_166;
            }
          }
          v62 = PBReaderPlaceMark();
          v6 = (int *)MEMORY[0x1E0D82BD8];
          if (!v62)
            goto LABEL_188;
          while (*(_QWORD *)(v3 + *v18) < *(_QWORD *)(v3 + *v6) && !*(_BYTE *)(v3 + *v19))
          {
            v63 = 0;
            v64 = 0;
            v65 = 0;
            while (1)
            {
              v66 = *v18;
              v67 = *(_QWORD *)(v3 + v66);
              v68 = v67 + 1;
              if (v67 == -1 || v68 > *(_QWORD *)(v3 + *v6))
                break;
              v69 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v67);
              *(_QWORD *)(v3 + v66) = v68;
              v65 |= (unint64_t)(v69 & 0x7F) << v63;
              if (v69 < 0)
              {
                v63 += 7;
                v29 = v64++ >= 9;
                if (!v29)
                  continue;
              }
              goto LABEL_90;
            }
            *(_BYTE *)(v3 + *v19) = 1;
LABEL_90:
            PBRepeatedUInt64Add();
          }
          goto LABEL_128;
        case 6:
          v19 = v34;
          if ((v8 & 1) == 0)
            goto LABEL_123;
          v70 = 0;
          v71 = 0;
          v72 = 0;
          *(_WORD *)(a1 + 144) |= 4u;
          v21 = v33;
          v6 = (int *)MEMORY[0x1E0D82BD8];
          while (2)
          {
            v73 = *v18;
            v74 = *(_QWORD *)(v3 + v73);
            v75 = v74 + 1;
            if (v74 == -1 || v75 > *(_QWORD *)(v3 + *v6))
            {
              *(_BYTE *)(v3 + *v19) = 1;
            }
            else
            {
              v76 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v74);
              *(_QWORD *)(v3 + v73) = v75;
              v72 |= (unint64_t)(v76 & 0x7F) << v70;
              if (v76 < 0)
              {
                v70 += 7;
                v29 = v71++ >= 9;
                if (v29)
                {
                  v72 = 0;
                  goto LABEL_136;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(v3 + *v19))
            v72 = 0;
LABEL_136:
          *(_BYTE *)(a1 + 140) = v72 != 0;
          break;
        case 7:
          v19 = v34;
          if ((v8 & 1) == 0)
            goto LABEL_123;
          v77 = 0;
          v78 = 0;
          v43 = 0;
          *(_WORD *)(a1 + 144) |= 2u;
          v21 = v33;
          v6 = (int *)MEMORY[0x1E0D82BD8];
          while (2)
          {
            v79 = *v18;
            v80 = *(_QWORD *)(v3 + v79);
            v81 = v80 + 1;
            if (v80 == -1 || v81 > *(_QWORD *)(v3 + *v6))
            {
              *(_BYTE *)(v3 + *v19) = 1;
            }
            else
            {
              v82 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v80);
              *(_QWORD *)(v3 + v79) = v81;
              v43 |= (unint64_t)(v82 & 0x7F) << v77;
              if (v82 < 0)
              {
                v77 += 7;
                v29 = v78++ >= 9;
                if (v29)
                {
                  v43 = 0;
                  goto LABEL_140;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(v3 + *v19))
            v43 = 0;
LABEL_140:
          v92 = 112;
LABEL_141:
          *(_QWORD *)(a1 + v92) = v43;
          break;
        case 8:
          v19 = v34;
          if (!v36 || (*(_WORD *)(a1 + 144) & 0x10) != 0)
          {
LABEL_123:
            v91 = PBReaderSkipValueWithTag();
            v16 = v120;
            goto LABEL_124;
          }
          v21 = v33;
          if (v31 == 2)
          {
            v83 = PBReaderPlaceMark();
            v6 = (int *)MEMORY[0x1E0D82BD8];
            if (!v83)
              goto LABEL_188;
            while (*(_QWORD *)(v3 + *v18) < *(_QWORD *)(v3 + *v6) && !*(_BYTE *)(v3 + *v19))
            {
              v84 = 0;
              v85 = 0;
              v86 = 0;
              while (1)
              {
                v87 = *v18;
                v88 = *(_QWORD *)(v3 + v87);
                v89 = v88 + 1;
                if (v88 == -1 || v89 > *(_QWORD *)(v3 + *v6))
                  break;
                v90 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v88);
                *(_QWORD *)(v3 + v87) = v89;
                v86 |= (unint64_t)(v90 & 0x7F) << v84;
                if (v90 < 0)
                {
                  v84 += 7;
                  v29 = v85++ >= 9;
                  if (!v29)
                    continue;
                }
                goto LABEL_121;
              }
              *(_BYTE *)(v3 + *v19) = 1;
LABEL_121:
              PBRepeatedUInt64Add();
            }
LABEL_128:
            PBReaderRecallMark();
          }
          else
          {
            v108 = 0;
            v109 = 0;
            v110 = 0;
            v6 = (int *)MEMORY[0x1E0D82BD8];
            while (1)
            {
              v111 = *v18;
              v112 = *(_QWORD *)(v3 + v111);
              v113 = v112 + 1;
              if (v112 == -1 || v113 > *(_QWORD *)(v3 + *v6))
                break;
              v114 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v112);
              *(_QWORD *)(v3 + v111) = v113;
              v110 |= (unint64_t)(v114 & 0x7F) << v108;
              if (v114 < 0)
              {
                v108 += 7;
                v29 = v109++ >= 9;
                if (!v29)
                  continue;
              }
              goto LABEL_166;
            }
LABEL_165:
            *(_BYTE *)(v3 + *v19) = 1;
LABEL_166:
            PBRepeatedUInt64Add();
          }
LABEL_167:
          v16 = v120;
          break;
        default:
          if ((v119 & 1) == 0 || (*(_WORD *)(a1 + 144) & 8) != 0)
          {
            v91 = PBReaderSkipValueWithTag();
            v16 = v120;
            v19 = v34;
LABEL_124:
            v21 = v33;
            v6 = (int *)MEMORY[0x1E0D82BD8];
            if ((v91 & 1) == 0)
            {
              v121 = 0;
              goto LABEL_169;
            }
          }
          else
          {
            if (!*(_QWORD *)(a1 + 16))
            {
              v48 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
              v49 = *(void **)(a1 + 16);
              *(_QWORD *)(a1 + 16) = v48;

            }
            v50 = PBUnknownFieldAdd();
            v16 = v120;
            v19 = v34;
            v21 = v33;
            v6 = (int *)MEMORY[0x1E0D82BD8];
            if (!v50)
            {
              v121 = 0;
              goto LABEL_171;
            }
          }
          break;
      }
    }
    while (v122 & 1 | (v7 != 0) && *(_QWORD *)(v3 + *v18) < *(_QWORD *)(v3 + *v6));
    v121 = 1;
LABEL_169:
    v20 = v119;
LABEL_170:
    if ((v20 & 1) != 0)
LABEL_171:
      *(_WORD *)(a1 + 144) |= 8u;
    if (v16 & 1 | ((v121 & 1) == 0))
    {
      *(_WORD *)(a1 + 144) |= 0x100u;
      *(_WORD *)(a1 + 144) |= 0x80u;
      *(_WORD *)(a1 + 144) |= 0x20u;
      *(_WORD *)(a1 + 144) |= 0x40u;
      *(_WORD *)(a1 + 144) |= 0x10u;
    }
    else if (v17)
    {
      while (1)
      {
        v115 = *v17++;
        v116 = 256;
        switch(v115)
        {
          case 0:
            goto LABEL_181;
          case 2:
            goto LABEL_180;
          case 3:
            v116 = 128;
            goto LABEL_180;
          case 4:
            v116 = 32;
            goto LABEL_180;
          case 5:
            v116 = 64;
            goto LABEL_180;
          case 8:
            v116 = 16;
LABEL_180:
            *(_WORD *)(a1 + 144) |= v116;
            break;
          default:
            continue;
        }
      }
    }
LABEL_181:
    if (v121)
    {
      v3 = *(_BYTE *)(v3 + *v19) == 0;
      if ((v16 & 1) == 0)
        return v3;
      goto LABEL_185;
    }
    v3 = 0;
    if ((v16 & 1) != 0)
    {
LABEL_185:
      v117 = *(void **)(a1 + 8);
      *(_QWORD *)(a1 + 8) = 0;

    }
  }
  return v3;
}

void sub_188B6AA94(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B6ADC8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B6B108(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B6B534(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B6C324(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDMerchantBrandLookupResponseReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 132))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDMerchantBrandLookupResponseReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 136));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 128) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 132) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDMerchantBrandLookupResponseReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDMerchantBrandLookupResponseReadAllFrom_initialTag;
  Specified = GEOPDMerchantBrandLookupResponseReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 136));
  return Specified;
}

void sub_188B6C4B0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDMerchantBrandLookupResponseIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  BOOL v13;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  int v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  int v31;
  unsigned int v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  int v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  int v46;
  unsigned int v47;
  unsigned int v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  int v52;
  unsigned int v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  int v57;
  unsigned int v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  int v62;
  _BOOL8 v63;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (!a1[*v4])
    {
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        v13 = v7++ >= 9;
        if (v13)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0)
            goto LABEL_104;
          v17 = 0;
          while (1)
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
              goto LABEL_69;
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if (v21 < 0)
            {
              v22 = v17++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_101;
          }
        case 2u:
          if (v15 == 2)
            goto LABEL_30;
          goto LABEL_104;
        case 3u:
          if (v15 == 2)
            goto LABEL_30;
          goto LABEL_104;
        case 4u:
          if (v15 != 2)
          {
            if ((v8 & 7) != 0)
              goto LABEL_104;
            while (1)
            {
              v23 = *v2;
              v24 = *(_QWORD *)&a1[v23];
              v25 = v24 + 1;
              if (v24 == -1 || v25 > *(_QWORD *)&a1[*v3])
                goto LABEL_69;
              v26 = *(char *)(*(_QWORD *)&a1[*v5] + v24);
              *(_QWORD *)&a1[v23] = v25;
              if (v26 < 0)
              {
                v27 = v15++;
                if (v27 <= 8)
                  continue;
              }
              goto LABEL_101;
            }
          }
          if (!PBReaderPlaceMark())
            goto LABEL_104;
LABEL_71:
          while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
          {
            v48 = a1[*v4];
            if (a1[*v4])
              break;
            while (1)
            {
              v49 = *v2;
              v50 = *(_QWORD *)&a1[v49];
              v51 = v50 + 1;
              if (v50 == -1 || v51 > *(_QWORD *)&a1[*v3])
                break;
              v52 = *(char *)(*(_QWORD *)&a1[*v5] + v50);
              *(_QWORD *)&a1[v49] = v51;
              if (v52 < 0)
              {
                v13 = v48++ >= 9;
                if (!v13)
                  continue;
              }
              goto LABEL_71;
            }
            a1[*v4] = 1;
          }
          goto LABEL_100;
        case 5u:
          if (v15 != 2)
          {
            if ((v8 & 7) != 0)
              goto LABEL_104;
            while (1)
            {
              v28 = *v2;
              v29 = *(_QWORD *)&a1[v28];
              v30 = v29 + 1;
              if (v29 == -1 || v30 > *(_QWORD *)&a1[*v3])
                goto LABEL_69;
              v31 = *(char *)(*(_QWORD *)&a1[*v5] + v29);
              *(_QWORD *)&a1[v28] = v30;
              if (v31 < 0)
              {
                v32 = v15++;
                if (v32 <= 8)
                  continue;
              }
              goto LABEL_101;
            }
          }
          if (!PBReaderPlaceMark())
            goto LABEL_104;
LABEL_81:
          while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
          {
            v53 = a1[*v4];
            if (a1[*v4])
              break;
            while (1)
            {
              v54 = *v2;
              v55 = *(_QWORD *)&a1[v54];
              v56 = v55 + 1;
              if (v55 == -1 || v56 > *(_QWORD *)&a1[*v3])
                break;
              v57 = *(char *)(*(_QWORD *)&a1[*v5] + v55);
              *(_QWORD *)&a1[v54] = v56;
              if (v57 < 0)
              {
                v13 = v53++ >= 9;
                if (!v13)
                  continue;
              }
              goto LABEL_81;
            }
            a1[*v4] = 1;
          }
          goto LABEL_100;
        case 6u:
          if ((v8 & 7) != 0)
            goto LABEL_104;
          v33 = 0;
          while (1)
          {
            v34 = *v2;
            v35 = *(_QWORD *)&a1[v34];
            v36 = v35 + 1;
            if (v35 == -1 || v36 > *(_QWORD *)&a1[*v3])
              goto LABEL_69;
            v37 = *(char *)(*(_QWORD *)&a1[*v5] + v35);
            *(_QWORD *)&a1[v34] = v36;
            if (v37 < 0)
            {
              v22 = v33++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_101;
          }
        case 7u:
          if ((v8 & 7) != 0)
            goto LABEL_104;
          v38 = 0;
          while (1)
          {
            v39 = *v2;
            v40 = *(_QWORD *)&a1[v39];
            v41 = v40 + 1;
            if (v40 == -1 || v41 > *(_QWORD *)&a1[*v3])
              goto LABEL_69;
            v42 = *(char *)(*(_QWORD *)&a1[*v5] + v40);
            *(_QWORD *)&a1[v39] = v41;
            if (v42 < 0)
            {
              v22 = v38++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_101;
          }
        case 8u:
          if (v15 == 2)
          {
            if (!PBReaderPlaceMark())
            {
LABEL_104:
              PBReaderRecallMark();
              return 0;
            }
LABEL_91:
            while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
            {
              v58 = a1[*v4];
              if (a1[*v4])
                break;
              while (1)
              {
                v59 = *v2;
                v60 = *(_QWORD *)&a1[v59];
                v61 = v60 + 1;
                if (v60 == -1 || v61 > *(_QWORD *)&a1[*v3])
                  break;
                v62 = *(char *)(*(_QWORD *)&a1[*v5] + v60);
                *(_QWORD *)&a1[v59] = v61;
                if (v62 < 0)
                {
                  v13 = v58++ >= 9;
                  if (!v13)
                    continue;
                }
                goto LABEL_91;
              }
              a1[*v4] = 1;
            }
LABEL_100:
            PBReaderRecallMark();
          }
          else
          {
            if ((v8 & 7) != 0)
              goto LABEL_104;
            while (1)
            {
              v43 = *v2;
              v44 = *(_QWORD *)&a1[v43];
              v45 = v44 + 1;
              if (v44 == -1 || v45 > *(_QWORD *)&a1[*v3])
                break;
              v46 = *(char *)(*(_QWORD *)&a1[*v5] + v44);
              *(_QWORD *)&a1[v43] = v45;
              if (v46 < 0)
              {
                v47 = v15++;
                if (v47 <= 8)
                  continue;
              }
              goto LABEL_101;
            }
LABEL_69:
            a1[*v4] = 1;
          }
LABEL_101:
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_102;
          break;
        default:
LABEL_30:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_104;
          goto LABEL_101;
      }
    }
  }
LABEL_102:
  v63 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v63;
}

void sub_188B6CD90(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B6D300(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B6D8A8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B6DB08(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDMerchantInformationReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint32x4_t v12;
  int8x16_t v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  int *v18;
  int *v19;
  int *v20;
  int *v21;
  char v22;
  unsigned int v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  BOOL v29;
  int v30;
  unint64_t v32;
  BOOL v33;
  int *v34;
  int v35;
  int v36;
  BOOL v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  void *v41;
  int v42;
  char v43;
  unsigned int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  void *v50;
  char v51;
  int v52;
  int v53;
  int v54;
  void *v55;
  int v57;
  char v58;
  char v59;
  char v60;
  char v61;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 144));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 140);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 136));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = *(_DWORD *)(a1 + 152);
  v12 = (uint32x4_t)vdupq_n_s32(v11);
  v13.i64[0] = 0x100000001;
  v13.i64[1] = 0x100000001;
  v14 = vaddvq_s32(vaddq_s32(vaddq_s32((int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v12, (uint32x4_t)xmmword_189CC9E00), v13), (int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v12, (uint32x4_t)xmmword_189CC9E10), v13)), (int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v12, (uint32x4_t)xmmword_189CC9E20), v13)))+ ((v11 >> 2) & 1)+ ((v11 >> 4) & 1)+ ((v11 >> 1) & 1);
  while (2)
  {
    v15 = 1;
    v16 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v14;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_9;
      case 0:
        v17 = v14 > 0xA;
        v58 = v17 & ~(_BYTE)v10 | v9;
        v59 = v17 | v10 | v58;
        if ((((v17 | v10) | v8) & 1) != 0)
          v18 = 0;
        else
          v18 = a3;
        v19 = (int *)MEMORY[0x1E0D82BF0];
        v20 = (int *)MEMORY[0x1E0D82BC8];
        v60 = (v18 == 0) | v17 | v10;
        v61 = v17 | v10;
        v21 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v14;
LABEL_7:
        v15 = v9;
LABEL_8:
        v16 = v10;
LABEL_9:
        ++v7;
        v9 = v15;
        v10 = v16;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v19) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v20))
      goto LABEL_132;
    v22 = 0;
    v23 = 0;
    v24 = 0;
    while (1)
    {
      v25 = *v19;
      v26 = *(_QWORD *)(v3 + v25);
      v27 = v26 + 1;
      if (v26 == -1 || v27 > *(_QWORD *)(v3 + *v6))
        break;
      v28 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v26);
      *(_QWORD *)(v3 + v25) = v27;
      v24 |= (unint64_t)(v28 & 0x7F) << v22;
      if ((v28 & 0x80) == 0)
        goto LABEL_24;
      v22 += 7;
      v29 = v23++ >= 9;
      if (v29)
      {
        v24 = 0;
        v30 = *(unsigned __int8 *)(v3 + *v20);
        goto LABEL_26;
      }
    }
    *(_BYTE *)(v3 + *v20) = 1;
LABEL_24:
    v30 = *(unsigned __int8 *)(v3 + *v20);
    if (*(_BYTE *)(v3 + *v20))
      v24 = 0;
LABEL_26:
    if (v30 || (v24 & 7) == 4)
    {
LABEL_132:
      v57 = 1;
      goto LABEL_133;
    }
    v32 = v24 >> 3;
    v33 = v61;
    if ((v60 & 1) == 0)
    {
      v34 = v18;
      do
      {
        v36 = *v34++;
        v35 = v36;
        v33 = v36 != 0;
        if (v36)
          v37 = v35 == (_DWORD)v32;
        else
          v37 = 1;
      }
      while (!v37);
    }
    switch((int)v32)
    {
      case 1:
        if (!v33)
          goto LABEL_95;
        if ((*(_BYTE *)(a1 + 153) & 2) == 0)
        {
          PBReaderReadString();
          v38 = objc_claimAutoreleasedReturnValue();
          v39 = 80;
          goto LABEL_94;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_159;
        v52 = (int)(*(_DWORD *)(a1 + 152) << 22) >> 31;
        goto LABEL_129;
      case 2:
        if (!v33)
          goto LABEL_95;
        if ((*(_BYTE *)(a1 + 152) & 0x80) == 0)
        {
          PBReaderReadString();
          v38 = objc_claimAutoreleasedReturnValue();
          v39 = 64;
          goto LABEL_94;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_159;
        v52 = (int)(*(_DWORD *)(a1 + 152) << 24) >> 31;
        goto LABEL_129;
      case 3:
        if (!v33)
          goto LABEL_95;
        if ((*(_BYTE *)(a1 + 153) & 1) == 0)
        {
          PBReaderReadString();
          v38 = objc_claimAutoreleasedReturnValue();
          v39 = 72;
          goto LABEL_94;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_159;
        v52 = (int)(*(_DWORD *)(a1 + 152) << 23) >> 31;
        goto LABEL_129;
      case 4:
        if (!v33)
          goto LABEL_95;
        if ((*(_BYTE *)(a1 + 152) & 0x20) == 0)
        {
          PBReaderReadString();
          v38 = objc_claimAutoreleasedReturnValue();
          v39 = 48;
          goto LABEL_94;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_159;
        v52 = (int)(*(_DWORD *)(a1 + 152) << 26) >> 31;
        goto LABEL_129;
      case 5:
        if (!v33)
          goto LABEL_95;
        if ((*(_BYTE *)(a1 + 153) & 8) == 0)
        {
          PBReaderReadString();
          v38 = objc_claimAutoreleasedReturnValue();
          v39 = 96;
          goto LABEL_94;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_159;
        v52 = (int)(*(_DWORD *)(a1 + 152) << 20) >> 31;
        goto LABEL_129;
      case 6:
        if (!v33)
          goto LABEL_95;
        if ((*(_BYTE *)(a1 + 153) & 0x20) == 0)
        {
          PBReaderReadString();
          v38 = objc_claimAutoreleasedReturnValue();
          v39 = 112;
          goto LABEL_94;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_159;
        v52 = (int)(*(_DWORD *)(a1 + 152) << 18) >> 31;
        goto LABEL_129;
      case 7:
        if (!v33)
          goto LABEL_95;
        if ((*(_BYTE *)(a1 + 153) & 0x10) == 0)
        {
          PBReaderReadString();
          v38 = objc_claimAutoreleasedReturnValue();
          v39 = 104;
          goto LABEL_94;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_159;
        v52 = (int)(*(_DWORD *)(a1 + 152) << 19) >> 31;
        goto LABEL_129;
      case 8:
        if (!v33)
          goto LABEL_95;
        if ((*(_BYTE *)(a1 + 153) & 0x80) == 0)
        {
          PBReaderReadString();
          v38 = objc_claimAutoreleasedReturnValue();
          v39 = 128;
          goto LABEL_94;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_159;
        v52 = (int)(*(_DWORD *)(a1 + 152) << 16) >> 31;
        goto LABEL_129;
      case 9:
        if (!v33)
          goto LABEL_95;
        if ((*(_BYTE *)(a1 + 152) & 8) == 0)
        {
          PBReaderReadString();
          v38 = objc_claimAutoreleasedReturnValue();
          v39 = 32;
          goto LABEL_94;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_159;
        v52 = (int)(*(_DWORD *)(a1 + 152) << 28) >> 31;
        goto LABEL_129;
      case 10:
        if (!v33)
          goto LABEL_95;
        if ((*(_BYTE *)(a1 + 153) & 4) == 0)
        {
          PBReaderReadString();
          v38 = objc_claimAutoreleasedReturnValue();
          v39 = 88;
          goto LABEL_94;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_159;
        v52 = (int)(*(_DWORD *)(a1 + 152) << 21) >> 31;
        goto LABEL_129;
      case 11:
        if (!v33)
          goto LABEL_95;
        if ((*(_BYTE *)(a1 + 152) & 0x40) == 0)
        {
          PBReaderReadString();
          v38 = objc_claimAutoreleasedReturnValue();
          v39 = 56;
          goto LABEL_94;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_159;
        v52 = (int)(*(_DWORD *)(a1 + 152) << 25) >> 31;
        goto LABEL_129;
      case 12:
        if (!v33)
          goto LABEL_95;
        if ((*(_BYTE *)(a1 + 153) & 0x40) == 0)
        {
          PBReaderReadString();
          v38 = objc_claimAutoreleasedReturnValue();
          v39 = 120;
          goto LABEL_94;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_159;
        v52 = (int)(*(_DWORD *)(a1 + 152) << 17) >> 31;
        goto LABEL_129;
      case 13:
        if ((v8 & 1) == 0)
          goto LABEL_95;
        v43 = 0;
        v44 = 0;
        v45 = 0;
        *(_DWORD *)(a1 + 152) |= 1u;
        while (2)
        {
          v46 = *v19;
          v47 = *(_QWORD *)(v3 + v46);
          v48 = v47 + 1;
          if (v47 == -1 || v48 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v20) = 1;
          }
          else
          {
            v49 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v47);
            *(_QWORD *)(v3 + v46) = v48;
            v45 |= (unint64_t)(v49 & 0x7F) << v43;
            if (v49 < 0)
            {
              v43 += 7;
              v29 = v44++ >= 9;
              if (v29)
              {
                LODWORD(v45) = 0;
                goto LABEL_100;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v20))
          LODWORD(v45) = 0;
LABEL_100:
        *(_DWORD *)(a1 + 148) = v45;
        goto LABEL_131;
      case 14:
        if (!v33)
          goto LABEL_95;
        if ((*(_BYTE *)(a1 + 152) & 4) == 0)
        {
          PBReaderReadString();
          v38 = objc_claimAutoreleasedReturnValue();
          v39 = 24;
          goto LABEL_94;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_159;
        v52 = (int)(*(_DWORD *)(a1 + 152) << 29) >> 31;
        goto LABEL_129;
      case 15:
        if (!v33)
          goto LABEL_95;
        if ((*(_BYTE *)(a1 + 152) & 0x10) == 0)
        {
          PBReaderReadString();
          v38 = objc_claimAutoreleasedReturnValue();
          v39 = 40;
LABEL_94:
          v50 = *(void **)(a1 + v39);
          *(_QWORD *)(a1 + v39) = v38;

          --v7;
LABEL_130:
          v20 = (int *)MEMORY[0x1E0D82BC8];
          v21 = (int *)MEMORY[0x1E0D82BB8];
LABEL_131:
          if (!(v59 & 1 | (v7 != 0)))
            goto LABEL_132;
          continue;
        }
        if ((PBReaderSkipValueWithTag() & 1) != 0)
        {
          v52 = (int)(*(_DWORD *)(a1 + 152) << 27) >> 31;
LABEL_129:
          v7 += v52;
          goto LABEL_130;
        }
LABEL_159:
        v57 = 0;
        v20 = (int *)MEMORY[0x1E0D82BC8];
LABEL_133:
        if ((v58 & 1) != 0)
LABEL_134:
          *(_DWORD *)(a1 + 152) |= 2u;
        if (v61 & 1 | ((v57 & 1) == 0))
        {
          *(_DWORD *)(a1 + 152) |= 0x200u;
          *(_DWORD *)(a1 + 152) |= 0x80u;
          *(_DWORD *)(a1 + 152) |= 0x100u;
          *(_DWORD *)(a1 + 152) |= 0x20u;
          *(_DWORD *)(a1 + 152) |= 0x800u;
          *(_DWORD *)(a1 + 152) |= 0x2000u;
          *(_DWORD *)(a1 + 152) |= 0x1000u;
          *(_DWORD *)(a1 + 152) |= 0x8000u;
          *(_DWORD *)(a1 + 152) |= 8u;
          *(_DWORD *)(a1 + 152) |= 0x400u;
          *(_DWORD *)(a1 + 152) |= 0x40u;
          *(_DWORD *)(a1 + 152) |= 0x4000u;
          *(_DWORD *)(a1 + 152) |= 4u;
          *(_DWORD *)(a1 + 152) |= 0x10u;
        }
        else if (v18)
        {
          while (1)
          {
            v53 = *v18++;
            v54 = 512;
            switch(v53)
            {
              case 0:
                goto LABEL_153;
              case 1:
                goto LABEL_152;
              case 2:
                v54 = 128;
                goto LABEL_152;
              case 3:
                v54 = 256;
                goto LABEL_152;
              case 4:
                v54 = 32;
                goto LABEL_152;
              case 5:
                v54 = 2048;
                goto LABEL_152;
              case 6:
                v54 = 0x2000;
                goto LABEL_152;
              case 7:
                v54 = 4096;
                goto LABEL_152;
              case 8:
                v54 = 0x8000;
                goto LABEL_152;
              case 9:
                v54 = 8;
                goto LABEL_152;
              case 10:
                v54 = 1024;
                goto LABEL_152;
              case 11:
                v54 = 64;
                goto LABEL_152;
              case 12:
                v54 = 0x4000;
                goto LABEL_152;
              case 14:
                v54 = 4;
                goto LABEL_152;
              case 15:
                v54 = 16;
LABEL_152:
                *(_DWORD *)(a1 + 152) |= v54;
                break;
              default:
                continue;
            }
          }
        }
LABEL_153:
        if (v57)
          v3 = *(_BYTE *)(v3 + *v20) == 0;
        else
          v3 = 0;
        if ((v61 & 1) != 0)
        {
          v55 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      default:
        if ((v58 & 1) == 0 || (*(_BYTE *)(a1 + 152) & 2) != 0)
        {
LABEL_95:
          v51 = PBReaderSkipValueWithTag();
          v21 = (int *)MEMORY[0x1E0D82BB8];
          v20 = (int *)MEMORY[0x1E0D82BC8];
          if ((v51 & 1) == 0)
          {
            v57 = 0;
            goto LABEL_133;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v40 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v41 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v40;

          }
          v42 = PBUnknownFieldAdd();
          v20 = (int *)MEMORY[0x1E0D82BC8];
          v21 = (int *)MEMORY[0x1E0D82BB8];
          if (!v42)
          {
            v57 = 0;
            goto LABEL_134;
          }
        }
        goto LABEL_131;
    }
  }
}

void sub_188B6E790(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B6E8DC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B6EA24(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B6EB70(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B6ECBC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B6EE08(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B6EF54(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B6F094(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B6F1E0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B6F328(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B6F474(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B6F624(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B6F76C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B704D0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDMerchantInformationReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 140))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDMerchantInformationReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 144));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 136) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 140) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDMerchantInformationReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDMerchantInformationReadAllFrom_initialTag;
  Specified = GEOPDMerchantInformationReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 144));
  return Specified;
}

void sub_188B7065C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDMerchantInformationReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOPDMerchantInformationReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188B706BC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B709F8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDMerchantInformationIsDirty(os_unfair_lock_s *a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner(a1 + 36);
  v2 = (a1[38]._os_unfair_lock_opaque & 0x1FFFC) != 0;
  os_unfair_lock_unlock(a1 + 36);
  return v2;
}

void sub_188B70FA0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B71640(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDMerchantLookupBrandParametersReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  char v16;
  unsigned __int8 v17;
  int *v18;
  int *v19;
  int *v20;
  int *v21;
  int *v22;
  char v23;
  unsigned int v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  int v31;
  unint64_t v33;
  BOOL v34;
  int *v35;
  int v36;
  int v37;
  BOOL v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  void *v42;
  int v43;
  GEOPDWarsawMerchantIdentifier *v44;
  uint64_t v45;
  void *v46;
  char v47;
  __int16 v48;
  int v49;
  __int16 v50;
  void *v51;
  int v53;
  char v54;
  char v55;
  char v56;
  BOOL v57;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 88));
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 84);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 80));
  v6 = 0;
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = (*(_WORD *)(a1 + 92) & 1)
      + (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 92)), (uint16x4_t)0xFFFFFFF9FFFCFFFALL), (int8x8_t)0x1000100010001))+ ((*(_WORD *)(a1 + 92) >> 5) & 1)+ ((*(_WORD *)(a1 + 92) >> 3) & 1)+ ((*(_WORD *)(a1 + 92) >> 2) & 1));
  while (2)
  {
    v12 = 1;
    v13 = 1;
    v14 = 1;
    switch(a3[v6])
    {
      case -4:
        ++v11;
        goto LABEL_8;
      case -3:
        v7 = 1;
        goto LABEL_7;
      case -2:
        v13 = v9;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v15 = v11 > 4;
        v16 = v15 & ~(_BYTE)v10 | v8;
        v17 = v15 | v10;
        v54 = v16;
        v55 = v17 | v16;
        if (((v17 | v7) & 1) != 0)
          v18 = 0;
        else
          v18 = a3;
        v56 = (v18 == 0) | v17;
        v57 = v17;
        v19 = (int *)MEMORY[0x1E0D82BF0];
        v20 = (int *)MEMORY[0x1E0D82BC8];
        v21 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_7:
        v12 = v8;
LABEL_8:
        v13 = v9;
        v14 = v10;
LABEL_10:
        ++v6;
        v8 = v12;
        v9 = v13;
        v10 = v14;
        continue;
    }
    break;
  }
  while (2)
  {
    v22 = (int *)MEMORY[0x1E0D82BD8];
    if (*(_QWORD *)(v3 + *v19) >= *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) || *(_BYTE *)(v3 + *v20))
      goto LABEL_94;
    v23 = 0;
    v24 = 0;
    v25 = 0;
    while (1)
    {
      v26 = *v19;
      v27 = *(_QWORD *)(v3 + v26);
      v28 = v27 + 1;
      if (v27 == -1 || v28 > *(_QWORD *)(v3 + *v22))
        break;
      v29 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v27);
      *(_QWORD *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0)
        goto LABEL_25;
      v23 += 7;
      if (v24++ >= 9)
      {
        v25 = 0;
        v31 = *(unsigned __int8 *)(v3 + *v20);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v20) = 1;
LABEL_25:
    v31 = *(unsigned __int8 *)(v3 + *v20);
    if (*(_BYTE *)(v3 + *v20))
      v25 = 0;
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_94:
      v53 = 1;
      goto LABEL_95;
    }
    v33 = v25 >> 3;
    v34 = v57;
    if ((v56 & 1) == 0)
    {
      v35 = v18;
      do
      {
        v37 = *v35++;
        v36 = v37;
        v34 = v37 != 0;
        if (v37)
          v38 = v36 == (_DWORD)v33;
        else
          v38 = 1;
      }
      while (!v38);
    }
    switch((int)v33)
    {
      case 1:
        if (!v34)
          goto LABEL_75;
        if ((*(_WORD *)(a1 + 92) & 0x10) == 0)
        {
          PBReaderReadString();
          v39 = objc_claimAutoreleasedReturnValue();
          v40 = 48;
          goto LABEL_67;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_115;
        v48 = *(_WORD *)(a1 + 92) << 11;
        goto LABEL_91;
      case 2:
        if (!v34)
          goto LABEL_75;
        if ((*(_WORD *)(a1 + 92) & 0x40) == 0)
        {
          PBReaderReadString();
          v39 = objc_claimAutoreleasedReturnValue();
          v40 = 64;
          goto LABEL_67;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_115;
        v48 = *(_WORD *)(a1 + 92) << 9;
        goto LABEL_91;
      case 3:
        if (!v34)
          goto LABEL_75;
        if ((*(_WORD *)(a1 + 92) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_115;
          v48 = *(_WORD *)(a1 + 92) << 8;
          goto LABEL_91;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_115;
        v44 = objc_alloc_init(GEOPDWarsawMerchantIdentifier);
        if (!GEOPDWarsawMerchantIdentifierReadAllFrom((uint64_t)v44, (void *)v3, v9 & 1))
          goto LABEL_114;
        PBReaderRecallMark();
        v45 = 72;
        goto LABEL_73;
      case 4:
        if (!v34)
          goto LABEL_75;
        if ((*(_WORD *)(a1 + 92) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_115;
          v48 = *(_WORD *)(a1 + 92) << 14;
          goto LABEL_91;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_115;
        v44 = objc_alloc_init(GEOPDAdamAppIdentifier);
        if (!GEOPDAdamAppIdentifierReadAllFrom((uint64_t)v44, (void *)v3))
          goto LABEL_114;
        PBReaderRecallMark();
        v45 = 24;
        goto LABEL_73;
      case 5:
        if (!v34)
          goto LABEL_75;
        if ((*(_WORD *)(a1 + 92) & 0x20) == 0)
        {
          PBReaderReadString();
          v39 = objc_claimAutoreleasedReturnValue();
          v40 = 56;
          goto LABEL_67;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_115;
        v48 = *(_WORD *)(a1 + 92) << 10;
        goto LABEL_91;
      case 6:
        if (!v34)
          goto LABEL_75;
        if ((*(_WORD *)(a1 + 92) & 8) == 0)
        {
          PBReaderReadString();
          v39 = objc_claimAutoreleasedReturnValue();
          v40 = 40;
LABEL_67:
          v46 = *(void **)(a1 + v40);
          *(_QWORD *)(a1 + v40) = v39;
          goto LABEL_74;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_115;
        v48 = *(_WORD *)(a1 + 92) << 12;
        goto LABEL_91;
      case 7:
        if (!v34)
          goto LABEL_75;
        if ((*(_WORD *)(a1 + 92) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_115;
          v48 = *(_WORD *)(a1 + 92) << 13;
LABEL_91:
          v6 += v48 >> 15;
LABEL_92:
          v20 = (int *)MEMORY[0x1E0D82BC8];
LABEL_93:
          if (!(v55 & 1 | (v6 != 0)))
            goto LABEL_94;
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_115;
        v44 = objc_alloc_init(GEOPDIdentityMerchantInformation);
        if (GEOPDIdentityMerchantInformationReadAllFrom((uint64_t)v44, (void *)v3))
        {
          PBReaderRecallMark();
          v45 = 32;
LABEL_73:
          v46 = *(void **)(a1 + v45);
          *(_QWORD *)(a1 + v45) = v44;
LABEL_74:

          --v6;
          goto LABEL_92;
        }
LABEL_114:

LABEL_115:
        v53 = 0;
        v20 = (int *)MEMORY[0x1E0D82BC8];
LABEL_95:
        if ((v54 & 1) != 0)
LABEL_96:
          *(_WORD *)(a1 + 92) |= 1u;
        if (v57 || (v53 & 1) == 0)
        {
          *(_WORD *)(a1 + 92) |= 0x10u;
          *(_WORD *)(a1 + 92) |= 0x40u;
          *(_WORD *)(a1 + 92) |= 0x80u;
          *(_WORD *)(a1 + 92) |= 2u;
          *(_WORD *)(a1 + 92) |= 0x20u;
          *(_WORD *)(a1 + 92) |= 8u;
          *(_WORD *)(a1 + 92) |= 4u;
        }
        else if (v18)
        {
          while (1)
          {
            v49 = *v18++;
            v50 = 16;
            switch(v49)
            {
              case 0:
                goto LABEL_108;
              case 1:
                goto LABEL_107;
              case 2:
                v50 = 64;
                goto LABEL_107;
              case 3:
                v50 = 128;
                goto LABEL_107;
              case 4:
                v50 = 2;
                goto LABEL_107;
              case 5:
                v50 = 32;
                goto LABEL_107;
              case 6:
                v50 = 8;
                goto LABEL_107;
              case 7:
                v50 = 4;
LABEL_107:
                *(_WORD *)(a1 + 92) |= v50;
                break;
              default:
                continue;
            }
          }
        }
LABEL_108:
        if (v53)
          v3 = *(_BYTE *)(v3 + *v20) == 0;
        else
          v3 = 0;
        if (v57)
        {
          v51 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      default:
        if ((v54 & 1) == 0 || (*(_WORD *)(a1 + 92) & 1) != 0)
        {
LABEL_75:
          v47 = PBReaderSkipValueWithTag();
          v20 = (int *)MEMORY[0x1E0D82BC8];
          if ((v47 & 1) == 0)
          {
            v53 = 0;
            goto LABEL_95;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v41 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v42 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v41;

          }
          v43 = PBUnknownFieldAdd();
          v20 = (int *)MEMORY[0x1E0D82BC8];
          if (!v43)
          {
            v53 = 0;
            goto LABEL_96;
          }
        }
        goto LABEL_93;
    }
  }
}

void sub_188B72724(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B7281C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDMerchantLookupBrandParametersReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 84))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDMerchantLookupBrandParametersReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 88));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 80) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 84) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDMerchantLookupBrandParametersReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDMerchantLookupBrandParametersReadAllFrom_initialTag;
  Specified = GEOPDMerchantLookupBrandParametersReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    -[GEOPDWarsawMerchantIdentifier readAll:](*(_QWORD *)(a1 + 72), 1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 88));
  return Specified;
}

void sub_188B72A88(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDWarsawMerchantIdentifierIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unint64_t v17;
  _BOOL8 v18;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_30;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        goto LABEL_30;
      v17 = v8 >> 3;
      if ((v8 >> 3) == 3)
        break;
      if ((_DWORD)v17 == 2)
      {
        if (v15 != 2)
          goto LABEL_32;
LABEL_26:
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_32;
        goto LABEL_29;
      }
      if ((_DWORD)v17 == 1)
      {
        if (v15 != 2)
          goto LABEL_32;
        goto LABEL_26;
      }
      if (!PBReaderSkipValueWithTag())
      {
LABEL_32:
        v18 = 0;
        goto LABEL_31;
      }
LABEL_29:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_30;
    }
    if (v15 != 2)
      goto LABEL_32;
    goto LABEL_26;
  }
LABEL_30:
  v18 = a1[*v4] == 0;
LABEL_31:
  PBReaderRecallMark();
  return v18;
}

void sub_188B72EB4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B730AC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDMerchantLookupBrandResultReadAllFrom(uint64_t a1, void *a2, int a3)
{
  char *v5;
  int *v6;
  int *v7;
  int *v8;
  int *v9;
  char v10;
  unsigned int v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  BOOL v17;
  int v18;
  char v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  GEOPDMerchantBrandLookupResponse *v27;
  id v28;
  void *v29;
  _BOOL8 v30;

  v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    v6 = (int *)MEMORY[0x1E0D82BF0];
    v7 = (int *)MEMORY[0x1E0D82BD8];
    v8 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v5[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v5[*MEMORY[0x1E0D82BD8]])
    {
      v9 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v5[*v8])
          break;
        v10 = 0;
        v11 = 0;
        v12 = 0;
        while (1)
        {
          v13 = *v6;
          v14 = *(_QWORD *)&v5[v13];
          v15 = v14 + 1;
          if (v14 == -1 || v15 > *(_QWORD *)&v5[*v7])
            break;
          v16 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v14);
          *(_QWORD *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0)
            goto LABEL_13;
          v10 += 7;
          v17 = v11++ >= 9;
          if (v17)
          {
            v12 = 0;
            v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        v18 = v5[*v8];
        if (v5[*v8])
          v12 = 0;
LABEL_15:
        if (v18 || (v12 & 7) == 4)
          break;
        if ((v12 >> 3) == 2)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_42;
          v27 = objc_alloc_init(GEOPDMerchantBrandLookupResponse);
          if (!GEOPDMerchantBrandLookupResponseReadAllFrom((uint64_t)v27, v5, a3))
          {

            goto LABEL_42;
          }
          PBReaderRecallMark();
          -[GEOPDMerchantLookupBrandResult addMerchantBrandLookupResponse:](a1, v27);

        }
        else if ((v12 >> 3) == 1)
        {
          v20 = 0;
          v21 = 0;
          v22 = 0;
          *(_BYTE *)(a1 + 28) |= 1u;
          while (1)
          {
            v23 = *v6;
            v24 = *(_QWORD *)&v5[v23];
            v25 = v24 + 1;
            if (v24 == -1 || v25 > *(_QWORD *)&v5[*v7])
              break;
            v26 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v24);
            *(_QWORD *)&v5[v23] = v25;
            v22 |= (unint64_t)(v26 & 0x7F) << v20;
            if ((v26 & 0x80) == 0)
              goto LABEL_36;
            v20 += 7;
            v17 = v21++ >= 9;
            if (v17)
            {
              LODWORD(v22) = 0;
              goto LABEL_38;
            }
          }
          v5[*v8] = 1;
LABEL_36:
          if (v5[*v8])
            LODWORD(v22) = 0;
LABEL_38:
          *(_DWORD *)(a1 + 24) = v22;
        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v28 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v29 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v28;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_42;
        }
      }
      while (*(_QWORD *)&v5[*v6] < *(_QWORD *)&v5[*v7]);
    }
    v30 = v5[*v8] == 0;
  }
  else
  {
LABEL_42:
    v30 = 0;
  }
  objc_sync_exit(v5);

  return v30;
}

void sub_188B73C38(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B741CC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDMerchantLookupParametersReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  int *v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  uint32x4_t v14;
  int8x16_t v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  char v21;
  unsigned __int8 v22;
  int *v23;
  int *v24;
  int *v25;
  int *v26;
  char v27;
  unsigned int v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  BOOL v34;
  int v35;
  unint64_t v37;
  BOOL v38;
  int *v39;
  int v40;
  int v41;
  BOOL v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  void *v46;
  int v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  GEOLocation *v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  char v55;
  unsigned int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  char v61;
  char v62;
  unsigned int v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  char v68;
  char v69;
  unsigned int v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  char v75;
  char v76;
  unsigned int v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  char v81;
  void *v82;
  char v83;
  unsigned int v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  char v89;
  char v90;
  unsigned int v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  char v96;
  char v97;
  BOOL v98;
  uint64_t v99;
  uint64_t v100;
  int v101;
  uint64_t v102;
  int v103;
  int v104;
  void *v105;
  int v107;
  char v108;
  char v109;
  char v110;
  BOOL v111;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 160));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 156);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 152));
  v7 = v6;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = *(_DWORD *)(a1 + 176);
  v14 = (uint32x4_t)vdupq_n_s32(v13);
  v15.i64[0] = 0x100000001;
  v15.i64[1] = 0x100000001;
  v16 = vaddvq_s32(vaddq_s32(vaddq_s32((int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v14, (uint32x4_t)xmmword_189CC9E30), v15), (int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v14, (uint32x4_t)xmmword_189CC9E40), v15)), (int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v14, (uint32x4_t)xmmword_189CC9E50), v15)))+ ((v13 >> 10) & 1)+ ((v13 >> 8) & 1);
  while (2)
  {
    v17 = 1;
    v18 = 1;
    v19 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v16;
        goto LABEL_8;
      case -3:
        v9 = 1;
        goto LABEL_7;
      case -2:
        v18 = v11;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v20 = v16 > 9;
        v21 = v20 & ~(_BYTE)v12 | v10;
        v22 = v20 | v12;
        v108 = v21;
        v109 = v22 | v21;
        if (((v22 | v9) & 1) != 0)
          v23 = 0;
        else
          v23 = a3;
        v24 = (int *)MEMORY[0x1E0D82BF0];
        v25 = (int *)MEMORY[0x1E0D82BC8];
        v110 = (v23 == 0) | v22;
        v111 = v22;
        v26 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v16;
LABEL_7:
        v17 = v10;
LABEL_8:
        v18 = v11;
        v19 = v12;
LABEL_10:
        ++v8;
        v10 = v17;
        v11 = v18;
        v12 = v19;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v24) >= *(_QWORD *)(v3 + *v7) || *(_BYTE *)(v3 + *v25))
      goto LABEL_218;
    v27 = 0;
    v28 = 0;
    v29 = 0;
    while (1)
    {
      v30 = *v24;
      v31 = *(_QWORD *)(v3 + v30);
      v32 = v31 + 1;
      if (v31 == -1 || v32 > *(_QWORD *)(v3 + *v7))
        break;
      v33 = *(_BYTE *)(*(_QWORD *)(v3 + *v26) + v31);
      *(_QWORD *)(v3 + v30) = v32;
      v29 |= (unint64_t)(v33 & 0x7F) << v27;
      if ((v33 & 0x80) == 0)
        goto LABEL_25;
      v27 += 7;
      v34 = v28++ >= 9;
      if (v34)
      {
        v29 = 0;
        v35 = *(unsigned __int8 *)(v3 + *v25);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v25) = 1;
LABEL_25:
    v35 = *(unsigned __int8 *)(v3 + *v25);
    if (*(_BYTE *)(v3 + *v25))
      v29 = 0;
LABEL_27:
    if (v35 || (v29 & 7) == 4)
    {
LABEL_218:
      v107 = 1;
      goto LABEL_219;
    }
    v37 = v29 >> 3;
    v38 = v111;
    if ((v110 & 1) == 0)
    {
      v39 = v23;
      do
      {
        v41 = *v39++;
        v40 = v41;
        v38 = v41 != 0;
        if (v41)
          v42 = v40 == (_DWORD)v37;
        else
          v42 = 1;
      }
      while (!v42);
    }
    switch((int)v37)
    {
      case 1:
        if (!v38)
          goto LABEL_155;
        if ((*(_BYTE *)(a1 + 177) & 0x80) == 0)
        {
          PBReaderReadString();
          v43 = objc_claimAutoreleasedReturnValue();
          v44 = 80;
          goto LABEL_126;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_245;
        v101 = (int)(*(_DWORD *)(a1 + 176) << 16) >> 31;
        goto LABEL_209;
      case 2:
        if (!v38)
          goto LABEL_155;
        if ((*(_BYTE *)(a1 + 177) & 0x20) == 0)
        {
          PBReaderReadString();
          v43 = objc_claimAutoreleasedReturnValue();
          v44 = 64;
          goto LABEL_126;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_245;
        v101 = (int)(*(_DWORD *)(a1 + 176) << 18) >> 31;
        goto LABEL_209;
      case 3:
        if ((v9 & 1) == 0)
          goto LABEL_155;
        *(_DWORD *)(a1 + 176) |= 4u;
        v48 = *v24;
        v49 = *(_QWORD *)(v3 + v48);
        if (v49 <= 0xFFFFFFFFFFFFFFF7 && v49 + 8 <= *(_QWORD *)(v3 + *v7))
        {
          v50 = *(_QWORD *)(*(_QWORD *)(v3 + *v26) + v49);
          *(_QWORD *)(v3 + v48) = v49 + 8;
        }
        else
        {
          *(_BYTE *)(v3 + *v25) = 1;
          v50 = 0;
        }
        v102 = 136;
        goto LABEL_217;
      case 4:
        if (!v38)
          goto LABEL_155;
        if ((*(_BYTE *)(a1 + 178) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_245;
          v101 = (int)(*(_DWORD *)(a1 + 176) << 11) >> 31;
          goto LABEL_209;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_245;
        v51 = objc_alloc_init(GEOLocation);
        if (!GEOLocationReadAllFrom((uint64_t)v51, (void *)v3, v11 & 1))
          goto LABEL_244;
        PBReaderRecallMark();
        v52 = 128;
        goto LABEL_153;
      case 5:
        if ((v9 & 1) == 0)
          goto LABEL_155;
        *(_DWORD *)(a1 + 176) |= 2u;
        v53 = *v24;
        v54 = *(_QWORD *)(v3 + v53);
        if (v54 <= 0xFFFFFFFFFFFFFFF7 && v54 + 8 <= *(_QWORD *)(v3 + *v7))
        {
          v50 = *(_QWORD *)(*(_QWORD *)(v3 + *v26) + v54);
          *(_QWORD *)(v3 + v53) = v54 + 8;
        }
        else
        {
          *(_BYTE *)(v3 + *v25) = 1;
          v50 = 0;
        }
        v102 = 120;
LABEL_217:
        *(_QWORD *)(a1 + v102) = v50;
        goto LABEL_211;
      case 6:
        if (!v38)
          goto LABEL_155;
        if ((*(_BYTE *)(a1 + 178) & 1) == 0)
        {
          PBReaderReadString();
          v43 = objc_claimAutoreleasedReturnValue();
          v44 = 88;
          goto LABEL_126;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_245;
        v101 = (int)(*(_DWORD *)(a1 + 176) << 15) >> 31;
        goto LABEL_209;
      case 7:
        if (!v38)
          goto LABEL_155;
        if ((*(_BYTE *)(a1 + 177) & 0x10) == 0)
        {
          PBReaderReadString();
          v43 = objc_claimAutoreleasedReturnValue();
          v44 = 48;
          goto LABEL_126;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_245;
        v101 = (int)(*(_DWORD *)(a1 + 176) << 19) >> 31;
        goto LABEL_209;
      case 8:
        if ((v9 & 1) == 0)
          goto LABEL_155;
        v55 = 0;
        v56 = 0;
        v57 = 0;
        *(_DWORD *)(a1 + 176) |= 1u;
        while (2)
        {
          v58 = *v24;
          v59 = *(_QWORD *)(v3 + v58);
          v60 = v59 + 1;
          if (v59 == -1 || v60 > *(_QWORD *)(v3 + *v7))
          {
            *(_BYTE *)(v3 + *v25) = 1;
          }
          else
          {
            v61 = *(_BYTE *)(*(_QWORD *)(v3 + *v26) + v59);
            *(_QWORD *)(v3 + v58) = v60;
            v57 |= (unint64_t)(v61 & 0x7F) << v55;
            if (v61 < 0)
            {
              v55 += 7;
              v34 = v56++ >= 9;
              if (v34)
              {
                v57 = 0;
                goto LABEL_160;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v25))
          v57 = 0;
LABEL_160:
        *(_QWORD *)(a1 + 56) = -(v57 & 1) ^ (v57 >> 1);
        goto LABEL_211;
      case 9:
        if ((v9 & 1) == 0)
          goto LABEL_155;
        v62 = 0;
        v63 = 0;
        v64 = 0;
        *(_DWORD *)(a1 + 176) |= 0x40u;
        while (2)
        {
          v65 = *v24;
          v66 = *(_QWORD *)(v3 + v65);
          v67 = v66 + 1;
          if (v66 == -1 || v67 > *(_QWORD *)(v3 + *v7))
          {
            *(_BYTE *)(v3 + *v25) = 1;
          }
          else
          {
            v68 = *(_BYTE *)(*(_QWORD *)(v3 + *v26) + v66);
            *(_QWORD *)(v3 + v65) = v67;
            v64 |= (unint64_t)(v68 & 0x7F) << v62;
            if (v68 < 0)
            {
              v62 += 7;
              v34 = v63++ >= 9;
              if (v34)
              {
                v64 = 0;
                goto LABEL_164;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v25))
          v64 = 0;
LABEL_164:
        v98 = v64 != 0;
        v99 = 173;
        goto LABEL_182;
      case 10:
        if (!v38)
          goto LABEL_155;
        if ((*(_BYTE *)(a1 + 178) & 2) == 0)
        {
          PBReaderReadString();
          v43 = objc_claimAutoreleasedReturnValue();
          v44 = 96;
          goto LABEL_126;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_245;
        v101 = (int)(*(_DWORD *)(a1 + 176) << 14) >> 31;
        goto LABEL_209;
      case 11:
        if (!v38)
          goto LABEL_155;
        if ((*(_BYTE *)(a1 + 178) & 4) == 0)
        {
          PBReaderReadString();
          v43 = objc_claimAutoreleasedReturnValue();
          v44 = 104;
          goto LABEL_126;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_245;
        v101 = (int)(*(_DWORD *)(a1 + 176) << 13) >> 31;
        goto LABEL_209;
      case 12:
        if ((v9 & 1) == 0)
          goto LABEL_155;
        v69 = 0;
        v70 = 0;
        v71 = 0;
        *(_DWORD *)(a1 + 176) |= 0x10u;
        while (2)
        {
          v72 = *v24;
          v73 = *(_QWORD *)(v3 + v72);
          v74 = v73 + 1;
          if (v73 == -1 || v74 > *(_QWORD *)(v3 + *v7))
          {
            *(_BYTE *)(v3 + *v25) = 1;
          }
          else
          {
            v75 = *(_BYTE *)(*(_QWORD *)(v3 + *v26) + v73);
            *(_QWORD *)(v3 + v72) = v74;
            v71 |= (unint64_t)(v75 & 0x7F) << v69;
            if (v75 < 0)
            {
              v69 += 7;
              v34 = v70++ >= 9;
              if (v34)
              {
                LODWORD(v71) = 0;
                goto LABEL_168;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v25))
          LODWORD(v71) = 0;
LABEL_168:
        v100 = 168;
        goto LABEL_173;
      case 13:
        if (!v38)
          goto LABEL_155;
        if ((*(_BYTE *)(a1 + 178) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_245;
          v101 = (int)(*(_DWORD *)(a1 + 176) << 10) >> 31;
          goto LABEL_209;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_245;
        v51 = objc_alloc_init(GEOPDWarsawMerchantIdentifier);
        if (!GEOPDWarsawMerchantIdentifierReadAllFrom((uint64_t)v51, (void *)v3, v11 & 1))
          goto LABEL_244;
        PBReaderRecallMark();
        v52 = 144;
        goto LABEL_153;
      case 14:
        if (!v38)
          goto LABEL_155;
        if ((*(_BYTE *)(a1 + 177) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_245;
          v101 = (int)(*(_DWORD *)(a1 + 176) << 22) >> 31;
          goto LABEL_209;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_245;
        v51 = objc_alloc_init(GEOPDAdamAppIdentifier);
        if (!GEOPDAdamAppIdentifierReadAllFrom((uint64_t)v51, (void *)v3))
          goto LABEL_244;
        PBReaderRecallMark();
        v52 = 24;
        goto LABEL_153;
      case 15:
        if (!v38)
          goto LABEL_155;
        if ((*(_BYTE *)(a1 + 177) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_245;
          v101 = (int)(*(_DWORD *)(a1 + 176) << 17) >> 31;
          goto LABEL_209;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_245;
        v51 = objc_alloc_init(GEOPDMerchantInformation);
        if (!GEOPDMerchantInformationReadAllFrom((uint64_t)v51, (void *)v3, v11 & 1))
          goto LABEL_244;
        PBReaderRecallMark();
        v52 = 72;
        goto LABEL_153;
      case 16:
        if ((v9 & 1) == 0)
          goto LABEL_155;
        v76 = 0;
        v77 = 0;
        v71 = 0;
        *(_DWORD *)(a1 + 176) |= 8u;
        while (2)
        {
          v78 = *v24;
          v79 = *(_QWORD *)(v3 + v78);
          v80 = v79 + 1;
          if (v79 == -1 || v80 > *(_QWORD *)(v3 + *v7))
          {
            *(_BYTE *)(v3 + *v25) = 1;
          }
          else
          {
            v81 = *(_BYTE *)(*(_QWORD *)(v3 + *v26) + v79);
            *(_QWORD *)(v3 + v78) = v80;
            v71 |= (unint64_t)(v81 & 0x7F) << v76;
            if (v81 < 0)
            {
              v76 += 7;
              v34 = v77++ >= 9;
              if (v34)
              {
                LODWORD(v71) = 0;
                goto LABEL_172;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v25))
          LODWORD(v71) = 0;
LABEL_172:
        v100 = 164;
LABEL_173:
        *(_DWORD *)(a1 + v100) = v71;
        goto LABEL_211;
      case 17:
        if (!v38)
          goto LABEL_155;
        if ((*(_BYTE *)(a1 + 178) & 8) == 0)
        {
          PBReaderReadString();
          v43 = objc_claimAutoreleasedReturnValue();
          v44 = 112;
LABEL_126:
          v82 = *(void **)(a1 + v44);
          *(_QWORD *)(a1 + v44) = v43;
          goto LABEL_154;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_245;
        v101 = (int)(*(_DWORD *)(a1 + 176) << 12) >> 31;
        goto LABEL_209;
      case 18:
        if ((v9 & 1) == 0)
          goto LABEL_155;
        v83 = 0;
        v84 = 0;
        v85 = 0;
        *(_DWORD *)(a1 + 176) |= 0x80u;
        while (2)
        {
          v86 = *v24;
          v87 = *(_QWORD *)(v3 + v86);
          v88 = v87 + 1;
          if (v87 == -1 || v88 > *(_QWORD *)(v3 + *v7))
          {
            *(_BYTE *)(v3 + *v25) = 1;
          }
          else
          {
            v89 = *(_BYTE *)(*(_QWORD *)(v3 + *v26) + v87);
            *(_QWORD *)(v3 + v86) = v88;
            v85 |= (unint64_t)(v89 & 0x7F) << v83;
            if (v89 < 0)
            {
              v83 += 7;
              v34 = v84++ >= 9;
              if (v34)
              {
                v85 = 0;
                goto LABEL_177;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v25))
          v85 = 0;
LABEL_177:
        v98 = v85 != 0;
        v99 = 174;
        goto LABEL_182;
      case 19:
        if ((v9 & 1) == 0)
          goto LABEL_155;
        v90 = 0;
        v91 = 0;
        v92 = 0;
        *(_DWORD *)(a1 + 176) |= 0x20u;
        while (2)
        {
          v93 = *v24;
          v94 = *(_QWORD *)(v3 + v93);
          v95 = v94 + 1;
          if (v94 == -1 || v95 > *(_QWORD *)(v3 + *v7))
          {
            *(_BYTE *)(v3 + *v25) = 1;
          }
          else
          {
            v96 = *(_BYTE *)(*(_QWORD *)(v3 + *v26) + v94);
            *(_QWORD *)(v3 + v93) = v95;
            v92 |= (unint64_t)(v96 & 0x7F) << v90;
            if (v96 < 0)
            {
              v90 += 7;
              v34 = v91++ >= 9;
              if (v34)
              {
                v92 = 0;
                goto LABEL_181;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v25))
          v92 = 0;
LABEL_181:
        v98 = v92 != 0;
        v99 = 172;
LABEL_182:
        *(_BYTE *)(a1 + v99) = v98;
        goto LABEL_211;
      case 20:
        if (!v38)
          goto LABEL_155;
        if ((*(_BYTE *)(a1 + 177) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_245;
          v101 = (int)(*(_DWORD *)(a1 + 176) << 20) >> 31;
          goto LABEL_209;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_245;
        v51 = objc_alloc_init(GEOPDIdentityMerchantInformation);
        if (!GEOPDIdentityMerchantInformationReadAllFrom((uint64_t)v51, (void *)v3))
          goto LABEL_244;
        PBReaderRecallMark();
        v52 = 40;
        goto LABEL_153;
      case 21:
        if (!v38)
          goto LABEL_155;
        if ((*(_BYTE *)(a1 + 177) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_245;
          v101 = (int)(*(_DWORD *)(a1 + 176) << 21) >> 31;
LABEL_209:
          v8 += v101;
LABEL_210:
          v25 = (int *)MEMORY[0x1E0D82BC8];
          v7 = (int *)MEMORY[0x1E0D82BD8];
          v26 = (int *)MEMORY[0x1E0D82BB8];
LABEL_211:
          if (!(v109 & 1 | (v8 != 0)))
            goto LABEL_218;
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_245;
        v51 = objc_alloc_init(GEOPDBankTransactionInformation);
        if (GEOPDBankTransactionInformationReadAllFrom((uint64_t)v51, (void *)v3, v11 & 1))
        {
          PBReaderRecallMark();
          v52 = 32;
LABEL_153:
          v82 = *(void **)(a1 + v52);
          *(_QWORD *)(a1 + v52) = v51;
LABEL_154:

          --v8;
          goto LABEL_210;
        }
LABEL_244:

LABEL_245:
        v107 = 0;
        v25 = (int *)MEMORY[0x1E0D82BC8];
LABEL_219:
        if ((v108 & 1) != 0)
LABEL_220:
          *(_DWORD *)(a1 + 176) |= 0x100u;
        if (v111 || (v107 & 1) == 0)
        {
          *(_DWORD *)(a1 + 176) |= 0x8000u;
          *(_DWORD *)(a1 + 176) |= 0x2000u;
          *(_DWORD *)(a1 + 176) |= 0x100000u;
          *(_DWORD *)(a1 + 176) |= 0x10000u;
          *(_DWORD *)(a1 + 176) |= 0x1000u;
          *(_DWORD *)(a1 + 176) |= 0x20000u;
          *(_DWORD *)(a1 + 176) |= 0x40000u;
          *(_DWORD *)(a1 + 176) |= 0x200000u;
          *(_DWORD *)(a1 + 176) |= 0x200u;
          *(_DWORD *)(a1 + 176) |= 0x4000u;
          *(_DWORD *)(a1 + 176) |= 0x80000u;
          *(_DWORD *)(a1 + 176) |= 0x800u;
          *(_DWORD *)(a1 + 176) |= 0x400u;
        }
        else if (v23)
        {
          while (1)
          {
            v103 = *v23++;
            v104 = 0x8000;
            switch(v103)
            {
              case 0:
                goto LABEL_238;
              case 1:
                goto LABEL_237;
              case 2:
                v104 = 0x2000;
                goto LABEL_237;
              case 4:
                v104 = 0x100000;
                goto LABEL_237;
              case 6:
                v104 = 0x10000;
                goto LABEL_237;
              case 7:
                v104 = 4096;
                goto LABEL_237;
              case 10:
                v104 = 0x20000;
                goto LABEL_237;
              case 11:
                v104 = 0x40000;
                goto LABEL_237;
              case 13:
                v104 = 0x200000;
                goto LABEL_237;
              case 14:
                v104 = 512;
                goto LABEL_237;
              case 15:
                v104 = 0x4000;
                goto LABEL_237;
              case 17:
                v104 = 0x80000;
                goto LABEL_237;
              case 20:
                v104 = 2048;
                goto LABEL_237;
              case 21:
                v104 = 1024;
LABEL_237:
                *(_DWORD *)(a1 + 176) |= v104;
                break;
              default:
                continue;
            }
          }
        }
LABEL_238:
        if (v107)
          v3 = *(_BYTE *)(v3 + *v25) == 0;
        else
          v3 = 0;
        if (v111)
        {
          v105 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      default:
        if ((v108 & 1) == 0 || (*(_BYTE *)(a1 + 177) & 1) != 0)
        {
LABEL_155:
          v97 = PBReaderSkipValueWithTag();
          v26 = (int *)MEMORY[0x1E0D82BB8];
          v7 = (int *)MEMORY[0x1E0D82BD8];
          v25 = (int *)MEMORY[0x1E0D82BC8];
          if ((v97 & 1) == 0)
          {
            v107 = 0;
            goto LABEL_219;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v45 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v46 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v45;

          }
          v47 = PBUnknownFieldAdd();
          v25 = (int *)MEMORY[0x1E0D82BC8];
          v7 = (int *)MEMORY[0x1E0D82BD8];
          v26 = (int *)MEMORY[0x1E0D82BB8];
          if (!v47)
          {
            v107 = 0;
            goto LABEL_220;
          }
        }
        goto LABEL_211;
    }
  }
}

void sub_188B753F4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B755C0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B75788(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B758D0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B75B00(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B75C48(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B75FA4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B760E8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B76234(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B76540(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B76788(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B768D4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B77D8C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDMerchantLookupParametersCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 128), "readAll:", 1);
  -[GEOPDWarsawMerchantIdentifier readAll:](*(_QWORD *)(a1 + 144), 1);
  objc_msgSend(*(id *)(a1 + 72), "readAll:", 1);
  return objc_msgSend(*(id *)(a1 + 32), "readAll:", 1);
}

unint64_t GEOPDMerchantLookupParametersReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 156))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDMerchantLookupParametersReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 160));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 152) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 156) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDMerchantLookupParametersReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDMerchantLookupParametersReadAllFrom_initialTag;
  Specified = GEOPDMerchantLookupParametersReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDMerchantLookupParametersCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 160));
  return Specified;
}

void sub_188B77F84(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDMerchantLookupParametersReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOPDMerchantLookupParametersReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188B77FE4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDMerchantLookupParametersIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v14;
  int v15;
  int v16;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  int v25;
  BOOL v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  int v31;
  unsigned int v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  int v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  int v41;
  unsigned int v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  int v46;
  unsigned int v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  int v51;
  _BOOL8 v52;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = *v4;
          v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = *v4;
      v15 = a1[v14];
      if (a1[v14])
        v8 = 0;
LABEL_14:
      v16 = v8 & 7;
      if (v15 || v16 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v16 != 2)
            goto LABEL_115;
          goto LABEL_84;
        case 2u:
          if (v16 == 2)
            goto LABEL_84;
          goto LABEL_115;
        case 3u:
        case 5u:
          if (v16 != 1)
            goto LABEL_115;
          v18 = *v2;
          v19 = *(_QWORD *)&a1[v18];
          if (v19 > 0xFFFFFFFFFFFFFFF7)
            goto LABEL_103;
          v20 = v19 + 8;
          if (v20 > *(_QWORD *)&a1[*v3])
            goto LABEL_103;
          *(_QWORD *)&a1[v18] = v20;
          continue;
        case 4u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOLocationIsValid(a1))
            goto LABEL_115;
          goto LABEL_111;
        case 6u:
          if (v16 == 2)
            goto LABEL_84;
          goto LABEL_115;
        case 7u:
          if (v16 == 2)
            goto LABEL_84;
          goto LABEL_115;
        case 8u:
          if ((v8 & 7) != 0)
            goto LABEL_115;
          v21 = 0;
          while (1)
          {
            v22 = *v2;
            v23 = *(_QWORD *)&a1[v22];
            v24 = v23 + 1;
            if (v23 == -1 || v24 > *(_QWORD *)&a1[*v3])
              goto LABEL_102;
            v25 = *(char *)(*(_QWORD *)&a1[*v5] + v23);
            *(_QWORD *)&a1[v22] = v24;
            if (v25 < 0)
            {
              v26 = v21++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_112;
          }
        case 9u:
          if ((v8 & 7) != 0)
            goto LABEL_115;
          v27 = 0;
          while (1)
          {
            v28 = *v2;
            v29 = *(_QWORD *)&a1[v28];
            v30 = v29 + 1;
            if (v29 == -1 || v30 > *(_QWORD *)&a1[*v3])
              goto LABEL_102;
            v31 = *(char *)(*(_QWORD *)&a1[*v5] + v29);
            *(_QWORD *)&a1[v28] = v30;
            if (v31 < 0)
            {
              v26 = v27++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_112;
          }
        case 0xAu:
          if (v16 == 2)
            goto LABEL_84;
          goto LABEL_115;
        case 0xBu:
          if (v16 == 2)
            goto LABEL_84;
          goto LABEL_115;
        case 0xCu:
          if ((v8 & 7) != 0)
            goto LABEL_115;
          v32 = 0;
          while (1)
          {
            v33 = *v2;
            v34 = *(_QWORD *)&a1[v33];
            v35 = v34 + 1;
            if (v34 == -1 || v35 > *(_QWORD *)&a1[*v3])
              goto LABEL_102;
            v36 = *(char *)(*(_QWORD *)&a1[*v5] + v34);
            *(_QWORD *)&a1[v33] = v35;
            if (v36 < 0)
            {
              v26 = v32++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_112;
          }
        case 0xDu:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOPDWarsawMerchantIdentifierIsValid(a1))
            goto LABEL_115;
          goto LABEL_111;
        case 0xEu:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOPDAdamAppIdentifierIsValid(a1))
            goto LABEL_115;
          goto LABEL_111;
        case 0xFu:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOPDMerchantInformationIsValid(a1))
            goto LABEL_115;
          goto LABEL_111;
        case 0x10u:
          if ((v8 & 7) != 0)
            goto LABEL_115;
          v37 = 0;
          while (1)
          {
            v38 = *v2;
            v39 = *(_QWORD *)&a1[v38];
            v40 = v39 + 1;
            if (v39 == -1 || v40 > *(_QWORD *)&a1[*v3])
              goto LABEL_102;
            v41 = *(char *)(*(_QWORD *)&a1[*v5] + v39);
            *(_QWORD *)&a1[v38] = v40;
            if (v41 < 0)
            {
              v26 = v37++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_112;
          }
        case 0x11u:
          if (v16 == 2)
            goto LABEL_84;
          goto LABEL_115;
        case 0x12u:
          if ((v8 & 7) != 0)
            goto LABEL_115;
          v42 = 0;
          while (1)
          {
            v43 = *v2;
            v44 = *(_QWORD *)&a1[v43];
            v45 = v44 + 1;
            if (v44 == -1 || v45 > *(_QWORD *)&a1[*v3])
              goto LABEL_102;
            v46 = *(char *)(*(_QWORD *)&a1[*v5] + v44);
            *(_QWORD *)&a1[v43] = v45;
            if (v46 < 0)
            {
              v26 = v42++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_112;
          }
        case 0x13u:
          if ((v8 & 7) != 0)
            goto LABEL_115;
          v47 = 0;
          break;
        case 0x14u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOPDAdamAppIdentifierIsValid(a1))
            goto LABEL_115;
          goto LABEL_111;
        case 0x15u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOPDBankTransactionInformationIsValid(a1))
            goto LABEL_115;
LABEL_111:
          PBReaderRecallMark();
          continue;
        default:
LABEL_84:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_115:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v48 = *v2;
        v49 = *(_QWORD *)&a1[v48];
        v50 = v49 + 1;
        if (v49 == -1 || v50 > *(_QWORD *)&a1[*v3])
          break;
        v51 = *(char *)(*(_QWORD *)&a1[*v5] + v49);
        *(_QWORD *)&a1[v48] = v50;
        if (v51 < 0)
        {
          v26 = v47++ > 8;
          if (!v26)
            continue;
        }
        goto LABEL_112;
      }
LABEL_102:
      v14 = *v4;
LABEL_103:
      a1[v14] = 1;
LABEL_112:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v52 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v52;
}

void sub_188B78960(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDMerchantLookupParametersIsDirty(uint64_t a1)
{
  int v2;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 160));
  v2 = *(_DWORD *)(a1 + 176);
  if ((v2 & 0x40A000) != 0)
    return 1;
  if ((v2 & 0x100000) != 0)
  {
    if (GEOLocationIsDirty(*(os_unfair_lock_s **)(a1 + 128)))
      return 1;
    v2 = *(_DWORD *)(a1 + 176);
  }
  if ((v2 & 0x71000) != 0)
    return 1;
  if ((v2 & 0x200000) != 0)
  {
    if (GEOPDWarsawMerchantIdentifierIsDirty(*(_QWORD *)(a1 + 144)))
      return 1;
    v2 = *(_DWORD *)(a1 + 176);
  }
  if ((v2 & 0x200) != 0)
    return 1;
  if ((v2 & 0x4000) != 0)
  {
    if (GEOPDMerchantInformationIsDirty(*(os_unfair_lock_s **)(a1 + 72)))
      return 1;
    v2 = *(_DWORD *)(a1 + 176);
  }
  if ((v2 & 0x80800) != 0)
    return 1;
  if ((v2 & 0x400) != 0)
    return (uint64_t)GEOPDBankTransactionInformationIsDirty(*(os_unfair_lock_s **)(a1 + 32));
  else
    return 0;
}

os_unfair_lock_s *GEOPDMerchantLookupParametersIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOPDMerchantLookupParametersIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 40);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void GEOPDMerchantLookupParametersClearSensitiveFields(void *a1, uint64_t a2, int a3)
{
  void *v5;
  int HasSensitiveFields;
  void *v7;
  _DWORD *v8;
  void *v9;
  void *v10;
  int v11;
  void *v12;
  id v13;

  if (!a3)
  {
    objc_msgSend(a1, "transactionLocation");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "clearSensitiveFields:", a2);

LABEL_10:
    objc_msgSend(a1, "bankTransactionInformation");
    v13 = (id)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v13, "clearSensitiveFields:", a2);
    goto LABEL_11;
  }
  if (objc_msgSend(a1, "hasTransactionLocation")
    && (objc_msgSend(a1, "transactionLocation"),
        v5 = (void *)objc_claimAutoreleasedReturnValue(),
        HasSensitiveFields = GEOLocationHasSensitiveFields((uint64_t)v5),
        v5,
        HasSensitiveFields))
  {
    objc_msgSend(a1, "transactionLocation");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = (_DWORD *)objc_msgSend(v7, "copy");

    GEOLocationClearSensitiveFields(v8);
    objc_msgSend(a1, "setTransactionLocation:", v8);
  }
  else
  {
    objc_msgSend(a1, "transactionLocation");
    v8 = (_DWORD *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "clearSensitiveFields:", a2);
  }

  if (!objc_msgSend(a1, "hasBankTransactionInformation"))
    goto LABEL_10;
  objc_msgSend(a1, "bankTransactionInformation");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v11 = GEOPDBankTransactionInformationHasSensitiveFields(v10);

  if (!v11)
    goto LABEL_10;
  objc_msgSend(a1, "bankTransactionInformation");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v13 = (id)objc_msgSend(v12, "copy");

  GEOPDBankTransactionInformationClearSensitiveFields((uint64_t)v13, a2, 0);
  objc_msgSend(a1, "setBankTransactionInformation:", v13);
LABEL_11:

}

void sub_188B793A4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B79F48(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDMerchantLookupResultReadAllFrom(uint64_t a1, void *a2, int a3)
{
  char *v5;
  int *v6;
  int *v7;
  int *v8;
  int *v9;
  char v10;
  unsigned int v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  int v18;
  GEOPDCategoryInformation *v20;
  void *v21;
  id v22;
  void *v23;
  _BOOL8 v24;

  v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    v6 = (int *)MEMORY[0x1E0D82BF0];
    v7 = (int *)MEMORY[0x1E0D82BD8];
    v8 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v5[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v5[*MEMORY[0x1E0D82BD8]])
    {
      v9 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v5[*v8])
          break;
        v10 = 0;
        v11 = 0;
        v12 = 0;
        while (1)
        {
          v13 = *v6;
          v14 = *(_QWORD *)&v5[v13];
          v15 = v14 + 1;
          if (v14 == -1 || v15 > *(_QWORD *)&v5[*v7])
            break;
          v16 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v14);
          *(_QWORD *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0)
            goto LABEL_13;
          v10 += 7;
          if (v11++ >= 9)
          {
            v12 = 0;
            v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        v18 = v5[*v8];
        if (v5[*v8])
          v12 = 0;
LABEL_15:
        if (v18 || (v12 & 7) == 4)
          break;
        if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_29;
          v20 = objc_alloc_init(GEOPDCategoryInformation);
          if (!GEOPDCategoryInformationReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          v21 = *(void **)(a1 + 16);
          *(_QWORD *)(a1 + 16) = v20;

        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v22 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v23 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v22;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_29;
        }
      }
      while (*(_QWORD *)&v5[*v6] < *(_QWORD *)&v5[*v7]);
    }
    v24 = v5[*v8] == 0;
  }
  else
  {
LABEL_29:
    v24 = 0;
  }
  objc_sync_exit(v5);

  return v24;
}

void sub_188B7A7B0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDMerchantLookupResultReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOPDMerchantLookupResultReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188B7A810(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDMerchantLookupResultIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  _BOOL8 v17;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDCategoryInformationIsValid(a1))
        {
LABEL_27:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_27;
      }
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

BOOL GEOPDMultiLocalizedStringReadAllFrom(uint64_t a1, void *a2, int a3)
{
  char *v5;
  int *v6;
  int *v7;
  int *v8;
  int *v9;
  char v10;
  unsigned int v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  int v18;
  GEOLocalizedString *v20;
  id v21;
  void *v22;
  _BOOL8 v23;

  v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    v6 = (int *)MEMORY[0x1E0D82BF0];
    v7 = (int *)MEMORY[0x1E0D82BD8];
    v8 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v5[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v5[*MEMORY[0x1E0D82BD8]])
    {
      v9 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v5[*v8])
          break;
        v10 = 0;
        v11 = 0;
        v12 = 0;
        while (1)
        {
          v13 = *v6;
          v14 = *(_QWORD *)&v5[v13];
          v15 = v14 + 1;
          if (v14 == -1 || v15 > *(_QWORD *)&v5[*v7])
            break;
          v16 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v14);
          *(_QWORD *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0)
            goto LABEL_13;
          v10 += 7;
          if (v11++ >= 9)
          {
            v12 = 0;
            v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        v18 = v5[*v8];
        if (v5[*v8])
          v12 = 0;
LABEL_15:
        if (v18 || (v12 & 7) == 4)
          break;
        if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_29;
          v20 = objc_alloc_init(GEOLocalizedString);
          if (!GEOLocalizedStringReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          -[GEOPDMultiLocalizedString addLocalizedString:](a1, v20);

        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v21 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v22 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v21;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_29;
        }
      }
      while (*(_QWORD *)&v5[*v6] < *(_QWORD *)&v5[*v7]);
    }
    v23 = v5[*v8] == 0;
  }
  else
  {
LABEL_29:
    v23 = 0;
  }
  objc_sync_exit(v5);

  return v23;
}

void sub_188B7B574(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDNearbySearchFilterReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  void *v18;
  char v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  id v26;
  void *v27;
  _BOOL8 v28;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 2)
        {
          v19 = 0;
          v20 = 0;
          v21 = 0;
          *(_BYTE *)(a1 + 28) |= 1u;
          while (1)
          {
            v22 = *v4;
            v23 = *(_QWORD *)&v3[v22];
            v24 = v23 + 1;
            if (v23 == -1 || v24 > *(_QWORD *)&v3[*v5])
              break;
            v25 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v23);
            *(_QWORD *)&v3[v22] = v24;
            v21 |= (unint64_t)(v25 & 0x7F) << v19;
            if ((v25 & 0x80) == 0)
              goto LABEL_36;
            v19 += 7;
            v15 = v20++ >= 9;
            if (v15)
            {
              LODWORD(v21) = 0;
              goto LABEL_38;
            }
          }
          v3[*v6] = 1;
LABEL_36:
          if (v3[*v6])
            LODWORD(v21) = 0;
LABEL_38:
          *(_DWORD *)(a1 + 24) = v21;
        }
        else if ((v10 >> 3) == 1)
        {
          PBReaderReadString();
          v18 = (void *)objc_claimAutoreleasedReturnValue();
          if (v18)
            -[GEOPDNearbySearchFilter addIncludedCategoryFilter:](a1, v18);

        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v26 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v27 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v26;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_41;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v28 = v3[*v6] == 0;
  }
  else
  {
LABEL_41:
    v28 = 0;
  }
  objc_sync_exit(v3);

  return v28;
}

void sub_188B7BF38(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B7C4B8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDNearbySearchParametersReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  int *v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  int *v18;
  int *v19;
  int *v20;
  int *v21;
  char v22;
  unsigned int v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  BOOL v29;
  int v30;
  unint64_t v32;
  BOOL v33;
  int *v34;
  int v35;
  int v36;
  BOOL v37;
  char v38;
  unsigned int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  id v45;
  void *v46;
  int v47;
  char v48;
  unsigned int v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  char v53;
  GEOPDViewportInfo *v54;
  uint64_t v55;
  void *v56;
  char v57;
  uint64_t v58;
  char v59;
  int v60;
  int v61;
  char v62;
  void *v63;
  int v65;
  int *v66;
  char v67;
  char v68;
  char v69;
  char v70;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = v6;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = ((*(unsigned __int8 *)(a1 + 60) >> 4) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 2) & 1);
  while (2)
  {
    v14 = 1;
    v15 = 1;
    v16 = 1;
    switch(a3[v9])
    {
      case -4:
        ++v13;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v15 = v11;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v17 = v13 != 0;
        v67 = v17 & ~(_BYTE)v12 | v10;
        v68 = v17 | v12 | v67;
        if ((((v17 | v12) | v8) & 1) != 0)
          v18 = 0;
        else
          v18 = a3;
        v69 = (v18 == 0) | v17 | v12;
        v70 = v17 | v12;
        v19 = (int *)MEMORY[0x1E0D82BF0];
        v20 = (int *)MEMORY[0x1E0D82BC8];
        v21 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v13;
LABEL_7:
        v14 = v10;
LABEL_8:
        v15 = v11;
        v16 = v12;
LABEL_10:
        ++v9;
        v10 = v14;
        v11 = v15;
        v12 = v16;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v19) >= *(_QWORD *)(v3 + *v7) || *(_BYTE *)(v3 + *v20))
      goto LABEL_90;
    v22 = 0;
    v23 = 0;
    v24 = 0;
    while (1)
    {
      v25 = *v19;
      v26 = *(_QWORD *)(v3 + v25);
      v27 = v26 + 1;
      if (v26 == -1 || v27 > *(_QWORD *)(v3 + *v7))
        break;
      v28 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v26);
      *(_QWORD *)(v3 + v25) = v27;
      v24 |= (unint64_t)(v28 & 0x7F) << v22;
      if ((v28 & 0x80) == 0)
        goto LABEL_25;
      v22 += 7;
      v29 = v23++ >= 9;
      if (v29)
      {
        v24 = 0;
        v30 = *(unsigned __int8 *)(v3 + *v20);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v20) = 1;
LABEL_25:
    v30 = *(unsigned __int8 *)(v3 + *v20);
    if (*(_BYTE *)(v3 + *v20))
      v24 = 0;
LABEL_27:
    if (v30 || (v24 & 7) == 4)
    {
LABEL_90:
      v65 = 1;
      goto LABEL_91;
    }
    v32 = v24 >> 3;
    v33 = v70;
    if ((v69 & 1) == 0)
    {
      v34 = v18;
      do
      {
        v36 = *v34++;
        v35 = v36;
        v33 = v36 != 0;
        if (v36)
          v37 = v35 == (_DWORD)v32;
        else
          v37 = 1;
      }
      while (!v37);
    }
    switch((int)v32)
    {
      case 1:
        if ((v8 & 1) == 0)
          goto LABEL_72;
        v38 = 0;
        v39 = 0;
        v40 = 0;
        *(_BYTE *)(a1 + 60) |= 2u;
        while (1)
        {
          v41 = *v19;
          v42 = *(_QWORD *)(v3 + v41);
          v43 = v42 + 1;
          if (v42 == -1 || v43 > *(_QWORD *)(v3 + *v7))
            break;
          v44 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v42);
          *(_QWORD *)(v3 + v41) = v43;
          v40 |= (unint64_t)(v44 & 0x7F) << v38;
          if ((v44 & 0x80) == 0)
            goto LABEL_75;
          v38 += 7;
          v29 = v39++ >= 9;
          if (v29)
          {
            LODWORD(v40) = 0;
            goto LABEL_77;
          }
        }
        *(_BYTE *)(v3 + *v20) = 1;
LABEL_75:
        if (*(_BYTE *)(v3 + *v20))
          LODWORD(v40) = 0;
LABEL_77:
        v58 = 56;
        goto LABEL_82;
      case 2:
        if ((v8 & 1) == 0)
          goto LABEL_72;
        v48 = 0;
        v49 = 0;
        v40 = 0;
        *(_BYTE *)(a1 + 60) |= 1u;
        while (2)
        {
          v50 = *v19;
          v51 = *(_QWORD *)(v3 + v50);
          v52 = v51 + 1;
          if (v51 == -1 || v52 > *(_QWORD *)(v3 + *v7))
          {
            *(_BYTE *)(v3 + *v20) = 1;
          }
          else
          {
            v53 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v51);
            *(_QWORD *)(v3 + v50) = v52;
            v40 |= (unint64_t)(v53 & 0x7F) << v48;
            if (v53 < 0)
            {
              v48 += 7;
              v29 = v49++ >= 9;
              if (v29)
              {
                LODWORD(v40) = 0;
                goto LABEL_81;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v20))
          LODWORD(v40) = 0;
LABEL_81:
        v58 = 52;
LABEL_82:
        *(_DWORD *)(a1 + v58) = v40;
        goto LABEL_89;
      case 3:
        if (!v33)
          goto LABEL_72;
        if ((*(_BYTE *)(a1 + 60) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_110;
          v59 = 8 * *(_BYTE *)(a1 + 60);
          goto LABEL_87;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_110;
        v54 = objc_alloc_init(GEOPDViewportInfo);
        if (!GEOPDViewportInfoReadAllFrom((uint64_t)v54, (void *)v3))
          goto LABEL_109;
        PBReaderRecallMark();
        v55 = 32;
        goto LABEL_71;
      case 4:
        if (!v33)
          goto LABEL_72;
        if ((*(_BYTE *)(a1 + 60) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_110;
          v59 = 16 * *(_BYTE *)(a1 + 60);
LABEL_87:
          v9 += v59 >> 7;
LABEL_88:
          v20 = (int *)MEMORY[0x1E0D82BC8];
          v7 = (int *)MEMORY[0x1E0D82BD8];
LABEL_89:
          if (!(v68 & 1 | (v9 != 0)))
            goto LABEL_90;
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_110;
        v54 = objc_alloc_init(GEOPDNearbySearchFilter);
        if (GEOPDNearbySearchFilterReadAllFrom((uint64_t)v54, (void *)v3))
        {
          PBReaderRecallMark();
          v55 = 24;
LABEL_71:
          v56 = *(void **)(a1 + v55);
          *(_QWORD *)(a1 + v55) = v54;

          --v9;
          goto LABEL_88;
        }
LABEL_109:

LABEL_110:
        v65 = 0;
        v20 = (int *)MEMORY[0x1E0D82BC8];
LABEL_91:
        v66 = &OBJC_IVAR___GEOPDAutocompleteResultSection__readerMarkLength;
        if ((v67 & 1) != 0)
LABEL_92:
          *(_BYTE *)(a1 + v66[357]) |= 4u;
        if (v70 & 1 | ((v65 & 1) == 0))
        {
          *(_BYTE *)(a1 + v66[357]) |= 0x10u;
          *(_BYTE *)(a1 + v66[357]) |= 8u;
          goto LABEL_103;
        }
        if (v18)
        {
          while (2)
          {
            while (1)
            {
              v61 = *v18++;
              v60 = v61;
              if (v61 == 3)
                break;
              if (v60 == 4)
              {
                v62 = 8;
                goto LABEL_102;
              }
              if (!v60)
                goto LABEL_103;
            }
            v62 = 16;
LABEL_102:
            *(_BYTE *)(a1 + v66[357]) |= v62;
            continue;
          }
        }
LABEL_103:
        if (v65)
          v3 = *(_BYTE *)(v3 + *v20) == 0;
        else
          v3 = 0;
        if ((v70 & 1) != 0)
        {
          v63 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      default:
        if ((v67 & 1) == 0 || (*(_BYTE *)(a1 + 60) & 4) != 0)
        {
LABEL_72:
          v57 = PBReaderSkipValueWithTag();
          v7 = (int *)MEMORY[0x1E0D82BD8];
          v20 = (int *)MEMORY[0x1E0D82BC8];
          if ((v57 & 1) == 0)
          {
            v65 = 0;
            goto LABEL_91;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v45 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v46 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v45;

          }
          v47 = PBUnknownFieldAdd();
          v20 = (int *)MEMORY[0x1E0D82BC8];
          v7 = (int *)MEMORY[0x1E0D82BD8];
          if (!v47)
          {
            v65 = 0;
            v66 = &OBJC_IVAR___GEOPDAutocompleteResultSection__readerMarkLength;
            goto LABEL_92;
          }
        }
        goto LABEL_89;
    }
  }
}

void sub_188B7D044(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B7D124(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDNearbySearchParametersReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDNearbySearchParametersReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDNearbySearchParametersReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDNearbySearchParametersReadAllFrom_initialTag;
  Specified = GEOPDNearbySearchParametersReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    objc_msgSend(*(id *)(a1 + 32), "readAll:", 1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_188B7D390(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B7D568(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDNearbySearchParametersIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v2 = (*(_BYTE *)(a1 + 60) & 0x38) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return v2;
}

void sub_188B7D7A0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDNearbySearchResultReadAllFrom(uint64_t a1, void *a2)
{
  unsigned __int8 *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  int v8;
  char v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  char v17;
  BOOL v18;
  id v19;
  void *v20;
  _BOOL8 v21;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    v7 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      v8 = v3[*v6];
      if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
        break;
      if (v3[*v6])
      {
        v8 = 1;
        break;
      }
      v9 = 0;
      v10 = 0;
      v11 = 0;
      while (1)
      {
        v12 = *v4;
        v13 = *(_QWORD *)&v3[v12];
        v14 = v13 + 1;
        if (v13 == -1 || v14 > *(_QWORD *)&v3[*v5])
          break;
        v15 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v13);
        *(_QWORD *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0)
          goto LABEL_13;
        v9 += 7;
        if (v10++ >= 9)
        {
          v17 = 0;
          v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      v8 = v3[*v6];
      if (v3[*v6])
        v17 = 0;
      else
        v17 = v11;
LABEL_16:
      if (v8)
        v18 = 1;
      else
        v18 = (v17 & 7) == 4;
      if (v18)
        break;
      if (!*(_QWORD *)(a1 + 8))
      {
        v19 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v20 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = v19;

      }
      if ((PBUnknownFieldAdd() & 1) == 0)
        goto LABEL_23;
    }
    v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_188B7DDD4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDNearestTransitParametersReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  char v25;
  unsigned int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  id v32;
  void *v33;
  _BOOL8 v34;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 2)
        {
          v25 = 0;
          v26 = 0;
          v27 = 0;
          *(_BYTE *)(a1 + 28) |= 2u;
          while (1)
          {
            v28 = *v4;
            v29 = *(_QWORD *)&v3[v28];
            v30 = v29 + 1;
            if (v29 == -1 || v30 > *(_QWORD *)&v3[*v5])
              break;
            v31 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v29);
            *(_QWORD *)&v3[v28] = v30;
            v27 |= (unint64_t)(v31 & 0x7F) << v25;
            if ((v31 & 0x80) == 0)
              goto LABEL_44;
            v25 += 7;
            v15 = v26++ >= 9;
            if (v15)
            {
              v27 = 0;
              goto LABEL_46;
            }
          }
          v3[*v6] = 1;
LABEL_44:
          if (v3[*v6])
            v27 = 0;
LABEL_46:
          *(_BYTE *)(a1 + 24) = v27 != 0;
        }
        else if ((v10 >> 3) == 1)
        {
          v18 = 0;
          v19 = 0;
          v20 = 0;
          *(_BYTE *)(a1 + 28) |= 1u;
          while (1)
          {
            v21 = *v4;
            v22 = *(_QWORD *)&v3[v21];
            v23 = v22 + 1;
            if (v22 == -1 || v23 > *(_QWORD *)&v3[*v5])
              break;
            v24 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v22);
            *(_QWORD *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0)
              goto LABEL_40;
            v18 += 7;
            v15 = v19++ >= 9;
            if (v15)
            {
              v20 = 0;
              goto LABEL_42;
            }
          }
          v3[*v6] = 1;
LABEL_40:
          if (v3[*v6])
            v20 = 0;
LABEL_42:
          *(_QWORD *)(a1 + 16) = v20;
        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v32 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v33 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v32;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_49;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v34 = v3[*v6] == 0;
  }
  else
  {
LABEL_49:
    v34 = 0;
  }
  objc_sync_exit(v3);

  return v34;
}

void sub_188B7E4EC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDOfflineRegionNameParametersReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  GEOMapRegion *v18;
  void *v19;
  id v20;
  void *v21;
  _BOOL8 v22;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_29;
          v18 = objc_alloc_init(GEOMapRegion);
          if (!GEOMapRegionReadAllFrom((uint64_t)v18, v3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          v19 = *(void **)(a1 + 16);
          *(_QWORD *)(a1 + 16) = v18;

        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v20 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v21 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v20;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_29;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v22 = v3[*v6] == 0;
  }
  else
  {
LABEL_29:
    v22 = 0;
  }
  objc_sync_exit(v3);

  return v22;
}

void sub_188B7ECA0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDOfflineRegionNameResultReadAllFrom(uint64_t a1, void *a2, int a3)
{
  char *v5;
  int *v6;
  int *v7;
  int *v8;
  int *v9;
  char v10;
  unsigned int v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  int v18;
  GEOLocalizedString *v20;
  void *v21;
  id v22;
  void *v23;
  _BOOL8 v24;

  v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    v6 = (int *)MEMORY[0x1E0D82BF0];
    v7 = (int *)MEMORY[0x1E0D82BD8];
    v8 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v5[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v5[*MEMORY[0x1E0D82BD8]])
    {
      v9 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v5[*v8])
          break;
        v10 = 0;
        v11 = 0;
        v12 = 0;
        while (1)
        {
          v13 = *v6;
          v14 = *(_QWORD *)&v5[v13];
          v15 = v14 + 1;
          if (v14 == -1 || v15 > *(_QWORD *)&v5[*v7])
            break;
          v16 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v14);
          *(_QWORD *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0)
            goto LABEL_13;
          v10 += 7;
          if (v11++ >= 9)
          {
            v12 = 0;
            v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        v18 = v5[*v8];
        if (v5[*v8])
          v12 = 0;
LABEL_15:
        if (v18 || (v12 & 7) == 4)
          break;
        if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_29;
          v20 = objc_alloc_init(GEOLocalizedString);
          if (!GEOLocalizedStringReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          v21 = *(void **)(a1 + 16);
          *(_QWORD *)(a1 + 16) = v20;

        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v22 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v23 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v22;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_29;
        }
      }
      while (*(_QWORD *)&v5[*v6] < *(_QWORD *)&v5[*v7]);
    }
    v24 = v5[*v8] == 0;
  }
  else
  {
LABEL_29:
    v24 = 0;
  }
  objc_sync_exit(v5);

  return v24;
}

void sub_188B7F3A0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDOfflineSearchCapabilitiesReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  id v25;
  void *v26;
  _BOOL8 v27;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 1)
        {
          v18 = 0;
          v19 = 0;
          v20 = 0;
          *(_BYTE *)(a1 + 20) |= 1u;
          while (1)
          {
            v21 = *v4;
            v22 = *(_QWORD *)&v3[v21];
            v23 = v22 + 1;
            if (v22 == -1 || v23 > *(_QWORD *)&v3[*v5])
              break;
            v24 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v22);
            *(_QWORD *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0)
              goto LABEL_32;
            v18 += 7;
            v15 = v19++ >= 9;
            if (v15)
            {
              v20 = 0;
              goto LABEL_34;
            }
          }
          v3[*v6] = 1;
LABEL_32:
          if (v3[*v6])
            v20 = 0;
LABEL_34:
          *(_BYTE *)(a1 + 16) = v20 != 0;
        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v25 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v26 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v25;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_37;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v27 = v3[*v6] == 0;
  }
  else
  {
LABEL_37:
    v27 = 0;
  }
  objc_sync_exit(v3);

  return v27;
}

void sub_188B7FAA8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDPaginationInfoReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  char v15;
  unsigned __int8 v16;
  int *v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  BOOL v28;
  int v29;
  unint64_t v31;
  BOOL v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  id v40;
  void *v41;
  int v42;
  char v43;
  unsigned int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  char v50;
  unsigned int v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  char v55;
  char v56;
  uint64_t v57;
  char v58;
  char v59;
  int v60;
  int v61;
  void *v62;
  int v64;
  int *v65;
  char v66;
  char v67;
  char v68;
  BOOL v69;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int8 *)(a1 + 60) >> 4) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 2) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v11;
        v12 = v7;
        goto LABEL_8;
      case -3:
        v9 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v11 != 0;
        v15 = v14 & ~(_BYTE)v7;
        v16 = v14 | v7;
        v66 = v15 | v8;
        v67 = v16 | v15 | v8;
        if (((v16 | v9) & 1) != 0)
          v17 = 0;
        else
          v17 = a3;
        v68 = (v17 == 0) | v16;
        v69 = v16;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_7:
        v12 = v7;
        v13 = v8;
LABEL_8:
        ++v10;
        v7 = v12;
        v8 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v19))
      goto LABEL_83;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0)
        goto LABEL_23;
      v21 += 7;
      v28 = v22++ >= 9;
      if (v28)
      {
        v23 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_25;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_23:
    v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_25:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_83:
      v64 = 1;
      goto LABEL_84;
    }
    v31 = v23 >> 3;
    v32 = v69;
    if ((v68 & 1) == 0)
    {
      v33 = v17;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if (!v32)
          goto LABEL_66;
        if ((*(_BYTE *)(a1 + 60) & 0x10) == 0)
        {
          PBReaderReadString();
          v37 = objc_claimAutoreleasedReturnValue();
          v38 = 32;
          goto LABEL_43;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_102;
        v58 = 8 * *(_BYTE *)(a1 + 60);
        goto LABEL_81;
      case 2:
        if (!v32)
          goto LABEL_66;
        if ((*(_BYTE *)(a1 + 60) & 8) == 0)
        {
          PBReaderReadString();
          v37 = objc_claimAutoreleasedReturnValue();
          v38 = 24;
LABEL_43:
          v39 = *(void **)(a1 + v38);
          *(_QWORD *)(a1 + v38) = v37;

          v19 = (int *)MEMORY[0x1E0D82BC8];
          --v10;
LABEL_82:
          if (!(v67 & 1 | (v10 != 0)))
            goto LABEL_83;
          continue;
        }
        if ((PBReaderSkipValueWithTag() & 1) != 0)
        {
          v58 = 16 * *(_BYTE *)(a1 + 60);
LABEL_81:
          v10 += v58 >> 7;
          v19 = (int *)MEMORY[0x1E0D82BC8];
          goto LABEL_82;
        }
LABEL_102:
        v64 = 0;
        v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_84:
        v65 = &OBJC_IVAR___GEOPDAutocompleteResultSection__readerMarkLength;
        if ((v66 & 1) != 0)
LABEL_85:
          *(_BYTE *)(a1 + v65[373]) |= 4u;
        if (v69 || (v64 & 1) == 0)
        {
          *(_BYTE *)(a1 + v65[373]) |= 0x10u;
          *(_BYTE *)(a1 + v65[373]) |= 8u;
          goto LABEL_96;
        }
        if (v17)
        {
          while (1)
          {
            v61 = *v17++;
            v60 = v61;
            if (v61 == 1)
              break;
            if (v60 == 2)
            {
              v59 = 8;
LABEL_92:
              *(_BYTE *)(a1 + v65[373]) |= v59;
            }
            else if (!v60)
            {
              goto LABEL_96;
            }
          }
          v59 = 16;
          goto LABEL_92;
        }
LABEL_96:
        if (v64)
          v3 = *(_BYTE *)(v3 + *v19) == 0;
        else
          v3 = 0;
        if (v69)
        {
          v62 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      case 4:
        if ((v9 & 1) == 0)
          goto LABEL_66;
        v43 = 0;
        v44 = 0;
        v45 = 0;
        *(_BYTE *)(a1 + 60) |= 1u;
        while (2)
        {
          v46 = *v18;
          v47 = *(_QWORD *)(v3 + v46);
          v48 = v47 + 1;
          if (v47 == -1 || v48 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v19) = 1;
          }
          else
          {
            v49 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v47);
            *(_QWORD *)(v3 + v46) = v48;
            v45 |= (unint64_t)(v49 & 0x7F) << v43;
            if (v49 < 0)
            {
              v43 += 7;
              v28 = v44++ >= 9;
              if (v28)
              {
                LODWORD(v45) = 0;
                goto LABEL_71;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v19))
          LODWORD(v45) = 0;
LABEL_71:
        v57 = 52;
        goto LABEL_76;
      case 5:
        if ((v9 & 1) == 0)
          goto LABEL_66;
        v50 = 0;
        v51 = 0;
        v45 = 0;
        *(_BYTE *)(a1 + 60) |= 2u;
        while (2)
        {
          v52 = *v18;
          v53 = *(_QWORD *)(v3 + v52);
          v54 = v53 + 1;
          if (v53 == -1 || v54 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v19) = 1;
          }
          else
          {
            v55 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v53);
            *(_QWORD *)(v3 + v52) = v54;
            v45 |= (unint64_t)(v55 & 0x7F) << v50;
            if (v55 < 0)
            {
              v50 += 7;
              v28 = v51++ >= 9;
              if (v28)
              {
                LODWORD(v45) = 0;
                goto LABEL_75;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v19))
          LODWORD(v45) = 0;
LABEL_75:
        v57 = 56;
LABEL_76:
        *(_DWORD *)(a1 + v57) = v45;
        goto LABEL_82;
      default:
        if ((v66 & 1) == 0 || (*(_BYTE *)(a1 + 60) & 4) != 0)
        {
LABEL_66:
          v56 = PBReaderSkipValueWithTag();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if ((v56 & 1) == 0)
          {
            v64 = 0;
            goto LABEL_84;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v40 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v41 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v40;

          }
          v42 = PBUnknownFieldAdd();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if (!v42)
          {
            v64 = 0;
            v65 = &OBJC_IVAR___GEOPDAutocompleteResultSection__readerMarkLength;
            goto LABEL_85;
          }
        }
        goto LABEL_82;
    }
  }
}

void sub_188B8082C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B808F8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDPaginationInfoReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDPaginationInfoReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDPaginationInfoReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDPaginationInfoReadAllFrom_initialTag;
  Specified = GEOPDPaginationInfoReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_188B80D54(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B80F2C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPaginationInfoIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v2 = (*(_BYTE *)(a1 + 60) & 0x38) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return v2;
}

void sub_188B81160(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPaginationParametersReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  void *v26;
  id v27;
  void *v28;
  _BOOL8 v29;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 2)
        {
          PBReaderReadString();
          v25 = objc_claimAutoreleasedReturnValue();
          v26 = *(void **)(a1 + 16);
          *(_QWORD *)(a1 + 16) = v25;

        }
        else if ((v10 >> 3) == 1)
        {
          v18 = 0;
          v19 = 0;
          v20 = 0;
          *(_BYTE *)(a1 + 28) |= 1u;
          while (1)
          {
            v21 = *v4;
            v22 = *(_QWORD *)&v3[v21];
            v23 = v22 + 1;
            if (v22 == -1 || v23 > *(_QWORD *)&v3[*v5])
              break;
            v24 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v22);
            *(_QWORD *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0)
              goto LABEL_34;
            v18 += 7;
            v15 = v19++ >= 9;
            if (v15)
            {
              v20 = 0;
              goto LABEL_36;
            }
          }
          v3[*v6] = 1;
LABEL_34:
          if (v3[*v6])
            v20 = 0;
LABEL_36:
          *(_BYTE *)(a1 + 24) = v20 != 0;
        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v27 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v28 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v27;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_39;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v29 = v3[*v6] == 0;
  }
  else
  {
LABEL_39:
    v29 = 0;
  }
  objc_sync_exit(v3);

  return v29;
}

void sub_188B81A8C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B81E80(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDPlaceCollectionLookupParametersReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  char v17;
  unsigned __int8 v18;
  int *v19;
  int *v20;
  int *v21;
  int *v22;
  char v23;
  unsigned int v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  int v31;
  unint64_t v33;
  BOOL v34;
  int *v35;
  int v36;
  int v37;
  BOOL v38;
  GEOLatLng *v39;
  void *v40;
  id v41;
  void *v42;
  int v43;
  char v44;
  char v45;
  int v46;
  int v47;
  void *v48;
  int v50;
  int *v51;
  char v52;
  char v53;
  char v54;
  BOOL v55;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1)
      + (*(_BYTE *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1);
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v7 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 != 0;
        v17 = v16 & ~(_BYTE)v11 | v9;
        v18 = v16 | v11;
        v52 = v17;
        v53 = v18 | v17;
        if (((v18 | v7) & 1) != 0)
          v19 = 0;
        else
          v19 = a3;
        v20 = (int *)MEMORY[0x1E0D82BF0];
        v54 = (v19 == 0) | v18;
        v55 = v18;
        v21 = (int *)MEMORY[0x1E0D82BC8];
        v22 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v8;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v20) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v21))
      goto LABEL_62;
    v23 = 0;
    v24 = 0;
    v25 = 0;
    while (1)
    {
      v26 = *v20;
      v27 = *(_QWORD *)(v3 + v26);
      v28 = v27 + 1;
      if (v27 == -1 || v28 > *(_QWORD *)(v3 + *v6))
        break;
      v29 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v27);
      *(_QWORD *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0)
        goto LABEL_25;
      v23 += 7;
      if (v24++ >= 9)
      {
        v25 = 0;
        v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v21) = 1;
LABEL_25:
    v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(_BYTE *)(v3 + *v21))
      v25 = 0;
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_62:
      v50 = 1;
      goto LABEL_63;
    }
    v33 = v25 >> 3;
    v34 = v55;
    if ((v54 & 1) == 0)
    {
      v35 = v19;
      do
      {
        v37 = *v35++;
        v36 = v37;
        v34 = v37 != 0;
        if (v37)
          v38 = v36 == (_DWORD)v33;
        else
          v38 = 1;
      }
      while (!v38);
    }
    if ((_DWORD)v33 == 2)
      break;
    if ((_DWORD)v33 == 1)
    {
      if (!v34)
        goto LABEL_56;
      if ((*(_BYTE *)(a1 + 52) & 2) != 0)
      {
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_82;
        v8 += *(unsigned __int8 *)(a1 + 52) << 30 >> 31;
      }
      else
      {
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_82;
        v39 = objc_alloc_init(GEOLatLng);
        if (!GEOLatLngReadAllFrom((uint64_t)v39, (void *)v3))
          goto LABEL_81;
        PBReaderRecallMark();
        v40 = *(void **)(a1 + 24);
        *(_QWORD *)(a1 + 24) = v39;

        --v8;
      }
      goto LABEL_60;
    }
    if ((v52 & 1) == 0 || (*(_BYTE *)(a1 + 52) & 1) != 0)
      goto LABEL_56;
    if (!*(_QWORD *)(a1 + 16))
    {
      v41 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
      v42 = *(void **)(a1 + 16);
      *(_QWORD *)(a1 + 16) = v41;

    }
    v43 = PBUnknownFieldAdd();
    v21 = (int *)MEMORY[0x1E0D82BC8];
    if (!v43)
    {
      v50 = 0;
      v51 = &OBJC_IVAR___GEOPDAutocompleteResultSection__readerMarkLength;
      goto LABEL_64;
    }
LABEL_61:
    if (!(v53 & 1 | (v8 != 0)))
      goto LABEL_62;
  }
  if (!v34 || (*(_BYTE *)(a1 + 52) & 4) != 0)
  {
LABEL_56:
    v44 = PBReaderSkipValueWithTag();
    v21 = (int *)MEMORY[0x1E0D82BC8];
    if ((v44 & 1) == 0)
    {
      v50 = 0;
      goto LABEL_63;
    }
    goto LABEL_61;
  }
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_82;
  v39 = objc_alloc_init(GEOPDMapsIdentifier);
  if (GEOPDMapsIdentifierReadAllFrom((uint64_t)v39, (void *)v3))
  {
    PBReaderRecallMark();
    -[GEOPDPlaceCollectionLookupParameters _addNoFlagsCollectionId:](a1, v39);

LABEL_60:
    v21 = (int *)MEMORY[0x1E0D82BC8];
    goto LABEL_61;
  }
LABEL_81:

LABEL_82:
  v50 = 0;
  v21 = (int *)MEMORY[0x1E0D82BC8];
LABEL_63:
  v51 = &OBJC_IVAR___GEOPDAutocompleteResultSection__readerMarkLength;
  if ((v52 & 1) == 0)
    goto LABEL_65;
LABEL_64:
  *(_BYTE *)(a1 + v51[387]) |= 1u;
LABEL_65:
  if (v55 || (v50 & 1) == 0)
  {
    *(_BYTE *)(a1 + v51[387]) |= 2u;
    *(_BYTE *)(a1 + v51[387]) |= 4u;
    goto LABEL_75;
  }
  if (v19)
  {
    while (1)
    {
      v47 = *v19++;
      v46 = v47;
      if (v47 == 1)
        break;
      if (v46 == 2)
      {
        v45 = 4;
LABEL_71:
        *(_BYTE *)(a1 + v51[387]) |= v45;
      }
      else if (!v46)
      {
        goto LABEL_75;
      }
    }
    v45 = 2;
    goto LABEL_71;
  }
LABEL_75:
  if (v50)
    v3 = *(_BYTE *)(v3 + *v21) == 0;
  else
    v3 = 0;
  if (v55)
  {
    v48 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_188B824C0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B829F4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDPlaceCollectionLookupParametersCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _BYTE v11[128];
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  objc_msgSend(*(id *)(a1 + 24), "readAll:", 1);
  v9 = 0u;
  v10 = 0u;
  v7 = 0u;
  v8 = 0u;
  v2 = *(id *)(a1 + 32);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v8;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v8 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v7 + 1) + 8 * v6++), "readAll:", 1, (_QWORD)v7);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
    }
    while (v4);
  }

}

unint64_t GEOPDPlaceCollectionLookupParametersReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDPlaceCollectionLookupParametersReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDPlaceCollectionLookupParametersReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDPlaceCollectionLookupParametersReadAllFrom_initialTag;
  Specified = GEOPDPlaceCollectionLookupParametersReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDPlaceCollectionLookupParametersCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_188B82D60(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B82F9C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceCollectionLookupParametersIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v2 = (*(_BYTE *)(a1 + 52) & 0xE) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return v2;
}

void sub_188B83394(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceCollectionLookupResultReadAllFrom(uint64_t a1, void *a2, int a3)
{
  char *v5;
  int *v6;
  int *v7;
  int *v8;
  int *v9;
  char v10;
  unsigned int v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  int v18;
  GEOPDComponent *v20;
  void *v21;
  id v22;
  void *v23;
  _BOOL8 v24;

  v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    v6 = (int *)MEMORY[0x1E0D82BF0];
    v7 = (int *)MEMORY[0x1E0D82BD8];
    v8 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v5[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v5[*MEMORY[0x1E0D82BD8]])
    {
      v9 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v5[*v8])
          break;
        v10 = 0;
        v11 = 0;
        v12 = 0;
        while (1)
        {
          v13 = *v6;
          v14 = *(_QWORD *)&v5[v13];
          v15 = v14 + 1;
          if (v14 == -1 || v15 > *(_QWORD *)&v5[*v7])
            break;
          v16 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v14);
          *(_QWORD *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0)
            goto LABEL_13;
          v10 += 7;
          if (v11++ >= 9)
          {
            v12 = 0;
            v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        v18 = v5[*v8];
        if (v5[*v8])
          v12 = 0;
LABEL_15:
        if (v18 || (v12 & 7) == 4)
          break;
        if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_29;
          v20 = objc_alloc_init(GEOPDComponent);
          if (!GEOPDComponentReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          v21 = *(void **)(a1 + 16);
          *(_QWORD *)(a1 + 16) = v20;

        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v22 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v23 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v22;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_29;
        }
      }
      while (*(_QWORD *)&v5[*v6] < *(_QWORD *)&v5[*v7]);
    }
    v24 = v5[*v8] == 0;
  }
  else
  {
LABEL_29:
    v24 = 0;
  }
  objc_sync_exit(v5);

  return v24;
}

void sub_188B83A60(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceGlobalCommonResultReadAllFrom(uint64_t a1, void *a2, int a3)
{
  char *v5;
  int *v6;
  int *v7;
  int *v8;
  int *v9;
  char v10;
  unsigned int v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  int v18;
  GEOPDPlaceContextMetadata *v20;
  id v21;
  void *v22;
  _BOOL8 v23;

  v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    v6 = (int *)MEMORY[0x1E0D82BF0];
    v7 = (int *)MEMORY[0x1E0D82BD8];
    v8 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v5[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v5[*MEMORY[0x1E0D82BD8]])
    {
      v9 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v5[*v8])
          break;
        v10 = 0;
        v11 = 0;
        v12 = 0;
        while (1)
        {
          v13 = *v6;
          v14 = *(_QWORD *)&v5[v13];
          v15 = v14 + 1;
          if (v14 == -1 || v15 > *(_QWORD *)&v5[*v7])
            break;
          v16 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v14);
          *(_QWORD *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0)
            goto LABEL_13;
          v10 += 7;
          if (v11++ >= 9)
          {
            v12 = 0;
            v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        v18 = v5[*v8];
        if (v5[*v8])
          v12 = 0;
LABEL_15:
        if (v18 || (v12 & 7) == 4)
          break;
        if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_29;
          v20 = objc_alloc_init(GEOPDPlaceContextMetadata);
          if (!GEOPDPlaceContextMetadataReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          -[GEOPDPlaceGlobalCommonResult addPlaceContextMetadata:](a1, v20);

        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v21 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v22 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v21;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_29;
        }
      }
      while (*(_QWORD *)&v5[*v6] < *(_QWORD *)&v5[*v7]);
    }
    v23 = v5[*v8] == 0;
  }
  else
  {
LABEL_29:
    v23 = 0;
  }
  objc_sync_exit(v5);

  return v23;
}

void sub_188B84298(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B84BB0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B84E30(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B84F80(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B850D0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B855F4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B857A8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B85948(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B85BF0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B85D2C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B85E48(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B85F94(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B861A8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B862F4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B86444(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B865F8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B86878(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B88B20(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B88C64(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B92670(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDPlaceGlobalResultCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  -[GEOPDSearchResult readAll:](*(_QWORD *)(a1 + 368), 1);
  objc_msgSend(*(id *)(a1 + 248), "readAll:", 1);
  -[GEOPDSiriSearchResult readAll:](*(_QWORD *)(a1 + 392), 1);
  -[GEOPDLocationDirectedSearchResult readAll:](*(_QWORD *)(a1 + 216), 1);
  -[GEOPDAutocompleteResult readAll:](*(_QWORD *)(a1 + 64), 1);
  -[GEOPDCategorySearchResult readAll:](*(_QWORD *)(a1 + 136), 1);
  -[GEOPDPopularNearbySearchResult readAll:](*(_QWORD *)(a1 + 320), 1);
  -[GEOPDSearchZeroKeywordCategorySuggestionResult readAll:](*(_QWORD *)(a1 + 376), 1);
  -[GEOPDIpGeoLookupResult readAll:](*(_QWORD *)(a1 + 208), 1);
  -[GEOPDBatchSpatialLookupResult readAll:](*(_QWORD *)(a1 + 104), 1);
  -[GEOPDCollectionSuggestionResult readAll:](*(_QWORD *)(a1 + 152), 1);
  -[GEOPDPublisherViewResult readAll:](*(_QWORD *)(a1 + 328), 1);
  -[GEOPDAllCollectionsViewResult readAll:](*(_QWORD *)(a1 + 48), 1);
  -[GEOPDAllGuidesLocationsViewResult readAll:](*(_QWORD *)(a1 + 56), 1);
  -[GEOPDGuidesHomeResult readAll:](*(_QWORD *)(a1 + 200), 1);
  -[GEOPDQueryUnderstandingResult readAll:](*(_QWORD *)(a1 + 336), 1);
}

uint64_t _GEOPDPlaceGlobalResultIsDirty(uint64_t a1)
{
  unint64_t v2;
  os_unfair_lock_s *v3;
  char IsDirty;
  uint64_t v6;
  int v7;
  os_unfair_lock_s *v8;
  BOOL v9;
  os_unfair_lock_s *v10;
  char v11;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 440));
  v2 = *(_QWORD *)(a1 + 444);
  if ((v2 & 0x10000000000000) != 0)
    return 1;
  if ((v2 & 0x100000000000) != 0)
  {
    v3 = *(os_unfair_lock_s **)(a1 + 368);
    if (v3)
    {
      os_unfair_lock_lock_with_options();
      IsDirty = _GEOPDSearchResultIsDirty((uint64_t)v3);
      os_unfair_lock_unlock(v3 + 54);
      if ((IsDirty & 1) != 0)
        return 1;
      v2 = *(_QWORD *)(a1 + 444);
    }
  }
  if ((v2 & 0x20C20204000) != 0)
    return 1;
  if ((v2 & 0x800000000000) != 0)
  {
    v6 = *(_QWORD *)(a1 + 392);
    if (v6)
    {
      os_unfair_lock_lock_with_options();
      os_unfair_lock_assert_owner((const os_unfair_lock *)(v6 + 48));
      v7 = *(_BYTE *)(v6 + 56) & 0x1C;
      os_unfair_lock_unlock((os_unfair_lock_t)(v6 + 48));
      if (v7)
        return 1;
    }
    v2 = *(_QWORD *)(a1 + 444);
  }
  if ((v2 & 0x2000000) != 0)
  {
    v8 = *(os_unfair_lock_s **)(a1 + 216);
    if (v8)
    {
      os_unfair_lock_lock_with_options();
      v9 = _GEOPDLocationDirectedSearchResultIsDirty((uint64_t)v8);
      os_unfair_lock_unlock(v8 + 14);
      if (v9)
        return 1;
    }
    v2 = *(_QWORD *)(a1 + 444);
  }
  if ((v2 & 0x40) != 0)
  {
    v10 = *(os_unfair_lock_s **)(a1 + 64);
    if (v10)
    {
      os_unfair_lock_lock_with_options();
      v11 = _GEOPDAutocompleteResultIsDirty((uint64_t)v10);
      os_unfair_lock_unlock(v10 + 20);
      if ((v11 & 1) != 0)
        return 1;
    }
    v2 = *(_QWORD *)(a1 + 444);
  }
  if ((v2 & 0x2000) != 0)
    return 1;
  if ((v2 & 0x8000) != 0)
  {
    if ((GEOPDCategorySearchResultIsDirty(*(os_unfair_lock_s **)(a1 + 136)) & 1) != 0)
      return 1;
    v2 = *(_QWORD *)(a1 + 444);
  }
  if ((v2 & 0x4000000000) != 0)
  {
    if (GEOPDPopularNearbySearchResultIsDirty(*(_QWORD *)(a1 + 320)))
      return 1;
    v2 = *(_QWORD *)(a1 + 444);
  }
  if ((v2 & 0x200000000000) != 0)
  {
    if (GEOPDSearchZeroKeywordCategorySuggestionResultIsDirty(*(_QWORD *)(a1 + 376)))
      return 1;
    v2 = *(_QWORD *)(a1 + 444);
  }
  if ((v2 & 0xC480048181602) != 0)
    return 1;
  if ((v2 & 0x1000000) != 0)
  {
    if (GEOPDIpGeoLookupResultIsDirty(*(_QWORD *)(a1 + 208)))
      return 1;
    v2 = *(_QWORD *)(a1 + 444);
  }
  if ((v2 & 0x400000) != 0)
    return 1;
  if ((v2 & 0x800) != 0)
  {
    if ((GEOPDBatchSpatialLookupResultIsDirty(*(os_unfair_lock_s **)(a1 + 104)) & 1) != 0)
      return 1;
    v2 = *(_QWORD *)(a1 + 444);
  }
  if ((v2 & 0x2000310010180) != 0)
    return 1;
  if ((v2 & 0x20000) != 0)
  {
    if ((GEOPDCollectionSuggestionResultIsDirty(*(os_unfair_lock_s **)(a1 + 152)) & 1) != 0)
      return 1;
    v2 = *(_QWORD *)(a1 + 444);
  }
  if ((v2 & 0x8000000000) != 0)
  {
    if (GEOPDPublisherViewResultIsDirty(*(_QWORD *)(a1 + 328)))
      return 1;
    v2 = *(_QWORD *)(a1 + 444);
  }
  if ((v2 & 0x10) != 0)
  {
    if (GEOPDAllCollectionsViewResultIsDirty(*(_QWORD *)(a1 + 48)))
      return 1;
    v2 = *(_QWORD *)(a1 + 444);
  }
  if ((v2 & 0x1000004000008) != 0)
    return 1;
  if ((v2 & 0x20) != 0)
  {
    if ((GEOPDAllGuidesLocationsViewResultIsDirty(*(os_unfair_lock_s **)(a1 + 56)) & 1) != 0)
      return 1;
    v2 = *(_QWORD *)(a1 + 444);
  }
  if ((v2 & 0x800000) != 0)
  {
    if ((GEOPDGuidesHomeResultIsDirty(*(os_unfair_lock_s **)(a1 + 200)) & 1) != 0)
      return 1;
    v2 = *(_QWORD *)(a1 + 444);
  }
  if ((v2 & 0x40000) != 0)
    return 1;
  if ((v2 & 0x10000000000) == 0)
    goto LABEL_59;
  if (GEOPDQueryUnderstandingResultIsDirty(*(_QWORD *)(a1 + 336)))
    return 1;
  v2 = *(_QWORD *)(a1 + 444);
LABEL_59:
  if ((v2 & 0x43080000000) != 0)
    return 1;
  return (v2 >> 2) & 1;
}

void GEOPDPlaceGlobalResultClearSensitiveFields(uint64_t a1, uint64_t a2, int a3)
{
  int v5;
  id *v6;
  int HasSensitiveFields;
  void *v8;
  void *v9;
  uint64_t v10;
  void *v11;
  id *v12;
  int v13;
  void *v14;
  uint64_t v15;
  id v16;

  if (a1)
    v5 = a3;
  else
    v5 = 0;
  if (v5 == 1
    && (-[GEOPDPlaceGlobalResult _readAutocompleteResult](a1), *(_QWORD *)(a1 + 64))
    && (-[GEOPDPlaceGlobalResult autocompleteResult]((id *)a1),
        v6 = (id *)objc_claimAutoreleasedReturnValue(),
        HasSensitiveFields = GEOPDAutocompleteResultHasSensitiveFields(v6, a2),
        v6,
        HasSensitiveFields))
  {
    -[GEOPDPlaceGlobalResult autocompleteResult]((id *)a1);
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v9 = (void *)objc_msgSend(v8, "copy");

    GEOPDAutocompleteResultClearSensitiveFields((uint64_t)v9, a2, 0);
    -[GEOPDPlaceGlobalResult setAutocompleteResult:](a1, v9);

  }
  else
  {
    -[GEOPDPlaceGlobalResult autocompleteResult]((id *)a1);
    v10 = objc_claimAutoreleasedReturnValue();
    v11 = (void *)v10;
    if (v10)
      GEOPDAutocompleteResultClearSensitiveFields(v10, a2, 1);

    if (!v5)
      goto LABEL_14;
  }
  -[GEOPDPlaceGlobalResult _readQueryUnderstandingResult](a1);
  if (*(_QWORD *)(a1 + 336))
  {
    -[GEOPDPlaceGlobalResult queryUnderstandingResult]((id *)a1);
    v12 = (id *)objc_claimAutoreleasedReturnValue();
    v13 = GEOPDQueryUnderstandingResultHasSensitiveFields(v12, a2);

    if (v13)
    {
      -[GEOPDPlaceGlobalResult queryUnderstandingResult]((id *)a1);
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      v16 = (id)objc_msgSend(v14, "copy");

      GEOPDQueryUnderstandingResultClearSensitiveFields((uint64_t)v16, a2, 0);
      -[GEOPDPlaceGlobalResult setQueryUnderstandingResult:](a1, v16);
      goto LABEL_16;
    }
  }
LABEL_14:
  -[GEOPDPlaceGlobalResult queryUnderstandingResult]((id *)a1);
  v15 = objc_claimAutoreleasedReturnValue();
  if (v15)
  {
    v16 = (id)v15;
    GEOPDQueryUnderstandingResultClearSensitiveFields(v15, a2, 1);
  }
  else
  {
    v16 = 0;
  }
LABEL_16:

}

uint64_t GEOPDPlaceGlobalResultHasSensitiveFields(id *a1, uint64_t a2)
{
  id *v4;
  uint64_t HasSensitiveFields;
  id *v6;

  if (!a1)
    return 0;
  -[GEOPDPlaceGlobalResult autocompleteResult](a1);
  v4 = (id *)objc_claimAutoreleasedReturnValue();
  if ((GEOPDAutocompleteResultHasSensitiveFields(v4, a2) & 1) != 0)
  {
    HasSensitiveFields = 1;
  }
  else
  {
    -[GEOPDPlaceGlobalResult queryUnderstandingResult](a1);
    v6 = (id *)objc_claimAutoreleasedReturnValue();
    HasSensitiveFields = GEOPDQueryUnderstandingResultHasSensitiveFields(v6, a2);

  }
  return HasSensitiveFields;
}

uint64_t GEOPDQueryUnderstandingResultHasSensitiveFields(id *a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  _BYTE v14[128];
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  if (!a1)
    return 0;
  v12 = 0u;
  v13 = 0u;
  v10 = 0u;
  v11 = 0u;
  -[GEOPDQueryUnderstandingResult queryIntents](a1);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v10, v14, 16);
  if (v4)
  {
    v5 = v4;
    v6 = *(_QWORD *)v11;
    while (2)
    {
      v7 = 0;
      do
      {
        if (*(_QWORD *)v11 != v6)
          objc_enumerationMutation(v3);
        if ((GEOPDSearchQueryIntentHasSensitiveFields(*(id **)(*((_QWORD *)&v10 + 1) + 8 * v7), a2) & 1) != 0)
        {
          v8 = 1;
          goto LABEL_12;
        }
        ++v7;
      }
      while (v5 != v7);
      v5 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v10, v14, 16);
      if (v5)
        continue;
      break;
    }
  }
  v8 = 0;
LABEL_12:

  return v8;
}

unint64_t GEOPDQueryUnderstandingResultClearSensitiveFields(uint64_t a1, uint64_t a2, int a3)
{
  unint64_t result;
  unint64_t i;
  id *v8;
  id *v9;
  void *v10;

  -[GEOPDQueryUnderstandingResult _readQueryIntents](a1);
  result = objc_msgSend(*(id *)(a1 + 24), "count");
  if (result)
  {
    for (i = 0; i < result; ++i)
    {
      objc_msgSend(*(id *)(a1 + 24), "objectAtIndexedSubscript:", i);
      v8 = (id *)objc_claimAutoreleasedReturnValue();
      v9 = v8;
      if (a3 && GEOPDSearchQueryIntentHasSensitiveFields(v8, a2))
      {
        v10 = (void *)objc_msgSend(v9, "copy");
        GEOPDSearchQueryIntentClearSensitiveFields((uint64_t)v10, a2, 0);
        objc_msgSend(*(id *)(a1 + 24), "replaceObjectAtIndex:withObject:", i, v10);

      }
      else if (v9)
      {
        GEOPDSearchQueryIntentClearSensitiveFields((uint64_t)v9, a2, 1);
      }

      result = objc_msgSend(*(id *)(a1 + 24), "count");
    }
  }
  return result;
}

void sub_188B93B0C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B9B270(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDPlaceLookupParametersReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BOOL4 v17;
  int v18;
  int v19;
  int *v20;
  int *v21;
  int v22;
  int *v23;
  int *v24;
  char v25;
  unsigned int v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  BOOL v32;
  int v33;
  int v34;
  unint64_t v36;
  BOOL v37;
  int *v38;
  int v39;
  int v40;
  BOOL v41;
  char v42;
  unsigned int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  char v48;
  GEOPlaceIdentifier *v49;
  char v50;
  unsigned int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  char v56;
  char v57;
  unsigned int v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  char v63;
  id v64;
  void *v65;
  char v66;
  unsigned int v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  char v72;
  int v73;
  int v74;
  char v75;
  void *v76;
  char v78;
  char v79;
  int v80;
  char v81;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 60);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 56));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
  v13 = ((*(unsigned __int8 *)(a1 + 76) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 76) >> 4) & 1)
      + ((*(unsigned __int8 *)(a1 + 76) >> 2) & 1);
  while (2)
  {
    v14 = 1;
    v15 = 1;
    v16 = 1;
    switch(a3[v9])
    {
      case -4:
        ++v13;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v15 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v17 = v13 != 0;
        v18 = v17 & ~(_DWORD)v11 | v7;
        v19 = v17 | v11;
        if ((((v17 | v11) | v8) & 1) != 0)
          v20 = 0;
        else
          v20 = a3;
        v21 = (int *)MEMORY[0x1E0D82BF0];
        v22 = 1;
        v23 = (int *)MEMORY[0x1E0D82BC8];
        if (*(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(v3 + *v6))
          goto LABEL_111;
        v78 = v18;
        v80 = (v9 != 0) | v19 | v18;
        v81 = (v20 == 0) | v19;
        v24 = (int *)MEMORY[0x1E0D82BB8];
        v79 = v17 | v11;
        break;
      default:
        ++v13;
LABEL_7:
        v14 = v7;
LABEL_8:
        v15 = v10;
        v16 = v11;
LABEL_10:
        ++v9;
        v7 = v14;
        v10 = v15;
        v11 = v16;
        continue;
    }
    break;
  }
  do
  {
    if (*(_BYTE *)(v3 + *v23))
      break;
    v25 = 0;
    v26 = 0;
    v27 = 0;
    while (1)
    {
      v28 = *v21;
      v29 = *(_QWORD *)(v3 + v28);
      v30 = v29 + 1;
      if (v29 == -1 || v30 > *(_QWORD *)(v3 + *v6))
        break;
      v31 = *(_BYTE *)(*(_QWORD *)(v3 + *v24) + v29);
      *(_QWORD *)(v3 + v28) = v30;
      v27 |= (unint64_t)(v31 & 0x7F) << v25;
      if ((v31 & 0x80) == 0)
        goto LABEL_25;
      v25 += 7;
      v32 = v26++ >= 9;
      if (v32)
      {
        v27 = 0;
        v33 = *(unsigned __int8 *)(v3 + *v23);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v23) = 1;
LABEL_25:
    v33 = *(unsigned __int8 *)(v3 + *v23);
    if (*(_BYTE *)(v3 + *v23))
      v27 = 0;
LABEL_27:
    v34 = v27 & 7;
    if (v33 || v34 == 4)
      break;
    v36 = v27 >> 3;
    v37 = v19;
    if ((v81 & 1) == 0)
    {
      v38 = v20;
      do
      {
        v40 = *v38++;
        v39 = v40;
        v37 = v40 != 0;
        if (v40)
          v41 = v39 == (_DWORD)v36;
        else
          v41 = 1;
      }
      while (!v41);
    }
    if ((int)v36 > 3)
    {
      if ((_DWORD)v36 == 4)
      {
        if ((v8 & 1) != 0)
        {
          v57 = 0;
          v58 = 0;
          v59 = 0;
          *(_BYTE *)(a1 + 76) |= 2u;
          v23 = (int *)MEMORY[0x1E0D82BC8];
          while (1)
          {
            v60 = *v21;
            v61 = *(_QWORD *)(v3 + v60);
            v62 = v61 + 1;
            if (v61 == -1 || v62 > *(_QWORD *)(v3 + *v6))
              break;
            v63 = *(_BYTE *)(*(_QWORD *)(v3 + *v24) + v61);
            *(_QWORD *)(v3 + v60) = v62;
            v59 |= (unint64_t)(v63 & 0x7F) << v57;
            if ((v63 & 0x80) == 0)
              goto LABEL_92;
            v57 += 7;
            v32 = v58++ >= 9;
            if (v32)
            {
              v59 = 0;
              goto LABEL_94;
            }
          }
          *(_BYTE *)(v3 + *v23) = 1;
LABEL_92:
          if (*(_BYTE *)(v3 + *v23))
            v59 = 0;
LABEL_94:
          *(_BYTE *)(a1 + 72) = v59 != 0;
LABEL_106:
          if ((v80 & 1) == 0)
            break;
          continue;
        }
      }
      else
      {
        if ((_DWORD)v36 != 200)
        {
LABEL_79:
          if ((v78 & 1) != 0 && (*(_BYTE *)(a1 + 76) & 4) == 0)
          {
            if (!*(_QWORD *)(a1 + 16))
            {
              v64 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
              v65 = *(void **)(a1 + 16);
              *(_QWORD *)(a1 + 16) = v64;

            }
            v22 = PBUnknownFieldAdd();
            LOBYTE(v19) = v79;
            v23 = (int *)MEMORY[0x1E0D82BC8];
            if (!v22)
            {
              v12 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
              goto LABEL_112;
            }
            goto LABEL_106;
          }
          goto LABEL_85;
        }
        if (v37 && (*(_BYTE *)(a1 + 76) & 0x10) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_130;
          v49 = objc_alloc_init(GEOPlaceIdentifier);
          if (!GEOPlaceIdentifierReadAllFrom((uint64_t)v49, (void *)v3))
          {

LABEL_130:
            v22 = 0;
            v12 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
            LOBYTE(v19) = v79;
            v23 = (int *)MEMORY[0x1E0D82BC8];
            goto LABEL_110;
          }
          PBReaderRecallMark();
          -[GEOPDPlaceLookupParameters _addNoFlagsIdentifier:](a1, v49);

          LOBYTE(v19) = v79;
          v23 = (int *)MEMORY[0x1E0D82BC8];
          goto LABEL_106;
        }
      }
    }
    else if ((_DWORD)v36 == 1)
    {
      if ((v8 & 1) != 0)
      {
        v50 = 0;
        v51 = 0;
        v52 = 0;
        *(_BYTE *)(a1 + 76) |= 1u;
        v23 = (int *)MEMORY[0x1E0D82BC8];
        while (1)
        {
          v53 = *v21;
          v54 = *(_QWORD *)(v3 + v53);
          v55 = v54 + 1;
          if (v54 == -1 || v55 > *(_QWORD *)(v3 + *v6))
            break;
          v56 = *(_BYTE *)(*(_QWORD *)(v3 + *v24) + v54);
          *(_QWORD *)(v3 + v53) = v55;
          v52 |= (unint64_t)(v56 & 0x7F) << v50;
          if ((v56 & 0x80) == 0)
            goto LABEL_88;
          v50 += 7;
          v32 = v51++ >= 9;
          if (v32)
          {
            LODWORD(v52) = 0;
            goto LABEL_90;
          }
        }
        *(_BYTE *)(v3 + *v23) = 1;
LABEL_88:
        if (*(_BYTE *)(v3 + *v23))
          LODWORD(v52) = 0;
LABEL_90:
        *(_DWORD *)(a1 + 68) = v52;
        goto LABEL_106;
      }
    }
    else
    {
      if ((_DWORD)v36 != 2)
        goto LABEL_79;
      if (v37 && (*(_BYTE *)(a1 + 76) & 8) == 0)
      {
        if (v34 == 2)
        {
          v22 = PBReaderPlaceMark();
          v23 = (int *)MEMORY[0x1E0D82BC8];
          if (!v22)
          {
            v12 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
            LOBYTE(v19) = v79;
            goto LABEL_110;
          }
          while (*(_QWORD *)(v3 + *v21) < *(_QWORD *)(v3 + *v6) && !*(_BYTE *)(v3 + *v23))
          {
            v42 = 0;
            v43 = 0;
            v44 = 0;
            while (1)
            {
              v45 = *v21;
              v46 = *(_QWORD *)(v3 + v45);
              v47 = v46 + 1;
              if (v46 == -1 || v47 > *(_QWORD *)(v3 + *v6))
                break;
              v48 = *(_BYTE *)(*(_QWORD *)(v3 + *v24) + v46);
              *(_QWORD *)(v3 + v45) = v47;
              v44 |= (unint64_t)(v48 & 0x7F) << v42;
              if (v48 < 0)
              {
                v42 += 7;
                v32 = v43++ >= 9;
                if (!v32)
                  continue;
              }
              goto LABEL_55;
            }
            *(_BYTE *)(v3 + *v23) = 1;
LABEL_55:
            PBRepeatedUInt64Add();
          }
          PBReaderRecallMark();
        }
        else
        {
          v66 = 0;
          v67 = 0;
          v68 = 0;
          v23 = (int *)MEMORY[0x1E0D82BC8];
          while (1)
          {
            v69 = *v21;
            v70 = *(_QWORD *)(v3 + v69);
            v71 = v70 + 1;
            if (v70 == -1 || v71 > *(_QWORD *)(v3 + *v6))
              break;
            v72 = *(_BYTE *)(*(_QWORD *)(v3 + *v24) + v70);
            *(_QWORD *)(v3 + v69) = v71;
            v68 |= (unint64_t)(v72 & 0x7F) << v66;
            if (v72 < 0)
            {
              v66 += 7;
              v32 = v67++ >= 9;
              if (!v32)
                continue;
            }
            goto LABEL_104;
          }
          *(_BYTE *)(v3 + *v23) = 1;
LABEL_104:
          PBRepeatedUInt64Add();
        }
        LOBYTE(v19) = v79;
        goto LABEL_106;
      }
    }
LABEL_85:
    v22 = PBReaderSkipValueWithTag();
    LOBYTE(v19) = v79;
    v23 = (int *)MEMORY[0x1E0D82BC8];
    if ((v22 & v80 & 1) == 0)
      goto LABEL_109;
  }
  while (*(_QWORD *)(v3 + *v21) < *(_QWORD *)(v3 + *v6));
  v22 = 1;
LABEL_109:
  v12 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
LABEL_110:
  LOBYTE(v18) = v78;
LABEL_111:
  if ((v18 & 1) != 0)
LABEL_112:
    *(_BYTE *)(a1 + v12[434]) |= 4u;
  if (v19 & 1 | ((v22 & 1) == 0))
  {
    *(_BYTE *)(a1 + v12[434]) |= 8u;
    *(_BYTE *)(a1 + v12[434]) |= 0x10u;
    goto LABEL_123;
  }
  if (v20)
  {
    while (2)
    {
      while (1)
      {
        v74 = *v20++;
        v73 = v74;
        if (v74 == 2)
          break;
        if (v73 == 200)
        {
          v75 = 16;
          goto LABEL_122;
        }
        if (!v73)
          goto LABEL_123;
      }
      v75 = 8;
LABEL_122:
      *(_BYTE *)(a1 + v12[434]) |= v75;
      continue;
    }
  }
LABEL_123:
  if (v22)
  {
    v3 = *(_BYTE *)(v3 + *v23) == 0;
    if ((v19 & 1) == 0)
      return v3;
LABEL_127:
    v76 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  else
  {
    v3 = 0;
    if ((v19 & 1) != 0)
      goto LABEL_127;
  }
  return v3;
}

void sub_188B9BFC4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDPlaceLookupParametersCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  _BYTE v9[128];
  uint64_t v10;

  v10 = *MEMORY[0x1E0C80C00];
  v5 = 0u;
  v6 = 0u;
  v7 = 0u;
  v8 = 0u;
  v1 = *(id *)(a1 + 48);
  v2 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v5, v9, 16);
  if (v2)
  {
    v3 = v2;
    v4 = *(_QWORD *)v6;
    while (1)
    {
      if (*(_QWORD *)v6 != v4)
        objc_enumerationMutation(v1);
      if (!--v3)
      {
        v3 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v5, v9, 16);
        if (!v3)
          break;
      }
    }
  }

}

unint64_t GEOPDPlaceLookupParametersReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 60))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDPlaceLookupParametersReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 60) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDPlaceLookupParametersReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDPlaceLookupParametersReadAllFrom_initialTag;
  Specified = GEOPDPlaceLookupParametersReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDPlaceLookupParametersCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_188B9C2F4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B9C594(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B9C82C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B9CAB4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceLookupResultReadAllFrom(uint64_t a1, void *a2)
{
  unsigned __int8 *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  int v8;
  char v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  char v17;
  BOOL v18;
  id v19;
  void *v20;
  _BOOL8 v21;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    v7 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      v8 = v3[*v6];
      if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
        break;
      if (v3[*v6])
      {
        v8 = 1;
        break;
      }
      v9 = 0;
      v10 = 0;
      v11 = 0;
      while (1)
      {
        v12 = *v4;
        v13 = *(_QWORD *)&v3[v12];
        v14 = v13 + 1;
        if (v13 == -1 || v14 > *(_QWORD *)&v3[*v5])
          break;
        v15 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v13);
        *(_QWORD *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0)
          goto LABEL_13;
        v9 += 7;
        if (v10++ >= 9)
        {
          v17 = 0;
          v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      v8 = v3[*v6];
      if (v3[*v6])
        v17 = 0;
      else
        v17 = v11;
LABEL_16:
      if (v8)
        v18 = 1;
      else
        v18 = (v17 & 7) == 4;
      if (v18)
        break;
      if (!*(_QWORD *)(a1 + 8))
      {
        v19 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v20 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = v19;

      }
      if ((PBUnknownFieldAdd() & 1) == 0)
        goto LABEL_23;
    }
    v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_188B9D1A0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B9D3D0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDPlaceRefinementParametersReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  char v17;
  unsigned __int8 v18;
  int *v19;
  int *v20;
  int *v21;
  int *v22;
  char v23;
  unsigned int v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  BOOL v30;
  int v31;
  unint64_t v33;
  BOOL v34;
  int *v35;
  int v36;
  int v37;
  BOOL v38;
  char v39;
  unsigned int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  id v46;
  void *v47;
  int v48;
  char v49;
  unsigned int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  char v55;
  GEOLatLng *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  char v61;
  unsigned int v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  char v66;
  char v67;
  unsigned int v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  char v72;
  void *v73;
  char v74;
  unsigned int v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  char v80;
  char v81;
  uint64_t v82;
  __int16 v83;
  int v84;
  __int16 v85;
  void *v86;
  int v88;
  int *v89;
  char v90;
  char v91;
  char v92;
  char v93;
  BOOL v94;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 88));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 84);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 80));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 108)), (uint16x4_t)0xFFF8FFF5FFF7FFFALL), (int8x8_t)0x1000100010001))+ ((*(_WORD *)(a1 + 108) >> 7) & 1)+ ((*(_WORD *)(a1 + 108) >> 10) & 1)+ ((*(_WORD *)(a1 + 108) >> 5) & 1));
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 > 3;
        v17 = v16 & ~(_BYTE)v11 | v9;
        v18 = v16 | v11;
        v90 = v17;
        v91 = v8;
        v92 = v18 | v17;
        if (((v18 | v8) & 1) != 0)
          v19 = 0;
        else
          v19 = a3;
        v93 = (v19 == 0) | v18;
        v94 = v18;
        v20 = (int *)MEMORY[0x1E0D82BF0];
        v21 = (int *)MEMORY[0x1E0D82BC8];
        v22 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v7;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v20) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v21))
      goto LABEL_150;
    v23 = 0;
    v24 = 0;
    v25 = 0;
    while (1)
    {
      v26 = *v20;
      v27 = *(_QWORD *)(v3 + v26);
      v28 = v27 + 1;
      if (v27 == -1 || v28 > *(_QWORD *)(v3 + *v6))
        break;
      v29 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v27);
      *(_QWORD *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0)
        goto LABEL_25;
      v23 += 7;
      v30 = v24++ >= 9;
      if (v30)
      {
        v25 = 0;
        v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v21) = 1;
LABEL_25:
    v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(_BYTE *)(v3 + *v21))
      v25 = 0;
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_150:
      v88 = 1;
      goto LABEL_151;
    }
    v33 = v25 >> 3;
    v34 = v94;
    if ((v93 & 1) == 0)
    {
      v35 = v19;
      do
      {
        v37 = *v35++;
        v36 = v37;
        v34 = v37 != 0;
        if (v37)
          v38 = v36 == (_DWORD)v33;
        else
          v38 = 1;
      }
      while (!v38);
    }
    switch((int)v33)
    {
      case 1:
        if ((v91 & 1) == 0)
          goto LABEL_114;
        v39 = 0;
        v40 = 0;
        v41 = 0;
        *(_WORD *)(a1 + 108) |= 8u;
        while (1)
        {
          v42 = *v20;
          v43 = *(_QWORD *)(v3 + v42);
          v44 = v43 + 1;
          if (v43 == -1 || v44 > *(_QWORD *)(v3 + *v6))
            break;
          v45 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v43);
          *(_QWORD *)(v3 + v42) = v44;
          v41 |= (unint64_t)(v45 & 0x7F) << v39;
          if ((v45 & 0x80) == 0)
            goto LABEL_117;
          v39 += 7;
          v30 = v40++ >= 9;
          if (v30)
          {
            LODWORD(v41) = 0;
            goto LABEL_119;
          }
        }
        *(_BYTE *)(v3 + *v21) = 1;
LABEL_117:
        if (*(_BYTE *)(v3 + *v21))
          LODWORD(v41) = 0;
LABEL_119:
        v82 = 100;
        goto LABEL_132;
      case 2:
        if ((v91 & 1) == 0)
          goto LABEL_114;
        v49 = 0;
        v50 = 0;
        v51 = 0;
        *(_WORD *)(a1 + 108) |= 1u;
        while (2)
        {
          v52 = *v20;
          v53 = *(_QWORD *)(v3 + v52);
          v54 = v53 + 1;
          if (v53 == -1 || v54 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v55 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v53);
            *(_QWORD *)(v3 + v52) = v54;
            v51 |= (unint64_t)(v55 & 0x7F) << v49;
            if (v55 < 0)
            {
              v49 += 7;
              v30 = v50++ >= 9;
              if (v30)
              {
                v51 = 0;
                goto LABEL_123;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          v51 = 0;
LABEL_123:
        *(_QWORD *)(a1 + 64) = v51;
        goto LABEL_149;
      case 3:
        if (!v34)
          goto LABEL_114;
        if ((*(_WORD *)(a1 + 108) & 0x200) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_171;
          v83 = *(_WORD *)(a1 + 108) << 6;
          goto LABEL_147;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_171;
        v56 = objc_alloc_init(GEOLatLng);
        if (!GEOLatLngReadAllFrom((uint64_t)v56, (void *)v3))
          goto LABEL_170;
        PBReaderRecallMark();
        v57 = 48;
        goto LABEL_112;
      case 4:
        if (!v34)
          goto LABEL_114;
        if ((*(_WORD *)(a1 + 108) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_171;
          v83 = *(_WORD *)(a1 + 108) << 9;
          goto LABEL_147;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_171;
        v56 = objc_alloc_init(GEOStructuredAddress);
        if (!GEOStructuredAddressReadAllFrom(v56, (void *)v3))
          goto LABEL_170;
        PBReaderRecallMark();
        v57 = 24;
        goto LABEL_112;
      case 5:
        if (!v34)
          goto LABEL_114;
        if ((*(_WORD *)(a1 + 108) & 0x800) == 0)
        {
          PBReaderReadString();
          v58 = objc_claimAutoreleasedReturnValue();
          v59 = 72;
          goto LABEL_98;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_171;
        v83 = 16 * *(_WORD *)(a1 + 108);
        goto LABEL_147;
      case 6:
        if (!v34 || (*(_WORD *)(a1 + 108) & 0x100) != 0)
          goto LABEL_114;
        PBReaderReadString();
        v60 = (void *)objc_claimAutoreleasedReturnValue();
        if (v60)
          -[GEOPDPlaceRefinementParameters _addNoFlagsFormattedAddressLineHint:](a1, v60);

        goto LABEL_148;
      case 7:
        if ((v91 & 1) == 0)
          goto LABEL_114;
        v61 = 0;
        v62 = 0;
        v41 = 0;
        *(_WORD *)(a1 + 108) |= 4u;
        while (2)
        {
          v63 = *v20;
          v64 = *(_QWORD *)(v3 + v63);
          v65 = v64 + 1;
          if (v64 == -1 || v65 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v66 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v64);
            *(_QWORD *)(v3 + v63) = v65;
            v41 |= (unint64_t)(v66 & 0x7F) << v61;
            if (v66 < 0)
            {
              v61 += 7;
              v30 = v62++ >= 9;
              if (v30)
              {
                LODWORD(v41) = 0;
                goto LABEL_127;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          LODWORD(v41) = 0;
LABEL_127:
        v82 = 96;
        goto LABEL_132;
      case 8:
        if ((v91 & 1) == 0)
          goto LABEL_114;
        v67 = 0;
        v68 = 0;
        v41 = 0;
        *(_WORD *)(a1 + 108) |= 2u;
        while (2)
        {
          v69 = *v20;
          v70 = *(_QWORD *)(v3 + v69);
          v71 = v70 + 1;
          if (v70 == -1 || v71 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v72 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v70);
            *(_QWORD *)(v3 + v69) = v71;
            v41 |= (unint64_t)(v72 & 0x7F) << v67;
            if (v72 < 0)
            {
              v67 += 7;
              v30 = v68++ >= 9;
              if (v30)
              {
                LODWORD(v41) = 0;
                goto LABEL_131;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          LODWORD(v41) = 0;
LABEL_131:
        v82 = 92;
LABEL_132:
        *(_DWORD *)(a1 + v82) = v41;
        goto LABEL_149;
      case 9:
        if (!v34)
          goto LABEL_114;
        if ((*(_WORD *)(a1 + 108) & 0x80) == 0)
        {
          PBReaderReadData();
          v58 = objc_claimAutoreleasedReturnValue();
          v59 = 32;
LABEL_98:
          v73 = *(void **)(a1 + v59);
          *(_QWORD *)(a1 + v59) = v58;
          goto LABEL_113;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_171;
        v83 = *(_WORD *)(a1 + 108) << 8;
        goto LABEL_147;
      case 10:
        if ((v91 & 1) == 0)
          goto LABEL_114;
        v74 = 0;
        v75 = 0;
        v76 = 0;
        *(_WORD *)(a1 + 108) |= 0x10u;
        while (2)
        {
          v77 = *v20;
          v78 = *(_QWORD *)(v3 + v77);
          v79 = v78 + 1;
          if (v78 == -1 || v79 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v80 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v78);
            *(_QWORD *)(v3 + v77) = v79;
            v76 |= (unint64_t)(v80 & 0x7F) << v74;
            if (v80 < 0)
            {
              v74 += 7;
              v30 = v75++ >= 9;
              if (v30)
              {
                v76 = 0;
                goto LABEL_136;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          v76 = 0;
LABEL_136:
        *(_BYTE *)(a1 + 104) = v76 != 0;
        goto LABEL_149;
      case 11:
        if (!v34)
          goto LABEL_114;
        if ((*(_WORD *)(a1 + 108) & 0x400) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_171;
          v83 = 32 * *(_WORD *)(a1 + 108);
LABEL_147:
          v7 += v83 >> 15;
LABEL_148:
          v21 = (int *)MEMORY[0x1E0D82BC8];
          goto LABEL_149;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_171;
        v56 = objc_alloc_init(GEOPDMapsIdentifier);
        if (GEOPDMapsIdentifierReadAllFrom((uint64_t)v56, (void *)v3))
        {
          PBReaderRecallMark();
          v57 = 56;
LABEL_112:
          v73 = *(void **)(a1 + v57);
          *(_QWORD *)(a1 + v57) = v56;
LABEL_113:

          --v7;
          goto LABEL_148;
        }
LABEL_170:

LABEL_171:
        v88 = 0;
        v89 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
        v21 = (int *)MEMORY[0x1E0D82BC8];
LABEL_152:
        if ((v90 & 1) != 0)
LABEL_153:
          *(_WORD *)(a1 + v89[438]) |= 0x20u;
        if (v94 || (v88 & 1) == 0)
        {
          *(_WORD *)(a1 + v89[438]) |= 0x200u;
          *(_WORD *)(a1 + v89[438]) |= 0x40u;
          *(_WORD *)(a1 + v89[438]) |= 0x800u;
          *(_WORD *)(a1 + v89[438]) |= 0x100u;
          *(_WORD *)(a1 + v89[438]) |= 0x80u;
          *(_WORD *)(a1 + v89[438]) |= 0x400u;
        }
        else if (v19)
        {
          while (1)
          {
            v84 = *v19++;
            v85 = 512;
            switch(v84)
            {
              case 0:
                goto LABEL_164;
              case 3:
                goto LABEL_163;
              case 4:
                v85 = 64;
                goto LABEL_163;
              case 5:
                v85 = 2048;
                goto LABEL_163;
              case 6:
                v85 = 256;
                goto LABEL_163;
              case 9:
                v85 = 128;
                goto LABEL_163;
              case 11:
                v85 = 1024;
LABEL_163:
                *(_WORD *)(a1 + v89[438]) |= v85;
                break;
              default:
                continue;
            }
          }
        }
LABEL_164:
        if (v88)
          v3 = *(_BYTE *)(v3 + *v21) == 0;
        else
          v3 = 0;
        if (v94)
        {
          v86 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      default:
        if ((v90 & 1) == 0 || (*(_WORD *)(a1 + 108) & 0x20) != 0)
        {
LABEL_114:
          v81 = PBReaderSkipValueWithTag();
          v21 = (int *)MEMORY[0x1E0D82BC8];
          if ((v81 & 1) == 0)
          {
            v88 = 0;
LABEL_151:
            v89 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
            goto LABEL_152;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v46 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v47 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v46;

          }
          v48 = PBUnknownFieldAdd();
          v21 = (int *)MEMORY[0x1E0D82BC8];
          if (!v48)
          {
            v88 = 0;
            v89 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
            goto LABEL_153;
          }
        }
LABEL_149:
        if (!(v92 & 1 | (v7 != 0)))
          goto LABEL_150;
        continue;
    }
  }
}

void sub_188B9E008(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B9E0F0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B9E1D8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B9E43C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B9EB90(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDPlaceRefinementParametersReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 84))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDPlaceRefinementParametersReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 88));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 80) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 84) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDPlaceRefinementParametersReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDPlaceRefinementParametersReadAllFrom_initialTag;
  Specified = GEOPDPlaceRefinementParametersReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    objc_msgSend(*(id *)(a1 + 48), "readAll:", 1);
    objc_msgSend(*(id *)(a1 + 56), "readAll:", 1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 88));
  return Specified;
}

void sub_188B9F7A8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceRefinementParametersIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  int v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  int v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  int v42;
  _BOOL8 v43;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0)
            goto LABEL_82;
          v17 = 0;
          while (1)
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
              goto LABEL_74;
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if (v21 < 0)
            {
              v22 = v17++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_79;
          }
        case 2u:
          if ((v8 & 7) != 0)
            goto LABEL_82;
          v23 = 0;
          while (1)
          {
            v24 = *v2;
            v25 = *(_QWORD *)&a1[v24];
            v26 = v25 + 1;
            if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
              goto LABEL_74;
            v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
            *(_QWORD *)&a1[v24] = v26;
            if (v27 < 0)
            {
              v22 = v23++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_79;
          }
        case 3u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOLatLngIsValid(a1))
            goto LABEL_82;
          goto LABEL_78;
        case 4u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOStructuredAddressIsValid(a1))
            goto LABEL_82;
          goto LABEL_78;
        case 5u:
          if (v15 == 2)
            goto LABEL_64;
          goto LABEL_82;
        case 6u:
          if (v15 == 2)
            goto LABEL_64;
          goto LABEL_82;
        case 7u:
          if ((v8 & 7) != 0)
            goto LABEL_82;
          v28 = 0;
          while (1)
          {
            v29 = *v2;
            v30 = *(_QWORD *)&a1[v29];
            v31 = v30 + 1;
            if (v30 == -1 || v31 > *(_QWORD *)&a1[*v3])
              goto LABEL_74;
            v32 = *(char *)(*(_QWORD *)&a1[*v5] + v30);
            *(_QWORD *)&a1[v29] = v31;
            if (v32 < 0)
            {
              v22 = v28++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_79;
          }
        case 8u:
          if ((v8 & 7) != 0)
            goto LABEL_82;
          v33 = 0;
          while (1)
          {
            v34 = *v2;
            v35 = *(_QWORD *)&a1[v34];
            v36 = v35 + 1;
            if (v35 == -1 || v36 > *(_QWORD *)&a1[*v3])
              goto LABEL_74;
            v37 = *(char *)(*(_QWORD *)&a1[*v5] + v35);
            *(_QWORD *)&a1[v34] = v36;
            if (v37 < 0)
            {
              v22 = v33++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_79;
          }
        case 9u:
          if (v15 == 2)
            goto LABEL_64;
          goto LABEL_82;
        case 0xAu:
          if ((v8 & 7) != 0)
            goto LABEL_82;
          v38 = 0;
          break;
        case 0xBu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDMapsIdentifierIsValid(a1))
            goto LABEL_82;
LABEL_78:
          PBReaderRecallMark();
          continue;
        default:
LABEL_64:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_82:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v39 = *v2;
        v40 = *(_QWORD *)&a1[v39];
        v41 = v40 + 1;
        if (v40 == -1 || v41 > *(_QWORD *)&a1[*v3])
          break;
        v42 = *(char *)(*(_QWORD *)&a1[*v5] + v40);
        *(_QWORD *)&a1[v39] = v41;
        if (v42 < 0)
        {
          v22 = v38++ > 8;
          if (!v22)
            continue;
        }
        goto LABEL_79;
      }
LABEL_74:
      a1[*v4] = 1;
LABEL_79:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v43 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v43;
}

BOOL GEOPDPlaceRefinementParametersIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 88));
  v2 = (*(_WORD *)(a1 + 108) & 0x1FC0) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 88));
  return v2;
}

void sub_188BA002C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceRefinementResultReadAllFrom(uint64_t a1, void *a2)
{
  unsigned __int8 *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  int v8;
  char v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  char v17;
  BOOL v18;
  id v19;
  void *v20;
  _BOOL8 v21;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    v7 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      v8 = v3[*v6];
      if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
        break;
      if (v3[*v6])
      {
        v8 = 1;
        break;
      }
      v9 = 0;
      v10 = 0;
      v11 = 0;
      while (1)
      {
        v12 = *v4;
        v13 = *(_QWORD *)&v3[v12];
        v14 = v13 + 1;
        if (v13 == -1 || v14 > *(_QWORD *)&v3[*v5])
          break;
        v15 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v13);
        *(_QWORD *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0)
          goto LABEL_13;
        v9 += 7;
        if (v10++ >= 9)
        {
          v17 = 0;
          v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      v8 = v3[*v6];
      if (v3[*v6])
        v17 = 0;
      else
        v17 = v11;
LABEL_16:
      if (v8)
        v18 = 1;
      else
        v18 = (v17 & 7) == 4;
      if (v18)
        break;
      if (!*(_QWORD *)(a1 + 8))
      {
        v19 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v20 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = v19;

      }
      if ((PBUnknownFieldAdd() & 1) == 0)
        goto LABEL_23;
    }
    v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_188BA0AE0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188BA0CB4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188BA0F28(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188BA1BB8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188BA1CCC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188BA1FFC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188BA213C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDPlaceRequestCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  _BYTE v26[128];
  _BYTE v27[128];
  _BYTE v28[128];
  uint64_t v29;

  v29 = *MEMORY[0x1E0C80C00];
  objc_msgSend(*(id *)(a1 + 24), "readAll:", 1);
  objc_msgSend(*(id *)(a1 + 40), "readAll:", 1);
  v24 = 0u;
  v25 = 0u;
  v22 = 0u;
  v23 = 0u;
  v2 = *(id *)(a1 + 96);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v22, v28, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v23;
    while (1)
    {
      if (*(_QWORD *)v23 != v5)
        objc_enumerationMutation(v2);
      if (!--v4)
      {
        v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v22, v28, 16);
        if (!v4)
          break;
      }
    }
  }

  -[GEOPDPlaceRequestParameters readAll:](*(_QWORD *)(a1 + 80), 1);
  v20 = 0u;
  v21 = 0u;
  v18 = 0u;
  v19 = 0u;
  v6 = *(id *)(a1 + 32);
  v7 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v18, v27, 16);
  if (v7)
  {
    v8 = v7;
    v9 = *(_QWORD *)v19;
    while (1)
    {
      if (*(_QWORD *)v19 != v9)
        objc_enumerationMutation(v6);
      if (!--v8)
      {
        v8 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v18, v27, 16);
        if (!v8)
          break;
      }
    }
  }

  objc_msgSend(*(id *)(a1 + 88), "readAll:", 1);
  v16 = 0u;
  v17 = 0u;
  v14 = 0u;
  v15 = 0u;
  v10 = *(id *)(a1 + 72);
  v11 = objc_msgSend(v10, "countByEnumeratingWithState:objects:count:", &v14, v26, 16);
  if (v11)
  {
    v12 = v11;
    v13 = *(_QWORD *)v15;
    while (1)
    {
      if (*(_QWORD *)v15 != v13)
        objc_enumerationMutation(v10);
      if (!--v12)
      {
        v12 = objc_msgSend(v10, "countByEnumeratingWithState:objects:count:", &v14, v26, 16);
        if (!v12)
          break;
      }
    }
  }

}

unint64_t GEOPDPlaceRequestReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOPDPlaceRequestReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188BA414C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceRequestIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unint64_t v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int v22;
  BOOL v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  int v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  int v33;
  _BOOL8 v34;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (!a1[*v4])
    {
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      v17 = v8 >> 3;
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 == 2 && PBReaderPlaceMark() && GEOPDAnalyticMetadataIsValid(a1))
            goto LABEL_66;
          goto LABEL_78;
        case 2u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDClientMetadataIsValid(a1))
            goto LABEL_78;
          goto LABEL_66;
        case 3u:
          if (v15 == 2)
            goto LABEL_61;
          goto LABEL_78;
        case 4u:
          if (v15 == 2)
            goto LABEL_61;
          goto LABEL_78;
        case 5u:
        case 0xBu:
        case 0xDu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDComponentInfoIsValid(a1))
            goto LABEL_78;
          goto LABEL_66;
        case 6u:
          if ((v8 & 7) != 0)
            goto LABEL_78;
          v18 = 0;
          while (1)
          {
            v19 = *v2;
            v20 = *(_QWORD *)&a1[v19];
            v21 = v20 + 1;
            if (v20 == -1 || v21 > *(_QWORD *)&a1[*v3])
              goto LABEL_75;
            v22 = *(char *)(*(_QWORD *)&a1[*v5] + v20);
            *(_QWORD *)&a1[v19] = v21;
            if (v22 < 0)
            {
              v23 = v18++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_76;
          }
        case 7u:
          if ((v8 & 7) != 0)
            goto LABEL_78;
          v24 = 0;
          while (1)
          {
            v25 = *v2;
            v26 = *(_QWORD *)&a1[v25];
            v27 = v26 + 1;
            if (v26 == -1 || v27 > *(_QWORD *)&a1[*v3])
              goto LABEL_75;
            v28 = *(char *)(*(_QWORD *)&a1[*v5] + v26);
            *(_QWORD *)&a1[v25] = v27;
            if (v28 < 0)
            {
              v23 = v24++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_76;
          }
        case 8u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDPlaceRequestParametersIsValid(a1))
            goto LABEL_78;
          goto LABEL_66;
        case 9u:
          if (v15 == 2)
            goto LABEL_61;
          goto LABEL_78;
        case 0xAu:
          goto LABEL_61;
        case 0xCu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPrivacyMetadataIsValid(a1))
            goto LABEL_78;
LABEL_66:
          PBReaderRecallMark();
          goto LABEL_76;
        default:
          if ((_DWORD)v17 == 1000)
          {
            if ((v8 & 7) != 0)
              goto LABEL_78;
            v29 = 0;
            while (1)
            {
              v30 = *v2;
              v31 = *(_QWORD *)&a1[v30];
              v32 = v31 + 1;
              if (v31 == -1 || v32 > *(_QWORD *)&a1[*v3])
                break;
              v33 = *(char *)(*(_QWORD *)&a1[*v5] + v31);
              *(_QWORD *)&a1[v30] = v32;
              if (v33 < 0)
              {
                v23 = v29++ > 8;
                if (!v23)
                  continue;
              }
              goto LABEL_76;
            }
LABEL_75:
            a1[*v4] = 1;
          }
          else
          {
            if ((_DWORD)v17 == 1001 && v15 != 2)
            {
LABEL_78:
              PBReaderRecallMark();
              return 0;
            }
LABEL_61:
            if ((PBReaderSkipValueWithTag() & 1) == 0)
              goto LABEL_78;
          }
LABEL_76:
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_77;
          break;
      }
    }
  }
LABEL_77:
  v34 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v34;
}

BOOL GEOPDPlaceRequestParametersIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  BOOL v13;
  int v14;
  int v15;
  char v17;
  unsigned int v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  int v24;
  int v25;
  BOOL v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  int v31;
  BOOL v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  int v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  int v42;
  unsigned int v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  int v47;
  unsigned int v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  int v52;
  unsigned int v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  int v57;
  unsigned int v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  int v62;
  unsigned int v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  int v71;
  unsigned int v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  int v76;
  unsigned int v77;
  unsigned int v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  int v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  int v86;
  unsigned int v87;
  unsigned int v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  int v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  int v96;
  unsigned int v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  int v101;
  unsigned int v102;
  unsigned int v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  int v107;
  unsigned int v108;
  uint64_t v109;
  uint64_t v110;
  unint64_t v111;
  int v112;
  unsigned int v113;
  uint64_t v114;
  uint64_t v115;
  unint64_t v116;
  int v117;
  unsigned int v118;
  uint64_t v119;
  uint64_t v120;
  unint64_t v121;
  int v122;
  unsigned int v123;
  uint64_t v124;
  uint64_t v125;
  unint64_t v126;
  int v127;
  unsigned int v128;
  uint64_t v129;
  uint64_t v130;
  unint64_t v131;
  int v132;
  unsigned int v133;
  uint64_t v134;
  uint64_t v135;
  unint64_t v136;
  int v137;
  char v138;
  unsigned int v139;
  unint64_t v140;
  uint64_t v141;
  uint64_t v142;
  unint64_t v143;
  char v144;
  int v145;
  int v146;
  BOOL v147;
  unsigned int v148;
  uint64_t v149;
  uint64_t v150;
  unint64_t v151;
  int v152;
  unsigned int v153;
  uint64_t v154;
  uint64_t v155;
  unint64_t v156;
  int v157;
  char v158;
  unsigned int v159;
  unint64_t v160;
  uint64_t v161;
  uint64_t v162;
  unint64_t v163;
  char v164;
  int v165;
  int v166;
  char v168;
  unsigned int v169;
  unint64_t v170;
  uint64_t v171;
  uint64_t v172;
  unint64_t v173;
  char v174;
  int v175;
  int v176;
  BOOL v177;
  unsigned int v178;
  uint64_t v179;
  uint64_t v180;
  unint64_t v181;
  int v182;
  unsigned int v183;
  uint64_t v184;
  uint64_t v185;
  unint64_t v186;
  int v187;
  char v188;
  unsigned int v189;
  unint64_t v190;
  uint64_t v191;
  uint64_t v192;
  unint64_t v193;
  char v194;
  int v195;
  int v196;
  unint64_t v198;
  uint64_t v199;
  uint64_t v200;
  unint64_t v201;
  int v202;
  unsigned int v203;
  unsigned int v204;
  uint64_t v205;
  uint64_t v206;
  unint64_t v207;
  int v208;
  unsigned int v209;
  uint64_t v210;
  uint64_t v211;
  unint64_t v212;
  int v213;
  unsigned int v214;
  uint64_t v215;
  uint64_t v216;
  unint64_t v217;
  int v218;
  char v219;
  unsigned int v220;
  unint64_t v221;
  uint64_t v222;
  uint64_t v223;
  unint64_t v224;
  char v225;
  int v226;
  int v227;
  BOOL v228;
  unsigned int v229;
  uint64_t v230;
  uint64_t v231;
  unint64_t v232;
  int v233;
  unsigned int v234;
  uint64_t v235;
  uint64_t v236;
  unint64_t v237;
  int v238;
  unsigned int v239;
  uint64_t v240;
  uint64_t v241;
  unint64_t v242;
  int v243;
  unsigned int v244;
  uint64_t v245;
  uint64_t v246;
  unint64_t v247;
  int v248;
  _BOOL4 v249;
  char v250;
  unsigned int v251;
  unint64_t v252;
  uint64_t v253;
  uint64_t v254;
  unint64_t v255;
  char v256;
  int v257;
  int v258;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  unsigned int v263;
  uint64_t v264;
  uint64_t v265;
  unint64_t v266;
  int v267;
  unsigned int v268;
  uint64_t v269;
  uint64_t v270;
  unint64_t v271;
  int v272;
  unsigned int v273;
  uint64_t v274;
  uint64_t v275;
  unint64_t v276;
  int v277;
  int v278;
  BOOL v279;
  char v280;
  unsigned int v281;
  unint64_t v282;
  uint64_t v283;
  uint64_t v284;
  unint64_t v285;
  char v286;
  int v287;
  int v288;
  BOOL v289;
  unsigned int v290;
  uint64_t v291;
  uint64_t v292;
  unint64_t v293;
  int v294;
  unsigned int v295;
  uint64_t v296;
  uint64_t v297;
  unint64_t v298;
  int v299;
  unsigned int v300;
  uint64_t v301;
  uint64_t v302;
  unint64_t v303;
  int v304;
  char v305;
  unsigned int v306;
  unint64_t v307;
  uint64_t v308;
  uint64_t v309;
  unint64_t v310;
  char v311;
  int v312;
  unsigned int v314;
  uint64_t v315;
  uint64_t v316;
  unint64_t v317;
  int v318;
  unsigned int v319;
  uint64_t v320;
  uint64_t v321;
  unint64_t v322;
  int v323;
  int v324;
  char v325;
  unsigned int v326;
  unint64_t v327;
  uint64_t v328;
  uint64_t v329;
  unint64_t v330;
  char v331;
  int v332;
  int v333;
  BOOL v334;
  unsigned int v335;
  uint64_t v336;
  uint64_t v337;
  unint64_t v338;
  int v339;
  unsigned int v340;
  uint64_t v341;
  uint64_t v342;
  unint64_t v343;
  int v344;
  unsigned int v345;
  uint64_t v346;
  uint64_t v347;
  unint64_t v348;
  int v349;
  unsigned int v350;
  uint64_t v351;
  uint64_t v352;
  unint64_t v353;
  int v354;
  unsigned int v355;
  uint64_t v356;
  uint64_t v357;
  unint64_t v358;
  int v359;
  uint64_t v360;
  uint64_t v361;
  unint64_t v362;
  int v363;
  unsigned int v364;
  uint64_t v365;
  uint64_t v366;
  unint64_t v367;
  int v368;
  unsigned int v369;
  unsigned int v370;
  uint64_t v371;
  uint64_t v372;
  unint64_t v373;
  int v374;
  uint64_t v375;
  uint64_t v376;
  unint64_t v377;
  int v378;
  unsigned int v379;
  unsigned int v380;
  uint64_t v381;
  uint64_t v382;
  unint64_t v383;
  int v384;
  uint64_t v385;
  uint64_t v386;
  unint64_t v387;
  int v388;
  unsigned int v389;
  uint64_t v390;
  uint64_t v391;
  unint64_t v392;
  int v393;
  unsigned int v394;
  unsigned int v395;
  uint64_t v396;
  uint64_t v397;
  unint64_t v398;
  int v399;
  unsigned int v400;
  uint64_t v401;
  uint64_t v402;
  unint64_t v403;
  int v404;
  unsigned int v405;
  uint64_t v406;
  uint64_t v407;
  unint64_t v408;
  int v409;
  unsigned int v410;
  uint64_t v411;
  uint64_t v412;
  unint64_t v413;
  int v414;
  unsigned int v415;
  uint64_t v416;
  uint64_t v417;
  unint64_t v418;
  int v419;
  unsigned int v420;
  uint64_t v421;
  uint64_t v422;
  unint64_t v423;
  int v424;
  unsigned int v425;
  uint64_t v426;
  uint64_t v427;
  unint64_t v428;
  int v429;
  char v430;
  unsigned int v431;
  unint64_t v432;
  uint64_t v433;
  uint64_t v434;
  unint64_t v435;
  char v436;
  int v437;
  int v438;
  BOOL v439;
  unsigned int v440;
  uint64_t v441;
  uint64_t v442;
  unint64_t v443;
  int v444;
  unsigned int v445;
  uint64_t v446;
  uint64_t v447;
  unint64_t v448;
  int v449;
  char v450;
  unsigned int v451;
  unint64_t v452;
  uint64_t v453;
  uint64_t v454;
  unint64_t v455;
  char v456;
  uint64_t v457;
  int v458;
  int v459;
  BOOL v460;
  uint64_t v461;
  unint64_t v462;
  unint64_t v463;
  unsigned int v464;
  uint64_t v465;
  uint64_t v466;
  unint64_t v467;
  int v468;
  unsigned int v469;
  uint64_t v470;
  uint64_t v471;
  unint64_t v472;
  int v473;
  unsigned int v474;
  uint64_t v475;
  uint64_t v476;
  unint64_t v477;
  int v478;
  char v479;
  unsigned int v480;
  unint64_t v481;
  uint64_t v482;
  uint64_t v483;
  unint64_t v484;
  char v485;
  int v486;
  unsigned int v488;
  uint64_t v489;
  uint64_t v490;
  unint64_t v491;
  int v492;
  unsigned int v493;
  uint64_t v494;
  uint64_t v495;
  unint64_t v496;
  int v497;
  char v498;
  unsigned int v499;
  unint64_t v500;
  uint64_t v501;
  uint64_t v502;
  unint64_t v503;
  char v504;
  uint64_t v505;
  int v506;
  int v507;
  BOOL v508;
  unsigned int v509;
  uint64_t v510;
  uint64_t v511;
  unint64_t v512;
  int v513;
  uint64_t v514;
  unint64_t v515;
  unint64_t v516;
  char v517;
  unsigned int v518;
  unint64_t v519;
  uint64_t v520;
  uint64_t v521;
  unint64_t v522;
  char v523;
  int v524;
  int v525;
  BOOL v526;
  unsigned int v527;
  uint64_t v528;
  uint64_t v529;
  unint64_t v530;
  int v531;
  unsigned int v532;
  uint64_t v533;
  uint64_t v534;
  unint64_t v535;
  int v536;
  unsigned int v537;
  uint64_t v538;
  uint64_t v539;
  unint64_t v540;
  int v541;
  unsigned int v542;
  uint64_t v543;
  uint64_t v544;
  unint64_t v545;
  int v546;
  char v547;
  unsigned int v548;
  unint64_t v549;
  uint64_t v550;
  uint64_t v551;
  unint64_t v552;
  char v553;
  int v554;
  int v555;
  BOOL v556;
  unsigned int v557;
  uint64_t v558;
  uint64_t v559;
  unint64_t v560;
  int v561;
  unsigned int v562;
  uint64_t v563;
  uint64_t v564;
  unint64_t v565;
  int v566;
  char v567;
  unsigned int v568;
  unint64_t v569;
  uint64_t v570;
  uint64_t v571;
  unint64_t v572;
  char v573;
  int v574;
  int v575;
  unsigned int v577;
  uint64_t v578;
  uint64_t v579;
  unint64_t v580;
  int v581;
  int v582;
  char v583;
  unsigned int v584;
  unint64_t v585;
  uint64_t v586;
  uint64_t v587;
  unint64_t v588;
  char v589;
  int v590;
  int v591;
  unint64_t v593;
  unsigned int v594;
  uint64_t v595;
  uint64_t v596;
  unint64_t v597;
  int v598;
  char v599;
  unsigned int v600;
  unint64_t v601;
  uint64_t v602;
  uint64_t v603;
  unint64_t v604;
  char v605;
  int v606;
  BOOL v607;
  unsigned int v608;
  uint64_t v609;
  uint64_t v610;
  unint64_t v611;
  int v612;
  unsigned int v613;
  uint64_t v614;
  uint64_t v615;
  unint64_t v616;
  int v617;
  unsigned int v618;
  uint64_t v619;
  uint64_t v620;
  unint64_t v621;
  int v622;
  unsigned int v623;
  uint64_t v624;
  uint64_t v625;
  unint64_t v626;
  int v627;
  char v628;
  unsigned int v629;
  unint64_t v630;
  uint64_t v631;
  uint64_t v632;
  unint64_t v633;
  char v634;
  uint64_t v635;
  int v636;
  int v637;
  BOOL v638;
  uint64_t v639;
  unint64_t v640;
  unint64_t v641;
  char v642;
  unsigned int v643;
  unint64_t v644;
  uint64_t v645;
  uint64_t v646;
  unint64_t v647;
  char v648;
  int v649;
  int v650;
  BOOL v651;
  unsigned int v652;
  uint64_t v653;
  uint64_t v654;
  unint64_t v655;
  int v656;
  unsigned int v657;
  uint64_t v658;
  uint64_t v659;
  unint64_t v660;
  int v661;
  uint64_t v662;
  uint64_t v663;
  unint64_t v664;
  int v665;
  unsigned int v666;
  unsigned int v667;
  uint64_t v668;
  uint64_t v669;
  unint64_t v670;
  int v671;
  char v672;
  unsigned int v673;
  unint64_t v674;
  uint64_t v675;
  uint64_t v676;
  unint64_t v677;
  char v678;
  int v679;
  int v680;
  unint64_t v682;
  unsigned int v683;
  uint64_t v684;
  uint64_t v685;
  unint64_t v686;
  int v687;
  unsigned int v688;
  uint64_t v689;
  uint64_t v690;
  unint64_t v691;
  int v692;
  char v693;
  unsigned int v694;
  unint64_t v695;
  uint64_t v696;
  uint64_t v697;
  unint64_t v698;
  char v699;
  int v700;
  int v701;
  uint64_t v703;
  uint64_t v704;
  unint64_t v705;
  int v706;
  unsigned int v707;
  unsigned int v708;
  uint64_t v709;
  uint64_t v710;
  unint64_t v711;
  int v712;
  char v713;
  unsigned int v714;
  unint64_t v715;
  uint64_t v716;
  uint64_t v717;
  unint64_t v718;
  char v719;
  int v720;
  int v721;
  char v723;
  unsigned int v724;
  unint64_t v725;
  uint64_t v726;
  uint64_t v727;
  unint64_t v728;
  char v729;
  int v730;
  int v731;
  BOOL v732;
  char v733;
  unsigned int v734;
  unint64_t v735;
  uint64_t v736;
  uint64_t v737;
  unint64_t v738;
  char v739;
  int v740;
  int v741;
  char v743;
  unsigned int v744;
  unint64_t v745;
  uint64_t v746;
  uint64_t v747;
  unint64_t v748;
  char v749;
  int v750;
  int v751;
  BOOL v752;
  unsigned int v753;
  uint64_t v754;
  uint64_t v755;
  unint64_t v756;
  int v757;
  unsigned int v758;
  uint64_t v759;
  uint64_t v760;
  unint64_t v761;
  int v762;
  unsigned int v763;
  uint64_t v764;
  uint64_t v765;
  unint64_t v766;
  int v767;
  unsigned int v768;
  uint64_t v769;
  uint64_t v770;
  unint64_t v771;
  int v772;
  unsigned int v773;
  uint64_t v774;
  uint64_t v775;
  unint64_t v776;
  int v777;
  unsigned int v778;
  uint64_t v779;
  uint64_t v780;
  unint64_t v781;
  int v782;
  int v783;
  unsigned int v784;
  uint64_t v785;
  uint64_t v786;
  unint64_t v787;
  int v788;
  int v789;
  char v790;
  unsigned int v791;
  unint64_t v792;
  uint64_t v793;
  uint64_t v794;
  unint64_t v795;
  char v796;
  int v797;
  int v798;
  char v800;
  unsigned int v801;
  unint64_t v802;
  uint64_t v803;
  uint64_t v804;
  unint64_t v805;
  char v806;
  int v807;
  int v808;
  BOOL v809;
  unsigned int v810;
  uint64_t v811;
  uint64_t v812;
  unint64_t v813;
  int v814;
  char v815;
  unsigned int v816;
  unint64_t v817;
  uint64_t v818;
  uint64_t v819;
  unint64_t v820;
  char v821;
  int v822;
  int v823;
  BOOL v824;
  char v825;
  unsigned int v826;
  unint64_t v827;
  uint64_t v828;
  uint64_t v829;
  unint64_t v830;
  char v831;
  int v832;
  int v833;
  BOOL v834;
  uint64_t v835;
  uint64_t v836;
  unint64_t v837;
  int v838;
  unsigned int v839;
  unsigned int v840;
  uint64_t v841;
  uint64_t v842;
  unint64_t v843;
  int v844;
  char v845;
  unsigned int v846;
  unint64_t v847;
  uint64_t v848;
  uint64_t v849;
  unint64_t v850;
  char v851;
  int v852;
  int v853;
  BOOL v854;
  char v855;
  unsigned int v856;
  unint64_t v857;
  uint64_t v858;
  uint64_t v859;
  unint64_t v860;
  char v861;
  int v862;
  int v863;
  BOOL v864;
  char v865;
  unsigned int v866;
  unint64_t v867;
  uint64_t v868;
  uint64_t v869;
  unint64_t v870;
  char v871;
  int v872;
  int v873;
  BOOL v874;
  char v875;
  unsigned int v876;
  unint64_t v877;
  uint64_t v878;
  uint64_t v879;
  unint64_t v880;
  char v881;
  int v882;
  int v883;
  int v885;
  char v886;
  unsigned int v887;
  unint64_t v888;
  uint64_t v889;
  uint64_t v890;
  unint64_t v891;
  char v892;
  int v893;
  int v894;
  unsigned int v896;
  uint64_t v897;
  uint64_t v898;
  unint64_t v899;
  int v900;
  char v901;
  unsigned int v902;
  unint64_t v903;
  uint64_t v904;
  uint64_t v905;
  unint64_t v906;
  char v907;
  int v908;
  int v909;
  BOOL v910;
  uint64_t v911;
  uint64_t v912;
  unint64_t v913;
  int v914;
  unsigned int v915;
  char v916;
  unsigned int v917;
  unint64_t v918;
  uint64_t v919;
  uint64_t v920;
  unint64_t v921;
  char v922;
  int v923;
  int v924;
  unint64_t v926;
  char v927;
  unsigned int v928;
  unint64_t v929;
  uint64_t v930;
  uint64_t v931;
  unint64_t v932;
  char v933;
  int v934;
  int v935;
  int v937;
  unsigned int v938;
  uint64_t v939;
  uint64_t v940;
  unint64_t v941;
  int v942;
  char v943;
  unsigned int v944;
  unint64_t v945;
  uint64_t v946;
  uint64_t v947;
  unint64_t v948;
  char v949;
  int v950;
  int v951;
  BOOL v952;
  unsigned int v953;
  uint64_t v954;
  uint64_t v955;
  unint64_t v956;
  int v957;
  char v958;
  unsigned int v959;
  unint64_t v960;
  uint64_t v961;
  uint64_t v962;
  unint64_t v963;
  char v964;
  int v965;
  int v966;
  BOOL v967;
  unsigned int v968;
  uint64_t v969;
  uint64_t v970;
  unint64_t v971;
  int v972;
  char v973;
  unsigned int v974;
  unint64_t v975;
  uint64_t v976;
  uint64_t v977;
  unint64_t v978;
  char v979;
  int v980;
  int v981;
  BOOL v982;
  unint64_t v983;
  int v984;
  char v985;
  unsigned int v986;
  unint64_t v987;
  uint64_t v988;
  uint64_t v989;
  unint64_t v990;
  char v991;
  int v992;
  int v993;
  BOOL v994;
  char v995;
  unsigned int v996;
  unint64_t v997;
  uint64_t v998;
  uint64_t v999;
  unint64_t v1000;
  char v1001;
  int v1002;
  int v1003;
  BOOL v1004;
  char v1005;
  unsigned int v1006;
  unint64_t v1007;
  uint64_t v1008;
  uint64_t v1009;
  unint64_t v1010;
  char v1011;
  int v1012;
  int v1013;
  int v1015;
  char v1016;
  unsigned int v1017;
  unint64_t v1018;
  uint64_t v1019;
  uint64_t v1020;
  unint64_t v1021;
  char v1022;
  int v1023;
  int v1024;
  BOOL v1025;
  unsigned int v1026;
  uint64_t v1027;
  uint64_t v1028;
  unint64_t v1029;
  int v1030;
  char v1031;
  unsigned int v1032;
  unint64_t v1033;
  uint64_t v1034;
  uint64_t v1035;
  unint64_t v1036;
  char v1037;
  int v1038;
  int v1039;
  BOOL v1040;
  unsigned int v1041;
  uint64_t v1042;
  uint64_t v1043;
  unint64_t v1044;
  int v1045;
  char v1046;
  unsigned int v1047;
  unint64_t v1048;
  uint64_t v1049;
  uint64_t v1050;
  unint64_t v1051;
  char v1052;
  int v1053;
  int v1054;
  BOOL v1055;
  uint64_t v1056;
  uint64_t v1057;
  unint64_t v1058;
  int v1059;
  unsigned int v1060;
  uint64_t v1061;
  uint64_t v1062;
  unint64_t v1063;
  int v1064;
  unsigned int v1065;
  unsigned int v1066;
  uint64_t v1067;
  uint64_t v1068;
  unint64_t v1069;
  int v1070;
  unsigned int v1071;
  uint64_t v1072;
  uint64_t v1073;
  unint64_t v1074;
  int v1075;
  char v1076;
  unsigned int v1077;
  unint64_t v1078;
  uint64_t v1079;
  uint64_t v1080;
  unint64_t v1081;
  char v1082;
  int v1083;
  int v1084;
  BOOL v1085;
  unsigned int v1086;
  uint64_t v1087;
  uint64_t v1088;
  unint64_t v1089;
  int v1090;
  uint64_t v1091;
  uint64_t v1092;
  unint64_t v1093;
  int v1094;
  unsigned int v1095;
  unsigned int v1096;
  uint64_t v1097;
  uint64_t v1098;
  unint64_t v1099;
  int v1100;
  unsigned int v1101;
  uint64_t v1102;
  uint64_t v1103;
  unint64_t v1104;
  int v1105;
  unsigned int v1106;
  uint64_t v1107;
  uint64_t v1108;
  unint64_t v1109;
  int v1110;
  unsigned int v1111;
  uint64_t v1112;
  uint64_t v1113;
  unint64_t v1114;
  int v1115;
  char v1116;
  unsigned int v1117;
  unint64_t v1118;
  uint64_t v1119;
  uint64_t v1120;
  unint64_t v1121;
  char v1122;
  int v1123;
  int v1124;
  BOOL v1125;
  unsigned int v1126;
  uint64_t v1127;
  uint64_t v1128;
  unint64_t v1129;
  int v1130;
  unsigned int v1131;
  uint64_t v1132;
  uint64_t v1133;
  unint64_t v1134;
  int v1135;
  char v1136;
  unsigned int v1137;
  unint64_t v1138;
  uint64_t v1139;
  uint64_t v1140;
  unint64_t v1141;
  char v1142;
  int v1143;
  int v1144;
  unint64_t v1146;
  unsigned int v1147;
  uint64_t v1148;
  uint64_t v1149;
  unint64_t v1150;
  int v1151;
  char v1152;
  unsigned int v1153;
  unint64_t v1154;
  uint64_t v1155;
  uint64_t v1156;
  unint64_t v1157;
  char v1158;
  int v1159;
  int v1160;
  int v1162;
  int v1163;
  char v1164;
  unsigned int v1165;
  unint64_t v1166;
  uint64_t v1167;
  uint64_t v1168;
  unint64_t v1169;
  char v1170;
  int v1171;
  int v1172;
  BOOL v1173;
  char v1174;
  unsigned int v1175;
  unint64_t v1176;
  uint64_t v1177;
  uint64_t v1178;
  unint64_t v1179;
  char v1180;
  int v1181;
  int v1182;
  BOOL v1183;
  char v1184;
  unsigned int v1185;
  unint64_t v1186;
  uint64_t v1187;
  uint64_t v1188;
  unint64_t v1189;
  char v1190;
  int v1191;
  int v1192;
  int v1194;
  int v1195;
  char v1196;
  unsigned int v1197;
  unint64_t v1198;
  uint64_t v1199;
  uint64_t v1200;
  unint64_t v1201;
  char v1202;
  int v1203;
  int v1204;
  BOOL v1205;
  unint64_t v1206;
  unsigned int v1207;
  uint64_t v1208;
  uint64_t v1209;
  unint64_t v1210;
  int v1211;
  char v1212;
  unsigned int v1213;
  unint64_t v1214;
  uint64_t v1215;
  uint64_t v1216;
  unint64_t v1217;
  char v1218;
  int v1219;
  int v1220;
  BOOL v1221;
  char v1222;
  unsigned int v1223;
  unint64_t v1224;
  uint64_t v1225;
  uint64_t v1226;
  unint64_t v1227;
  char v1228;
  int v1229;
  int v1230;
  BOOL v1231;
  char v1232;
  unsigned int v1233;
  unint64_t v1234;
  uint64_t v1235;
  uint64_t v1236;
  unint64_t v1237;
  char v1238;
  int v1239;
  int v1240;
  BOOL v1241;
  char v1242;
  unsigned int v1243;
  unint64_t v1244;
  uint64_t v1245;
  uint64_t v1246;
  unint64_t v1247;
  char v1248;
  int v1249;
  int v1250;
  int v1252;
  int v1253;
  _BOOL8 v1254;
  uint64_t v1256;
  uint64_t v1257;
  uint64_t v1258;

  v1258 = *MEMORY[0x1E0C80C00];
  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] >= *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
LABEL_2957:
    v1254 = a1[*v4] == 0;
    PBReaderRecallMark();
    return v1254;
  }
  v5 = (int *)MEMORY[0x1E0D82BB8];
  while (2)
  {
    if (a1[*v4])
      goto LABEL_2957;
    v6 = 0;
    v7 = 0;
    v8 = 0;
    while (1)
    {
      v9 = *v2;
      v10 = *(_QWORD *)&a1[v9];
      v11 = v10 + 1;
      if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
        break;
      v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
      *(_QWORD *)&a1[v9] = v11;
      v8 |= (unint64_t)(v12 & 0x7F) << v6;
      if ((v12 & 0x80) == 0)
        goto LABEL_12;
      v6 += 7;
      v13 = v7++ >= 9;
      if (v13)
      {
        v8 = 0;
        v14 = a1[*v4];
        goto LABEL_14;
      }
    }
    a1[*v4] = 1;
LABEL_12:
    v14 = a1[*v4];
    if (a1[*v4])
      v8 = 0;
LABEL_14:
    v15 = v8 & 7;
    if (v14 || v15 == 4)
      goto LABEL_2957;
    switch((v8 >> 3))
    {
      case 1u:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_2959;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
LABEL_22:
        while (2)
        {
          while (2)
          {
            if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3] || a1[*v4])
              goto LABEL_2951;
            v17 = 0;
            v18 = 0;
            v19 = 0;
            while (2)
            {
              v20 = *v2;
              v21 = *(_QWORD *)&a1[v20];
              v22 = v21 + 1;
              if (v21 == -1 || v22 > *(_QWORD *)&a1[*v3])
              {
                a1[*v4] = 1;
              }
              else
              {
                v23 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v21);
                *(_QWORD *)&a1[v20] = v22;
                v19 |= (unint64_t)(v23 & 0x7F) << v17;
                if (v23 < 0)
                {
                  v17 += 7;
                  v13 = v18++ >= 9;
                  if (v13)
                  {
                    v19 = 0;
                    v24 = a1[*v4];
                    goto LABEL_34;
                  }
                  continue;
                }
              }
              break;
            }
            v24 = a1[*v4];
            if (a1[*v4])
              v19 = 0;
LABEL_34:
            v25 = v19 & 7;
            if (v24)
              v26 = 1;
            else
              v26 = v25 == 4;
            if (v26)
              goto LABEL_2951;
            switch((v19 >> 3))
            {
              case 1u:
                if ((v19 & 7) != 0)
                  goto LABEL_2958;
                v27 = 0;
                while (1)
                {
                  v28 = *v2;
                  v29 = *(_QWORD *)&a1[v28];
                  v30 = v29 + 1;
                  if (v29 == -1 || v30 > *(_QWORD *)&a1[*v3])
                    goto LABEL_224;
                  v31 = *(char *)(*(_QWORD *)&a1[*v5] + v29);
                  *(_QWORD *)&a1[v28] = v30;
                  if (v31 < 0)
                  {
                    v32 = v27++ > 8;
                    if (!v32)
                      continue;
                  }
                  goto LABEL_22;
                }
              case 2u:
                if ((v19 & 7) != 0)
                  goto LABEL_2958;
                v33 = 0;
                while (1)
                {
                  v34 = *v2;
                  v35 = *(_QWORD *)&a1[v34];
                  v36 = v35 + 1;
                  if (v35 == -1 || v36 > *(_QWORD *)&a1[*v3])
                    goto LABEL_224;
                  v37 = *(char *)(*(_QWORD *)&a1[*v5] + v35);
                  *(_QWORD *)&a1[v34] = v36;
                  if (v37 < 0)
                  {
                    v32 = v33++ > 8;
                    if (!v32)
                      continue;
                  }
                  goto LABEL_22;
                }
              case 3u:
                if (v25 != 2)
                  goto LABEL_2958;
                goto LABEL_226;
              case 4u:
              case 0x1Du:
                if (v25 != 2 || !PBReaderPlaceMark() || !GEOPDViewportInfoIsValid(a1))
                  goto LABEL_2958;
                break;
              case 5u:
                if (v25 != 2)
                  goto LABEL_2958;
                goto LABEL_226;
              case 6u:
                if (v25 != 2)
                  goto LABEL_2958;
                goto LABEL_226;
              case 7u:
                if (v25 != 2 || !PBReaderPlaceMark() || !GEOPDAutocompleteEntryIsValid(a1))
                  goto LABEL_2958;
                break;
              case 8u:
                if ((v19 & 7) != 0)
                  goto LABEL_2958;
                v38 = 0;
                while (1)
                {
                  v39 = *v2;
                  v40 = *(_QWORD *)&a1[v39];
                  v41 = v40 + 1;
                  if (v40 == -1 || v41 > *(_QWORD *)&a1[*v3])
                    goto LABEL_224;
                  v42 = *(char *)(*(_QWORD *)&a1[*v5] + v40);
                  *(_QWORD *)&a1[v39] = v41;
                  if (v42 < 0)
                  {
                    v32 = v38++ > 8;
                    if (!v32)
                      continue;
                  }
                  goto LABEL_22;
                }
              case 9u:
                if (v25 != 2 || !PBReaderPlaceMark() || !GEOPDSearchClientBehaviorIsValid(a1))
                  goto LABEL_2958;
                break;
              case 0xAu:
                if (v25 != 2 || !PBReaderPlaceMark() || !GEOPDSSearchLocationParametersIsValid(a1))
                  goto LABEL_2958;
                break;
              case 0xBu:
                if (v25 != 2 || !PBReaderPlaceMark() || !GEOPDRecentRouteInfoIsValid(a1))
                  goto LABEL_2958;
                break;
              case 0xCu:
                if (v25 != 2 || !PBReaderPlaceMark() || !GEOPDSSearchFilterIsValid(a1))
                  goto LABEL_2958;
                break;
              case 0xEu:
                if ((v19 & 7) != 0)
                  goto LABEL_2958;
                v43 = 0;
                while (1)
                {
                  v44 = *v2;
                  v45 = *(_QWORD *)&a1[v44];
                  v46 = v45 + 1;
                  if (v45 == -1 || v46 > *(_QWORD *)&a1[*v3])
                    goto LABEL_224;
                  v47 = *(char *)(*(_QWORD *)&a1[*v5] + v45);
                  *(_QWORD *)&a1[v44] = v46;
                  if (v47 < 0)
                  {
                    v32 = v43++ > 8;
                    if (!v32)
                      continue;
                  }
                  goto LABEL_22;
                }
              case 0xFu:
                if ((v19 & 7) != 0)
                  goto LABEL_2958;
                v48 = 0;
                while (1)
                {
                  v49 = *v2;
                  v50 = *(_QWORD *)&a1[v49];
                  v51 = v50 + 1;
                  if (v50 == -1 || v51 > *(_QWORD *)&a1[*v3])
                    goto LABEL_224;
                  v52 = *(char *)(*(_QWORD *)&a1[*v5] + v50);
                  *(_QWORD *)&a1[v49] = v51;
                  if (v52 < 0)
                  {
                    v32 = v48++ > 8;
                    if (!v32)
                      continue;
                  }
                  goto LABEL_22;
                }
              case 0x10u:
                if (v25 != 2 || !PBReaderPlaceMark() || !GEOPDRetainedSearchMetadataIsValid(a1))
                  goto LABEL_2958;
                break;
              case 0x11u:
                if ((v19 & 7) != 0)
                  goto LABEL_2958;
                v53 = 0;
                while (1)
                {
                  v54 = *v2;
                  v55 = *(_QWORD *)&a1[v54];
                  v56 = v55 + 1;
                  if (v55 == -1 || v56 > *(_QWORD *)&a1[*v3])
                    goto LABEL_224;
                  v57 = *(char *)(*(_QWORD *)&a1[*v5] + v55);
                  *(_QWORD *)&a1[v54] = v56;
                  if (v57 < 0)
                  {
                    v32 = v53++ > 8;
                    if (!v32)
                      continue;
                  }
                  goto LABEL_22;
                }
              case 0x12u:
                if ((v19 & 7) != 0)
                  goto LABEL_2958;
                v58 = 0;
                while (1)
                {
                  v59 = *v2;
                  v60 = *(_QWORD *)&a1[v59];
                  v61 = v60 + 1;
                  if (v60 == -1 || v61 > *(_QWORD *)&a1[*v3])
                    goto LABEL_224;
                  v62 = *(char *)(*(_QWORD *)&a1[*v5] + v60);
                  *(_QWORD *)&a1[v59] = v61;
                  if (v62 < 0)
                  {
                    v32 = v58++ > 8;
                    if (!v32)
                      continue;
                  }
                  goto LABEL_22;
                }
              case 0x13u:
                if ((v19 & 7) != 0)
                  goto LABEL_2958;
                v63 = 0;
                while (1)
                {
                  v64 = *v2;
                  v65 = *(_QWORD *)&a1[v64];
                  v66 = v65 + 1;
                  if (v65 == -1 || v66 > *(_QWORD *)&a1[*v3])
                    goto LABEL_224;
                  v67 = *(char *)(*(_QWORD *)&a1[*v5] + v65);
                  *(_QWORD *)&a1[v64] = v66;
                  if (v67 < 0)
                  {
                    v32 = v63++ > 8;
                    if (!v32)
                      continue;
                  }
                  goto LABEL_22;
                }
              case 0x14u:
                if (v25 != 2 || !PBReaderPlaceMark() || !GEOPDSInferredSignalsIsValid(a1))
                  goto LABEL_2958;
                break;
              case 0x15u:
                if (v25 != 2)
                {
                  if ((v19 & 7) != 0)
                    goto LABEL_2958;
                  while (1)
                  {
                    v68 = *v2;
                    v69 = *(_QWORD *)&a1[v68];
                    v70 = v69 + 1;
                    if (v69 == -1 || v70 > *(_QWORD *)&a1[*v3])
                      goto LABEL_224;
                    v71 = *(char *)(*(_QWORD *)&a1[*v5] + v69);
                    *(_QWORD *)&a1[v68] = v70;
                    if (v71 < 0)
                    {
                      v72 = v25++;
                      if (v72 <= 8)
                        continue;
                    }
                    goto LABEL_22;
                  }
                }
                if (!PBReaderPlaceMark())
                  goto LABEL_2958;
LABEL_253:
                while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
                {
                  v113 = a1[*v4];
                  if (a1[*v4])
                    break;
                  while (1)
                  {
                    v114 = *v2;
                    v115 = *(_QWORD *)&a1[v114];
                    v116 = v115 + 1;
                    if (v115 == -1 || v116 > *(_QWORD *)&a1[*v3])
                      break;
                    v117 = *(char *)(*(_QWORD *)&a1[*v5] + v115);
                    *(_QWORD *)&a1[v114] = v116;
                    if (v117 < 0)
                    {
                      v13 = v113++ >= 9;
                      if (!v13)
                        continue;
                    }
                    goto LABEL_253;
                  }
                  a1[*v4] = 1;
                }
                break;
              case 0x16u:
                if (v25 != 2 || !PBReaderPlaceMark() || !GEOPDSSearchEvChargingParametersIsValid(a1))
                  goto LABEL_2958;
                break;
              case 0x17u:
                if (v25 != 2 || !PBReaderPlaceMark() || !GEOPDETAFilterIsValid(a1))
                  goto LABEL_2958;
                break;
              case 0x18u:
                if (v25 != 2)
                {
                  if ((v19 & 7) != 0)
                    goto LABEL_2958;
                  while (1)
                  {
                    v73 = *v2;
                    v74 = *(_QWORD *)&a1[v73];
                    v75 = v74 + 1;
                    if (v74 == -1 || v75 > *(_QWORD *)&a1[*v3])
                      goto LABEL_224;
                    v76 = *(char *)(*(_QWORD *)&a1[*v5] + v74);
                    *(_QWORD *)&a1[v73] = v75;
                    if (v76 < 0)
                    {
                      v77 = v25++;
                      if (v77 <= 8)
                        continue;
                    }
                    goto LABEL_22;
                  }
                }
                if (!PBReaderPlaceMark())
                  goto LABEL_2958;
LABEL_263:
                while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
                {
                  v118 = a1[*v4];
                  if (a1[*v4])
                    break;
                  while (1)
                  {
                    v119 = *v2;
                    v120 = *(_QWORD *)&a1[v119];
                    v121 = v120 + 1;
                    if (v120 == -1 || v121 > *(_QWORD *)&a1[*v3])
                      break;
                    v122 = *(char *)(*(_QWORD *)&a1[*v5] + v120);
                    *(_QWORD *)&a1[v119] = v121;
                    if (v122 < 0)
                    {
                      v13 = v118++ >= 9;
                      if (!v13)
                        continue;
                    }
                    goto LABEL_263;
                  }
                  a1[*v4] = 1;
                }
                break;
              case 0x19u:
                if ((v19 & 7) != 0)
                  goto LABEL_2958;
                v78 = 0;
                while (1)
                {
                  v79 = *v2;
                  v80 = *(_QWORD *)&a1[v79];
                  v81 = v80 + 1;
                  if (v80 == -1 || v81 > *(_QWORD *)&a1[*v3])
                    goto LABEL_224;
                  v82 = *(char *)(*(_QWORD *)&a1[*v5] + v80);
                  *(_QWORD *)&a1[v79] = v81;
                  if (v82 < 0)
                  {
                    v32 = v78++ > 8;
                    if (!v32)
                      continue;
                  }
                  goto LABEL_22;
                }
              case 0x1Au:
                if (v25 != 2 || !PBReaderPlaceMark() || !GEOPDResultRefinementQueryIsValid(a1))
                  goto LABEL_2958;
                break;
              case 0x1Bu:
                if (v25 != 2)
                {
                  if ((v19 & 7) != 0)
                    goto LABEL_2958;
                  while (1)
                  {
                    v83 = *v2;
                    v84 = *(_QWORD *)&a1[v83];
                    v85 = v84 + 1;
                    if (v84 == -1 || v85 > *(_QWORD *)&a1[*v3])
                      goto LABEL_224;
                    v86 = *(char *)(*(_QWORD *)&a1[*v5] + v84);
                    *(_QWORD *)&a1[v83] = v85;
                    if (v86 < 0)
                    {
                      v87 = v25++;
                      if (v87 <= 8)
                        continue;
                    }
                    goto LABEL_22;
                  }
                }
                if (!PBReaderPlaceMark())
                  goto LABEL_2958;
LABEL_273:
                while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
                {
                  v123 = a1[*v4];
                  if (a1[*v4])
                    break;
                  while (1)
                  {
                    v124 = *v2;
                    v125 = *(_QWORD *)&a1[v124];
                    v126 = v125 + 1;
                    if (v125 == -1 || v126 > *(_QWORD *)&a1[*v3])
                      break;
                    v127 = *(char *)(*(_QWORD *)&a1[*v5] + v125);
                    *(_QWORD *)&a1[v124] = v126;
                    if (v127 < 0)
                    {
                      v13 = v123++ >= 9;
                      if (!v13)
                        continue;
                    }
                    goto LABEL_273;
                  }
                  a1[*v4] = 1;
                }
                break;
              case 0x1Cu:
                if ((v19 & 7) != 0)
                  goto LABEL_2958;
                v88 = 0;
                while (1)
                {
                  v89 = *v2;
                  v90 = *(_QWORD *)&a1[v89];
                  v91 = v90 + 1;
                  if (v90 == -1 || v91 > *(_QWORD *)&a1[*v3])
                    goto LABEL_224;
                  v92 = *(char *)(*(_QWORD *)&a1[*v5] + v90);
                  *(_QWORD *)&a1[v89] = v91;
                  if (v92 < 0)
                  {
                    v32 = v88++ > 8;
                    if (!v32)
                      continue;
                  }
                  goto LABEL_22;
                }
              case 0x1Eu:
                if (v25 != 2)
                {
                  if ((v19 & 7) != 0)
                    goto LABEL_2958;
                  while (1)
                  {
                    v93 = *v2;
                    v94 = *(_QWORD *)&a1[v93];
                    v95 = v94 + 1;
                    if (v94 == -1 || v95 > *(_QWORD *)&a1[*v3])
                      goto LABEL_224;
                    v96 = *(char *)(*(_QWORD *)&a1[*v5] + v94);
                    *(_QWORD *)&a1[v93] = v95;
                    if (v96 < 0)
                    {
                      v97 = v25++;
                      if (v97 <= 8)
                        continue;
                    }
                    goto LABEL_22;
                  }
                }
                if (!PBReaderPlaceMark())
                  goto LABEL_2958;
LABEL_283:
                while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
                {
                  v128 = a1[*v4];
                  if (a1[*v4])
                    break;
                  while (1)
                  {
                    v129 = *v2;
                    v130 = *(_QWORD *)&a1[v129];
                    v131 = v130 + 1;
                    if (v130 == -1 || v131 > *(_QWORD *)&a1[*v3])
                      break;
                    v132 = *(char *)(*(_QWORD *)&a1[*v5] + v130);
                    *(_QWORD *)&a1[v129] = v131;
                    if (v132 < 0)
                    {
                      v13 = v128++ >= 9;
                      if (!v13)
                        continue;
                    }
                    goto LABEL_283;
                  }
                  a1[*v4] = 1;
                }
                break;
              case 0x1Fu:
                if (v25 != 2)
                {
                  if ((v19 & 7) != 0)
                    goto LABEL_2958;
                  while (1)
                  {
                    v98 = *v2;
                    v99 = *(_QWORD *)&a1[v98];
                    v100 = v99 + 1;
                    if (v99 == -1 || v100 > *(_QWORD *)&a1[*v3])
                      break;
                    v101 = *(char *)(*(_QWORD *)&a1[*v5] + v99);
                    *(_QWORD *)&a1[v98] = v100;
                    if (v101 < 0)
                    {
                      v102 = v25++;
                      if (v102 <= 8)
                        continue;
                    }
                    goto LABEL_22;
                  }
LABEL_224:
                  a1[*v4] = 1;
                  continue;
                }
                if (!PBReaderPlaceMark())
                  goto LABEL_2958;
LABEL_293:
                while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
                {
                  v133 = a1[*v4];
                  if (a1[*v4])
                    break;
                  while (1)
                  {
                    v134 = *v2;
                    v135 = *(_QWORD *)&a1[v134];
                    v136 = v135 + 1;
                    if (v135 == -1 || v136 > *(_QWORD *)&a1[*v3])
                      break;
                    v137 = *(char *)(*(_QWORD *)&a1[*v5] + v135);
                    *(_QWORD *)&a1[v134] = v136;
                    if (v137 < 0)
                    {
                      v13 = v133++ >= 9;
                      if (!v13)
                        continue;
                    }
                    goto LABEL_293;
                  }
                  a1[*v4] = 1;
                }
                break;
              case 0x20u:
                if ((v19 & 7) != 0)
                  goto LABEL_2958;
                v103 = 0;
                while (1)
                {
                  v104 = *v2;
                  v105 = *(_QWORD *)&a1[v104];
                  v106 = v105 + 1;
                  if (v105 == -1 || v106 > *(_QWORD *)&a1[*v3])
                    goto LABEL_224;
                  v107 = *(char *)(*(_QWORD *)&a1[*v5] + v105);
                  *(_QWORD *)&a1[v104] = v106;
                  if (v107 < 0)
                  {
                    v32 = v103++ > 8;
                    if (!v32)
                      continue;
                  }
                  goto LABEL_22;
                }
              case 0x21u:
                if (v25 != 2 || !PBReaderPlaceMark() || !GEOPDSearchOriginationInfoIsValid(a1))
                  goto LABEL_2958;
                goto LABEL_251;
              case 0x22u:
                if ((v19 & 7) != 0)
                  goto LABEL_2958;
                v108 = 0;
                while (1)
                {
                  v109 = *v2;
                  v110 = *(_QWORD *)&a1[v109];
                  v111 = v110 + 1;
                  if (v110 == -1 || v111 > *(_QWORD *)&a1[*v3])
                    goto LABEL_224;
                  v112 = *(char *)(*(_QWORD *)&a1[*v5] + v110);
                  *(_QWORD *)&a1[v109] = v111;
                  if (v112 < 0)
                  {
                    v32 = v108++ > 8;
                    if (!v32)
                      continue;
                  }
                  goto LABEL_22;
                }
              case 0x23u:
                if (v25 != 2)
                  goto LABEL_2958;
                goto LABEL_226;
              case 0x24u:
                if (v25 != 2 || !PBReaderPlaceMark() || !GEOPDClientRankingFeatureTypeResultIsValid(a1))
                  goto LABEL_2958;
                goto LABEL_251;
              case 0x25u:
                if (v25 != 2
                  || !PBReaderPlaceMark()
                  || !GEOPDSSearchSessionDataIsValid((unsigned __int8 *)a1))
                {
                  goto LABEL_2958;
                }
                goto LABEL_251;
              case 0x26u:
                if (v25 != 2
                  || !PBReaderPlaceMark()
                  || !GEOPDAutocompleteSessionDataIsValid((unsigned __int8 *)a1))
                {
                  goto LABEL_2958;
                }
                goto LABEL_251;
              case 0x27u:
                if (v25 != 2 || !PBReaderPlaceMark() || !GEOPDSPunchInHintsIsValid(a1))
                  goto LABEL_2958;
                goto LABEL_251;
              case 0x28u:
                if (v25 != 2 || !PBReaderPlaceMark() || !GEOPDSSessionUserActionMetadataIsValid(a1))
                  goto LABEL_2958;
                goto LABEL_251;
              case 0x29u:
                if (v25 != 2 || !PBReaderPlaceMark() || !GEOPDPaginationParametersIsValid(a1))
                  goto LABEL_2958;
                goto LABEL_251;
              default:
LABEL_226:
                if ((PBReaderSkipValueWithTag() & 1) == 0)
                  goto LABEL_2958;
                continue;
            }
            break;
          }
LABEL_251:
          PBReaderRecallMark();
          continue;
        }
      case 2u:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_2959;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
LABEL_305:
        while (2)
        {
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3] || a1[*v4])
            goto LABEL_2951;
          v138 = 0;
          v139 = 0;
          v140 = 0;
          while (2)
          {
            v141 = *v2;
            v142 = *(_QWORD *)&a1[v141];
            v143 = v142 + 1;
            if (v142 == -1 || v143 > *(_QWORD *)&a1[*v3])
            {
              a1[*v4] = 1;
            }
            else
            {
              v144 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v142);
              *(_QWORD *)&a1[v141] = v143;
              v140 |= (unint64_t)(v144 & 0x7F) << v138;
              if (v144 < 0)
              {
                v138 += 7;
                v13 = v139++ >= 9;
                if (v13)
                {
                  v140 = 0;
                  v145 = a1[*v4];
                  goto LABEL_317;
                }
                continue;
              }
            }
            break;
          }
          v145 = a1[*v4];
          if (a1[*v4])
            v140 = 0;
LABEL_317:
          v146 = v140 & 7;
          if (v145)
            v147 = 1;
          else
            v147 = v146 == 4;
          if (!v147)
          {
            switch((v140 >> 3))
            {
              case 1u:
                if (v146 == 2)
                  goto LABEL_323;
                goto LABEL_2958;
              case 2u:
                if ((v140 & 7) != 0)
                  goto LABEL_2958;
                v148 = 0;
                while (1)
                {
                  v149 = *v2;
                  v150 = *(_QWORD *)&a1[v149];
                  v151 = v150 + 1;
                  if (v150 == -1 || v151 > *(_QWORD *)&a1[*v3])
                    goto LABEL_353;
                  v152 = *(char *)(*(_QWORD *)&a1[*v5] + v150);
                  *(_QWORD *)&a1[v149] = v151;
                  if (v152 < 0)
                  {
                    v32 = v148++ > 8;
                    if (!v32)
                      continue;
                  }
                  goto LABEL_305;
                }
              case 3u:
                if (v146 != 2 || !PBReaderPlaceMark() || !GEOPDViewportInfoIsValid(a1))
                  goto LABEL_2958;
                goto LABEL_357;
              case 4u:
                if (v146 != 2 || !PBReaderPlaceMark() || !GEOStructuredAddressIsValid(a1))
                  goto LABEL_2958;
                goto LABEL_357;
              case 5u:
                if (v146 != 2 || !PBReaderPlaceMark() || !GEOPDSPunchInHintsIsValid(a1))
                  goto LABEL_2958;
                goto LABEL_357;
              case 6u:
                if ((v140 & 7) != 0)
                  goto LABEL_2958;
                v153 = 0;
                do
                {
                  v154 = *v2;
                  v155 = *(_QWORD *)&a1[v154];
                  v156 = v155 + 1;
                  if (v155 == -1 || v156 > *(_QWORD *)&a1[*v3])
                  {
LABEL_353:
                    a1[*v4] = 1;
                    goto LABEL_305;
                  }
                  v157 = *(char *)(*(_QWORD *)&a1[*v5] + v155);
                  *(_QWORD *)&a1[v154] = v156;
                  if ((v157 & 0x80000000) == 0)
                    break;
                  v32 = v153++ > 8;
                }
                while (!v32);
                break;
              case 7u:
                if (v146 != 2 || !PBReaderPlaceMark() || !GEOPDAddressResultSubTypeFilterIsValid(a1))
                  goto LABEL_2958;
LABEL_357:
                PBReaderRecallMark();
                continue;
              default:
LABEL_323:
                if ((PBReaderSkipValueWithTag() & 1) == 0)
                  goto LABEL_2958;
                continue;
            }
            continue;
          }
          goto LABEL_2951;
        }
      case 3u:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_2959;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
        while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3] && !a1[*v4])
        {
          v158 = 0;
          v159 = 0;
          v160 = 0;
          while (1)
          {
            v161 = *v2;
            v162 = *(_QWORD *)&a1[v161];
            v163 = v162 + 1;
            if (v162 == -1 || v163 > *(_QWORD *)&a1[*v3])
              break;
            v164 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v162);
            *(_QWORD *)&a1[v161] = v163;
            v160 |= (unint64_t)(v164 & 0x7F) << v158;
            if ((v164 & 0x80) == 0)
              goto LABEL_371;
            v158 += 7;
            v13 = v159++ >= 9;
            if (v13)
            {
              v160 = 0;
              v165 = a1[*v4];
              goto LABEL_373;
            }
          }
          a1[*v4] = 1;
LABEL_371:
          v165 = a1[*v4];
          if (a1[*v4])
            v160 = 0;
LABEL_373:
          v166 = v160 & 7;
          if (v165 || v166 == 4)
            break;
          if ((v160 >> 3) != 1)
          {
            if (!PBReaderSkipValueWithTag())
              goto LABEL_2958;
            continue;
          }
          if (v166 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_2958;
        }
        goto LABEL_2298;
      case 4u:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_2959;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
LABEL_386:
        while (2)
        {
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3] || a1[*v4])
            goto LABEL_2951;
          v168 = 0;
          v169 = 0;
          v170 = 0;
          while (2)
          {
            v171 = *v2;
            v172 = *(_QWORD *)&a1[v171];
            v173 = v172 + 1;
            if (v172 == -1 || v173 > *(_QWORD *)&a1[*v3])
            {
              a1[*v4] = 1;
            }
            else
            {
              v174 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v172);
              *(_QWORD *)&a1[v171] = v173;
              v170 |= (unint64_t)(v174 & 0x7F) << v168;
              if (v174 < 0)
              {
                v168 += 7;
                v13 = v169++ >= 9;
                if (v13)
                {
                  v170 = 0;
                  v175 = a1[*v4];
                  goto LABEL_398;
                }
                continue;
              }
            }
            break;
          }
          v175 = a1[*v4];
          if (a1[*v4])
            v170 = 0;
LABEL_398:
          v176 = v170 & 7;
          if (v175)
            v177 = 1;
          else
            v177 = v176 == 4;
          if (!v177)
          {
            switch((v170 >> 3))
            {
              case 1u:
                if (v176 != 2 || !PBReaderPlaceMark() || !GEOLatLngIsValid(a1))
                  goto LABEL_2958;
                goto LABEL_429;
              case 2u:
                if ((v170 & 7) != 0)
                  goto LABEL_2958;
                v178 = 0;
                while (1)
                {
                  v179 = *v2;
                  v180 = *(_QWORD *)&a1[v179];
                  v181 = v180 + 1;
                  if (v180 == -1 || v181 > *(_QWORD *)&a1[*v3])
                    goto LABEL_425;
                  v182 = *(char *)(*(_QWORD *)&a1[*v5] + v180);
                  *(_QWORD *)&a1[v179] = v181;
                  if (v182 < 0)
                  {
                    v32 = v178++ > 8;
                    if (!v32)
                      continue;
                  }
                  goto LABEL_386;
                }
              case 3u:
                if ((v170 & 7) != 0)
                  goto LABEL_2958;
                v183 = 0;
                do
                {
                  v184 = *v2;
                  v185 = *(_QWORD *)&a1[v184];
                  v186 = v185 + 1;
                  if (v185 == -1 || v186 > *(_QWORD *)&a1[*v3])
                  {
LABEL_425:
                    a1[*v4] = 1;
                    goto LABEL_386;
                  }
                  v187 = *(char *)(*(_QWORD *)&a1[*v5] + v185);
                  *(_QWORD *)&a1[v184] = v186;
                  if ((v187 & 0x80000000) == 0)
                    break;
                  v32 = v183++ > 8;
                }
                while (!v32);
                break;
              case 4u:
                if (v176 != 2 || !PBReaderPlaceMark() || !GEOLocationIsValid(a1))
                  goto LABEL_2958;
LABEL_429:
                PBReaderRecallMark();
                continue;
              default:
                if ((PBReaderSkipValueWithTag() & 1) == 0)
                  goto LABEL_2958;
                continue;
            }
            continue;
          }
          goto LABEL_2951;
        }
      case 5u:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_2959;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
LABEL_433:
        while (2)
        {
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3] || a1[*v4])
            goto LABEL_2951;
          v188 = 0;
          v189 = 0;
          v190 = 0;
          while (1)
          {
            v191 = *v2;
            v192 = *(_QWORD *)&a1[v191];
            v193 = v192 + 1;
            if (v192 == -1 || v193 > *(_QWORD *)&a1[*v3])
              break;
            v194 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v192);
            *(_QWORD *)&a1[v191] = v193;
            v190 |= (unint64_t)(v194 & 0x7F) << v188;
            if ((v194 & 0x80) == 0)
              goto LABEL_443;
            v188 += 7;
            v13 = v189++ >= 9;
            if (v13)
            {
              v190 = 0;
              v195 = a1[*v4];
              goto LABEL_445;
            }
          }
          a1[*v4] = 1;
LABEL_443:
          v195 = a1[*v4];
          if (a1[*v4])
            v190 = 0;
LABEL_445:
          v196 = v190 & 7;
          if (v195 || v196 == 4)
            goto LABEL_2951;
          v198 = v190 >> 3;
          if ((int)(v190 >> 3) <= 3)
          {
            if ((_DWORD)v198 != 1)
            {
              if ((_DWORD)v198 == 2)
              {
                if (v196 != 2)
                {
                  if ((v190 & 7) != 0)
                    goto LABEL_2958;
                  while (1)
                  {
                    v199 = *v2;
                    v200 = *(_QWORD *)&a1[v199];
                    v201 = v200 + 1;
                    if (v200 == -1 || v201 > *(_QWORD *)&a1[*v3])
                      goto LABEL_481;
                    v202 = *(char *)(*(_QWORD *)&a1[*v5] + v200);
                    *(_QWORD *)&a1[v199] = v201;
                    if (v202 < 0)
                    {
                      v203 = v196++;
                      if (v203 <= 8)
                        continue;
                    }
                    goto LABEL_433;
                  }
                }
                if (!PBReaderPlaceMark())
                  goto LABEL_2958;
LABEL_485:
                while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
                {
                  v214 = a1[*v4];
                  if (a1[*v4])
                    break;
                  while (1)
                  {
                    v215 = *v2;
                    v216 = *(_QWORD *)&a1[v215];
                    v217 = v216 + 1;
                    if (v216 == -1 || v217 > *(_QWORD *)&a1[*v3])
                      break;
                    v218 = *(char *)(*(_QWORD *)&a1[*v5] + v216);
                    *(_QWORD *)&a1[v215] = v217;
                    if (v218 < 0)
                    {
                      v13 = v214++ >= 9;
                      if (!v13)
                        continue;
                    }
                    goto LABEL_485;
                  }
                  a1[*v4] = 1;
                }
LABEL_464:
                PBReaderRecallMark();
                continue;
              }
LABEL_482:
              if ((PBReaderSkipValueWithTag() & 1) == 0)
                goto LABEL_2958;
              continue;
            }
            if ((v190 & 7) != 0)
              goto LABEL_2958;
            v204 = 0;
            while (1)
            {
              v205 = *v2;
              v206 = *(_QWORD *)&a1[v205];
              v207 = v206 + 1;
              if (v206 == -1 || v207 > *(_QWORD *)&a1[*v3])
                break;
              v208 = *(char *)(*(_QWORD *)&a1[*v5] + v206);
              *(_QWORD *)&a1[v205] = v207;
              if (v208 < 0)
              {
                v32 = v204++ > 8;
                if (!v32)
                  continue;
              }
              goto LABEL_433;
            }
LABEL_481:
            a1[*v4] = 1;
            continue;
          }
          break;
        }
        if ((_DWORD)v198 == 4)
        {
          if ((v190 & 7) != 0)
            goto LABEL_2958;
          v209 = 0;
          while (1)
          {
            v210 = *v2;
            v211 = *(_QWORD *)&a1[v210];
            v212 = v211 + 1;
            if (v211 == -1 || v212 > *(_QWORD *)&a1[*v3])
              goto LABEL_481;
            v213 = *(char *)(*(_QWORD *)&a1[*v5] + v211);
            *(_QWORD *)&a1[v210] = v212;
            if (v213 < 0)
            {
              v32 = v209++ > 8;
              if (!v32)
                continue;
            }
            goto LABEL_433;
          }
        }
        if ((_DWORD)v198 != 200)
          goto LABEL_482;
        if (v196 == 2 && PBReaderPlaceMark() && GEOPlaceIdentifierIsValid(a1))
          goto LABEL_464;
        goto LABEL_2958;
      case 6u:
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDMerchantLookupParametersIsValid(a1))
          goto LABEL_2959;
        goto LABEL_2952;
      case 7u:
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDPlaceRefinementParametersIsValid(a1))
          goto LABEL_2959;
        goto LABEL_2952;
      case 8u:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_2959;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
LABEL_505:
        while (2)
        {
          while (2)
          {
            if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3] || a1[*v4])
              goto LABEL_2723;
            v219 = 0;
            v220 = 0;
            v221 = 0;
            while (2)
            {
              v222 = *v2;
              v223 = *(_QWORD *)&a1[v222];
              v224 = v223 + 1;
              if (v223 == -1 || v224 > *(_QWORD *)&a1[*v3])
              {
                a1[*v4] = 1;
              }
              else
              {
                v225 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v223);
                *(_QWORD *)&a1[v222] = v224;
                v221 |= (unint64_t)(v225 & 0x7F) << v219;
                if (v225 < 0)
                {
                  v219 += 7;
                  v13 = v220++ >= 9;
                  if (v13)
                  {
                    v221 = 0;
                    v226 = a1[*v4];
                    goto LABEL_517;
                  }
                  continue;
                }
              }
              break;
            }
            v226 = a1[*v4];
            if (a1[*v4])
              v221 = 0;
LABEL_517:
            v227 = v221 & 7;
            if (v226)
              v228 = 1;
            else
              v228 = v227 == 4;
            if (v228)
              goto LABEL_2723;
            switch((v221 >> 3))
            {
              case 1u:
                if ((v221 & 7) != 0)
                  goto LABEL_2958;
                v229 = 0;
                while (1)
                {
                  v230 = *v2;
                  v231 = *(_QWORD *)&a1[v230];
                  v232 = v231 + 1;
                  if (v231 == -1 || v232 > *(_QWORD *)&a1[*v3])
                    goto LABEL_568;
                  v233 = *(char *)(*(_QWORD *)&a1[*v5] + v231);
                  *(_QWORD *)&a1[v230] = v232;
                  if (v233 < 0)
                  {
                    v32 = v229++ > 8;
                    if (!v32)
                      continue;
                  }
                  goto LABEL_505;
                }
              case 2u:
                if ((v221 & 7) != 0)
                  goto LABEL_2958;
                v234 = 0;
                while (1)
                {
                  v235 = *v2;
                  v236 = *(_QWORD *)&a1[v235];
                  v237 = v236 + 1;
                  if (v236 == -1 || v237 > *(_QWORD *)&a1[*v3])
                    goto LABEL_568;
                  v238 = *(char *)(*(_QWORD *)&a1[*v5] + v236);
                  *(_QWORD *)&a1[v235] = v237;
                  if (v238 < 0)
                  {
                    v32 = v234++ > 8;
                    if (!v32)
                      continue;
                  }
                  goto LABEL_505;
                }
              case 3u:
                if (v227 == 2)
                  goto LABEL_558;
                goto LABEL_2958;
              case 4u:
                if (v227 != 2 || !PBReaderPlaceMark() || !GEOPDViewportInfoIsValid(a1))
                  goto LABEL_2958;
                goto LABEL_651;
              case 5u:
                if (v227 != 2 || !PBReaderPlaceMark() || !GEOAddressIsValid(a1))
                  goto LABEL_2958;
                goto LABEL_651;
              case 6u:
                if (v227 == 2)
                  goto LABEL_558;
                goto LABEL_2958;
              case 7u:
                if ((v221 & 7) != 0)
                  goto LABEL_2958;
                v239 = 0;
                while (1)
                {
                  v240 = *v2;
                  v241 = *(_QWORD *)&a1[v240];
                  v242 = v241 + 1;
                  if (v241 == -1 || v242 > *(_QWORD *)&a1[*v3])
                    goto LABEL_568;
                  v243 = *(char *)(*(_QWORD *)&a1[*v5] + v241);
                  *(_QWORD *)&a1[v240] = v242;
                  if (v243 < 0)
                  {
                    v32 = v239++ > 8;
                    if (!v32)
                      continue;
                  }
                  goto LABEL_505;
                }
              case 9u:
                if ((v221 & 7) != 0)
                  goto LABEL_2958;
                v244 = 0;
                do
                {
                  v245 = *v2;
                  v246 = *(_QWORD *)&a1[v245];
                  v247 = v246 + 1;
                  if (v246 == -1 || v247 > *(_QWORD *)&a1[*v3])
                  {
LABEL_568:
                    a1[*v4] = 1;
                    goto LABEL_505;
                  }
                  v248 = *(char *)(*(_QWORD *)&a1[*v5] + v246);
                  *(_QWORD *)&a1[v245] = v247;
                  if ((v248 & 0x80000000) == 0)
                    break;
                  v32 = v244++ > 8;
                }
                while (!v32);
                continue;
              case 0xAu:
                if (v227 != 2 || !PBReaderPlaceMark())
                  goto LABEL_2958;
                objc_msgSend(a1, "position");
                v249 = 0;
                objc_msgSend(a1, "length");
                v1256 = 0;
                LODWORD(v1257) = 0;
                if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
                  goto LABEL_639;
                break;
              case 0xBu:
                if (v227 != 2 || !PBReaderPlaceMark() || !GEOPDIndexQueryNodeIsValid(a1))
                  goto LABEL_2958;
                goto LABEL_651;
              case 0xCu:
                if (v227 == 2 && PBReaderPlaceMark() && GEOPDRecentRouteInfoIsValid(a1))
                  goto LABEL_651;
                goto LABEL_2958;
              default:
LABEL_558:
                if ((PBReaderSkipValueWithTag() & 1) == 0)
                  goto LABEL_2958;
                continue;
            }
            break;
          }
          while (2)
          {
            if (!a1[*v4])
            {
              v250 = 0;
              v251 = 0;
              v252 = 0;
              while (1)
              {
                v253 = *v2;
                v254 = *(_QWORD *)&a1[v253];
                v255 = v254 + 1;
                if (v254 == -1 || v255 > *(_QWORD *)&a1[*v3])
                  break;
                v256 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v254);
                *(_QWORD *)&a1[v253] = v255;
                v252 |= (unint64_t)(v256 & 0x7F) << v250;
                if ((v256 & 0x80) == 0)
                  goto LABEL_581;
                v250 += 7;
                v13 = v251++ >= 9;
                if (v13)
                {
                  v252 = 0;
                  v257 = a1[*v4];
                  goto LABEL_583;
                }
              }
              a1[*v4] = 1;
LABEL_581:
              v257 = a1[*v4];
              if (a1[*v4])
                v252 = 0;
LABEL_583:
              v258 = v252 & 7;
              if (!v257 && v258 != 4)
              {
                switch((v252 >> 3))
                {
                  case 1u:
                    v260 = v1256;
                    if (!(_DWORD)v1256)
                      goto LABEL_610;
                    if ((_DWORD)v1256 == 1)
                      goto LABEL_2963;
                    if (HIDWORD(v1256))
                    {
                      if (HIDWORD(v1256) == 1 || (_DWORD)v1257)
                        goto LABEL_2963;
                      v260 = 2;
                    }
                    else
                    {
                      v260 = 1;
                    }
LABEL_610:
                    *((_DWORD *)&v1256 + v260) = 1;
                    if (v258)
                      goto LABEL_2963;
                    v263 = 0;
                    while (1)
                    {
                      v264 = *v2;
                      v265 = *(_QWORD *)&a1[v264];
                      v266 = v265 + 1;
                      if (v265 == -1 || v266 > *(_QWORD *)&a1[*v3])
                        goto LABEL_636;
                      v267 = *(char *)(*(_QWORD *)&a1[*v5] + v265);
                      *(_QWORD *)&a1[v264] = v266;
                      if (v267 < 0)
                      {
                        v32 = v263++ > 8;
                        if (!v32)
                          continue;
                      }
                      goto LABEL_637;
                    }
                  case 2u:
                    v261 = v1256;
                    if (!(_DWORD)v1256)
                      goto LABEL_619;
                    if ((_DWORD)v1256 == 2)
                      goto LABEL_2963;
                    if (HIDWORD(v1256))
                    {
                      if (HIDWORD(v1256) == 2 || (_DWORD)v1257)
                        goto LABEL_2963;
                      v261 = 2;
                    }
                    else
                    {
                      v261 = 1;
                    }
LABEL_619:
                    *((_DWORD *)&v1256 + v261) = 2;
                    if (v258)
                      goto LABEL_2963;
                    v268 = 0;
                    while (1)
                    {
                      v269 = *v2;
                      v270 = *(_QWORD *)&a1[v269];
                      v271 = v270 + 1;
                      if (v270 == -1 || v271 > *(_QWORD *)&a1[*v3])
                        goto LABEL_636;
                      v272 = *(char *)(*(_QWORD *)&a1[*v5] + v270);
                      *(_QWORD *)&a1[v269] = v271;
                      if (v272 < 0)
                      {
                        v32 = v268++ > 8;
                        if (!v32)
                          continue;
                      }
                      goto LABEL_637;
                    }
                  case 3u:
                    v262 = v1256;
                    if (!(_DWORD)v1256)
                      goto LABEL_628;
                    if ((_DWORD)v1256 == 3)
                      goto LABEL_2963;
                    if (HIDWORD(v1256))
                    {
                      if (HIDWORD(v1256) == 3 || (_DWORD)v1257)
                        goto LABEL_2963;
                      v262 = 2;
                    }
                    else
                    {
                      v262 = 1;
                    }
LABEL_628:
                    *((_DWORD *)&v1256 + v262) = 3;
                    if (v258)
                      goto LABEL_2963;
                    v273 = 0;
                    while (1)
                    {
                      v274 = *v2;
                      v275 = *(_QWORD *)&a1[v274];
                      v276 = v275 + 1;
                      if (v275 == -1 || v276 > *(_QWORD *)&a1[*v3])
                        break;
                      v277 = *(char *)(*(_QWORD *)&a1[*v5] + v275);
                      *(_QWORD *)&a1[v274] = v276;
                      if (v277 < 0)
                      {
                        v32 = v273++ > 8;
                        if (!v32)
                          continue;
                      }
                      goto LABEL_637;
                    }
LABEL_636:
                    a1[*v4] = 1;
LABEL_637:
                    if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
                      break;
                    continue;
                  case 4u:
                    if (v258 == 2)
                      goto LABEL_607;
                    goto LABEL_2963;
                  default:
LABEL_607:
                    if ((PBReaderSkipValueWithTag() & 1) == 0)
                      goto LABEL_2963;
                    goto LABEL_637;
                }
              }
            }
            break;
          }
          v249 = v1257 != 0;
LABEL_639:
          v278 = a1[*v4];
          PBReaderRecallMark();
          if (v278)
            v279 = 1;
          else
            v279 = !v249;
          if (!v279)
          {
LABEL_651:
            PBReaderRecallMark();
            continue;
          }
          goto LABEL_2958;
        }
      case 9u:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_2959;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
LABEL_655:
        while (2)
        {
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3] || a1[*v4])
            goto LABEL_2723;
          v280 = 0;
          v281 = 0;
          v282 = 0;
          while (2)
          {
            v283 = *v2;
            v284 = *(_QWORD *)&a1[v283];
            v285 = v284 + 1;
            if (v284 == -1 || v285 > *(_QWORD *)&a1[*v3])
            {
              a1[*v4] = 1;
            }
            else
            {
              v286 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v284);
              *(_QWORD *)&a1[v283] = v285;
              v282 |= (unint64_t)(v286 & 0x7F) << v280;
              if (v286 < 0)
              {
                v280 += 7;
                v13 = v281++ >= 9;
                if (v13)
                {
                  v282 = 0;
                  v287 = a1[*v4];
                  goto LABEL_667;
                }
                continue;
              }
            }
            break;
          }
          v287 = a1[*v4];
          if (a1[*v4])
            v282 = 0;
LABEL_667:
          v288 = v282 & 7;
          if (v287)
            v289 = 1;
          else
            v289 = v288 == 4;
          if (v289)
            goto LABEL_2723;
          switch((v282 >> 3))
          {
            case 1u:
              if ((v282 & 7) != 0)
                goto LABEL_2958;
              v290 = 0;
              while (1)
              {
                v291 = *v2;
                v292 = *(_QWORD *)&a1[v291];
                v293 = v292 + 1;
                if (v292 == -1 || v293 > *(_QWORD *)&a1[*v3])
                  goto LABEL_707;
                v294 = *(char *)(*(_QWORD *)&a1[*v5] + v292);
                *(_QWORD *)&a1[v291] = v293;
                if (v294 < 0)
                {
                  v32 = v290++ > 8;
                  if (!v32)
                    continue;
                }
                goto LABEL_655;
              }
            case 2u:
              if ((v282 & 7) != 0)
                goto LABEL_2958;
              v295 = 0;
              while (1)
              {
                v296 = *v2;
                v297 = *(_QWORD *)&a1[v296];
                v298 = v297 + 1;
                if (v297 == -1 || v298 > *(_QWORD *)&a1[*v3])
                  goto LABEL_707;
                v299 = *(char *)(*(_QWORD *)&a1[*v5] + v297);
                *(_QWORD *)&a1[v296] = v298;
                if (v299 < 0)
                {
                  v32 = v295++ > 8;
                  if (!v32)
                    continue;
                }
                goto LABEL_655;
              }
            case 3u:
              if (v288 == 2)
                goto LABEL_689;
              goto LABEL_2958;
            case 4u:
              if (v288 != 2 || !PBReaderPlaceMark() || !GEOPDViewportInfoIsValid(a1))
                goto LABEL_2958;
              goto LABEL_755;
            case 5u:
              if (v288 != 2 || !PBReaderPlaceMark() || !GEOLatLngIsValid(a1))
                goto LABEL_2958;
              goto LABEL_755;
            case 6u:
              if ((v282 & 7) != 0)
                goto LABEL_2958;
              v300 = 0;
              do
              {
                v301 = *v2;
                v302 = *(_QWORD *)&a1[v301];
                v303 = v302 + 1;
                if (v302 == -1 || v303 > *(_QWORD *)&a1[*v3])
                {
LABEL_707:
                  a1[*v4] = 1;
                  goto LABEL_655;
                }
                v304 = *(char *)(*(_QWORD *)&a1[*v5] + v302);
                *(_QWORD *)&a1[v301] = v303;
                if ((v304 & 0x80000000) == 0)
                  break;
                v32 = v300++ > 8;
              }
              while (!v32);
              continue;
            case 7u:
              if (v288 != 2 || !PBReaderPlaceMark())
                goto LABEL_2958;
              objc_msgSend(a1, "position");
              objc_msgSend(a1, "length");
              break;
            case 8u:
              if (v288 != 2 || !PBReaderPlaceMark() || !GEOPDPaginationParametersIsValid(a1))
                goto LABEL_2958;
              goto LABEL_755;
            case 9u:
              if (v288 == 2 && PBReaderPlaceMark() && GEOPDSSearchFilterIsValid(a1))
                goto LABEL_755;
              goto LABEL_2958;
            default:
LABEL_689:
              if ((PBReaderSkipValueWithTag() & 1) == 0)
                goto LABEL_2958;
              continue;
          }
          break;
        }
        while (1)
        {
LABEL_711:
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3] || a1[*v4])
            goto LABEL_756;
          v305 = 0;
          v306 = 0;
          v307 = 0;
          while (1)
          {
            v308 = *v2;
            v309 = *(_QWORD *)&a1[v308];
            v310 = v309 + 1;
            if (v309 == -1 || v310 > *(_QWORD *)&a1[*v3])
              break;
            v311 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v309);
            *(_QWORD *)&a1[v308] = v310;
            v307 |= (unint64_t)(v311 & 0x7F) << v305;
            if ((v311 & 0x80) == 0)
              goto LABEL_721;
            v305 += 7;
            v13 = v306++ >= 9;
            if (v13)
            {
              v307 = 0;
              v312 = a1[*v4];
              goto LABEL_723;
            }
          }
          a1[*v4] = 1;
LABEL_721:
          v312 = a1[*v4];
          if (a1[*v4])
            v307 = 0;
LABEL_723:
          if (v312 || (v307 & 7) == 4)
          {
LABEL_756:
            v324 = a1[*v4];
            PBReaderRecallMark();
            if (!v324)
            {
LABEL_755:
              PBReaderRecallMark();
              goto LABEL_655;
            }
            goto LABEL_2958;
          }
          if ((v307 >> 3) == 2)
            break;
          if ((v307 >> 3) == 1)
          {
            if ((v307 & 7) == 0)
            {
              v314 = 0;
              while (1)
              {
                v315 = *v2;
                v316 = *(_QWORD *)&a1[v315];
                v317 = v316 + 1;
                if (v316 == -1 || v317 > *(_QWORD *)&a1[*v3])
                  goto LABEL_745;
                v318 = *(char *)(*(_QWORD *)&a1[*v5] + v316);
                *(_QWORD *)&a1[v315] = v317;
                if (v318 < 0)
                {
                  v32 = v314++ > 8;
                  if (!v32)
                    continue;
                }
                goto LABEL_711;
              }
            }
            goto LABEL_2963;
          }
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_2963;
        }
        if ((v307 & 7) == 0)
        {
          v319 = 0;
          while (1)
          {
            v320 = *v2;
            v321 = *(_QWORD *)&a1[v320];
            v322 = v321 + 1;
            if (v321 == -1 || v322 > *(_QWORD *)&a1[*v3])
              break;
            v323 = *(char *)(*(_QWORD *)&a1[*v5] + v321);
            *(_QWORD *)&a1[v320] = v322;
            if (v323 < 0)
            {
              v32 = v319++ > 8;
              if (!v32)
                continue;
            }
            goto LABEL_711;
          }
LABEL_745:
          a1[*v4] = 1;
          goto LABEL_711;
        }
        goto LABEL_2963;
      case 0xAu:
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDAutocompleteParametersIsValid(a1))
          goto LABEL_2959;
        goto LABEL_2952;
      case 0xBu:
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDSearchBrowseCategorySuggestionParametersIsValid(a1))
          goto LABEL_2959;
        goto LABEL_2952;
      case 0xCu:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_2959;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
LABEL_769:
        while (2)
        {
          while (2)
          {
            if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3] || a1[*v4])
              goto LABEL_2951;
            v325 = 0;
            v326 = 0;
            v327 = 0;
            while (2)
            {
              v328 = *v2;
              v329 = *(_QWORD *)&a1[v328];
              v330 = v329 + 1;
              if (v329 == -1 || v330 > *(_QWORD *)&a1[*v3])
              {
                a1[*v4] = 1;
              }
              else
              {
                v331 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v329);
                *(_QWORD *)&a1[v328] = v330;
                v327 |= (unint64_t)(v331 & 0x7F) << v325;
                if (v331 < 0)
                {
                  v325 += 7;
                  v13 = v326++ >= 9;
                  if (v13)
                  {
                    v327 = 0;
                    v332 = a1[*v4];
                    goto LABEL_781;
                  }
                  continue;
                }
              }
              break;
            }
            v332 = a1[*v4];
            if (a1[*v4])
              v327 = 0;
LABEL_781:
            v333 = v327 & 7;
            if (v332)
              v334 = 1;
            else
              v334 = v333 == 4;
            if (v334)
              goto LABEL_2951;
            switch((v327 >> 3))
            {
              case 1u:
                if ((v327 & 7) != 0)
                  goto LABEL_2958;
                v335 = 0;
                while (1)
                {
                  v336 = *v2;
                  v337 = *(_QWORD *)&a1[v336];
                  v338 = v337 + 1;
                  if (v337 == -1 || v338 > *(_QWORD *)&a1[*v3])
                    goto LABEL_915;
                  v339 = *(char *)(*(_QWORD *)&a1[*v5] + v337);
                  *(_QWORD *)&a1[v336] = v338;
                  if (v339 < 0)
                  {
                    v32 = v335++ > 8;
                    if (!v32)
                      continue;
                  }
                  goto LABEL_769;
                }
              case 3u:
              case 0x1Cu:
                if (v333 != 2 || !PBReaderPlaceMark() || !GEOPDViewportInfoIsValid(a1))
                  goto LABEL_2958;
                break;
              case 4u:
                if (v333 == 2)
                  goto LABEL_921;
                goto LABEL_2958;
              case 5u:
                if ((v327 & 7) != 0)
                  goto LABEL_2958;
                v340 = 0;
                while (1)
                {
                  v341 = *v2;
                  v342 = *(_QWORD *)&a1[v341];
                  v343 = v342 + 1;
                  if (v342 == -1 || v343 > *(_QWORD *)&a1[*v3])
                    goto LABEL_915;
                  v344 = *(char *)(*(_QWORD *)&a1[*v5] + v342);
                  *(_QWORD *)&a1[v341] = v343;
                  if (v344 < 0)
                  {
                    v32 = v340++ > 8;
                    if (!v32)
                      continue;
                  }
                  goto LABEL_769;
                }
              case 6u:
                if ((v327 & 7) != 0)
                  goto LABEL_2958;
                v345 = 0;
                while (1)
                {
                  v346 = *v2;
                  v347 = *(_QWORD *)&a1[v346];
                  v348 = v347 + 1;
                  if (v347 == -1 || v348 > *(_QWORD *)&a1[*v3])
                    goto LABEL_915;
                  v349 = *(char *)(*(_QWORD *)&a1[*v5] + v347);
                  *(_QWORD *)&a1[v346] = v348;
                  if (v349 < 0)
                  {
                    v32 = v345++ > 8;
                    if (!v32)
                      continue;
                  }
                  goto LABEL_769;
                }
              case 7u:
                if ((v327 & 7) != 0)
                  goto LABEL_2958;
                v350 = 0;
                while (1)
                {
                  v351 = *v2;
                  v352 = *(_QWORD *)&a1[v351];
                  v353 = v352 + 1;
                  if (v352 == -1 || v353 > *(_QWORD *)&a1[*v3])
                    goto LABEL_915;
                  v354 = *(char *)(*(_QWORD *)&a1[*v5] + v352);
                  *(_QWORD *)&a1[v351] = v353;
                  if (v354 < 0)
                  {
                    v32 = v350++ > 8;
                    if (!v32)
                      continue;
                  }
                  goto LABEL_769;
                }
              case 8u:
                if (v333 != 2 || !PBReaderPlaceMark() || !GEOPDRecentRouteInfoIsValid(a1))
                  goto LABEL_2958;
                break;
              case 9u:
                if ((v327 & 7) != 0)
                  goto LABEL_2958;
                v355 = 0;
                while (1)
                {
                  v356 = *v2;
                  v357 = *(_QWORD *)&a1[v356];
                  v358 = v357 + 1;
                  if (v357 == -1 || v358 > *(_QWORD *)&a1[*v3])
                    goto LABEL_915;
                  v359 = *(char *)(*(_QWORD *)&a1[*v5] + v357);
                  *(_QWORD *)&a1[v356] = v358;
                  if (v359 < 0)
                  {
                    v32 = v355++ > 8;
                    if (!v32)
                      continue;
                  }
                  goto LABEL_769;
                }
              case 0xAu:
                if (v333 != 2 || !PBReaderPlaceMark() || !GEOPDSSearchEvChargingParametersIsValid(a1))
                  goto LABEL_2958;
                break;
              case 0x15u:
                if (v333 != 2)
                {
                  if ((v327 & 7) != 0)
                    goto LABEL_2958;
                  while (1)
                  {
                    v360 = *v2;
                    v361 = *(_QWORD *)&a1[v360];
                    v362 = v361 + 1;
                    if (v361 == -1 || v362 > *(_QWORD *)&a1[*v3])
                      goto LABEL_915;
                    v363 = *(char *)(*(_QWORD *)&a1[*v5] + v361);
                    *(_QWORD *)&a1[v360] = v362;
                    if (v363 < 0)
                    {
                      v364 = v333++;
                      if (v364 <= 8)
                        continue;
                    }
                    goto LABEL_769;
                  }
                }
                if (!PBReaderPlaceMark())
                  goto LABEL_2958;
LABEL_940:
                while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
                {
                  v405 = a1[*v4];
                  if (a1[*v4])
                    break;
                  while (1)
                  {
                    v406 = *v2;
                    v407 = *(_QWORD *)&a1[v406];
                    v408 = v407 + 1;
                    if (v407 == -1 || v408 > *(_QWORD *)&a1[*v3])
                      break;
                    v409 = *(char *)(*(_QWORD *)&a1[*v5] + v407);
                    *(_QWORD *)&a1[v406] = v408;
                    if (v409 < 0)
                    {
                      v13 = v405++ >= 9;
                      if (!v13)
                        continue;
                    }
                    goto LABEL_940;
                  }
                  a1[*v4] = 1;
                }
                break;
              case 0x16u:
                if (v333 != 2 || !PBReaderPlaceMark() || !GEOPDETAFilterIsValid(a1))
                  goto LABEL_2958;
                break;
              case 0x17u:
                if (v333 != 2)
                {
                  if ((v327 & 7) != 0)
                    goto LABEL_2958;
                  while (1)
                  {
                    v365 = *v2;
                    v366 = *(_QWORD *)&a1[v365];
                    v367 = v366 + 1;
                    if (v366 == -1 || v367 > *(_QWORD *)&a1[*v3])
                      goto LABEL_915;
                    v368 = *(char *)(*(_QWORD *)&a1[*v5] + v366);
                    *(_QWORD *)&a1[v365] = v367;
                    if (v368 < 0)
                    {
                      v369 = v333++;
                      if (v369 <= 8)
                        continue;
                    }
                    goto LABEL_769;
                  }
                }
                if (!PBReaderPlaceMark())
                  goto LABEL_2958;
LABEL_950:
                while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
                {
                  v410 = a1[*v4];
                  if (a1[*v4])
                    break;
                  while (1)
                  {
                    v411 = *v2;
                    v412 = *(_QWORD *)&a1[v411];
                    v413 = v412 + 1;
                    if (v412 == -1 || v413 > *(_QWORD *)&a1[*v3])
                      break;
                    v414 = *(char *)(*(_QWORD *)&a1[*v5] + v412);
                    *(_QWORD *)&a1[v411] = v413;
                    if (v414 < 0)
                    {
                      v13 = v410++ >= 9;
                      if (!v13)
                        continue;
                    }
                    goto LABEL_950;
                  }
                  a1[*v4] = 1;
                }
                break;
              case 0x18u:
                if ((v327 & 7) != 0)
                  goto LABEL_2958;
                v370 = 0;
                while (1)
                {
                  v371 = *v2;
                  v372 = *(_QWORD *)&a1[v371];
                  v373 = v372 + 1;
                  if (v372 == -1 || v373 > *(_QWORD *)&a1[*v3])
                    goto LABEL_915;
                  v374 = *(char *)(*(_QWORD *)&a1[*v5] + v372);
                  *(_QWORD *)&a1[v371] = v373;
                  if (v374 < 0)
                  {
                    v32 = v370++ > 8;
                    if (!v32)
                      continue;
                  }
                  goto LABEL_769;
                }
              case 0x19u:
                if (v333 != 2 || !PBReaderPlaceMark() || !GEOPDResultRefinementQueryIsValid(a1))
                  goto LABEL_2958;
                break;
              case 0x1Au:
                if (v333 != 2)
                {
                  if ((v327 & 7) != 0)
                    goto LABEL_2958;
                  while (1)
                  {
                    v375 = *v2;
                    v376 = *(_QWORD *)&a1[v375];
                    v377 = v376 + 1;
                    if (v376 == -1 || v377 > *(_QWORD *)&a1[*v3])
                      goto LABEL_915;
                    v378 = *(char *)(*(_QWORD *)&a1[*v5] + v376);
                    *(_QWORD *)&a1[v375] = v377;
                    if (v378 < 0)
                    {
                      v379 = v333++;
                      if (v379 <= 8)
                        continue;
                    }
                    goto LABEL_769;
                  }
                }
                if (!PBReaderPlaceMark())
                  goto LABEL_2958;
LABEL_960:
                while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
                {
                  v415 = a1[*v4];
                  if (a1[*v4])
                    break;
                  while (1)
                  {
                    v416 = *v2;
                    v417 = *(_QWORD *)&a1[v416];
                    v418 = v417 + 1;
                    if (v417 == -1 || v418 > *(_QWORD *)&a1[*v3])
                      break;
                    v419 = *(char *)(*(_QWORD *)&a1[*v5] + v417);
                    *(_QWORD *)&a1[v416] = v418;
                    if (v419 < 0)
                    {
                      v13 = v415++ >= 9;
                      if (!v13)
                        continue;
                    }
                    goto LABEL_960;
                  }
                  a1[*v4] = 1;
                }
                break;
              case 0x1Bu:
                if ((v327 & 7) != 0)
                  goto LABEL_2958;
                v380 = 0;
                while (1)
                {
                  v381 = *v2;
                  v382 = *(_QWORD *)&a1[v381];
                  v383 = v382 + 1;
                  if (v382 == -1 || v383 > *(_QWORD *)&a1[*v3])
                    goto LABEL_915;
                  v384 = *(char *)(*(_QWORD *)&a1[*v5] + v382);
                  *(_QWORD *)&a1[v381] = v383;
                  if (v384 < 0)
                  {
                    v32 = v380++ > 8;
                    if (!v32)
                      continue;
                  }
                  goto LABEL_769;
                }
              case 0x1Du:
                if (v333 != 2)
                {
                  if ((v327 & 7) != 0)
                    goto LABEL_2958;
                  while (1)
                  {
                    v385 = *v2;
                    v386 = *(_QWORD *)&a1[v385];
                    v387 = v386 + 1;
                    if (v386 == -1 || v387 > *(_QWORD *)&a1[*v3])
                      goto LABEL_915;
                    v388 = *(char *)(*(_QWORD *)&a1[*v5] + v386);
                    *(_QWORD *)&a1[v385] = v387;
                    if (v388 < 0)
                    {
                      v389 = v333++;
                      if (v389 <= 8)
                        continue;
                    }
                    goto LABEL_769;
                  }
                }
                if (!PBReaderPlaceMark())
                  goto LABEL_2958;
LABEL_970:
                while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
                {
                  v420 = a1[*v4];
                  if (a1[*v4])
                    break;
                  while (1)
                  {
                    v421 = *v2;
                    v422 = *(_QWORD *)&a1[v421];
                    v423 = v422 + 1;
                    if (v422 == -1 || v423 > *(_QWORD *)&a1[*v3])
                      break;
                    v424 = *(char *)(*(_QWORD *)&a1[*v5] + v422);
                    *(_QWORD *)&a1[v421] = v423;
                    if (v424 < 0)
                    {
                      v13 = v420++ >= 9;
                      if (!v13)
                        continue;
                    }
                    goto LABEL_970;
                  }
                  a1[*v4] = 1;
                }
                break;
              case 0x1Eu:
                if (v333 != 2)
                {
                  if ((v327 & 7) != 0)
                    goto LABEL_2958;
                  while (1)
                  {
                    v390 = *v2;
                    v391 = *(_QWORD *)&a1[v390];
                    v392 = v391 + 1;
                    if (v391 == -1 || v392 > *(_QWORD *)&a1[*v3])
                      break;
                    v393 = *(char *)(*(_QWORD *)&a1[*v5] + v391);
                    *(_QWORD *)&a1[v390] = v392;
                    if (v393 < 0)
                    {
                      v394 = v333++;
                      if (v394 <= 8)
                        continue;
                    }
                    goto LABEL_769;
                  }
LABEL_915:
                  a1[*v4] = 1;
                  continue;
                }
                if (!PBReaderPlaceMark())
                  goto LABEL_2958;
LABEL_980:
                while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
                {
                  v425 = a1[*v4];
                  if (a1[*v4])
                    break;
                  while (1)
                  {
                    v426 = *v2;
                    v427 = *(_QWORD *)&a1[v426];
                    v428 = v427 + 1;
                    if (v427 == -1 || v428 > *(_QWORD *)&a1[*v3])
                      break;
                    v429 = *(char *)(*(_QWORD *)&a1[*v5] + v427);
                    *(_QWORD *)&a1[v426] = v428;
                    if (v429 < 0)
                    {
                      v13 = v425++ >= 9;
                      if (!v13)
                        continue;
                    }
                    goto LABEL_980;
                  }
                  a1[*v4] = 1;
                }
                break;
              case 0x1Fu:
                if ((v327 & 7) != 0)
                  goto LABEL_2958;
                v395 = 0;
                while (1)
                {
                  v396 = *v2;
                  v397 = *(_QWORD *)&a1[v396];
                  v398 = v397 + 1;
                  if (v397 == -1 || v398 > *(_QWORD *)&a1[*v3])
                    goto LABEL_915;
                  v399 = *(char *)(*(_QWORD *)&a1[*v5] + v397);
                  *(_QWORD *)&a1[v396] = v398;
                  if (v399 < 0)
                  {
                    v32 = v395++ > 8;
                    if (!v32)
                      continue;
                  }
                  goto LABEL_769;
                }
              case 0x20u:
                if ((v327 & 7) != 0)
                  goto LABEL_2958;
                v400 = 0;
                while (1)
                {
                  v401 = *v2;
                  v402 = *(_QWORD *)&a1[v401];
                  v403 = v402 + 1;
                  if (v402 == -1 || v403 > *(_QWORD *)&a1[*v3])
                    goto LABEL_915;
                  v404 = *(char *)(*(_QWORD *)&a1[*v5] + v402);
                  *(_QWORD *)&a1[v401] = v403;
                  if (v404 < 0)
                  {
                    v32 = v400++ > 8;
                    if (!v32)
                      continue;
                  }
                  goto LABEL_769;
                }
              case 0x21u:
                if (v333 != 2 || !PBReaderPlaceMark() || !GEOPDSearchOriginationInfoIsValid(a1))
                  goto LABEL_2958;
                goto LABEL_938;
              case 0x22u:
                if (v333 == 2)
                  goto LABEL_921;
                goto LABEL_2958;
              case 0x23u:
                if (v333 != 2 || !PBReaderPlaceMark() || !GEOPDClientRankingFeatureTypeResultIsValid(a1))
                  goto LABEL_2958;
                goto LABEL_938;
              case 0x24u:
                if (v333 != 2
                  || !PBReaderPlaceMark()
                  || !GEOPDSSearchSessionDataIsValid((unsigned __int8 *)a1))
                {
                  goto LABEL_2958;
                }
                goto LABEL_938;
              case 0x25u:
                if (v333 != 2 || !PBReaderPlaceMark() || !GEOPDSSessionUserActionMetadataIsValid(a1))
                  goto LABEL_2958;
                goto LABEL_938;
              case 0x26u:
                if (v333 == 2 && PBReaderPlaceMark() && GEOPDPaginationParametersIsValid(a1))
                  goto LABEL_938;
                goto LABEL_2958;
              default:
LABEL_921:
                if ((PBReaderSkipValueWithTag() & 1) == 0)
                  goto LABEL_2958;
                continue;
            }
            break;
          }
LABEL_938:
          PBReaderRecallMark();
          continue;
        }
      case 0xDu:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_2959;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
LABEL_992:
        while (2)
        {
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3] || a1[*v4])
            goto LABEL_2951;
          v430 = 0;
          v431 = 0;
          v432 = 0;
          while (2)
          {
            v433 = *v2;
            v434 = *(_QWORD *)&a1[v433];
            v435 = v434 + 1;
            if (v434 == -1 || v435 > *(_QWORD *)&a1[*v3])
            {
              a1[*v4] = 1;
            }
            else
            {
              v436 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v434);
              *(_QWORD *)&a1[v433] = v435;
              v432 |= (unint64_t)(v436 & 0x7F) << v430;
              if (v436 < 0)
              {
                v430 += 7;
                v13 = v431++ >= 9;
                if (v13)
                {
                  v432 = 0;
                  v437 = a1[*v4];
                  goto LABEL_1004;
                }
                continue;
              }
            }
            break;
          }
          v437 = a1[*v4];
          if (a1[*v4])
            v432 = 0;
LABEL_1004:
          v438 = v432 & 7;
          if (v437)
            v439 = 1;
          else
            v439 = v438 == 4;
          if (!v439)
          {
            switch((v432 >> 3))
            {
              case 1u:
                if ((v432 & 7) != 0)
                  goto LABEL_2958;
                v440 = 0;
                while (1)
                {
                  v441 = *v2;
                  v442 = *(_QWORD *)&a1[v441];
                  v443 = v442 + 1;
                  if (v442 == -1 || v443 > *(_QWORD *)&a1[*v3])
                    goto LABEL_1032;
                  v444 = *(char *)(*(_QWORD *)&a1[*v5] + v442);
                  *(_QWORD *)&a1[v441] = v443;
                  if (v444 < 0)
                  {
                    v32 = v440++ > 8;
                    if (!v32)
                      continue;
                  }
                  goto LABEL_992;
                }
              case 2u:
                if (v438 != 2 || !PBReaderPlaceMark() || !GEOPDViewportInfoIsValid(a1))
                  goto LABEL_2958;
                PBReaderRecallMark();
                continue;
              case 3u:
                if (v438 == 2)
                  goto LABEL_1022;
                goto LABEL_2958;
              case 4u:
                if ((v432 & 7) != 0)
                  goto LABEL_2958;
                v445 = 0;
                do
                {
                  v446 = *v2;
                  v447 = *(_QWORD *)&a1[v446];
                  v448 = v447 + 1;
                  if (v447 == -1 || v448 > *(_QWORD *)&a1[*v3])
                  {
LABEL_1032:
                    a1[*v4] = 1;
                    goto LABEL_992;
                  }
                  v449 = *(char *)(*(_QWORD *)&a1[*v5] + v447);
                  *(_QWORD *)&a1[v446] = v448;
                  if ((v449 & 0x80000000) == 0)
                    break;
                  v32 = v445++ > 8;
                }
                while (!v32);
                break;
              default:
LABEL_1022:
                if ((PBReaderSkipValueWithTag() & 1) == 0)
                  goto LABEL_2958;
                continue;
            }
            continue;
          }
          goto LABEL_2951;
        }
      case 0xEu:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_2959;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
LABEL_1036:
        while (2)
        {
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3] || a1[*v4])
            goto LABEL_2951;
          v450 = 0;
          v451 = 0;
          v452 = 0;
          while (2)
          {
            v453 = *v2;
            v454 = *(_QWORD *)&a1[v453];
            v455 = v454 + 1;
            if (v454 == -1 || v455 > *(_QWORD *)&a1[*v3])
            {
              a1[*v4] = 1;
            }
            else
            {
              v456 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v454);
              *(_QWORD *)&a1[v453] = v455;
              v452 |= (unint64_t)(v456 & 0x7F) << v450;
              if (v456 < 0)
              {
                v450 += 7;
                v13 = v451++ >= 9;
                if (v13)
                {
                  v452 = 0;
                  v457 = *v4;
                  v458 = a1[v457];
                  goto LABEL_1048;
                }
                continue;
              }
            }
            break;
          }
          v457 = *v4;
          v458 = a1[v457];
          if (a1[v457])
            v452 = 0;
LABEL_1048:
          v459 = v452 & 7;
          if (v458)
            v460 = 1;
          else
            v460 = v459 == 4;
          if (!v460)
          {
            switch((v452 >> 3))
            {
              case 2u:
                if (v459 != 1)
                  goto LABEL_2958;
                v461 = *v2;
                v462 = *(_QWORD *)&a1[v461];
                if (v462 > 0xFFFFFFFFFFFFFFF7)
                  goto LABEL_1088;
                v463 = v462 + 8;
                if (v463 > *(_QWORD *)&a1[*v3])
                  goto LABEL_1088;
                *(_QWORD *)&a1[v461] = v463;
                continue;
              case 3u:
                if (v459 != 2 || !PBReaderPlaceMark() || !GEOLatLngIsValid(a1))
                  goto LABEL_2958;
                PBReaderRecallMark();
                continue;
              case 4u:
                if ((v452 & 7) != 0)
                  goto LABEL_2958;
                v464 = 0;
                while (1)
                {
                  v465 = *v2;
                  v466 = *(_QWORD *)&a1[v465];
                  v467 = v466 + 1;
                  if (v466 == -1 || v467 > *(_QWORD *)&a1[*v3])
                    goto LABEL_1087;
                  v468 = *(char *)(*(_QWORD *)&a1[*v5] + v466);
                  *(_QWORD *)&a1[v465] = v467;
                  if (v468 < 0)
                  {
                    v32 = v464++ > 8;
                    if (!v32)
                      continue;
                  }
                  goto LABEL_1036;
                }
              case 5u:
                if ((v452 & 7) != 0)
                  goto LABEL_2958;
                v469 = 0;
                while (1)
                {
                  v470 = *v2;
                  v471 = *(_QWORD *)&a1[v470];
                  v472 = v471 + 1;
                  if (v471 == -1 || v472 > *(_QWORD *)&a1[*v3])
                    goto LABEL_1087;
                  v473 = *(char *)(*(_QWORD *)&a1[*v5] + v471);
                  *(_QWORD *)&a1[v470] = v472;
                  if (v473 < 0)
                  {
                    v32 = v469++ > 8;
                    if (!v32)
                      continue;
                  }
                  goto LABEL_1036;
                }
              case 6u:
                if ((v452 & 7) != 0)
                  goto LABEL_2958;
                v474 = 0;
                break;
              default:
                if ((PBReaderSkipValueWithTag() & 1) == 0)
                  goto LABEL_2958;
                continue;
            }
            while (1)
            {
              v475 = *v2;
              v476 = *(_QWORD *)&a1[v475];
              v477 = v476 + 1;
              if (v476 == -1 || v477 > *(_QWORD *)&a1[*v3])
                break;
              v478 = *(char *)(*(_QWORD *)&a1[*v5] + v476);
              *(_QWORD *)&a1[v475] = v477;
              if (v478 < 0)
              {
                v32 = v474++ > 8;
                if (!v32)
                  continue;
              }
              goto LABEL_1036;
            }
LABEL_1087:
            v457 = *v4;
LABEL_1088:
            a1[v457] = 1;
            continue;
          }
          goto LABEL_2951;
        }
      case 0xFu:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_2959;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
LABEL_1092:
        while (2)
        {
          while (2)
          {
            if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3] || a1[*v4])
              goto LABEL_2298;
            v479 = 0;
            v480 = 0;
            v481 = 0;
            while (1)
            {
              v482 = *v2;
              v483 = *(_QWORD *)&a1[v482];
              v484 = v483 + 1;
              if (v483 == -1 || v484 > *(_QWORD *)&a1[*v3])
                break;
              v485 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v483);
              *(_QWORD *)&a1[v482] = v484;
              v481 |= (unint64_t)(v485 & 0x7F) << v479;
              if ((v485 & 0x80) == 0)
                goto LABEL_1102;
              v479 += 7;
              v13 = v480++ >= 9;
              if (v13)
              {
                v481 = 0;
                v486 = a1[*v4];
                goto LABEL_1104;
              }
            }
            a1[*v4] = 1;
LABEL_1102:
            v486 = a1[*v4];
            if (a1[*v4])
              v481 = 0;
LABEL_1104:
            if (v486 || (v481 & 7) == 4)
              goto LABEL_2298;
            if ((v481 >> 3) == 2)
            {
              if ((v481 & 7) != 0)
                goto LABEL_2958;
              v493 = 0;
              while (1)
              {
                v494 = *v2;
                v495 = *(_QWORD *)&a1[v494];
                v496 = v495 + 1;
                if (v495 == -1 || v496 > *(_QWORD *)&a1[*v3])
                  break;
                v497 = *(char *)(*(_QWORD *)&a1[*v5] + v495);
                *(_QWORD *)&a1[v494] = v496;
                if (v497 < 0)
                {
                  v32 = v493++ > 8;
                  if (!v32)
                    continue;
                }
                goto LABEL_1092;
              }
LABEL_1126:
              a1[*v4] = 1;
              continue;
            }
            break;
          }
          if ((v481 >> 3) != 1)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0)
              goto LABEL_2958;
            continue;
          }
          break;
        }
        if ((v481 & 7) == 0)
        {
          v488 = 0;
          while (1)
          {
            v489 = *v2;
            v490 = *(_QWORD *)&a1[v489];
            v491 = v490 + 1;
            if (v490 == -1 || v491 > *(_QWORD *)&a1[*v3])
              goto LABEL_1126;
            v492 = *(char *)(*(_QWORD *)&a1[*v5] + v490);
            *(_QWORD *)&a1[v489] = v491;
            if (v492 < 0)
            {
              v32 = v488++ > 8;
              if (!v32)
                continue;
            }
            goto LABEL_1092;
          }
        }
        goto LABEL_2958;
      case 0x10u:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_2959;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
LABEL_1132:
        while (2)
        {
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3] || a1[*v4])
            goto LABEL_2951;
          v498 = 0;
          v499 = 0;
          v500 = 0;
          while (2)
          {
            v501 = *v2;
            v502 = *(_QWORD *)&a1[v501];
            v503 = v502 + 1;
            if (v502 == -1 || v503 > *(_QWORD *)&a1[*v3])
            {
              a1[*v4] = 1;
            }
            else
            {
              v504 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v502);
              *(_QWORD *)&a1[v501] = v503;
              v500 |= (unint64_t)(v504 & 0x7F) << v498;
              if (v504 < 0)
              {
                v498 += 7;
                v13 = v499++ >= 9;
                if (v13)
                {
                  v500 = 0;
                  v505 = *v4;
                  v506 = a1[v505];
                  goto LABEL_1144;
                }
                continue;
              }
            }
            break;
          }
          v505 = *v4;
          v506 = a1[v505];
          if (a1[v505])
            v500 = 0;
LABEL_1144:
          v507 = v500 & 7;
          if (v506)
            v508 = 1;
          else
            v508 = v507 == 4;
          if (!v508)
          {
            switch((v500 >> 3))
            {
              case 1u:
                if ((v500 & 7) != 0)
                  goto LABEL_2958;
                v509 = 0;
                break;
              case 2u:
                if (v507 != 2 || !PBReaderPlaceMark() || !GEOPDViewportInfoIsValid(a1))
                  goto LABEL_2958;
                PBReaderRecallMark();
                continue;
              case 3u:
                if (v507 != 1)
                  goto LABEL_2958;
                v514 = *v2;
                v515 = *(_QWORD *)&a1[v514];
                if (v515 > 0xFFFFFFFFFFFFFFF7)
                  goto LABEL_1169;
                v516 = v515 + 8;
                if (v516 > *(_QWORD *)&a1[*v3])
                  goto LABEL_1169;
                *(_QWORD *)&a1[v514] = v516;
                continue;
              case 4u:
                if (v507 == 2)
                  goto LABEL_1166;
                goto LABEL_2958;
              default:
LABEL_1166:
                if ((PBReaderSkipValueWithTag() & 1) == 0)
                  goto LABEL_2958;
                continue;
            }
            while (1)
            {
              v510 = *v2;
              v511 = *(_QWORD *)&a1[v510];
              v512 = v511 + 1;
              if (v511 == -1 || v512 > *(_QWORD *)&a1[*v3])
                break;
              v513 = *(char *)(*(_QWORD *)&a1[*v5] + v511);
              *(_QWORD *)&a1[v510] = v512;
              if (v513 < 0)
              {
                v32 = v509++ > 8;
                if (!v32)
                  continue;
              }
              goto LABEL_1132;
            }
            v505 = *v4;
LABEL_1169:
            a1[v505] = 1;
            continue;
          }
          goto LABEL_2951;
        }
      case 0x11u:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_2959;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
LABEL_1173:
        while (2)
        {
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3] || a1[*v4])
            goto LABEL_2951;
          v517 = 0;
          v518 = 0;
          v519 = 0;
          while (2)
          {
            v520 = *v2;
            v521 = *(_QWORD *)&a1[v520];
            v522 = v521 + 1;
            if (v521 == -1 || v522 > *(_QWORD *)&a1[*v3])
            {
              a1[*v4] = 1;
            }
            else
            {
              v523 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v521);
              *(_QWORD *)&a1[v520] = v522;
              v519 |= (unint64_t)(v523 & 0x7F) << v517;
              if (v523 < 0)
              {
                v517 += 7;
                v13 = v518++ >= 9;
                if (v13)
                {
                  v519 = 0;
                  v524 = a1[*v4];
                  goto LABEL_1185;
                }
                continue;
              }
            }
            break;
          }
          v524 = a1[*v4];
          if (a1[*v4])
            v519 = 0;
LABEL_1185:
          v525 = v519 & 7;
          if (v524)
            v526 = 1;
          else
            v526 = v525 == 4;
          if (!v526)
          {
            switch((v519 >> 3))
            {
              case 1u:
                if ((v519 & 7) != 0)
                  goto LABEL_2958;
                v527 = 0;
                while (1)
                {
                  v528 = *v2;
                  v529 = *(_QWORD *)&a1[v528];
                  v530 = v529 + 1;
                  if (v529 == -1 || v530 > *(_QWORD *)&a1[*v3])
                    goto LABEL_1238;
                  v531 = *(char *)(*(_QWORD *)&a1[*v5] + v529);
                  *(_QWORD *)&a1[v528] = v530;
                  if (v531 < 0)
                  {
                    v32 = v527++ > 8;
                    if (!v32)
                      continue;
                  }
                  goto LABEL_1173;
                }
              case 2u:
                if ((v519 & 7) != 0)
                  goto LABEL_2958;
                v532 = 0;
                while (1)
                {
                  v533 = *v2;
                  v534 = *(_QWORD *)&a1[v533];
                  v535 = v534 + 1;
                  if (v534 == -1 || v535 > *(_QWORD *)&a1[*v3])
                    goto LABEL_1238;
                  v536 = *(char *)(*(_QWORD *)&a1[*v5] + v534);
                  *(_QWORD *)&a1[v533] = v535;
                  if (v536 < 0)
                  {
                    v32 = v532++ > 8;
                    if (!v32)
                      continue;
                  }
                  goto LABEL_1173;
                }
              case 3u:
                if (v525 == 2)
                  goto LABEL_1240;
                goto LABEL_2958;
              case 4u:
                if (v525 == 2)
                  goto LABEL_1240;
                goto LABEL_2958;
              case 5u:
                if (v525 != 2 || !PBReaderPlaceMark() || !GEOLatLngIsValid(a1))
                  goto LABEL_2958;
                goto LABEL_1217;
              case 6u:
                if (v525 != 2 || !PBReaderPlaceMark() || !GEOStructuredAddressIsValid(a1))
                  goto LABEL_2958;
LABEL_1217:
                PBReaderRecallMark();
                continue;
              case 7u:
                if (v525 == 2)
                  goto LABEL_1240;
                goto LABEL_2958;
              case 8u:
                if (v525 == 2)
                  goto LABEL_1240;
                goto LABEL_2958;
              case 9u:
                if ((v519 & 7) != 0)
                  goto LABEL_2958;
                v537 = 0;
                while (1)
                {
                  v538 = *v2;
                  v539 = *(_QWORD *)&a1[v538];
                  v540 = v539 + 1;
                  if (v539 == -1 || v540 > *(_QWORD *)&a1[*v3])
                    goto LABEL_1238;
                  v541 = *(char *)(*(_QWORD *)&a1[*v5] + v539);
                  *(_QWORD *)&a1[v538] = v540;
                  if (v541 < 0)
                  {
                    v32 = v537++ > 8;
                    if (!v32)
                      continue;
                  }
                  goto LABEL_1173;
                }
              case 0xAu:
                if ((v519 & 7) != 0)
                  goto LABEL_2958;
                v542 = 0;
                do
                {
                  v543 = *v2;
                  v544 = *(_QWORD *)&a1[v543];
                  v545 = v544 + 1;
                  if (v544 == -1 || v545 > *(_QWORD *)&a1[*v3])
                  {
LABEL_1238:
                    a1[*v4] = 1;
                    goto LABEL_1173;
                  }
                  v546 = *(char *)(*(_QWORD *)&a1[*v5] + v544);
                  *(_QWORD *)&a1[v543] = v545;
                  if ((v546 & 0x80000000) == 0)
                    break;
                  v32 = v542++ > 8;
                }
                while (!v32);
                break;
              case 0xBu:
                if (v525 == 2)
                  goto LABEL_1240;
                goto LABEL_2958;
              default:
LABEL_1240:
                if ((PBReaderSkipValueWithTag() & 1) == 0)
                  goto LABEL_2958;
                continue;
            }
            continue;
          }
          goto LABEL_2951;
        }
      case 0x12u:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_2959;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
LABEL_1245:
        while (2)
        {
          while (2)
          {
            if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3] || a1[*v4])
              goto LABEL_2723;
            v547 = 0;
            v548 = 0;
            v549 = 0;
            while (2)
            {
              v550 = *v2;
              v551 = *(_QWORD *)&a1[v550];
              v552 = v551 + 1;
              if (v551 == -1 || v552 > *(_QWORD *)&a1[*v3])
              {
                a1[*v4] = 1;
              }
              else
              {
                v553 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v551);
                *(_QWORD *)&a1[v550] = v552;
                v549 |= (unint64_t)(v553 & 0x7F) << v547;
                if (v553 < 0)
                {
                  v547 += 7;
                  v13 = v548++ >= 9;
                  if (v13)
                  {
                    v549 = 0;
                    v554 = a1[*v4];
                    goto LABEL_1257;
                  }
                  continue;
                }
              }
              break;
            }
            v554 = a1[*v4];
            if (a1[*v4])
              v549 = 0;
LABEL_1257:
            v555 = v549 & 7;
            if (v554)
              v556 = 1;
            else
              v556 = v555 == 4;
            if (v556)
              goto LABEL_2723;
            switch((v549 >> 3))
            {
              case 1u:
                if ((v549 & 7) != 0)
                  goto LABEL_2958;
                v557 = 0;
                while (1)
                {
                  v558 = *v2;
                  v559 = *(_QWORD *)&a1[v558];
                  v560 = v559 + 1;
                  if (v559 == -1 || v560 > *(_QWORD *)&a1[*v3])
                    goto LABEL_1280;
                  v561 = *(char *)(*(_QWORD *)&a1[*v5] + v559);
                  *(_QWORD *)&a1[v558] = v560;
                  if (v561 < 0)
                  {
                    v32 = v557++ > 8;
                    if (!v32)
                      continue;
                  }
                  goto LABEL_1245;
                }
              case 2u:
                if ((v549 & 7) != 0)
                  goto LABEL_2958;
                v562 = 0;
                do
                {
                  v563 = *v2;
                  v564 = *(_QWORD *)&a1[v563];
                  v565 = v564 + 1;
                  if (v564 == -1 || v565 > *(_QWORD *)&a1[*v3])
                  {
LABEL_1280:
                    a1[*v4] = 1;
                    goto LABEL_1245;
                  }
                  v566 = *(char *)(*(_QWORD *)&a1[*v5] + v564);
                  *(_QWORD *)&a1[v563] = v565;
                  if ((v566 & 0x80000000) == 0)
                    break;
                  v32 = v562++ > 8;
                }
                while (!v32);
                continue;
              case 3u:
                if (v555 == 2 && PBReaderPlaceMark() && GEOPDViewportInfoIsValid(a1))
                  goto LABEL_1321;
                goto LABEL_2958;
              case 4u:
                if (v555 != 2 || !PBReaderPlaceMark())
                  goto LABEL_2958;
                objc_msgSend(a1, "position");
                objc_msgSend(a1, "length");
                break;
              default:
                if ((PBReaderSkipValueWithTag() & 1) == 0)
                  goto LABEL_2958;
                continue;
            }
            break;
          }
LABEL_1288:
          while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3] && !a1[*v4])
          {
            v567 = 0;
            v568 = 0;
            v569 = 0;
            while (1)
            {
              v570 = *v2;
              v571 = *(_QWORD *)&a1[v570];
              v572 = v571 + 1;
              if (v571 == -1 || v572 > *(_QWORD *)&a1[*v3])
                break;
              v573 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v571);
              *(_QWORD *)&a1[v570] = v572;
              v569 |= (unint64_t)(v573 & 0x7F) << v567;
              if ((v573 & 0x80) == 0)
                goto LABEL_1298;
              v567 += 7;
              v13 = v568++ >= 9;
              if (v13)
              {
                v569 = 0;
                v574 = a1[*v4];
                goto LABEL_1300;
              }
            }
            a1[*v4] = 1;
LABEL_1298:
            v574 = a1[*v4];
            if (a1[*v4])
              v569 = 0;
LABEL_1300:
            v575 = v569 & 7;
            if (v574 || v575 == 4)
              break;
            if ((v569 >> 3) == 2)
            {
              if ((v569 & 7) == 0)
              {
                v577 = 0;
                do
                {
                  v578 = *v2;
                  v579 = *(_QWORD *)&a1[v578];
                  v580 = v579 + 1;
                  if (v579 == -1 || v580 > *(_QWORD *)&a1[*v3])
                  {
                    a1[*v4] = 1;
                    goto LABEL_1288;
                  }
                  v581 = *(char *)(*(_QWORD *)&a1[*v5] + v579);
                  *(_QWORD *)&a1[v578] = v580;
                  if ((v581 & 0x80000000) == 0)
                    break;
                  v32 = v577++ > 8;
                }
                while (!v32);
                continue;
              }
              goto LABEL_2963;
            }
            if ((v569 >> 3) == 1)
            {
              if (v575 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
                goto LABEL_2963;
            }
            else if (!PBReaderSkipValueWithTag())
            {
              goto LABEL_2963;
            }
          }
          v582 = a1[*v4];
          PBReaderRecallMark();
          if (!v582)
          {
LABEL_1321:
            PBReaderRecallMark();
            continue;
          }
          goto LABEL_2958;
        }
      case 0x13u:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_2959;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
LABEL_1325:
        while (2)
        {
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3] || a1[*v4])
            goto LABEL_2951;
          v583 = 0;
          v584 = 0;
          v585 = 0;
          while (1)
          {
            v586 = *v2;
            v587 = *(_QWORD *)&a1[v586];
            v588 = v587 + 1;
            if (v587 == -1 || v588 > *(_QWORD *)&a1[*v3])
              break;
            v589 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v587);
            *(_QWORD *)&a1[v586] = v588;
            v585 |= (unint64_t)(v589 & 0x7F) << v583;
            if ((v589 & 0x80) == 0)
              goto LABEL_1335;
            v583 += 7;
            v13 = v584++ >= 9;
            if (v13)
            {
              v585 = 0;
              v590 = a1[*v4];
              goto LABEL_1337;
            }
          }
          a1[*v4] = 1;
LABEL_1335:
          v590 = a1[*v4];
          if (a1[*v4])
            v585 = 0;
LABEL_1337:
          v591 = v585 & 7;
          if (v590 || v591 == 4)
            goto LABEL_2951;
          v593 = v585 >> 3;
          if ((v585 >> 3) == 3)
          {
            if (v591 == 2 && PBReaderPlaceMark() && GEOPDViewportInfoIsValid(a1))
            {
              PBReaderRecallMark();
              continue;
            }
          }
          else
          {
            if ((_DWORD)v593 != 2)
            {
              if ((_DWORD)v593 == 1 && v591 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
                goto LABEL_2958;
              continue;
            }
            if ((v585 & 7) == 0)
            {
              v594 = 0;
              do
              {
                v595 = *v2;
                v596 = *(_QWORD *)&a1[v595];
                v597 = v596 + 1;
                if (v596 == -1 || v597 > *(_QWORD *)&a1[*v3])
                {
                  a1[*v4] = 1;
                  goto LABEL_1325;
                }
                v598 = *(char *)(*(_QWORD *)&a1[*v5] + v596);
                *(_QWORD *)&a1[v595] = v597;
                if ((v598 & 0x80000000) == 0)
                  break;
                v32 = v594++ > 8;
              }
              while (!v32);
              continue;
            }
          }
          goto LABEL_2958;
        }
      case 0x14u:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_2959;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
LABEL_1364:
        while (2)
        {
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3] || a1[*v4])
            goto LABEL_2298;
          v599 = 0;
          v600 = 0;
          v601 = 0;
          while (2)
          {
            v602 = *v2;
            v603 = *(_QWORD *)&a1[v602];
            v604 = v603 + 1;
            if (v603 == -1 || v604 > *(_QWORD *)&a1[*v3])
            {
              a1[*v4] = 1;
            }
            else
            {
              v605 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v603);
              *(_QWORD *)&a1[v602] = v604;
              v601 |= (unint64_t)(v605 & 0x7F) << v599;
              if (v605 < 0)
              {
                v599 += 7;
                v13 = v600++ >= 9;
                if (v13)
                {
                  v601 = 0;
                  v606 = a1[*v4];
                  goto LABEL_1376;
                }
                continue;
              }
            }
            break;
          }
          v606 = a1[*v4];
          if (a1[*v4])
            v601 = 0;
LABEL_1376:
          if (v606)
            v607 = 1;
          else
            v607 = (v601 & 7) == 4;
          if (!v607)
          {
            switch((v601 >> 3))
            {
              case 1u:
                if ((v601 & 7) != 0)
                  goto LABEL_2958;
                v608 = 0;
                while (1)
                {
                  v609 = *v2;
                  v610 = *(_QWORD *)&a1[v609];
                  v611 = v610 + 1;
                  if (v610 == -1 || v611 > *(_QWORD *)&a1[*v3])
                    goto LABEL_1415;
                  v612 = *(char *)(*(_QWORD *)&a1[*v5] + v610);
                  *(_QWORD *)&a1[v609] = v611;
                  if (v612 < 0)
                  {
                    v32 = v608++ > 8;
                    if (!v32)
                      continue;
                  }
                  goto LABEL_1364;
                }
              case 2u:
                if ((v601 & 7) != 0)
                  goto LABEL_2958;
                v613 = 0;
                while (1)
                {
                  v614 = *v2;
                  v615 = *(_QWORD *)&a1[v614];
                  v616 = v615 + 1;
                  if (v615 == -1 || v616 > *(_QWORD *)&a1[*v3])
                    goto LABEL_1415;
                  v617 = *(char *)(*(_QWORD *)&a1[*v5] + v615);
                  *(_QWORD *)&a1[v614] = v616;
                  if (v617 < 0)
                  {
                    v32 = v613++ > 8;
                    if (!v32)
                      continue;
                  }
                  goto LABEL_1364;
                }
              case 3u:
                if ((v601 & 7) != 0)
                  goto LABEL_2958;
                v618 = 0;
                while (1)
                {
                  v619 = *v2;
                  v620 = *(_QWORD *)&a1[v619];
                  v621 = v620 + 1;
                  if (v620 == -1 || v621 > *(_QWORD *)&a1[*v3])
                    goto LABEL_1415;
                  v622 = *(char *)(*(_QWORD *)&a1[*v5] + v620);
                  *(_QWORD *)&a1[v619] = v621;
                  if (v622 < 0)
                  {
                    v32 = v618++ > 8;
                    if (!v32)
                      continue;
                  }
                  goto LABEL_1364;
                }
              case 4u:
                if ((v601 & 7) != 0)
                  goto LABEL_2958;
                v623 = 0;
                do
                {
                  v624 = *v2;
                  v625 = *(_QWORD *)&a1[v624];
                  v626 = v625 + 1;
                  if (v625 == -1 || v626 > *(_QWORD *)&a1[*v3])
                  {
LABEL_1415:
                    a1[*v4] = 1;
                    goto LABEL_1364;
                  }
                  v627 = *(char *)(*(_QWORD *)&a1[*v5] + v625);
                  *(_QWORD *)&a1[v624] = v626;
                  if ((v627 & 0x80000000) == 0)
                    break;
                  v32 = v623++ > 8;
                }
                while (!v32);
                break;
              default:
                if ((PBReaderSkipValueWithTag() & 1) == 0)
                  goto LABEL_2958;
                continue;
            }
            continue;
          }
          goto LABEL_2298;
        }
      case 0x15u:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_2959;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
        while (2)
        {
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3] || a1[*v4])
            goto LABEL_2951;
          v628 = 0;
          v629 = 0;
          v630 = 0;
          while (2)
          {
            v631 = *v2;
            v632 = *(_QWORD *)&a1[v631];
            v633 = v632 + 1;
            if (v632 == -1 || v633 > *(_QWORD *)&a1[*v3])
            {
              a1[*v4] = 1;
            }
            else
            {
              v634 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v632);
              *(_QWORD *)&a1[v631] = v633;
              v630 |= (unint64_t)(v634 & 0x7F) << v628;
              if (v634 < 0)
              {
                v628 += 7;
                v13 = v629++ >= 9;
                if (v13)
                {
                  v630 = 0;
                  v635 = *v4;
                  v636 = a1[v635];
                  goto LABEL_1431;
                }
                continue;
              }
            }
            break;
          }
          v635 = *v4;
          v636 = a1[v635];
          if (a1[v635])
            v630 = 0;
LABEL_1431:
          v637 = v630 & 7;
          if (v636)
            v638 = 1;
          else
            v638 = v637 == 4;
          if (!v638)
          {
            switch((v630 >> 3))
            {
              case 1u:
                if (v637 != 1)
                  goto LABEL_2958;
                v639 = *v2;
                v640 = *(_QWORD *)&a1[v639];
                if (v640 <= 0xFFFFFFFFFFFFFFF7 && (v641 = v640 + 8, v641 <= *(_QWORD *)&a1[*v3]))
                  *(_QWORD *)&a1[v639] = v641;
                else
                  a1[v635] = 1;
                continue;
              case 2u:
                if (v637 != 2 || !PBReaderPlaceMark() || !GEOLocationIsValid(a1))
                  goto LABEL_2958;
                PBReaderRecallMark();
                continue;
              case 3u:
                if (v637 == 2)
                  goto LABEL_1447;
                goto LABEL_2958;
              case 4u:
                if (v637 == 2)
                  goto LABEL_1447;
                goto LABEL_2958;
              default:
LABEL_1447:
                if ((PBReaderSkipValueWithTag() & 1) == 0)
                  goto LABEL_2958;
                continue;
            }
          }
          goto LABEL_2951;
        }
      case 0x16u:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_2959;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
LABEL_1453:
        while (2)
        {
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3] || a1[*v4])
            goto LABEL_2951;
          v642 = 0;
          v643 = 0;
          v644 = 0;
          while (2)
          {
            v645 = *v2;
            v646 = *(_QWORD *)&a1[v645];
            v647 = v646 + 1;
            if (v646 == -1 || v647 > *(_QWORD *)&a1[*v3])
            {
              a1[*v4] = 1;
            }
            else
            {
              v648 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v646);
              *(_QWORD *)&a1[v645] = v647;
              v644 |= (unint64_t)(v648 & 0x7F) << v642;
              if (v648 < 0)
              {
                v642 += 7;
                v13 = v643++ >= 9;
                if (v13)
                {
                  v644 = 0;
                  v649 = a1[*v4];
                  goto LABEL_1465;
                }
                continue;
              }
            }
            break;
          }
          v649 = a1[*v4];
          if (a1[*v4])
            v644 = 0;
LABEL_1465:
          v650 = v644 & 7;
          if (v649)
            v651 = 1;
          else
            v651 = v650 == 4;
          if (v651)
            goto LABEL_2951;
          switch((v644 >> 3))
          {
            case 1u:
              if ((v644 & 7) != 0)
                goto LABEL_2958;
              v652 = 0;
              while (1)
              {
                v653 = *v2;
                v654 = *(_QWORD *)&a1[v653];
                v655 = v654 + 1;
                if (v654 == -1 || v655 > *(_QWORD *)&a1[*v3])
                  goto LABEL_1499;
                v656 = *(char *)(*(_QWORD *)&a1[*v5] + v654);
                *(_QWORD *)&a1[v653] = v655;
                if (v656 < 0)
                {
                  v32 = v652++ > 8;
                  if (!v32)
                    continue;
                }
                goto LABEL_1453;
              }
            case 2u:
              if (v650 == 2 && PBReaderPlaceMark() && GEOLatLngIsValid(a1))
                goto LABEL_1483;
              goto LABEL_2958;
            case 3u:
              if ((v644 & 7) != 0)
                goto LABEL_2958;
              v657 = 0;
              while (1)
              {
                v658 = *v2;
                v659 = *(_QWORD *)&a1[v658];
                v660 = v659 + 1;
                if (v659 == -1 || v660 > *(_QWORD *)&a1[*v3])
                  goto LABEL_1499;
                v661 = *(char *)(*(_QWORD *)&a1[*v5] + v659);
                *(_QWORD *)&a1[v658] = v660;
                if (v661 < 0)
                {
                  v32 = v657++ > 8;
                  if (!v32)
                    continue;
                }
                goto LABEL_1453;
              }
            case 4u:
              if (v650 == 2)
              {
                if (PBReaderPlaceMark())
                {
                  while (1)
                  {
LABEL_1501:
                    if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3] || (v667 = a1[*v4], a1[*v4]))
                    {
LABEL_1483:
                      PBReaderRecallMark();
                      goto LABEL_1453;
                    }
                    while (1)
                    {
                      v668 = *v2;
                      v669 = *(_QWORD *)&a1[v668];
                      v670 = v669 + 1;
                      if (v669 == -1 || v670 > *(_QWORD *)&a1[*v3])
                        break;
                      v671 = *(char *)(*(_QWORD *)&a1[*v5] + v669);
                      *(_QWORD *)&a1[v668] = v670;
                      if (v671 < 0)
                      {
                        v13 = v667++ >= 9;
                        if (!v13)
                          continue;
                      }
                      goto LABEL_1501;
                    }
                    a1[*v4] = 1;
                  }
                }
              }
              else if ((v644 & 7) == 0)
              {
                do
                {
                  v662 = *v2;
                  v663 = *(_QWORD *)&a1[v662];
                  v664 = v663 + 1;
                  if (v663 == -1 || v664 > *(_QWORD *)&a1[*v3])
                  {
LABEL_1499:
                    a1[*v4] = 1;
                    goto LABEL_1453;
                  }
                  v665 = *(char *)(*(_QWORD *)&a1[*v5] + v663);
                  *(_QWORD *)&a1[v662] = v664;
                  if ((v665 & 0x80000000) == 0)
                    break;
                  v666 = v650++;
                }
                while (v666 <= 8);
                continue;
              }
              break;
            default:
              if ((PBReaderSkipValueWithTag() & 1) == 0)
                goto LABEL_2958;
              continue;
          }
          goto LABEL_2958;
        }
      case 0x17u:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_2959;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
LABEL_1513:
        while (2)
        {
          while (2)
          {
            if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3] || a1[*v4])
              goto LABEL_2951;
            v672 = 0;
            v673 = 0;
            v674 = 0;
            while (1)
            {
              v675 = *v2;
              v676 = *(_QWORD *)&a1[v675];
              v677 = v676 + 1;
              if (v676 == -1 || v677 > *(_QWORD *)&a1[*v3])
                break;
              v678 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v676);
              *(_QWORD *)&a1[v675] = v677;
              v674 |= (unint64_t)(v678 & 0x7F) << v672;
              if ((v678 & 0x80) == 0)
                goto LABEL_1523;
              v672 += 7;
              v13 = v673++ >= 9;
              if (v13)
              {
                v674 = 0;
                v679 = a1[*v4];
                goto LABEL_1525;
              }
            }
            a1[*v4] = 1;
LABEL_1523:
            v679 = a1[*v4];
            if (a1[*v4])
              v674 = 0;
LABEL_1525:
            v680 = v674 & 7;
            if (v679 || v680 == 4)
              goto LABEL_2951;
            v682 = v674 >> 3;
            if ((v674 >> 3) == 4)
            {
              if ((v674 & 7) != 0)
                goto LABEL_2958;
              v688 = 0;
              while (1)
              {
                v689 = *v2;
                v690 = *(_QWORD *)&a1[v689];
                v691 = v690 + 1;
                if (v690 == -1 || v691 > *(_QWORD *)&a1[*v3])
                  break;
                v692 = *(char *)(*(_QWORD *)&a1[*v5] + v690);
                *(_QWORD *)&a1[v689] = v691;
                if (v692 < 0)
                {
                  v32 = v688++ > 8;
                  if (!v32)
                    continue;
                }
                goto LABEL_1513;
              }
LABEL_1548:
              a1[*v4] = 1;
              continue;
            }
            break;
          }
          if ((_DWORD)v682 == 2)
          {
            if (v680 == 2 && PBReaderPlaceMark() && GEOPDMapsIdentifierIsValid(a1))
            {
              PBReaderRecallMark();
              continue;
            }
          }
          else
          {
            if ((_DWORD)v682 != 1)
            {
              if ((PBReaderSkipValueWithTag() & 1) == 0)
                goto LABEL_2958;
              continue;
            }
            if ((v674 & 7) == 0)
            {
              v683 = 0;
              while (1)
              {
                v684 = *v2;
                v685 = *(_QWORD *)&a1[v684];
                v686 = v685 + 1;
                if (v685 == -1 || v686 > *(_QWORD *)&a1[*v3])
                  goto LABEL_1548;
                v687 = *(char *)(*(_QWORD *)&a1[*v5] + v685);
                *(_QWORD *)&a1[v684] = v686;
                if (v687 < 0)
                {
                  v32 = v683++ > 8;
                  if (!v32)
                    continue;
                }
                goto LABEL_1513;
              }
            }
          }
          goto LABEL_2958;
        }
      case 0x19u:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_2959;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
LABEL_1560:
        while (2)
        {
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3] || a1[*v4])
            goto LABEL_2951;
          v693 = 0;
          v694 = 0;
          v695 = 0;
          while (1)
          {
            v696 = *v2;
            v697 = *(_QWORD *)&a1[v696];
            v698 = v697 + 1;
            if (v697 == -1 || v698 > *(_QWORD *)&a1[*v3])
              break;
            v699 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v697);
            *(_QWORD *)&a1[v696] = v698;
            v695 |= (unint64_t)(v699 & 0x7F) << v693;
            if ((v699 & 0x80) == 0)
              goto LABEL_1570;
            v693 += 7;
            v13 = v694++ >= 9;
            if (v13)
            {
              v695 = 0;
              v700 = a1[*v4];
              goto LABEL_1572;
            }
          }
          a1[*v4] = 1;
LABEL_1570:
          v700 = a1[*v4];
          if (a1[*v4])
            v695 = 0;
LABEL_1572:
          v701 = v695 & 7;
          if (v700 || v701 == 4)
            goto LABEL_2951;
          if ((v695 >> 3) == 2)
          {
            if (v701 == 2)
            {
              if (!PBReaderPlaceMark())
                goto LABEL_2958;
LABEL_1592:
              while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
              {
                v708 = a1[*v4];
                if (a1[*v4])
                  break;
                while (1)
                {
                  v709 = *v2;
                  v710 = *(_QWORD *)&a1[v709];
                  v711 = v710 + 1;
                  if (v710 == -1 || v711 > *(_QWORD *)&a1[*v3])
                    break;
                  v712 = *(char *)(*(_QWORD *)&a1[*v5] + v710);
                  *(_QWORD *)&a1[v709] = v711;
                  if (v712 < 0)
                  {
                    v13 = v708++ >= 9;
                    if (!v13)
                      continue;
                  }
                  goto LABEL_1592;
                }
                a1[*v4] = 1;
              }
LABEL_1581:
              PBReaderRecallMark();
              continue;
            }
            if ((v695 & 7) == 0)
            {
              do
              {
                v703 = *v2;
                v704 = *(_QWORD *)&a1[v703];
                v705 = v704 + 1;
                if (v704 == -1 || v705 > *(_QWORD *)&a1[*v3])
                {
                  a1[*v4] = 1;
                  goto LABEL_1560;
                }
                v706 = *(char *)(*(_QWORD *)&a1[*v5] + v704);
                *(_QWORD *)&a1[v703] = v705;
                if ((v706 & 0x80000000) == 0)
                  break;
                v707 = v701++;
              }
              while (v707 <= 8);
              continue;
            }
          }
          else
          {
            if ((v695 >> 3) != 1)
            {
              if ((PBReaderSkipValueWithTag() & 1) == 0)
                goto LABEL_2958;
              continue;
            }
            if (v701 == 2 && PBReaderPlaceMark() && GEOLocationIsValid(a1))
              goto LABEL_1581;
          }
          goto LABEL_2958;
        }
      case 0x1Eu:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_2959;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
        while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3] && !a1[*v4])
        {
          v713 = 0;
          v714 = 0;
          v715 = 0;
          while (1)
          {
            v716 = *v2;
            v717 = *(_QWORD *)&a1[v716];
            v718 = v717 + 1;
            if (v717 == -1 || v718 > *(_QWORD *)&a1[*v3])
              break;
            v719 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v717);
            *(_QWORD *)&a1[v716] = v718;
            v715 |= (unint64_t)(v719 & 0x7F) << v713;
            if ((v719 & 0x80) == 0)
              goto LABEL_1615;
            v713 += 7;
            v13 = v714++ >= 9;
            if (v13)
            {
              v715 = 0;
              v720 = a1[*v4];
              goto LABEL_1617;
            }
          }
          a1[*v4] = 1;
LABEL_1615:
          v720 = a1[*v4];
          if (a1[*v4])
            v715 = 0;
LABEL_1617:
          v721 = v715 & 7;
          if (v720 || v721 == 4)
            break;
          if ((v715 >> 3) != 1)
          {
            if (!PBReaderSkipValueWithTag())
              goto LABEL_2958;
            continue;
          }
          if (v721 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_2958;
        }
        goto LABEL_2298;
      case 0x20u:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_2959;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
LABEL_1630:
        while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3] && !a1[*v4])
        {
          v723 = 0;
          v724 = 0;
          v725 = 0;
          while (2)
          {
            v726 = *v2;
            v727 = *(_QWORD *)&a1[v726];
            v728 = v727 + 1;
            if (v727 == -1 || v728 > *(_QWORD *)&a1[*v3])
            {
              a1[*v4] = 1;
            }
            else
            {
              v729 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v727);
              *(_QWORD *)&a1[v726] = v728;
              v725 |= (unint64_t)(v729 & 0x7F) << v723;
              if (v729 < 0)
              {
                v723 += 7;
                v13 = v724++ >= 9;
                if (v13)
                {
                  v725 = 0;
                  v730 = a1[*v4];
                  goto LABEL_1642;
                }
                continue;
              }
            }
            break;
          }
          v730 = a1[*v4];
          if (a1[*v4])
            v725 = 0;
LABEL_1642:
          v731 = v725 & 7;
          if (v730)
            v732 = 1;
          else
            v732 = v731 == 4;
          if (!v732)
          {
            if ((v725 >> 3) == 2)
            {
              if ((v725 & 7) == 0)
              {
                v784 = 0;
                do
                {
                  v785 = *v2;
                  v786 = *(_QWORD *)&a1[v785];
                  v787 = v786 + 1;
                  if (v786 == -1 || v787 > *(_QWORD *)&a1[*v3])
                  {
                    a1[*v4] = 1;
                    goto LABEL_1630;
                  }
                  v788 = *(char *)(*(_QWORD *)&a1[*v5] + v786);
                  *(_QWORD *)&a1[v785] = v787;
                  if ((v788 & 0x80000000) == 0)
                    break;
                  v32 = v784++ > 8;
                }
                while (!v32);
                continue;
              }
            }
            else
            {
              if ((v725 >> 3) != 1)
              {
                if ((PBReaderSkipValueWithTag() & 1) == 0)
                  goto LABEL_2958;
                continue;
              }
              if (v731 == 2)
              {
                v1256 = 0;
                v1257 = 0;
                if (PBReaderPlaceMark())
                {
                  objc_msgSend(a1, "position");
                  objc_msgSend(a1, "length");
LABEL_1651:
                  while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3] && !a1[*v4])
                  {
                    v733 = 0;
                    v734 = 0;
                    v735 = 0;
                    while (1)
                    {
                      v736 = *v2;
                      v737 = *(_QWORD *)&a1[v736];
                      v738 = v737 + 1;
                      if (v737 == -1 || v738 > *(_QWORD *)&a1[*v3])
                        break;
                      v739 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v737);
                      *(_QWORD *)&a1[v736] = v738;
                      v735 |= (unint64_t)(v739 & 0x7F) << v733;
                      if ((v739 & 0x80) == 0)
                        goto LABEL_1661;
                      v733 += 7;
                      v13 = v734++ >= 9;
                      if (v13)
                      {
                        v735 = 0;
                        v740 = a1[*v4];
                        goto LABEL_1663;
                      }
                    }
                    a1[*v4] = 1;
LABEL_1661:
                    v740 = a1[*v4];
                    if (a1[*v4])
                      v735 = 0;
LABEL_1663:
                    v741 = v735 & 7;
                    if (v740 || v741 == 4)
                      break;
                    switch((v735 >> 3))
                    {
                      case 1u:
                        if (v741 == 2 && PBReaderPlaceMark() && GEOLocationIsValid(a1))
                          goto LABEL_1748;
                        goto LABEL_2966;
                      case 2u:
                        if (v741 != 2 || !PBReaderPlaceMark())
                          goto LABEL_2966;
                        objc_msgSend(a1, "position");
                        objc_msgSend(a1, "length");
LABEL_1677:
                        while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3] && !a1[*v4])
                        {
                          v743 = 0;
                          v744 = 0;
                          v745 = 0;
                          while (2)
                          {
                            v746 = *v2;
                            v747 = *(_QWORD *)&a1[v746];
                            v748 = v747 + 1;
                            if (v747 == -1 || v748 > *(_QWORD *)&a1[*v3])
                            {
                              a1[*v4] = 1;
                            }
                            else
                            {
                              v749 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v747);
                              *(_QWORD *)&a1[v746] = v748;
                              v745 |= (unint64_t)(v749 & 0x7F) << v743;
                              if (v749 < 0)
                              {
                                v743 += 7;
                                v13 = v744++ >= 9;
                                if (v13)
                                {
                                  v745 = 0;
                                  v750 = a1[*v4];
                                  goto LABEL_1689;
                                }
                                continue;
                              }
                            }
                            break;
                          }
                          v750 = a1[*v4];
                          if (a1[*v4])
                            v745 = 0;
LABEL_1689:
                          v751 = v745 & 7;
                          if (v750)
                            v752 = 1;
                          else
                            v752 = v751 == 4;
                          if (!v752)
                          {
                            switch((v745 >> 3))
                            {
                              case 1u:
                                if (v751 == 2)
                                  goto LABEL_1695;
                                goto LABEL_2965;
                              case 2u:
                                if ((v745 & 7) != 0)
                                  goto LABEL_2965;
                                v753 = 0;
                                while (1)
                                {
                                  v754 = *v2;
                                  v755 = *(_QWORD *)&a1[v754];
                                  v756 = v755 + 1;
                                  if (v755 == -1 || v756 > *(_QWORD *)&a1[*v3])
                                    goto LABEL_1729;
                                  v757 = *(char *)(*(_QWORD *)&a1[*v5] + v755);
                                  *(_QWORD *)&a1[v754] = v756;
                                  if (v757 < 0)
                                  {
                                    v32 = v753++ > 8;
                                    if (!v32)
                                      continue;
                                  }
                                  goto LABEL_1677;
                                }
                              case 3u:
                                if ((v745 & 7) != 0)
                                  goto LABEL_2965;
                                v758 = 0;
                                while (1)
                                {
                                  v759 = *v2;
                                  v760 = *(_QWORD *)&a1[v759];
                                  v761 = v760 + 1;
                                  if (v760 == -1 || v761 > *(_QWORD *)&a1[*v3])
                                    goto LABEL_1729;
                                  v762 = *(char *)(*(_QWORD *)&a1[*v5] + v760);
                                  *(_QWORD *)&a1[v759] = v761;
                                  if (v762 < 0)
                                  {
                                    v32 = v758++ > 8;
                                    if (!v32)
                                      continue;
                                  }
                                  goto LABEL_1677;
                                }
                              case 4u:
                                if ((v745 & 7) != 0)
                                  goto LABEL_2965;
                                v763 = 0;
                                while (1)
                                {
                                  v764 = *v2;
                                  v765 = *(_QWORD *)&a1[v764];
                                  v766 = v765 + 1;
                                  if (v765 == -1 || v766 > *(_QWORD *)&a1[*v3])
                                    goto LABEL_1729;
                                  v767 = *(char *)(*(_QWORD *)&a1[*v5] + v765);
                                  *(_QWORD *)&a1[v764] = v766;
                                  if (v767 < 0)
                                  {
                                    v32 = v763++ > 8;
                                    if (!v32)
                                      continue;
                                  }
                                  goto LABEL_1677;
                                }
                              case 5u:
                                if ((v745 & 7) != 0)
                                  goto LABEL_2965;
                                v768 = 0;
                                do
                                {
                                  v769 = *v2;
                                  v770 = *(_QWORD *)&a1[v769];
                                  v771 = v770 + 1;
                                  if (v770 == -1 || v771 > *(_QWORD *)&a1[*v3])
                                  {
LABEL_1729:
                                    a1[*v4] = 1;
                                    goto LABEL_1677;
                                  }
                                  v772 = *(char *)(*(_QWORD *)&a1[*v5] + v770);
                                  *(_QWORD *)&a1[v769] = v771;
                                  if ((v772 & 0x80000000) == 0)
                                    break;
                                  v32 = v768++ > 8;
                                }
                                while (!v32);
                                break;
                              default:
LABEL_1695:
                                if ((PBReaderSkipValueWithTag() & 1) != 0)
                                  continue;
LABEL_2965:
                                PBReaderRecallMark();
                                goto LABEL_2966;
                            }
                            continue;
                          }
                          break;
                        }
                        v783 = a1[*v4];
                        PBReaderRecallMark();
                        if (v783)
                        {
LABEL_2966:
                          PBReaderRecallMark();
                          goto LABEL_2958;
                        }
LABEL_1748:
                        PBReaderRecallMark();
                        break;
                      case 3u:
                        if ((v735 & 7) != 0)
                          goto LABEL_2966;
                        v773 = 0;
                        while (1)
                        {
                          v774 = *v2;
                          v775 = *(_QWORD *)&a1[v774];
                          v776 = v775 + 1;
                          if (v775 == -1 || v776 > *(_QWORD *)&a1[*v3])
                            goto LABEL_1746;
                          v777 = *(char *)(*(_QWORD *)&a1[*v5] + v775);
                          *(_QWORD *)&a1[v774] = v776;
                          if (v777 < 0)
                          {
                            v32 = v773++ > 8;
                            if (!v32)
                              continue;
                          }
                          goto LABEL_1651;
                        }
                      case 4u:
                        if ((v735 & 7) != 0)
                          goto LABEL_2966;
                        v778 = 0;
                        while (1)
                        {
                          v779 = *v2;
                          v780 = *(_QWORD *)&a1[v779];
                          v781 = v780 + 1;
                          if (v780 == -1 || v781 > *(_QWORD *)&a1[*v3])
                            break;
                          v782 = *(char *)(*(_QWORD *)&a1[*v5] + v780);
                          *(_QWORD *)&a1[v779] = v781;
                          if (v782 < 0)
                          {
                            v32 = v778++ > 8;
                            if (!v32)
                              continue;
                          }
                          goto LABEL_1651;
                        }
LABEL_1746:
                        a1[*v4] = 1;
                        continue;
                      default:
                        if ((PBReaderSkipValueWithTag() & 1) == 0)
                          goto LABEL_2966;
                        continue;
                    }
                  }
                  v789 = a1[*v4];
                  PBReaderRecallMark();
                  if (!v789)
                  {
                    PBReaderRecallMark();
                    continue;
                  }
                }
              }
            }
            goto LABEL_2958;
          }
          break;
        }
        v1253 = a1[*v4];
        PBReaderRecallMark();
        if (v1253)
          goto LABEL_2959;
LABEL_2952:
        PBReaderRecallMark();
LABEL_2953:
        if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
          goto LABEL_2957;
        continue;
      case 0x22u:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_2959;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
        while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3] && !a1[*v4])
        {
          v790 = 0;
          v791 = 0;
          v792 = 0;
          while (1)
          {
            v793 = *v2;
            v794 = *(_QWORD *)&a1[v793];
            v795 = v794 + 1;
            if (v794 == -1 || v795 > *(_QWORD *)&a1[*v3])
              break;
            v796 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v794);
            *(_QWORD *)&a1[v793] = v795;
            v792 |= (unint64_t)(v796 & 0x7F) << v790;
            if ((v796 & 0x80) == 0)
              goto LABEL_1775;
            v790 += 7;
            v13 = v791++ >= 9;
            if (v13)
            {
              v792 = 0;
              v797 = a1[*v4];
              goto LABEL_1777;
            }
          }
          a1[*v4] = 1;
LABEL_1775:
          v797 = a1[*v4];
          if (a1[*v4])
            v792 = 0;
LABEL_1777:
          v798 = v792 & 7;
          if (v797 || v798 == 4)
            break;
          if ((v792 >> 3) != 1)
          {
            if (!PBReaderSkipValueWithTag())
              goto LABEL_2958;
            continue;
          }
          if (v798 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_2958;
        }
        goto LABEL_2298;
      case 0x23u:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_2959;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
LABEL_1790:
        while (2)
        {
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3] || a1[*v4])
            goto LABEL_2951;
          v800 = 0;
          v801 = 0;
          v802 = 0;
          while (2)
          {
            v803 = *v2;
            v804 = *(_QWORD *)&a1[v803];
            v805 = v804 + 1;
            if (v804 == -1 || v805 > *(_QWORD *)&a1[*v3])
            {
              a1[*v4] = 1;
            }
            else
            {
              v806 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v804);
              *(_QWORD *)&a1[v803] = v805;
              v802 |= (unint64_t)(v806 & 0x7F) << v800;
              if (v806 < 0)
              {
                v800 += 7;
                v13 = v801++ >= 9;
                if (v13)
                {
                  v802 = 0;
                  v807 = a1[*v4];
                  goto LABEL_1802;
                }
                continue;
              }
            }
            break;
          }
          v807 = a1[*v4];
          if (a1[*v4])
            v802 = 0;
LABEL_1802:
          v808 = v802 & 7;
          if (v807)
            v809 = 1;
          else
            v809 = v808 == 4;
          if (v809)
            goto LABEL_2951;
          if ((v802 >> 3) == 2)
          {
            if (v808 == 2 && PBReaderPlaceMark() && GEOLocationIsValid(a1))
            {
              PBReaderRecallMark();
              continue;
            }
          }
          else
          {
            if ((v802 >> 3) != 1)
            {
              if ((PBReaderSkipValueWithTag() & 1) == 0)
                goto LABEL_2958;
              continue;
            }
            if ((v802 & 7) == 0)
            {
              v810 = 0;
              do
              {
                v811 = *v2;
                v812 = *(_QWORD *)&a1[v811];
                v813 = v812 + 1;
                if (v812 == -1 || v813 > *(_QWORD *)&a1[*v3])
                {
                  a1[*v4] = 1;
                  goto LABEL_1790;
                }
                v814 = *(char *)(*(_QWORD *)&a1[*v5] + v812);
                *(_QWORD *)&a1[v811] = v813;
                if ((v814 & 0x80000000) == 0)
                  break;
                v32 = v810++ > 8;
              }
              while (!v32);
              continue;
            }
          }
          goto LABEL_2958;
        }
      case 0x24u:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_2959;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
        while (2)
        {
          while (2)
          {
            if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3] || a1[*v4])
              goto LABEL_2951;
            v815 = 0;
            v816 = 0;
            v817 = 0;
            while (2)
            {
              v818 = *v2;
              v819 = *(_QWORD *)&a1[v818];
              v820 = v819 + 1;
              if (v819 == -1 || v820 > *(_QWORD *)&a1[*v3])
              {
                a1[*v4] = 1;
              }
              else
              {
                v821 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v819);
                *(_QWORD *)&a1[v818] = v820;
                v817 |= (unint64_t)(v821 & 0x7F) << v815;
                if (v821 < 0)
                {
                  v815 += 7;
                  v13 = v816++ >= 9;
                  if (v13)
                  {
                    v817 = 0;
                    v822 = a1[*v4];
                    goto LABEL_1838;
                  }
                  continue;
                }
              }
              break;
            }
            v822 = a1[*v4];
            if (a1[*v4])
              v817 = 0;
LABEL_1838:
            v823 = v817 & 7;
            if (v822)
              v824 = 1;
            else
              v824 = v823 == 4;
            if (v824)
              goto LABEL_2951;
            if ((v817 >> 3) == 2)
            {
              if (v823 != 2 || !PBReaderPlaceMark() || !GEOPDSpatialEventLookupParametersIsValid(a1))
                goto LABEL_2958;
            }
            else
            {
              if ((v817 >> 3) != 1)
              {
                if ((PBReaderSkipValueWithTag() & 1) == 0)
                  goto LABEL_2958;
                continue;
              }
              if (v823 != 2 || !PBReaderPlaceMark() || !GEOPDSpatialPlaceLookupParametersIsValid(a1))
                goto LABEL_2958;
            }
            break;
          }
          PBReaderRecallMark();
          continue;
        }
      case 0x25u:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_2959;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
LABEL_1857:
        while (2)
        {
          while (2)
          {
            if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3] || a1[*v4])
              goto LABEL_2951;
            v825 = 0;
            v826 = 0;
            v827 = 0;
            while (2)
            {
              v828 = *v2;
              v829 = *(_QWORD *)&a1[v828];
              v830 = v829 + 1;
              if (v829 == -1 || v830 > *(_QWORD *)&a1[*v3])
              {
                a1[*v4] = 1;
              }
              else
              {
                v831 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v829);
                *(_QWORD *)&a1[v828] = v830;
                v827 |= (unint64_t)(v831 & 0x7F) << v825;
                if (v831 < 0)
                {
                  v825 += 7;
                  v13 = v826++ >= 9;
                  if (v13)
                  {
                    v827 = 0;
                    v832 = a1[*v4];
                    goto LABEL_1869;
                  }
                  continue;
                }
              }
              break;
            }
            v832 = a1[*v4];
            if (a1[*v4])
              v827 = 0;
LABEL_1869:
            v833 = v827 & 7;
            if (v832)
              v834 = 1;
            else
              v834 = v833 == 4;
            if (v834)
              goto LABEL_2951;
            if ((v827 >> 3) != 1)
            {
              if ((PBReaderSkipValueWithTag() & 1) == 0)
                goto LABEL_2958;
              continue;
            }
            break;
          }
          if (v833 == 2)
          {
            if (!PBReaderPlaceMark())
              goto LABEL_2958;
            while (1)
            {
LABEL_1884:
              if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3] || (v840 = a1[*v4], a1[*v4]))
              {
                PBReaderRecallMark();
                goto LABEL_1857;
              }
              while (1)
              {
                v841 = *v2;
                v842 = *(_QWORD *)&a1[v841];
                v843 = v842 + 1;
                if (v842 == -1 || v843 > *(_QWORD *)&a1[*v3])
                  break;
                v844 = *(char *)(*(_QWORD *)&a1[*v5] + v842);
                *(_QWORD *)&a1[v841] = v843;
                if (v844 < 0)
                {
                  v13 = v840++ >= 9;
                  if (!v13)
                    continue;
                }
                goto LABEL_1884;
              }
              a1[*v4] = 1;
            }
          }
          if ((v827 & 7) == 0)
          {
            do
            {
              v835 = *v2;
              v836 = *(_QWORD *)&a1[v835];
              v837 = v836 + 1;
              if (v836 == -1 || v837 > *(_QWORD *)&a1[*v3])
              {
                a1[*v4] = 1;
                goto LABEL_1857;
              }
              v838 = *(char *)(*(_QWORD *)&a1[*v5] + v836);
              *(_QWORD *)&a1[v835] = v837;
              if ((v838 & 0x80000000) == 0)
                break;
              v839 = v833++;
            }
            while (v839 <= 8);
            continue;
          }
          goto LABEL_2958;
        }
      case 0x26u:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_2959;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
        while (2)
        {
          while (2)
          {
            if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3] || a1[*v4])
              goto LABEL_2951;
            v845 = 0;
            v846 = 0;
            v847 = 0;
            while (2)
            {
              v848 = *v2;
              v849 = *(_QWORD *)&a1[v848];
              v850 = v849 + 1;
              if (v849 == -1 || v850 > *(_QWORD *)&a1[*v3])
              {
                a1[*v4] = 1;
              }
              else
              {
                v851 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v849);
                *(_QWORD *)&a1[v848] = v850;
                v847 |= (unint64_t)(v851 & 0x7F) << v845;
                if (v851 < 0)
                {
                  v845 += 7;
                  v13 = v846++ >= 9;
                  if (v13)
                  {
                    v847 = 0;
                    v852 = a1[*v4];
                    goto LABEL_1910;
                  }
                  continue;
                }
              }
              break;
            }
            v852 = a1[*v4];
            if (a1[*v4])
              v847 = 0;
LABEL_1910:
            v853 = v847 & 7;
            if (v852)
              v854 = 1;
            else
              v854 = v853 == 4;
            if (v854)
              goto LABEL_2951;
            if ((v847 >> 3) == 2)
            {
              if (v853 != 2 || !PBReaderPlaceMark() || !GEOPDMapsIdentifierIsValid(a1))
                goto LABEL_2958;
            }
            else
            {
              if ((v847 >> 3) != 1)
              {
                if ((PBReaderSkipValueWithTag() & 1) == 0)
                  goto LABEL_2958;
                continue;
              }
              if (v853 != 2 || !PBReaderPlaceMark() || !GEOLatLngIsValid(a1))
                goto LABEL_2958;
            }
            break;
          }
          PBReaderRecallMark();
          continue;
        }
      case 0x27u:
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOPBTransitScheduleLookupParametersIsValid(a1))
          goto LABEL_2959;
        goto LABEL_2952;
      case 0x28u:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_2959;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
        while (2)
        {
          while (2)
          {
            if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3] || a1[*v4])
              goto LABEL_2951;
            v855 = 0;
            v856 = 0;
            v857 = 0;
            while (2)
            {
              v858 = *v2;
              v859 = *(_QWORD *)&a1[v858];
              v860 = v859 + 1;
              if (v859 == -1 || v860 > *(_QWORD *)&a1[*v3])
              {
                a1[*v4] = 1;
              }
              else
              {
                v861 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v859);
                *(_QWORD *)&a1[v858] = v860;
                v857 |= (unint64_t)(v861 & 0x7F) << v855;
                if (v861 < 0)
                {
                  v855 += 7;
                  v13 = v856++ >= 9;
                  if (v13)
                  {
                    v857 = 0;
                    v862 = a1[*v4];
                    goto LABEL_1945;
                  }
                  continue;
                }
              }
              break;
            }
            v862 = a1[*v4];
            if (a1[*v4])
              v857 = 0;
LABEL_1945:
            v863 = v857 & 7;
            if (v862)
              v864 = 1;
            else
              v864 = v863 == 4;
            if (v864)
              goto LABEL_2951;
            if ((v857 >> 3) != 1)
            {
              if ((PBReaderSkipValueWithTag() & 1) == 0)
                goto LABEL_2958;
              continue;
            }
            break;
          }
          if (v863 == 2 && PBReaderPlaceMark() && GEOPDCategoryLookupParametersIsValid(a1))
          {
            PBReaderRecallMark();
            continue;
          }
          goto LABEL_2958;
        }
      case 0x29u:
        if (v15 != 2)
          goto LABEL_2959;
        v1256 = 0;
        v1257 = 0;
        if (!PBReaderPlaceMark())
          goto LABEL_2959;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
        while (2)
        {
          while (2)
          {
            if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3] || a1[*v4])
              goto LABEL_2801;
            v865 = 0;
            v866 = 0;
            v867 = 0;
            while (2)
            {
              v868 = *v2;
              v869 = *(_QWORD *)&a1[v868];
              v870 = v869 + 1;
              if (v869 == -1 || v870 > *(_QWORD *)&a1[*v3])
              {
                a1[*v4] = 1;
              }
              else
              {
                v871 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v869);
                *(_QWORD *)&a1[v868] = v870;
                v867 |= (unint64_t)(v871 & 0x7F) << v865;
                if (v871 < 0)
                {
                  v865 += 7;
                  v13 = v866++ >= 9;
                  if (v13)
                  {
                    v867 = 0;
                    v872 = a1[*v4];
                    goto LABEL_1971;
                  }
                  continue;
                }
              }
              break;
            }
            v872 = a1[*v4];
            if (a1[*v4])
              v867 = 0;
LABEL_1971:
            v873 = v867 & 7;
            if (v872)
              v874 = 1;
            else
              v874 = v873 == 4;
            if (v874)
              goto LABEL_2801;
            if ((v867 >> 3) != 1)
            {
              if ((PBReaderSkipValueWithTag() & 1) == 0)
                goto LABEL_2958;
              continue;
            }
            break;
          }
          if (v873 == 2 && PBReaderPlaceMark())
          {
            objc_msgSend(a1, "position");
            objc_msgSend(a1, "length");
            while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3] && !a1[*v4])
            {
              v875 = 0;
              v876 = 0;
              v877 = 0;
              while (1)
              {
                v878 = *v2;
                v879 = *(_QWORD *)&a1[v878];
                v880 = v879 + 1;
                if (v879 == -1 || v880 > *(_QWORD *)&a1[*v3])
                  break;
                v881 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v879);
                *(_QWORD *)&a1[v878] = v880;
                v877 |= (unint64_t)(v881 & 0x7F) << v875;
                if ((v881 & 0x80) == 0)
                  goto LABEL_1989;
                v875 += 7;
                v13 = v876++ >= 9;
                if (v13)
                {
                  v877 = 0;
                  v882 = a1[*v4];
                  goto LABEL_1991;
                }
              }
              a1[*v4] = 1;
LABEL_1989:
              v882 = a1[*v4];
              if (a1[*v4])
                v877 = 0;
LABEL_1991:
              v883 = v877 & 7;
              if (v882 || v883 == 4)
                break;
              switch((v877 >> 3))
              {
                case 1u:
                  if (v883 == 2)
                    goto LABEL_2011;
                  goto LABEL_2961;
                case 2u:
                  if (v883 == 2)
                    goto LABEL_2011;
                  goto LABEL_2961;
                case 3u:
                  if (v883 != 2 || !PBReaderPlaceMark() || !GEOPDWarsawMerchantIdentifierIsValid(a1))
                    goto LABEL_2961;
                  goto LABEL_2016;
                case 4u:
                  if (v883 != 2 || !PBReaderPlaceMark() || !GEOPDAdamAppIdentifierIsValid(a1))
                    goto LABEL_2961;
                  goto LABEL_2016;
                case 5u:
                  if (v883 == 2)
                    goto LABEL_2011;
                  goto LABEL_2961;
                case 6u:
                  if (v883 == 2)
                    goto LABEL_2011;
                  goto LABEL_2961;
                case 7u:
                  if (v883 != 2 || !PBReaderPlaceMark() || !GEOPDAdamAppIdentifierIsValid(a1))
                    goto LABEL_2961;
LABEL_2016:
                  PBReaderRecallMark();
                  break;
                default:
LABEL_2011:
                  if ((PBReaderSkipValueWithTag() & 1) == 0)
                    goto LABEL_2961;
                  continue;
              }
            }
            v885 = a1[*v4];
            PBReaderRecallMark();
            if (!v885)
            {
              PBReaderRecallMark();
              continue;
            }
          }
          goto LABEL_2958;
        }
      case 0x2Au:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_2959;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
LABEL_2024:
        while (2)
        {
          while (2)
          {
            if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3] || a1[*v4])
              goto LABEL_2298;
            v886 = 0;
            v887 = 0;
            v888 = 0;
            while (1)
            {
              v889 = *v2;
              v890 = *(_QWORD *)&a1[v889];
              v891 = v890 + 1;
              if (v890 == -1 || v891 > *(_QWORD *)&a1[*v3])
                break;
              v892 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v890);
              *(_QWORD *)&a1[v889] = v891;
              v888 |= (unint64_t)(v892 & 0x7F) << v886;
              if ((v892 & 0x80) == 0)
                goto LABEL_2034;
              v886 += 7;
              v13 = v887++ >= 9;
              if (v13)
              {
                v888 = 0;
                v893 = a1[*v4];
                goto LABEL_2036;
              }
            }
            a1[*v4] = 1;
LABEL_2034:
            v893 = a1[*v4];
            if (a1[*v4])
              v888 = 0;
LABEL_2036:
            v894 = v888 & 7;
            if (v893 || v894 == 4)
              goto LABEL_2298;
            if ((v888 >> 3) != 2)
            {
              if ((v888 >> 3) != 1)
              {
                if (!PBReaderSkipValueWithTag())
                  goto LABEL_2958;
                continue;
              }
              if (v894 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
                goto LABEL_2958;
              continue;
            }
            break;
          }
          if ((v888 & 7) == 0)
          {
            v896 = 0;
            do
            {
              v897 = *v2;
              v898 = *(_QWORD *)&a1[v897];
              v899 = v898 + 1;
              if (v898 == -1 || v899 > *(_QWORD *)&a1[*v3])
              {
                a1[*v4] = 1;
                goto LABEL_2024;
              }
              v900 = *(char *)(*(_QWORD *)&a1[*v5] + v898);
              *(_QWORD *)&a1[v897] = v899;
              if ((v900 & 0x80000000) == 0)
                break;
              v32 = v896++ > 8;
            }
            while (!v32);
            continue;
          }
          goto LABEL_2958;
        }
      case 0x2Bu:
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDCollectionSuggestionParametersIsValid(a1))
          goto LABEL_2959;
        goto LABEL_2952;
      case 0x2Cu:
        if (v15 != 2)
          goto LABEL_2959;
        v1256 = 0;
        v1257 = 0;
        if (!PBReaderPlaceMark())
          goto LABEL_2959;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
LABEL_2063:
        while (2)
        {
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3] || a1[*v4])
            goto LABEL_2801;
          v901 = 0;
          v902 = 0;
          v903 = 0;
          while (2)
          {
            v904 = *v2;
            v905 = *(_QWORD *)&a1[v904];
            v906 = v905 + 1;
            if (v905 == -1 || v906 > *(_QWORD *)&a1[*v3])
            {
              a1[*v4] = 1;
            }
            else
            {
              v907 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v905);
              *(_QWORD *)&a1[v904] = v906;
              v903 |= (unint64_t)(v907 & 0x7F) << v901;
              if (v907 < 0)
              {
                v901 += 7;
                v13 = v902++ >= 9;
                if (v13)
                {
                  v903 = 0;
                  v908 = a1[*v4];
                  goto LABEL_2075;
                }
                continue;
              }
            }
            break;
          }
          v908 = a1[*v4];
          if (a1[*v4])
            v903 = 0;
LABEL_2075:
          v909 = v903 & 7;
          if (v908)
            v910 = 1;
          else
            v910 = v909 == 4;
          if (v910)
            goto LABEL_2801;
          switch((v903 >> 3))
          {
            case 1u:
              if (v909 == 2)
              {
                if (!PBReaderPlaceMark())
                  goto LABEL_2958;
LABEL_2167:
                while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
                {
                  v938 = a1[*v4];
                  if (a1[*v4])
                    break;
                  while (1)
                  {
                    v939 = *v2;
                    v940 = *(_QWORD *)&a1[v939];
                    v941 = v940 + 1;
                    if (v940 == -1 || v941 > *(_QWORD *)&a1[*v3])
                      break;
                    v942 = *(char *)(*(_QWORD *)&a1[*v5] + v940);
                    *(_QWORD *)&a1[v939] = v941;
                    if (v942 < 0)
                    {
                      v13 = v938++ >= 9;
                      if (!v13)
                        continue;
                    }
                    goto LABEL_2167;
                  }
                  a1[*v4] = 1;
                }
LABEL_2165:
                PBReaderRecallMark();
                continue;
              }
              if ((v903 & 7) == 0)
              {
                do
                {
                  v911 = *v2;
                  v912 = *(_QWORD *)&a1[v911];
                  v913 = v912 + 1;
                  if (v912 == -1 || v913 > *(_QWORD *)&a1[*v3])
                  {
                    a1[*v4] = 1;
                    goto LABEL_2063;
                  }
                  v914 = *(char *)(*(_QWORD *)&a1[*v5] + v912);
                  *(_QWORD *)&a1[v911] = v913;
                  if ((v914 & 0x80000000) == 0)
                    break;
                  v915 = v909++;
                }
                while (v915 <= 8);
                continue;
              }
              break;
            case 2u:
              if (v909 != 2
                || !PBReaderPlaceMark()
                || !GEOPDSearchBrowseCategorySuggestionParametersIsValid(a1))
              {
                goto LABEL_2958;
              }
              goto LABEL_2165;
            case 3u:
              if (v909 != 2 || !PBReaderPlaceMark() || !GEOPDCollectionSuggestionParametersIsValid(a1))
                goto LABEL_2958;
              goto LABEL_2165;
            case 4u:
              if (v909 != 2 || !PBReaderPlaceMark() || !GEOPDPublisherSuggestionParametersIsValid(a1))
                goto LABEL_2958;
              goto LABEL_2165;
            case 5u:
              if (v909 != 2 || !PBReaderPlaceMark())
                goto LABEL_2958;
              objc_msgSend(a1, "position");
              objc_msgSend(a1, "length");
              while (1)
              {
                if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3] || a1[*v4])
                  goto LABEL_2160;
                v916 = 0;
                v917 = 0;
                v918 = 0;
                while (1)
                {
                  v919 = *v2;
                  v920 = *(_QWORD *)&a1[v919];
                  v921 = v920 + 1;
                  if (v920 == -1 || v921 > *(_QWORD *)&a1[*v3])
                    break;
                  v922 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v920);
                  *(_QWORD *)&a1[v919] = v921;
                  v918 |= (unint64_t)(v922 & 0x7F) << v916;
                  if ((v922 & 0x80) == 0)
                    goto LABEL_2114;
                  v916 += 7;
                  v13 = v917++ >= 9;
                  if (v13)
                  {
                    v918 = 0;
                    v923 = a1[*v4];
                    goto LABEL_2116;
                  }
                }
                a1[*v4] = 1;
LABEL_2114:
                v923 = a1[*v4];
                if (a1[*v4])
                  v918 = 0;
LABEL_2116:
                v924 = v918 & 7;
                if (v923 || v924 == 4)
                  goto LABEL_2160;
                v926 = v918 >> 3;
                if ((v918 >> 3) == 3)
                  break;
                if ((_DWORD)v926 == 2)
                {
                  if (v924 != 2)
                    goto LABEL_2961;
                }
                else if ((_DWORD)v926 == 1)
                {
                  if (v924 != 2 || !PBReaderPlaceMark() || !GEOPDViewportInfoIsValid(a1))
                    goto LABEL_2961;
LABEL_2130:
                  PBReaderRecallMark();
                  continue;
                }
                if ((PBReaderSkipValueWithTag() & 1) == 0)
                  goto LABEL_2961;
              }
              if (v924 != 2 || !PBReaderPlaceMark() || !GEOPDMapsIdentifierIsValid(a1))
                goto LABEL_2961;
              goto LABEL_2130;
            case 6u:
              if (v909 != 2 || !PBReaderPlaceMark())
                goto LABEL_2958;
              objc_msgSend(a1, "position");
              objc_msgSend(a1, "length");
              while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3] && !a1[*v4])
              {
                v927 = 0;
                v928 = 0;
                v929 = 0;
                while (1)
                {
                  v930 = *v2;
                  v931 = *(_QWORD *)&a1[v930];
                  v932 = v931 + 1;
                  if (v931 == -1 || v932 > *(_QWORD *)&a1[*v3])
                    break;
                  v933 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v931);
                  *(_QWORD *)&a1[v930] = v932;
                  v929 |= (unint64_t)(v933 & 0x7F) << v927;
                  if ((v933 & 0x80) == 0)
                    goto LABEL_2147;
                  v927 += 7;
                  v13 = v928++ >= 9;
                  if (v13)
                  {
                    v929 = 0;
                    v934 = a1[*v4];
                    goto LABEL_2149;
                  }
                }
                a1[*v4] = 1;
LABEL_2147:
                v934 = a1[*v4];
                if (a1[*v4])
                  v929 = 0;
LABEL_2149:
                v935 = v929 & 7;
                if (v934 || v935 == 4)
                  break;
                if ((v929 >> 3) == 1)
                {
                  if (v935 == 2 && PBReaderPlaceMark() && GEOPDViewportInfoIsValid(a1))
                  {
                    PBReaderRecallMark();
                    continue;
                  }
                  goto LABEL_2961;
                }
                if ((PBReaderSkipValueWithTag() & 1) == 0)
                  goto LABEL_2961;
              }
LABEL_2160:
              v937 = a1[*v4];
              PBReaderRecallMark();
              if (v937)
                goto LABEL_2958;
              goto LABEL_2165;
            case 7u:
              if (v909 == 2 && PBReaderPlaceMark() && GEOPDSearchOriginationInfoIsValid(a1))
                goto LABEL_2165;
              goto LABEL_2958;
            default:
              if ((PBReaderSkipValueWithTag() & 1) == 0)
                goto LABEL_2958;
              continue;
          }
          goto LABEL_2958;
        }
      case 0x2Du:
        if (v15 == 2 && PBReaderPlaceMark() && GEOPDPlaceQuestionnaireLookupParametersIsValid(a1))
          goto LABEL_2952;
        goto LABEL_2959;
      case 0x2Eu:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_2959;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
LABEL_2184:
        while (2)
        {
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3] || a1[*v4])
            goto LABEL_2951;
          v943 = 0;
          v944 = 0;
          v945 = 0;
          while (2)
          {
            v946 = *v2;
            v947 = *(_QWORD *)&a1[v946];
            v948 = v947 + 1;
            if (v947 == -1 || v948 > *(_QWORD *)&a1[*v3])
            {
              a1[*v4] = 1;
            }
            else
            {
              v949 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v947);
              *(_QWORD *)&a1[v946] = v948;
              v945 |= (unint64_t)(v949 & 0x7F) << v943;
              if (v949 < 0)
              {
                v943 += 7;
                v13 = v944++ >= 9;
                if (v13)
                {
                  v945 = 0;
                  v950 = a1[*v4];
                  goto LABEL_2196;
                }
                continue;
              }
            }
            break;
          }
          v950 = a1[*v4];
          if (a1[*v4])
            v945 = 0;
LABEL_2196:
          v951 = v945 & 7;
          if (v950)
            v952 = 1;
          else
            v952 = v951 == 4;
          if (!v952)
          {
            switch((v945 >> 3))
            {
              case 1u:
                if (v951 != 2 || !PBReaderPlaceMark() || !GEOPDMapsIdentifierIsValid(a1))
                  goto LABEL_2958;
                goto LABEL_2222;
              case 2u:
                if ((v945 & 7) != 0)
                  goto LABEL_2958;
                v953 = 0;
                break;
              case 3u:
                if (v951 != 2 || !PBReaderPlaceMark() || !GEOPDAllCollectionsViewResultFilterIsValid(a1))
                  goto LABEL_2958;
                goto LABEL_2222;
              case 4u:
                if (v951 != 2 || !PBReaderPlaceMark() || !GEOPDViewportInfoIsValid(a1))
                  goto LABEL_2958;
LABEL_2222:
                PBReaderRecallMark();
                continue;
              default:
                if ((PBReaderSkipValueWithTag() & 1) == 0)
                  goto LABEL_2958;
                continue;
            }
            do
            {
              v954 = *v2;
              v955 = *(_QWORD *)&a1[v954];
              v956 = v955 + 1;
              if (v955 == -1 || v956 > *(_QWORD *)&a1[*v3])
              {
                a1[*v4] = 1;
                goto LABEL_2184;
              }
              v957 = *(char *)(*(_QWORD *)&a1[*v5] + v955);
              *(_QWORD *)&a1[v954] = v956;
              if ((v957 & 0x80000000) == 0)
                break;
              v32 = v953++ > 8;
            }
            while (!v32);
            continue;
          }
          goto LABEL_2951;
        }
      case 0x2Fu:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_2959;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
LABEL_2227:
        while (2)
        {
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3] || a1[*v4])
            goto LABEL_2951;
          v958 = 0;
          v959 = 0;
          v960 = 0;
          while (2)
          {
            v961 = *v2;
            v962 = *(_QWORD *)&a1[v961];
            v963 = v962 + 1;
            if (v962 == -1 || v963 > *(_QWORD *)&a1[*v3])
            {
              a1[*v4] = 1;
            }
            else
            {
              v964 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v962);
              *(_QWORD *)&a1[v961] = v963;
              v960 |= (unint64_t)(v964 & 0x7F) << v958;
              if (v964 < 0)
              {
                v958 += 7;
                v13 = v959++ >= 9;
                if (v13)
                {
                  v960 = 0;
                  v965 = a1[*v4];
                  goto LABEL_2239;
                }
                continue;
              }
            }
            break;
          }
          v965 = a1[*v4];
          if (a1[*v4])
            v960 = 0;
LABEL_2239:
          v966 = v960 & 7;
          if (v965)
            v967 = 1;
          else
            v967 = v966 == 4;
          if (!v967)
          {
            switch((v960 >> 3))
            {
              case 1u:
                if (v966 != 2 || !PBReaderPlaceMark() || !GEOPDPublisherSuggestionParametersIsValid(a1))
                  goto LABEL_2958;
                goto LABEL_2265;
              case 2u:
                if ((v960 & 7) != 0)
                  goto LABEL_2958;
                v968 = 0;
                break;
              case 3u:
                if (v966 != 2 || !PBReaderPlaceMark() || !GEOPDAllCollectionsViewResultFilterIsValid(a1))
                  goto LABEL_2958;
                goto LABEL_2265;
              case 4u:
                if (v966 != 2 || !PBReaderPlaceMark() || !GEOPDViewportInfoIsValid(a1))
                  goto LABEL_2958;
LABEL_2265:
                PBReaderRecallMark();
                continue;
              default:
                if ((PBReaderSkipValueWithTag() & 1) == 0)
                  goto LABEL_2958;
                continue;
            }
            do
            {
              v969 = *v2;
              v970 = *(_QWORD *)&a1[v969];
              v971 = v970 + 1;
              if (v970 == -1 || v971 > *(_QWORD *)&a1[*v3])
              {
                a1[*v4] = 1;
                goto LABEL_2227;
              }
              v972 = *(char *)(*(_QWORD *)&a1[*v5] + v970);
              *(_QWORD *)&a1[v969] = v971;
              if ((v972 & 0x80000000) == 0)
                break;
              v32 = v968++ > 8;
            }
            while (!v32);
            continue;
          }
          goto LABEL_2951;
        }
      case 0x30u:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_2959;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
        while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3] && !a1[*v4])
        {
          v973 = 0;
          v974 = 0;
          v975 = 0;
          while (2)
          {
            v976 = *v2;
            v977 = *(_QWORD *)&a1[v976];
            v978 = v977 + 1;
            if (v977 == -1 || v978 > *(_QWORD *)&a1[*v3])
            {
              a1[*v4] = 1;
            }
            else
            {
              v979 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v977);
              *(_QWORD *)&a1[v976] = v978;
              v975 |= (unint64_t)(v979 & 0x7F) << v973;
              if (v979 < 0)
              {
                v973 += 7;
                v13 = v974++ >= 9;
                if (v13)
                {
                  v975 = 0;
                  v980 = a1[*v4];
                  goto LABEL_2282;
                }
                continue;
              }
            }
            break;
          }
          v980 = a1[*v4];
          if (a1[*v4])
            v975 = 0;
LABEL_2282:
          v981 = v975 & 7;
          if (v980)
            v982 = 1;
          else
            v982 = v981 == 4;
          if (!v982)
          {
            v983 = v975 >> 3;
            if ((v975 >> 3) == 6)
            {
              if (v981 != 2)
                goto LABEL_2958;
            }
            else if ((_DWORD)v983 == 5)
            {
              if (v981 != 2)
                goto LABEL_2958;
            }
            else
            {
              if ((_DWORD)v983 != 4)
              {
                if (!PBReaderSkipValueWithTag())
                  goto LABEL_2958;
                continue;
              }
              if (v981 != 2)
                goto LABEL_2958;
            }
            if ((PBReaderSkipValueWithTag() & 1) == 0)
              goto LABEL_2958;
            continue;
          }
          break;
        }
LABEL_2298:
        v984 = a1[*v4];
        PBReaderRecallMark();
        if (!v984)
          goto LABEL_2952;
        goto LABEL_2959;
      case 0x31u:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_2959;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
        while (2)
        {
          while (2)
          {
            if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3] || a1[*v4])
              goto LABEL_2951;
            v985 = 0;
            v986 = 0;
            v987 = 0;
            while (2)
            {
              v988 = *v2;
              v989 = *(_QWORD *)&a1[v988];
              v990 = v989 + 1;
              if (v989 == -1 || v990 > *(_QWORD *)&a1[*v3])
              {
                a1[*v4] = 1;
              }
              else
              {
                v991 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v989);
                *(_QWORD *)&a1[v988] = v990;
                v987 |= (unint64_t)(v991 & 0x7F) << v985;
                if (v991 < 0)
                {
                  v985 += 7;
                  v13 = v986++ >= 9;
                  if (v13)
                  {
                    v987 = 0;
                    v992 = a1[*v4];
                    goto LABEL_2315;
                  }
                  continue;
                }
              }
              break;
            }
            v992 = a1[*v4];
            if (a1[*v4])
              v987 = 0;
LABEL_2315:
            v993 = v987 & 7;
            if (v992)
              v994 = 1;
            else
              v994 = v993 == 4;
            if (v994)
              goto LABEL_2951;
            if ((v987 >> 3) != 1)
            {
              if ((PBReaderSkipValueWithTag() & 1) == 0)
                goto LABEL_2958;
              continue;
            }
            break;
          }
          if (v993 == 2 && PBReaderPlaceMark() && GEOLatLngE7IsValid(a1))
          {
            PBReaderRecallMark();
            continue;
          }
          goto LABEL_2958;
        }
      case 0x32u:
        if (v15 != 2)
          goto LABEL_2959;
        v1256 = 0;
        v1257 = 0;
        if (!PBReaderPlaceMark())
          goto LABEL_2959;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
        while (2)
        {
          while (2)
          {
            if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3] || a1[*v4])
              goto LABEL_2801;
            v995 = 0;
            v996 = 0;
            v997 = 0;
            while (2)
            {
              v998 = *v2;
              v999 = *(_QWORD *)&a1[v998];
              v1000 = v999 + 1;
              if (v999 == -1 || v1000 > *(_QWORD *)&a1[*v3])
              {
                a1[*v4] = 1;
              }
              else
              {
                v1001 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v999);
                *(_QWORD *)&a1[v998] = v1000;
                v997 |= (unint64_t)(v1001 & 0x7F) << v995;
                if (v1001 < 0)
                {
                  v995 += 7;
                  v13 = v996++ >= 9;
                  if (v13)
                  {
                    v997 = 0;
                    v1002 = a1[*v4];
                    goto LABEL_2341;
                  }
                  continue;
                }
              }
              break;
            }
            v1002 = a1[*v4];
            if (a1[*v4])
              v997 = 0;
LABEL_2341:
            v1003 = v997 & 7;
            if (v1002)
              v1004 = 1;
            else
              v1004 = v1003 == 4;
            if (v1004)
              goto LABEL_2801;
            if ((v997 >> 3) == 2)
            {
              if (v1003 != 2 || !PBReaderPlaceMark() || !GEOWaypointTypedIsValid(a1))
                goto LABEL_2958;
LABEL_2380:
              PBReaderRecallMark();
              continue;
            }
            break;
          }
          if ((v997 >> 3) != 1)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0)
              goto LABEL_2958;
            continue;
          }
          break;
        }
        if (v1003 == 2 && PBReaderPlaceMark())
        {
          objc_msgSend(a1, "position");
          objc_msgSend(a1, "length");
          while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3] && !a1[*v4])
          {
            v1005 = 0;
            v1006 = 0;
            v1007 = 0;
            while (1)
            {
              v1008 = *v2;
              v1009 = *(_QWORD *)&a1[v1008];
              v1010 = v1009 + 1;
              if (v1009 == -1 || v1010 > *(_QWORD *)&a1[*v3])
                break;
              v1011 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v1009);
              *(_QWORD *)&a1[v1008] = v1010;
              v1007 |= (unint64_t)(v1011 & 0x7F) << v1005;
              if ((v1011 & 0x80) == 0)
                goto LABEL_2360;
              v1005 += 7;
              v13 = v1006++ >= 9;
              if (v13)
              {
                v1007 = 0;
                v1012 = a1[*v4];
                goto LABEL_2362;
              }
            }
            a1[*v4] = 1;
LABEL_2360:
            v1012 = a1[*v4];
            if (a1[*v4])
              v1007 = 0;
LABEL_2362:
            v1013 = v1007 & 7;
            if (v1012 || v1013 == 4)
              break;
            if ((v1007 >> 3) == 1)
            {
              if (v1013 != 2 || !PBReaderPlaceMark() || !GEOWaypointTypedIsValid(a1))
                goto LABEL_2961;
              PBReaderRecallMark();
            }
            else if ((PBReaderSkipValueWithTag() & 1) == 0)
            {
              goto LABEL_2961;
            }
          }
          v1015 = a1[*v4];
          PBReaderRecallMark();
          if (v1015)
            goto LABEL_2958;
          goto LABEL_2380;
        }
        goto LABEL_2958;
      case 0x33u:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_2959;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
LABEL_2384:
        while (2)
        {
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3] || a1[*v4])
            goto LABEL_2951;
          v1016 = 0;
          v1017 = 0;
          v1018 = 0;
          while (2)
          {
            v1019 = *v2;
            v1020 = *(_QWORD *)&a1[v1019];
            v1021 = v1020 + 1;
            if (v1020 == -1 || v1021 > *(_QWORD *)&a1[*v3])
            {
              a1[*v4] = 1;
            }
            else
            {
              v1022 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v1020);
              *(_QWORD *)&a1[v1019] = v1021;
              v1018 |= (unint64_t)(v1022 & 0x7F) << v1016;
              if (v1022 < 0)
              {
                v1016 += 7;
                v13 = v1017++ >= 9;
                if (v13)
                {
                  v1018 = 0;
                  v1023 = a1[*v4];
                  goto LABEL_2396;
                }
                continue;
              }
            }
            break;
          }
          v1023 = a1[*v4];
          if (a1[*v4])
            v1018 = 0;
LABEL_2396:
          v1024 = v1018 & 7;
          if (v1023)
            v1025 = 1;
          else
            v1025 = v1024 == 4;
          if (v1025)
            goto LABEL_2951;
          if ((v1018 >> 3) == 3)
          {
            if ((v1018 & 7) == 0)
            {
              v1026 = 0;
              do
              {
                v1027 = *v2;
                v1028 = *(_QWORD *)&a1[v1027];
                v1029 = v1028 + 1;
                if (v1028 == -1 || v1029 > *(_QWORD *)&a1[*v3])
                {
                  a1[*v4] = 1;
                  goto LABEL_2384;
                }
                v1030 = *(char *)(*(_QWORD *)&a1[*v5] + v1028);
                *(_QWORD *)&a1[v1027] = v1029;
                if ((v1030 & 0x80000000) == 0)
                  break;
                v32 = v1026++ > 8;
              }
              while (!v32);
              continue;
            }
          }
          else
          {
            if ((v1018 >> 3) != 2)
            {
              if ((PBReaderSkipValueWithTag() & 1) == 0)
                goto LABEL_2958;
              continue;
            }
            if (v1024 == 2 && PBReaderPlaceMark() && GEOPDCollectionSuggestionParametersIsValid(a1))
            {
              PBReaderRecallMark();
              continue;
            }
          }
          goto LABEL_2958;
        }
      case 0x34u:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_2959;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
LABEL_2420:
        while (2)
        {
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3] || a1[*v4])
            goto LABEL_2951;
          v1031 = 0;
          v1032 = 0;
          v1033 = 0;
          while (2)
          {
            v1034 = *v2;
            v1035 = *(_QWORD *)&a1[v1034];
            v1036 = v1035 + 1;
            if (v1035 == -1 || v1036 > *(_QWORD *)&a1[*v3])
            {
              a1[*v4] = 1;
            }
            else
            {
              v1037 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v1035);
              *(_QWORD *)&a1[v1034] = v1036;
              v1033 |= (unint64_t)(v1037 & 0x7F) << v1031;
              if (v1037 < 0)
              {
                v1031 += 7;
                v13 = v1032++ >= 9;
                if (v13)
                {
                  v1033 = 0;
                  v1038 = a1[*v4];
                  goto LABEL_2432;
                }
                continue;
              }
            }
            break;
          }
          v1038 = a1[*v4];
          if (a1[*v4])
            v1033 = 0;
LABEL_2432:
          v1039 = v1033 & 7;
          if (v1038)
            v1040 = 1;
          else
            v1040 = v1039 == 4;
          if (v1040)
            goto LABEL_2951;
          if ((v1033 >> 3) == 2)
          {
            if ((v1033 & 7) == 0)
            {
              v1041 = 0;
              do
              {
                v1042 = *v2;
                v1043 = *(_QWORD *)&a1[v1042];
                v1044 = v1043 + 1;
                if (v1043 == -1 || v1044 > *(_QWORD *)&a1[*v3])
                {
                  a1[*v4] = 1;
                  goto LABEL_2420;
                }
                v1045 = *(char *)(*(_QWORD *)&a1[*v5] + v1043);
                *(_QWORD *)&a1[v1042] = v1044;
                if ((v1045 & 0x80000000) == 0)
                  break;
                v32 = v1041++ > 8;
              }
              while (!v32);
              continue;
            }
          }
          else
          {
            if ((v1033 >> 3) != 1)
            {
              if ((PBReaderSkipValueWithTag() & 1) == 0)
                goto LABEL_2958;
              continue;
            }
            if (v1039 == 2 && PBReaderPlaceMark() && GEOPDViewportInfoIsValid(a1))
            {
              PBReaderRecallMark();
              continue;
            }
          }
          goto LABEL_2958;
        }
      case 0x35u:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_2959;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
LABEL_2456:
        while (2)
        {
          while (2)
          {
            if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3] || a1[*v4])
              goto LABEL_2951;
            v1046 = 0;
            v1047 = 0;
            v1048 = 0;
            while (2)
            {
              v1049 = *v2;
              v1050 = *(_QWORD *)&a1[v1049];
              v1051 = v1050 + 1;
              if (v1050 == -1 || v1051 > *(_QWORD *)&a1[*v3])
              {
                a1[*v4] = 1;
              }
              else
              {
                v1052 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v1050);
                *(_QWORD *)&a1[v1049] = v1051;
                v1048 |= (unint64_t)(v1052 & 0x7F) << v1046;
                if (v1052 < 0)
                {
                  v1046 += 7;
                  v13 = v1047++ >= 9;
                  if (v13)
                  {
                    v1048 = 0;
                    v1053 = a1[*v4];
                    goto LABEL_2468;
                  }
                  continue;
                }
              }
              break;
            }
            v1053 = a1[*v4];
            if (a1[*v4])
              v1048 = 0;
LABEL_2468:
            v1054 = v1048 & 7;
            if (v1053)
              v1055 = 1;
            else
              v1055 = v1054 == 4;
            if (v1055)
              goto LABEL_2951;
            switch((v1048 >> 3))
            {
              case 1u:
                if (v1054 != 2)
                {
                  if ((v1048 & 7) != 0)
                    goto LABEL_2958;
                  while (1)
                  {
                    v1056 = *v2;
                    v1057 = *(_QWORD *)&a1[v1056];
                    v1058 = v1057 + 1;
                    if (v1057 == -1 || v1058 > *(_QWORD *)&a1[*v3])
                      goto LABEL_2505;
                    v1059 = *(char *)(*(_QWORD *)&a1[*v5] + v1057);
                    *(_QWORD *)&a1[v1056] = v1058;
                    if (v1059 < 0)
                    {
                      v1060 = v1054++;
                      if (v1060 <= 8)
                        continue;
                    }
                    goto LABEL_2456;
                  }
                }
                if (!PBReaderPlaceMark())
                  goto LABEL_2958;
LABEL_2507:
                while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
                {
                  v1066 = a1[*v4];
                  if (a1[*v4])
                    break;
                  while (1)
                  {
                    v1067 = *v2;
                    v1068 = *(_QWORD *)&a1[v1067];
                    v1069 = v1068 + 1;
                    if (v1068 == -1 || v1069 > *(_QWORD *)&a1[*v3])
                      break;
                    v1070 = *(char *)(*(_QWORD *)&a1[*v5] + v1068);
                    *(_QWORD *)&a1[v1067] = v1069;
                    if (v1070 < 0)
                    {
                      v13 = v1066++ >= 9;
                      if (!v13)
                        continue;
                    }
                    goto LABEL_2507;
                  }
                  a1[*v4] = 1;
                }
                break;
              case 2u:
                if (v1054 != 2)
                {
                  if ((v1048 & 7) != 0)
                    goto LABEL_2958;
                  while (1)
                  {
                    v1061 = *v2;
                    v1062 = *(_QWORD *)&a1[v1061];
                    v1063 = v1062 + 1;
                    if (v1062 == -1 || v1063 > *(_QWORD *)&a1[*v3])
                      break;
                    v1064 = *(char *)(*(_QWORD *)&a1[*v5] + v1062);
                    *(_QWORD *)&a1[v1061] = v1063;
                    if (v1064 < 0)
                    {
                      v1065 = v1054++;
                      if (v1065 <= 8)
                        continue;
                    }
                    goto LABEL_2456;
                  }
LABEL_2505:
                  a1[*v4] = 1;
                  continue;
                }
                if (!PBReaderPlaceMark())
                  goto LABEL_2958;
LABEL_2517:
                while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
                {
                  v1071 = a1[*v4];
                  if (a1[*v4])
                    break;
                  while (1)
                  {
                    v1072 = *v2;
                    v1073 = *(_QWORD *)&a1[v1072];
                    v1074 = v1073 + 1;
                    if (v1073 == -1 || v1074 > *(_QWORD *)&a1[*v3])
                      break;
                    v1075 = *(char *)(*(_QWORD *)&a1[*v5] + v1073);
                    *(_QWORD *)&a1[v1072] = v1074;
                    if (v1075 < 0)
                    {
                      v13 = v1071++ >= 9;
                      if (!v13)
                        continue;
                    }
                    goto LABEL_2517;
                  }
                  a1[*v4] = 1;
                }
                break;
              case 3u:
                if (v1054 != 2 || !PBReaderPlaceMark() || !GEOPDViewportInfoIsValid(a1))
                  goto LABEL_2958;
                goto LABEL_2504;
              case 4u:
                if (v1054 != 2 || !PBReaderPlaceMark() || !GEOPDGuidesLocationEntryIsValid(a1))
                  goto LABEL_2958;
                goto LABEL_2504;
              case 5u:
                if (v1054 != 2 || !PBReaderPlaceMark() || !GEOPDGuidesHomeResultFilterIsValid(a1))
                  goto LABEL_2958;
                goto LABEL_2504;
              case 6u:
                if (v1054 == 2 && PBReaderPlaceMark() && GEOPDResultRefinementGuidesHomeIsValid(a1))
                  goto LABEL_2504;
                goto LABEL_2958;
              default:
                if ((PBReaderSkipValueWithTag() & 1) == 0)
                  goto LABEL_2958;
                continue;
            }
            break;
          }
LABEL_2504:
          PBReaderRecallMark();
          continue;
        }
      case 0x36u:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_2959;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
LABEL_2529:
        while (2)
        {
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3] || a1[*v4])
            goto LABEL_2951;
          v1076 = 0;
          v1077 = 0;
          v1078 = 0;
          while (2)
          {
            v1079 = *v2;
            v1080 = *(_QWORD *)&a1[v1079];
            v1081 = v1080 + 1;
            if (v1080 == -1 || v1081 > *(_QWORD *)&a1[*v3])
            {
              a1[*v4] = 1;
            }
            else
            {
              v1082 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v1080);
              *(_QWORD *)&a1[v1079] = v1081;
              v1078 |= (unint64_t)(v1082 & 0x7F) << v1076;
              if (v1082 < 0)
              {
                v1076 += 7;
                v13 = v1077++ >= 9;
                if (v13)
                {
                  v1078 = 0;
                  v1083 = a1[*v4];
                  goto LABEL_2541;
                }
                continue;
              }
            }
            break;
          }
          v1083 = a1[*v4];
          if (a1[*v4])
            v1078 = 0;
LABEL_2541:
          v1084 = v1078 & 7;
          if (v1083)
            v1085 = 1;
          else
            v1085 = v1084 == 4;
          if (!v1085)
          {
            switch((v1078 >> 3))
            {
              case 1u:
                if (v1084 != 2 || !PBReaderPlaceMark() || !GEOAddressIsValid(a1))
                  goto LABEL_2958;
                goto LABEL_2600;
              case 2u:
                if ((v1078 & 7) != 0)
                  goto LABEL_2958;
                v1086 = 0;
                while (1)
                {
                  v1087 = *v2;
                  v1088 = *(_QWORD *)&a1[v1087];
                  v1089 = v1088 + 1;
                  if (v1088 == -1 || v1089 > *(_QWORD *)&a1[*v3])
                    goto LABEL_2596;
                  v1090 = *(char *)(*(_QWORD *)&a1[*v5] + v1088);
                  *(_QWORD *)&a1[v1087] = v1089;
                  if (v1090 < 0)
                  {
                    v32 = v1086++ > 8;
                    if (!v32)
                      continue;
                  }
                  goto LABEL_2529;
                }
              case 3u:
                if (v1084 != 2 || !PBReaderPlaceMark() || !GEOLatLngIsValid(a1))
                  goto LABEL_2958;
                goto LABEL_2600;
              case 4u:
                if (v1084 == 2)
                {
                  if (!PBReaderPlaceMark())
                    goto LABEL_2958;
                  while (1)
                  {
LABEL_2602:
                    if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3] || (v1111 = a1[*v4], a1[*v4]))
                    {
LABEL_2600:
                      PBReaderRecallMark();
                      goto LABEL_2529;
                    }
                    while (1)
                    {
                      v1112 = *v2;
                      v1113 = *(_QWORD *)&a1[v1112];
                      v1114 = v1113 + 1;
                      if (v1113 == -1 || v1114 > *(_QWORD *)&a1[*v3])
                        break;
                      v1115 = *(char *)(*(_QWORD *)&a1[*v5] + v1113);
                      *(_QWORD *)&a1[v1112] = v1114;
                      if (v1115 < 0)
                      {
                        v13 = v1111++ >= 9;
                        if (!v13)
                          continue;
                      }
                      goto LABEL_2602;
                    }
                    a1[*v4] = 1;
                  }
                }
                if ((v1078 & 7) != 0)
                  goto LABEL_2958;
                while (1)
                {
                  v1091 = *v2;
                  v1092 = *(_QWORD *)&a1[v1091];
                  v1093 = v1092 + 1;
                  if (v1092 == -1 || v1093 > *(_QWORD *)&a1[*v3])
                    goto LABEL_2596;
                  v1094 = *(char *)(*(_QWORD *)&a1[*v5] + v1092);
                  *(_QWORD *)&a1[v1091] = v1093;
                  if (v1094 < 0)
                  {
                    v1095 = v1084++;
                    if (v1095 <= 8)
                      continue;
                  }
                  goto LABEL_2529;
                }
              case 5u:
                if ((v1078 & 7) != 0)
                  goto LABEL_2958;
                v1096 = 0;
                while (1)
                {
                  v1097 = *v2;
                  v1098 = *(_QWORD *)&a1[v1097];
                  v1099 = v1098 + 1;
                  if (v1098 == -1 || v1099 > *(_QWORD *)&a1[*v3])
                    goto LABEL_2596;
                  v1100 = *(char *)(*(_QWORD *)&a1[*v5] + v1098);
                  *(_QWORD *)&a1[v1097] = v1099;
                  if (v1100 < 0)
                  {
                    v32 = v1096++ > 8;
                    if (!v32)
                      continue;
                  }
                  goto LABEL_2529;
                }
              case 6u:
                if ((v1078 & 7) != 0)
                  goto LABEL_2958;
                v1101 = 0;
                while (1)
                {
                  v1102 = *v2;
                  v1103 = *(_QWORD *)&a1[v1102];
                  v1104 = v1103 + 1;
                  if (v1103 == -1 || v1104 > *(_QWORD *)&a1[*v3])
                    goto LABEL_2596;
                  v1105 = *(char *)(*(_QWORD *)&a1[*v5] + v1103);
                  *(_QWORD *)&a1[v1102] = v1104;
                  if (v1105 < 0)
                  {
                    v32 = v1101++ > 8;
                    if (!v32)
                      continue;
                  }
                  goto LABEL_2529;
                }
              case 7u:
                if (v1084 == 2)
                  goto LABEL_2586;
                goto LABEL_2958;
              case 8u:
                if ((v1078 & 7) != 0)
                  goto LABEL_2958;
                v1106 = 0;
                do
                {
                  v1107 = *v2;
                  v1108 = *(_QWORD *)&a1[v1107];
                  v1109 = v1108 + 1;
                  if (v1108 == -1 || v1109 > *(_QWORD *)&a1[*v3])
                  {
LABEL_2596:
                    a1[*v4] = 1;
                    goto LABEL_2529;
                  }
                  v1110 = *(char *)(*(_QWORD *)&a1[*v5] + v1108);
                  *(_QWORD *)&a1[v1107] = v1109;
                  if ((v1110 & 0x80000000) == 0)
                    break;
                  v32 = v1106++ > 8;
                }
                while (!v32);
                break;
              case 9u:
                if (v1084 == 2 && PBReaderPlaceMark() && GEOInterpolationParametersIsValid(a1))
                  goto LABEL_2600;
                goto LABEL_2958;
              default:
LABEL_2586:
                if ((PBReaderSkipValueWithTag() & 1) == 0)
                  goto LABEL_2958;
                continue;
            }
            continue;
          }
          goto LABEL_2951;
        }
      case 0x37u:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_2959;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
LABEL_2614:
        while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3] && !a1[*v4])
        {
          v1116 = 0;
          v1117 = 0;
          v1118 = 0;
          while (2)
          {
            v1119 = *v2;
            v1120 = *(_QWORD *)&a1[v1119];
            v1121 = v1120 + 1;
            if (v1120 == -1 || v1121 > *(_QWORD *)&a1[*v3])
            {
              a1[*v4] = 1;
            }
            else
            {
              v1122 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v1120);
              *(_QWORD *)&a1[v1119] = v1121;
              v1118 |= (unint64_t)(v1122 & 0x7F) << v1116;
              if (v1122 < 0)
              {
                v1116 += 7;
                v13 = v1117++ >= 9;
                if (v13)
                {
                  v1118 = 0;
                  v1123 = a1[*v4];
                  goto LABEL_2626;
                }
                continue;
              }
            }
            break;
          }
          v1123 = a1[*v4];
          if (a1[*v4])
            v1118 = 0;
LABEL_2626:
          v1124 = v1118 & 7;
          if (v1123)
            v1125 = 1;
          else
            v1125 = v1124 == 4;
          if (!v1125)
          {
            switch((v1118 >> 3))
            {
              case 1u:
                if ((v1118 & 7) != 0)
                  goto LABEL_2958;
                v1126 = 0;
                while (1)
                {
                  v1127 = *v2;
                  v1128 = *(_QWORD *)&a1[v1127];
                  v1129 = v1128 + 1;
                  if (v1128 == -1 || v1129 > *(_QWORD *)&a1[*v3])
                    goto LABEL_2654;
                  v1130 = *(char *)(*(_QWORD *)&a1[*v5] + v1128);
                  *(_QWORD *)&a1[v1127] = v1129;
                  if (v1130 < 0)
                  {
                    v32 = v1126++ > 8;
                    if (!v32)
                      continue;
                  }
                  goto LABEL_2614;
                }
              case 2u:
                if (v1124 == 2)
                  goto LABEL_2640;
                goto LABEL_2958;
              case 3u:
                if (v1124 == 2 && PBReaderPlaceMark() && GEOPDViewportInfoIsValid(a1))
                  goto LABEL_2722;
                goto LABEL_2958;
              case 4u:
                if ((v1118 & 7) != 0)
                  goto LABEL_2958;
                v1131 = 0;
                do
                {
                  v1132 = *v2;
                  v1133 = *(_QWORD *)&a1[v1132];
                  v1134 = v1133 + 1;
                  if (v1133 == -1 || v1134 > *(_QWORD *)&a1[*v3])
                  {
LABEL_2654:
                    a1[*v4] = 1;
                    goto LABEL_2614;
                  }
                  v1135 = *(char *)(*(_QWORD *)&a1[*v5] + v1133);
                  *(_QWORD *)&a1[v1132] = v1134;
                  if ((v1135 & 0x80000000) == 0)
                    break;
                  v32 = v1131++ > 8;
                }
                while (!v32);
                continue;
              case 5u:
                if (v1124 != 2 || !PBReaderPlaceMark())
                  goto LABEL_2958;
                objc_msgSend(a1, "position");
                objc_msgSend(a1, "length");
LABEL_2658:
                while (2)
                {
                  while (2)
                  {
                    if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3] || a1[*v4])
                      goto LABEL_2721;
                    v1136 = 0;
                    v1137 = 0;
                    v1138 = 0;
                    while (1)
                    {
                      v1139 = *v2;
                      v1140 = *(_QWORD *)&a1[v1139];
                      v1141 = v1140 + 1;
                      if (v1140 == -1 || v1141 > *(_QWORD *)&a1[*v3])
                        break;
                      v1142 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v1140);
                      *(_QWORD *)&a1[v1139] = v1141;
                      v1138 |= (unint64_t)(v1142 & 0x7F) << v1136;
                      if ((v1142 & 0x80) == 0)
                        goto LABEL_2668;
                      v1136 += 7;
                      v13 = v1137++ >= 9;
                      if (v13)
                      {
                        v1138 = 0;
                        v1143 = a1[*v4];
                        goto LABEL_2670;
                      }
                    }
                    a1[*v4] = 1;
LABEL_2668:
                    v1143 = a1[*v4];
                    if (a1[*v4])
                      v1138 = 0;
LABEL_2670:
                    v1144 = v1138 & 7;
                    if (v1143 || v1144 == 4)
                      goto LABEL_2721;
                    v1146 = v1138 >> 3;
                    if ((v1138 >> 3) == 3)
                    {
                      if (v1144 != 2)
                        goto LABEL_2963;
                    }
                    else
                    {
                      if ((_DWORD)v1146 != 2)
                      {
                        if ((_DWORD)v1146 != 1)
                        {
                          if (!PBReaderSkipValueWithTag())
                            goto LABEL_2963;
                          continue;
                        }
                        if ((v1138 & 7) == 0)
                        {
                          v1147 = 0;
                          do
                          {
                            v1148 = *v2;
                            v1149 = *(_QWORD *)&a1[v1148];
                            v1150 = v1149 + 1;
                            if (v1149 == -1 || v1150 > *(_QWORD *)&a1[*v3])
                            {
                              a1[*v4] = 1;
                              goto LABEL_2658;
                            }
                            v1151 = *(char *)(*(_QWORD *)&a1[*v5] + v1149);
                            *(_QWORD *)&a1[v1148] = v1150;
                            if ((v1151 & 0x80000000) == 0)
                              break;
                            v32 = v1147++ > 8;
                          }
                          while (!v32);
                          continue;
                        }
LABEL_2963:
                        PBReaderRecallMark();
                        goto LABEL_2958;
                      }
                      if (v1144 != 2)
                        goto LABEL_2963;
                    }
                    break;
                  }
                  if ((PBReaderSkipValueWithTag() & 1) == 0)
                    goto LABEL_2963;
                  continue;
                }
              case 6u:
                if (v1124 != 2 || !PBReaderPlaceMark())
                  goto LABEL_2958;
                objc_msgSend(a1, "position");
                objc_msgSend(a1, "length");
                break;
              default:
LABEL_2640:
                if ((PBReaderSkipValueWithTag() & 1) == 0)
                  goto LABEL_2958;
                continue;
            }
            while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3] && !a1[*v4])
            {
              v1152 = 0;
              v1153 = 0;
              v1154 = 0;
              while (1)
              {
                v1155 = *v2;
                v1156 = *(_QWORD *)&a1[v1155];
                v1157 = v1156 + 1;
                if (v1156 == -1 || v1157 > *(_QWORD *)&a1[*v3])
                  break;
                v1158 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v1156);
                *(_QWORD *)&a1[v1155] = v1157;
                v1154 |= (unint64_t)(v1158 & 0x7F) << v1152;
                if ((v1158 & 0x80) == 0)
                  goto LABEL_2706;
                v1152 += 7;
                v13 = v1153++ >= 9;
                if (v13)
                {
                  v1154 = 0;
                  v1159 = a1[*v4];
                  goto LABEL_2708;
                }
              }
              a1[*v4] = 1;
LABEL_2706:
              v1159 = a1[*v4];
              if (a1[*v4])
                v1154 = 0;
LABEL_2708:
              v1160 = v1154 & 7;
              if (v1159 || v1160 == 4)
                break;
              if ((v1154 >> 3) == 2)
              {
                if (v1160 != 2)
                  goto LABEL_2963;
LABEL_2717:
                if ((PBReaderSkipValueWithTag() & 1) == 0)
                  goto LABEL_2963;
                continue;
              }
              if ((v1154 >> 3) == 1)
              {
                if (v1160 != 2)
                  goto LABEL_2963;
                goto LABEL_2717;
              }
              if (!PBReaderSkipValueWithTag())
                goto LABEL_2963;
            }
LABEL_2721:
            v1162 = a1[*v4];
            PBReaderRecallMark();
            if (!v1162)
            {
LABEL_2722:
              PBReaderRecallMark();
              continue;
            }
            goto LABEL_2958;
          }
          break;
        }
LABEL_2723:
        v1163 = a1[*v4];
        PBReaderRecallMark();
        if (v1163)
          goto LABEL_2959;
        goto LABEL_2952;
      case 0x38u:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_2959;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
        while (2)
        {
          while (2)
          {
            if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3] || a1[*v4])
              goto LABEL_2951;
            v1164 = 0;
            v1165 = 0;
            v1166 = 0;
            while (2)
            {
              v1167 = *v2;
              v1168 = *(_QWORD *)&a1[v1167];
              v1169 = v1168 + 1;
              if (v1168 == -1 || v1169 > *(_QWORD *)&a1[*v3])
              {
                a1[*v4] = 1;
              }
              else
              {
                v1170 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v1168);
                *(_QWORD *)&a1[v1167] = v1169;
                v1166 |= (unint64_t)(v1170 & 0x7F) << v1164;
                if (v1170 < 0)
                {
                  v1164 += 7;
                  v13 = v1165++ >= 9;
                  if (v13)
                  {
                    v1166 = 0;
                    v1171 = a1[*v4];
                    goto LABEL_2740;
                  }
                  continue;
                }
              }
              break;
            }
            v1171 = a1[*v4];
            if (a1[*v4])
              v1166 = 0;
LABEL_2740:
            v1172 = v1166 & 7;
            if (v1171)
              v1173 = 1;
            else
              v1173 = v1172 == 4;
            if (v1173)
              goto LABEL_2951;
            if ((v1166 >> 3) != 1)
            {
              if ((PBReaderSkipValueWithTag() & 1) == 0)
                goto LABEL_2958;
              continue;
            }
            break;
          }
          if (v1172 == 2 && PBReaderPlaceMark() && GEOPDComponentIsValid(a1))
          {
            PBReaderRecallMark();
            continue;
          }
          goto LABEL_2958;
        }
      case 0x39u:
        if (v15 != 2)
          goto LABEL_2959;
        v1256 = 0;
        v1257 = 0;
        if (!PBReaderPlaceMark())
          goto LABEL_2959;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
        while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3] && !a1[*v4])
        {
          v1174 = 0;
          v1175 = 0;
          v1176 = 0;
          while (2)
          {
            v1177 = *v2;
            v1178 = *(_QWORD *)&a1[v1177];
            v1179 = v1178 + 1;
            if (v1178 == -1 || v1179 > *(_QWORD *)&a1[*v3])
            {
              a1[*v4] = 1;
            }
            else
            {
              v1180 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v1178);
              *(_QWORD *)&a1[v1177] = v1179;
              v1176 |= (unint64_t)(v1180 & 0x7F) << v1174;
              if (v1180 < 0)
              {
                v1174 += 7;
                v13 = v1175++ >= 9;
                if (v13)
                {
                  v1176 = 0;
                  v1181 = a1[*v4];
                  goto LABEL_2766;
                }
                continue;
              }
            }
            break;
          }
          v1181 = a1[*v4];
          if (a1[*v4])
            v1176 = 0;
LABEL_2766:
          v1182 = v1176 & 7;
          if (v1181)
            v1183 = 1;
          else
            v1183 = v1182 == 4;
          if (!v1183)
          {
            if ((v1176 >> 3) != 1)
            {
              if ((PBReaderSkipValueWithTag() & 1) == 0)
                goto LABEL_2958;
              continue;
            }
            if (v1182 == 2 && PBReaderPlaceMark())
            {
              objc_msgSend(a1, "position");
              objc_msgSend(a1, "length");
              while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3] && !a1[*v4])
              {
                v1184 = 0;
                v1185 = 0;
                v1186 = 0;
                while (1)
                {
                  v1187 = *v2;
                  v1188 = *(_QWORD *)&a1[v1187];
                  v1189 = v1188 + 1;
                  if (v1188 == -1 || v1189 > *(_QWORD *)&a1[*v3])
                    break;
                  v1190 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v1188);
                  *(_QWORD *)&a1[v1187] = v1189;
                  v1186 |= (unint64_t)(v1190 & 0x7F) << v1184;
                  if ((v1190 & 0x80) == 0)
                    goto LABEL_2784;
                  v1184 += 7;
                  v13 = v1185++ >= 9;
                  if (v13)
                  {
                    v1186 = 0;
                    v1191 = a1[*v4];
                    goto LABEL_2786;
                  }
                }
                a1[*v4] = 1;
LABEL_2784:
                v1191 = a1[*v4];
                if (a1[*v4])
                  v1186 = 0;
LABEL_2786:
                v1192 = v1186 & 7;
                if (v1191 || v1192 == 4)
                  break;
                if ((v1186 >> 3) == 1)
                {
                  if (v1192 != 2 || !PBReaderPlaceMark() || !GEOWaypointTypedIsValid(a1))
                    goto LABEL_2961;
                  PBReaderRecallMark();
                }
                else if ((PBReaderSkipValueWithTag() & 1) == 0)
                {
LABEL_2961:
                  PBReaderRecallMark();
                  goto LABEL_2958;
                }
              }
              v1194 = a1[*v4];
              PBReaderRecallMark();
              if (!v1194)
              {
                PBReaderRecallMark();
                continue;
              }
            }
            goto LABEL_2958;
          }
          break;
        }
LABEL_2801:
        v1195 = a1[*v4];
        PBReaderRecallMark();
        if (v1195)
          goto LABEL_2959;
        goto LABEL_2952;
      case 0x3Au:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_2959;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
LABEL_2806:
        while (2)
        {
          while (2)
          {
            while (2)
            {
              if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3] || a1[*v4])
                goto LABEL_2951;
              v1196 = 0;
              v1197 = 0;
              v1198 = 0;
              while (2)
              {
                v1199 = *v2;
                v1200 = *(_QWORD *)&a1[v1199];
                v1201 = v1200 + 1;
                if (v1200 == -1 || v1201 > *(_QWORD *)&a1[*v3])
                {
                  a1[*v4] = 1;
                }
                else
                {
                  v1202 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v1200);
                  *(_QWORD *)&a1[v1199] = v1201;
                  v1198 |= (unint64_t)(v1202 & 0x7F) << v1196;
                  if (v1202 < 0)
                  {
                    v1196 += 7;
                    v13 = v1197++ >= 9;
                    if (v13)
                    {
                      v1198 = 0;
                      v1203 = a1[*v4];
                      goto LABEL_2818;
                    }
                    continue;
                  }
                }
                break;
              }
              v1203 = a1[*v4];
              if (a1[*v4])
                v1198 = 0;
LABEL_2818:
              v1204 = v1198 & 7;
              if (v1203)
                v1205 = 1;
              else
                v1205 = v1204 == 4;
              if (v1205)
                goto LABEL_2951;
              v1206 = v1198 >> 3;
              if ((v1198 >> 3) == 3)
              {
                if ((v1198 & 7) == 0)
                {
                  v1207 = 0;
                  do
                  {
                    v1208 = *v2;
                    v1209 = *(_QWORD *)&a1[v1208];
                    v1210 = v1209 + 1;
                    if (v1209 == -1 || v1210 > *(_QWORD *)&a1[*v3])
                    {
                      a1[*v4] = 1;
                      goto LABEL_2806;
                    }
                    v1211 = *(char *)(*(_QWORD *)&a1[*v5] + v1209);
                    *(_QWORD *)&a1[v1208] = v1210;
                    if ((v1211 & 0x80000000) == 0)
                      break;
                    v32 = v1207++ > 8;
                  }
                  while (!v32);
                  continue;
                }
                goto LABEL_2958;
              }
              break;
            }
            if ((_DWORD)v1206 == 2)
            {
              if (v1204 != 2 || !PBReaderPlaceMark() || !GEOPDEnrichmentInfoIsValid(a1))
                goto LABEL_2958;
LABEL_2840:
              PBReaderRecallMark();
              continue;
            }
            break;
          }
          if ((_DWORD)v1206 != 1)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0)
              goto LABEL_2958;
            continue;
          }
          break;
        }
        if (v1204 == 2 && PBReaderPlaceMark() && GEOPDMapsIdentifierIsValid(a1))
          goto LABEL_2840;
LABEL_2958:
        PBReaderRecallMark();
LABEL_2959:
        PBReaderRecallMark();
        return 0;
      case 0x3Bu:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_2959;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
        while (2)
        {
          while (2)
          {
            if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3] || a1[*v4])
              goto LABEL_2951;
            v1212 = 0;
            v1213 = 0;
            v1214 = 0;
            while (2)
            {
              v1215 = *v2;
              v1216 = *(_QWORD *)&a1[v1215];
              v1217 = v1216 + 1;
              if (v1216 == -1 || v1217 > *(_QWORD *)&a1[*v3])
              {
                a1[*v4] = 1;
              }
              else
              {
                v1218 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v1216);
                *(_QWORD *)&a1[v1215] = v1217;
                v1214 |= (unint64_t)(v1218 & 0x7F) << v1212;
                if (v1218 < 0)
                {
                  v1212 += 7;
                  v13 = v1213++ >= 9;
                  if (v13)
                  {
                    v1214 = 0;
                    v1219 = a1[*v4];
                    goto LABEL_2859;
                  }
                  continue;
                }
              }
              break;
            }
            v1219 = a1[*v4];
            if (a1[*v4])
              v1214 = 0;
LABEL_2859:
            v1220 = v1214 & 7;
            if (v1219)
              v1221 = 1;
            else
              v1221 = v1220 == 4;
            if (v1221)
              goto LABEL_2951;
            if ((v1214 >> 3) != 1)
            {
              if ((PBReaderSkipValueWithTag() & 1) == 0)
                goto LABEL_2958;
              continue;
            }
            break;
          }
          if (v1220 == 2 && PBReaderPlaceMark() && GEOMapRegionIsValid(a1))
          {
            PBReaderRecallMark();
            continue;
          }
          goto LABEL_2958;
        }
      case 0x3Cu:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_2959;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
        while (2)
        {
          while (2)
          {
            if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3] || a1[*v4])
              goto LABEL_2951;
            v1222 = 0;
            v1223 = 0;
            v1224 = 0;
            while (2)
            {
              v1225 = *v2;
              v1226 = *(_QWORD *)&a1[v1225];
              v1227 = v1226 + 1;
              if (v1226 == -1 || v1227 > *(_QWORD *)&a1[*v3])
              {
                a1[*v4] = 1;
              }
              else
              {
                v1228 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v1226);
                *(_QWORD *)&a1[v1225] = v1227;
                v1224 |= (unint64_t)(v1228 & 0x7F) << v1222;
                if (v1228 < 0)
                {
                  v1222 += 7;
                  v13 = v1223++ >= 9;
                  if (v13)
                  {
                    v1224 = 0;
                    v1229 = a1[*v4];
                    goto LABEL_2885;
                  }
                  continue;
                }
              }
              break;
            }
            v1229 = a1[*v4];
            if (a1[*v4])
              v1224 = 0;
LABEL_2885:
            v1230 = v1224 & 7;
            if (v1229)
              v1231 = 1;
            else
              v1231 = v1230 == 4;
            if (v1231)
              goto LABEL_2951;
            if ((v1224 >> 3) != 1)
            {
              if ((PBReaderSkipValueWithTag() & 1) == 0)
                goto LABEL_2958;
              continue;
            }
            break;
          }
          if (v1230 == 2 && PBReaderPlaceMark() && GEOPDViewportInfoIsValid(a1))
          {
            PBReaderRecallMark();
            continue;
          }
          goto LABEL_2958;
        }
      case 0x3Du:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_2959;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
        while (2)
        {
          while (2)
          {
            if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3] || a1[*v4])
              goto LABEL_2951;
            v1232 = 0;
            v1233 = 0;
            v1234 = 0;
            while (2)
            {
              v1235 = *v2;
              v1236 = *(_QWORD *)&a1[v1235];
              v1237 = v1236 + 1;
              if (v1236 == -1 || v1237 > *(_QWORD *)&a1[*v3])
              {
                a1[*v4] = 1;
              }
              else
              {
                v1238 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v1236);
                *(_QWORD *)&a1[v1235] = v1237;
                v1234 |= (unint64_t)(v1238 & 0x7F) << v1232;
                if (v1238 < 0)
                {
                  v1232 += 7;
                  v13 = v1233++ >= 9;
                  if (v13)
                  {
                    v1234 = 0;
                    v1239 = a1[*v4];
                    goto LABEL_2911;
                  }
                  continue;
                }
              }
              break;
            }
            v1239 = a1[*v4];
            if (a1[*v4])
              v1234 = 0;
LABEL_2911:
            v1240 = v1234 & 7;
            if (v1239)
              v1241 = 1;
            else
              v1241 = v1240 == 4;
            if (v1241)
              goto LABEL_2951;
            if ((v1234 >> 3) != 1)
            {
              if ((PBReaderSkipValueWithTag() & 1) == 0)
                goto LABEL_2958;
              continue;
            }
            break;
          }
          if (v1240 == 2 && PBReaderPlaceMark() && GEOPDMapsIdentifierIsValid(a1))
          {
            PBReaderRecallMark();
            continue;
          }
          goto LABEL_2958;
        }
      case 0x3Eu:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_2959;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
        while (2)
        {
          if (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3] && !a1[*v4])
          {
            v1242 = 0;
            v1243 = 0;
            v1244 = 0;
            while (1)
            {
              v1245 = *v2;
              v1246 = *(_QWORD *)&a1[v1245];
              v1247 = v1246 + 1;
              if (v1246 == -1 || v1247 > *(_QWORD *)&a1[*v3])
                break;
              v1248 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v1246);
              *(_QWORD *)&a1[v1245] = v1247;
              v1244 |= (unint64_t)(v1248 & 0x7F) << v1242;
              if ((v1248 & 0x80) == 0)
                goto LABEL_2935;
              v1242 += 7;
              v13 = v1243++ >= 9;
              if (v13)
              {
                v1244 = 0;
                v1249 = a1[*v4];
                goto LABEL_2937;
              }
            }
            a1[*v4] = 1;
LABEL_2935:
            v1249 = a1[*v4];
            if (a1[*v4])
              v1244 = 0;
LABEL_2937:
            v1250 = v1244 & 7;
            if (!v1249 && v1250 != 4)
            {
              if ((v1244 >> 3) != 2)
              {
                if ((v1244 >> 3) == 1 && v1250 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
                  goto LABEL_2958;
                continue;
              }
              if (v1250 == 2 && PBReaderPlaceMark() && GEOPDAddressWithComponentsIsValid(a1))
              {
                PBReaderRecallMark();
                continue;
              }
              goto LABEL_2958;
            }
          }
          break;
        }
LABEL_2951:
        v1252 = a1[*v4];
        PBReaderRecallMark();
        if (v1252)
          goto LABEL_2959;
        goto LABEL_2952;
      default:
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_2959;
        goto LABEL_2953;
    }
  }
}

uint64_t _GEOPDPlaceRequestIsDirty(uint64_t a1)
{
  unsigned int v2;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 120));
  if (*(__int16 *)(a1 + 132) < 0)
    return 1;
  v2 = *(unsigned __int16 *)(a1 + 132);
  if ((v2 & 0x10) != 0)
  {
    if (GEOPDAnalyticMetadataIsDirty(*(os_unfair_lock_s **)(a1 + 24)))
      return 1;
    v2 = *(unsigned __int16 *)(a1 + 132);
  }
  if ((v2 & 0x40) != 0)
  {
    if ((GEOPDClientMetadataIsDirty(*(os_unfair_lock_s **)(a1 + 40)) & 1) != 0)
      return 1;
    v2 = *(unsigned __int16 *)(a1 + 132);
  }
  if ((v2 & 0x6080) != 0)
    return 1;
  if ((v2 & 0x800) == 0)
    goto LABEL_12;
  if ((GEOPDPlaceRequestParametersIsDirty(*(os_unfair_lock_s **)(a1 + 80)) & 1) != 0)
    return 1;
  v2 = *(unsigned __int16 *)(a1 + 132);
LABEL_12:
  if ((v2 & 0x1520) != 0)
    return 1;
  return (v2 >> 9) & 1;
}

uint64_t GEOPDPlaceRequestHasSensitiveFields(void *a1, uint64_t a2)
{
  void *v4;
  uint64_t HasSensitiveFields;
  id *v6;

  if (!a1)
    return 0;
  objc_msgSend(a1, "clientMetadata");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  if ((GEOPDClientMetadataHasSensitiveFields(v4) & 1) != 0)
  {
    HasSensitiveFields = 1;
  }
  else
  {
    objc_msgSend(a1, "placeRequestParameters");
    v6 = (id *)objc_claimAutoreleasedReturnValue();
    HasSensitiveFields = GEOPDPlaceRequestParametersHasSensitiveFields(v6, a2);

  }
  return HasSensitiveFields;
}

void sub_188BAE870(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188BB423C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188BB82C4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDPlaceRequestParametersCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  -[GEOPDSearchParameters readAll:](*(_QWORD *)(a1 + 376), 1);
  -[GEOPDGeocodingParameters readAll:](*(_QWORD *)(a1 + 184), 1);
  -[GEOPDReverseGeocodingParameters readAll:](*(_QWORD *)(a1 + 352), 1);
  -[GEOPDPlaceLookupParameters readAll:](*(_QWORD *)(a1 + 280), 1);
  objc_msgSend(*(id *)(a1 + 248), "readAll:", 1);
  -[GEOPDPlaceRefinementParameters readAll:](*(_QWORD *)(a1 + 296), 1);
  -[GEOPDSiriSearchParameters readAll:](*(_QWORD *)(a1 + 400), 1);
  -[GEOPDLocationDirectedSearchParameters readAll:](*(_QWORD *)(a1 + 216), 1);
  objc_msgSend(*(id *)(a1 + 64), "readAll:", 1);
  -[GEOPDSearchBrowseCategorySuggestionParameters readAll:](*(_QWORD *)(a1 + 120), 1);
  -[GEOPDCategorySearchParameters readAll:](*(_QWORD *)(a1 + 136), 1);
  -[GEOPDPopularNearbySearchParameters readAll:](*(_QWORD *)(a1 + 320), 1);
  -[GEOPDBatchPopularNearbySearchParameters readAll:](*(_QWORD *)(a1 + 88), 1);
  -[GEOPDVendorSpecificPlaceRefinementParameters readAll:](*(_QWORD *)(a1 + 448), 1);
  -[GEOPDNearbySearchParameters readAll:](*(_QWORD *)(a1 + 256), 1);
  -[GEOPDAddressObjectGeocodingParameters readAll:](*(_QWORD *)(a1 + 24), 1);
  -[GEOPDExternalTransitLookupParameters readAll:](*(_QWORD *)(a1 + 168), 1);
  -[GEOPDFeatureIdGeocodingParameters readAll:](*(_QWORD *)(a1 + 176), 1);
  -[GEOPDBatchReverseGeocodingParameters readAll:](*(_QWORD *)(a1 + 96), 1);
  -[GEOPDBatchSpatialLookupParameters readAll:](*(_QWORD *)(a1 + 104), 1);
  -[GEOPDPlaceCollectionLookupParameters readAll:](*(_QWORD *)(a1 + 272), 1);
  objc_msgSend(*(id *)(a1 + 432), "readAll:", 1);
  -[GEOPDCollectionSuggestionParameters readAll:](*(_QWORD *)(a1 + 152), 1);
  -[GEOPDMapsSearchHomeParameters readAll:](*(_QWORD *)(a1 + 240), 1);
  -[GEOPDPublisherViewParameters readAll:](*(_QWORD *)(a1 + 328), 1);
  -[GEOPDAllCollectionsViewParameters readAll:](*(_QWORD *)(a1 + 48), 1);
  -[GEOPDAirportEntityPlaceLookupParameters readAll:](*(_QWORD *)(a1 + 40), 1);
  -[GEOPDTransitNearbyScheduleLookupParameters readAll:](*(_QWORD *)(a1 + 424), 1);
  -[GEOPDGuidesHomeParameters readAll:](*(_QWORD *)(a1 + 200), 1);
  -[GEOPDExtendedGeoLookupParameters readAll:](*(_QWORD *)(a1 + 160), 1);
  -[GEOPDQueryUnderstandingParameters readAll:](*(_QWORD *)(a1 + 336), 1);
  -[GEOPDPlacecardEnrichmentParameters readAll:](*(_QWORD *)(a1 + 304), 1);
  -[GEOPDAddressRecommendationParameters readAll:](*(_QWORD *)(a1 + 32), 1);
}

uint64_t _GEOPDPlaceRequestParametersIsDirty(uint64_t a1)
{
  uint64_t v2;
  os_unfair_lock_s *v3;
  char IsDirty;
  os_unfair_lock_s *v5;
  BOOL v6;
  os_unfair_lock_s *v7;
  char v8;
  uint64_t v9;
  int v10;
  os_unfair_lock_s *v11;
  BOOL v12;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 472));
  v2 = *(_QWORD *)(a1 + 476);
  if ((v2 & 0x100000000000000) != 0)
    return 1;
  if ((v2 & 0x200000000000) != 0)
  {
    v3 = *(os_unfair_lock_s **)(a1 + 376);
    if (v3)
    {
      os_unfair_lock_lock_with_options();
      IsDirty = _GEOPDSearchParametersIsDirty((uint64_t)v3);
      os_unfair_lock_unlock(v3 + 84);
      if ((IsDirty & 1) != 0)
        return 1;
      v2 = *(_QWORD *)(a1 + 476);
    }
  }
  if ((v2 & 0x200000) != 0)
  {
    v5 = *(os_unfair_lock_s **)(a1 + 184);
    if (v5)
    {
      os_unfair_lock_lock_with_options();
      v6 = _GEOPDGeocodingParametersIsDirty((uint64_t)v5);
      os_unfair_lock_unlock(v5 + 18);
      if (v6)
        return 1;
    }
    v2 = *(_QWORD *)(a1 + 476);
  }
  if ((v2 & 0x4000) != 0)
    return 1;
  if ((v2 & 0x40000000000) != 0)
  {
    v7 = *(os_unfair_lock_s **)(a1 + 352);
    if (v7)
    {
      os_unfair_lock_lock_with_options();
      v8 = _GEOPDReverseGeocodingParametersIsDirty((uint64_t)v7);
      os_unfair_lock_unlock(v7 + 12);
      if ((v8 & 1) != 0)
        return 1;
    }
    v2 = *(_QWORD *)(a1 + 476);
  }
  if ((v2 & 0x200000000) != 0)
  {
    v9 = *(_QWORD *)(a1 + 280);
    if (v9)
    {
      os_unfair_lock_lock_with_options();
      os_unfair_lock_assert_owner((const os_unfair_lock *)(v9 + 64));
      v10 = *(_BYTE *)(v9 + 76) & 0x38;
      os_unfair_lock_unlock((os_unfair_lock_t)(v9 + 64));
      if (v10)
        return 1;
    }
    v2 = *(_QWORD *)(a1 + 476);
  }
  if ((v2 & 0x20000000) != 0)
  {
    if ((GEOPDMerchantLookupParametersIsDirty(*(os_unfair_lock_s **)(a1 + 248)) & 1) != 0)
      return 1;
    v2 = *(_QWORD *)(a1 + 476);
  }
  if ((v2 & 0x800000000) != 0)
  {
    if (GEOPDPlaceRefinementParametersIsDirty(*(_QWORD *)(a1 + 296)))
      return 1;
    v2 = *(_QWORD *)(a1 + 476);
  }
  if ((v2 & 0x1000000000000) != 0)
  {
    v11 = *(os_unfair_lock_s **)(a1 + 400);
    if (v11)
    {
      os_unfair_lock_lock_with_options();
      v12 = _GEOPDSiriSearchParametersIsDirty((uint64_t)v11);
      os_unfair_lock_unlock(v11 + 22);
      if (v12)
        return 1;
    }
    v2 = *(_QWORD *)(a1 + 476);
  }
  if ((v2 & 0x2000000) != 0)
  {
    if ((GEOPDLocationDirectedSearchParametersIsDirty(*(os_unfair_lock_s **)(a1 + 216)) & 1) != 0)
      return 1;
    v2 = *(_QWORD *)(a1 + 476);
  }
  if ((v2 & 0x40) != 0)
  {
    if ((GEOPDAutocompleteParametersIsDirty(*(os_unfair_lock_s **)(a1 + 64)) & 1) != 0)
      return 1;
    v2 = *(_QWORD *)(a1 + 476);
  }
  if ((v2 & 0x2000) != 0)
  {
    if ((GEOPDSearchBrowseCategorySuggestionParametersIsDirty(*(os_unfair_lock_s **)(a1 + 120)) & 1) != 0)
      return 1;
    v2 = *(_QWORD *)(a1 + 476);
  }
  if ((v2 & 0x8000) != 0)
  {
    if ((GEOPDCategorySearchParametersIsDirty(*(os_unfair_lock_s **)(a1 + 136)) & 1) != 0)
      return 1;
    v2 = *(_QWORD *)(a1 + 476);
  }
  if ((v2 & 0x4000000000) == 0)
    goto LABEL_44;
  if (GEOPDPopularNearbySearchParametersIsDirty(*(_QWORD *)(a1 + 320)))
    return 1;
  v2 = *(_QWORD *)(a1 + 476);
LABEL_44:
  if ((v2 & 0x500000000000) != 0)
    return 1;
  if ((v2 & 0x200) != 0)
  {
    if (GEOPDBatchPopularNearbySearchParametersIsDirty(*(_QWORD *)(a1 + 88)))
      return 1;
    v2 = *(_QWORD *)(a1 + 476);
  }
  if ((v2 & 0x40000000000000) != 0)
  {
    if (GEOPDVendorSpecificPlaceRefinementParametersIsDirty(*(_QWORD *)(a1 + 448)))
      return 1;
    v2 = *(_QWORD *)(a1 + 476);
  }
  if ((v2 & 0x40000000) != 0)
  {
    if (GEOPDNearbySearchParametersIsDirty(*(_QWORD *)(a1 + 256)))
      return 1;
    v2 = *(_QWORD *)(a1 + 476);
  }
  if ((v2 & 2) != 0)
  {
    if (GEOPDAddressObjectGeocodingParametersIsDirty(*(_QWORD *)(a1 + 24)))
      return 1;
    v2 = *(_QWORD *)(a1 + 476);
  }
  if ((v2 & 0x800000000000) != 0)
    return 1;
  if ((v2 & 0x80000) != 0)
  {
    if ((GEOPDExternalTransitLookupParametersIsDirty(*(os_unfair_lock_s **)(a1 + 168)) & 1) != 0)
      return 1;
    v2 = *(_QWORD *)(a1 + 476);
  }
  if ((v2 & 0x100000) != 0)
  {
    if (GEOPDFeatureIdGeocodingParametersIsDirty(*(_QWORD *)(a1 + 176)))
      return 1;
    v2 = *(_QWORD *)(a1 + 476);
  }
  if ((v2 & 0x8000000) != 0)
    return 1;
  if ((v2 & 0x400) != 0)
  {
    if (GEOPDBatchReverseGeocodingParametersIsDirty(*(_QWORD *)(a1 + 96)))
      return 1;
    v2 = *(_QWORD *)(a1 + 476);
  }
  if ((v2 & 0x80000001401000) != 0)
    return 1;
  if ((v2 & 0x800) != 0)
  {
    if ((GEOPDBatchSpatialLookupParametersIsDirty(*(os_unfair_lock_s **)(a1 + 104)) & 1) != 0)
      return 1;
    v2 = *(_QWORD *)(a1 + 476);
  }
  if ((v2 & 0x20000000000000) != 0)
    return 1;
  if ((v2 & 0x100000000) != 0)
  {
    if (GEOPDPlaceCollectionLookupParametersIsDirty(*(_QWORD *)(a1 + 272)))
      return 1;
    v2 = *(_QWORD *)(a1 + 476);
  }
  if ((v2 & 0x10000000010180) != 0)
    return 1;
  if ((v2 & 0x20000) != 0)
  {
    if (GEOPDCollectionSuggestionParametersIsDirty(*(_QWORD *)(a1 + 152)))
      return 1;
    v2 = *(_QWORD *)(a1 + 476);
  }
  if ((v2 & 0x10000000) != 0)
  {
    if ((GEOPDMapsSearchHomeParametersIsDirty(*(os_unfair_lock_s **)(a1 + 240)) & 1) != 0)
      return 1;
    v2 = *(_QWORD *)(a1 + 476);
  }
  if ((v2 & 0x400000000) != 0)
    return 1;
  if ((v2 & 0x8000000000) != 0)
  {
    if ((GEOPDPublisherViewParametersIsDirty(*(os_unfair_lock_s **)(a1 + 328)) & 1) != 0)
      return 1;
    v2 = *(_QWORD *)(a1 + 476);
  }
  if ((v2 & 0x10) != 0)
  {
    if ((GEOPDAllCollectionsViewParametersIsDirty(*(os_unfair_lock_s **)(a1 + 48)) & 1) != 0)
      return 1;
    v2 = *(_QWORD *)(a1 + 476);
  }
  if ((v2 & 8) != 0)
  {
    if (GEOPDAirportEntityPlaceLookupParametersIsDirty(*(_QWORD *)(a1 + 40)))
      return 1;
    v2 = *(_QWORD *)(a1 + 476);
  }
  if ((v2 & 0x2000000000000) != 0)
    return 1;
  if ((v2 & 0x8000000000000) != 0)
  {
    if ((GEOPDTransitNearbyScheduleLookupParametersIsDirty(*(os_unfair_lock_s **)(a1 + 424)) & 1) != 0)
      return 1;
    v2 = *(_QWORD *)(a1 + 476);
  }
  if ((v2 & 0x4000020) != 0)
    return 1;
  if ((v2 & 0x800000) != 0)
  {
    if ((GEOPDGuidesHomeParametersIsDirty(*(os_unfair_lock_s **)(a1 + 200)) & 1) != 0)
      return 1;
    v2 = *(_QWORD *)(a1 + 476);
  }
  if ((v2 & 0x40000) != 0)
  {
    if ((GEOPDExtendedGeoLookupParametersIsDirty(*(os_unfair_lock_s **)(a1 + 160)) & 1) != 0)
      return 1;
    v2 = *(_QWORD *)(a1 + 476);
  }
  if ((v2 & 0x10000000000) != 0)
  {
    if ((GEOPDQueryUnderstandingParametersIsDirty(*(os_unfair_lock_s **)(a1 + 336)) & 1) != 0)
      return 1;
    v2 = *(_QWORD *)(a1 + 476);
  }
  if ((v2 & 0x4002000000000) != 0)
    return 1;
  if ((v2 & 0x1000000000) != 0)
  {
    if ((GEOPDPlacecardEnrichmentParametersIsDirty(*(os_unfair_lock_s **)(a1 + 304)) & 1) != 0)
      return 1;
    v2 = *(_QWORD *)(a1 + 476);
  }
  if ((v2 & 0xA0080000000) != 0)
    return 1;
  if ((v2 & 4) != 0)
    return (uint64_t)GEOPDAddressRecommendationParametersIsDirty(*(os_unfair_lock_s **)(a1 + 32));
  else
    return 0;
}

void GEOPDSearchParametersClearSensitiveFields(uint64_t a1, uint64_t a2, int a3)
{
  void *v5;
  unsigned int v6;
  void *v7;
  void *v8;
  id v9;

  if (a1
    && a3
    && (-[GEOPDSearchParameters _readSuggestionEntry](a1), *(_QWORD *)(a1 + 304))
    && (-[GEOPDSearchParameters suggestionEntry]((id *)a1),
        v5 = (void *)objc_claimAutoreleasedReturnValue(),
        v6 = GEOPDAutocompleteEntryHasSensitiveFields(v5, a2),
        v5,
        v6))
  {
    -[GEOPDSearchParameters suggestionEntry]((id *)a1);
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v9 = (id)objc_msgSend(v7, "copy");

    objc_msgSend(v9, "business");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "clearSensitiveFields:", a2);

    -[GEOPDSearchParameters setSuggestionEntry:](a1, v9);
  }
  else
  {
    -[GEOPDSearchParameters suggestionEntry]((id *)a1);
    v9 = (id)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "clearSensitiveFields:", a2);
  }

}

unint64_t GEOPDWifiFingerprintParametersClearSensitiveFields(uint64_t a1, uint64_t a2, int a3)
{
  unint64_t result;
  unint64_t i;
  id *v8;
  id *v9;
  void *v10;

  result = objc_msgSend(*(id *)(a1 + 16), "count");
  if (result)
  {
    for (i = 0; i < result; ++i)
    {
      objc_msgSend(*(id *)(a1 + 16), "objectAtIndexedSubscript:", i);
      v8 = (id *)objc_claimAutoreleasedReturnValue();
      v9 = v8;
      if (a3 && GEOPDWifiMeasurementHasSensitiveFields(v8))
      {
        v10 = (void *)objc_msgSend(v9, "copy");
        GEOPDWifiMeasurementClearSensitiveFields((uint64_t)v10, a2, 0);
        objc_msgSend(*(id *)(a1 + 16), "replaceObjectAtIndex:withObject:", i, v10);

      }
      else if (v9)
      {
        GEOPDWifiMeasurementClearSensitiveFields((uint64_t)v9, a2, 1);
      }

      result = objc_msgSend(*(id *)(a1 + 16), "count");
    }
  }
  return result;
}

void GEOPDTransitNearbyScheduleLookupParametersClearSensitiveFields(uint64_t a1, uint64_t a2, int a3)
{
  unint64_t v6;
  void **v7;
  void **v8;
  void *v9;
  void *v10;
  unsigned int v11;
  void *v12;
  void *v13;
  id v14;

  -[GEOPDTransitNearbyScheduleLookupParameters _readTransitNearbyScheduleLookupOrigins](a1);
  if (objc_msgSend(*(id *)(a1 + 24), "count"))
  {
    v6 = 0;
    do
    {
      objc_msgSend(*(id *)(a1 + 24), "objectAtIndexedSubscript:", v6);
      v7 = (void **)objc_claimAutoreleasedReturnValue();
      v8 = v7;
      if (a3 && GEOPDTransitNearbyScheduleLookupOriginHasSensitiveFields(v7))
      {
        v9 = (void *)objc_msgSend(v8, "copy");
        GEOPDTransitNearbyScheduleLookupOriginClearSensitiveFields((uint64_t)v9, a2, 0);
        objc_msgSend(*(id *)(a1 + 24), "replaceObjectAtIndex:withObject:", v6, v9);

      }
      else if (v8)
      {
        GEOPDTransitNearbyScheduleLookupOriginClearSensitiveFields((uint64_t)v8, a2, 1);
      }

      ++v6;
    }
    while (v6 < objc_msgSend(*(id *)(a1 + 24), "count"));
  }
  if ((a3 & 1) != 0
    && (-[GEOPDTransitNearbyScheduleLookupParameters _readUserLocation](a1), *(_QWORD *)(a1 + 32))
    && (-[GEOPDTransitNearbyScheduleLookupParameters userLocation]((id *)a1),
        v10 = (void *)objc_claimAutoreleasedReturnValue(),
        v11 = GEOWaypointTypedHasSensitiveFields(v10),
        v10,
        v11))
  {
    -[GEOPDTransitNearbyScheduleLookupParameters userLocation]((id *)a1);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    v14 = (id)objc_msgSend(v12, "copy");

    objc_msgSend(v14, "waypointLocation");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v13, "clearSensitiveFields:", a2);

    -[GEOPDTransitNearbyScheduleLookupParameters setUserLocation:](a1, v14);
  }
  else
  {
    -[GEOPDTransitNearbyScheduleLookupParameters userLocation]((id *)a1);
    v14 = (id)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v14, "clearSensitiveFields:", a2);
  }

}

unint64_t GEOPDTransitNearbyPaymentMethodLookupParametersClearSensitiveFields(uint64_t a1, uint64_t a2, int a3)
{
  unint64_t result;
  unint64_t i;
  void **v8;
  void **v9;
  void *v10;

  result = objc_msgSend(*(id *)(a1 + 16), "count");
  if (result)
  {
    for (i = 0; i < result; ++i)
    {
      objc_msgSend(*(id *)(a1 + 16), "objectAtIndexedSubscript:", i);
      v8 = (void **)objc_claimAutoreleasedReturnValue();
      v9 = v8;
      if (a3 && GEOPDTransitNearbyPaymentMethodLookupOriginHasSensitiveFields(v8))
      {
        v10 = (void *)objc_msgSend(v9, "copy");
        GEOPDTransitNearbyPaymentMethodLookupOriginClearSensitiveFields((uint64_t)v10, a2, 0);
        objc_msgSend(*(id *)(a1 + 16), "replaceObjectAtIndex:withObject:", i, v10);

      }
      else if (v9)
      {
        GEOPDTransitNearbyPaymentMethodLookupOriginClearSensitiveFields((uint64_t)v9, a2, 1);
      }

      result = objc_msgSend(*(id *)(a1 + 16), "count");
    }
  }
  return result;
}

void sub_188BC70F8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188BC73B4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188BC74F4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188BC7824(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188BC7CC0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDPlaceResponseCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  _BYTE v30[128];
  _BYTE v31[128];
  _BYTE v32[128];
  uint64_t v33;

  v33 = *MEMORY[0x1E0C80C00];
  -[GEOPDPlaceGlobalResult readAll:](*(_QWORD *)(a1 + 88), 1);
  v28 = 0u;
  v29 = 0u;
  v26 = 0u;
  v27 = 0u;
  v2 = *(id *)(a1 + 104);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v26, v32, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v27;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v27 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v26 + 1) + 8 * v6++), "readAll:", 1);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v26, v32, 16);
    }
    while (v4);
  }

  objc_msgSend(*(id *)(a1 + 40), "readAll:", 1);
  v24 = 0u;
  v25 = 0u;
  v22 = 0u;
  v23 = 0u;
  v7 = *(id *)(a1 + 96);
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v22, v31, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v23;
    do
    {
      v11 = 0;
      do
      {
        if (*(_QWORD *)v23 != v10)
          objc_enumerationMutation(v7);
        objc_msgSend(*(id *)(*((_QWORD *)&v22 + 1) + 8 * v11++), "readAll:", 1);
      }
      while (v9 != v11);
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v22, v31, 16);
    }
    while (v9);
  }

  v20 = 0u;
  v21 = 0u;
  v18 = 0u;
  v19 = 0u;
  v12 = *(id *)(a1 + 80);
  v13 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v18, v30, 16);
  if (v13)
  {
    v14 = v13;
    v15 = *(_QWORD *)v19;
    do
    {
      v16 = 0;
      do
      {
        if (*(_QWORD *)v19 != v15)
          objc_enumerationMutation(v12);
        -[GEOPDDotPlace readAll:](*(_QWORD *)(*((_QWORD *)&v18 + 1) + 8 * v16++), 1);
      }
      while (v14 != v16);
      v14 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v18, v30, 16);
    }
    while (v14);
  }

  objc_msgSend(*(id *)(a1 + 24), "readAll:", 1, (_QWORD)v18);
  return objc_msgSend(*(id *)(a1 + 32), "readAll:", 1);
}

unint64_t GEOPDPlaceResponseReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOPDPlaceResponseReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188BC9CA4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlacesRequestResponseAnalyticsDataIsValid(unsigned __int8 *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  int v6;
  char v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v15;
  _BOOL8 v16;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  v5 = (int *)MEMORY[0x1E0D82BB8];
  while (1)
  {
    v6 = a1[*v4];
    if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
      break;
    if (a1[*v4])
    {
      v6 = 1;
      break;
    }
    v7 = 0;
    v8 = 0;
    v9 = 0;
    while (1)
    {
      v10 = *v2;
      v11 = *(_QWORD *)&a1[v10];
      v12 = v11 + 1;
      if (v11 == -1 || v12 > *(_QWORD *)&a1[*v3])
        break;
      v13 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v11);
      *(_QWORD *)&a1[v10] = v12;
      v9 |= (unint64_t)(v13 & 0x7F) << v7;
      if ((v13 & 0x80) == 0)
        goto LABEL_12;
      v7 += 7;
      if (v8++ >= 9)
      {
        LOBYTE(v9) = 0;
        v6 = a1[*v4];
        goto LABEL_14;
      }
    }
    a1[*v4] = 1;
LABEL_12:
    v6 = a1[*v4];
    if (a1[*v4])
      LOBYTE(v9) = 0;
LABEL_14:
    if (v6)
      v15 = 1;
    else
      v15 = (v9 & 7) == 4;
    if (v15)
      break;
    if ((PBReaderSkipValueWithTag() & 1) == 0)
    {
      v16 = 0;
      goto LABEL_22;
    }
  }
  v16 = v6 == 0;
LABEL_22:
  PBReaderRecallMark();
  return v16;
}

uint64_t _GEOPDPlaceResponseIsDirty(uint64_t a1)
{
  int v2;
  os_unfair_lock_s *v3;
  char IsDirty;
  uint64_t v5;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  _BYTE v30[128];
  _BYTE v31[128];
  _BYTE v32[128];
  uint64_t v33;

  v33 = *MEMORY[0x1E0C80C00];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 128));
  v2 = *(__int16 *)(a1 + 140);
  if (v2 < 0)
    return 1;
  if ((v2 & 0x800) == 0 || (v3 = *(os_unfair_lock_s **)(a1 + 88)) == 0)
  {
LABEL_6:
    if ((v2 & 0x77F0) != 0)
      return 1;
    if ((v2 & 0x2000) != 0)
    {
      v28 = 0u;
      v29 = 0u;
      v26 = 0u;
      v27 = 0u;
      v7 = *(id *)(a1 + 104);
      v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v26, v32, 16);
      if (v8)
      {
        v9 = v8;
        v10 = *(_QWORD *)v27;
LABEL_12:
        v11 = 0;
        while (1)
        {
          if (*(_QWORD *)v27 != v10)
            objc_enumerationMutation(v7);
          if ((GEOPDPlaceIsDirty(*(os_unfair_lock_s **)(*((_QWORD *)&v26 + 1) + 8 * v11)) & 1) != 0)
            goto LABEL_40;
          if (v9 == ++v11)
          {
            v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v26, v32, 16);
            if (v9)
              goto LABEL_12;
            break;
          }
        }
      }

      LOWORD(v2) = *(_WORD *)(a1 + 140);
    }
    if ((v2 & 0x1000) != 0)
    {
      v24 = 0u;
      v25 = 0u;
      v22 = 0u;
      v23 = 0u;
      v7 = *(id *)(a1 + 96);
      v12 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v22, v31, 16);
      if (v12)
      {
        v13 = v12;
        v14 = *(_QWORD *)v23;
LABEL_22:
        v15 = 0;
        while (1)
        {
          if (*(_QWORD *)v23 != v14)
            objc_enumerationMutation(v7);
          if ((GEOPDMapsResultIsDirty(*(os_unfair_lock_s **)(*((_QWORD *)&v22 + 1) + 8 * v15)) & 1) != 0)
            goto LABEL_40;
          if (v13 == ++v15)
          {
            v13 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v22, v31, 16);
            if (v13)
              goto LABEL_22;
            break;
          }
        }
      }

      LOWORD(v2) = *(_WORD *)(a1 + 140);
    }
    if ((v2 & 0x400) == 0)
      return 0;
    v20 = 0u;
    v21 = 0u;
    v18 = 0u;
    v19 = 0u;
    v7 = *(id *)(a1 + 80);
    v5 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v18, v30, 16);
    if (!v5)
    {
LABEL_41:

      return v5;
    }
    v16 = *(_QWORD *)v19;
LABEL_33:
    v17 = 0;
    while (1)
    {
      if (*(_QWORD *)v19 != v16)
        objc_enumerationMutation(v7);
      if (GEOPDDotPlaceIsDirty(*(_QWORD *)(*((_QWORD *)&v18 + 1) + 8 * v17)))
        break;
      if (v5 == ++v17)
      {
        v5 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v18, v30, 16);
        if (v5)
          goto LABEL_33;
        goto LABEL_41;
      }
    }
LABEL_40:
    v5 = 1;
    goto LABEL_41;
  }
  os_unfair_lock_lock_with_options();
  IsDirty = _GEOPDPlaceGlobalResultIsDirty((uint64_t)v3);
  os_unfair_lock_unlock(v3 + 110);
  if ((IsDirty & 1) == 0)
  {
    LOWORD(v2) = *(_WORD *)(a1 + 140);
    goto LABEL_6;
  }
  return 1;
}

unint64_t GEOPDPlaceResponseClearSensitiveFields(id *a1, uint64_t a2, int a3)
{
  id *v6;
  int HasSensitiveFields;
  void *v8;
  void *v9;
  uint64_t v10;
  unint64_t v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  unint64_t result;
  unint64_t i;
  void *v18;
  void *v19;
  void *v20;

  if (a3
    && objc_msgSend(a1, "hasGlobalResult")
    && (objc_msgSend(a1, "globalResult"),
        v6 = (id *)objc_claimAutoreleasedReturnValue(),
        HasSensitiveFields = GEOPDPlaceGlobalResultHasSensitiveFields(v6, a2),
        v6,
        HasSensitiveFields))
  {
    objc_msgSend(a1, "globalResult");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v9 = (void *)objc_msgSend(v8, "copy");

    GEOPDPlaceGlobalResultClearSensitiveFields((uint64_t)v9, a2, 0);
    objc_msgSend(a1, "setGlobalResult:", v9);
  }
  else
  {
    objc_msgSend(a1, "globalResult");
    v10 = objc_claimAutoreleasedReturnValue();
    v9 = (void *)v10;
    if (v10)
      GEOPDPlaceGlobalResultClearSensitiveFields(v10, a2, 1);
  }

  -[GEOPDPlaceResponse _readLegacyPlaceResults]((uint64_t)a1);
  if (objc_msgSend(a1[13], "count"))
  {
    v11 = 0;
    do
    {
      objc_msgSend(a1[13], "objectAtIndexedSubscript:", v11);
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      v13 = v12;
      if (a3 && GEOPDPlaceHasSensitiveFields(v12, a2))
      {
        v14 = (void *)objc_msgSend(v13, "copy");
        objc_msgSend(v14, "requestData");
        v15 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v15, "clearSensitiveFields:", a2);

        objc_msgSend(a1[13], "replaceObjectAtIndex:withObject:", v11, v14);
      }
      else
      {
        objc_msgSend(v13, "clearSensitiveFields:", a2);
      }

      ++v11;
    }
    while (v11 < objc_msgSend(a1[13], "count"));
  }
  -[GEOPDPlaceResponse _readMapsResults]((uint64_t)a1);
  result = objc_msgSend(a1[12], "count");
  if (result)
  {
    for (i = 0; i < result; ++i)
    {
      objc_msgSend(a1[12], "objectAtIndexedSubscript:", i);
      v18 = (void *)objc_claimAutoreleasedReturnValue();
      v19 = v18;
      if (a3 && GEOPDMapsResultHasSensitiveFields(v18, a2))
      {
        v20 = (void *)objc_msgSend(v19, "copy");
        GEOPDMapsResultClearSensitiveFields(v20, a2, 0);
        objc_msgSend(a1[12], "replaceObjectAtIndex:withObject:", i, v20);

      }
      else
      {
        objc_msgSend(v19, "clearSensitiveFields:", a2);
      }

      result = objc_msgSend(a1[12], "count");
    }
  }
  return result;
}

uint64_t GEOPDPlaceResponseHasSensitiveFields(void *a1, uint64_t a2)
{
  id *v4;
  char HasSensitiveFields;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  _BYTE v25[128];
  _BYTE v26[128];
  uint64_t v27;

  v27 = *MEMORY[0x1E0C80C00];
  if (!a1)
    return 0;
  objc_msgSend(a1, "globalResult");
  v4 = (id *)objc_claimAutoreleasedReturnValue();
  HasSensitiveFields = GEOPDPlaceGlobalResultHasSensitiveFields(v4, a2);

  if ((HasSensitiveFields & 1) == 0)
  {
    v23 = 0u;
    v24 = 0u;
    v21 = 0u;
    v22 = 0u;
    objc_msgSend(a1, "legacyPlaceResults");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v21, v26, 16);
    if (v8)
    {
      v9 = v8;
      v10 = *(_QWORD *)v22;
LABEL_7:
      v11 = 0;
      while (1)
      {
        if (*(_QWORD *)v22 != v10)
          objc_enumerationMutation(v7);
        if ((GEOPDPlaceHasSensitiveFields(*(void **)(*((_QWORD *)&v21 + 1) + 8 * v11), a2) & 1) != 0)
          break;
        if (v9 == ++v11)
        {
          v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v21, v26, 16);
          if (v9)
            goto LABEL_7;
          goto LABEL_13;
        }
      }
    }
    else
    {
LABEL_13:

      v19 = 0u;
      v20 = 0u;
      v17 = 0u;
      v18 = 0u;
      objc_msgSend(a1, "mapsResults", 0);
      v7 = (void *)objc_claimAutoreleasedReturnValue();
      v12 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v17, v25, 16);
      if (!v12)
      {
LABEL_21:
        v6 = 0;
LABEL_23:

        return v6;
      }
      v13 = v12;
      v14 = *(_QWORD *)v18;
LABEL_15:
      v15 = 0;
      while (1)
      {
        if (*(_QWORD *)v18 != v14)
          objc_enumerationMutation(v7);
        if ((GEOPDMapsResultHasSensitiveFields(*(void **)(*((_QWORD *)&v17 + 1) + 8 * v15), a2) & 1) != 0)
          break;
        if (v13 == ++v15)
        {
          v13 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v17, v25, 16);
          if (v13)
            goto LABEL_15;
          goto LABEL_21;
        }
      }
    }
    v6 = 1;
    goto LABEL_23;
  }
  return 1;
}

void sub_188BCBBDC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188BCC58C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188BCC97C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188BCCB38(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDPlaceSuggestionParametersReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  char v17;
  unsigned __int8 v18;
  int *v19;
  int *v20;
  int *v21;
  int *v22;
  char v23;
  unsigned int v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  int v31;
  unint64_t v33;
  BOOL v34;
  int *v35;
  int v36;
  int v37;
  BOOL v38;
  GEOPDViewportInfo *v39;
  void *v40;
  id v41;
  void *v42;
  int v43;
  char v44;
  int v45;
  char v46;
  void *v47;
  int v49;
  int *v50;
  char v51;
  char v52;
  char v53;
  BOOL v54;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 52);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 48));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = ((*(unsigned __int8 *)(a1 + 60) >> 1) & 1)
      + (*(_BYTE *)(a1 + 60) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 2) & 1);
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 > 1;
        v17 = v16 & ~(_BYTE)v11 | v9;
        v18 = v16 | v11;
        v51 = v17;
        v52 = v18 | v17;
        if (((v18 | v8) & 1) != 0)
          v19 = 0;
        else
          v19 = a3;
        v20 = (int *)MEMORY[0x1E0D82BF0];
        v53 = (v19 == 0) | v18;
        v54 = v18;
        v21 = (int *)MEMORY[0x1E0D82BC8];
        v22 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v7;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v20) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v21))
      goto LABEL_68;
    v23 = 0;
    v24 = 0;
    v25 = 0;
    while (1)
    {
      v26 = *v20;
      v27 = *(_QWORD *)(v3 + v26);
      v28 = v27 + 1;
      if (v27 == -1 || v28 > *(_QWORD *)(v3 + *v6))
        break;
      v29 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v27);
      *(_QWORD *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0)
        goto LABEL_25;
      v23 += 7;
      if (v24++ >= 9)
      {
        v25 = 0;
        v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v21) = 1;
LABEL_25:
    v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(_BYTE *)(v3 + *v21))
      v25 = 0;
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_68:
      v49 = 1;
      goto LABEL_69;
    }
    v33 = v25 >> 3;
    v34 = v54;
    if ((v53 & 1) == 0)
    {
      v35 = v19;
      do
      {
        v37 = *v35++;
        v36 = v37;
        v34 = v37 != 0;
        if (v37)
          v38 = v36 == (_DWORD)v33;
        else
          v38 = 1;
      }
      while (!v38);
    }
    if ((_DWORD)v33 == 3)
      break;
    if ((_DWORD)v33 == 2)
    {
      if (!v34 || (*(_BYTE *)(a1 + 60) & 2) != 0)
        goto LABEL_62;
      PBReaderReadString();
      v39 = (GEOPDViewportInfo *)objc_claimAutoreleasedReturnValue();
      if (v39)
        -[GEOPDPlaceSuggestionParameters _addNoFlagsMapsCategoryId:](a1, v39);
      goto LABEL_55;
    }
    if ((_DWORD)v33 == 1)
    {
      if (!v34)
        goto LABEL_62;
      if ((*(_BYTE *)(a1 + 60) & 8) != 0)
      {
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_85;
        v7 += *(unsigned __int8 *)(a1 + 60) << 28 >> 31;
      }
      else
      {
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_85;
        v39 = objc_alloc_init(GEOPDViewportInfo);
        if (!GEOPDViewportInfoReadAllFrom((uint64_t)v39, (void *)v3))
          goto LABEL_84;
        PBReaderRecallMark();
        v40 = *(void **)(a1 + 40);
        *(_QWORD *)(a1 + 40) = v39;

        --v7;
      }
      goto LABEL_66;
    }
    if ((v51 & 1) == 0 || (*(_BYTE *)(a1 + 60) & 1) != 0)
      goto LABEL_62;
    if (!*(_QWORD *)(a1 + 16))
    {
      v41 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
      v42 = *(void **)(a1 + 16);
      *(_QWORD *)(a1 + 16) = v41;

    }
    v43 = PBUnknownFieldAdd();
    v21 = (int *)MEMORY[0x1E0D82BC8];
    if (!v43)
    {
      v49 = 0;
      v50 = &OBJC_IVAR___GEOPDAutocompleteResultSection__readerMarkLength;
      goto LABEL_70;
    }
LABEL_67:
    if (!(v52 & 1 | (v7 != 0)))
      goto LABEL_68;
  }
  if (!v34 || (*(_BYTE *)(a1 + 60) & 4) != 0)
  {
LABEL_62:
    v44 = PBReaderSkipValueWithTag();
    v21 = (int *)MEMORY[0x1E0D82BC8];
    if ((v44 & 1) == 0)
    {
      v49 = 0;
      goto LABEL_69;
    }
    goto LABEL_67;
  }
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_85;
  v39 = objc_alloc_init(GEOPDMapsIdentifier);
  if (GEOPDMapsIdentifierReadAllFrom((uint64_t)v39, (void *)v3))
  {
    PBReaderRecallMark();
    -[GEOPDPlaceSuggestionParameters _addNoFlagsSuggestedPlaceId:](a1, v39);
LABEL_55:

LABEL_66:
    v21 = (int *)MEMORY[0x1E0D82BC8];
    goto LABEL_67;
  }
LABEL_84:

LABEL_85:
  v49 = 0;
  v21 = (int *)MEMORY[0x1E0D82BC8];
LABEL_69:
  v50 = &OBJC_IVAR___GEOPDAutocompleteResultSection__readerMarkLength;
  if ((v51 & 1) == 0)
    goto LABEL_71;
LABEL_70:
  *(_BYTE *)(a1 + v50[491]) |= 1u;
LABEL_71:
  if (v54 || (v49 & 1) == 0)
  {
    *(_BYTE *)(a1 + v50[491]) |= 8u;
    *(_BYTE *)(a1 + v50[491]) |= 2u;
    *(_BYTE *)(a1 + v50[491]) |= 4u;
  }
  else if (v19)
  {
    while (1)
    {
      v45 = *v19++;
      v46 = 8;
      switch(v45)
      {
        case 0:
          goto LABEL_78;
        case 1:
          goto LABEL_77;
        case 2:
          v46 = 2;
          goto LABEL_77;
        case 3:
          v46 = 4;
LABEL_77:
          *(_BYTE *)(a1 + v50[491]) |= v46;
          break;
        default:
          continue;
      }
    }
  }
LABEL_78:
  if (v49)
    v3 = *(_BYTE *)(v3 + *v21) == 0;
  else
    v3 = 0;
  if (v54)
  {
    v47 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_188BCD1EC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188BCD388(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188BCD918(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDPlaceSuggestionParametersCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _BYTE v11[128];
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  objc_msgSend(*(id *)(a1 + 40), "readAll:", 1);
  v9 = 0u;
  v10 = 0u;
  v7 = 0u;
  v8 = 0u;
  v2 = *(id *)(a1 + 32);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v8;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v8 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v7 + 1) + 8 * v6++), "readAll:", 1, (_QWORD)v7);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
    }
    while (v4);
  }

}

unint64_t GEOPDPlaceSuggestionParametersReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 52))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDPlaceSuggestionParametersReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 52) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDPlaceSuggestionParametersReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDPlaceSuggestionParametersReadAllFrom_initialTag;
  Specified = GEOPDPlaceSuggestionParametersReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDPlaceSuggestionParametersCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_188BCDC84(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188BCDF5C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188BCE250(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSuggestionResultReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  GEOPDMapsIdentifier *v18;
  id v19;
  void *v20;
  _BOOL8 v21;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_29;
          v18 = objc_alloc_init(GEOPDMapsIdentifier);
          if (!GEOPDMapsIdentifierReadAllFrom((uint64_t)v18, v3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          -[GEOPDPlaceSuggestionResult addPlaceId:](a1, v18);

        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v19 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v20 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v19;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_29;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v21 = v3[*v6] == 0;
  }
  else
  {
LABEL_29:
    v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_188BCEA80(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188BCEF20(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDPlacecardEnrichmentParametersReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  int *v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  BOOL v28;
  int v29;
  unint64_t v31;
  BOOL v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  char v37;
  GEOPDMapsIdentifier *v38;
  void *v39;
  char v40;
  unsigned int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  char v46;
  id v47;
  void *v48;
  int v49;
  char v50;
  char v51;
  int v52;
  int v53;
  char v54;
  void *v55;
  int v57;
  int *v58;
  char v59;
  char v60;
  char v61;
  char v62;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = ((*(unsigned __int8 *)(a1 + 56) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 2) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 1) & 1);
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v7 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 != 0;
        v59 = v16 & ~(_BYTE)v11 | v9;
        v60 = v16 | v11 | v59;
        if ((((v16 | v11) | v7) & 1) != 0)
          v17 = 0;
        else
          v17 = a3;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v61 = (v17 == 0) | v16 | v11;
        v62 = v16 | v11;
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v8;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v19))
      goto LABEL_75;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0)
        goto LABEL_25;
      v21 += 7;
      v28 = v22++ >= 9;
      if (v28)
      {
        v23 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_25:
    v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_27:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_75:
      v57 = 1;
      goto LABEL_76;
    }
    v31 = v23 >> 3;
    v32 = v62;
    if ((v61 & 1) == 0)
    {
      v33 = v17;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    if ((_DWORD)v31 == 3)
    {
      if ((v7 & 1) != 0)
      {
        v40 = 0;
        v41 = 0;
        v42 = 0;
        *(_BYTE *)(a1 + 56) |= 1u;
        v6 = (int *)MEMORY[0x1E0D82BD8];
        while (1)
        {
          v43 = *v18;
          v44 = *(_QWORD *)(v3 + v43);
          v45 = v44 + 1;
          if (v44 == -1 || v45 > *(_QWORD *)(v3 + *v6))
            break;
          v46 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v44);
          *(_QWORD *)(v3 + v43) = v45;
          v42 |= (unint64_t)(v46 & 0x7F) << v40;
          if ((v46 & 0x80) == 0)
            goto LABEL_69;
          v40 += 7;
          v28 = v41++ >= 9;
          if (v28)
          {
            v42 = 0;
            goto LABEL_71;
          }
        }
        *(_BYTE *)(v3 + *v19) = 1;
LABEL_69:
        if (*(_BYTE *)(v3 + *v19))
          v42 = 0;
LABEL_71:
        *(_BYTE *)(a1 + 52) = v42 != 0;
        goto LABEL_66;
      }
LABEL_65:
      v50 = PBReaderSkipValueWithTag();
      v19 = (int *)MEMORY[0x1E0D82BC8];
      v6 = (int *)MEMORY[0x1E0D82BD8];
      if ((v50 & 1) != 0)
        goto LABEL_66;
      v57 = 0;
LABEL_76:
      v58 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
      goto LABEL_77;
    }
    if ((_DWORD)v31 == 2)
      break;
    if ((_DWORD)v31 != 1)
    {
      if ((v59 & 1) != 0 && (*(_BYTE *)(a1 + 56) & 2) == 0)
      {
        if (!*(_QWORD *)(a1 + 16))
        {
          v47 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
          v48 = *(void **)(a1 + 16);
          *(_QWORD *)(a1 + 16) = v47;

        }
        v49 = PBUnknownFieldAdd();
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v6 = (int *)MEMORY[0x1E0D82BD8];
        if (!v49)
        {
          v57 = 0;
          v58 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
          goto LABEL_78;
        }
        goto LABEL_66;
      }
      goto LABEL_65;
    }
    if (!v32)
      goto LABEL_65;
    if ((*(_BYTE *)(a1 + 56) & 8) != 0)
    {
      v51 = PBReaderSkipValueWithTag();
      v6 = (int *)MEMORY[0x1E0D82BD8];
      if ((v51 & 1) == 0)
        goto LABEL_97;
      v8 += *(unsigned __int8 *)(a1 + 56) << 28 >> 31;
    }
    else
    {
      v37 = PBReaderPlaceMark();
      v6 = (int *)MEMORY[0x1E0D82BD8];
      if ((v37 & 1) == 0)
        goto LABEL_97;
      v38 = objc_alloc_init(GEOPDMapsIdentifier);
      if (!GEOPDMapsIdentifierReadAllFrom((uint64_t)v38, (void *)v3))
        goto LABEL_96;
      PBReaderRecallMark();
      v39 = *(void **)(a1 + 32);
      *(_QWORD *)(a1 + 32) = v38;

      --v8;
    }
    v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_66:
    if (!(v60 & 1 | (v8 != 0)))
      goto LABEL_75;
  }
  if (!v32 || (*(_BYTE *)(a1 + 56) & 4) != 0)
    goto LABEL_65;
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_97;
  v38 = objc_alloc_init(GEOPDEnrichmentInfo);
  if (GEOPDEnrichmentInfoReadAllFrom((uint64_t)v38, (void *)v3, v10 & 1))
  {
    PBReaderRecallMark();
    -[GEOPDPlacecardEnrichmentParameters _addNoFlagsEnrichmentInfo:](a1, v38);

    v19 = (int *)MEMORY[0x1E0D82BC8];
    v6 = (int *)MEMORY[0x1E0D82BD8];
    goto LABEL_66;
  }
LABEL_96:

LABEL_97:
  v57 = 0;
  v58 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
  v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_77:
  if ((v59 & 1) == 0)
    goto LABEL_79;
LABEL_78:
  *(_BYTE *)(a1 + v58[503]) |= 2u;
LABEL_79:
  if (v62 & 1 | ((v57 & 1) == 0))
  {
    *(_BYTE *)(a1 + v58[503]) |= 8u;
    *(_BYTE *)(a1 + v58[503]) |= 4u;
    goto LABEL_89;
  }
  if (v17)
  {
    while (2)
    {
      while (1)
      {
        v53 = *v17++;
        v52 = v53;
        if (v53 == 1)
          break;
        if (v52 == 2)
        {
          v54 = 4;
          goto LABEL_88;
        }
        if (!v52)
          goto LABEL_89;
      }
      v54 = 8;
LABEL_88:
      *(_BYTE *)(a1 + v58[503]) |= v54;
      continue;
    }
  }
LABEL_89:
  if (v57)
    v3 = *(_BYTE *)(v3 + *v19) == 0;
  else
    v3 = 0;
  if ((v62 & 1) != 0)
  {
    v55 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_188BCF76C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188BCFC84(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDPlacecardEnrichmentParametersCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _BYTE v11[128];
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  objc_msgSend(*(id *)(a1 + 32), "readAll:", 1);
  v9 = 0u;
  v10 = 0u;
  v7 = 0u;
  v8 = 0u;
  v2 = *(id *)(a1 + 24);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v8;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v8 != v5)
          objc_enumerationMutation(v2);
        -[GEOPDEnrichmentInfo readAll:](*(_QWORD *)(*((_QWORD *)&v7 + 1) + 8 * v6++), 1);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
    }
    while (v4);
  }

}

unint64_t GEOPDPlacecardEnrichmentParametersReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDPlacecardEnrichmentParametersReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDPlacecardEnrichmentParametersReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDPlacecardEnrichmentParametersReadAllFrom_initialTag;
  Specified = GEOPDPlacecardEnrichmentParametersReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDPlacecardEnrichmentParametersCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_188BCFFEC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188BD0240(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDPlacecardEnrichmentParametersIsDirty(uint64_t a1)
{
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t i;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _BYTE v11[128];
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  if ((*(_BYTE *)(a1 + 56) & 0x1C) != 0)
    return 1;
  if ((*(_BYTE *)(a1 + 56) & 4) == 0)
    return 0;
  v9 = 0u;
  v10 = 0u;
  v7 = 0u;
  v8 = 0u;
  v3 = *(id *)(a1 + 24);
  v2 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
  if (v2)
  {
    v4 = *(_QWORD *)v8;
    while (2)
    {
      for (i = 0; i != v2; ++i)
      {
        if (*(_QWORD *)v8 != v4)
          objc_enumerationMutation(v3);
        if (GEOPDEnrichmentInfoIsDirty(*(_QWORD *)(*((_QWORD *)&v7 + 1) + 8 * i)))
        {
          v2 = 1;
          goto LABEL_15;
        }
      }
      v2 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
      if (v2)
        continue;
      break;
    }
  }
LABEL_15:

  return v2;
}

os_unfair_lock_s *GEOPDPlacecardEnrichmentParametersIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOPDPlacecardEnrichmentParametersIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 12);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_188BD0654(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlacecardEnrichmentResultReadAllFrom(uint64_t a1, void *a2)
{
  unsigned __int8 *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  int v8;
  char v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  char v17;
  BOOL v18;
  id v19;
  void *v20;
  _BOOL8 v21;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    v7 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      v8 = v3[*v6];
      if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
        break;
      if (v3[*v6])
      {
        v8 = 1;
        break;
      }
      v9 = 0;
      v10 = 0;
      v11 = 0;
      while (1)
      {
        v12 = *v4;
        v13 = *(_QWORD *)&v3[v12];
        v14 = v13 + 1;
        if (v13 == -1 || v14 > *(_QWORD *)&v3[*v5])
          break;
        v15 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v13);
        *(_QWORD *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0)
          goto LABEL_13;
        v9 += 7;
        if (v10++ >= 9)
        {
          v17 = 0;
          v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      v8 = v3[*v6];
      if (v3[*v6])
        v17 = 0;
      else
        v17 = v11;
LABEL_16:
      if (v8)
        v18 = 1;
      else
        v18 = (v17 & 7) == 4;
      if (v18)
        break;
      if (!*(_QWORD *)(a1 + 8))
      {
        v19 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v20 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = v19;

      }
      if ((PBUnknownFieldAdd() & 1) == 0)
        goto LABEL_23;
    }
    v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_188BD0C58(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlacesRequestResponseAnalyticsDataReadAllFrom(uint64_t a1, void *a2)
{
  unsigned __int8 *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  int v8;
  char v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  char v17;
  BOOL v18;
  id v19;
  void *v20;
  _BOOL8 v21;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    v7 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      v8 = v3[*v6];
      if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
        break;
      if (v3[*v6])
      {
        v8 = 1;
        break;
      }
      v9 = 0;
      v10 = 0;
      v11 = 0;
      while (1)
      {
        v12 = *v4;
        v13 = *(_QWORD *)&v3[v12];
        v14 = v13 + 1;
        if (v13 == -1 || v14 > *(_QWORD *)&v3[*v5])
          break;
        v15 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v13);
        *(_QWORD *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0)
          goto LABEL_13;
        v9 += 7;
        if (v10++ >= 9)
        {
          v17 = 0;
          v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      v8 = v3[*v6];
      if (v3[*v6])
        v17 = 0;
      else
        v17 = v11;
LABEL_16:
      if (v8)
        v18 = 1;
      else
        v18 = (v17 & 7) == 4;
      if (v18)
        break;
      if (!*(_QWORD *)(a1 + 8))
      {
        v19 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v20 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = v19;

      }
      if ((PBUnknownFieldAdd() & 1) == 0)
        goto LABEL_23;
    }
    v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_188BD1154(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlacesRequestResponseAnalyticsDataReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOPDPlacesRequestResponseAnalyticsDataReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188BD11B4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPoiAtAddressLookupParametersReadAllFrom(uint64_t a1, void *a2, int a3)
{
  char *v5;
  int *v6;
  int *v7;
  int *v8;
  int *v9;
  char v10;
  unsigned int v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  int v18;
  GEOPDComponent *v20;
  id v21;
  void *v22;
  _BOOL8 v23;

  v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    v6 = (int *)MEMORY[0x1E0D82BF0];
    v7 = (int *)MEMORY[0x1E0D82BD8];
    v8 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v5[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v5[*MEMORY[0x1E0D82BD8]])
    {
      v9 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v5[*v8])
          break;
        v10 = 0;
        v11 = 0;
        v12 = 0;
        while (1)
        {
          v13 = *v6;
          v14 = *(_QWORD *)&v5[v13];
          v15 = v14 + 1;
          if (v14 == -1 || v15 > *(_QWORD *)&v5[*v7])
            break;
          v16 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v14);
          *(_QWORD *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0)
            goto LABEL_13;
          v10 += 7;
          if (v11++ >= 9)
          {
            v12 = 0;
            v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        v18 = v5[*v8];
        if (v5[*v8])
          v12 = 0;
LABEL_15:
        if (v18 || (v12 & 7) == 4)
          break;
        if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_29;
          v20 = objc_alloc_init(GEOPDComponent);
          if (!GEOPDComponentReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          -[GEOPDPoiAtAddressLookupParameters addComponent:](a1, v20);

        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v21 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v22 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v21;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_29;
        }
      }
      while (*(_QWORD *)&v5[*v6] < *(_QWORD *)&v5[*v7]);
    }
    v23 = v5[*v8] == 0;
  }
  else
  {
LABEL_29:
    v23 = 0;
  }
  objc_sync_exit(v5);

  return v23;
}

void sub_188BD199C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPoiAtAddressLookupResultReadAllFrom(uint64_t a1, void *a2)
{
  unsigned __int8 *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  int v8;
  char v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  char v17;
  BOOL v18;
  id v19;
  void *v20;
  _BOOL8 v21;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    v7 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      v8 = v3[*v6];
      if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
        break;
      if (v3[*v6])
      {
        v8 = 1;
        break;
      }
      v9 = 0;
      v10 = 0;
      v11 = 0;
      while (1)
      {
        v12 = *v4;
        v13 = *(_QWORD *)&v3[v12];
        v14 = v13 + 1;
        if (v13 == -1 || v14 > *(_QWORD *)&v3[*v5])
          break;
        v15 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v13);
        *(_QWORD *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0)
          goto LABEL_13;
        v9 += 7;
        if (v10++ >= 9)
        {
          v17 = 0;
          v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      v8 = v3[*v6];
      if (v3[*v6])
        v17 = 0;
      else
        v17 = v11;
LABEL_16:
      if (v8)
        v18 = 1;
      else
        v18 = (v17 & 7) == 4;
      if (v18)
        break;
      if (!*(_QWORD *)(a1 + 8))
      {
        v19 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v20 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = v19;

      }
      if ((PBUnknownFieldAdd() & 1) == 0)
        goto LABEL_23;
    }
    v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_188BD2100(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188BD23F0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEOPDPopularNearbyResultReadSpecified(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  char v15;
  unsigned __int8 v16;
  int *v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  int v29;
  unint64_t v31;
  BOOL v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  uint64_t v37;
  void *v38;
  id v39;
  void *v40;
  int v41;
  char v42;
  char v43;
  int v44;
  int v45;
  void *v46;
  int v48;
  int *v49;
  char v50;
  char v51;
  char v52;
  BOOL v53;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 60);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 56));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int8 *)(a1 + 68) >> 1) & 1)
      + (*(_BYTE *)(a1 + 68) & 1)
      + ((*(unsigned __int8 *)(a1 + 68) >> 2) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v9])
    {
      case -4:
        ++v11;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_9;
      case 0:
        v14 = v11 != 0;
        v15 = v14 & ~(_BYTE)v10 | v7;
        v16 = v14 | v10;
        v50 = v15;
        v51 = v16 | v15;
        if (((v16 | v8) & 1) != 0)
          v17 = 0;
        else
          v17 = a3;
        v52 = (v17 == 0) | v16;
        v53 = v16;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_7:
        v12 = v7;
LABEL_8:
        v13 = v10;
LABEL_9:
        ++v9;
        v7 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v19))
      goto LABEL_59;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0)
        goto LABEL_24;
      v21 += 7;
      if (v22++ >= 9)
      {
        v23 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_26;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_24:
    v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_26:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_59:
      v48 = 1;
      goto LABEL_60;
    }
    v31 = v23 >> 3;
    v32 = v53;
    if ((v52 & 1) == 0)
    {
      v33 = v17;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    if ((_DWORD)v31 == 3)
      break;
    if ((_DWORD)v31 != 1)
    {
      if ((v50 & 1) != 0 && (*(_BYTE *)(a1 + 68) & 1) == 0)
      {
        if (!*(_QWORD *)(a1 + 16))
        {
          v39 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
          v40 = *(void **)(a1 + 16);
          *(_QWORD *)(a1 + 16) = v39;

        }
        v41 = PBUnknownFieldAdd();
        v19 = (int *)MEMORY[0x1E0D82BC8];
        if (!v41)
        {
          v48 = 0;
          v49 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
          goto LABEL_62;
        }
        goto LABEL_54;
      }
      goto LABEL_53;
    }
    if (!v32)
      goto LABEL_53;
    if ((*(_BYTE *)(a1 + 68) & 4) != 0)
    {
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        goto LABEL_80;
      v9 += *(unsigned __int8 *)(a1 + 68) << 29 >> 31;
      goto LABEL_58;
    }
    PBReaderReadString();
    v37 = objc_claimAutoreleasedReturnValue();
    v38 = *(void **)(a1 + 48);
    *(_QWORD *)(a1 + 48) = v37;

    v19 = (int *)MEMORY[0x1E0D82BC8];
    --v9;
LABEL_54:
    if (!(v51 & 1 | (v9 != 0)))
      goto LABEL_59;
  }
  if (!v32 || (*(_BYTE *)(a1 + 68) & 2) != 0)
  {
LABEL_53:
    v42 = PBReaderSkipValueWithTag();
    v19 = (int *)MEMORY[0x1E0D82BC8];
    if ((v42 & 1) != 0)
      goto LABEL_54;
    v48 = 0;
LABEL_60:
    v49 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
    goto LABEL_61;
  }
  if (PBReaderPlaceMark())
  {
    -[GEOPDPopularNearbyResult _reserveLitePlaceResults:](a1, 1uLL);
    if ((GEOPDLitePlaceResultReadAllFrom(*(_QWORD *)(a1 + 24) + 16 * *(_QWORD *)(a1 + 32), v3) & 1) != 0)
    {
      PBReaderRecallMark();
      ++*(_QWORD *)(a1 + 32);
LABEL_58:
      v19 = (int *)MEMORY[0x1E0D82BC8];
      goto LABEL_54;
    }
  }
LABEL_80:
  v48 = 0;
  v49 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
  v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_61:
  if ((v50 & 1) == 0)
    goto LABEL_63;
LABEL_62:
  *(_BYTE *)(a1 + v49[508]) |= 1u;
LABEL_63:
  if (v53 || (v48 & 1) == 0)
  {
    *(_BYTE *)(a1 + v49[508]) |= 4u;
    *(_BYTE *)(a1 + v49[508]) |= 2u;
    goto LABEL_73;
  }
  if (v17)
  {
    while (1)
    {
      v45 = *v17++;
      v44 = v45;
      if (v45 == 1)
        break;
      if (v44 == 3)
      {
        v43 = 2;
LABEL_69:
        *(_BYTE *)(a1 + v49[508]) |= v43;
      }
      else if (!v44)
      {
        goto LABEL_73;
      }
    }
    v43 = 4;
    goto LABEL_69;
  }
LABEL_73:
  if (v48)
    v3 = *(_BYTE *)(v3 + *v19) == 0;
  else
    v3 = 0;
  if (v53)
  {
    v46 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_188BD29E0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188BD2FC0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEOPDPopularNearbyResultReadAllFrom(uint64_t a1, void *a2, int a3)
{
  uint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 60))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDPopularNearbyResultReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 60) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDPopularNearbyResultReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDPopularNearbyResultReadAllFrom_initialTag;
  Specified = GEOPDPopularNearbyResultReadSpecified(a1, (uint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_188BD3210(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188BD3414(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188BD35A0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188BD3870(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDPopularNearbySearchParametersReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  int *v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  BOOL v28;
  int v29;
  unint64_t v31;
  BOOL v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  char v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  id v44;
  void *v45;
  int v46;
  GEOPDViewportInfo *v47;
  void *v48;
  uint64_t v49;
  char v50;
  unsigned int v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  char v55;
  char v56;
  uint64_t v57;
  char v58;
  int v59;
  int v60;
  char v61;
  void *v62;
  int v64;
  int *v65;
  char v66;
  char v67;
  char v68;
  char v69;
  char v70;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = ((*(unsigned __int8 *)(a1 + 60) >> 4) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 2) & 1);
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v12;
        v13 = v7;
        goto LABEL_8;
      case -3:
        v9 = 1;
        goto LABEL_7;
      case -2:
        v13 = v7;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 != 0;
        v66 = v16 & ~(_BYTE)v11 | v8;
        v67 = v9;
        v68 = v16 | v11 | v66;
        if ((((v16 | v11) | v9) & 1) != 0)
          v17 = 0;
        else
          v17 = a3;
        v69 = (v17 == 0) | v16 | v11;
        v70 = v16 | v11;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v7;
        v14 = v8;
LABEL_8:
        v15 = v11;
LABEL_10:
        ++v10;
        v7 = v13;
        v8 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v19))
      goto LABEL_88;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0)
        goto LABEL_25;
      v21 += 7;
      v28 = v22++ >= 9;
      if (v28)
      {
        v23 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_25:
    v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_27:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_88:
      v64 = 1;
      goto LABEL_89;
    }
    v31 = v23 >> 3;
    v32 = v70;
    if ((v69 & 1) == 0)
    {
      v33 = v17;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if ((v67 & 1) == 0)
          goto LABEL_70;
        v37 = 0;
        v38 = 0;
        v39 = 0;
        *(_BYTE *)(a1 + 60) |= 1u;
        while (1)
        {
          v40 = *v18;
          v41 = *(_QWORD *)(v3 + v40);
          v42 = v41 + 1;
          if (v41 == -1 || v42 > *(_QWORD *)(v3 + *v6))
            break;
          v43 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v41);
          *(_QWORD *)(v3 + v40) = v42;
          v39 |= (unint64_t)(v43 & 0x7F) << v37;
          if ((v43 & 0x80) == 0)
            goto LABEL_73;
          v37 += 7;
          v28 = v38++ >= 9;
          if (v28)
          {
            LODWORD(v39) = 0;
            goto LABEL_75;
          }
        }
        *(_BYTE *)(v3 + *v19) = 1;
LABEL_73:
        if (*(_BYTE *)(v3 + *v19))
          LODWORD(v39) = 0;
LABEL_75:
        v57 = 52;
        goto LABEL_80;
      case 2:
        if (!v32)
          goto LABEL_70;
        if ((*(_BYTE *)(a1 + 60) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_108;
          v58 = 8 * *(_BYTE *)(a1 + 60);
LABEL_85:
          v10 += v58 >> 7;
          goto LABEL_86;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_108;
        v47 = objc_alloc_init(GEOPDViewportInfo);
        if (GEOPDViewportInfoReadAllFrom((uint64_t)v47, (void *)v3))
        {
          PBReaderRecallMark();
          v48 = *(void **)(a1 + 32);
          *(_QWORD *)(a1 + 32) = v47;
LABEL_61:

          --v10;
LABEL_86:
          v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_87:
          if (!(v68 & 1 | (v10 != 0)))
            goto LABEL_88;
          continue;
        }

LABEL_108:
        v64 = 0;
        v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_89:
        v65 = &OBJC_IVAR___GEOPDAutocompleteResultSection__readerMarkLength;
        if ((v66 & 1) != 0)
LABEL_90:
          *(_BYTE *)(a1 + v65[517]) |= 4u;
        if (v70 & 1 | ((v64 & 1) == 0))
        {
          *(_BYTE *)(a1 + v65[517]) |= 0x10u;
          *(_BYTE *)(a1 + v65[517]) |= 8u;
          goto LABEL_101;
        }
        if (v17)
        {
          while (2)
          {
            while (1)
            {
              v60 = *v17++;
              v59 = v60;
              if (v60 == 2)
                break;
              if (v59 == 3)
              {
                v61 = 8;
                goto LABEL_100;
              }
              if (!v59)
                goto LABEL_101;
            }
            v61 = 16;
LABEL_100:
            *(_BYTE *)(a1 + v65[517]) |= v61;
            continue;
          }
        }
LABEL_101:
        if (v64)
          v3 = *(_BYTE *)(v3 + *v19) == 0;
        else
          v3 = 0;
        if ((v70 & 1) != 0)
        {
          v62 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      case 3:
        if (!v32)
          goto LABEL_70;
        if ((*(_BYTE *)(a1 + 60) & 8) == 0)
        {
          PBReaderReadData();
          v49 = objc_claimAutoreleasedReturnValue();
          v48 = *(void **)(a1 + 24);
          *(_QWORD *)(a1 + 24) = v49;
          goto LABEL_61;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_108;
        v58 = 16 * *(_BYTE *)(a1 + 60);
        goto LABEL_85;
      case 4:
        if ((v67 & 1) == 0)
          goto LABEL_70;
        v50 = 0;
        v51 = 0;
        v39 = 0;
        *(_BYTE *)(a1 + 60) |= 2u;
        while (2)
        {
          v52 = *v18;
          v53 = *(_QWORD *)(v3 + v52);
          v54 = v53 + 1;
          if (v53 == -1 || v54 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v19) = 1;
          }
          else
          {
            v55 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v53);
            *(_QWORD *)(v3 + v52) = v54;
            v39 |= (unint64_t)(v55 & 0x7F) << v50;
            if (v55 < 0)
            {
              v50 += 7;
              v28 = v51++ >= 9;
              if (v28)
              {
                LODWORD(v39) = 0;
                goto LABEL_79;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v19))
          LODWORD(v39) = 0;
LABEL_79:
        v57 = 56;
LABEL_80:
        *(_DWORD *)(a1 + v57) = v39;
        goto LABEL_87;
      default:
        if ((v66 & 1) == 0 || (*(_BYTE *)(a1 + 60) & 4) != 0)
        {
LABEL_70:
          v56 = PBReaderSkipValueWithTag();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if ((v56 & 1) == 0)
          {
            v64 = 0;
            goto LABEL_89;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v44 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v45 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v44;

          }
          v46 = PBUnknownFieldAdd();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if (!v46)
          {
            v64 = 0;
            v65 = &OBJC_IVAR___GEOPDAutocompleteResultSection__readerMarkLength;
            goto LABEL_90;
          }
        }
        goto LABEL_87;
    }
  }
}

void sub_188BD43CC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188BD44AC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDPopularNearbySearchParametersReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDPopularNearbySearchParametersReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDPopularNearbySearchParametersReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDPopularNearbySearchParametersReadAllFrom_initialTag;
  Specified = GEOPDPopularNearbySearchParametersReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    objc_msgSend(*(id *)(a1 + 32), "readAll:", 1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_188BD4718(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188BD48F0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPopularNearbySearchParametersIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v2 = (*(_BYTE *)(a1 + 60) & 0x38) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return v2;
}

void sub_188BD4B38(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188BD4ED8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDPopularNearbySearchResultReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  int *v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  BOOL v28;
  int v29;
  unint64_t v31;
  BOOL v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  GEOMapRegion *v37;
  void *v38;
  char v39;
  unsigned int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  uint64_t v46;
  id v47;
  void *v48;
  int v49;
  char v50;
  char v51;
  int v52;
  int v53;
  char v54;
  void *v55;
  int v57;
  int *v58;
  char v59;
  char v60;
  char v61;
  char v62;
  char v63;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = ((*(unsigned __int8 *)(a1 + 56) >> 2) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 1) & 1);
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v12;
        v13 = v7;
        goto LABEL_8;
      case -3:
        v9 = 1;
        goto LABEL_7;
      case -2:
        v13 = v7;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 != 0;
        v60 = v16 & ~(_BYTE)v11 | v8;
        v61 = v16 | v11 | v60;
        v59 = v9;
        if ((((v16 | v11) | v9) & 1) != 0)
          v17 = 0;
        else
          v17 = a3;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v62 = (v17 == 0) | v16 | v11;
        v63 = v16 | v11;
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v7;
        v14 = v8;
LABEL_8:
        v15 = v11;
LABEL_10:
        ++v10;
        v7 = v13;
        v8 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v19))
      goto LABEL_77;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0)
        goto LABEL_25;
      v21 += 7;
      v28 = v22++ >= 9;
      if (v28)
      {
        v23 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_25:
    v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_27:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_77:
      v57 = 1;
      goto LABEL_78;
    }
    v31 = v23 >> 3;
    v32 = v63;
    if ((v62 & 1) == 0)
    {
      v33 = v17;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    if ((_DWORD)v31 == 3)
    {
      if ((v59 & 1) != 0)
      {
        v39 = 0;
        v40 = 0;
        v41 = 0;
        *(_BYTE *)(a1 + 56) |= 1u;
        while (1)
        {
          v42 = *v18;
          v43 = *(_QWORD *)(v3 + v42);
          v44 = v43 + 1;
          if (v43 == -1 || v44 > *(_QWORD *)(v3 + *v6))
            break;
          v45 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v43);
          *(_QWORD *)(v3 + v42) = v44;
          v41 |= (unint64_t)(v45 & 0x7F) << v39;
          if ((v45 & 0x80) == 0)
            goto LABEL_67;
          v39 += 7;
          v28 = v40++ >= 9;
          if (v28)
          {
            v41 = 0;
            goto LABEL_69;
          }
        }
        *(_BYTE *)(v3 + *v19) = 1;
LABEL_67:
        if (*(_BYTE *)(v3 + *v19))
          v41 = 0;
LABEL_69:
        *(_BYTE *)(a1 + 52) = v41 != 0;
        goto LABEL_76;
      }
      goto LABEL_64;
    }
    if ((_DWORD)v31 != 2)
      break;
    if (v32)
    {
      if ((*(_BYTE *)(a1 + 56) & 8) == 0)
      {
        PBReaderReadString();
        v46 = objc_claimAutoreleasedReturnValue();
        v38 = *(void **)(a1 + 32);
        *(_QWORD *)(a1 + 32) = v46;
LABEL_57:

        --v10;
LABEL_75:
        v19 = (int *)MEMORY[0x1E0D82BC8];
        goto LABEL_76;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        goto LABEL_98;
      v51 = 16 * *(_BYTE *)(a1 + 56);
LABEL_74:
      v10 += v51 >> 7;
      goto LABEL_75;
    }
LABEL_64:
    v50 = PBReaderSkipValueWithTag();
    v19 = (int *)MEMORY[0x1E0D82BC8];
    if ((v50 & 1) == 0)
    {
      v57 = 0;
LABEL_78:
      v58 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
      goto LABEL_79;
    }
LABEL_76:
    if (!(v61 & 1 | (v10 != 0)))
      goto LABEL_77;
  }
  if ((_DWORD)v31 != 1)
  {
    if ((v60 & 1) != 0 && (*(_BYTE *)(a1 + 56) & 2) == 0)
    {
      if (!*(_QWORD *)(a1 + 16))
      {
        v47 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v48 = *(void **)(a1 + 16);
        *(_QWORD *)(a1 + 16) = v47;

      }
      v49 = PBUnknownFieldAdd();
      v19 = (int *)MEMORY[0x1E0D82BC8];
      if (!v49)
      {
        v57 = 0;
        v58 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
        goto LABEL_80;
      }
      goto LABEL_76;
    }
    goto LABEL_64;
  }
  if (!v32)
    goto LABEL_64;
  if ((*(_BYTE *)(a1 + 56) & 4) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0)
      goto LABEL_98;
    v51 = 32 * *(_BYTE *)(a1 + 56);
    goto LABEL_74;
  }
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_98;
  v37 = objc_alloc_init(GEOMapRegion);
  if (GEOMapRegionReadAllFrom((uint64_t)v37, (void *)v3))
  {
    PBReaderRecallMark();
    v38 = *(void **)(a1 + 24);
    *(_QWORD *)(a1 + 24) = v37;
    goto LABEL_57;
  }

LABEL_98:
  v57 = 0;
  v58 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
  v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_79:
  if ((v60 & 1) == 0)
    goto LABEL_81;
LABEL_80:
  *(_BYTE *)(a1 + v58[513]) |= 2u;
LABEL_81:
  if (v63 & 1 | ((v57 & 1) == 0))
  {
    *(_BYTE *)(a1 + v58[513]) |= 4u;
    *(_BYTE *)(a1 + v58[513]) |= 8u;
    goto LABEL_91;
  }
  if (v17)
  {
    while (2)
    {
      while (1)
      {
        v53 = *v17++;
        v52 = v53;
        if (v53 == 1)
          break;
        if (v52 == 2)
        {
          v54 = 8;
          goto LABEL_90;
        }
        if (!v52)
          goto LABEL_91;
      }
      v54 = 4;
LABEL_90:
      *(_BYTE *)(a1 + v58[513]) |= v54;
      continue;
    }
  }
LABEL_91:
  if (v57)
    v3 = *(_BYTE *)(v3 + *v19) == 0;
  else
    v3 = 0;
  if ((v63 & 1) != 0)
  {
    v55 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_188BD5630(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188BD5A54(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDPopularNearbySearchResultReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDPopularNearbySearchResultReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDPopularNearbySearchResultReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDPopularNearbySearchResultReadAllFrom_initialTag;
  Specified = GEOPDPopularNearbySearchResultReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    objc_msgSend(*(id *)(a1 + 24), "readAll:", 1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_188BD5CBC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188BD5E70(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPopularNearbySearchResultIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v2 = (*(_BYTE *)(a1 + 56) & 0x1C) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return v2;
}

void sub_188BD6094(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPublisherSuggestionParametersReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  GEOPDViewportInfo *v18;
  void *v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  id v23;
  void *v24;
  _BOOL8 v25;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 2)
        {
          *(_BYTE *)(a1 + 32) |= 1u;
          v20 = *v4;
          v21 = *(_QWORD *)&v3[v20];
          if (v21 <= 0xFFFFFFFFFFFFFFF7 && v21 + 8 <= *(_QWORD *)&v3[*v5])
          {
            v22 = *(_QWORD *)(*(_QWORD *)&v3[*v7] + v21);
            *(_QWORD *)&v3[v20] = v21 + 8;
          }
          else
          {
            v3[*v6] = 1;
            v22 = 0;
          }
          *(_QWORD *)(a1 + 16) = v22;
        }
        else if ((v10 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_36;
          v18 = objc_alloc_init(GEOPDViewportInfo);
          if (!GEOPDViewportInfoReadAllFrom((uint64_t)v18, v3))
          {

            goto LABEL_36;
          }
          PBReaderRecallMark();
          v19 = *(void **)(a1 + 24);
          *(_QWORD *)(a1 + 24) = v18;

        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v23 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v24 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v23;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_36;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v25 = v3[*v6] == 0;
  }
  else
  {
LABEL_36:
    v25 = 0;
  }
  objc_sync_exit(v3);

  return v25;
}

void sub_188BD69E0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPublisherSuggestionResultReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  GEOPDMapsIdentifier *v18;
  id v19;
  void *v20;
  _BOOL8 v21;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_29;
          v18 = objc_alloc_init(GEOPDMapsIdentifier);
          if (!GEOPDMapsIdentifierReadAllFrom((uint64_t)v18, v3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          -[GEOPDPublisherSuggestionResult addPublisherId:](a1, v18);

        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v19 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v20 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v19;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_29;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v21 = v3[*v6] == 0;
  }
  else
  {
LABEL_29:
    v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_188BD7530(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188BD79D0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDPublisherViewParametersReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  int *v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  int *v18;
  int *v19;
  int *v20;
  int *v21;
  char v22;
  unsigned int v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  BOOL v29;
  int v30;
  unint64_t v32;
  BOOL v33;
  int *v34;
  int v35;
  int v36;
  BOOL v37;
  GEOPDMapsIdentifier *v38;
  uint64_t v39;
  id v40;
  void *v41;
  int v42;
  char v43;
  unsigned int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  void *v50;
  char v51;
  char v52;
  int v53;
  char v54;
  void *v55;
  int v57;
  int *v58;
  char v59;
  char v60;
  char v61;
  char v62;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 52);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 48));
  v7 = v6;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = vaddv_s16((int16x4_t)(*(_QWORD *)&vshl_u16((uint16x4_t)(*(_QWORD *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 64)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFFFFFCFFFEFFFDLL) & 0xFF01FF01FF01FF01));
  while (2)
  {
    v14 = 1;
    v15 = 1;
    v16 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v13;
        goto LABEL_8;
      case -3:
        v9 = 1;
        goto LABEL_7;
      case -2:
        v15 = v11;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v17 = v13 > 1;
        v59 = v17 & ~(_BYTE)v12 | v10;
        v60 = v17 | v12 | v59;
        if ((((v17 | v12) | v9) & 1) != 0)
          v18 = 0;
        else
          v18 = a3;
        v61 = (v18 == 0) | v17 | v12;
        v62 = v17 | v12;
        v19 = (int *)MEMORY[0x1E0D82BF0];
        v20 = (int *)MEMORY[0x1E0D82BC8];
        v21 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v13;
LABEL_7:
        v14 = v10;
LABEL_8:
        v15 = v11;
        v16 = v12;
LABEL_10:
        ++v8;
        v10 = v14;
        v11 = v15;
        v12 = v16;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v19) >= *(_QWORD *)(v3 + *v7) || *(_BYTE *)(v3 + *v20))
      goto LABEL_84;
    v22 = 0;
    v23 = 0;
    v24 = 0;
    while (1)
    {
      v25 = *v19;
      v26 = *(_QWORD *)(v3 + v25);
      v27 = v26 + 1;
      if (v26 == -1 || v27 > *(_QWORD *)(v3 + *v7))
        break;
      v28 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v26);
      *(_QWORD *)(v3 + v25) = v27;
      v24 |= (unint64_t)(v28 & 0x7F) << v22;
      if ((v28 & 0x80) == 0)
        goto LABEL_25;
      v22 += 7;
      v29 = v23++ >= 9;
      if (v29)
      {
        v24 = 0;
        v30 = *(unsigned __int8 *)(v3 + *v20);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v20) = 1;
LABEL_25:
    v30 = *(unsigned __int8 *)(v3 + *v20);
    if (*(_BYTE *)(v3 + *v20))
      v24 = 0;
LABEL_27:
    if (v30 || (v24 & 7) == 4)
    {
LABEL_84:
      v57 = 1;
      goto LABEL_85;
    }
    v32 = v24 >> 3;
    v33 = v62;
    if ((v61 & 1) == 0)
    {
      v34 = v18;
      do
      {
        v36 = *v34++;
        v35 = v36;
        v33 = v36 != 0;
        if (v36)
          v37 = v35 == (_DWORD)v32;
        else
          v37 = 1;
      }
      while (!v37);
    }
    switch((int)v32)
    {
      case 1:
        if (!v33)
          goto LABEL_69;
        if ((*(_BYTE *)(a1 + 64) & 4) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_102;
          v38 = objc_alloc_init(GEOPDMapsIdentifier);
          if (GEOPDMapsIdentifierReadAllFrom((uint64_t)v38, (void *)v3))
          {
            PBReaderRecallMark();
            v39 = 24;
            goto LABEL_68;
          }
          goto LABEL_101;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_102;
        v52 = 32 * *(_BYTE *)(a1 + 64);
        goto LABEL_81;
      case 2:
        if ((v9 & 1) == 0)
          goto LABEL_69;
        v43 = 0;
        v44 = 0;
        v45 = 0;
        *(_BYTE *)(a1 + 64) |= 1u;
        while (2)
        {
          v46 = *v19;
          v47 = *(_QWORD *)(v3 + v46);
          v48 = v47 + 1;
          if (v47 == -1 || v48 > *(_QWORD *)(v3 + *v7))
          {
            *(_BYTE *)(v3 + *v20) = 1;
          }
          else
          {
            v49 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v47);
            *(_QWORD *)(v3 + v46) = v48;
            v45 |= (unint64_t)(v49 & 0x7F) << v43;
            if (v49 < 0)
            {
              v43 += 7;
              v29 = v44++ >= 9;
              if (v29)
              {
                LODWORD(v45) = 0;
                goto LABEL_74;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v20))
          LODWORD(v45) = 0;
LABEL_74:
        *(_DWORD *)(a1 + 60) = v45;
        goto LABEL_83;
      case 3:
        if (!v33)
          goto LABEL_69;
        if ((*(_BYTE *)(a1 + 64) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_102;
          v52 = 16 * *(_BYTE *)(a1 + 64);
          goto LABEL_81;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_102;
        v38 = objc_alloc_init(GEOPDPublisherViewResultFilter);
        if (!GEOPDPublisherViewResultFilterReadAllFrom((uint64_t)v38, (void *)v3, v11 & 1))
          goto LABEL_101;
        PBReaderRecallMark();
        v39 = 32;
        goto LABEL_68;
      case 4:
        if (!v33)
          goto LABEL_69;
        if ((*(_BYTE *)(a1 + 64) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_102;
          v52 = 8 * *(_BYTE *)(a1 + 64);
LABEL_81:
          v8 += v52 >> 7;
LABEL_82:
          v20 = (int *)MEMORY[0x1E0D82BC8];
          v7 = (int *)MEMORY[0x1E0D82BD8];
          goto LABEL_83;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_102;
        v38 = objc_alloc_init(GEOPDViewportInfo);
        if (GEOPDViewportInfoReadAllFrom((uint64_t)v38, (void *)v3))
        {
          PBReaderRecallMark();
          v39 = 40;
LABEL_68:
          v50 = *(void **)(a1 + v39);
          *(_QWORD *)(a1 + v39) = v38;

          --v8;
          goto LABEL_82;
        }
LABEL_101:

LABEL_102:
        v57 = 0;
        v58 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
        v20 = (int *)MEMORY[0x1E0D82BC8];
LABEL_86:
        if ((v59 & 1) != 0)
LABEL_87:
          *(_BYTE *)(a1 + v58[524]) |= 2u;
        if (v62 & 1 | ((v57 & 1) == 0))
        {
          *(_BYTE *)(a1 + v58[524]) |= 4u;
          *(_BYTE *)(a1 + v58[524]) |= 8u;
          *(_BYTE *)(a1 + v58[524]) |= 0x10u;
        }
        else if (v18)
        {
          while (1)
          {
            v53 = *v18++;
            v54 = 4;
            switch(v53)
            {
              case 0:
                goto LABEL_95;
              case 1:
                goto LABEL_94;
              case 3:
                v54 = 8;
                goto LABEL_94;
              case 4:
                v54 = 16;
LABEL_94:
                *(_BYTE *)(a1 + v58[524]) |= v54;
                break;
              default:
                continue;
            }
          }
        }
LABEL_95:
        if (v57)
          v3 = *(_BYTE *)(v3 + *v20) == 0;
        else
          v3 = 0;
        if ((v62 & 1) != 0)
        {
          v55 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      default:
        if ((v59 & 1) == 0 || (*(_BYTE *)(a1 + 64) & 2) != 0)
        {
LABEL_69:
          v51 = PBReaderSkipValueWithTag();
          v7 = (int *)MEMORY[0x1E0D82BD8];
          v20 = (int *)MEMORY[0x1E0D82BC8];
          if ((v51 & 1) == 0)
          {
            v57 = 0;
LABEL_85:
            v58 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
            goto LABEL_86;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v40 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v41 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v40;

          }
          v42 = PBUnknownFieldAdd();
          v20 = (int *)MEMORY[0x1E0D82BC8];
          v7 = (int *)MEMORY[0x1E0D82BD8];
          if (!v42)
          {
            v57 = 0;
            v58 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
            goto LABEL_87;
          }
        }
LABEL_83:
        if (!(v60 & 1 | (v8 != 0)))
          goto LABEL_84;
        continue;
    }
  }
}

void sub_188BD81E0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188BD82F0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188BD8774(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDPublisherViewParametersCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 24), "readAll:", 1);
  -[GEOPDPublisherViewResultFilter readAll:](*(_QWORD *)(a1 + 32), 1);
  return objc_msgSend(*(id *)(a1 + 40), "readAll:", 1);
}

unint64_t GEOPDPublisherViewParametersReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 52))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDPublisherViewParametersReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 52) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDPublisherViewParametersReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDPublisherViewParametersReadAllFrom_initialTag;
  Specified = GEOPDPublisherViewParametersReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDPublisherViewParametersCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_188BD8A28(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188BD8BF0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDPublisherViewParametersIsDirty(uint64_t a1)
{
  unsigned int v2;
  uint64_t v4;
  int v5;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v2 = *(unsigned __int8 *)(a1 + 64);
  if ((v2 & 0x24) != 0)
    return 1;
  if ((v2 & 8) != 0)
  {
    v4 = *(_QWORD *)(a1 + 32);
    if (v4)
    {
      os_unfair_lock_lock_with_options();
      os_unfair_lock_assert_owner((const os_unfair_lock *)(v4 + 48));
      v5 = *(_BYTE *)(v4 + 56) & 0x1C;
      os_unfair_lock_unlock((os_unfair_lock_t)(v4 + 48));
      if (v5)
        return 1;
      v2 = *(unsigned __int8 *)(a1 + 64);
    }
  }
  return (v2 >> 4) & 1;
}

os_unfair_lock_s *GEOPDPublisherViewParametersIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOPDPublisherViewParametersIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 14);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_188BD8F30(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188BD93BC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDPublisherViewResultReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BOOL4 v16;
  int v17;
  int *v18;
  _BOOL4 v19;
  int *v20;
  int v21;
  int *v22;
  int *v23;
  char v24;
  unsigned int v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  int v32;
  unint64_t v34;
  BOOL v35;
  int *v36;
  int v37;
  int v38;
  BOOL v39;
  GEOPDPublisherViewResultFilter *v40;
  id v41;
  void *v42;
  int v43;
  int v44;
  void *v45;
  char v47;
  int v48;
  int v49;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1)
      + (*(_BYTE *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1);
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v7 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 != 0;
        v17 = v16 & ~(_DWORD)v11 | v9;
        v49 = v16 | v11;
        if ((((v16 | v11) | v7) & 1) != 0)
          v18 = 0;
        else
          v18 = a3;
        v19 = v8 != 0;
        v20 = (int *)MEMORY[0x1E0D82BF0];
        v21 = 1;
        v22 = (int *)MEMORY[0x1E0D82BC8];
        if (*(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(v3 + *v6))
          goto LABEL_62;
        v47 = v17;
        v48 = v19 | v49 | v17;
        v23 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v8;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_BYTE *)(v3 + *v22))
      goto LABEL_60;
    v24 = 0;
    v25 = 0;
    v26 = 0;
    while (1)
    {
      v27 = *v20;
      v28 = *(_QWORD *)(v3 + v27);
      v29 = v28 + 1;
      if (v28 == -1 || v29 > *(_QWORD *)(v3 + *v6))
        break;
      v30 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v28);
      *(_QWORD *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0)
        goto LABEL_25;
      v24 += 7;
      if (v25++ >= 9)
      {
        v26 = 0;
        v32 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v22) = 1;
LABEL_25:
    v32 = *(unsigned __int8 *)(v3 + *v22);
    if (*(_BYTE *)(v3 + *v22))
      v26 = 0;
LABEL_27:
    if (v32 || (v26 & 7) == 4)
    {
LABEL_60:
      v21 = 1;
      goto LABEL_61;
    }
    v34 = v26 >> 3;
    v35 = v49;
    if (!((v18 == 0) | v49 & 1))
    {
      v36 = v18;
      do
      {
        v38 = *v36++;
        v37 = v38;
        v35 = v38 != 0;
        if (v38)
          v39 = v37 == (_DWORD)v34;
        else
          v39 = 1;
      }
      while (!v39);
    }
    if ((_DWORD)v34 == 2)
      break;
    if ((_DWORD)v34 == 1)
    {
      if (!v35 || (*(_BYTE *)(a1 + 52) & 4) != 0)
        goto LABEL_58;
      if ((PBReaderPlaceMark() & 1) == 0)
        goto LABEL_80;
      v40 = objc_alloc_init(GEOPDPublisherViewResultFilter);
      if (!GEOPDPublisherViewResultFilterReadAllFrom((uint64_t)v40, (void *)v3, v10 & 1))
        goto LABEL_79;
      PBReaderRecallMark();
      -[GEOPDPublisherViewResult _addNoFlagsResultFilter:](a1, v40);
      goto LABEL_50;
    }
    if ((v47 & 1) == 0 || (*(_BYTE *)(a1 + 52) & 1) != 0)
      goto LABEL_58;
    if (!*(_QWORD *)(a1 + 16))
    {
      v41 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
      v42 = *(void **)(a1 + 16);
      *(_QWORD *)(a1 + 16) = v41;

    }
    v21 = PBUnknownFieldAdd();
    v22 = (int *)MEMORY[0x1E0D82BC8];
    if (!v21)
      goto LABEL_63;
LABEL_56:
    if ((v48 & 1) == 0)
      goto LABEL_60;
LABEL_59:
    if (*(_QWORD *)(v3 + *v20) >= *(_QWORD *)(v3 + *v6))
      goto LABEL_60;
  }
  if (!v35 || (*(_BYTE *)(a1 + 52) & 2) != 0)
  {
LABEL_58:
    v21 = PBReaderSkipValueWithTag();
    v22 = (int *)MEMORY[0x1E0D82BC8];
    if ((v21 & v48 & 1) == 0)
      goto LABEL_61;
    goto LABEL_59;
  }
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_80;
  v40 = objc_alloc_init(GEOPDMapsIdentifier);
  if (GEOPDMapsIdentifierReadAllFrom((uint64_t)v40, (void *)v3))
  {
    PBReaderRecallMark();
    -[GEOPDPublisherViewResult _addNoFlagsCollectionId:](a1, v40);
LABEL_50:

    v22 = (int *)MEMORY[0x1E0D82BC8];
    goto LABEL_56;
  }
LABEL_79:

LABEL_80:
  v21 = 0;
  v22 = (int *)MEMORY[0x1E0D82BC8];
LABEL_61:
  LOBYTE(v17) = v47;
LABEL_62:
  if ((v17 & 1) != 0)
LABEL_63:
    *(_BYTE *)(a1 + 52) |= 1u;
  if (v49 & 1 | ((v21 & 1) == 0))
  {
    *(_BYTE *)(a1 + 52) |= 4u;
    *(_BYTE *)(a1 + 52) |= 2u;
    goto LABEL_73;
  }
  if (v18)
  {
    while (1)
    {
      v44 = *v18++;
      v43 = v44;
      if (v44 == 1)
        break;
      if (v43 == 2)
      {
LABEL_69:
        *(_BYTE *)(a1 + 52) |= v43;
      }
      else if (!v43)
      {
        goto LABEL_73;
      }
    }
    LOBYTE(v43) = 4;
    goto LABEL_69;
  }
LABEL_73:
  if (v21)
    v3 = *(_BYTE *)(v3 + *v22) == 0;
  else
    v3 = 0;
  if ((v49 & 1) != 0)
  {
    v45 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_188BD9A9C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188BDA0D8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDPublisherViewResultCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  _BYTE v20[128];
  _BYTE v21[128];
  uint64_t v22;

  v22 = *MEMORY[0x1E0C80C00];
  v16 = 0u;
  v17 = 0u;
  v18 = 0u;
  v19 = 0u;
  v2 = *(id *)(a1 + 32);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v16, v21, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v17;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v17 != v5)
          objc_enumerationMutation(v2);
        -[GEOPDPublisherViewResultFilter readAll:](*(_QWORD *)(*((_QWORD *)&v16 + 1) + 8 * v6++), 1);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v16, v21, 16);
    }
    while (v4);
  }

  v14 = 0u;
  v15 = 0u;
  v12 = 0u;
  v13 = 0u;
  v7 = *(id *)(a1 + 24);
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v12, v20, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v13;
    do
    {
      v11 = 0;
      do
      {
        if (*(_QWORD *)v13 != v10)
          objc_enumerationMutation(v7);
        objc_msgSend(*(id *)(*((_QWORD *)&v12 + 1) + 8 * v11++), "readAll:", 1, (_QWORD)v12);
      }
      while (v9 != v11);
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v12, v20, 16);
    }
    while (v9);
  }

}

unint64_t GEOPDPublisherViewResultReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDPublisherViewResultReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDPublisherViewResultReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDPublisherViewResultReadAllFrom_initialTag;
  Specified = GEOPDPublisherViewResultReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDPublisherViewResultCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_188BDA4C4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188BDA780(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPublisherViewResultIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v2 = (*(_BYTE *)(a1 + 52) & 0xE) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return v2;
}

void sub_188BDAAC8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188BDAE10(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDPublisherViewResultFilterReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  int *v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  BOOL v28;
  int v29;
  unint64_t v31;
  BOOL v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  char v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  GEOPDPublisherViewResultFilterKeyword *v44;
  uint64_t v45;
  void *v46;
  id v47;
  void *v48;
  int v49;
  char v50;
  char v51;
  int v52;
  int v53;
  char v54;
  void *v55;
  int v57;
  int *v58;
  char v59;
  char v60;
  char v61;
  char v62;
  char v63;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = ((*(unsigned __int8 *)(a1 + 56) >> 2) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 1) & 1);
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v7 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 != 0;
        v60 = v16 & ~(_BYTE)v11 | v9;
        v61 = v16 | v11 | v60;
        v59 = v7;
        if ((((v16 | v11) | v7) & 1) != 0)
          v17 = 0;
        else
          v17 = a3;
        v62 = (v17 == 0) | v16 | v11;
        v63 = v16 | v11;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v8;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v19))
      goto LABEL_79;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0)
        goto LABEL_25;
      v21 += 7;
      v28 = v22++ >= 9;
      if (v28)
      {
        v23 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_25:
    v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_27:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_79:
      v57 = 1;
      goto LABEL_80;
    }
    v31 = v23 >> 3;
    v32 = v63;
    if ((v62 & 1) == 0)
    {
      v33 = v17;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    if ((_DWORD)v31 == 3)
    {
      if (!v32)
        goto LABEL_66;
      if ((*(_BYTE *)(a1 + 56) & 8) == 0)
      {
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_100;
        v44 = objc_alloc_init(GEOPDPublisherViewResultFilterKeyword);
        if (!GEOPDPublisherViewResultFilterKeywordReadAllFrom((uint64_t)v44, (void *)v3, v10 & 1))
          goto LABEL_99;
        PBReaderRecallMark();
        v45 = 32;
LABEL_59:
        v46 = *(void **)(a1 + v45);
        *(_QWORD *)(a1 + v45) = v44;

        --v8;
LABEL_77:
        v19 = (int *)MEMORY[0x1E0D82BC8];
        goto LABEL_78;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        goto LABEL_100;
      v51 = 16 * *(_BYTE *)(a1 + 56);
LABEL_76:
      v8 += v51 >> 7;
      goto LABEL_77;
    }
    if ((_DWORD)v31 == 2)
      break;
    if ((_DWORD)v31 == 1)
    {
      if ((v59 & 1) != 0)
      {
        v37 = 0;
        v38 = 0;
        v39 = 0;
        *(_BYTE *)(a1 + 56) |= 1u;
        while (1)
        {
          v40 = *v18;
          v41 = *(_QWORD *)(v3 + v40);
          v42 = v41 + 1;
          if (v41 == -1 || v42 > *(_QWORD *)(v3 + *v6))
            break;
          v43 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v41);
          *(_QWORD *)(v3 + v40) = v42;
          v39 |= (unint64_t)(v43 & 0x7F) << v37;
          if ((v43 & 0x80) == 0)
            goto LABEL_69;
          v37 += 7;
          v28 = v38++ >= 9;
          if (v28)
          {
            LODWORD(v39) = 0;
            goto LABEL_71;
          }
        }
        *(_BYTE *)(v3 + *v19) = 1;
LABEL_69:
        if (*(_BYTE *)(v3 + *v19))
          LODWORD(v39) = 0;
LABEL_71:
        *(_DWORD *)(a1 + 52) = v39;
        goto LABEL_78;
      }
    }
    else if ((v60 & 1) != 0 && (*(_BYTE *)(a1 + 56) & 2) == 0)
    {
      if (!*(_QWORD *)(a1 + 16))
      {
        v47 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v48 = *(void **)(a1 + 16);
        *(_QWORD *)(a1 + 16) = v47;

      }
      v49 = PBUnknownFieldAdd();
      v19 = (int *)MEMORY[0x1E0D82BC8];
      if (!v49)
      {
        v57 = 0;
        v58 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
        goto LABEL_82;
      }
      goto LABEL_78;
    }
LABEL_66:
    v50 = PBReaderSkipValueWithTag();
    v19 = (int *)MEMORY[0x1E0D82BC8];
    if ((v50 & 1) == 0)
    {
      v57 = 0;
LABEL_80:
      v58 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
      goto LABEL_81;
    }
LABEL_78:
    if (!(v61 & 1 | (v8 != 0)))
      goto LABEL_79;
  }
  if (!v32)
    goto LABEL_66;
  if ((*(_BYTE *)(a1 + 56) & 4) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0)
      goto LABEL_100;
    v51 = 32 * *(_BYTE *)(a1 + 56);
    goto LABEL_76;
  }
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_100;
  v44 = objc_alloc_init(GEOPDPublisherViewResultFilterAddress);
  if (GEOPDPublisherViewResultFilterAddressReadAllFrom((uint64_t)v44, (void *)v3))
  {
    PBReaderRecallMark();
    v45 = 24;
    goto LABEL_59;
  }
LABEL_99:

LABEL_100:
  v57 = 0;
  v58 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
  v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_81:
  if ((v60 & 1) == 0)
    goto LABEL_83;
LABEL_82:
  *(_BYTE *)(a1 + v58[535]) |= 2u;
LABEL_83:
  if (v63 & 1 | ((v57 & 1) == 0))
  {
    *(_BYTE *)(a1 + v58[535]) |= 4u;
    *(_BYTE *)(a1 + v58[535]) |= 8u;
    goto LABEL_93;
  }
  if (v17)
  {
    while (2)
    {
      while (1)
      {
        v53 = *v17++;
        v52 = v53;
        if (v53 == 2)
          break;
        if (v52 == 3)
        {
          v54 = 8;
          goto LABEL_92;
        }
        if (!v52)
          goto LABEL_93;
      }
      v54 = 4;
LABEL_92:
      *(_BYTE *)(a1 + v58[535]) |= v54;
      continue;
    }
  }
LABEL_93:
  if (v57)
    v3 = *(_BYTE *)(v3 + *v19) == 0;
  else
    v3 = 0;
  if ((v63 & 1) != 0)
  {
    v55 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_188BDB58C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188BDB9E0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDPublisherViewResultFilterReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDPublisherViewResultFilterReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDPublisherViewResultFilterReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDPublisherViewResultFilterReadAllFrom_initialTag;
  Specified = GEOPDPublisherViewResultFilterReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_188BDBF90(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188BDC144(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188BDC2F4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPublisherViewResultFilterAddressReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  GEOPDMapsIdentifier *v18;
  void *v19;
  id v20;
  void *v21;
  _BOOL8 v22;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_29;
          v18 = objc_alloc_init(GEOPDMapsIdentifier);
          if (!GEOPDMapsIdentifierReadAllFrom((uint64_t)v18, v3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          v19 = *(void **)(a1 + 16);
          *(_QWORD *)(a1 + 16) = v18;

        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v20 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v21 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v20;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_29;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v22 = v3[*v6] == 0;
  }
  else
  {
LABEL_29:
    v22 = 0;
  }
  objc_sync_exit(v3);

  return v22;
}

void sub_188BDCA44(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPublisherViewResultFilterKeywordReadAllFrom(uint64_t a1, void *a2, int a3)
{
  char *v5;
  int *v6;
  int *v7;
  int *v8;
  int *v9;
  char v10;
  unsigned int v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  int v18;
  GEOPDRelatedSearchSuggestion *v20;
  void *v21;
  id v22;
  void *v23;
  _BOOL8 v24;

  v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    v6 = (int *)MEMORY[0x1E0D82BF0];
    v7 = (int *)MEMORY[0x1E0D82BD8];
    v8 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v5[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v5[*MEMORY[0x1E0D82BD8]])
    {
      v9 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v5[*v8])
          break;
        v10 = 0;
        v11 = 0;
        v12 = 0;
        while (1)
        {
          v13 = *v6;
          v14 = *(_QWORD *)&v5[v13];
          v15 = v14 + 1;
          if (v14 == -1 || v15 > *(_QWORD *)&v5[*v7])
            break;
          v16 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v14);
          *(_QWORD *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0)
            goto LABEL_13;
          v10 += 7;
          if (v11++ >= 9)
          {
            v12 = 0;
            v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        v18 = v5[*v8];
        if (v5[*v8])
          v12 = 0;
LABEL_15:
        if (v18 || (v12 & 7) == 4)
          break;
        if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_29;
          v20 = objc_alloc_init(GEOPDRelatedSearchSuggestion);
          if (!GEOPDRelatedSearchSuggestionReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          v21 = *(void **)(a1 + 16);
          *(_QWORD *)(a1 + 16) = v20;

        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v22 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v23 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v22;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_29;
        }
      }
      while (*(_QWORD *)&v5[*v6] < *(_QWORD *)&v5[*v7]);
    }
    v24 = v5[*v8] == 0;
  }
  else
  {
LABEL_29:
    v24 = 0;
  }
  objc_sync_exit(v5);

  return v24;
}

void sub_188BDD174(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDQueryUnderstandingParametersReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  int *v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  int *v18;
  int *v19;
  int *v20;
  int *v21;
  char v22;
  unsigned int v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  BOOL v29;
  int v30;
  unint64_t v32;
  BOOL v33;
  int *v34;
  int v35;
  int v36;
  BOOL v37;
  char v38;
  unsigned int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  id v45;
  void *v46;
  int v47;
  uint64_t v48;
  void *v49;
  GEOPDViewportInfo *v50;
  uint64_t v51;
  char v52;
  unsigned int v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  char v57;
  char v58;
  uint64_t v59;
  char v60;
  int v61;
  char v62;
  void *v63;
  int v65;
  int *v66;
  char v67;
  char v68;
  char v69;
  char v70;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 60);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 56));
  v7 = v6;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = (vaddv_s16((int16x4_t)(*(_QWORD *)&vshl_u16((uint16x4_t)(*(_QWORD *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 76)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFCFFFBFFFDFFFALL) & 0xFF01FF01FF01FF01))+ ((*(_BYTE *)(a1 + 76) & 4) != 0));
  while (2)
  {
    v14 = 1;
    v15 = 1;
    v16 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v13;
        goto LABEL_8;
      case -3:
        v9 = 1;
        goto LABEL_7;
      case -2:
        v15 = v11;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v17 = v13 > 2;
        v67 = v17 & ~(_BYTE)v12 | v10;
        v68 = v17 | v12 | v67;
        if ((((v17 | v12) | v9) & 1) != 0)
          v18 = 0;
        else
          v18 = a3;
        v19 = (int *)MEMORY[0x1E0D82BF0];
        v20 = (int *)MEMORY[0x1E0D82BC8];
        v69 = (v18 == 0) | v17 | v12;
        v70 = v17 | v12;
        v21 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v13;
LABEL_7:
        v14 = v10;
LABEL_8:
        v15 = v11;
        v16 = v12;
LABEL_10:
        ++v8;
        v10 = v14;
        v11 = v15;
        v12 = v16;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v19) >= *(_QWORD *)(v3 + *v7) || *(_BYTE *)(v3 + *v20))
      goto LABEL_103;
    v22 = 0;
    v23 = 0;
    v24 = 0;
    while (1)
    {
      v25 = *v19;
      v26 = *(_QWORD *)(v3 + v25);
      v27 = v26 + 1;
      if (v26 == -1 || v27 > *(_QWORD *)(v3 + *v7))
        break;
      v28 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v26);
      *(_QWORD *)(v3 + v25) = v27;
      v24 |= (unint64_t)(v28 & 0x7F) << v22;
      if ((v28 & 0x80) == 0)
        goto LABEL_25;
      v22 += 7;
      v29 = v23++ >= 9;
      if (v29)
      {
        v24 = 0;
        v30 = *(unsigned __int8 *)(v3 + *v20);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v20) = 1;
LABEL_25:
    v30 = *(unsigned __int8 *)(v3 + *v20);
    if (*(_BYTE *)(v3 + *v20))
      v24 = 0;
LABEL_27:
    if (v30 || (v24 & 7) == 4)
    {
LABEL_103:
      v65 = 1;
      goto LABEL_104;
    }
    v32 = v24 >> 3;
    v33 = v70;
    if ((v69 & 1) == 0)
    {
      v34 = v18;
      do
      {
        v36 = *v34++;
        v35 = v36;
        v33 = v36 != 0;
        if (v36)
          v37 = v35 == (_DWORD)v32;
        else
          v37 = 1;
      }
      while (!v37);
    }
    switch((int)v32)
    {
      case 1:
        if ((v9 & 1) == 0)
          goto LABEL_81;
        v38 = 0;
        v39 = 0;
        v40 = 0;
        *(_BYTE *)(a1 + 76) |= 1u;
        while (1)
        {
          v41 = *v19;
          v42 = *(_QWORD *)(v3 + v41);
          v43 = v42 + 1;
          if (v42 == -1 || v43 > *(_QWORD *)(v3 + *v7))
            break;
          v44 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v42);
          *(_QWORD *)(v3 + v41) = v43;
          v40 |= (unint64_t)(v44 & 0x7F) << v38;
          if ((v44 & 0x80) == 0)
            goto LABEL_84;
          v38 += 7;
          v29 = v39++ >= 9;
          if (v29)
          {
            LODWORD(v40) = 0;
            goto LABEL_86;
          }
        }
        *(_BYTE *)(v3 + *v20) = 1;
LABEL_84:
        if (*(_BYTE *)(v3 + *v20))
          LODWORD(v40) = 0;
LABEL_86:
        v59 = 68;
        goto LABEL_91;
      case 2:
        if (!v33)
          goto LABEL_81;
        if ((*(_BYTE *)(a1 + 76) & 8) == 0)
        {
          PBReaderReadString();
          v48 = objc_claimAutoreleasedReturnValue();
          v49 = *(void **)(a1 + 24);
          *(_QWORD *)(a1 + 24) = v48;
          goto LABEL_80;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_121;
        v60 = 16 * *(_BYTE *)(a1 + 76);
        goto LABEL_100;
      case 3:
        if (!v33)
          goto LABEL_81;
        if ((*(_BYTE *)(a1 + 76) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_121;
          v60 = 2 * *(_BYTE *)(a1 + 76);
          goto LABEL_100;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_121;
        v50 = objc_alloc_init(GEOPDViewportInfo);
        if (!GEOPDViewportInfoReadAllFrom((uint64_t)v50, (void *)v3))
          goto LABEL_120;
        PBReaderRecallMark();
        v51 = 48;
        goto LABEL_79;
      case 4:
        if ((v9 & 1) == 0)
          goto LABEL_81;
        v52 = 0;
        v53 = 0;
        v40 = 0;
        *(_BYTE *)(a1 + 76) |= 2u;
        while (2)
        {
          v54 = *v19;
          v55 = *(_QWORD *)(v3 + v54);
          v56 = v55 + 1;
          if (v55 == -1 || v56 > *(_QWORD *)(v3 + *v7))
          {
            *(_BYTE *)(v3 + *v20) = 1;
          }
          else
          {
            v57 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v55);
            *(_QWORD *)(v3 + v54) = v56;
            v40 |= (unint64_t)(v57 & 0x7F) << v52;
            if (v57 < 0)
            {
              v52 += 7;
              v29 = v53++ >= 9;
              if (v29)
              {
                LODWORD(v40) = 0;
                goto LABEL_90;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v20))
          LODWORD(v40) = 0;
LABEL_90:
        v59 = 72;
LABEL_91:
        *(_DWORD *)(a1 + v59) = v40;
        goto LABEL_102;
      case 5:
        if (!v33)
          goto LABEL_81;
        if ((*(_BYTE *)(a1 + 76) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_121;
          v60 = 4 * *(_BYTE *)(a1 + 76);
          goto LABEL_100;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_121;
        v50 = objc_alloc_init(GEOPDQueryUnderstandingTaxonomySearchParameters);
        if (!GEOPDQueryUnderstandingTaxonomySearchParametersReadAllFrom((uint64_t)v50, (void *)v3, v11 & 1))goto LABEL_120;
        PBReaderRecallMark();
        v51 = 40;
        goto LABEL_79;
      case 6:
        if (!v33)
          goto LABEL_81;
        if ((*(_BYTE *)(a1 + 76) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_121;
          v60 = 8 * *(_BYTE *)(a1 + 76);
LABEL_100:
          v8 += v60 >> 7;
LABEL_101:
          v20 = (int *)MEMORY[0x1E0D82BC8];
          v7 = (int *)MEMORY[0x1E0D82BD8];
LABEL_102:
          if (!(v68 & 1 | (v8 != 0)))
            goto LABEL_103;
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_121;
        v50 = objc_alloc_init(GEOPDQueryUnderstandingTaxonomyLookupParameters);
        if (GEOPDQueryUnderstandingTaxonomyLookupParametersReadAllFrom((uint64_t)v50, (void *)v3, v11 & 1))
        {
          PBReaderRecallMark();
          v51 = 32;
LABEL_79:
          v49 = *(void **)(a1 + v51);
          *(_QWORD *)(a1 + v51) = v50;
LABEL_80:

          --v8;
          goto LABEL_101;
        }
LABEL_120:

LABEL_121:
        v65 = 0;
        v20 = (int *)MEMORY[0x1E0D82BC8];
LABEL_104:
        v66 = &OBJC_IVAR___GEOPDAutocompleteResultSection__readerMarkLength;
        if ((v67 & 1) != 0)
LABEL_105:
          *(_BYTE *)(a1 + v66[542]) |= 4u;
        if (v70 & 1 | ((v65 & 1) == 0))
        {
          *(_BYTE *)(a1 + v66[542]) |= 8u;
          *(_BYTE *)(a1 + v66[542]) |= 0x40u;
          *(_BYTE *)(a1 + v66[542]) |= 0x20u;
          *(_BYTE *)(a1 + v66[542]) |= 0x10u;
        }
        else if (v18)
        {
          while (1)
          {
            v61 = *v18++;
            v62 = 8;
            switch(v61)
            {
              case 0:
                goto LABEL_114;
              case 2:
                goto LABEL_113;
              case 3:
                v62 = 64;
                goto LABEL_113;
              case 5:
                v62 = 32;
                goto LABEL_113;
              case 6:
                v62 = 16;
LABEL_113:
                *(_BYTE *)(a1 + v66[542]) |= v62;
                break;
              default:
                continue;
            }
          }
        }
LABEL_114:
        if (v65)
          v3 = *(_BYTE *)(v3 + *v20) == 0;
        else
          v3 = 0;
        if ((v70 & 1) != 0)
        {
          v63 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      default:
        if ((v67 & 1) == 0 || (*(_BYTE *)(a1 + 76) & 4) != 0)
        {
LABEL_81:
          v58 = PBReaderSkipValueWithTag();
          v7 = (int *)MEMORY[0x1E0D82BD8];
          v20 = (int *)MEMORY[0x1E0D82BC8];
          if ((v58 & 1) == 0)
          {
            v65 = 0;
            goto LABEL_104;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v45 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v46 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v45;

          }
          v47 = PBUnknownFieldAdd();
          v20 = (int *)MEMORY[0x1E0D82BC8];
          v7 = (int *)MEMORY[0x1E0D82BD8];
          if (!v47)
          {
            v65 = 0;
            v66 = &OBJC_IVAR___GEOPDAutocompleteResultSection__readerMarkLength;
            goto LABEL_105;
          }
        }
        goto LABEL_102;
    }
  }
}

void sub_188BDDD20(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188BDE394(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188BDE470(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDQueryUnderstandingParametersCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 48), "readAll:", 1);
  -[GEOPDQueryUnderstandingTaxonomySearchParameters readAll:](*(_QWORD *)(a1 + 40), 1);
  -[GEOPDQueryUnderstandingTaxonomyLookupParameters readAll:](*(_QWORD *)(a1 + 32), 1);
}

unint64_t GEOPDQueryUnderstandingParametersReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 60))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDQueryUnderstandingParametersReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 60) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDQueryUnderstandingParametersReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDQueryUnderstandingParametersReadAllFrom_initialTag;
  Specified = GEOPDQueryUnderstandingParametersReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDQueryUnderstandingParametersCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_188BDE720(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188BDE92C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDQueryUnderstandingParametersIsDirty(uint64_t a1)
{
  char v2;
  _BOOL8 v3;
  uint64_t v4;
  int v5;
  uint64_t v6;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  v2 = *(_BYTE *)(a1 + 76);
  if ((v2 & 0xC8) != 0)
    return 1;
  if ((*(_BYTE *)(a1 + 76) & 0x20) != 0)
  {
    v4 = *(_QWORD *)(a1 + 40);
    if (v4)
    {
      os_unfair_lock_lock_with_options();
      os_unfair_lock_assert_owner((const os_unfair_lock *)(v4 + 48));
      v5 = *(_BYTE *)(v4 + 56) & 0x1C;
      os_unfair_lock_unlock((os_unfair_lock_t)(v4 + 48));
      if (v5)
        return 1;
      v2 = *(_BYTE *)(a1 + 76);
    }
  }
  if ((v2 & 0x10) == 0)
    return 0;
  v6 = *(_QWORD *)(a1 + 32);
  if (!v6)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(v6 + 48));
  v3 = (*(_BYTE *)(v6 + 52) & 0xE) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(v6 + 48));
  return v3;
}

os_unfair_lock_s *GEOPDQueryUnderstandingParametersIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOPDQueryUnderstandingParametersIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 16);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_188BDECA0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188BDF0D4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDQueryUnderstandingResultReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  char v17;
  unsigned __int8 v18;
  int *v19;
  int *v20;
  int *v21;
  int *v22;
  char v23;
  unsigned int v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  int v31;
  unint64_t v33;
  BOOL v34;
  int *v35;
  int v36;
  int v37;
  BOOL v38;
  GEOPDSearchQueryIntent *v39;
  void *v40;
  id v41;
  void *v42;
  int v43;
  char v44;
  char v45;
  int v46;
  int v47;
  void *v48;
  int v50;
  int *v51;
  char v52;
  char v53;
  char v54;
  BOOL v55;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1)
      + (*(_BYTE *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1);
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v7 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 != 0;
        v17 = v16 & ~(_BYTE)v11 | v9;
        v18 = v16 | v11;
        v52 = v17;
        v53 = v18 | v17;
        if (((v18 | v7) & 1) != 0)
          v19 = 0;
        else
          v19 = a3;
        v20 = (int *)MEMORY[0x1E0D82BF0];
        v54 = (v19 == 0) | v18;
        v55 = v18;
        v21 = (int *)MEMORY[0x1E0D82BC8];
        v22 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v8;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v20) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v21))
      goto LABEL_62;
    v23 = 0;
    v24 = 0;
    v25 = 0;
    while (1)
    {
      v26 = *v20;
      v27 = *(_QWORD *)(v3 + v26);
      v28 = v27 + 1;
      if (v27 == -1 || v28 > *(_QWORD *)(v3 + *v6))
        break;
      v29 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v27);
      *(_QWORD *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0)
        goto LABEL_25;
      v23 += 7;
      if (v24++ >= 9)
      {
        v25 = 0;
        v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v21) = 1;
LABEL_25:
    v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(_BYTE *)(v3 + *v21))
      v25 = 0;
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_62:
      v50 = 1;
      goto LABEL_63;
    }
    v33 = v25 >> 3;
    v34 = v55;
    if ((v54 & 1) == 0)
    {
      v35 = v19;
      do
      {
        v37 = *v35++;
        v36 = v37;
        v34 = v37 != 0;
        if (v37)
          v38 = v36 == (_DWORD)v33;
        else
          v38 = 1;
      }
      while (!v38);
    }
    if ((_DWORD)v33 == 2)
      break;
    if ((_DWORD)v33 == 1)
    {
      if (!v34 || (*(_BYTE *)(a1 + 52) & 2) != 0)
        goto LABEL_56;
      if ((PBReaderPlaceMark() & 1) == 0)
        goto LABEL_82;
      v39 = objc_alloc_init(GEOPDSearchQueryIntent);
      if (!GEOPDSearchQueryIntentReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1))
        goto LABEL_81;
      PBReaderRecallMark();
      -[GEOPDQueryUnderstandingResult _addNoFlagsQueryIntent:](a1, v39);

      goto LABEL_60;
    }
    if ((v52 & 1) == 0 || (*(_BYTE *)(a1 + 52) & 1) != 0)
    {
LABEL_56:
      v44 = PBReaderSkipValueWithTag();
      v21 = (int *)MEMORY[0x1E0D82BC8];
      if ((v44 & 1) == 0)
      {
        v50 = 0;
        goto LABEL_63;
      }
      goto LABEL_61;
    }
    if (!*(_QWORD *)(a1 + 16))
    {
      v41 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
      v42 = *(void **)(a1 + 16);
      *(_QWORD *)(a1 + 16) = v41;

    }
    v43 = PBUnknownFieldAdd();
    v21 = (int *)MEMORY[0x1E0D82BC8];
    if (!v43)
    {
      v50 = 0;
      v51 = &OBJC_IVAR___GEOPDAutocompleteResultSection__readerMarkLength;
      goto LABEL_64;
    }
LABEL_61:
    if (!(v53 & 1 | (v8 != 0)))
      goto LABEL_62;
  }
  if (!v34)
    goto LABEL_56;
  if ((*(_BYTE *)(a1 + 52) & 4) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0)
      goto LABEL_82;
    v8 += *(unsigned __int8 *)(a1 + 52) << 29 >> 31;
    goto LABEL_60;
  }
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_82;
  v39 = objc_alloc_init(GEOPDQueryUnderstandingTaxonomyResult);
  if (GEOPDQueryUnderstandingTaxonomyResultReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1))
  {
    PBReaderRecallMark();
    v40 = *(void **)(a1 + 32);
    *(_QWORD *)(a1 + 32) = v39;

    --v8;
LABEL_60:
    v21 = (int *)MEMORY[0x1E0D82BC8];
    goto LABEL_61;
  }
LABEL_81:

LABEL_82:
  v50 = 0;
  v21 = (int *)MEMORY[0x1E0D82BC8];
LABEL_63:
  v51 = &OBJC_IVAR___GEOPDAutocompleteResultSection__readerMarkLength;
  if ((v52 & 1) == 0)
    goto LABEL_65;
LABEL_64:
  *(_BYTE *)(a1 + v51[554]) |= 1u;
LABEL_65:
  if (v55 || (v50 & 1) == 0)
  {
    *(_BYTE *)(a1 + v51[554]) |= 2u;
    *(_BYTE *)(a1 + v51[554]) |= 4u;
    goto LABEL_75;
  }
  if (v19)
  {
    while (1)
    {
      v47 = *v19++;
      v46 = v47;
      if (v47 == 1)
        break;
      if (v46 == 2)
      {
        v45 = 4;
LABEL_71:
        *(_BYTE *)(a1 + v51[554]) |= v45;
      }
      else if (!v46)
      {
        goto LABEL_75;
      }
    }
    v45 = 2;
    goto LABEL_71;
  }
LABEL_75:
  if (v50)
    v3 = *(_BYTE *)(v3 + *v21) == 0;
  else
    v3 = 0;
  if (v55)
  {
    v48 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_188BDFB94(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188BDFC70(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDQueryUnderstandingResultCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _BYTE v10[128];
  uint64_t v11;

  v11 = *MEMORY[0x1E0C80C00];
  v6 = 0u;
  v7 = 0u;
  v8 = 0u;
  v9 = 0u;
  v1 = *(id *)(a1 + 24);
  v2 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
  if (v2)
  {
    v3 = v2;
    v4 = *(_QWORD *)v7;
    do
    {
      v5 = 0;
      do
      {
        if (*(_QWORD *)v7 != v4)
          objc_enumerationMutation(v1);
        -[GEOPDSearchQueryIntent readAll:](*(_QWORD *)(*((_QWORD *)&v6 + 1) + 8 * v5++), 1);
      }
      while (v3 != v5);
      v3 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
    }
    while (v3);
  }

}

unint64_t GEOPDQueryUnderstandingResultReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDQueryUnderstandingResultReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDQueryUnderstandingResultReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDQueryUnderstandingResultReadAllFrom_initialTag;
  Specified = GEOPDQueryUnderstandingResultReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDQueryUnderstandingResultCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_188BDFFC4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188BE0200(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDQueryUnderstandingResultIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v2 = (*(_BYTE *)(a1 + 52) & 0xE) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return v2;
}

void sub_188BE04B0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188BE0778(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDQueryUnderstandingTaxonomyLookupParametersReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  _BOOL4 v14;
  int v15;
  int v16;
  int *v17;
  _BOOL4 v18;
  int *v19;
  int v20;
  int *v21;
  int v22;
  int *v23;
  char v24;
  unsigned int v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  int v32;
  unint64_t v34;
  BOOL v35;
  int *v36;
  int v37;
  int v38;
  BOOL v39;
  void *v40;
  id v41;
  void *v42;
  char v43;
  int v44;
  int v45;
  void *v46;
  char v48;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1)
      + (*(_BYTE *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v11;
        v12 = v7;
        goto LABEL_8;
      case -3:
        v9 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v11 != 0;
        v15 = v14 | v7;
        v16 = v14 & ~(_DWORD)v7 | v8;
        if (((v15 | v9) & 1) != 0)
          v17 = 0;
        else
          v17 = a3;
        v18 = v10 != 0;
        v19 = (int *)MEMORY[0x1E0D82BF0];
        v20 = 1;
        v21 = (int *)MEMORY[0x1E0D82BC8];
        if (*(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(v3 + *v6))
          goto LABEL_58;
        v48 = v16;
        v22 = v15 | v18 | v16;
        v23 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_7:
        v12 = v7;
        v13 = v8;
LABEL_8:
        ++v10;
        v7 = v12;
        v8 = v13;
        continue;
    }
    break;
  }
  do
  {
    if (*(_BYTE *)(v3 + *v21))
      break;
    v24 = 0;
    v25 = 0;
    v26 = 0;
    while (1)
    {
      v27 = *v19;
      v28 = *(_QWORD *)(v3 + v27);
      v29 = v28 + 1;
      if (v28 == -1 || v29 > *(_QWORD *)(v3 + *v6))
        break;
      v30 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v28);
      *(_QWORD *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0)
        goto LABEL_23;
      v24 += 7;
      if (v25++ >= 9)
      {
        v26 = 0;
        v32 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_25;
      }
    }
    *(_BYTE *)(v3 + *v21) = 1;
LABEL_23:
    v32 = *(unsigned __int8 *)(v3 + *v21);
    if (*(_BYTE *)(v3 + *v21))
      v26 = 0;
LABEL_25:
    if (v32 || (v26 & 7) == 4)
      break;
    v34 = v26 >> 3;
    v35 = v15;
    if (!((v17 == 0) | v15 & 1))
    {
      v36 = v17;
      do
      {
        v38 = *v36++;
        v37 = v38;
        v35 = v38 != 0;
        if (v38)
          v39 = v37 == (_DWORD)v34;
        else
          v39 = 1;
      }
      while (!v39);
    }
    if ((_DWORD)v34 == 2)
    {
      if (!v35 || (*(_BYTE *)(a1 + 52) & 2) != 0)
      {
LABEL_54:
        v20 = PBReaderSkipValueWithTag();
        v21 = (int *)MEMORY[0x1E0D82BC8];
        if ((v20 & v22 & 1) == 0)
          goto LABEL_57;
        continue;
      }
      PBReaderReadString();
      v40 = (void *)objc_claimAutoreleasedReturnValue();
      if (v40)
        -[GEOPDQueryUnderstandingTaxonomyLookupParameters _addNoFlagsCategoryBranch:](a1, v40);
      goto LABEL_46;
    }
    if ((_DWORD)v34 == 1)
    {
      if (!v35 || (*(_BYTE *)(a1 + 52) & 4) != 0)
        goto LABEL_54;
      PBReaderReadString();
      v40 = (void *)objc_claimAutoreleasedReturnValue();
      if (v40)
        -[GEOPDQueryUnderstandingTaxonomyLookupParameters _addNoFlagsIdentifier:](a1, v40);
LABEL_46:

      v21 = (int *)MEMORY[0x1E0D82BC8];
      goto LABEL_52;
    }
    if ((v48 & 1) == 0 || (*(_BYTE *)(a1 + 52) & 1) != 0)
      goto LABEL_54;
    if (!*(_QWORD *)(a1 + 16))
    {
      v41 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
      v42 = *(void **)(a1 + 16);
      *(_QWORD *)(a1 + 16) = v41;

    }
    v43 = PBUnknownFieldAdd();
    v21 = (int *)MEMORY[0x1E0D82BC8];
    if ((v43 & 1) == 0)
    {
      v20 = 0;
      goto LABEL_59;
    }
LABEL_52:
    if ((v22 & 1) == 0)
      break;
  }
  while (*(_QWORD *)(v3 + *v19) < *(_QWORD *)(v3 + *v6));
  v20 = 1;
LABEL_57:
  LOBYTE(v16) = v48;
LABEL_58:
  if ((v16 & 1) != 0)
LABEL_59:
    *(_BYTE *)(a1 + 52) |= 1u;
  if (v15 & 1 | ((v20 & 1) == 0))
  {
    *(_BYTE *)(a1 + 52) |= 4u;
    *(_BYTE *)(a1 + 52) |= 2u;
    goto LABEL_69;
  }
  if (v17)
  {
    while (2)
    {
      while (1)
      {
        v45 = *v17++;
        v44 = v45;
        if (v45 == 1)
          break;
        if (v44 == 2)
          goto LABEL_68;
        if (!v44)
          goto LABEL_69;
      }
      LOBYTE(v44) = 4;
LABEL_68:
      *(_BYTE *)(a1 + 52) |= v44;
      continue;
    }
  }
LABEL_69:
  if (v20)
  {
    v3 = *(_BYTE *)(v3 + *v21) == 0;
    if ((v15 & 1) == 0)
      return v3;
LABEL_73:
    v46 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  else
  {
    v3 = 0;
    if ((v15 & 1) != 0)
      goto LABEL_73;
  }
  return v3;
}

void sub_188BE0D94(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188BE1194(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDQueryUnderstandingTaxonomyLookupParametersReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDQueryUnderstandingTaxonomyLookupParametersReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDQueryUnderstandingTaxonomyLookupParametersReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDQueryUnderstandingTaxonomyLookupParametersReadAllFrom_initialTag;
  Specified = GEOPDQueryUnderstandingTaxonomyLookupParametersReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_188BE13E8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188BE16A4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188BE1978(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDQueryUnderstandingTaxonomyResultReadAllFrom(uint64_t a1, void *a2, int a3)
{
  char *v5;
  int *v6;
  int *v7;
  int *v8;
  int *v9;
  char v10;
  unsigned int v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  int v18;
  GEOPDQueryUnderstandingTaxonomyResultItem *v20;
  id v21;
  void *v22;
  _BOOL8 v23;

  v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    v6 = (int *)MEMORY[0x1E0D82BF0];
    v7 = (int *)MEMORY[0x1E0D82BD8];
    v8 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v5[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v5[*MEMORY[0x1E0D82BD8]])
    {
      v9 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v5[*v8])
          break;
        v10 = 0;
        v11 = 0;
        v12 = 0;
        while (1)
        {
          v13 = *v6;
          v14 = *(_QWORD *)&v5[v13];
          v15 = v14 + 1;
          if (v14 == -1 || v15 > *(_QWORD *)&v5[*v7])
            break;
          v16 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v14);
          *(_QWORD *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0)
            goto LABEL_13;
          v10 += 7;
          if (v11++ >= 9)
          {
            v12 = 0;
            v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        v18 = v5[*v8];
        if (v5[*v8])
          v12 = 0;
LABEL_15:
        if (v18 || (v12 & 7) == 4)
          break;
        if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_29;
          v20 = objc_alloc_init(GEOPDQueryUnderstandingTaxonomyResultItem);
          if (!GEOPDQueryUnderstandingTaxonomyResultItemReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          -[GEOPDQueryUnderstandingTaxonomyResult addResultItem:](a1, v20);

        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v21 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v22 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v21;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_29;
        }
      }
      while (*(_QWORD *)&v5[*v6] < *(_QWORD *)&v5[*v7]);
    }
    v23 = v5[*v8] == 0;
  }
  else
  {
LABEL_29:
    v23 = 0;
  }
  objc_sync_exit(v5);

  return v23;
}

void sub_188BE2168(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDQueryUnderstandingTaxonomyResultItemReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  int *v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  int *v18;
  int *v19;
  int *v20;
  int *v21;
  char v22;
  unsigned int v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  BOOL v29;
  int v30;
  unint64_t v32;
  BOOL v33;
  int *v34;
  int v35;
  int v36;
  BOOL v37;
  char v38;
  unsigned int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  GEOPDQueryUnderstandingTaxonomyResultItemBrand *v45;
  uint64_t v46;
  void *v47;
  id v48;
  void *v49;
  int v50;
  char v51;
  char v52;
  int v53;
  int v54;
  char v55;
  void *v56;
  int v58;
  int *v59;
  char v60;
  char v61;
  char v62;
  char v63;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = v6;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = ((*(unsigned __int8 *)(a1 + 56) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 2) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 1) & 1);
  while (2)
  {
    v14 = 1;
    v15 = 1;
    v16 = 1;
    switch(a3[v9])
    {
      case -4:
        ++v13;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v15 = v11;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v17 = v13 != 0;
        v60 = v17 & ~(_BYTE)v12 | v10;
        v61 = v17 | v12 | v60;
        if ((((v17 | v12) | v8) & 1) != 0)
          v18 = 0;
        else
          v18 = a3;
        v19 = (int *)MEMORY[0x1E0D82BF0];
        v20 = (int *)MEMORY[0x1E0D82BC8];
        v62 = (v18 == 0) | v17 | v12;
        v63 = v17 | v12;
        v21 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v13;
LABEL_7:
        v14 = v10;
LABEL_8:
        v15 = v11;
        v16 = v12;
LABEL_10:
        ++v9;
        v10 = v14;
        v11 = v15;
        v12 = v16;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v19) >= *(_QWORD *)(v3 + *v7) || *(_BYTE *)(v3 + *v20))
      goto LABEL_79;
    v22 = 0;
    v23 = 0;
    v24 = 0;
    while (1)
    {
      v25 = *v19;
      v26 = *(_QWORD *)(v3 + v25);
      v27 = v26 + 1;
      if (v26 == -1 || v27 > *(_QWORD *)(v3 + *v7))
        break;
      v28 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v26);
      *(_QWORD *)(v3 + v25) = v27;
      v24 |= (unint64_t)(v28 & 0x7F) << v22;
      if ((v28 & 0x80) == 0)
        goto LABEL_25;
      v22 += 7;
      v29 = v23++ >= 9;
      if (v29)
      {
        v24 = 0;
        v30 = *(unsigned __int8 *)(v3 + *v20);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v20) = 1;
LABEL_25:
    v30 = *(unsigned __int8 *)(v3 + *v20);
    if (*(_BYTE *)(v3 + *v20))
      v24 = 0;
LABEL_27:
    if (v30 || (v24 & 7) == 4)
    {
LABEL_79:
      v58 = 1;
      goto LABEL_80;
    }
    v32 = v24 >> 3;
    v33 = v63;
    if ((v62 & 1) == 0)
    {
      v34 = v18;
      do
      {
        v36 = *v34++;
        v35 = v36;
        v33 = v36 != 0;
        if (v36)
          v37 = v35 == (_DWORD)v32;
        else
          v37 = 1;
      }
      while (!v37);
    }
    if ((_DWORD)v32 == 3)
    {
      if (!v33)
        goto LABEL_66;
      if ((*(_BYTE *)(a1 + 56) & 4) == 0)
      {
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_99;
        v45 = objc_alloc_init(GEOPDQueryUnderstandingTaxonomyResultItemBrand);
        if (!GEOPDQueryUnderstandingTaxonomyResultItemBrandReadAllFrom((uint64_t)v45, (void *)v3, v11 & 1))
          goto LABEL_98;
        PBReaderRecallMark();
        v46 = 24;
LABEL_59:
        v47 = *(void **)(a1 + v46);
        *(_QWORD *)(a1 + v46) = v45;

        --v9;
LABEL_77:
        v20 = (int *)MEMORY[0x1E0D82BC8];
        v7 = (int *)MEMORY[0x1E0D82BD8];
        goto LABEL_78;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        goto LABEL_99;
      v52 = 32 * *(_BYTE *)(a1 + 56);
LABEL_76:
      v9 += v52 >> 7;
      goto LABEL_77;
    }
    if ((_DWORD)v32 == 2)
      break;
    if ((_DWORD)v32 == 1)
    {
      if ((v8 & 1) == 0)
        goto LABEL_66;
      v38 = 0;
      v39 = 0;
      v40 = 0;
      *(_BYTE *)(a1 + 56) |= 1u;
      while (1)
      {
        v41 = *v19;
        v42 = *(_QWORD *)(v3 + v41);
        v43 = v42 + 1;
        if (v42 == -1 || v43 > *(_QWORD *)(v3 + *v7))
          break;
        v44 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v42);
        *(_QWORD *)(v3 + v41) = v43;
        v40 |= (unint64_t)(v44 & 0x7F) << v38;
        if ((v44 & 0x80) == 0)
          goto LABEL_69;
        v38 += 7;
        v29 = v39++ >= 9;
        if (v29)
        {
          LODWORD(v40) = 0;
          goto LABEL_71;
        }
      }
      *(_BYTE *)(v3 + *v20) = 1;
LABEL_69:
      if (*(_BYTE *)(v3 + *v20))
        LODWORD(v40) = 0;
LABEL_71:
      *(_DWORD *)(a1 + 52) = v40;
    }
    else
    {
      if ((v60 & 1) == 0 || (*(_BYTE *)(a1 + 56) & 2) != 0)
      {
LABEL_66:
        v51 = PBReaderSkipValueWithTag();
        v7 = (int *)MEMORY[0x1E0D82BD8];
        v20 = (int *)MEMORY[0x1E0D82BC8];
        if ((v51 & 1) == 0)
        {
          v58 = 0;
          goto LABEL_80;
        }
        goto LABEL_78;
      }
      if (!*(_QWORD *)(a1 + 16))
      {
        v48 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v49 = *(void **)(a1 + 16);
        *(_QWORD *)(a1 + 16) = v48;

      }
      v50 = PBUnknownFieldAdd();
      v20 = (int *)MEMORY[0x1E0D82BC8];
      v7 = (int *)MEMORY[0x1E0D82BD8];
      if (!v50)
      {
        v58 = 0;
        v59 = &OBJC_IVAR___GEOPDAutocompleteResultSection__readerMarkLength;
        goto LABEL_81;
      }
    }
LABEL_78:
    if (!(v61 & 1 | (v9 != 0)))
      goto LABEL_79;
  }
  if (!v33)
    goto LABEL_66;
  if ((*(_BYTE *)(a1 + 56) & 8) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0)
      goto LABEL_99;
    v52 = 16 * *(_BYTE *)(a1 + 56);
    goto LABEL_76;
  }
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_99;
  v45 = objc_alloc_init(GEOPDQueryUnderstandingTaxonomyResultItemCategory);
  if (GEOPDQueryUnderstandingTaxonomyResultItemCategoryReadAllFrom((uint64_t)v45, (void *)v3))
  {
    PBReaderRecallMark();
    v46 = 32;
    goto LABEL_59;
  }
LABEL_98:

LABEL_99:
  v58 = 0;
  v20 = (int *)MEMORY[0x1E0D82BC8];
LABEL_80:
  v59 = &OBJC_IVAR___GEOPDAutocompleteResultSection__readerMarkLength;
  if ((v60 & 1) == 0)
    goto LABEL_82;
LABEL_81:
  *(_BYTE *)(a1 + v59[571]) |= 2u;
LABEL_82:
  if (v63 & 1 | ((v58 & 1) == 0))
  {
    *(_BYTE *)(a1 + v59[571]) |= 8u;
    *(_BYTE *)(a1 + v59[571]) |= 4u;
    goto LABEL_92;
  }
  if (v18)
  {
    while (2)
    {
      while (1)
      {
        v54 = *v18++;
        v53 = v54;
        if (v54 == 2)
          break;
        if (v53 == 3)
        {
          v55 = 4;
          goto LABEL_91;
        }
        if (!v53)
          goto LABEL_92;
      }
      v55 = 8;
LABEL_91:
      *(_BYTE *)(a1 + v59[571]) |= v55;
      continue;
    }
  }
LABEL_92:
  if (v58)
    v3 = *(_BYTE *)(v3 + *v20) == 0;
  else
    v3 = 0;
  if ((v63 & 1) != 0)
  {
    v56 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_188BE2F38(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188BE3004(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDQueryUnderstandingTaxonomyResultItemReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDQueryUnderstandingTaxonomyResultItemReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDQueryUnderstandingTaxonomyResultItemReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDQueryUnderstandingTaxonomyResultItemReadAllFrom_initialTag;
  Specified = GEOPDQueryUnderstandingTaxonomyResultItemReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_188BE3258(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188BE340C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188BE35B8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDQueryUnderstandingTaxonomyResultItemBrandReadAllFrom(uint64_t a1, void *a2, int a3)
{
  char *v5;
  int *v6;
  int *v7;
  int *v8;
  int *v9;
  char v10;
  unsigned int v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  int v18;
  GEOPDLocalizedQueryUnderstandingTaxonomyResultItemBrand *v20;
  id v21;
  void *v22;
  _BOOL8 v23;

  v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    v6 = (int *)MEMORY[0x1E0D82BF0];
    v7 = (int *)MEMORY[0x1E0D82BD8];
    v8 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v5[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v5[*MEMORY[0x1E0D82BD8]])
    {
      v9 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v5[*v8])
          break;
        v10 = 0;
        v11 = 0;
        v12 = 0;
        while (1)
        {
          v13 = *v6;
          v14 = *(_QWORD *)&v5[v13];
          v15 = v14 + 1;
          if (v14 == -1 || v15 > *(_QWORD *)&v5[*v7])
            break;
          v16 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v14);
          *(_QWORD *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0)
            goto LABEL_13;
          v10 += 7;
          if (v11++ >= 9)
          {
            v12 = 0;
            v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        v18 = v5[*v8];
        if (v5[*v8])
          v12 = 0;
LABEL_15:
        if (v18 || (v12 & 7) == 4)
          break;
        if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_29;
          v20 = objc_alloc_init(GEOPDLocalizedQueryUnderstandingTaxonomyResultItemBrand);
          if (!GEOPDLocalizedQueryUnderstandingTaxonomyResultItemBrandReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          -[GEOPDQueryUnderstandingTaxonomyResultItemBrand addLocalizedTaxonomyResultBrand:](a1, v20);

        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v21 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v22 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v21;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_29;
        }
      }
      while (*(_QWORD *)&v5[*v6] < *(_QWORD *)&v5[*v7]);
    }
    v23 = v5[*v8] == 0;
  }
  else
  {
LABEL_29:
    v23 = 0;
  }
  objc_sync_exit(v5);

  return v23;
}

void sub_188BE3E08(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDQueryUnderstandingTaxonomyResultItemCategoryReadAllFrom(uint64_t a1, void *a2)
{
  unsigned __int8 *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  int v8;
  char v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  char v17;
  BOOL v18;
  id v19;
  void *v20;
  _BOOL8 v21;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    v7 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      v8 = v3[*v6];
      if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
        break;
      if (v3[*v6])
      {
        v8 = 1;
        break;
      }
      v9 = 0;
      v10 = 0;
      v11 = 0;
      while (1)
      {
        v12 = *v4;
        v13 = *(_QWORD *)&v3[v12];
        v14 = v13 + 1;
        if (v13 == -1 || v14 > *(_QWORD *)&v3[*v5])
          break;
        v15 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v13);
        *(_QWORD *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0)
          goto LABEL_13;
        v9 += 7;
        if (v10++ >= 9)
        {
          v17 = 0;
          v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      v8 = v3[*v6];
      if (v3[*v6])
        v17 = 0;
      else
        v17 = v11;
LABEL_16:
      if (v8)
        v18 = 1;
      else
        v18 = (v17 & 7) == 4;
      if (v18)
        break;
      if (!*(_QWORD *)(a1 + 8))
      {
        v19 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v20 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = v19;

      }
      if ((PBUnknownFieldAdd() & 1) == 0)
        goto LABEL_23;
    }
    v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_188BE456C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDQueryUnderstandingTaxonomySearchParametersReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  char v15;
  unsigned __int8 v16;
  int *v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  BOOL v28;
  int v29;
  unint64_t v31;
  BOOL v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  char v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  void *v44;
  uint64_t v45;
  void *v46;
  id v47;
  void *v48;
  int v49;
  char v50;
  int v51;
  int v52;
  char v53;
  void *v54;
  int v56;
  int *v57;
  char v58;
  char v59;
  char v60;
  BOOL v61;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int8 *)(a1 + 56) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 2) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 1) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v11;
        v12 = v7;
        goto LABEL_8;
      case -3:
        v9 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v11 != 0;
        v15 = v14 & ~(_BYTE)v7;
        v16 = v14 | v7;
        v58 = v15 | v8;
        v59 = v16 | v15 | v8;
        if (((v16 | v9) & 1) != 0)
          v17 = 0;
        else
          v17 = a3;
        v60 = (v17 == 0) | v16;
        v61 = v16;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_7:
        v12 = v7;
        v13 = v8;
LABEL_8:
        ++v10;
        v7 = v12;
        v8 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v19))
      goto LABEL_71;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0)
        goto LABEL_23;
      v21 += 7;
      v28 = v22++ >= 9;
      if (v28)
      {
        v23 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_25;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_23:
    v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_25:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_71:
      v56 = 1;
      goto LABEL_72;
    }
    v31 = v23 >> 3;
    v32 = v61;
    if ((v60 & 1) == 0)
    {
      v33 = v17;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    if ((_DWORD)v31 == 3)
    {
      if (v32 && (*(_BYTE *)(a1 + 56) & 4) == 0)
      {
        PBReaderReadString();
        v44 = (void *)objc_claimAutoreleasedReturnValue();
        if (v44)
          -[GEOPDQueryUnderstandingTaxonomySearchParameters _addNoFlagsCategoryBranch:](a1, v44);

        goto LABEL_70;
      }
      goto LABEL_61;
    }
    if ((_DWORD)v31 != 2)
    {
      if ((_DWORD)v31 == 1)
      {
        if ((v9 & 1) != 0)
        {
          v37 = 0;
          v38 = 0;
          v39 = 0;
          *(_BYTE *)(a1 + 56) |= 1u;
          while (1)
          {
            v40 = *v18;
            v41 = *(_QWORD *)(v3 + v40);
            v42 = v41 + 1;
            if (v41 == -1 || v42 > *(_QWORD *)(v3 + *v6))
              break;
            v43 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v41);
            *(_QWORD *)(v3 + v40) = v42;
            v39 |= (unint64_t)(v43 & 0x7F) << v37;
            if ((v43 & 0x80) == 0)
              goto LABEL_65;
            v37 += 7;
            v28 = v38++ >= 9;
            if (v28)
            {
              LODWORD(v39) = 0;
              goto LABEL_67;
            }
          }
          *(_BYTE *)(v3 + *v19) = 1;
LABEL_65:
          if (*(_BYTE *)(v3 + *v19))
            LODWORD(v39) = 0;
LABEL_67:
          *(_DWORD *)(a1 + 52) = v39;
          goto LABEL_62;
        }
      }
      else if ((v58 & 1) != 0 && (*(_BYTE *)(a1 + 56) & 2) == 0)
      {
        if (!*(_QWORD *)(a1 + 16))
        {
          v47 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
          v48 = *(void **)(a1 + 16);
          *(_QWORD *)(a1 + 16) = v47;

        }
        v49 = PBUnknownFieldAdd();
        v19 = (int *)MEMORY[0x1E0D82BC8];
        if (!v49)
        {
          v56 = 0;
          v57 = &OBJC_IVAR___GEOPDAutocompleteResultSection__readerMarkLength;
          goto LABEL_73;
        }
        goto LABEL_62;
      }
      goto LABEL_61;
    }
    if (v32)
      break;
LABEL_61:
    v50 = PBReaderSkipValueWithTag();
    v19 = (int *)MEMORY[0x1E0D82BC8];
    if ((v50 & 1) == 0)
    {
      v56 = 0;
      goto LABEL_72;
    }
LABEL_62:
    if (!(v59 & 1 | (v10 != 0)))
      goto LABEL_71;
  }
  if ((*(_BYTE *)(a1 + 56) & 8) == 0)
  {
    PBReaderReadString();
    v45 = objc_claimAutoreleasedReturnValue();
    v46 = *(void **)(a1 + 32);
    *(_QWORD *)(a1 + 32) = v45;

    v19 = (int *)MEMORY[0x1E0D82BC8];
    --v10;
    goto LABEL_62;
  }
  if ((PBReaderSkipValueWithTag() & 1) != 0)
  {
    v10 += *(unsigned __int8 *)(a1 + 56) << 28 >> 31;
LABEL_70:
    v19 = (int *)MEMORY[0x1E0D82BC8];
    goto LABEL_62;
  }
  v56 = 0;
  v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_72:
  v57 = &OBJC_IVAR___GEOPDAutocompleteResultSection__readerMarkLength;
  if ((v58 & 1) == 0)
    goto LABEL_74;
LABEL_73:
  *(_BYTE *)(a1 + v57[583]) |= 2u;
LABEL_74:
  if (v61 || (v56 & 1) == 0)
  {
    *(_BYTE *)(a1 + v57[583]) |= 8u;
    *(_BYTE *)(a1 + v57[583]) |= 4u;
    goto LABEL_84;
  }
  if (v17)
  {
    while (2)
    {
      while (1)
      {
        v52 = *v17++;
        v51 = v52;
        if (v52 == 2)
          break;
        if (v51 == 3)
        {
          v53 = 4;
          goto LABEL_83;
        }
        if (!v51)
          goto LABEL_84;
      }
      v53 = 8;
LABEL_83:
      *(_BYTE *)(a1 + v57[583]) |= v53;
      continue;
    }
  }
LABEL_84:
  if (v56)
    v3 = *(_BYTE *)(v3 + *v19) == 0;
  else
    v3 = 0;
  if (v61)
  {
    v54 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_188BE4D80(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188BE51B8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188BE5280(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDQueryUnderstandingTaxonomySearchParametersReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDQueryUnderstandingTaxonomySearchParametersReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDQueryUnderstandingTaxonomySearchParametersReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDQueryUnderstandingTaxonomySearchParametersReadAllFrom_initialTag;
  Specified = GEOPDQueryUnderstandingTaxonomySearchParametersReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_188BE54D4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188BE5734(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188BE59B4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDRecentRouteInfoReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  char v15;
  unsigned __int8 v16;
  int *v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  BOOL v28;
  int v29;
  unint64_t v31;
  BOOL v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  void *v40;
  int v41;
  char v42;
  unsigned int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  char v48;
  void *v49;
  void *v50;
  char v51;
  __int16 v52;
  int v53;
  __int16 v54;
  void *v55;
  int v57;
  int *v58;
  char v59;
  char v60;
  char v61;
  BOOL v62;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 88));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 84);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 80));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int16 *)(a1 + 96) >> 1) & 1)
      + (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 96)), (uint16x4_t)0xFFFAFFFCFFF8FFF9), (int8x8_t)0x1000100010001))+ ((*(_WORD *)(a1 + 96) >> 5) & 1)+ ((*(_WORD *)(a1 + 96) >> 2) & 1)+ ((*(_WORD *)(a1 + 96) >> 3) & 1));
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v11;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_9;
      case 0:
        v14 = v11 > 4;
        v15 = v14 & ~(_BYTE)v10 | v9;
        v16 = v14 | v10;
        v59 = v15;
        v60 = v16 | v15;
        if (((v16 | v8) & 1) != 0)
          v17 = 0;
        else
          v17 = a3;
        v61 = (v17 == 0) | v16;
        v62 = v16;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_7:
        v12 = v9;
LABEL_8:
        v13 = v10;
LABEL_9:
        ++v7;
        v9 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (*(_QWORD *)(v3 + *v18) < *(_QWORD *)(v3 + *v6) && !*(_BYTE *)(v3 + *v19))
  {
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0)
        goto LABEL_24;
      v21 += 7;
      v28 = v22++ >= 9;
      if (v28)
      {
        v23 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_26;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_24:
    v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_26:
    if (v29 || (v23 & 7) == 4)
      break;
    v31 = v23 >> 3;
    v32 = v62;
    if ((v61 & 1) == 0)
    {
      v33 = v17;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if (!v32)
          goto LABEL_76;
        if ((*(_WORD *)(a1 + 96) & 0x100) == 0)
        {
          PBReaderReadData();
          v37 = objc_claimAutoreleasedReturnValue();
          v38 = 72;
          goto LABEL_75;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_118;
        v52 = *(_WORD *)(a1 + 96) << 7;
        goto LABEL_94;
      case 2:
        if (!v32)
          goto LABEL_76;
        if ((*(_WORD *)(a1 + 96) & 0x40) == 0)
        {
          PBReaderReadData();
          v37 = objc_claimAutoreleasedReturnValue();
          v38 = 56;
          goto LABEL_75;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_118;
        v52 = *(_WORD *)(a1 + 96) << 9;
        goto LABEL_94;
      case 3:
        if (!v32)
          goto LABEL_76;
        if ((*(_WORD *)(a1 + 96) & 0x20) == 0)
        {
          PBReaderReadData();
          v37 = objc_claimAutoreleasedReturnValue();
          v38 = 48;
          goto LABEL_75;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_118;
        v52 = *(_WORD *)(a1 + 96) << 10;
        goto LABEL_94;
      case 4:
        if ((v8 & 1) == 0)
          goto LABEL_76;
        v42 = 0;
        v43 = 0;
        v44 = 0;
        *(_WORD *)(a1 + 96) |= 1u;
        while (2)
        {
          v45 = *v18;
          v46 = *(_QWORD *)(v3 + v45);
          v47 = v46 + 1;
          if (v46 == -1 || v47 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v19) = 1;
          }
          else
          {
            v48 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v46);
            *(_QWORD *)(v3 + v45) = v47;
            v44 |= (unint64_t)(v48 & 0x7F) << v42;
            if (v48 < 0)
            {
              v42 += 7;
              v28 = v43++ >= 9;
              if (v28)
              {
                LODWORD(v44) = 0;
                goto LABEL_81;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v19))
          LODWORD(v44) = 0;
LABEL_81:
        *(_DWORD *)(a1 + 92) = v44;
        goto LABEL_96;
      case 5:
        if (!v32)
          goto LABEL_76;
        if ((*(_WORD *)(a1 + 96) & 4) == 0)
        {
          PBReaderReadData();
          v37 = objc_claimAutoreleasedReturnValue();
          v38 = 24;
          goto LABEL_75;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_118;
        v52 = *(_WORD *)(a1 + 96) << 13;
        goto LABEL_94;
      case 6:
        if (!v32 || (*(_WORD *)(a1 + 96) & 0x80) != 0)
          goto LABEL_76;
        PBReaderReadData();
        v49 = (void *)objc_claimAutoreleasedReturnValue();
        if (v49)
          -[GEOPDRecentRouteInfo _addNoFlagsZilchPointSegment:](a1, v49);

        goto LABEL_95;
      case 7:
        if (!v32)
          goto LABEL_76;
        if ((*(_WORD *)(a1 + 96) & 8) == 0)
        {
          PBReaderReadData();
          v37 = objc_claimAutoreleasedReturnValue();
          v38 = 32;
          goto LABEL_75;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_118;
        v52 = *(_WORD *)(a1 + 96) << 12;
        goto LABEL_94;
      case 8:
        if (!v32)
          goto LABEL_76;
        if ((*(_WORD *)(a1 + 96) & 0x10) == 0)
        {
          PBReaderReadData();
          v37 = objc_claimAutoreleasedReturnValue();
          v38 = 40;
LABEL_75:
          v50 = *(void **)(a1 + v38);
          *(_QWORD *)(a1 + v38) = v37;

          v19 = (int *)MEMORY[0x1E0D82BC8];
          --v7;
          goto LABEL_96;
        }
        if ((PBReaderSkipValueWithTag() & 1) != 0)
        {
          v52 = *(_WORD *)(a1 + 96) << 11;
LABEL_94:
          v7 += v52 >> 15;
LABEL_95:
          v19 = (int *)MEMORY[0x1E0D82BC8];
          goto LABEL_96;
        }
LABEL_118:
        v57 = 0;
        v58 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
        v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_99:
        if ((v59 & 1) != 0)
LABEL_100:
          *(_WORD *)(a1 + v58[544]) |= 2u;
        if (v62 || (v57 & 1) == 0)
        {
          *(_WORD *)(a1 + v58[544]) |= 0x100u;
          *(_WORD *)(a1 + v58[544]) |= 0x80u;
          *(_WORD *)(a1 + v58[544]) |= 0x10u;
          *(_WORD *)(a1 + v58[544]) |= 0x40u;
          *(_WORD *)(a1 + v58[544]) |= 0x20u;
          *(_WORD *)(a1 + v58[544]) |= 4u;
          *(_WORD *)(a1 + v58[544]) |= 8u;
        }
        else if (v17)
        {
          while (1)
          {
            v53 = *v17++;
            v54 = 256;
            switch(v53)
            {
              case 0:
                goto LABEL_112;
              case 1:
                goto LABEL_111;
              case 2:
                v54 = 64;
                goto LABEL_111;
              case 3:
                v54 = 32;
                goto LABEL_111;
              case 5:
                v54 = 4;
                goto LABEL_111;
              case 6:
                v54 = 128;
                goto LABEL_111;
              case 7:
                v54 = 8;
                goto LABEL_111;
              case 8:
                v54 = 16;
LABEL_111:
                *(_WORD *)(a1 + v58[544]) |= v54;
                break;
              default:
                continue;
            }
          }
        }
LABEL_112:
        if (v57)
          v3 = *(_BYTE *)(v3 + *v19) == 0;
        else
          v3 = 0;
        if (v62)
        {
          v55 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      default:
        if ((v59 & 1) == 0 || (*(_WORD *)(a1 + 96) & 2) != 0)
        {
LABEL_76:
          v51 = PBReaderSkipValueWithTag();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if ((v51 & 1) == 0)
          {
            v57 = 0;
LABEL_98:
            v58 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
            goto LABEL_99;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v39 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v40 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v39;

          }
          v41 = PBUnknownFieldAdd();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if (!v41)
          {
            v57 = 0;
            v58 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
            goto LABEL_100;
          }
        }
LABEL_96:
        if (!(v60 & 1 | (v7 != 0)))
          goto LABEL_97;
        break;
    }
  }
LABEL_97:
  v57 = 1;
  goto LABEL_98;
}

void sub_188BE6580(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188BE68B0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188BE71E0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188BE72C4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDRecentRouteInfoReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 84))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDRecentRouteInfoReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 88));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 80) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 84) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDRecentRouteInfoReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDRecentRouteInfoReadAllFrom_initialTag;
  Specified = GEOPDRecentRouteInfoReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 88));
  return Specified;
}

void sub_188BE7A9C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188BE7D88(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDRecentRouteInfoIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 88));
  v2 = (*(_WORD *)(a1 + 96) & 0x3FC) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 88));
  return v2;
}

void sub_188BE811C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDRefreshIdLookUpParametersReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  GEOPDMapsIdentifier *v18;
  id v19;
  void *v20;
  _BOOL8 v21;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_29;
          v18 = objc_alloc_init(GEOPDMapsIdentifier);
          if (!GEOPDMapsIdentifierReadAllFrom((uint64_t)v18, v3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          -[GEOPDRefreshIdLookUpParameters addMapsId:](a1, v18);

        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v19 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v20 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v19;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_29;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v21 = v3[*v6] == 0;
  }
  else
  {
LABEL_29:
    v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_188BE8AF4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDResultDetourInfoReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  BOOL v25;
  int *v26;
  id v27;
  void *v28;
  char v29;
  unsigned int v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  char v35;
  unsigned int v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  char v41;
  unsigned int v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  char v46;
  _BOOL8 v47;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        switch((v10 >> 3))
        {
          case 1u:
            v18 = 0;
            v19 = 0;
            v20 = 0;
            *(_BYTE *)(a1 + 32) |= 2u;
            while (1)
            {
              v21 = *v4;
              v22 = *(_QWORD *)&v3[v21];
              v23 = v22 + 1;
              if (v22 == -1 || v23 > *(_QWORD *)&v3[*v5])
              {
                v26 = &OBJC_IVAR___GEOPDResultDetourInfo__detourTime;
                goto LABEL_56;
              }
              v24 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v22);
              *(_QWORD *)&v3[v21] = v23;
              v20 |= (unint64_t)(v24 & 0x7F) << v18;
              if ((v24 & 0x80) == 0)
                break;
              v18 += 7;
              v25 = v19++ > 8;
              if (v25)
              {
                LODWORD(v20) = 0;
                v26 = &OBJC_IVAR___GEOPDResultDetourInfo__detourTime;
                goto LABEL_59;
              }
            }
            v26 = &OBJC_IVAR___GEOPDResultDetourInfo__detourTime;
            goto LABEL_57;
          case 2u:
            v29 = 0;
            v30 = 0;
            v20 = 0;
            *(_BYTE *)(a1 + 32) |= 8u;
            while (2)
            {
              v31 = *v4;
              v32 = *(_QWORD *)&v3[v31];
              v33 = v32 + 1;
              if (v32 == -1 || v33 > *(_QWORD *)&v3[*v5])
              {
                v26 = &OBJC_IVAR___GEOPDResultDetourInfo__timeToPlace;
                goto LABEL_56;
              }
              v34 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v32);
              *(_QWORD *)&v3[v31] = v33;
              v20 |= (unint64_t)(v34 & 0x7F) << v29;
              if (v34 < 0)
              {
                v29 += 7;
                v25 = v30++ > 8;
                if (v25)
                {
                  LODWORD(v20) = 0;
                  v26 = &OBJC_IVAR___GEOPDResultDetourInfo__timeToPlace;
                  goto LABEL_59;
                }
                continue;
              }
              break;
            }
            v26 = &OBJC_IVAR___GEOPDResultDetourInfo__timeToPlace;
            goto LABEL_57;
          case 3u:
            v35 = 0;
            v36 = 0;
            v20 = 0;
            *(_BYTE *)(a1 + 32) |= 1u;
            while (2)
            {
              v37 = *v4;
              v38 = *(_QWORD *)&v3[v37];
              v39 = v38 + 1;
              if (v38 == -1 || v39 > *(_QWORD *)&v3[*v5])
              {
                v26 = &OBJC_IVAR___GEOPDResultDetourInfo__detourDistance;
                goto LABEL_56;
              }
              v40 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v38);
              *(_QWORD *)&v3[v37] = v39;
              v20 |= (unint64_t)(v40 & 0x7F) << v35;
              if (v40 < 0)
              {
                v35 += 7;
                v25 = v36++ > 8;
                if (v25)
                {
                  LODWORD(v20) = 0;
                  v26 = &OBJC_IVAR___GEOPDResultDetourInfo__detourDistance;
                  goto LABEL_59;
                }
                continue;
              }
              break;
            }
            v26 = &OBJC_IVAR___GEOPDResultDetourInfo__detourDistance;
            goto LABEL_57;
          case 4u:
            v41 = 0;
            v42 = 0;
            v20 = 0;
            *(_BYTE *)(a1 + 32) |= 4u;
            break;
          default:
            if (!*(_QWORD *)(a1 + 8))
            {
              v27 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
              v28 = *(void **)(a1 + 8);
              *(_QWORD *)(a1 + 8) = v27;

            }
            if ((PBUnknownFieldAdd() & 1) == 0)
              goto LABEL_67;
            continue;
        }
        while (1)
        {
          v43 = *v4;
          v44 = *(_QWORD *)&v3[v43];
          v45 = v44 + 1;
          if (v44 == -1 || v45 > *(_QWORD *)&v3[*v5])
            break;
          v46 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v44);
          *(_QWORD *)&v3[v43] = v45;
          v20 |= (unint64_t)(v46 & 0x7F) << v41;
          if ((v46 & 0x80) == 0)
          {
            v26 = &OBJC_IVAR___GEOPDResultDetourInfo__distanceToPlace;
            goto LABEL_57;
          }
          v41 += 7;
          v25 = v42++ > 8;
          if (v25)
          {
            LODWORD(v20) = 0;
            v26 = &OBJC_IVAR___GEOPDResultDetourInfo__distanceToPlace;
            goto LABEL_59;
          }
        }
        v26 = &OBJC_IVAR___GEOPDResultDetourInfo__distanceToPlace;
LABEL_56:
        v3[*v6] = 1;
LABEL_57:
        if (v3[*v6])
          LODWORD(v20) = 0;
LABEL_59:
        *(_DWORD *)(a1 + *v26) = v20;
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v47 = v3[*v6] == 0;
  }
  else
  {
LABEL_67:
    v47 = 0;
  }
  objc_sync_exit(v3);

  return v47;
}

void sub_188BE9A40(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDResultDetourInfoReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOPDResultDetourInfoReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188BE9AA0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188BEA190(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDReverseGeocodingParametersReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BOOL4 v17;
  int v18;
  int v19;
  int *v20;
  int *v21;
  _BOOL4 v22;
  int v23;
  int *v24;
  int *v25;
  char v26;
  unsigned int v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  BOOL v33;
  int v34;
  unint64_t v36;
  BOOL v37;
  int *v38;
  int v39;
  int v40;
  BOOL v41;
  GEOLatLng *v42;
  id v43;
  void *v44;
  char v45;
  unsigned int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  char v51;
  char v52;
  unsigned int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  char v58;
  char v59;
  int v60;
  int v61;
  void *v62;
  char v64;
  char v65;
  int v66;
  char v67;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
  v13 = ((*(unsigned __int8 *)(a1 + 60) >> 4) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 2) & 1);
  while (2)
  {
    v14 = 1;
    v15 = 1;
    v16 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v13;
        goto LABEL_8;
      case -3:
        v7 = 1;
        goto LABEL_7;
      case -2:
        v15 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v17 = v13 != 0;
        v18 = v17 & ~(_DWORD)v11 | v9;
        v19 = v17 | v11;
        if ((((v17 | v11) | v7) & 1) != 0)
          v20 = 0;
        else
          v20 = a3;
        v21 = (int *)MEMORY[0x1E0D82BF0];
        v22 = v8 != 0;
        v23 = 1;
        if (*(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(v3 + *v6))
          goto LABEL_87;
        v64 = v18;
        v66 = v22 | v19 | v18;
        v67 = (v20 == 0) | v19;
        v24 = (int *)MEMORY[0x1E0D82BC8];
        v25 = (int *)MEMORY[0x1E0D82BB8];
        v65 = v17 | v11;
        break;
      default:
        ++v13;
LABEL_7:
        v14 = v9;
LABEL_8:
        v15 = v10;
        v16 = v11;
LABEL_10:
        ++v8;
        v9 = v14;
        v10 = v15;
        v11 = v16;
        continue;
    }
    break;
  }
  while (!*(_BYTE *)(v3 + *v24))
  {
    v26 = 0;
    v27 = 0;
    v28 = 0;
    while (1)
    {
      v29 = *v21;
      v30 = *(_QWORD *)(v3 + v29);
      v31 = v30 + 1;
      if (v30 == -1 || v31 > *(_QWORD *)(v3 + *v6))
        break;
      v32 = *(_BYTE *)(*(_QWORD *)(v3 + *v25) + v30);
      *(_QWORD *)(v3 + v29) = v31;
      v28 |= (unint64_t)(v32 & 0x7F) << v26;
      if ((v32 & 0x80) == 0)
        goto LABEL_25;
      v26 += 7;
      v33 = v27++ >= 9;
      if (v33)
      {
        v28 = 0;
        v34 = *(unsigned __int8 *)(v3 + *v24);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v24) = 1;
LABEL_25:
    v34 = *(unsigned __int8 *)(v3 + *v24);
    if (*(_BYTE *)(v3 + *v24))
      v28 = 0;
LABEL_27:
    if (v34 || (v28 & 7) == 4)
      break;
    v36 = v28 >> 3;
    v37 = v19;
    if ((v67 & 1) == 0)
    {
      v38 = v20;
      do
      {
        v40 = *v38++;
        v39 = v40;
        v37 = v40 != 0;
        if (v40)
          v41 = v39 == (_DWORD)v36;
        else
          v41 = 1;
      }
      while (!v41);
    }
    switch((int)v36)
    {
      case 1:
        if (!v37 || (*(_BYTE *)(a1 + 60) & 0x10) != 0)
          goto LABEL_72;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_106;
        v42 = objc_alloc_init(GEOLatLng);
        if (!GEOLatLngReadAllFrom((uint64_t)v42, (void *)v3))
          goto LABEL_105;
        PBReaderRecallMark();
        -[GEOPDReverseGeocodingParameters _addNoFlagsLocation:](a1, v42);
        goto LABEL_71;
      case 2:
        if ((v7 & 1) == 0)
          goto LABEL_72;
        v45 = 0;
        v46 = 0;
        v47 = 0;
        *(_BYTE *)(a1 + 60) |= 1u;
        while (2)
        {
          v48 = *v21;
          v49 = *(_QWORD *)(v3 + v48);
          v50 = v49 + 1;
          if (v49 == -1 || v50 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v24) = 1;
          }
          else
          {
            v51 = *(_BYTE *)(*(_QWORD *)(v3 + *v25) + v49);
            *(_QWORD *)(v3 + v48) = v50;
            v47 |= (unint64_t)(v51 & 0x7F) << v45;
            if (v51 < 0)
            {
              v45 += 7;
              v33 = v46++ >= 9;
              if (v33)
              {
                LODWORD(v47) = 0;
                goto LABEL_77;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v24))
          LODWORD(v47) = 0;
LABEL_77:
        *(_DWORD *)(a1 + 52) = v47;
        goto LABEL_82;
      case 3:
        if ((v7 & 1) == 0)
          goto LABEL_72;
        v52 = 0;
        v53 = 0;
        v54 = 0;
        *(_BYTE *)(a1 + 60) |= 2u;
        while (2)
        {
          v55 = *v21;
          v56 = *(_QWORD *)(v3 + v55);
          v57 = v56 + 1;
          if (v56 == -1 || v57 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v24) = 1;
          }
          else
          {
            v58 = *(_BYTE *)(*(_QWORD *)(v3 + *v25) + v56);
            *(_QWORD *)(v3 + v55) = v57;
            v54 |= (unint64_t)(v58 & 0x7F) << v52;
            if (v58 < 0)
            {
              v52 += 7;
              v33 = v53++ >= 9;
              if (v33)
              {
                v54 = 0;
                goto LABEL_81;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v24))
          v54 = 0;
LABEL_81:
        *(_BYTE *)(a1 + 56) = v54 != 0;
        goto LABEL_82;
      case 4:
        if (!v37 || (*(_BYTE *)(a1 + 60) & 8) != 0)
          goto LABEL_72;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_106;
        v42 = objc_alloc_init(GEOLocation);
        if (!GEOLocationReadAllFrom((uint64_t)v42, (void *)v3, v10 & 1))
        {
LABEL_105:

LABEL_106:
          v23 = 0;
          v12 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
          LOBYTE(v19) = v65;
          goto LABEL_86;
        }
        PBReaderRecallMark();
        -[GEOPDReverseGeocodingParameters _addNoFlagsExtendedLocation:](a1, v42);
LABEL_71:

        LOBYTE(v19) = v65;
        v24 = (int *)MEMORY[0x1E0D82BC8];
        goto LABEL_82;
      default:
        if ((v64 & 1) == 0 || (*(_BYTE *)(a1 + 60) & 4) != 0)
        {
LABEL_72:
          v23 = PBReaderSkipValueWithTag();
          v24 = (int *)MEMORY[0x1E0D82BC8];
          LOBYTE(v19) = v65;
          if ((v23 & v66 & 1) == 0)
            goto LABEL_85;
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v43 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v44 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v43;

          }
          v23 = PBUnknownFieldAdd();
          LOBYTE(v19) = v65;
          v24 = (int *)MEMORY[0x1E0D82BC8];
          if (!v23)
          {
            v12 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
            goto LABEL_88;
          }
LABEL_82:
          if ((v66 & 1) == 0)
            goto LABEL_84;
        }
        if (*(_QWORD *)(v3 + *v21) >= *(_QWORD *)(v3 + *v6))
          goto LABEL_84;
        break;
    }
  }
LABEL_84:
  v23 = 1;
LABEL_85:
  v12 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
LABEL_86:
  LOBYTE(v18) = v64;
LABEL_87:
  if ((v18 & 1) != 0)
LABEL_88:
    *(_BYTE *)(a1 + v12[551]) |= 4u;
  if (!(v19 & 1 | ((v23 & 1) == 0)))
  {
    if (!v20)
      goto LABEL_99;
    while (1)
    {
      v61 = *v20++;
      v60 = v61;
      if (v61 == 1)
        break;
      if (v60 == 4)
      {
        v59 = 8;
LABEL_95:
        *(_BYTE *)(a1 + v12[551]) |= v59;
      }
      else if (!v60)
      {
        goto LABEL_99;
      }
    }
    v59 = 16;
    goto LABEL_95;
  }
  *(_BYTE *)(a1 + v12[551]) |= 0x10u;
  *(_BYTE *)(a1 + v12[551]) |= 8u;
LABEL_99:
  if (v23)
  {
    v3 = *(_BYTE *)(v3 + (int)*MEMORY[0x1E0D82BC8]) == 0;
    if ((v19 & 1) == 0)
      return v3;
    goto LABEL_103;
  }
  v3 = 0;
  if ((v19 & 1) != 0)
  {
LABEL_103:
    v62 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void _GEOPDReverseGeocodingParametersCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  _BYTE v20[128];
  _BYTE v21[128];
  uint64_t v22;

  v22 = *MEMORY[0x1E0C80C00];
  v16 = 0u;
  v17 = 0u;
  v18 = 0u;
  v19 = 0u;
  v2 = *(id *)(a1 + 32);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v16, v21, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v17;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v17 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v16 + 1) + 8 * v6++), "readAll:", 1);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v16, v21, 16);
    }
    while (v4);
  }

  v14 = 0u;
  v15 = 0u;
  v12 = 0u;
  v13 = 0u;
  v7 = *(id *)(a1 + 24);
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v12, v20, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v13;
    do
    {
      v11 = 0;
      do
      {
        if (*(_QWORD *)v13 != v10)
          objc_enumerationMutation(v7);
        objc_msgSend(*(id *)(*((_QWORD *)&v12 + 1) + 8 * v11++), "readAll:", 1, (_QWORD)v12);
      }
      while (v9 != v11);
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v12, v20, 16);
    }
    while (v9);
  }

}

unint64_t GEOPDReverseGeocodingParametersReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDReverseGeocodingParametersReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDReverseGeocodingParametersReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDReverseGeocodingParametersReadAllFrom_initialTag;
  Specified = GEOPDReverseGeocodingParametersReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDReverseGeocodingParametersCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_188BEADC4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDReverseGeocodingParametersIsDirty(uint64_t a1)
{
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t i;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _BYTE v11[128];
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  if ((*(_BYTE *)(a1 + 60) & 0x38) != 0)
    return 1;
  if ((*(_BYTE *)(a1 + 60) & 8) == 0)
    return 0;
  v9 = 0u;
  v10 = 0u;
  v7 = 0u;
  v8 = 0u;
  v3 = *(id *)(a1 + 24);
  v2 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
  if (v2)
  {
    v4 = *(_QWORD *)v8;
    while (2)
    {
      for (i = 0; i != v2; ++i)
      {
        if (*(_QWORD *)v8 != v4)
          objc_enumerationMutation(v3);
        if (GEOLocationIsDirty(*(os_unfair_lock_s **)(*((_QWORD *)&v7 + 1) + 8 * i)))
        {
          v2 = 1;
          goto LABEL_15;
        }
      }
      v2 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
      if (v2)
        continue;
      break;
    }
  }
LABEL_15:

  return v2;
}

BOOL GEOPDReverseGeocodingResultReadAllFrom(uint64_t a1, void *a2)
{
  unsigned __int8 *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  int v8;
  char v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  char v17;
  BOOL v18;
  id v19;
  void *v20;
  _BOOL8 v21;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    v7 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      v8 = v3[*v6];
      if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
        break;
      if (v3[*v6])
      {
        v8 = 1;
        break;
      }
      v9 = 0;
      v10 = 0;
      v11 = 0;
      while (1)
      {
        v12 = *v4;
        v13 = *(_QWORD *)&v3[v12];
        v14 = v13 + 1;
        if (v13 == -1 || v14 > *(_QWORD *)&v3[*v5])
          break;
        v15 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v13);
        *(_QWORD *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0)
          goto LABEL_13;
        v9 += 7;
        if (v10++ >= 9)
        {
          v17 = 0;
          v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      v8 = v3[*v6];
      if (v3[*v6])
        v17 = 0;
      else
        v17 = v11;
LABEL_16:
      if (v8)
        v18 = 1;
      else
        v18 = (v17 & 7) == 4;
      if (v18)
        break;
      if (!*(_QWORD *)(a1 + 8))
      {
        v19 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v20 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = v19;

      }
      if ((PBUnknownFieldAdd() & 1) == 0)
        goto LABEL_23;
    }
    v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_188BEB4E8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188BEB754(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchBrowseCategorySuggestionParametersReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  char v17;
  char v18;
  int *v19;
  int *v20;
  int v21;
  int *v22;
  char v23;
  int *v24;
  char v25;
  unsigned int v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  BOOL v32;
  int v33;
  int v34;
  unint64_t v36;
  BOOL v37;
  int *v38;
  int v39;
  int v40;
  BOOL v41;
  GEOPDViewportInfo *v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  char v47;
  unsigned int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  char v53;
  char v54;
  unsigned int v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  char v60;
  char v61;
  unsigned int v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  char v66;
  int *v67;
  int *v68;
  char v69;
  unsigned int v70;
  uint64_t v71;
  int *v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  char v76;
  char v77;
  unsigned int v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  char v83;
  char v84;
  unsigned int v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  char v90;
  char v91;
  unsigned int v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  char v96;
  char v97;
  unsigned int v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  char v103;
  void *v104;
  void *v105;
  id v106;
  void *v107;
  int v108;
  char v109;
  char v110;
  uint64_t v111;
  BOOL v112;
  uint64_t v113;
  __int16 v114;
  char v115;
  unsigned int v116;
  uint64_t v117;
  int *v118;
  uint64_t v119;
  uint64_t v120;
  unint64_t v121;
  char v122;
  int v123;
  __int16 v124;
  void *v125;
  char v127;
  char v128;
  char v129;
  char v130;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 104));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 100);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 96));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = (unsigned __int16)(vaddv_s16((int16x4_t)(*(_QWORD *)&vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 124)), (uint16x4_t)0xFFF6FFF3FFF2FFF7) & 0xFF81FF81FF81FF81))+ ((*(_WORD *)(a1 + 124) >> 12) & 1)+ ((*(_WORD *)(a1 + 124) >> 11) & 1)+ (HIBYTE(*(_WORD *)(a1 + 124)) & 1));
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 > 3;
        v17 = v16 & ~(_BYTE)v11 | v9;
        v18 = v16 | v11;
        if ((((v16 | v11) | v8) & 1) != 0)
          v19 = 0;
        else
          v19 = a3;
        v20 = (int *)MEMORY[0x1E0D82BF0];
        v21 = 1;
        v22 = (int *)MEMORY[0x1E0D82BC8];
        v23 = v16 & ~(_BYTE)v11 | v9;
        if (*(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(v3 + *v6))
          goto LABEL_210;
        v127 = v17;
        v129 = v18 | v17;
        v130 = (v19 == 0) | v18;
        v24 = (int *)MEMORY[0x1E0D82BB8];
        v128 = v18;
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v7;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_BYTE *)(v3 + *v22))
      goto LABEL_208;
    v25 = 0;
    v26 = 0;
    v27 = 0;
    while (1)
    {
      v28 = *v20;
      v29 = *(_QWORD *)(v3 + v28);
      v30 = v29 + 1;
      if (v29 == -1 || v30 > *(_QWORD *)(v3 + *v6))
        break;
      v31 = *(_BYTE *)(*(_QWORD *)(v3 + *v24) + v29);
      *(_QWORD *)(v3 + v28) = v30;
      v27 |= (unint64_t)(v31 & 0x7F) << v25;
      if ((v31 & 0x80) == 0)
        goto LABEL_25;
      v25 += 7;
      v32 = v26++ >= 9;
      if (v32)
      {
        v27 = 0;
        v33 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v22) = 1;
LABEL_25:
    v33 = *(unsigned __int8 *)(v3 + *v22);
    if (*(_BYTE *)(v3 + *v22))
      v27 = 0;
LABEL_27:
    v34 = v27 & 7;
    if (v33 || v34 == 4)
    {
LABEL_208:
      v21 = 1;
      goto LABEL_209;
    }
    v36 = v27 >> 3;
    v37 = v18;
    if ((v130 & 1) == 0)
    {
      v38 = v19;
      do
      {
        v40 = *v38++;
        v39 = v40;
        v37 = v40 != 0;
        if (v40)
          v41 = v39 == (_DWORD)v36;
        else
          v41 = 1;
      }
      while (!v41);
    }
    switch((int)v36)
    {
      case 1:
        if (!v37)
          goto LABEL_150;
        if ((*(_WORD *)(a1 + 124) & 0x4000) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_230;
          v42 = objc_alloc_init(GEOPDViewportInfo);
          if (GEOPDViewportInfoReadAllFrom((uint64_t)v42, (void *)v3))
          {
            PBReaderRecallMark();
            v43 = 88;
            goto LABEL_134;
          }
          goto LABEL_229;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_230;
        v114 = 2 * *(_WORD *)(a1 + 124);
        goto LABEL_190;
      case 2:
        if ((v8 & 1) == 0)
          goto LABEL_150;
        *(_WORD *)(a1 + 124) |= 1u;
        v44 = *v20;
        v45 = *(_QWORD *)(v3 + v44);
        if (v45 <= 0xFFFFFFFFFFFFFFF7 && v45 + 8 <= *(_QWORD *)(v3 + *v6))
        {
          v46 = *(_QWORD *)(*(_QWORD *)(v3 + *v24) + v45);
          *(_QWORD *)(v3 + v44) = v45 + 8;
        }
        else
        {
          *(_BYTE *)(v3 + *v22) = 1;
          v46 = 0;
        }
        *(_QWORD *)(a1 + 64) = v46;
        goto LABEL_193;
      case 3:
        if ((v8 & 1) == 0)
          goto LABEL_150;
        v47 = 0;
        v48 = 0;
        v49 = 0;
        *(_WORD *)(a1 + 124) |= 2u;
        while (2)
        {
          v50 = *v20;
          v51 = *(_QWORD *)(v3 + v50);
          v52 = v51 + 1;
          if (v51 == -1 || v52 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v22) = 1;
          }
          else
          {
            v53 = *(_BYTE *)(*(_QWORD *)(v3 + *v24) + v51);
            *(_QWORD *)(v3 + v50) = v52;
            v49 |= (unint64_t)(v53 & 0x7F) << v47;
            if (v53 < 0)
            {
              v47 += 7;
              v32 = v48++ >= 9;
              if (v32)
              {
                LODWORD(v49) = 0;
                goto LABEL_155;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v22))
          LODWORD(v49) = 0;
LABEL_155:
        v111 = 108;
        goto LABEL_176;
      case 4:
        if ((v8 & 1) == 0)
          goto LABEL_150;
        v54 = 0;
        v55 = 0;
        v56 = 0;
        *(_WORD *)(a1 + 124) |= 0x10u;
        while (2)
        {
          v57 = *v20;
          v58 = *(_QWORD *)(v3 + v57);
          v59 = v58 + 1;
          if (v58 == -1 || v59 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v22) = 1;
          }
          else
          {
            v60 = *(_BYTE *)(*(_QWORD *)(v3 + *v24) + v58);
            *(_QWORD *)(v3 + v57) = v59;
            v56 |= (unint64_t)(v60 & 0x7F) << v54;
            if (v60 < 0)
            {
              v54 += 7;
              v32 = v55++ >= 9;
              if (v32)
              {
                v56 = 0;
                goto LABEL_159;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v22))
          v56 = 0;
LABEL_159:
        v112 = v56 != 0;
        v113 = 120;
        goto LABEL_181;
      case 5:
        if ((v8 & 1) == 0)
          goto LABEL_150;
        v61 = 0;
        v62 = 0;
        v49 = 0;
        *(_WORD *)(a1 + 124) |= 8u;
        while (2)
        {
          v63 = *v20;
          v64 = *(_QWORD *)(v3 + v63);
          v65 = v64 + 1;
          if (v64 == -1 || v65 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v22) = 1;
          }
          else
          {
            v66 = *(_BYTE *)(*(_QWORD *)(v3 + *v24) + v64);
            *(_QWORD *)(v3 + v63) = v65;
            v49 |= (unint64_t)(v66 & 0x7F) << v61;
            if (v66 < 0)
            {
              v61 += 7;
              v32 = v62++ >= 9;
              if (v32)
              {
                LODWORD(v49) = 0;
                goto LABEL_163;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v22))
          LODWORD(v49) = 0;
LABEL_163:
        v111 = 116;
        goto LABEL_176;
      case 6:
        if (!v37 || (*(_WORD *)(a1 + 124) & 0x200) != 0)
        {
          v109 = PBReaderSkipValueWithTag();
          v20 = (int *)MEMORY[0x1E0D82BF0];
          v22 = (int *)MEMORY[0x1E0D82BC8];
          v18 = v128;
          goto LABEL_148;
        }
        if (v34 != 2)
        {
          v115 = 0;
          v116 = 0;
          v117 = 0;
          v118 = (int *)MEMORY[0x1E0D82BB8];
          while (1)
          {
            v119 = *v20;
            v120 = *(_QWORD *)(v3 + v119);
            v121 = v120 + 1;
            if (v120 == -1 || v121 > *(_QWORD *)(v3 + *v6))
              break;
            v122 = *(_BYTE *)(*(_QWORD *)(v3 + *v118) + v120);
            *(_QWORD *)(v3 + v119) = v121;
            v117 |= (unint64_t)(v122 & 0x7F) << v115;
            if (v122 < 0)
            {
              v115 += 7;
              v32 = v116++ >= 9;
              if (!v32)
                continue;
            }
            goto LABEL_207;
          }
          *(_BYTE *)(v3 + *v22) = 1;
LABEL_207:
          PBRepeatedInt32Add();
          goto LABEL_191;
        }
        if (!PBReaderPlaceMark())
          goto LABEL_230;
        while (1)
        {
          v67 = (int *)MEMORY[0x1E0D82BF0];
          v68 = (int *)MEMORY[0x1E0D82BC8];
          if (*(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(v3 + *v6)
            || *(_BYTE *)(v3 + (int)*MEMORY[0x1E0D82BC8]))
          {
            break;
          }
          v69 = 0;
          v70 = 0;
          v71 = 0;
          v72 = (int *)MEMORY[0x1E0D82BB8];
          while (1)
          {
            v73 = *v67;
            v74 = *(_QWORD *)(v3 + v73);
            v75 = v74 + 1;
            if (v74 == -1 || v75 > *(_QWORD *)(v3 + *v6))
              break;
            v76 = *(_BYTE *)(*(_QWORD *)(v3 + *v72) + v74);
            *(_QWORD *)(v3 + v73) = v75;
            v71 |= (unint64_t)(v76 & 0x7F) << v69;
            if (v76 < 0)
            {
              v69 += 7;
              v32 = v70++ >= 9;
              if (!v32)
                continue;
            }
            goto LABEL_86;
          }
          *(_BYTE *)(v3 + *v68) = 1;
LABEL_86:
          PBRepeatedInt32Add();
        }
        PBReaderRecallMark();
        v20 = (int *)MEMORY[0x1E0D82BF0];
        v22 = (int *)MEMORY[0x1E0D82BC8];
        v18 = v128;
        goto LABEL_192;
      case 7:
        if (!v37)
          goto LABEL_150;
        if ((*(_WORD *)(a1 + 124) & 0x2000) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_230;
          v114 = 4 * *(_WORD *)(a1 + 124);
          goto LABEL_190;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_230;
        v42 = objc_alloc_init(GEOPDVenueIdentifier);
        if (!GEOPDVenueIdentifierReadAllFrom((uint64_t)v42, (void *)v3, v10 & 1))
          goto LABEL_229;
        PBReaderRecallMark();
        v43 = 80;
        goto LABEL_134;
      case 8:
        if ((v8 & 1) == 0)
          goto LABEL_150;
        v77 = 0;
        v78 = 0;
        v79 = 0;
        *(_WORD *)(a1 + 124) |= 0x40u;
        while (2)
        {
          v80 = *v20;
          v81 = *(_QWORD *)(v3 + v80);
          v82 = v81 + 1;
          if (v81 == -1 || v82 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v22) = 1;
          }
          else
          {
            v83 = *(_BYTE *)(*(_QWORD *)(v3 + *v24) + v81);
            *(_QWORD *)(v3 + v80) = v82;
            v79 |= (unint64_t)(v83 & 0x7F) << v77;
            if (v83 < 0)
            {
              v77 += 7;
              v32 = v78++ >= 9;
              if (v32)
              {
                v79 = 0;
                goto LABEL_167;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v22))
          v79 = 0;
LABEL_167:
        v112 = v79 != 0;
        v113 = 122;
        goto LABEL_181;
      case 9:
        if ((v8 & 1) == 0)
          goto LABEL_150;
        v84 = 0;
        v85 = 0;
        v86 = 0;
        *(_WORD *)(a1 + 124) |= 0x20u;
        while (2)
        {
          v87 = *v20;
          v88 = *(_QWORD *)(v3 + v87);
          v89 = v88 + 1;
          if (v88 == -1 || v89 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v22) = 1;
          }
          else
          {
            v90 = *(_BYTE *)(*(_QWORD *)(v3 + *v24) + v88);
            *(_QWORD *)(v3 + v87) = v89;
            v86 |= (unint64_t)(v90 & 0x7F) << v84;
            if (v90 < 0)
            {
              v84 += 7;
              v32 = v85++ >= 9;
              if (v32)
              {
                v86 = 0;
                goto LABEL_171;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v22))
          v86 = 0;
LABEL_171:
        v112 = v86 != 0;
        v113 = 121;
        goto LABEL_181;
      case 10:
        if ((v8 & 1) == 0)
          goto LABEL_150;
        v91 = 0;
        v92 = 0;
        v49 = 0;
        *(_WORD *)(a1 + 124) |= 4u;
        while (2)
        {
          v93 = *v20;
          v94 = *(_QWORD *)(v3 + v93);
          v95 = v94 + 1;
          if (v94 == -1 || v95 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v22) = 1;
          }
          else
          {
            v96 = *(_BYTE *)(*(_QWORD *)(v3 + *v24) + v94);
            *(_QWORD *)(v3 + v93) = v95;
            v49 |= (unint64_t)(v96 & 0x7F) << v91;
            if (v96 < 0)
            {
              v91 += 7;
              v32 = v92++ >= 9;
              if (v32)
              {
                LODWORD(v49) = 0;
                goto LABEL_175;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v22))
          LODWORD(v49) = 0;
LABEL_175:
        v111 = 112;
LABEL_176:
        *(_DWORD *)(a1 + v111) = v49;
        goto LABEL_193;
      case 11:
        if ((v8 & 1) == 0)
          goto LABEL_150;
        v97 = 0;
        v98 = 0;
        v99 = 0;
        *(_WORD *)(a1 + 124) |= 0x80u;
        while (2)
        {
          v100 = *v20;
          v101 = *(_QWORD *)(v3 + v100);
          v102 = v101 + 1;
          if (v101 == -1 || v102 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v22) = 1;
          }
          else
          {
            v103 = *(_BYTE *)(*(_QWORD *)(v3 + *v24) + v101);
            *(_QWORD *)(v3 + v100) = v102;
            v99 |= (unint64_t)(v103 & 0x7F) << v97;
            if (v103 < 0)
            {
              v97 += 7;
              v32 = v98++ >= 9;
              if (v32)
              {
                v99 = 0;
                goto LABEL_180;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v22))
          v99 = 0;
LABEL_180:
        v112 = v99 != 0;
        v113 = 123;
LABEL_181:
        *(_BYTE *)(a1 + v113) = v112;
        goto LABEL_193;
      case 12:
        if (!v37)
          goto LABEL_150;
        if ((*(_WORD *)(a1 + 124) & 0x400) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_230;
          v114 = 32 * *(_WORD *)(a1 + 124);
          goto LABEL_190;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_230;
        v42 = objc_alloc_init(GEOPDSSearchEvChargingParameters);
        if (!GEOPDSSearchEvChargingParametersReadAllFrom((uint64_t)v42, (void *)v3, v10 & 1))
          goto LABEL_229;
        PBReaderRecallMark();
        v43 = 48;
        goto LABEL_134;
      case 13:
        if (!v37)
          goto LABEL_150;
        if ((*(_WORD *)(a1 + 124) & 0x1000) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_230;
          v114 = 8 * *(_WORD *)(a1 + 124);
LABEL_190:
          v7 += v114 >> 15;
LABEL_191:
          v18 = v128;
          v22 = (int *)MEMORY[0x1E0D82BC8];
          v20 = (int *)MEMORY[0x1E0D82BF0];
LABEL_192:
          v24 = (int *)MEMORY[0x1E0D82BB8];
LABEL_193:
          if (!(v129 & 1 | (v7 != 0)) || *(_QWORD *)(v3 + *v20) >= *(_QWORD *)(v3 + *v6))
            goto LABEL_208;
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_230;
        v42 = objc_alloc_init(GEOPDSearchOriginationInfo);
        if (GEOPDSearchOriginationInfoReadAllFrom((uint64_t)v42, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          v43 = 72;
LABEL_134:
          v104 = *(void **)(a1 + v43);
          *(_QWORD *)(a1 + v43) = v42;

          --v7;
          goto LABEL_191;
        }
LABEL_229:

LABEL_230:
        v21 = 0;
        v18 = v128;
        v22 = (int *)MEMORY[0x1E0D82BC8];
LABEL_209:
        v23 = v127;
LABEL_210:
        if ((v23 & 1) != 0)
LABEL_211:
          *(_WORD *)(a1 + 124) |= 0x100u;
        if (v18 & 1 | ((v21 & 1) == 0))
        {
          *(_WORD *)(a1 + 124) |= 0x4000u;
          *(_WORD *)(a1 + 124) |= 0x200u;
          *(_WORD *)(a1 + 124) |= 0x2000u;
          *(_WORD *)(a1 + 124) |= 0x400u;
          *(_WORD *)(a1 + 124) |= 0x1000u;
          *(_WORD *)(a1 + 124) |= 0x800u;
        }
        else if (v19)
        {
          while (1)
          {
            v123 = *v19++;
            v124 = 0x4000;
            switch(v123)
            {
              case 0:
                goto LABEL_222;
              case 1:
                goto LABEL_221;
              case 6:
                v124 = 512;
                goto LABEL_221;
              case 7:
                v124 = 0x2000;
                goto LABEL_221;
              case 12:
                v124 = 1024;
                goto LABEL_221;
              case 13:
                v124 = 4096;
                goto LABEL_221;
              case 14:
                v124 = 2048;
LABEL_221:
                *(_WORD *)(a1 + 124) |= v124;
                break;
              default:
                continue;
            }
          }
        }
LABEL_222:
        if (v21)
        {
          v3 = *(_BYTE *)(v3 + *v22) == 0;
          if ((v18 & 1) == 0)
            return v3;
LABEL_226:
          v125 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        else
        {
          v3 = 0;
          if ((v18 & 1) != 0)
            goto LABEL_226;
        }
        return v3;
      case 14:
        if (v37 && (*(_WORD *)(a1 + 124) & 0x800) == 0)
        {
          PBReaderReadString();
          v105 = (void *)objc_claimAutoreleasedReturnValue();
          if (v105)
            -[GEOPDSearchBrowseCategorySuggestionParameters _addNoFlagsInputCategory:](a1, v105);

          goto LABEL_191;
        }
        v109 = PBReaderSkipValueWithTag();
        v18 = v128;
        v22 = (int *)MEMORY[0x1E0D82BC8];
        v20 = (int *)MEMORY[0x1E0D82BF0];
LABEL_148:
        v24 = (int *)MEMORY[0x1E0D82BB8];
        if ((v109 & 1) == 0)
          goto LABEL_228;
        goto LABEL_193;
      default:
        if ((v127 & 1) == 0 || (*(_WORD *)(a1 + 124) & 0x100) != 0)
        {
LABEL_150:
          v110 = PBReaderSkipValueWithTag();
          v24 = (int *)MEMORY[0x1E0D82BB8];
          v20 = (int *)MEMORY[0x1E0D82BF0];
          v22 = (int *)MEMORY[0x1E0D82BC8];
          v18 = v128;
          if ((v110 & 1) == 0)
          {
LABEL_228:
            v21 = 0;
            goto LABEL_209;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v106 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v107 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v106;

          }
          v108 = PBUnknownFieldAdd();
          v18 = v128;
          v22 = (int *)MEMORY[0x1E0D82BC8];
          v20 = (int *)MEMORY[0x1E0D82BF0];
          v24 = (int *)MEMORY[0x1E0D82BB8];
          if (!v108)
          {
            v21 = 0;
            goto LABEL_211;
          }
        }
        goto LABEL_193;
    }
  }
}

void sub_188BEC77C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188BECA10(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188BECB20(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188BED484(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188BED560(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDSearchBrowseCategorySuggestionParametersCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 88), "readAll:", 1);
  -[GEOPDVenueIdentifier readAll:](*(_QWORD *)(a1 + 80), 1);
  -[GEOPDSSearchEvChargingParameters readAll:](*(_QWORD *)(a1 + 48), 1);
  -[GEOPDSearchOriginationInfo readAll:](*(_QWORD *)(a1 + 72), 1);
}

unint64_t GEOPDSearchBrowseCategorySuggestionParametersReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 100))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDSearchBrowseCategorySuggestionParametersReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 104));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 96) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 100) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDSearchBrowseCategorySuggestionParametersReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDSearchBrowseCategorySuggestionParametersReadAllFrom_initialTag;
  Specified = GEOPDSearchBrowseCategorySuggestionParametersReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDSearchBrowseCategorySuggestionParametersCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 104));
  return Specified;
}

void sub_188BEE2BC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188BEE6A0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDSearchBrowseCategorySuggestionParametersIsDirty(uint64_t a1)
{
  unsigned int v2;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 104));
  v2 = *(unsigned __int16 *)(a1 + 124);
  if ((v2 & 0xC200) != 0)
    return 1;
  if ((v2 & 0x2000) != 0)
  {
    if (GEOPDVenueIdentifierIsDirty(*(_QWORD *)(a1 + 80)))
      return 1;
    v2 = *(unsigned __int16 *)(a1 + 124);
  }
  if ((v2 & 0x400) != 0)
  {
    if (GEOPDSSearchEvChargingParametersIsDirty(*(_QWORD *)(a1 + 48)))
      return 1;
    v2 = *(unsigned __int16 *)(a1 + 124);
  }
  if ((v2 & 0x1000) != 0)
  {
    if (!GEOPDSearchOriginationInfoIsDirty(*(_QWORD *)(a1 + 72)))
    {
      v2 = *(unsigned __int16 *)(a1 + 124);
      return (v2 >> 11) & 1;
    }
    return 1;
  }
  return (v2 >> 11) & 1;
}

os_unfair_lock_s *GEOPDSearchBrowseCategorySuggestionParametersIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOPDSearchBrowseCategorySuggestionParametersIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 26);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_188BEEBB8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchBrowseCategorySuggestionResultReadAllFrom(uint64_t a1, void *a2, int a3)
{
  char *v5;
  int *v6;
  int *v7;
  int *v8;
  int *v9;
  char v10;
  unsigned int v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  int v18;
  GEOPDBrowseCategory *v20;
  id v21;
  void *v22;
  _BOOL8 v23;

  v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    v6 = (int *)MEMORY[0x1E0D82BF0];
    v7 = (int *)MEMORY[0x1E0D82BD8];
    v8 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v5[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v5[*MEMORY[0x1E0D82BD8]])
    {
      v9 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v5[*v8])
          break;
        v10 = 0;
        v11 = 0;
        v12 = 0;
        while (1)
        {
          v13 = *v6;
          v14 = *(_QWORD *)&v5[v13];
          v15 = v14 + 1;
          if (v14 == -1 || v15 > *(_QWORD *)&v5[*v7])
            break;
          v16 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v14);
          *(_QWORD *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0)
            goto LABEL_13;
          v10 += 7;
          if (v11++ >= 9)
          {
            v12 = 0;
            v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        v18 = v5[*v8];
        if (v5[*v8])
          v12 = 0;
LABEL_15:
        if (v18 || (v12 & 7) == 4)
          break;
        if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_29;
          v20 = objc_alloc_init(GEOPDBrowseCategory);
          if (!GEOPDBrowseCategoryReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          -[GEOPDSearchBrowseCategorySuggestionResult addCategory:](a1, v20);

        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v21 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v22 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v21;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_29;
        }
      }
      while (*(_QWORD *)&v5[*v6] < *(_QWORD *)&v5[*v7]);
    }
    v23 = v5[*v8] == 0;
  }
  else
  {
LABEL_29:
    v23 = 0;
  }
  objc_sync_exit(v5);

  return v23;
}

void sub_188BEF980(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchCapabilitiesParametersReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  GEOPDViewportInfo *v18;
  void *v19;
  id v20;
  void *v21;
  _BOOL8 v22;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_29;
          v18 = objc_alloc_init(GEOPDViewportInfo);
          if (!GEOPDViewportInfoReadAllFrom((uint64_t)v18, v3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          v19 = *(void **)(a1 + 16);
          *(_QWORD *)(a1 + 16) = v18;

        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v20 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v21 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v20;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_29;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v22 = v3[*v6] == 0;
  }
  else
  {
LABEL_29:
    v22 = 0;
  }
  objc_sync_exit(v3);

  return v22;
}

void sub_188BF0228(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchCapabilitiesResultReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  GEOPDOfflineSearchCapabilities *v18;
  void *v19;
  id v20;
  void *v21;
  _BOOL8 v22;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_29;
          v18 = objc_alloc_init(GEOPDOfflineSearchCapabilities);
          if (!GEOPDOfflineSearchCapabilitiesReadAllFrom((uint64_t)v18, v3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          v19 = *(void **)(a1 + 16);
          *(_QWORD *)(a1 + 16) = v18;

        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v20 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v21 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v20;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_29;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v22 = v3[*v6] == 0;
  }
  else
  {
LABEL_29:
    v22 = 0;
  }
  objc_sync_exit(v3);

  return v22;
}

void sub_188BF0950(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchClientBehaviorReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  BOOL v25;
  int *v26;
  char v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  id v33;
  void *v34;
  _BOOL8 v35;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      while (1)
      {
        if (v3[*v6])
          goto LABEL_49;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          goto LABEL_49;
        if ((v10 >> 3) == 2)
          break;
        if ((v10 >> 3) == 1)
        {
          v18 = 0;
          v19 = 0;
          v20 = 0;
          *(_BYTE *)(a1 + 20) |= 2u;
          while (1)
          {
            v21 = *v4;
            v22 = *(_QWORD *)&v3[v21];
            v23 = v22 + 1;
            if (v22 == -1 || v23 > *(_QWORD *)&v3[*v5])
            {
              v26 = &OBJC_IVAR___GEOPDSearchClientBehavior__shouldEnableRedoSearch;
              goto LABEL_41;
            }
            v24 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v22);
            *(_QWORD *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0)
              break;
            v18 += 7;
            v25 = v19++ > 8;
            if (v25)
            {
              v20 = 0;
              v26 = &OBJC_IVAR___GEOPDSearchClientBehavior__shouldEnableRedoSearch;
              goto LABEL_44;
            }
          }
          v26 = &OBJC_IVAR___GEOPDSearchClientBehavior__shouldEnableRedoSearch;
LABEL_42:
          if (v3[*v6])
            v20 = 0;
LABEL_44:
          *(_BYTE *)(a1 + *v26) = v20 != 0;
          goto LABEL_45;
        }
        if (!*(_QWORD *)(a1 + 8))
        {
          v33 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
          v34 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = v33;

        }
        if ((PBUnknownFieldAdd() & 1) == 0)
          goto LABEL_50;
LABEL_45:
        if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
          goto LABEL_49;
      }
      v27 = 0;
      v28 = 0;
      v20 = 0;
      *(_BYTE *)(a1 + 20) |= 1u;
      while (1)
      {
        v29 = *v4;
        v30 = *(_QWORD *)&v3[v29];
        v31 = v30 + 1;
        if (v30 == -1 || v31 > *(_QWORD *)&v3[*v5])
          break;
        v32 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v30);
        *(_QWORD *)&v3[v29] = v31;
        v20 |= (unint64_t)(v32 & 0x7F) << v27;
        if ((v32 & 0x80) == 0)
        {
          v26 = &OBJC_IVAR___GEOPDSearchClientBehavior__shouldAllowManualRedoButton;
          goto LABEL_42;
        }
        v27 += 7;
        v25 = v28++ > 8;
        if (v25)
        {
          v20 = 0;
          v26 = &OBJC_IVAR___GEOPDSearchClientBehavior__shouldAllowManualRedoButton;
          goto LABEL_44;
        }
      }
      v26 = &OBJC_IVAR___GEOPDSearchClientBehavior__shouldAllowManualRedoButton;
LABEL_41:
      v3[*v6] = 1;
      goto LABEL_42;
    }
LABEL_49:
    v35 = v3[*v6] == 0;
  }
  else
  {
LABEL_50:
    v35 = 0;
  }
  objc_sync_exit(v3);

  return v35;
}

void sub_188BF128C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchFieldPlaceholderParametersReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  char v25;
  unsigned int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  id v32;
  void *v33;
  _BOOL8 v34;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 2)
        {
          v25 = 0;
          v26 = 0;
          v27 = 0;
          *(_BYTE *)(a1 + 24) |= 2u;
          while (1)
          {
            v28 = *v4;
            v29 = *(_QWORD *)&v3[v28];
            v30 = v29 + 1;
            if (v29 == -1 || v30 > *(_QWORD *)&v3[*v5])
              break;
            v31 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v29);
            *(_QWORD *)&v3[v28] = v30;
            v27 |= (unint64_t)(v31 & 0x7F) << v25;
            if ((v31 & 0x80) == 0)
              goto LABEL_44;
            v25 += 7;
            v15 = v26++ >= 9;
            if (v15)
            {
              v27 = 0;
              goto LABEL_46;
            }
          }
          v3[*v6] = 1;
LABEL_44:
          if (v3[*v6])
            v27 = 0;
LABEL_46:
          *(_BYTE *)(a1 + 20) = v27 != 0;
        }
        else if ((v10 >> 3) == 1)
        {
          v18 = 0;
          v19 = 0;
          v20 = 0;
          *(_BYTE *)(a1 + 24) |= 1u;
          while (1)
          {
            v21 = *v4;
            v22 = *(_QWORD *)&v3[v21];
            v23 = v22 + 1;
            if (v22 == -1 || v23 > *(_QWORD *)&v3[*v5])
              break;
            v24 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v22);
            *(_QWORD *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0)
              goto LABEL_40;
            v18 += 7;
            v15 = v19++ >= 9;
            if (v15)
            {
              LODWORD(v20) = 0;
              goto LABEL_42;
            }
          }
          v3[*v6] = 1;
LABEL_40:
          if (v3[*v6])
            LODWORD(v20) = 0;
LABEL_42:
          *(_DWORD *)(a1 + 16) = v20;
        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v32 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v33 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v32;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_49;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v34 = v3[*v6] == 0;
  }
  else
  {
LABEL_49:
    v34 = 0;
  }
  objc_sync_exit(v3);

  return v34;
}

void sub_188BF1B68(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchFieldPlaceholderResultReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  uint64_t v18;
  void *v19;
  id v20;
  void *v21;
  _BOOL8 v22;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 1)
        {
          PBReaderReadString();
          v18 = objc_claimAutoreleasedReturnValue();
          v19 = *(void **)(a1 + 16);
          *(_QWORD *)(a1 + 16) = v18;

        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v20 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v21 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v20;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_26;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v22 = v3[*v6] == 0;
  }
  else
  {
LABEL_26:
    v22 = 0;
  }
  objc_sync_exit(v3);

  return v22;
}

void sub_188BF22CC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188BF2678(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchParametersReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64x2_t v13;
  int8x16_t v14;
  uint32x4_t v15;
  int *v16;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  char v22;
  char v23;
  int *v24;
  int *v25;
  int *v26;
  int *v27;
  char v28;
  unsigned int v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  BOOL v35;
  int v36;
  int v37;
  unint64_t v39;
  BOOL v40;
  int *v41;
  int v42;
  int v43;
  BOOL v44;
  char v45;
  unsigned int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  char v51;
  char v52;
  unsigned int v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  GEOPDViewportInfo *v60;
  uint64_t v61;
  char v62;
  unsigned int v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  char v67;
  id v68;
  void *v69;
  int v70;
  char v71;
  unsigned int v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  char v77;
  char v78;
  unsigned int v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  char v84;
  char v85;
  unsigned int v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  char v91;
  char v92;
  unsigned int v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  char v98;
  char v99;
  unsigned int v100;
  uint64_t v101;
  uint64_t v102;
  unint64_t v103;
  char v104;
  int *v105;
  int *v106;
  char v107;
  unsigned int v108;
  uint64_t v109;
  int *v110;
  uint64_t v111;
  uint64_t v112;
  unint64_t v113;
  char v114;
  int *v115;
  int *v116;
  char v117;
  unsigned int v118;
  uint64_t v119;
  int *v120;
  uint64_t v121;
  uint64_t v122;
  unint64_t v123;
  char v124;
  char v125;
  unsigned int v126;
  uint64_t v127;
  uint64_t v128;
  unint64_t v129;
  char v130;
  int *v131;
  int *v132;
  char v133;
  unsigned int v134;
  uint64_t v135;
  int *v136;
  uint64_t v137;
  uint64_t v138;
  unint64_t v139;
  char v140;
  char v141;
  unsigned int v142;
  uint64_t v143;
  uint64_t v144;
  unint64_t v145;
  char v146;
  int *v147;
  int *v148;
  char v149;
  unsigned int v150;
  uint64_t v151;
  int *v152;
  uint64_t v153;
  uint64_t v154;
  unint64_t v155;
  char v156;
  int *v157;
  int *v158;
  char v159;
  unsigned int v160;
  uint64_t v161;
  int *v162;
  uint64_t v163;
  uint64_t v164;
  unint64_t v165;
  char v166;
  char v167;
  unsigned int v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  unint64_t v172;
  char v173;
  char v174;
  unsigned int v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  unint64_t v179;
  char v180;
  void *v181;
  char v182;
  char v183;
  uint64_t v184;
  BOOL v185;
  uint64_t v186;
  uint64_t v187;
  char v188;
  unsigned int v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  unint64_t v193;
  char v194;
  char v195;
  unsigned int v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  unint64_t v200;
  char v201;
  char v202;
  unsigned int v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  unint64_t v207;
  char v208;
  char v209;
  unsigned int v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  unint64_t v214;
  char v215;
  char v216;
  unsigned int v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  unint64_t v221;
  char v222;
  int v223;
  uint64_t v224;
  void *v225;
  int v227;
  char v228;
  char v229;
  char v230;
  char v231;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 336));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 332);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 328));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = *(_QWORD *)(a1 + 372);
  v13 = (uint64x2_t)vdupq_n_s64(v12);
  v14.i64[0] = 0x100000001;
  v14.i64[1] = 0x100000001;
  v15 = (uint32x4_t)vdupq_n_s32(v12);
  v16 = v6;
  v17 = vaddvq_s32((int32x4_t)vandq_s8((int8x16_t)vuzp1q_s32((int32x4_t)vshlq_u64(v13, (uint64x2_t)xmmword_189CC9F80), (int32x4_t)vshlq_u64(v13, (uint64x2_t)xmmword_189CC9F70)), v14))+ ((v12 >> 12) & 1)+ ((v12 >> 23) & 1)+ ((v12 >> 36) & 1)+ ((v12 >> 25) & 1)+ ((v12 >> 22) & 1)+ ((v12 >> 33) & 1)+ ((v12 >> 29) & 1)+ ((v12 >> 18) & 1)+ (BYTE4(v12) & 1)+ (WORD1(v12) & 1)+ ((v12 >> 34) & 1)+ ((v12 >> 40) & 1)+ vaddvq_s32(vaddq_s32((int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v15, (uint32x4_t)xmmword_189CC9F90), v14),
            (int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v15, (uint32x4_t)xmmword_189CC9FA0), v14)))
      + vaddvq_s32((int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v15, (uint32x4_t)xmmword_189CC9FB0), v14))
      + (v12 >> 31);
  while (2)
  {
    v18 = 1;
    v19 = 1;
    v20 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v17;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v19 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v21 = v17 > 0x15;
        v22 = v21 & ~(_BYTE)v11 | v9;
        v23 = v21 | v11;
        v24 = (int *)MEMORY[0x1E0D82BF0];
        if ((((v21 | v11) | v8) & 1) != 0)
          v25 = 0;
        else
          v25 = a3;
        v227 = 1;
        if (*(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(v3 + *v6))
          goto LABEL_475;
        v228 = v23 | v22;
        v231 = (v25 == 0) | v23;
        v26 = (int *)MEMORY[0x1E0D82BC8];
        v27 = (int *)MEMORY[0x1E0D82BB8];
        v229 = v21 & ~(_BYTE)v11 | v9;
        v230 = v21 | v11;
        break;
      default:
        ++v17;
LABEL_7:
        v18 = v9;
LABEL_8:
        v19 = v10;
        v20 = v11;
LABEL_10:
        ++v7;
        v9 = v18;
        v10 = v19;
        v11 = v20;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_BYTE *)(v3 + *v26))
      goto LABEL_474;
    v28 = 0;
    v29 = 0;
    v30 = 0;
    while (1)
    {
      v31 = *v24;
      v32 = *(_QWORD *)(v3 + v31);
      v33 = v32 + 1;
      if (v32 == -1 || v33 > *(_QWORD *)(v3 + *v16))
        break;
      v34 = *(_BYTE *)(*(_QWORD *)(v3 + *v27) + v32);
      *(_QWORD *)(v3 + v31) = v33;
      v30 |= (unint64_t)(v34 & 0x7F) << v28;
      if ((v34 & 0x80) == 0)
        goto LABEL_25;
      v28 += 7;
      v35 = v29++ >= 9;
      if (v35)
      {
        v30 = 0;
        v36 = *(unsigned __int8 *)(v3 + *v26);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v26) = 1;
LABEL_25:
    v36 = *(unsigned __int8 *)(v3 + *v26);
    if (*(_BYTE *)(v3 + *v26))
      v30 = 0;
LABEL_27:
    v37 = v30 & 7;
    if (v36 || v37 == 4)
    {
LABEL_474:
      v227 = 1;
LABEL_475:
      if ((v22 & 1) == 0)
        goto LABEL_477;
      goto LABEL_476;
    }
    v39 = v30 >> 3;
    v40 = v23;
    if ((v231 & 1) == 0)
    {
      v41 = v25;
      do
      {
        v43 = *v41++;
        v42 = v43;
        v40 = v43 != 0;
        if (v43)
          v44 = v42 == (_DWORD)v39;
        else
          v44 = 1;
      }
      while (!v44);
    }
    switch((int)v39)
    {
      case 1:
        if ((v8 & 1) == 0)
          goto LABEL_335;
        v45 = 0;
        v46 = 0;
        v47 = 0;
        *(_QWORD *)(a1 + 372) |= 0x20uLL;
        while (1)
        {
          v48 = *v24;
          v49 = *(_QWORD *)(v3 + v48);
          v50 = v49 + 1;
          if (v49 == -1 || v50 > *(_QWORD *)(v3 + *v16))
            break;
          v51 = *(_BYTE *)(*(_QWORD *)(v3 + *v27) + v49);
          *(_QWORD *)(v3 + v48) = v50;
          v47 |= (unint64_t)(v51 & 0x7F) << v45;
          if ((v51 & 0x80) == 0)
            goto LABEL_338;
          v45 += 7;
          v35 = v46++ >= 9;
          if (v35)
          {
            LODWORD(v47) = 0;
            goto LABEL_340;
          }
        }
        *(_BYTE *)(v3 + *v26) = 1;
LABEL_338:
        if (*(_BYTE *)(v3 + *v26))
          LODWORD(v47) = 0;
LABEL_340:
        v184 = 360;
        goto LABEL_377;
      case 2:
        if ((v8 & 1) == 0)
          goto LABEL_335;
        v52 = 0;
        v53 = 0;
        v47 = 0;
        *(_QWORD *)(a1 + 372) |= 2uLL;
        while (2)
        {
          v54 = *v24;
          v55 = *(_QWORD *)(v3 + v54);
          v56 = v55 + 1;
          if (v55 == -1 || v56 > *(_QWORD *)(v3 + *v16))
          {
            *(_BYTE *)(v3 + *v26) = 1;
          }
          else
          {
            v57 = *(_BYTE *)(*(_QWORD *)(v3 + *v27) + v55);
            *(_QWORD *)(v3 + v54) = v56;
            v47 |= (unint64_t)(v57 & 0x7F) << v52;
            if (v57 < 0)
            {
              v52 += 7;
              v35 = v53++ >= 9;
              if (v35)
              {
                LODWORD(v47) = 0;
                goto LABEL_344;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v26))
          LODWORD(v47) = 0;
LABEL_344:
        v184 = 344;
        goto LABEL_377;
      case 3:
        if (!v40)
          goto LABEL_335;
        if ((*(_BYTE *)(a1 + 376) & 4) == 0)
        {
          PBReaderReadString();
          v58 = objc_claimAutoreleasedReturnValue();
          v59 = 272;
          goto LABEL_293;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_517;
        v187 = *(_QWORD *)(a1 + 372) << 29;
        goto LABEL_431;
      case 4:
        if (!v40)
          goto LABEL_335;
        if ((*(_BYTE *)(a1 + 377) & 1) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_517;
          v187 = *(_QWORD *)(a1 + 372) << 23;
          goto LABEL_431;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_517;
        v60 = objc_alloc_init(GEOPDViewportInfo);
        if (!GEOPDViewportInfoReadAllFrom((uint64_t)v60, (void *)v3))
          goto LABEL_516;
        PBReaderRecallMark();
        v61 = 320;
        goto LABEL_324;
      case 5:
        if (!v40)
          goto LABEL_335;
        if ((*(_BYTE *)(a1 + 376) & 0x80) == 0)
        {
          PBReaderReadData();
          v58 = objc_claimAutoreleasedReturnValue();
          v59 = 312;
          goto LABEL_293;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_517;
        v187 = *(_QWORD *)(a1 + 372) << 24;
        goto LABEL_431;
      case 6:
        if (!v40)
          goto LABEL_335;
        if ((*(_BYTE *)(a1 + 376) & 0x20) == 0)
        {
          PBReaderReadData();
          v58 = objc_claimAutoreleasedReturnValue();
          v59 = 296;
          goto LABEL_293;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_517;
        v187 = *(_QWORD *)(a1 + 372) << 26;
        goto LABEL_431;
      case 7:
        if (!v40)
          goto LABEL_335;
        if ((*(_BYTE *)(a1 + 376) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_517;
          v187 = *(_QWORD *)(a1 + 372) << 25;
          goto LABEL_431;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_517;
        v60 = objc_alloc_init(GEOPDAutocompleteEntry);
        if (!GEOPDAutocompleteEntryReadAllFrom((uint64_t)v60, (void *)v3, v10 & 1))
          goto LABEL_516;
        PBReaderRecallMark();
        v61 = 304;
        goto LABEL_324;
      case 8:
        if ((v8 & 1) == 0)
          goto LABEL_335;
        v62 = 0;
        v63 = 0;
        v47 = 0;
        *(_QWORD *)(a1 + 372) |= 8uLL;
        while (2)
        {
          v64 = *v24;
          v65 = *(_QWORD *)(v3 + v64);
          v66 = v65 + 1;
          if (v65 == -1 || v66 > *(_QWORD *)(v3 + *v16))
          {
            *(_BYTE *)(v3 + *v26) = 1;
          }
          else
          {
            v67 = *(_BYTE *)(*(_QWORD *)(v3 + *v27) + v65);
            *(_QWORD *)(v3 + v64) = v66;
            v47 |= (unint64_t)(v67 & 0x7F) << v62;
            if (v67 < 0)
            {
              v62 += 7;
              v35 = v63++ >= 9;
              if (v35)
              {
                LODWORD(v47) = 0;
                goto LABEL_348;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v26))
          LODWORD(v47) = 0;
LABEL_348:
        v184 = 352;
        goto LABEL_377;
      case 9:
        if (!v40)
          goto LABEL_335;
        if ((*(_BYTE *)(a1 + 376) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_517;
          v187 = *(_QWORD *)(a1 + 372) << 28;
          goto LABEL_431;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_517;
        v60 = objc_alloc_init(GEOPDSSearchStructureIntentRequestType);
        if (!GEOPDSSearchStructureIntentRequestTypeReadAllFrom((uint64_t)v60, (void *)v3))
          goto LABEL_516;
        PBReaderRecallMark();
        v61 = 280;
        goto LABEL_324;
      case 10:
        if (!v40)
          goto LABEL_335;
        if ((*(_BYTE *)(a1 + 375) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_517;
          v187 = *(_QWORD *)(a1 + 372) << 32;
          goto LABEL_431;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_517;
        v60 = objc_alloc_init(GEOPDSSearchLocationParameters);
        if (!GEOPDSSearchLocationParametersReadAllFrom((uint64_t)v60, (void *)v3))
          goto LABEL_516;
        PBReaderRecallMark();
        v61 = 248;
        goto LABEL_324;
      case 11:
        if (!v40)
          goto LABEL_335;
        if ((*(_BYTE *)(a1 + 375) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_517;
          v187 = *(_QWORD *)(a1 + 372) << 37;
          goto LABEL_431;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_517;
        v60 = objc_alloc_init(GEOPDRecentRouteInfo);
        if (!GEOPDRecentRouteInfoReadAllFrom((uint64_t)v60, (void *)v3, v10 & 1))
          goto LABEL_516;
        PBReaderRecallMark();
        v61 = 208;
        goto LABEL_324;
      case 12:
        if (!v40)
          goto LABEL_335;
        if ((*(_BYTE *)(a1 + 375) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_517;
          v187 = *(_QWORD *)(a1 + 372) << 33;
          goto LABEL_431;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_517;
        v60 = objc_alloc_init(GEOPDSSearchFilter);
        if (!GEOPDSSearchFilterReadAllFrom((uint64_t)v60, (void *)v3, v10 & 1))
          goto LABEL_516;
        PBReaderRecallMark();
        v61 = 240;
        goto LABEL_324;
      case 14:
        if ((v8 & 1) == 0)
          goto LABEL_335;
        v71 = 0;
        v72 = 0;
        v73 = 0;
        *(_QWORD *)(a1 + 372) |= 0x80uLL;
        while (2)
        {
          v74 = *v24;
          v75 = *(_QWORD *)(v3 + v74);
          v76 = v75 + 1;
          if (v75 == -1 || v76 > *(_QWORD *)(v3 + *v16))
          {
            *(_BYTE *)(v3 + *v26) = 1;
          }
          else
          {
            v77 = *(_BYTE *)(*(_QWORD *)(v3 + *v27) + v75);
            *(_QWORD *)(v3 + v74) = v76;
            v73 |= (unint64_t)(v77 & 0x7F) << v71;
            if (v77 < 0)
            {
              v71 += 7;
              v35 = v72++ >= 9;
              if (v35)
              {
                v73 = 0;
                goto LABEL_352;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v26))
          v73 = 0;
LABEL_352:
        v185 = v73 != 0;
        v186 = 365;
        goto LABEL_386;
      case 15:
        if ((v8 & 1) == 0)
          goto LABEL_335;
        v78 = 0;
        v79 = 0;
        v80 = 0;
        *(_QWORD *)(a1 + 372) |= 0x40uLL;
        while (2)
        {
          v81 = *v24;
          v82 = *(_QWORD *)(v3 + v81);
          v83 = v82 + 1;
          if (v82 == -1 || v83 > *(_QWORD *)(v3 + *v16))
          {
            *(_BYTE *)(v3 + *v26) = 1;
          }
          else
          {
            v84 = *(_BYTE *)(*(_QWORD *)(v3 + *v27) + v82);
            *(_QWORD *)(v3 + v81) = v83;
            v80 |= (unint64_t)(v84 & 0x7F) << v78;
            if (v84 < 0)
            {
              v78 += 7;
              v35 = v79++ >= 9;
              if (v35)
              {
                v80 = 0;
                goto LABEL_356;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v26))
          v80 = 0;
LABEL_356:
        v185 = v80 != 0;
        v186 = 364;
        goto LABEL_386;
      case 16:
        if (!v40)
          goto LABEL_335;
        if ((*(_BYTE *)(a1 + 375) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_517;
          v187 = *(_QWORD *)(a1 + 372) << 35;
          goto LABEL_431;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_517;
        v60 = objc_alloc_init(GEOPDRetainedSearchMetadata);
        if (!GEOPDRetainedSearchMetadataReadAllFrom((uint64_t)v60, (void *)v3, v10 & 1))
          goto LABEL_516;
        PBReaderRecallMark();
        v61 = 224;
        goto LABEL_324;
      case 17:
        if ((v8 & 1) == 0)
          goto LABEL_335;
        v85 = 0;
        v86 = 0;
        v87 = 0;
        *(_QWORD *)(a1 + 372) |= 0x800uLL;
        while (2)
        {
          v88 = *v24;
          v89 = *(_QWORD *)(v3 + v88);
          v90 = v89 + 1;
          if (v89 == -1 || v90 > *(_QWORD *)(v3 + *v16))
          {
            *(_BYTE *)(v3 + *v26) = 1;
          }
          else
          {
            v91 = *(_BYTE *)(*(_QWORD *)(v3 + *v27) + v89);
            *(_QWORD *)(v3 + v88) = v90;
            v87 |= (unint64_t)(v91 & 0x7F) << v85;
            if (v91 < 0)
            {
              v85 += 7;
              v35 = v86++ >= 9;
              if (v35)
              {
                v87 = 0;
                goto LABEL_360;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v26))
          v87 = 0;
LABEL_360:
        v185 = v87 != 0;
        v186 = 369;
        goto LABEL_386;
      case 18:
        if ((v8 & 1) == 0)
          goto LABEL_335;
        v92 = 0;
        v93 = 0;
        v94 = 0;
        *(_QWORD *)(a1 + 372) |= 0x200uLL;
        while (2)
        {
          v95 = *v24;
          v96 = *(_QWORD *)(v3 + v95);
          v97 = v96 + 1;
          if (v96 == -1 || v97 > *(_QWORD *)(v3 + *v16))
          {
            *(_BYTE *)(v3 + *v26) = 1;
          }
          else
          {
            v98 = *(_BYTE *)(*(_QWORD *)(v3 + *v27) + v96);
            *(_QWORD *)(v3 + v95) = v97;
            v94 |= (unint64_t)(v98 & 0x7F) << v92;
            if (v98 < 0)
            {
              v92 += 7;
              v35 = v93++ >= 9;
              if (v35)
              {
                v94 = 0;
                goto LABEL_364;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v26))
          v94 = 0;
LABEL_364:
        v185 = v94 != 0;
        v186 = 367;
        goto LABEL_386;
      case 19:
        if ((v8 & 1) == 0)
          goto LABEL_335;
        v99 = 0;
        v100 = 0;
        v47 = 0;
        *(_QWORD *)(a1 + 372) |= 0x10uLL;
        while (2)
        {
          v101 = *v24;
          v102 = *(_QWORD *)(v3 + v101);
          v103 = v102 + 1;
          if (v102 == -1 || v103 > *(_QWORD *)(v3 + *v16))
          {
            *(_BYTE *)(v3 + *v26) = 1;
          }
          else
          {
            v104 = *(_BYTE *)(*(_QWORD *)(v3 + *v27) + v102);
            *(_QWORD *)(v3 + v101) = v103;
            v47 |= (unint64_t)(v104 & 0x7F) << v99;
            if (v104 < 0)
            {
              v99 += 7;
              v35 = v100++ >= 9;
              if (v35)
              {
                LODWORD(v47) = 0;
                goto LABEL_368;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v26))
          LODWORD(v47) = 0;
LABEL_368:
        v184 = 356;
        goto LABEL_377;
      case 20:
        if (!v40)
          goto LABEL_335;
        if ((*(_BYTE *)(a1 + 374) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_517;
          v187 = *(_QWORD *)(a1 + 372) << 42;
          goto LABEL_431;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_517;
        v60 = objc_alloc_init(GEOPDSInferredSignals);
        if (!GEOPDSInferredSignalsReadAllFrom((uint64_t)v60, (void *)v3, v10 & 1))
          goto LABEL_516;
        PBReaderRecallMark();
        v61 = 168;
        goto LABEL_324;
      case 21:
        if (!v40 || (*(_BYTE *)(a1 + 373) & 0x80) != 0)
          goto LABEL_335;
        if (v37 != 2)
        {
          v188 = 0;
          v189 = 0;
          v190 = 0;
          while (1)
          {
            v191 = *v24;
            v192 = *(_QWORD *)(v3 + v191);
            v193 = v192 + 1;
            if (v192 == -1 || v193 > *(_QWORD *)(v3 + *v16))
              goto LABEL_472;
            v194 = *(_BYTE *)(*(_QWORD *)(v3 + *v27) + v192);
            *(_QWORD *)(v3 + v191) = v193;
            v190 |= (unint64_t)(v194 & 0x7F) << v188;
            if (v194 < 0)
            {
              v188 += 7;
              v35 = v189++ >= 9;
              if (!v35)
                continue;
            }
            goto LABEL_473;
          }
        }
        if (!PBReaderPlaceMark())
          goto LABEL_517;
        while (1)
        {
          v105 = (int *)MEMORY[0x1E0D82BD8];
          v106 = (int *)MEMORY[0x1E0D82BC8];
          if (*(_QWORD *)(v3 + *v24) >= *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8])
            || *(_BYTE *)(v3 + (int)*MEMORY[0x1E0D82BC8]))
          {
            goto LABEL_334;
          }
          v107 = 0;
          v108 = 0;
          v109 = 0;
          v110 = (int *)MEMORY[0x1E0D82BB8];
          while (1)
          {
            v111 = *v24;
            v112 = *(_QWORD *)(v3 + v111);
            v113 = v112 + 1;
            if (v112 == -1 || v113 > *(_QWORD *)(v3 + *v105))
              break;
            v114 = *(_BYTE *)(*(_QWORD *)(v3 + *v110) + v112);
            *(_QWORD *)(v3 + v111) = v113;
            v109 |= (unint64_t)(v114 & 0x7F) << v107;
            if (v114 < 0)
            {
              v107 += 7;
              v35 = v108++ >= 9;
              if (!v35)
                continue;
            }
            goto LABEL_172;
          }
          *(_BYTE *)(v3 + *v106) = 1;
LABEL_172:
          PBRepeatedInt32Add();
        }
      case 22:
        if (!v40)
          goto LABEL_335;
        if ((*(_BYTE *)(a1 + 374) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_517;
          v187 = *(_QWORD *)(a1 + 372) << 43;
          goto LABEL_431;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_517;
        v60 = objc_alloc_init(GEOPDSSearchEvChargingParameters);
        if (!GEOPDSSearchEvChargingParametersReadAllFrom((uint64_t)v60, (void *)v3, v10 & 1))
          goto LABEL_516;
        PBReaderRecallMark();
        v61 = 160;
        goto LABEL_324;
      case 23:
        if (!v40)
          goto LABEL_335;
        if ((*(_BYTE *)(a1 + 374) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_517;
          v187 = *(_QWORD *)(a1 + 372) << 44;
          goto LABEL_431;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_517;
        v60 = objc_alloc_init(GEOPDETAFilter);
        if (!GEOPDETAFilterReadAllFrom((uint64_t)v60, (void *)v3, v10 & 1))
          goto LABEL_516;
        PBReaderRecallMark();
        v61 = 152;
        goto LABEL_324;
      case 24:
        if (!v40 || (*(_BYTE *)(a1 + 374) & 2) != 0)
          goto LABEL_335;
        if (v37 != 2)
        {
          v195 = 0;
          v196 = 0;
          v197 = 0;
          while (1)
          {
            v198 = *v24;
            v199 = *(_QWORD *)(v3 + v198);
            v200 = v199 + 1;
            if (v199 == -1 || v200 > *(_QWORD *)(v3 + *v16))
              goto LABEL_472;
            v201 = *(_BYTE *)(*(_QWORD *)(v3 + *v27) + v199);
            *(_QWORD *)(v3 + v198) = v200;
            v197 |= (unint64_t)(v201 & 0x7F) << v195;
            if (v201 < 0)
            {
              v195 += 7;
              v35 = v196++ >= 9;
              if (!v35)
                continue;
            }
            goto LABEL_473;
          }
        }
        if (!PBReaderPlaceMark())
          goto LABEL_517;
        while (1)
        {
          v115 = (int *)MEMORY[0x1E0D82BD8];
          v116 = (int *)MEMORY[0x1E0D82BC8];
          if (*(_QWORD *)(v3 + *v24) >= *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8])
            || *(_BYTE *)(v3 + (int)*MEMORY[0x1E0D82BC8]))
          {
            goto LABEL_334;
          }
          v117 = 0;
          v118 = 0;
          v119 = 0;
          v120 = (int *)MEMORY[0x1E0D82BB8];
          while (1)
          {
            v121 = *v24;
            v122 = *(_QWORD *)(v3 + v121);
            v123 = v122 + 1;
            if (v122 == -1 || v123 > *(_QWORD *)(v3 + *v115))
              break;
            v124 = *(_BYTE *)(*(_QWORD *)(v3 + *v120) + v122);
            *(_QWORD *)(v3 + v121) = v123;
            v119 |= (unint64_t)(v124 & 0x7F) << v117;
            if (v124 < 0)
            {
              v117 += 7;
              v35 = v118++ >= 9;
              if (!v35)
                continue;
            }
            goto LABEL_197;
          }
          *(_BYTE *)(v3 + *v116) = 1;
LABEL_197:
          PBRepeatedInt32Add();
        }
      case 25:
        if ((v8 & 1) == 0)
          goto LABEL_335;
        v125 = 0;
        v126 = 0;
        v47 = 0;
        *(_QWORD *)(a1 + 372) |= 1uLL;
        while (2)
        {
          v127 = *v24;
          v128 = *(_QWORD *)(v3 + v127);
          v129 = v128 + 1;
          if (v128 == -1 || v129 > *(_QWORD *)(v3 + *v16))
          {
            *(_BYTE *)(v3 + *v26) = 1;
          }
          else
          {
            v130 = *(_BYTE *)(*(_QWORD *)(v3 + *v27) + v128);
            *(_QWORD *)(v3 + v127) = v129;
            v47 |= (unint64_t)(v130 & 0x7F) << v125;
            if (v130 < 0)
            {
              v125 += 7;
              v35 = v126++ >= 9;
              if (v35)
              {
                LODWORD(v47) = 0;
                goto LABEL_372;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v26))
          LODWORD(v47) = 0;
LABEL_372:
        v184 = 340;
        goto LABEL_377;
      case 26:
        if (!v40)
          goto LABEL_335;
        if ((*(_BYTE *)(a1 + 375) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_517;
          v187 = *(_QWORD *)(a1 + 372) << 36;
          goto LABEL_431;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_517;
        v60 = objc_alloc_init(GEOPDResultRefinementQuery);
        if (!GEOPDResultRefinementQueryReadAllFrom((uint64_t)v60, (void *)v3, v10 & 1))
          goto LABEL_516;
        PBReaderRecallMark();
        v61 = 216;
        goto LABEL_324;
      case 27:
        if (!v40 || (*(_BYTE *)(a1 + 373) & 0x20) != 0)
          goto LABEL_335;
        if (v37 != 2)
        {
          v202 = 0;
          v203 = 0;
          v204 = 0;
          while (1)
          {
            v205 = *v24;
            v206 = *(_QWORD *)(v3 + v205);
            v207 = v206 + 1;
            if (v206 == -1 || v207 > *(_QWORD *)(v3 + *v16))
              goto LABEL_472;
            v208 = *(_BYTE *)(*(_QWORD *)(v3 + *v27) + v206);
            *(_QWORD *)(v3 + v205) = v207;
            v204 |= (unint64_t)(v208 & 0x7F) << v202;
            if (v208 < 0)
            {
              v202 += 7;
              v35 = v203++ >= 9;
              if (!v35)
                continue;
            }
            goto LABEL_473;
          }
        }
        if (!PBReaderPlaceMark())
          goto LABEL_517;
        while (1)
        {
          v131 = (int *)MEMORY[0x1E0D82BD8];
          v132 = (int *)MEMORY[0x1E0D82BC8];
          if (*(_QWORD *)(v3 + *v24) >= *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8])
            || *(_BYTE *)(v3 + (int)*MEMORY[0x1E0D82BC8]))
          {
            goto LABEL_334;
          }
          v133 = 0;
          v134 = 0;
          v135 = 0;
          v136 = (int *)MEMORY[0x1E0D82BB8];
          while (1)
          {
            v137 = *v24;
            v138 = *(_QWORD *)(v3 + v137);
            v139 = v138 + 1;
            if (v138 == -1 || v139 > *(_QWORD *)(v3 + *v131))
              break;
            v140 = *(_BYTE *)(*(_QWORD *)(v3 + *v136) + v138);
            *(_QWORD *)(v3 + v137) = v139;
            v135 |= (unint64_t)(v140 & 0x7F) << v133;
            if (v140 < 0)
            {
              v133 += 7;
              v35 = v134++ >= 9;
              if (!v35)
                continue;
            }
            goto LABEL_225;
          }
          *(_BYTE *)(v3 + *v132) = 1;
LABEL_225:
          PBRepeatedInt32Add();
        }
      case 28:
        if ((v8 & 1) == 0)
          goto LABEL_335;
        v141 = 0;
        v142 = 0;
        v47 = 0;
        *(_QWORD *)(a1 + 372) |= 4uLL;
        while (2)
        {
          v143 = *v24;
          v144 = *(_QWORD *)(v3 + v143);
          v145 = v144 + 1;
          if (v144 == -1 || v145 > *(_QWORD *)(v3 + *v16))
          {
            *(_BYTE *)(v3 + *v26) = 1;
          }
          else
          {
            v146 = *(_BYTE *)(*(_QWORD *)(v3 + *v27) + v144);
            *(_QWORD *)(v3 + v143) = v145;
            v47 |= (unint64_t)(v146 & 0x7F) << v141;
            if (v146 < 0)
            {
              v141 += 7;
              v35 = v142++ >= 9;
              if (v35)
              {
                LODWORD(v47) = 0;
                goto LABEL_376;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v26))
          LODWORD(v47) = 0;
LABEL_376:
        v184 = 348;
LABEL_377:
        *(_DWORD *)(a1 + v184) = v47;
        goto LABEL_434;
      case 29:
        if (!v40)
          goto LABEL_335;
        if ((*(_BYTE *)(a1 + 375) & 1) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_517;
          v187 = *(_QWORD *)(a1 + 372) << 39;
          goto LABEL_431;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_517;
        v60 = objc_alloc_init(GEOPDViewportInfo);
        if (!GEOPDViewportInfoReadAllFrom((uint64_t)v60, (void *)v3))
          goto LABEL_516;
        PBReaderRecallMark();
        v61 = 192;
        goto LABEL_324;
      case 30:
        if (!v40 || (*(_BYTE *)(a1 + 373) & 0x40) != 0)
          goto LABEL_335;
        if (v37 != 2)
        {
          v209 = 0;
          v210 = 0;
          v211 = 0;
          while (1)
          {
            v212 = *v24;
            v213 = *(_QWORD *)(v3 + v212);
            v214 = v213 + 1;
            if (v213 == -1 || v214 > *(_QWORD *)(v3 + *v16))
              goto LABEL_472;
            v215 = *(_BYTE *)(*(_QWORD *)(v3 + *v27) + v213);
            *(_QWORD *)(v3 + v212) = v214;
            v211 |= (unint64_t)(v215 & 0x7F) << v209;
            if (v215 < 0)
            {
              v209 += 7;
              v35 = v210++ >= 9;
              if (!v35)
                continue;
            }
            goto LABEL_473;
          }
        }
        if (!PBReaderPlaceMark())
          goto LABEL_517;
        while (1)
        {
          v147 = (int *)MEMORY[0x1E0D82BD8];
          v148 = (int *)MEMORY[0x1E0D82BC8];
          if (*(_QWORD *)(v3 + *v24) >= *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8])
            || *(_BYTE *)(v3 + (int)*MEMORY[0x1E0D82BC8]))
          {
            goto LABEL_334;
          }
          v149 = 0;
          v150 = 0;
          v151 = 0;
          v152 = (int *)MEMORY[0x1E0D82BB8];
          while (1)
          {
            v153 = *v24;
            v154 = *(_QWORD *)(v3 + v153);
            v155 = v154 + 1;
            if (v154 == -1 || v155 > *(_QWORD *)(v3 + *v147))
              break;
            v156 = *(_BYTE *)(*(_QWORD *)(v3 + *v152) + v154);
            *(_QWORD *)(v3 + v153) = v155;
            v151 |= (unint64_t)(v156 & 0x7F) << v149;
            if (v156 < 0)
            {
              v149 += 7;
              v35 = v150++ >= 9;
              if (!v35)
                continue;
            }
            goto LABEL_253;
          }
          *(_BYTE *)(v3 + *v148) = 1;
LABEL_253:
          PBRepeatedInt32Add();
        }
      case 31:
        if (!v40 || (*(_BYTE *)(a1 + 374) & 1) != 0)
          goto LABEL_335;
        if (v37 != 2)
        {
          v216 = 0;
          v217 = 0;
          v218 = 0;
          while (1)
          {
            v219 = *v24;
            v220 = *(_QWORD *)(v3 + v219);
            v221 = v220 + 1;
            if (v220 == -1 || v221 > *(_QWORD *)(v3 + *v16))
              break;
            v222 = *(_BYTE *)(*(_QWORD *)(v3 + *v27) + v220);
            *(_QWORD *)(v3 + v219) = v221;
            v218 |= (unint64_t)(v222 & 0x7F) << v216;
            if (v222 < 0)
            {
              v216 += 7;
              v35 = v217++ >= 9;
              if (!v35)
                continue;
            }
            goto LABEL_473;
          }
LABEL_472:
          *(_BYTE *)(v3 + *v26) = 1;
LABEL_473:
          PBRepeatedInt32Add();
          goto LABEL_432;
        }
        if (!PBReaderPlaceMark())
          goto LABEL_517;
        while (1)
        {
          v157 = (int *)MEMORY[0x1E0D82BD8];
          v158 = (int *)MEMORY[0x1E0D82BC8];
          if (*(_QWORD *)(v3 + *v24) >= *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8])
            || *(_BYTE *)(v3 + (int)*MEMORY[0x1E0D82BC8]))
          {
            break;
          }
          v159 = 0;
          v160 = 0;
          v161 = 0;
          v162 = (int *)MEMORY[0x1E0D82BB8];
          while (1)
          {
            v163 = *v24;
            v164 = *(_QWORD *)(v3 + v163);
            v165 = v164 + 1;
            if (v164 == -1 || v165 > *(_QWORD *)(v3 + *v157))
              break;
            v166 = *(_BYTE *)(*(_QWORD *)(v3 + *v162) + v164);
            *(_QWORD *)(v3 + v163) = v165;
            v161 |= (unint64_t)(v166 & 0x7F) << v159;
            if (v166 < 0)
            {
              v159 += 7;
              v35 = v160++ >= 9;
              if (!v35)
                continue;
            }
            goto LABEL_268;
          }
          *(_BYTE *)(v3 + *v158) = 1;
LABEL_268:
          PBRepeatedInt32Add();
        }
LABEL_334:
        PBReaderRecallMark();
        v26 = (int *)MEMORY[0x1E0D82BC8];
        v16 = (int *)MEMORY[0x1E0D82BD8];
        goto LABEL_433;
      case 32:
        if ((v8 & 1) == 0)
          goto LABEL_335;
        v167 = 0;
        v168 = 0;
        v169 = 0;
        *(_QWORD *)(a1 + 372) |= 0x100uLL;
        while (2)
        {
          v170 = *v24;
          v171 = *(_QWORD *)(v3 + v170);
          v172 = v171 + 1;
          if (v171 == -1 || v172 > *(_QWORD *)(v3 + *v16))
          {
            *(_BYTE *)(v3 + *v26) = 1;
          }
          else
          {
            v173 = *(_BYTE *)(*(_QWORD *)(v3 + *v27) + v171);
            *(_QWORD *)(v3 + v170) = v172;
            v169 |= (unint64_t)(v173 & 0x7F) << v167;
            if (v173 < 0)
            {
              v167 += 7;
              v35 = v168++ >= 9;
              if (v35)
              {
                v169 = 0;
                goto LABEL_381;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v26))
          v169 = 0;
LABEL_381:
        v185 = v169 != 0;
        v186 = 366;
        goto LABEL_386;
      case 33:
        if (!v40)
          goto LABEL_335;
        if ((*(_BYTE *)(a1 + 376) & 1) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_517;
          v187 = *(_QWORD *)(a1 + 372) << 31;
          goto LABEL_431;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_517;
        v60 = objc_alloc_init(GEOPDSearchOriginationInfo);
        if (!GEOPDSearchOriginationInfoReadAllFrom((uint64_t)v60, (void *)v3, v10 & 1))
          goto LABEL_516;
        PBReaderRecallMark();
        v61 = 256;
        goto LABEL_324;
      case 34:
        if ((v8 & 1) == 0)
          goto LABEL_335;
        v174 = 0;
        v175 = 0;
        v176 = 0;
        *(_QWORD *)(a1 + 372) |= 0x400uLL;
        while (2)
        {
          v177 = *v24;
          v178 = *(_QWORD *)(v3 + v177);
          v179 = v178 + 1;
          if (v178 == -1 || v179 > *(_QWORD *)(v3 + *v16))
          {
            *(_BYTE *)(v3 + *v26) = 1;
          }
          else
          {
            v180 = *(_BYTE *)(*(_QWORD *)(v3 + *v27) + v178);
            *(_QWORD *)(v3 + v177) = v179;
            v176 |= (unint64_t)(v180 & 0x7F) << v174;
            if (v180 < 0)
            {
              v174 += 7;
              v35 = v175++ >= 9;
              if (v35)
              {
                v176 = 0;
                goto LABEL_385;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v26))
          v176 = 0;
LABEL_385:
        v185 = v176 != 0;
        v186 = 368;
LABEL_386:
        *(_BYTE *)(a1 + v186) = v185;
        goto LABEL_434;
      case 35:
        if (!v40)
          goto LABEL_335;
        if ((*(_BYTE *)(a1 + 374) & 4) == 0)
        {
          PBReaderReadString();
          v58 = objc_claimAutoreleasedReturnValue();
          v59 = 144;
LABEL_293:
          v181 = *(void **)(a1 + v59);
          *(_QWORD *)(a1 + v59) = v58;
          goto LABEL_325;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_517;
        v187 = *(_QWORD *)(a1 + 372) << 45;
        goto LABEL_431;
      case 36:
        if (!v40 || (*(_BYTE *)(a1 + 375) & 0x20) != 0)
        {
          v182 = PBReaderSkipValueWithTag();
          v16 = (int *)MEMORY[0x1E0D82BD8];
          v26 = (int *)MEMORY[0x1E0D82BC8];
          v27 = (int *)MEMORY[0x1E0D82BB8];
          if ((v182 & 1) == 0)
            goto LABEL_517;
          goto LABEL_434;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_517;
        v60 = objc_alloc_init(GEOPDSearchEnrichmentRevisionMetadata);
        if (!GEOPDSearchEnrichmentRevisionMetadataReadAllFrom((uint64_t)v60, (void *)v3))
          goto LABEL_516;
        PBReaderRecallMark();
        -[GEOPDSearchParameters _addNoFlagsSearchEnrichmentRevisionMetadata:](a1, v60);

        goto LABEL_432;
      case 37:
        if (!v40)
          goto LABEL_335;
        if ((*(_BYTE *)(a1 + 376) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_517;
          v187 = *(_QWORD *)(a1 + 372) << 30;
          goto LABEL_431;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_517;
        v60 = objc_alloc_init(GEOPDSSearchSessionData);
        if (!GEOPDSSearchSessionDataReadAllFrom((uint64_t)v60, (void *)v3))
          goto LABEL_516;
        PBReaderRecallMark();
        v61 = 264;
        goto LABEL_324;
      case 38:
        if (!v40)
          goto LABEL_335;
        if ((*(_BYTE *)(a1 + 374) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_517;
          v187 = *(_QWORD *)(a1 + 372) << 41;
          goto LABEL_431;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_517;
        v60 = objc_alloc_init(GEOPDAutocompleteSessionData);
        if (!GEOPDAutocompleteSessionDataReadAllFrom((uint64_t)v60, (void *)v3))
          goto LABEL_516;
        PBReaderRecallMark();
        v61 = 176;
        goto LABEL_324;
      case 39:
        if (!v40)
          goto LABEL_335;
        if ((*(_BYTE *)(a1 + 375) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_517;
          v187 = *(_QWORD *)(a1 + 372) << 38;
          goto LABEL_431;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_517;
        v60 = objc_alloc_init(GEOPDSPunchInHints);
        if (!GEOPDSPunchInHintsReadAllFrom((uint64_t)v60, (void *)v3, v10 & 1))
          goto LABEL_516;
        PBReaderRecallMark();
        v61 = 200;
        goto LABEL_324;
      case 40:
        if (!v40)
          goto LABEL_335;
        if ((*(_BYTE *)(a1 + 376) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_517;
          v187 = *(_QWORD *)(a1 + 372) << 27;
          goto LABEL_431;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_517;
        v60 = objc_alloc_init(GEOPDSSessionUserActionMetadata);
        if (!GEOPDSSessionUserActionMetadataReadAllFrom(v60, (void *)v3))
          goto LABEL_516;
        PBReaderRecallMark();
        v61 = 288;
        goto LABEL_324;
      case 41:
        if (!v40)
          goto LABEL_335;
        if ((*(_BYTE *)(a1 + 374) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_517;
          v187 = *(_QWORD *)(a1 + 372) << 40;
LABEL_431:
          v7 += v187 >> 63;
LABEL_432:
          v16 = (int *)MEMORY[0x1E0D82BD8];
          v26 = (int *)MEMORY[0x1E0D82BC8];
LABEL_433:
          v27 = (int *)MEMORY[0x1E0D82BB8];
          goto LABEL_434;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_517;
        v60 = objc_alloc_init(GEOPDPaginationParameters);
        if (GEOPDPaginationParametersReadAllFrom((uint64_t)v60, (void *)v3))
        {
          PBReaderRecallMark();
          v61 = 184;
LABEL_324:
          v181 = *(void **)(a1 + v61);
          *(_QWORD *)(a1 + v61) = v60;
LABEL_325:

          --v7;
          goto LABEL_432;
        }
LABEL_516:

LABEL_517:
        v227 = 0;
LABEL_518:
        v23 = v230;
        if ((v229 & 1) != 0)
          goto LABEL_476;
LABEL_477:
        if (v23 & 1 | ((v227 & 1) == 0))
        {
          *(_QWORD *)(a1 + 372) |= 0x1FFFFFFE000uLL;
        }
        else if (v25)
        {
          while (1)
          {
            v223 = *v25++;
            v224 = 0x400000000;
            switch(v223)
            {
              case 0:
                goto LABEL_509;
              case 3:
                goto LABEL_508;
              case 4:
                v224 = 0x10000000000;
                goto LABEL_508;
              case 5:
                v224 = 0x8000000000;
                goto LABEL_508;
              case 6:
                v224 = 0x2000000000;
                goto LABEL_508;
              case 7:
                v224 = 0x4000000000;
                goto LABEL_508;
              case 9:
                v224 = 0x800000000;
                goto LABEL_508;
              case 10:
                v224 = 0x80000000;
                goto LABEL_508;
              case 11:
                v224 = 0x4000000;
                goto LABEL_508;
              case 12:
                v224 = 0x40000000;
                goto LABEL_508;
              case 16:
                v224 = 0x10000000;
                goto LABEL_508;
              case 20:
                v224 = 0x200000;
                goto LABEL_508;
              case 21:
                v224 = 0x8000;
                goto LABEL_508;
              case 22:
                v224 = 0x100000;
                goto LABEL_508;
              case 23:
                v224 = 0x80000;
                goto LABEL_508;
              case 24:
                v224 = 0x20000;
                goto LABEL_508;
              case 26:
                v224 = 0x8000000;
                goto LABEL_508;
              case 27:
                v224 = 0x2000;
                goto LABEL_508;
              case 29:
                v224 = 0x1000000;
                goto LABEL_508;
              case 30:
                v224 = 0x4000;
                goto LABEL_508;
              case 31:
                v224 = 0x10000;
                goto LABEL_508;
              case 33:
                v224 = 0x100000000;
                goto LABEL_508;
              case 35:
                v224 = 0x40000;
                goto LABEL_508;
              case 36:
                v224 = 0x20000000;
                goto LABEL_508;
              case 37:
                v224 = 0x200000000;
                goto LABEL_508;
              case 38:
                v224 = 0x400000;
                goto LABEL_508;
              case 39:
                v224 = 0x2000000;
                goto LABEL_508;
              case 40:
                v224 = 0x1000000000;
                goto LABEL_508;
              case 41:
                v224 = 0x800000;
LABEL_508:
                *(_QWORD *)(a1 + 372) |= v224;
                break;
              default:
                continue;
            }
          }
        }
LABEL_509:
        if (v227)
        {
          v3 = *(_BYTE *)(v3 + (int)*MEMORY[0x1E0D82BC8]) == 0;
          if ((v23 & 1) == 0)
            return v3;
LABEL_513:
          v225 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        else
        {
          v3 = 0;
          if ((v23 & 1) != 0)
            goto LABEL_513;
        }
        return v3;
      default:
        if ((v22 & 1) != 0 && (*(_BYTE *)(a1 + 373) & 0x10) == 0)
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v68 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v69 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v68;

          }
          v70 = PBUnknownFieldAdd();
          v16 = (int *)MEMORY[0x1E0D82BD8];
          v26 = (int *)MEMORY[0x1E0D82BC8];
          v27 = (int *)MEMORY[0x1E0D82BB8];
          if (v70)
            goto LABEL_434;
          v227 = 0;
          v23 = v230;
LABEL_476:
          *(_QWORD *)(a1 + 372) |= 0x1000uLL;
          goto LABEL_477;
        }
LABEL_335:
        v183 = PBReaderSkipValueWithTag();
        v27 = (int *)MEMORY[0x1E0D82BB8];
        v26 = (int *)MEMORY[0x1E0D82BC8];
        v16 = (int *)MEMORY[0x1E0D82BD8];
        if ((v183 & 1) == 0)
          goto LABEL_517;
LABEL_434:
        if (!(v228 & 1 | (v7 != 0)))
        {
          v227 = 1;
          goto LABEL_518;
        }
        v22 = v229;
        v23 = v230;
        if (*(_QWORD *)(v3 + *v24) >= *(_QWORD *)(v3 + *v16))
          goto LABEL_474;
        continue;
    }
  }
}

void sub_188BF4A4C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188BF4C2C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188BF4EAC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188BF5000(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188BF5220(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188BF53C8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188BF551C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188BF5648(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188BF5768(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188BF5894(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188BF59B4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188BF5AF4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188BF5C34(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188BF5E38(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188BF601C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188BF7BC8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188BF7CD4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDSearchParametersCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _BYTE v11[128];
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  objc_msgSend(*(id *)(a1 + 320), "readAll:", 1);
  objc_msgSend(*(id *)(a1 + 304), "readAll:", 1);
  -[GEOPDRecentRouteInfo readAll:](*(_QWORD *)(a1 + 208), 1);
  -[GEOPDSSearchFilter readAll:](*(_QWORD *)(a1 + 240), 1);
  -[GEOPDRetainedSearchMetadata readAll:](*(_QWORD *)(a1 + 224), 1);
  -[GEOPDSSearchEvChargingParameters readAll:](*(_QWORD *)(a1 + 160), 1);
  -[GEOPDETAFilter readAll:](*(_QWORD *)(a1 + 152), 1);
  objc_msgSend(*(id *)(a1 + 216), "readAll:", 1);
  objc_msgSend(*(id *)(a1 + 192), "readAll:", 1);
  -[GEOPDSearchOriginationInfo readAll:](*(_QWORD *)(a1 + 256), 1);
  v9 = 0u;
  v10 = 0u;
  v7 = 0u;
  v8 = 0u;
  v2 = *(id *)(a1 + 232);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v8;
    while (1)
    {
      if (*(_QWORD *)v8 != v5)
        objc_enumerationMutation(v2);
      if (!--v4)
      {
        v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
        if (!v4)
          break;
      }
    }
  }

  objc_msgSend(*(id *)(a1 + 176), "readAll:", 1, v7);
  -[GEOPDSPunchInHints readAll:](*(_QWORD *)(a1 + 200), 1);
  return objc_msgSend(*(id *)(a1 + 288), "readAll:", 1);
}

unint64_t GEOPDSearchParametersReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 332))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDSearchParametersReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 336));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 328) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 332) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDSearchParametersReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDSearchParametersReadAllFrom_initialTag;
  Specified = GEOPDSearchParametersReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDSearchParametersCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 336));
  return Specified;
}

void sub_188BFA14C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188BFA88C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDSearchParametersIsDirty(uint64_t a1)
{
  unint64_t v2;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 336));
  v2 = *(_QWORD *)(a1 + 372);
  if ((v2 & 0x3A400000000) != 0)
    return 1;
  if ((v2 & 0x4000000000) != 0)
  {
    if ((GEOPDAutocompleteEntryIsDirty(*(os_unfair_lock_s **)(a1 + 304)) & 1) != 0)
      return 1;
    v2 = *(_QWORD *)(a1 + 372);
  }
  if ((v2 & 0x880000000) != 0)
    return 1;
  if ((v2 & 0x4000000) != 0)
  {
    if (GEOPDRecentRouteInfoIsDirty(*(_QWORD *)(a1 + 208)))
      return 1;
    v2 = *(_QWORD *)(a1 + 372);
  }
  if ((v2 & 0x40000000) != 0)
  {
    if ((GEOPDSSearchFilterIsDirty(*(os_unfair_lock_s **)(a1 + 240)) & 1) != 0)
      return 1;
    v2 = *(_QWORD *)(a1 + 372);
  }
  if ((v2 & 0x10000000) != 0)
  {
    if (GEOPDRetainedSearchMetadataIsDirty(*(_QWORD *)(a1 + 224)))
      return 1;
    v2 = *(_QWORD *)(a1 + 372);
  }
  if ((v2 & 0x208000) != 0)
    return 1;
  if ((v2 & 0x100000) != 0)
  {
    if (GEOPDSSearchEvChargingParametersIsDirty(*(_QWORD *)(a1 + 160)))
      return 1;
    v2 = *(_QWORD *)(a1 + 372);
  }
  if ((v2 & 0x80000) != 0)
  {
    if ((GEOPDETAFilterIsDirty(*(os_unfair_lock_s **)(a1 + 152)) & 1) != 0)
      return 1;
    v2 = *(_QWORD *)(a1 + 372);
  }
  if ((v2 & 0x20000) != 0)
    return 1;
  if ((v2 & 0x8000000) != 0)
  {
    if ((GEOPDResultRefinementQueryIsDirty(*(os_unfair_lock_s **)(a1 + 216)) & 1) != 0)
      return 1;
    v2 = *(_QWORD *)(a1 + 372);
  }
  if ((v2 & 0x1016000) != 0)
    return 1;
  if ((v2 & 0x100000000) != 0)
  {
    if (GEOPDSearchOriginationInfoIsDirty(*(_QWORD *)(a1 + 256)))
      return 1;
    v2 = *(_QWORD *)(a1 + 372);
  }
  if ((v2 & 0x220440000) != 0)
    return 1;
  if ((v2 & 0x2000000) != 0)
  {
    if ((GEOPDSPunchInHintsIsDirty(*(os_unfair_lock_s **)(a1 + 200)) & 1) != 0)
      return 1;
    v2 = *(_QWORD *)(a1 + 372);
  }
  if ((v2 & 0x1000000000) != 0)
    return 1;
  return (v2 >> 23) & 1;
}

void sub_188BFB16C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188BFC004(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchResultReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint32x4_t v13;
  int8x16_t v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  int *v20;
  int *v21;
  int *v22;
  int *v23;
  char v24;
  unsigned int v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  BOOL v31;
  int v32;
  unint64_t v34;
  BOOL v35;
  int *v36;
  int v37;
  int v38;
  BOOL v39;
  char v40;
  GEOMapRegion *v41;
  uint64_t v42;
  char v43;
  unsigned int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  char v50;
  unsigned int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  char v56;
  uint64_t v57;
  void *v58;
  char v59;
  char v60;
  char v61;
  char v62;
  char v63;
  unsigned int v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  char v69;
  char v70;
  unsigned int v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  char v75;
  char v76;
  unsigned int v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  char v82;
  char v83;
  unsigned int v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  char v88;
  char v89;
  char v90;
  char v91;
  char v92;
  char v93;
  unsigned int v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  char v99;
  char v100;
  unsigned int v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  char v105;
  id v106;
  void *v107;
  int v108;
  char v109;
  unsigned int v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  unint64_t v114;
  char v115;
  char v116;
  char v117;
  char v118;
  unsigned int v119;
  uint64_t v120;
  uint64_t v121;
  unint64_t v122;
  char v123;
  char v124;
  char v125;
  char v126;
  void *v127;
  char v128;
  BOOL v129;
  uint64_t v130;
  uint64_t v131;
  char v132;
  uint64_t v133;
  char v134;
  char v135;
  char v136;
  char v137;
  char v138;
  char v139;
  char v140;
  char v141;
  char v142;
  char v143;
  char v144;
  char v145;
  char v146;
  char v147;
  int v148;
  uint64_t v149;
  void *v150;
  int v152;
  char v153;
  char v154;
  char v155;
  char v156;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 216));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 212);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 208));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = *(_QWORD *)(a1 + 248);
  v13 = (uint32x4_t)vdupq_n_s32(v12);
  v14.i64[0] = 0x100000001;
  v14.i64[1] = 0x100000001;
  v15 = vaddvq_s32(vaddq_s32(vaddq_s32((int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v13, (uint32x4_t)xmmword_189CC9FC0), v14), (int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v13, (uint32x4_t)xmmword_189CC9FD0), v14)), vaddq_s32((int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v13, (uint32x4_t)xmmword_189CC9FE0), v14), (int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v13, (uint32x4_t)xmmword_189CC9FF0), v14))))+ ((v12 >> 23) & 1)+ (BYTE4(v12) & 1)+ ((v12 >> 27) & 1)+ ((v12 >> 11) & 1)+ ((v12 >> 21) & 1)+ ((v12 >> 33) & 1)+ ((v12 >> 10) & 1)+ (v12 >> 31);
  while (2)
  {
    v16 = 1;
    v17 = 1;
    v18 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v15;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v17 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v19 = v15 > 0x12;
        v153 = v19 & ~(_BYTE)v11 | v9;
        v154 = v19 | v11 | v153;
        if ((((v19 | v11) | v8) & 1) != 0)
          v20 = 0;
        else
          v20 = a3;
        v155 = (v20 == 0) | v19 | v11;
        v156 = v19 | v11;
        v21 = (int *)MEMORY[0x1E0D82BF0];
        v22 = (int *)MEMORY[0x1E0D82BC8];
        v23 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v15;
LABEL_7:
        v16 = v9;
LABEL_8:
        v17 = v10;
        v18 = v11;
LABEL_10:
        ++v7;
        v9 = v16;
        v10 = v17;
        v11 = v18;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v21) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v22))
      goto LABEL_319;
    v24 = 0;
    v25 = 0;
    v26 = 0;
    while (1)
    {
      v27 = *v21;
      v28 = *(_QWORD *)(v3 + v27);
      v29 = v28 + 1;
      if (v28 == -1 || v29 > *(_QWORD *)(v3 + *v6))
        break;
      v30 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v28);
      *(_QWORD *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0)
        goto LABEL_25;
      v24 += 7;
      v31 = v25++ >= 9;
      if (v31)
      {
        v26 = 0;
        v32 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v22) = 1;
LABEL_25:
    v32 = *(unsigned __int8 *)(v3 + *v22);
    if (*(_BYTE *)(v3 + *v22))
      v26 = 0;
LABEL_27:
    if (v32 || (v26 & 7) == 4)
    {
LABEL_319:
      v152 = 1;
      goto LABEL_320;
    }
    v34 = v26 >> 3;
    v35 = v156;
    if ((v155 & 1) == 0)
    {
      v36 = v20;
      do
      {
        v38 = *v36++;
        v37 = v38;
        v35 = v38 != 0;
        if (v38)
          v39 = v37 == (_DWORD)v34;
        else
          v39 = 1;
      }
      while (!v39);
    }
    switch((int)v34)
    {
      case 1:
        if (!v35)
          goto LABEL_241;
        if ((*(_BYTE *)(a1 + 250) & 2) == 0)
        {
          v40 = PBReaderPlaceMark();
          v6 = (int *)MEMORY[0x1E0D82BD8];
          if ((v40 & 1) == 0)
            goto LABEL_356;
          v41 = objc_alloc_init(GEOMapRegion);
          if (GEOMapRegionReadAllFrom((uint64_t)v41, (void *)v3))
          {
            PBReaderRecallMark();
            v42 = 72;
            goto LABEL_240;
          }
          goto LABEL_355;
        }
        v132 = PBReaderSkipValueWithTag();
        v6 = (int *)MEMORY[0x1E0D82BD8];
        if ((v132 & 1) == 0)
          goto LABEL_356;
        v133 = *(_QWORD *)(a1 + 248) << 46;
        goto LABEL_315;
      case 2:
        if (!v35 || (*(_BYTE *)(a1 + 249) & 0x80) != 0)
          goto LABEL_241;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_356;
        v41 = objc_alloc_init(GEOPDMultiLocalizedString);
        if (!GEOPDMultiLocalizedStringReadAllFrom((uint64_t)v41, (void *)v3, v10 & 1))
          goto LABEL_355;
        PBReaderRecallMark();
        -[GEOPDSearchResult _addNoFlagsDisambiguationLabel:](a1, v41);
        goto LABEL_155;
      case 3:
        if ((v8 & 1) == 0)
          goto LABEL_241;
        v43 = 0;
        v44 = 0;
        v45 = 0;
        *(_QWORD *)(a1 + 248) |= 0x100uLL;
        v6 = (int *)MEMORY[0x1E0D82BD8];
        while (2)
        {
          v46 = *v21;
          v47 = *(_QWORD *)(v3 + v46);
          v48 = v47 + 1;
          if (v47 == -1 || v48 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v22) = 1;
          }
          else
          {
            v49 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v47);
            *(_QWORD *)(v3 + v46) = v48;
            v45 |= (unint64_t)(v49 & 0x7F) << v43;
            if (v49 < 0)
            {
              v43 += 7;
              v31 = v44++ >= 9;
              if (v31)
              {
                v45 = 0;
                goto LABEL_246;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v22))
          v45 = 0;
LABEL_246:
        v129 = v45 != 0;
        v130 = 243;
        goto LABEL_279;
      case 4:
        if (!v35 || (*(_BYTE *)(a1 + 251) & 1) != 0)
          goto LABEL_241;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_356;
        v41 = objc_alloc_init(GEOPDRelatedSearchSuggestion);
        if (!GEOPDRelatedSearchSuggestionReadAllFrom((uint64_t)v41, (void *)v3, v10 & 1))
          goto LABEL_355;
        PBReaderRecallMark();
        -[GEOPDSearchResult _addNoFlagsRelatedSearchSuggestion:](a1, v41);
        goto LABEL_155;
      case 5:
        if ((v8 & 1) == 0)
          goto LABEL_241;
        v50 = 0;
        v51 = 0;
        v52 = 0;
        *(_QWORD *)(a1 + 248) |= 8uLL;
        v6 = (int *)MEMORY[0x1E0D82BD8];
        while (2)
        {
          v53 = *v21;
          v54 = *(_QWORD *)(v3 + v53);
          v55 = v54 + 1;
          if (v54 == -1 || v55 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v22) = 1;
          }
          else
          {
            v56 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v54);
            *(_QWORD *)(v3 + v53) = v55;
            v52 |= (unint64_t)(v56 & 0x7F) << v50;
            if (v56 < 0)
            {
              v50 += 7;
              v31 = v51++ >= 9;
              if (v31)
              {
                LODWORD(v52) = 0;
                goto LABEL_250;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v22))
          LODWORD(v52) = 0;
LABEL_250:
        v131 = 232;
        goto LABEL_284;
      case 6:
        if (!v35)
          goto LABEL_241;
        if ((*(_BYTE *)(a1 + 251) & 4) == 0)
        {
          PBReaderReadString();
          v57 = objc_claimAutoreleasedReturnValue();
          v58 = *(void **)(a1 + 144);
          *(_QWORD *)(a1 + 144) = v57;

          --v7;
LABEL_156:
          v22 = (int *)MEMORY[0x1E0D82BC8];
          v6 = (int *)MEMORY[0x1E0D82BD8];
          goto LABEL_317;
        }
        v134 = PBReaderSkipValueWithTag();
        v6 = (int *)MEMORY[0x1E0D82BD8];
        if ((v134 & 1) == 0)
          goto LABEL_356;
        v133 = *(_QWORD *)(a1 + 248) << 37;
        goto LABEL_315;
      case 7:
        if (!v35)
          goto LABEL_241;
        if ((*(_BYTE *)(a1 + 249) & 0x20) != 0)
        {
          v135 = PBReaderSkipValueWithTag();
          v6 = (int *)MEMORY[0x1E0D82BD8];
          if ((v135 & 1) == 0)
            goto LABEL_356;
          v133 = *(_QWORD *)(a1 + 248) << 50;
          goto LABEL_315;
        }
        v59 = PBReaderPlaceMark();
        v6 = (int *)MEMORY[0x1E0D82BD8];
        if ((v59 & 1) == 0)
          goto LABEL_356;
        v41 = objc_alloc_init(GEOPDRelatedSearchSuggestion);
        if (!GEOPDRelatedSearchSuggestionReadAllFrom((uint64_t)v41, (void *)v3, v10 & 1))
          goto LABEL_355;
        PBReaderRecallMark();
        v42 = 40;
        goto LABEL_240;
      case 8:
        if (!v35)
          goto LABEL_241;
        if ((*(_BYTE *)(a1 + 251) & 0x20) != 0)
        {
          v136 = PBReaderSkipValueWithTag();
          v6 = (int *)MEMORY[0x1E0D82BD8];
          if ((v136 & 1) == 0)
            goto LABEL_356;
          v133 = *(_QWORD *)(a1 + 248) << 34;
          goto LABEL_315;
        }
        v60 = PBReaderPlaceMark();
        v6 = (int *)MEMORY[0x1E0D82BD8];
        if ((v60 & 1) == 0)
          goto LABEL_356;
        v41 = objc_alloc_init(GEOPDSearchClientBehavior);
        if (!GEOPDSearchClientBehaviorReadAllFrom((uint64_t)v41, (void *)v3))
          goto LABEL_355;
        PBReaderRecallMark();
        v42 = 168;
        goto LABEL_240;
      case 9:
        if (!v35 || (*(_BYTE *)(a1 + 251) & 2) != 0)
          goto LABEL_241;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_356;
        v41 = objc_alloc_init(GEOPDResultDetourInfo);
        if (!GEOPDResultDetourInfoReadAllFrom((uint64_t)v41, (void *)v3))
          goto LABEL_355;
        PBReaderRecallMark();
        -[GEOPDSearchResult _addNoFlagsResultDetourInfo:](a1, v41);
        goto LABEL_155;
      case 10:
        if (!v35)
          goto LABEL_241;
        if ((*(_BYTE *)(a1 + 249) & 0x40) != 0)
        {
          v137 = PBReaderSkipValueWithTag();
          v6 = (int *)MEMORY[0x1E0D82BD8];
          if ((v137 & 1) == 0)
            goto LABEL_356;
          v133 = *(_QWORD *)(a1 + 248) << 49;
          goto LABEL_315;
        }
        v61 = PBReaderPlaceMark();
        v6 = (int *)MEMORY[0x1E0D82BD8];
        if ((v61 & 1) == 0)
          goto LABEL_356;
        v41 = objc_alloc_init(GEOPDDirectionIntent);
        if (!GEOPDDirectionIntentReadAllFrom((uint64_t)v41, (void *)v3, v10 & 1))
          goto LABEL_355;
        PBReaderRecallMark();
        v42 = 48;
        goto LABEL_240;
      case 11:
        if (!v35)
          goto LABEL_241;
        if ((*(_BYTE *)(a1 + 249) & 0x10) != 0)
        {
          v138 = PBReaderSkipValueWithTag();
          v6 = (int *)MEMORY[0x1E0D82BD8];
          if ((v138 & 1) == 0)
            goto LABEL_356;
          v133 = *(_QWORD *)(a1 + 248) << 51;
          goto LABEL_315;
        }
        v62 = PBReaderPlaceMark();
        v6 = (int *)MEMORY[0x1E0D82BD8];
        if ((v62 & 1) == 0)
          goto LABEL_356;
        v41 = objc_alloc_init(GEOPDResolvedItem);
        if (!GEOPDResolvedItemReadAllFrom((uint64_t)v41, (void *)v3))
          goto LABEL_355;
        PBReaderRecallMark();
        v42 = 32;
        goto LABEL_240;
      case 12:
        if (!v35 || (*(_BYTE *)(a1 + 250) & 1) != 0)
          goto LABEL_241;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_356;
        v41 = objc_alloc_init(GEOPDDisplayHeaderSubstitute);
        if (!GEOPDDisplayHeaderSubstituteReadAllFrom((uint64_t)v41, (void *)v3, v10 & 1))
          goto LABEL_355;
        PBReaderRecallMark();
        -[GEOPDSearchResult _addNoFlagsDisplayHeaderSubstitute:](a1, v41);
        goto LABEL_155;
      case 13:
        if ((v8 & 1) == 0)
          goto LABEL_241;
        v63 = 0;
        v64 = 0;
        v65 = 0;
        *(_QWORD *)(a1 + 248) |= 0x40uLL;
        v6 = (int *)MEMORY[0x1E0D82BD8];
        while (2)
        {
          v66 = *v21;
          v67 = *(_QWORD *)(v3 + v66);
          v68 = v67 + 1;
          if (v67 == -1 || v68 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v22) = 1;
          }
          else
          {
            v69 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v67);
            *(_QWORD *)(v3 + v66) = v68;
            v65 |= (unint64_t)(v69 & 0x7F) << v63;
            if (v69 < 0)
            {
              v63 += 7;
              v31 = v64++ >= 9;
              if (v31)
              {
                v65 = 0;
                goto LABEL_254;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v22))
          v65 = 0;
LABEL_254:
        v129 = v65 != 0;
        v130 = 241;
        goto LABEL_279;
      case 14:
        if ((v8 & 1) == 0)
          goto LABEL_241;
        v70 = 0;
        v71 = 0;
        v52 = 0;
        *(_QWORD *)(a1 + 248) |= 1uLL;
        v6 = (int *)MEMORY[0x1E0D82BD8];
        while (2)
        {
          v72 = *v21;
          v73 = *(_QWORD *)(v3 + v72);
          v74 = v73 + 1;
          if (v73 == -1 || v74 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v22) = 1;
          }
          else
          {
            v75 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v73);
            *(_QWORD *)(v3 + v72) = v74;
            v52 |= (unint64_t)(v75 & 0x7F) << v70;
            if (v75 < 0)
            {
              v70 += 7;
              v31 = v71++ >= 9;
              if (v31)
              {
                LODWORD(v52) = 0;
                goto LABEL_258;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v22))
          LODWORD(v52) = 0;
LABEL_258:
        v131 = 220;
        goto LABEL_284;
      case 15:
        if ((v8 & 1) == 0)
          goto LABEL_241;
        v76 = 0;
        v77 = 0;
        v78 = 0;
        *(_QWORD *)(a1 + 248) |= 0x200uLL;
        v6 = (int *)MEMORY[0x1E0D82BD8];
        while (2)
        {
          v79 = *v21;
          v80 = *(_QWORD *)(v3 + v79);
          v81 = v80 + 1;
          if (v80 == -1 || v81 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v22) = 1;
          }
          else
          {
            v82 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v80);
            *(_QWORD *)(v3 + v79) = v81;
            v78 |= (unint64_t)(v82 & 0x7F) << v76;
            if (v82 < 0)
            {
              v76 += 7;
              v31 = v77++ >= 9;
              if (v31)
              {
                v78 = 0;
                goto LABEL_262;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v22))
          v78 = 0;
LABEL_262:
        v129 = v78 != 0;
        v130 = 244;
        goto LABEL_279;
      case 16:
        if ((v8 & 1) == 0)
          goto LABEL_241;
        v83 = 0;
        v84 = 0;
        v52 = 0;
        *(_QWORD *)(a1 + 248) |= 4uLL;
        v6 = (int *)MEMORY[0x1E0D82BD8];
        while (2)
        {
          v85 = *v21;
          v86 = *(_QWORD *)(v3 + v85);
          v87 = v86 + 1;
          if (v86 == -1 || v87 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v22) = 1;
          }
          else
          {
            v88 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v86);
            *(_QWORD *)(v3 + v85) = v87;
            v52 |= (unint64_t)(v88 & 0x7F) << v83;
            if (v88 < 0)
            {
              v83 += 7;
              v31 = v84++ >= 9;
              if (v31)
              {
                LODWORD(v52) = 0;
                goto LABEL_266;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v22))
          LODWORD(v52) = 0;
LABEL_266:
        v131 = 228;
        goto LABEL_284;
      case 17:
        if (!v35 || (*(_BYTE *)(a1 + 251) & 0x10) != 0)
          goto LABEL_241;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_356;
        v41 = objc_alloc_init(GEOPDRetainedSearchMetadata);
        if (!GEOPDRetainedSearchMetadataReadAllFrom((uint64_t)v41, (void *)v3, v10 & 1))
          goto LABEL_355;
        PBReaderRecallMark();
        -[GEOPDSearchResult _addNoFlagsRetainSearch:](a1, v41);
        goto LABEL_155;
      case 18:
        if (!v35 || (*(_BYTE *)(a1 + 251) & 0x40) != 0)
          goto LABEL_241;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_356;
        v41 = objc_alloc_init(GEOPDSSearchResultSection);
        if (!GEOPDSSearchResultSectionReadAllFrom((uint64_t)v41, (void *)v3, v10 & 1))
          goto LABEL_355;
        PBReaderRecallMark();
        -[GEOPDSearchResult _addNoFlagsSearchResultSection:](a1, v41);
        goto LABEL_155;
      case 19:
        if (!v35 || (*(_BYTE *)(a1 + 250) & 0x80) != 0)
          goto LABEL_241;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_356;
        v41 = objc_alloc_init(GEOPDRelatedEntitySection);
        if (!GEOPDRelatedEntitySectionReadAllFrom((uint64_t)v41, (void *)v3, v10 & 1))
          goto LABEL_355;
        PBReaderRecallMark();
        -[GEOPDSearchResult _addNoFlagsRelatedEntitySection:](a1, v41);
        goto LABEL_155;
      case 20:
        if (!v35 || (*(_BYTE *)(a1 + 252) & 1) != 0)
          goto LABEL_241;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_356;
        v41 = objc_alloc_init(GEOPDSSearchTierMetadata);
        if (!GEOPDSSearchTierMetadataReadAllFrom((uint64_t)v41, (void *)v3))
          goto LABEL_355;
        PBReaderRecallMark();
        -[GEOPDSearchResult _addNoFlagsSearchTierMetadata:](a1, v41);
LABEL_155:

        goto LABEL_156;
      case 21:
        if (!v35)
          goto LABEL_241;
        if ((*(_BYTE *)(a1 + 251) & 8) != 0)
        {
          v139 = PBReaderSkipValueWithTag();
          v6 = (int *)MEMORY[0x1E0D82BD8];
          if ((v139 & 1) == 0)
            goto LABEL_356;
          v133 = *(_QWORD *)(a1 + 248) << 36;
          goto LABEL_315;
        }
        v89 = PBReaderPlaceMark();
        v6 = (int *)MEMORY[0x1E0D82BD8];
        if ((v89 & 1) == 0)
          goto LABEL_356;
        v41 = objc_alloc_init(GEOPDResultRefinementGroup);
        if (!GEOPDResultRefinementGroupReadAllFrom((uint64_t)v41, (void *)v3, v10 & 1))
          goto LABEL_355;
        PBReaderRecallMark();
        v42 = 152;
        goto LABEL_240;
      case 22:
        if (!v35)
          goto LABEL_241;
        if ((*(_BYTE *)(a1 + 249) & 8) != 0)
        {
          v140 = PBReaderSkipValueWithTag();
          v6 = (int *)MEMORY[0x1E0D82BD8];
          if ((v140 & 1) == 0)
            goto LABEL_356;
          v133 = *(_QWORD *)(a1 + 248) << 52;
          goto LABEL_315;
        }
        v90 = PBReaderPlaceMark();
        v6 = (int *)MEMORY[0x1E0D82BD8];
        if ((v90 & 1) == 0)
          goto LABEL_356;
        v41 = objc_alloc_init(GEOPDSSearchAutoRedoThreshold);
        if (!GEOPDSSearchAutoRedoThresholdReadAllFrom((uint64_t)v41, (void *)v3))
          goto LABEL_355;
        PBReaderRecallMark();
        v42 = 24;
        goto LABEL_240;
      case 23:
        if (!v35)
          goto LABEL_241;
        if ((*(_BYTE *)(a1 + 250) & 0x20) != 0)
        {
          v141 = PBReaderSkipValueWithTag();
          v6 = (int *)MEMORY[0x1E0D82BD8];
          if ((v141 & 1) == 0)
            goto LABEL_356;
          v133 = *(_QWORD *)(a1 + 248) << 42;
          goto LABEL_315;
        }
        v91 = PBReaderPlaceMark();
        v6 = (int *)MEMORY[0x1E0D82BD8];
        if ((v91 & 1) == 0)
          goto LABEL_356;
        v41 = objc_alloc_init(GEOPDPlaceSummaryLayoutMetadata);
        if (!GEOPDPlaceSummaryLayoutMetadataReadAllFrom((uint64_t)v41, (void *)v3, v10 & 1))
          goto LABEL_355;
        PBReaderRecallMark();
        v42 = 104;
        goto LABEL_240;
      case 24:
        if (!v35)
          goto LABEL_241;
        if ((*(_BYTE *)(a1 + 252) & 2) != 0)
        {
          v142 = PBReaderSkipValueWithTag();
          v6 = (int *)MEMORY[0x1E0D82BD8];
          if ((v142 & 1) == 0)
            goto LABEL_356;
          v133 = *(_QWORD *)(a1 + 248) << 30;
          goto LABEL_315;
        }
        v92 = PBReaderPlaceMark();
        v6 = (int *)MEMORY[0x1E0D82BD8];
        if ((v92 & 1) == 0)
          goto LABEL_356;
        v41 = objc_alloc_init(GEOPDSearchSectionList);
        if (!GEOPDSearchSectionListReadAllFrom((uint64_t)v41, (void *)v3, v10 & 1))
          goto LABEL_355;
        PBReaderRecallMark();
        v42 = 200;
        goto LABEL_240;
      case 25:
        if ((v8 & 1) == 0)
          goto LABEL_241;
        v93 = 0;
        v94 = 0;
        v95 = 0;
        *(_QWORD *)(a1 + 248) |= 0x20uLL;
        v6 = (int *)MEMORY[0x1E0D82BD8];
        while (2)
        {
          v96 = *v21;
          v97 = *(_QWORD *)(v3 + v96);
          v98 = v97 + 1;
          if (v97 == -1 || v98 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v22) = 1;
          }
          else
          {
            v99 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v97);
            *(_QWORD *)(v3 + v96) = v98;
            v95 |= (unint64_t)(v99 & 0x7F) << v93;
            if (v99 < 0)
            {
              v93 += 7;
              v31 = v94++ >= 9;
              if (v31)
              {
                v95 = 0;
                goto LABEL_270;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v22))
          v95 = 0;
LABEL_270:
        v129 = v95 != 0;
        v130 = 240;
        goto LABEL_279;
      case 26:
        if ((v8 & 1) == 0)
          goto LABEL_241;
        v100 = 0;
        v101 = 0;
        v52 = 0;
        *(_QWORD *)(a1 + 248) |= 0x10uLL;
        v6 = (int *)MEMORY[0x1E0D82BD8];
        while (2)
        {
          v102 = *v21;
          v103 = *(_QWORD *)(v3 + v102);
          v104 = v103 + 1;
          if (v103 == -1 || v104 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v22) = 1;
          }
          else
          {
            v105 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v103);
            *(_QWORD *)(v3 + v102) = v104;
            v52 |= (unint64_t)(v105 & 0x7F) << v100;
            if (v105 < 0)
            {
              v100 += 7;
              v31 = v101++ >= 9;
              if (v31)
              {
                LODWORD(v52) = 0;
                goto LABEL_274;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v22))
          LODWORD(v52) = 0;
LABEL_274:
        v131 = 236;
        goto LABEL_284;
      case 28:
        if ((v8 & 1) == 0)
          goto LABEL_241;
        v109 = 0;
        v110 = 0;
        v111 = 0;
        *(_QWORD *)(a1 + 248) |= 0x80uLL;
        v6 = (int *)MEMORY[0x1E0D82BD8];
        while (2)
        {
          v112 = *v21;
          v113 = *(_QWORD *)(v3 + v112);
          v114 = v113 + 1;
          if (v113 == -1 || v114 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v22) = 1;
          }
          else
          {
            v115 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v113);
            *(_QWORD *)(v3 + v112) = v114;
            v111 |= (unint64_t)(v115 & 0x7F) << v109;
            if (v115 < 0)
            {
              v109 += 7;
              v31 = v110++ >= 9;
              if (v31)
              {
                v111 = 0;
                goto LABEL_278;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v22))
          v111 = 0;
LABEL_278:
        v129 = v111 != 0;
        v130 = 242;
LABEL_279:
        *(_BYTE *)(a1 + v130) = v129;
        goto LABEL_318;
      case 29:
        if (!v35)
          goto LABEL_241;
        if ((*(_BYTE *)(a1 + 251) & 0x80) != 0)
        {
          v143 = PBReaderSkipValueWithTag();
          v6 = (int *)MEMORY[0x1E0D82BD8];
          if ((v143 & 1) == 0)
            goto LABEL_356;
          v133 = *(_QWORD *)(a1 + 248) << 32;
          goto LABEL_315;
        }
        v116 = PBReaderPlaceMark();
        v6 = (int *)MEMORY[0x1E0D82BD8];
        if ((v116 & 1) == 0)
          goto LABEL_356;
        v41 = objc_alloc_init(GEOPDSSearchSessionData);
        if (!GEOPDSSearchSessionDataReadAllFrom((uint64_t)v41, (void *)v3))
          goto LABEL_355;
        PBReaderRecallMark();
        v42 = 184;
        goto LABEL_240;
      case 30:
        if (!v35)
          goto LABEL_241;
        if ((*(_BYTE *)(a1 + 250) & 8) != 0)
        {
          v144 = PBReaderSkipValueWithTag();
          v6 = (int *)MEMORY[0x1E0D82BD8];
          if ((v144 & 1) == 0)
            goto LABEL_356;
          v133 = *(_QWORD *)(a1 + 248) << 44;
          goto LABEL_315;
        }
        v117 = PBReaderPlaceMark();
        v6 = (int *)MEMORY[0x1E0D82BD8];
        if ((v117 & 1) == 0)
          goto LABEL_356;
        v41 = objc_alloc_init(GEOPDMapsIdentifier);
        if (!GEOPDMapsIdentifierReadAllFrom((uint64_t)v41, (void *)v3))
          goto LABEL_355;
        PBReaderRecallMark();
        v42 = 88;
        goto LABEL_240;
      case 31:
        if ((v8 & 1) == 0)
          goto LABEL_241;
        v118 = 0;
        v119 = 0;
        v52 = 0;
        *(_QWORD *)(a1 + 248) |= 2uLL;
        v6 = (int *)MEMORY[0x1E0D82BD8];
        while (2)
        {
          v120 = *v21;
          v121 = *(_QWORD *)(v3 + v120);
          v122 = v121 + 1;
          if (v121 == -1 || v122 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v22) = 1;
          }
          else
          {
            v123 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v121);
            *(_QWORD *)(v3 + v120) = v122;
            v52 |= (unint64_t)(v123 & 0x7F) << v118;
            if (v123 < 0)
            {
              v118 += 7;
              v31 = v119++ >= 9;
              if (v31)
              {
                LODWORD(v52) = 0;
                goto LABEL_283;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v22))
          LODWORD(v52) = 0;
LABEL_283:
        v131 = 224;
LABEL_284:
        *(_DWORD *)(a1 + v131) = v52;
        goto LABEL_318;
      case 32:
        if (!v35)
          goto LABEL_241;
        if ((*(_BYTE *)(a1 + 250) & 4) != 0)
        {
          v145 = PBReaderSkipValueWithTag();
          v6 = (int *)MEMORY[0x1E0D82BD8];
          if ((v145 & 1) == 0)
            goto LABEL_356;
          v133 = *(_QWORD *)(a1 + 248) << 45;
          goto LABEL_315;
        }
        v124 = PBReaderPlaceMark();
        v6 = (int *)MEMORY[0x1E0D82BD8];
        if ((v124 & 1) == 0)
          goto LABEL_356;
        v41 = objc_alloc_init(GEOPDGuideSummaryLayoutMetadata);
        if (!GEOPDGuideSummaryLayoutMetadataReadAllFrom((uint64_t)v41, (void *)v3))
          goto LABEL_355;
        PBReaderRecallMark();
        v42 = 80;
        goto LABEL_240;
      case 33:
        if (!v35)
          goto LABEL_241;
        if ((*(_BYTE *)(a1 + 250) & 0x10) != 0)
        {
          v146 = PBReaderSkipValueWithTag();
          v6 = (int *)MEMORY[0x1E0D82BD8];
          if ((v146 & 1) == 0)
            goto LABEL_356;
          v133 = *(_QWORD *)(a1 + 248) << 43;
          goto LABEL_315;
        }
        v125 = PBReaderPlaceMark();
        v6 = (int *)MEMORY[0x1E0D82BD8];
        if ((v125 & 1) == 0)
          goto LABEL_356;
        v41 = objc_alloc_init(GEOPDPaginationInfo);
        if (!GEOPDPaginationInfoReadAllFrom((uint64_t)v41, (void *)v3, v10 & 1))
          goto LABEL_355;
        PBReaderRecallMark();
        v42 = 96;
        goto LABEL_240;
      case 34:
        if (!v35)
          goto LABEL_241;
        if ((*(_BYTE *)(a1 + 250) & 0x40) != 0)
        {
          v147 = PBReaderSkipValueWithTag();
          v6 = (int *)MEMORY[0x1E0D82BD8];
          if ((v147 & 1) == 0)
            goto LABEL_356;
          v133 = *(_QWORD *)(a1 + 248) << 41;
LABEL_315:
          v7 += v133 >> 63;
LABEL_316:
          v22 = (int *)MEMORY[0x1E0D82BC8];
LABEL_317:
          v23 = (int *)MEMORY[0x1E0D82BB8];
LABEL_318:
          if (!(v154 & 1 | (v7 != 0)))
            goto LABEL_319;
          continue;
        }
        v126 = PBReaderPlaceMark();
        v6 = (int *)MEMORY[0x1E0D82BD8];
        if ((v126 & 1) == 0)
          goto LABEL_356;
        v41 = objc_alloc_init(GEOPDSSearchRedoButtonThreshold);
        if (GEOPDSSearchRedoButtonThresholdReadAllFrom((uint64_t)v41, (void *)v3))
        {
          PBReaderRecallMark();
          v42 = 112;
LABEL_240:
          v127 = *(void **)(a1 + v42);
          *(_QWORD *)(a1 + v42) = v41;

          --v7;
          goto LABEL_316;
        }
LABEL_355:

LABEL_356:
        v152 = 0;
        v22 = (int *)MEMORY[0x1E0D82BC8];
LABEL_320:
        if ((v153 & 1) != 0)
LABEL_321:
          *(_QWORD *)(a1 + 248) |= 0x400uLL;
        if (v156 & 1 | ((v152 & 1) == 0))
        {
          *(_QWORD *)(a1 + 248) |= 0x3FFFFF800uLL;
        }
        else if (v20)
        {
          while (1)
          {
            v148 = *v20++;
            v149 = 0x20000;
            switch(v148)
            {
              case 0:
                goto LABEL_349;
              case 1:
                goto LABEL_348;
              case 2:
                v149 = 0x8000;
                goto LABEL_348;
              case 4:
                v149 = 0x1000000;
                goto LABEL_348;
              case 6:
                v149 = 0x4000000;
                goto LABEL_348;
              case 7:
                v149 = 0x2000;
                goto LABEL_348;
              case 8:
                v149 = 0x20000000;
                goto LABEL_348;
              case 9:
                v149 = 0x2000000;
                goto LABEL_348;
              case 10:
                v149 = 0x4000;
                goto LABEL_348;
              case 11:
                v149 = 4096;
                goto LABEL_348;
              case 12:
                v149 = 0x10000;
                goto LABEL_348;
              case 17:
                v149 = 0x10000000;
                goto LABEL_348;
              case 18:
                v149 = 0x40000000;
                goto LABEL_348;
              case 19:
                v149 = 0x800000;
                goto LABEL_348;
              case 20:
                v149 = 0x100000000;
                goto LABEL_348;
              case 21:
                v149 = 0x8000000;
                goto LABEL_348;
              case 22:
                v149 = 2048;
                goto LABEL_348;
              case 23:
                v149 = 0x200000;
                goto LABEL_348;
              case 24:
                v149 = 0x200000000;
                goto LABEL_348;
              case 29:
                v149 = 0x80000000;
                goto LABEL_348;
              case 30:
                v149 = 0x80000;
                goto LABEL_348;
              case 32:
                v149 = 0x40000;
                goto LABEL_348;
              case 33:
                v149 = 0x100000;
                goto LABEL_348;
              case 34:
                v149 = 0x400000;
LABEL_348:
                *(_QWORD *)(a1 + 248) |= v149;
                break;
              default:
                continue;
            }
          }
        }
LABEL_349:
        if (v152)
          v3 = *(_BYTE *)(v3 + *v22) == 0;
        else
          v3 = 0;
        if ((v156 & 1) != 0)
        {
          v150 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      default:
        if ((v153 & 1) == 0 || (*(_BYTE *)(a1 + 249) & 4) != 0)
        {
LABEL_241:
          v128 = PBReaderSkipValueWithTag();
          v23 = (int *)MEMORY[0x1E0D82BB8];
          v22 = (int *)MEMORY[0x1E0D82BC8];
          v6 = (int *)MEMORY[0x1E0D82BD8];
          if ((v128 & 1) == 0)
          {
            v152 = 0;
            goto LABEL_320;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v106 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v107 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v106;

          }
          v108 = PBUnknownFieldAdd();
          v22 = (int *)MEMORY[0x1E0D82BC8];
          v6 = (int *)MEMORY[0x1E0D82BD8];
          v23 = (int *)MEMORY[0x1E0D82BB8];
          if (!v108)
          {
            v152 = 0;
            goto LABEL_321;
          }
        }
        goto LABEL_318;
    }
  }
}

void sub_188BFDAF8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188BFDCE4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188BFDF3C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188BFE08C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188BFE1DC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188BFE32C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188BFE4E4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188BFE634(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188BFE788(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188BFEA54(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188BFEC4C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188BFEE38(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188BFF074(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188BFF1A0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188BFF2F0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188BFF440(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188BFF590(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188BFF744(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188BFF894(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188BFFA50(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188BFFC04(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188C01248(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188C01328(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDSearchResultCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  _BYTE v72[128];
  _BYTE v73[128];
  _BYTE v74[128];
  _BYTE v75[128];
  _BYTE v76[128];
  _BYTE v77[128];
  _BYTE v78[128];
  _BYTE v79[128];
  uint64_t v80;

  v80 = *MEMORY[0x1E0C80C00];
  objc_msgSend(*(id *)(a1 + 72), "readAll:", 1);
  v70 = 0u;
  v71 = 0u;
  v68 = 0u;
  v69 = 0u;
  v2 = *(id *)(a1 + 56);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v68, v79, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v69;
    while (1)
    {
      if (*(_QWORD *)v69 != v5)
        objc_enumerationMutation(v2);
      if (!--v4)
      {
        v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v68, v79, 16);
        if (!v4)
          break;
      }
    }
  }

  v66 = 0u;
  v67 = 0u;
  v64 = 0u;
  v65 = 0u;
  v6 = *(id *)(a1 + 128);
  v7 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v64, v78, 16);
  if (v7)
  {
    v8 = v7;
    v9 = *(_QWORD *)v65;
    do
    {
      v10 = 0;
      do
      {
        if (*(_QWORD *)v65 != v9)
          objc_enumerationMutation(v6);
        -[GEOPDRelatedSearchSuggestion readAll:](*(_QWORD *)(*((_QWORD *)&v64 + 1) + 8 * v10++), 1);
      }
      while (v8 != v10);
      v8 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v64, v78, 16);
    }
    while (v8);
  }

  -[GEOPDRelatedSearchSuggestion readAll:](*(_QWORD *)(a1 + 40), 1);
  v62 = 0u;
  v63 = 0u;
  v60 = 0u;
  v61 = 0u;
  v11 = *(id *)(a1 + 136);
  v12 = objc_msgSend(v11, "countByEnumeratingWithState:objects:count:", &v60, v77, 16);
  if (v12)
  {
    v13 = v12;
    v14 = *(_QWORD *)v61;
    do
    {
      v15 = 0;
      do
      {
        if (*(_QWORD *)v61 != v14)
          objc_enumerationMutation(v11);
        objc_msgSend(*(id *)(*((_QWORD *)&v60 + 1) + 8 * v15++), "readAll:", 1);
      }
      while (v13 != v15);
      v13 = objc_msgSend(v11, "countByEnumeratingWithState:objects:count:", &v60, v77, 16);
    }
    while (v13);
  }

  -[GEOPDDirectionIntent readAll:](*(_QWORD *)(a1 + 48), 1);
  v58 = 0u;
  v59 = 0u;
  v56 = 0u;
  v57 = 0u;
  v16 = *(id *)(a1 + 64);
  v17 = objc_msgSend(v16, "countByEnumeratingWithState:objects:count:", &v56, v76, 16);
  if (v17)
  {
    v18 = v17;
    v19 = *(_QWORD *)v57;
    do
    {
      v20 = 0;
      do
      {
        if (*(_QWORD *)v57 != v19)
          objc_enumerationMutation(v16);
        -[GEOPDDisplayHeaderSubstitute readAll:](*(_QWORD *)(*((_QWORD *)&v56 + 1) + 8 * v20++), 1);
      }
      while (v18 != v20);
      v18 = objc_msgSend(v16, "countByEnumeratingWithState:objects:count:", &v56, v76, 16);
    }
    while (v18);
  }

  v54 = 0u;
  v55 = 0u;
  v52 = 0u;
  v53 = 0u;
  v21 = *(id *)(a1 + 160);
  v22 = objc_msgSend(v21, "countByEnumeratingWithState:objects:count:", &v52, v75, 16);
  if (v22)
  {
    v23 = v22;
    v24 = *(_QWORD *)v53;
    do
    {
      v25 = 0;
      do
      {
        if (*(_QWORD *)v53 != v24)
          objc_enumerationMutation(v21);
        -[GEOPDRetainedSearchMetadata readAll:](*(_QWORD *)(*((_QWORD *)&v52 + 1) + 8 * v25++), 1);
      }
      while (v23 != v25);
      v23 = objc_msgSend(v21, "countByEnumeratingWithState:objects:count:", &v52, v75, 16);
    }
    while (v23);
  }

  v50 = 0u;
  v51 = 0u;
  v48 = 0u;
  v49 = 0u;
  v26 = *(id *)(a1 + 176);
  v27 = objc_msgSend(v26, "countByEnumeratingWithState:objects:count:", &v48, v74, 16);
  if (v27)
  {
    v28 = v27;
    v29 = *(_QWORD *)v49;
    do
    {
      v30 = 0;
      do
      {
        if (*(_QWORD *)v49 != v29)
          objc_enumerationMutation(v26);
        -[GEOPDSSearchResultSection readAll:](*(_QWORD *)(*((_QWORD *)&v48 + 1) + 8 * v30++), 1);
      }
      while (v28 != v30);
      v28 = objc_msgSend(v26, "countByEnumeratingWithState:objects:count:", &v48, v74, 16);
    }
    while (v28);
  }

  v46 = 0u;
  v47 = 0u;
  v44 = 0u;
  v45 = 0u;
  v31 = *(id *)(a1 + 120);
  v32 = objc_msgSend(v31, "countByEnumeratingWithState:objects:count:", &v44, v73, 16);
  if (v32)
  {
    v33 = v32;
    v34 = *(_QWORD *)v45;
    do
    {
      v35 = 0;
      do
      {
        if (*(_QWORD *)v45 != v34)
          objc_enumerationMutation(v31);
        -[GEOPDRelatedEntitySection readAll:](*(_QWORD *)(*((_QWORD *)&v44 + 1) + 8 * v35++), 1);
      }
      while (v33 != v35);
      v33 = objc_msgSend(v31, "countByEnumeratingWithState:objects:count:", &v44, v73, 16);
    }
    while (v33);
  }

  v42 = 0u;
  v43 = 0u;
  v40 = 0u;
  v41 = 0u;
  v36 = *(id *)(a1 + 192);
  v37 = objc_msgSend(v36, "countByEnumeratingWithState:objects:count:", &v40, v72, 16);
  if (v37)
  {
    v38 = v37;
    v39 = *(_QWORD *)v41;
    while (1)
    {
      if (*(_QWORD *)v41 != v39)
        objc_enumerationMutation(v36);
      if (!--v38)
      {
        v38 = objc_msgSend(v36, "countByEnumeratingWithState:objects:count:", &v40, v72, 16);
        if (!v38)
          break;
      }
    }
  }

  -[GEOPDResultRefinementGroup readAll:](*(_QWORD *)(a1 + 152), 1);
  objc_msgSend(*(id *)(a1 + 104), "readAll:", 1, v40);
  objc_msgSend(*(id *)(a1 + 88), "readAll:", 1);
  -[GEOPDPaginationInfo readAll:](*(_QWORD *)(a1 + 96), 1);
}

unint64_t GEOPDSearchResultReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 212))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDSearchResultReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 216));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 208) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 212) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDSearchResultReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDSearchResultReadAllFrom_initialTag;
  Specified = GEOPDSearchResultReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDSearchResultCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 216));
  return Specified;
}

void sub_188C034B4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188C03DF8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDSearchResultIsDirty(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  _BYTE v44[128];
  _BYTE v45[128];
  _BYTE v46[128];
  _BYTE v47[128];
  _BYTE v48[128];
  uint64_t v49;

  v49 = *MEMORY[0x1E0C80C00];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 216));
  v2 = *(_QWORD *)(a1 + 248);
  if ((v2 & 0x405028000) != 0)
    return 1;
  if ((v2 & 0x2000) != 0)
  {
    if (GEOPDRelatedSearchSuggestionIsDirty(*(_QWORD *)(a1 + 40)))
      return 1;
    v2 = *(_QWORD *)(a1 + 248);
  }
  if ((v2 & 0x22000000) == 0)
  {
    if ((v2 & 0x4000) == 0)
      goto LABEL_9;
    if (!GEOPDDirectionIntentIsDirty(*(_QWORD *)(a1 + 48)))
    {
      v2 = *(_QWORD *)(a1 + 248);
LABEL_9:
      if ((v2 & 0x150811000) != 0)
        return 1;
      if ((v2 & 0x8000000) != 0)
      {
        if ((GEOPDResultRefinementGroupIsDirty(*(os_unfair_lock_s **)(a1 + 152)) & 1) != 0)
          return 1;
        v2 = *(_QWORD *)(a1 + 248);
      }
      if ((v2 & 0x800) != 0)
        return 1;
      if ((v2 & 0x200000) != 0)
      {
        if ((GEOPDPlaceSummaryLayoutMetadataIsDirty(*(os_unfair_lock_s **)(a1 + 104)) & 1) != 0)
          return 1;
        v2 = *(_QWORD *)(a1 + 248);
      }
      if ((v2 & 0x2800C0000) != 0)
        return 1;
      if ((v2 & 0x100000) != 0)
      {
        if (GEOPDPaginationInfoIsDirty(*(_QWORD *)(a1 + 96)))
          return 1;
        v2 = *(_QWORD *)(a1 + 248);
      }
      if ((v2 & 0x400000) != 0)
        return 1;
      if ((v2 & 0x1000000) != 0)
      {
        v42 = 0u;
        v43 = 0u;
        v40 = 0u;
        v41 = 0u;
        v5 = *(id *)(a1 + 128);
        v6 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v40, v48, 16);
        if (v6)
        {
          v7 = v6;
          v8 = *(_QWORD *)v41;
LABEL_27:
          v9 = 0;
          while (1)
          {
            if (*(_QWORD *)v41 != v8)
              objc_enumerationMutation(v5);
            if (GEOPDRelatedSearchSuggestionIsDirty(*(_QWORD *)(*((_QWORD *)&v40 + 1) + 8 * v9)))
              goto LABEL_75;
            if (v7 == ++v9)
            {
              v7 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v40, v48, 16);
              if (v7)
                goto LABEL_27;
              break;
            }
          }
        }

        v2 = *(_QWORD *)(a1 + 248);
      }
      if ((v2 & 0x10000) != 0)
      {
        v38 = 0u;
        v39 = 0u;
        v36 = 0u;
        v37 = 0u;
        v5 = *(id *)(a1 + 64);
        v10 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v36, v47, 16);
        if (v10)
        {
          v11 = v10;
          v12 = *(_QWORD *)v37;
LABEL_37:
          v13 = 0;
          while (1)
          {
            if (*(_QWORD *)v37 != v12)
              objc_enumerationMutation(v5);
            if ((GEOPDDisplayHeaderSubstituteIsDirty(*(os_unfair_lock_s **)(*((_QWORD *)&v36 + 1)
                                                                                            + 8 * v13)) & 1) != 0)
              goto LABEL_75;
            if (v11 == ++v13)
            {
              v11 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v36, v47, 16);
              if (v11)
                goto LABEL_37;
              break;
            }
          }
        }

        v2 = *(_QWORD *)(a1 + 248);
      }
      if ((v2 & 0x10000000) != 0)
      {
        v34 = 0u;
        v35 = 0u;
        v32 = 0u;
        v33 = 0u;
        v5 = *(id *)(a1 + 160);
        v14 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v32, v46, 16);
        if (v14)
        {
          v15 = v14;
          v16 = *(_QWORD *)v33;
LABEL_47:
          v17 = 0;
          while (1)
          {
            if (*(_QWORD *)v33 != v16)
              objc_enumerationMutation(v5);
            if (GEOPDRetainedSearchMetadataIsDirty(*(_QWORD *)(*((_QWORD *)&v32 + 1) + 8 * v17)))
              goto LABEL_75;
            if (v15 == ++v17)
            {
              v15 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v32, v46, 16);
              if (v15)
                goto LABEL_47;
              break;
            }
          }
        }

        v2 = *(_QWORD *)(a1 + 248);
      }
      if ((v2 & 0x40000000) != 0)
      {
        v30 = 0u;
        v31 = 0u;
        v28 = 0u;
        v29 = 0u;
        v5 = *(id *)(a1 + 176);
        v18 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v28, v45, 16);
        if (v18)
        {
          v19 = v18;
          v20 = *(_QWORD *)v29;
LABEL_57:
          v21 = 0;
          while (1)
          {
            if (*(_QWORD *)v29 != v20)
              objc_enumerationMutation(v5);
            if (GEOPDSSearchResultSectionIsDirty(*(_QWORD *)(*((_QWORD *)&v28 + 1) + 8 * v21)))
              goto LABEL_75;
            if (v19 == ++v21)
            {
              v19 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v28, v45, 16);
              if (v19)
                goto LABEL_57;
              break;
            }
          }
        }

        v2 = *(_QWORD *)(a1 + 248);
      }
      if ((v2 & 0x800000) == 0)
        return 0;
      v26 = 0u;
      v27 = 0u;
      v24 = 0u;
      v25 = 0u;
      v5 = *(id *)(a1 + 120);
      v3 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v24, v44, 16);
      if (!v3)
      {
LABEL_76:

        return v3;
      }
      v22 = *(_QWORD *)v25;
LABEL_68:
      v23 = 0;
      while (1)
      {
        if (*(_QWORD *)v25 != v22)
          objc_enumerationMutation(v5);
        if (GEOPDRelatedEntitySectionIsDirty(*(_QWORD *)(*((_QWORD *)&v24 + 1) + 8 * v23)))
          break;
        if (v3 == ++v23)
        {
          v3 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v24, v44, 16);
          if (v3)
            goto LABEL_68;
          goto LABEL_76;
        }
      }
LABEL_75:
      v3 = 1;
      goto LABEL_76;
    }
  }
  return 1;
}

void sub_188C04D0C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchResultsForCategoryEntryReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  char v17;
  char v18;
  int *v19;
  int *v20;
  int v21;
  int *v22;
  int *v23;
  char v24;
  unsigned int v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  BOOL v31;
  int v32;
  int v33;
  unint64_t v35;
  BOOL v36;
  int *v37;
  int v38;
  int v39;
  BOOL v40;
  GEOPDBrowseCategory *v41;
  void *v42;
  char v43;
  unsigned int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  id v50;
  void *v51;
  int v52;
  char v53;
  char v54;
  unsigned int v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  char v60;
  int v61;
  int v62;
  void *v63;
  char v65;
  char v66;
  char v67;
  char v68;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 60);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 56));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = ((*(unsigned __int8 *)(a1 + 68) >> 1) & 1)
      + (*(_BYTE *)(a1 + 68) & 1)
      + ((*(unsigned __int8 *)(a1 + 68) >> 2) & 1);
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v9])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 != 0;
        v17 = v16 & ~(_BYTE)v11 | v7;
        v18 = v16 | v11;
        if ((((v16 | v11) | v8) & 1) != 0)
          v19 = 0;
        else
          v19 = a3;
        v20 = (int *)MEMORY[0x1E0D82BF0];
        v21 = 1;
        v22 = (int *)MEMORY[0x1E0D82BC8];
        if (*(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(v3 + *v6))
          goto LABEL_86;
        v65 = v17;
        v66 = v18 | v17;
        v68 = (v19 == 0) | v18;
        v23 = (int *)MEMORY[0x1E0D82BB8];
        v67 = v16 | v11;
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v7;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v9;
        v7 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_BYTE *)(v3 + *v22))
      goto LABEL_84;
    v24 = 0;
    v25 = 0;
    v26 = 0;
    while (1)
    {
      v27 = *v20;
      v28 = *(_QWORD *)(v3 + v27);
      v29 = v28 + 1;
      if (v28 == -1 || v29 > *(_QWORD *)(v3 + *v6))
        break;
      v30 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v28);
      *(_QWORD *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0)
        goto LABEL_25;
      v24 += 7;
      v31 = v25++ >= 9;
      if (v31)
      {
        v26 = 0;
        v32 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v22) = 1;
LABEL_25:
    v32 = *(unsigned __int8 *)(v3 + *v22);
    if (*(_BYTE *)(v3 + *v22))
      v26 = 0;
LABEL_27:
    v33 = v26 & 7;
    if (v32 || v33 == 4)
    {
LABEL_84:
      v21 = 1;
      goto LABEL_85;
    }
    v35 = v26 >> 3;
    v36 = v18;
    if ((v68 & 1) == 0)
    {
      v37 = v19;
      do
      {
        v39 = *v37++;
        v38 = v39;
        v36 = v39 != 0;
        if (v39)
          v40 = v38 == (_DWORD)v35;
        else
          v40 = 1;
      }
      while (!v40);
    }
    if ((_DWORD)v35 == 2)
    {
      if (v36 && (*(_BYTE *)(a1 + 68) & 2) == 0)
      {
        if (v33 == 2)
        {
          if (!PBReaderPlaceMark())
            goto LABEL_105;
          v22 = (int *)MEMORY[0x1E0D82BC8];
          while (*(_QWORD *)(v3 + *v20) < *(_QWORD *)(v3 + *v6))
          {
            if (*(_BYTE *)(v3 + *v22))
              break;
            v43 = 0;
            v44 = 0;
            v45 = 0;
            while (1)
            {
              v46 = *v20;
              v47 = *(_QWORD *)(v3 + v46);
              v48 = v47 + 1;
              if (v47 == -1 || v48 > *(_QWORD *)(v3 + *v6))
                break;
              v49 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v47);
              *(_QWORD *)(v3 + v46) = v48;
              v45 |= (unint64_t)(v49 & 0x7F) << v43;
              if (v49 < 0)
              {
                v43 += 7;
                v31 = v44++ >= 9;
                if (!v31)
                  continue;
              }
              goto LABEL_59;
            }
            *(_BYTE *)(v3 + *v22) = 1;
LABEL_59:
            PBRepeatedUInt32Add();
          }
          PBReaderRecallMark();
        }
        else
        {
          v54 = 0;
          v55 = 0;
          v56 = 0;
          v22 = (int *)MEMORY[0x1E0D82BC8];
          while (1)
          {
            v57 = *v20;
            v58 = *(_QWORD *)(v3 + v57);
            v59 = v58 + 1;
            if (v58 == -1 || v59 > *(_QWORD *)(v3 + *v6))
              break;
            v60 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v58);
            *(_QWORD *)(v3 + v57) = v59;
            v56 |= (unint64_t)(v60 & 0x7F) << v54;
            if (v60 < 0)
            {
              v54 += 7;
              v31 = v55++ >= 9;
              if (!v31)
                continue;
            }
            goto LABEL_82;
          }
          *(_BYTE *)(v3 + *v22) = 1;
LABEL_82:
          PBRepeatedUInt32Add();
        }
        v18 = v67;
        goto LABEL_68;
      }
      goto LABEL_67;
    }
    if ((_DWORD)v35 == 1)
      break;
    if ((v65 & 1) == 0 || (*(_BYTE *)(a1 + 68) & 1) != 0)
      goto LABEL_67;
    if (!*(_QWORD *)(a1 + 16))
    {
      v50 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
      v51 = *(void **)(a1 + 16);
      *(_QWORD *)(a1 + 16) = v50;

    }
    v52 = PBUnknownFieldAdd();
    v18 = v67;
    v22 = (int *)MEMORY[0x1E0D82BC8];
    if (!v52)
    {
      v21 = 0;
      goto LABEL_87;
    }
LABEL_68:
    if (!(v66 & 1 | (v9 != 0)) || *(_QWORD *)(v3 + *v20) >= *(_QWORD *)(v3 + *v6))
      goto LABEL_84;
  }
  if (!v36)
  {
LABEL_67:
    v53 = PBReaderSkipValueWithTag();
    v18 = v67;
    v22 = (int *)MEMORY[0x1E0D82BC8];
    if ((v53 & 1) == 0)
    {
      v21 = 0;
      goto LABEL_85;
    }
    goto LABEL_68;
  }
  if ((*(_BYTE *)(a1 + 68) & 4) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0)
      goto LABEL_105;
    v9 += *(unsigned __int8 *)(a1 + 68) << 29 >> 31;
    goto LABEL_73;
  }
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_105;
  v41 = objc_alloc_init(GEOPDBrowseCategory);
  if (GEOPDBrowseCategoryReadAllFrom((uint64_t)v41, (void *)v3, v10 & 1))
  {
    PBReaderRecallMark();
    v42 = *(void **)(a1 + 48);
    *(_QWORD *)(a1 + 48) = v41;

    --v9;
LABEL_73:
    v18 = v67;
    v22 = (int *)MEMORY[0x1E0D82BC8];
    goto LABEL_68;
  }

LABEL_105:
  v21 = 0;
  v18 = v67;
  v22 = (int *)MEMORY[0x1E0D82BC8];
LABEL_85:
  v17 = v65;
LABEL_86:
  if ((v17 & 1) != 0)
LABEL_87:
    *(_BYTE *)(a1 + 68) |= 1u;
  if (v18 & 1 | ((v21 & 1) == 0))
  {
    *(_BYTE *)(a1 + 68) |= 4u;
    *(_BYTE *)(a1 + 68) |= 2u;
    goto LABEL_97;
  }
  if (v19)
  {
    while (2)
    {
      while (1)
      {
        v62 = *v19++;
        v61 = v62;
        if (v62 == 1)
          break;
        if (v61 == 2)
          goto LABEL_96;
        if (!v61)
          goto LABEL_97;
      }
      LOBYTE(v61) = 4;
LABEL_96:
      *(_BYTE *)(a1 + 68) |= v61;
      continue;
    }
  }
LABEL_97:
  if (v21)
  {
    v3 = *(_BYTE *)(v3 + *v22) == 0;
    if ((v18 & 1) == 0)
      return v3;
LABEL_101:
    v63 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  else
  {
    v3 = 0;
    if ((v18 & 1) != 0)
      goto LABEL_101;
  }
  return v3;
}

void sub_188C06318(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188C063F8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchResultsForCategoryEntryReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 60))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDSearchResultsForCategoryEntryReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 60) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDSearchResultsForCategoryEntryReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDSearchResultsForCategoryEntryReadAllFrom_initialTag;
  Specified = GEOPDSearchResultsForCategoryEntryReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    -[GEOPDBrowseCategory readAll:](*(_QWORD *)(a1 + 48), 1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_188C06664(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188C0682C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188C0698C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchSubstringDescriptorReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  id v25;
  void *v26;
  char v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  char v33;
  unsigned int v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  char v38;
  void *v39;
  uint64_t v40;
  _BOOL8 v41;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        switch((v10 >> 3))
        {
          case 1u:
            v18 = 0;
            v19 = 0;
            v20 = 0;
            while (1)
            {
              v21 = *v4;
              v22 = *(_QWORD *)&v3[v21];
              v23 = v22 + 1;
              if (v22 == -1 || v23 > *(_QWORD *)&v3[*v5])
                break;
              v24 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v22);
              *(_QWORD *)&v3[v21] = v23;
              v20 |= (unint64_t)(v24 & 0x7F) << v18;
              if ((v24 & 0x80) == 0)
                goto LABEL_49;
              v18 += 7;
              v15 = v19++ >= 9;
              if (v15)
              {
                LODWORD(v20) = 0;
                goto LABEL_51;
              }
            }
            v3[*v6] = 1;
LABEL_49:
            if (v3[*v6])
              LODWORD(v20) = 0;
LABEL_51:
            v40 = 32;
            goto LABEL_60;
          case 2u:
            v27 = 0;
            v28 = 0;
            v20 = 0;
            while (2)
            {
              v29 = *v4;
              v30 = *(_QWORD *)&v3[v29];
              v31 = v30 + 1;
              if (v30 == -1 || v31 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v32 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v30);
                *(_QWORD *)&v3[v29] = v31;
                v20 |= (unint64_t)(v32 & 0x7F) << v27;
                if (v32 < 0)
                {
                  v27 += 7;
                  v15 = v28++ >= 9;
                  if (v15)
                  {
                    LODWORD(v20) = 0;
                    goto LABEL_55;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              LODWORD(v20) = 0;
LABEL_55:
            v40 = 24;
            goto LABEL_60;
          case 3u:
            v33 = 0;
            v34 = 0;
            v20 = 0;
            break;
          case 4u:
            PBReaderReadString();
            v39 = (void *)objc_claimAutoreleasedReturnValue();
            if (v39)
              -[GEOPDSearchSubstringDescriptor addSpanData:](a1, v39);

            continue;
          default:
            if (!*(_QWORD *)(a1 + 8))
            {
              v25 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
              v26 = *(void **)(a1 + 8);
              *(_QWORD *)(a1 + 8) = v25;

            }
            if (!PBUnknownFieldAdd())
              goto LABEL_63;
            continue;
        }
        while (1)
        {
          v35 = *v4;
          v36 = *(_QWORD *)&v3[v35];
          v37 = v36 + 1;
          if (v36 == -1 || v37 > *(_QWORD *)&v3[*v5])
            break;
          v38 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v36);
          *(_QWORD *)&v3[v35] = v37;
          v20 |= (unint64_t)(v38 & 0x7F) << v33;
          if ((v38 & 0x80) == 0)
            goto LABEL_57;
          v33 += 7;
          v15 = v34++ >= 9;
          if (v15)
          {
            LODWORD(v20) = 0;
            goto LABEL_59;
          }
        }
        v3[*v6] = 1;
LABEL_57:
        if (v3[*v6])
          LODWORD(v20) = 0;
LABEL_59:
        v40 = 28;
LABEL_60:
        *(_DWORD *)(a1 + v40) = v20;
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v41 = v3[*v6] == 0;
  }
  else
  {
LABEL_63:
    v41 = 0;
  }
  objc_sync_exit(v3);

  return v41;
}

void sub_188C072BC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchZeroKeywordCategorySuggestionParametersReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  id v21;
  void *v22;
  GEOLatLng *v23;
  void *v24;
  char v25;
  unsigned int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  char v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  char v37;
  char v38;
  unsigned int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  uint64_t v45;
  _BOOL8 v46;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      while (!v3[*v6])
      {
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        switch((v10 >> 3))
        {
          case 2u:
            *(_BYTE *)(a1 + 44) |= 1u;
            v18 = *v4;
            v19 = *(_QWORD *)&v3[v18];
            if (v19 <= 0xFFFFFFFFFFFFFFF7 && v19 + 8 <= *(_QWORD *)&v3[*v5])
            {
              v20 = *(_QWORD *)(*(_QWORD *)&v3[*v7] + v19);
              *(_QWORD *)&v3[v18] = v19 + 8;
            }
            else
            {
              v3[*v6] = 1;
              v20 = 0;
            }
            *(_QWORD *)(a1 + 16) = v20;
            goto LABEL_66;
          case 3u:
            if ((PBReaderPlaceMark() & 1) == 0)
              goto LABEL_69;
            v23 = objc_alloc_init(GEOLatLng);
            if (!GEOLatLngReadAllFrom((uint64_t)v23, v3))
            {

              goto LABEL_69;
            }
            PBReaderRecallMark();
            v24 = *(void **)(a1 + 24);
            *(_QWORD *)(a1 + 24) = v23;

LABEL_66:
            if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
              goto LABEL_67;
            break;
          case 4u:
            v25 = 0;
            v26 = 0;
            v27 = 0;
            *(_BYTE *)(a1 + 44) |= 2u;
            while (2)
            {
              v28 = *v4;
              v29 = *(_QWORD *)&v3[v28];
              v30 = v29 + 1;
              if (v29 == -1 || v30 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v31 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v29);
                *(_QWORD *)&v3[v28] = v30;
                v27 |= (unint64_t)(v31 & 0x7F) << v25;
                if (v31 < 0)
                {
                  v25 += 7;
                  v15 = v26++ >= 9;
                  if (v15)
                  {
                    LODWORD(v27) = 0;
                    goto LABEL_54;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              LODWORD(v27) = 0;
LABEL_54:
            v45 = 32;
            goto LABEL_59;
          case 5u:
            v32 = 0;
            v33 = 0;
            v27 = 0;
            *(_BYTE *)(a1 + 44) |= 4u;
            while (2)
            {
              v34 = *v4;
              v35 = *(_QWORD *)&v3[v34];
              v36 = v35 + 1;
              if (v35 == -1 || v36 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v37 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v35);
                *(_QWORD *)&v3[v34] = v36;
                v27 |= (unint64_t)(v37 & 0x7F) << v32;
                if (v37 < 0)
                {
                  v32 += 7;
                  v15 = v33++ >= 9;
                  if (v15)
                  {
                    LODWORD(v27) = 0;
                    goto LABEL_58;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              LODWORD(v27) = 0;
LABEL_58:
            v45 = 36;
LABEL_59:
            *(_DWORD *)(a1 + v45) = v27;
            goto LABEL_66;
          case 6u:
            v38 = 0;
            v39 = 0;
            v40 = 0;
            *(_BYTE *)(a1 + 44) |= 8u;
            while (2)
            {
              v41 = *v4;
              v42 = *(_QWORD *)&v3[v41];
              v43 = v42 + 1;
              if (v42 == -1 || v43 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v44 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v42);
                *(_QWORD *)&v3[v41] = v43;
                v40 |= (unint64_t)(v44 & 0x7F) << v38;
                if (v44 < 0)
                {
                  v38 += 7;
                  v15 = v39++ >= 9;
                  if (v15)
                  {
                    v40 = 0;
                    goto LABEL_63;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              v40 = 0;
LABEL_63:
            *(_BYTE *)(a1 + 40) = v40 != 0;
            goto LABEL_66;
          default:
            if (!*(_QWORD *)(a1 + 8))
            {
              v21 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
              v22 = *(void **)(a1 + 8);
              *(_QWORD *)(a1 + 8) = v21;

            }
            if (!PBUnknownFieldAdd())
              goto LABEL_69;
            goto LABEL_66;
        }
      }
    }
LABEL_67:
    v46 = v3[*v6] == 0;
  }
  else
  {
LABEL_69:
    v46 = 0;
  }
  objc_sync_exit(v3);

  return v46;
}

void sub_188C0805C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188C08690(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchZeroKeywordCategorySuggestionResultReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BOOL4 v16;
  int v17;
  int *v18;
  _BOOL4 v19;
  int *v20;
  int v21;
  int *v22;
  int *v23;
  char v24;
  unsigned int v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  int v32;
  unint64_t v34;
  BOOL v35;
  int *v36;
  int v37;
  int v38;
  BOOL v39;
  GEOPDBrowseCategory *v40;
  id v41;
  void *v42;
  char v43;
  int v44;
  int v45;
  void *v46;
  char v48;
  int v49;
  int v50;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1)
      + (*(_BYTE *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1);
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v7 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 != 0;
        v17 = v16 & ~(_DWORD)v11 | v9;
        v50 = v16 | v11;
        if ((((v16 | v11) | v7) & 1) != 0)
          v18 = 0;
        else
          v18 = a3;
        v19 = v8 != 0;
        v20 = (int *)MEMORY[0x1E0D82BF0];
        v21 = 1;
        v22 = (int *)MEMORY[0x1E0D82BC8];
        if (*(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(v3 + *v6))
          goto LABEL_62;
        v48 = v17;
        v49 = v19 | v50 | v17;
        v23 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v8;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_BYTE *)(v3 + *v22))
      goto LABEL_60;
    v24 = 0;
    v25 = 0;
    v26 = 0;
    while (1)
    {
      v27 = *v20;
      v28 = *(_QWORD *)(v3 + v27);
      v29 = v28 + 1;
      if (v28 == -1 || v29 > *(_QWORD *)(v3 + *v6))
        break;
      v30 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v28);
      *(_QWORD *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0)
        goto LABEL_25;
      v24 += 7;
      if (v25++ >= 9)
      {
        v26 = 0;
        v32 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v22) = 1;
LABEL_25:
    v32 = *(unsigned __int8 *)(v3 + *v22);
    if (*(_BYTE *)(v3 + *v22))
      v26 = 0;
LABEL_27:
    if (v32 || (v26 & 7) == 4)
    {
LABEL_60:
      v21 = 1;
      goto LABEL_61;
    }
    v34 = v26 >> 3;
    v35 = v50;
    if (!((v18 == 0) | v50 & 1))
    {
      v36 = v18;
      do
      {
        v38 = *v36++;
        v37 = v38;
        v35 = v38 != 0;
        if (v38)
          v39 = v37 == (_DWORD)v34;
        else
          v39 = 1;
      }
      while (!v39);
    }
    if ((_DWORD)v34 == 2)
      break;
    if ((_DWORD)v34 == 1)
    {
      if (!v35 || (*(_BYTE *)(a1 + 52) & 2) != 0)
        goto LABEL_58;
      if ((PBReaderPlaceMark() & 1) == 0)
        goto LABEL_81;
      v40 = objc_alloc_init(GEOPDBrowseCategory);
      if (!GEOPDBrowseCategoryReadAllFrom((uint64_t)v40, (void *)v3, v10 & 1))
        goto LABEL_80;
      PBReaderRecallMark();
      -[GEOPDSearchZeroKeywordCategorySuggestionResult _addNoFlagsCategory:](a1, v40);
      goto LABEL_50;
    }
    if ((v48 & 1) == 0 || (*(_BYTE *)(a1 + 52) & 1) != 0)
      goto LABEL_58;
    if (!*(_QWORD *)(a1 + 16))
    {
      v41 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
      v42 = *(void **)(a1 + 16);
      *(_QWORD *)(a1 + 16) = v41;

    }
    v21 = PBUnknownFieldAdd();
    v22 = (int *)MEMORY[0x1E0D82BC8];
    if (!v21)
      goto LABEL_63;
LABEL_56:
    if ((v49 & 1) == 0)
      goto LABEL_60;
LABEL_59:
    if (*(_QWORD *)(v3 + *v20) >= *(_QWORD *)(v3 + *v6))
      goto LABEL_60;
  }
  if (!v35 || (*(_BYTE *)(a1 + 52) & 4) != 0)
  {
LABEL_58:
    v21 = PBReaderSkipValueWithTag();
    v22 = (int *)MEMORY[0x1E0D82BC8];
    if ((v21 & v49 & 1) == 0)
      goto LABEL_61;
    goto LABEL_59;
  }
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_81;
  v40 = objc_alloc_init(GEOPDSearchZeroKeywordEntry);
  if (GEOPDSearchZeroKeywordEntryReadAllFrom((uint64_t)v40, (void *)v3))
  {
    PBReaderRecallMark();
    -[GEOPDSearchZeroKeywordCategorySuggestionResult _addNoFlagsZeroKeywordEntry:](a1, v40);
LABEL_50:

    v22 = (int *)MEMORY[0x1E0D82BC8];
    goto LABEL_56;
  }
LABEL_80:

LABEL_81:
  v21 = 0;
  v22 = (int *)MEMORY[0x1E0D82BC8];
LABEL_61:
  LOBYTE(v17) = v48;
LABEL_62:
  if ((v17 & 1) != 0)
LABEL_63:
    *(_BYTE *)(a1 + 52) |= 1u;
  if (v50 & 1 | ((v21 & 1) == 0))
  {
    *(_BYTE *)(a1 + 52) |= 2u;
    *(_BYTE *)(a1 + 52) |= 4u;
    goto LABEL_74;
  }
  if (v18)
  {
    while (1)
    {
      v45 = *v18++;
      v44 = v45;
      if (v45 == 1)
        break;
      if (v44 == 2)
      {
        v43 = 4;
LABEL_70:
        *(_BYTE *)(a1 + 52) |= v43;
      }
      else if (!v44)
      {
        goto LABEL_74;
      }
    }
    v43 = 2;
    goto LABEL_70;
  }
LABEL_74:
  if (v21)
    v3 = *(_BYTE *)(v3 + *v22) == 0;
  else
    v3 = 0;
  if ((v50 & 1) != 0)
  {
    v46 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_188C08DC4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188C09330(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDSearchZeroKeywordCategorySuggestionResultCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  _BYTE v19[128];
  _BYTE v20[128];
  uint64_t v21;

  v21 = *MEMORY[0x1E0C80C00];
  v15 = 0u;
  v16 = 0u;
  v17 = 0u;
  v18 = 0u;
  v2 = *(id *)(a1 + 24);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v15, v20, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v16;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v16 != v5)
          objc_enumerationMutation(v2);
        -[GEOPDBrowseCategory readAll:](*(_QWORD *)(*((_QWORD *)&v15 + 1) + 8 * v6++), 1);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v15, v20, 16);
    }
    while (v4);
  }

  v13 = 0u;
  v14 = 0u;
  v11 = 0u;
  v12 = 0u;
  v7 = *(id *)(a1 + 32);
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v11, v19, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v12;
    while (1)
    {
      if (*(_QWORD *)v12 != v10)
        objc_enumerationMutation(v7);
      if (!--v9)
      {
        v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v11, v19, 16);
        if (!v9)
          break;
      }
    }
  }

}

unint64_t GEOPDSearchZeroKeywordCategorySuggestionResultReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDSearchZeroKeywordCategorySuggestionResultReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDSearchZeroKeywordCategorySuggestionResultReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDSearchZeroKeywordCategorySuggestionResultReadAllFrom_initialTag;
  Specified = GEOPDSearchZeroKeywordCategorySuggestionResultReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDSearchZeroKeywordCategorySuggestionResultCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_188C09704(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188C099C0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchZeroKeywordCategorySuggestionResultIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v2 = (*(_BYTE *)(a1 + 52) & 0xE) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return v2;
}

void sub_188C09D08(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchZeroKeywordEntryReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  int v17;
  unint64_t v19;
  char v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  char v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  char v34;
  unsigned int v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  id v40;
  void *v41;
  uint64_t v42;
  char v43;
  unsigned int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  _BOOL8 v50;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      while (1)
      {
        if (v3[*v6])
          goto LABEL_74;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        v17 = v10 & 7;
        if (v16 || v17 == 4)
          goto LABEL_74;
        v19 = v10 >> 3;
        if ((v10 >> 3) == 3)
        {
          if (v17 == 2)
          {
            if (!PBReaderPlaceMark())
              goto LABEL_75;
            while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5] && !v3[*v6])
            {
              v27 = 0;
              v28 = 0;
              v29 = 0;
              while (1)
              {
                v30 = *v4;
                v31 = *(_QWORD *)&v3[v30];
                v32 = v31 + 1;
                if (v31 == -1 || v32 > *(_QWORD *)&v3[*v5])
                  break;
                v33 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v31);
                *(_QWORD *)&v3[v30] = v32;
                v29 |= (unint64_t)(v33 & 0x7F) << v27;
                if (v33 < 0)
                {
                  v27 += 7;
                  v15 = v28++ >= 9;
                  if (!v15)
                    continue;
                }
                goto LABEL_41;
              }
              v3[*v6] = 1;
LABEL_41:
              PBRepeatedUInt32Add();
            }
            PBReaderRecallMark();
          }
          else
          {
            v43 = 0;
            v44 = 0;
            v45 = 0;
            while (1)
            {
              v46 = *v4;
              v47 = *(_QWORD *)&v3[v46];
              v48 = v47 + 1;
              if (v47 == -1 || v48 > *(_QWORD *)&v3[*v5])
                break;
              v49 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v47);
              *(_QWORD *)&v3[v46] = v48;
              v45 |= (unint64_t)(v49 & 0x7F) << v43;
              if (v49 < 0)
              {
                v43 += 7;
                v15 = v44++ >= 9;
                if (!v15)
                  continue;
              }
              goto LABEL_73;
            }
            v3[*v6] = 1;
LABEL_73:
            PBRepeatedUInt32Add();
          }
          goto LABEL_62;
        }
        if ((_DWORD)v19 == 2)
          break;
        if ((_DWORD)v19 == 1)
        {
          v20 = 0;
          v21 = 0;
          v22 = 0;
          *(_BYTE *)(a1 + 48) |= 1u;
          while (1)
          {
            v23 = *v4;
            v24 = *(_QWORD *)&v3[v23];
            v25 = v24 + 1;
            if (v24 == -1 || v25 > *(_QWORD *)&v3[*v5])
              break;
            v26 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v24);
            *(_QWORD *)&v3[v23] = v25;
            v22 |= (unint64_t)(v26 & 0x7F) << v20;
            if ((v26 & 0x80) == 0)
              goto LABEL_54;
            v20 += 7;
            v15 = v21++ >= 9;
            if (v15)
            {
              LODWORD(v22) = 0;
              goto LABEL_56;
            }
          }
          v3[*v6] = 1;
LABEL_54:
          if (v3[*v6])
            LODWORD(v22) = 0;
LABEL_56:
          v42 = 40;
LABEL_61:
          *(_DWORD *)(a1 + v42) = v22;
          goto LABEL_62;
        }
        if (!*(_QWORD *)(a1 + 8))
        {
          v40 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
          v41 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = v40;

        }
        if (!PBUnknownFieldAdd())
          goto LABEL_75;
LABEL_62:
        if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
          goto LABEL_74;
      }
      v34 = 0;
      v35 = 0;
      v22 = 0;
      *(_BYTE *)(a1 + 48) |= 2u;
      while (1)
      {
        v36 = *v4;
        v37 = *(_QWORD *)&v3[v36];
        v38 = v37 + 1;
        if (v37 == -1 || v38 > *(_QWORD *)&v3[*v5])
          break;
        v39 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v37);
        *(_QWORD *)&v3[v36] = v38;
        v22 |= (unint64_t)(v39 & 0x7F) << v34;
        if ((v39 & 0x80) == 0)
          goto LABEL_58;
        v34 += 7;
        v15 = v35++ >= 9;
        if (v15)
        {
          LODWORD(v22) = 0;
          goto LABEL_60;
        }
      }
      v3[*v6] = 1;
LABEL_58:
      if (v3[*v6])
        LODWORD(v22) = 0;
LABEL_60:
      v42 = 44;
      goto LABEL_61;
    }
LABEL_74:
    v50 = v3[*v6] == 0;
  }
  else
  {
LABEL_75:
    v50 = 0;
  }
  objc_sync_exit(v3);

  return v50;
}

void sub_188C0A6E8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchZeroKeywordWithSearchResultsSuggestionParametersReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  BOOL v25;
  int *v26;
  id v27;
  void *v28;
  char v29;
  unsigned int v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  char v35;
  unsigned int v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  char v41;
  unsigned int v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  char v46;
  _BOOL8 v47;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        switch((v10 >> 3))
        {
          case 1u:
            v18 = 0;
            v19 = 0;
            v20 = 0;
            *(_BYTE *)(a1 + 32) |= 4u;
            while (1)
            {
              v21 = *v4;
              v22 = *(_QWORD *)&v3[v21];
              v23 = v22 + 1;
              if (v22 == -1 || v23 > *(_QWORD *)&v3[*v5])
              {
                v26 = &OBJC_IVAR___GEOPDSearchZeroKeywordWithSearchResultsSuggestionParameters__maxCategories;
                goto LABEL_56;
              }
              v24 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v22);
              *(_QWORD *)&v3[v21] = v23;
              v20 |= (unint64_t)(v24 & 0x7F) << v18;
              if ((v24 & 0x80) == 0)
                break;
              v18 += 7;
              v25 = v19++ > 8;
              if (v25)
              {
                LODWORD(v20) = 0;
                v26 = &OBJC_IVAR___GEOPDSearchZeroKeywordWithSearchResultsSuggestionParameters__maxCategories;
                goto LABEL_59;
              }
            }
            v26 = &OBJC_IVAR___GEOPDSearchZeroKeywordWithSearchResultsSuggestionParameters__maxCategories;
            goto LABEL_57;
          case 2u:
            v29 = 0;
            v30 = 0;
            v20 = 0;
            *(_BYTE *)(a1 + 32) |= 8u;
            while (2)
            {
              v31 = *v4;
              v32 = *(_QWORD *)&v3[v31];
              v33 = v32 + 1;
              if (v32 == -1 || v33 > *(_QWORD *)&v3[*v5])
              {
                v26 = &OBJC_IVAR___GEOPDSearchZeroKeywordWithSearchResultsSuggestionParameters__maxResultsPerCategory;
                goto LABEL_56;
              }
              v34 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v32);
              *(_QWORD *)&v3[v31] = v33;
              v20 |= (unint64_t)(v34 & 0x7F) << v29;
              if (v34 < 0)
              {
                v29 += 7;
                v25 = v30++ > 8;
                if (v25)
                {
                  LODWORD(v20) = 0;
                  v26 = &OBJC_IVAR___GEOPDSearchZeroKeywordWithSearchResultsSuggestionParameters__maxResultsPerCategory;
                  goto LABEL_59;
                }
                continue;
              }
              break;
            }
            v26 = &OBJC_IVAR___GEOPDSearchZeroKeywordWithSearchResultsSuggestionParameters__maxResultsPerCategory;
            goto LABEL_57;
          case 3u:
            v35 = 0;
            v36 = 0;
            v20 = 0;
            *(_BYTE *)(a1 + 32) |= 1u;
            while (2)
            {
              v37 = *v4;
              v38 = *(_QWORD *)&v3[v37];
              v39 = v38 + 1;
              if (v38 == -1 || v39 > *(_QWORD *)&v3[*v5])
              {
                v26 = &OBJC_IVAR___GEOPDSearchZeroKeywordWithSearchResultsSuggestionParameters__blurredHourOfDay;
                goto LABEL_56;
              }
              v40 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v38);
              *(_QWORD *)&v3[v37] = v39;
              v20 |= (unint64_t)(v40 & 0x7F) << v35;
              if (v40 < 0)
              {
                v35 += 7;
                v25 = v36++ > 8;
                if (v25)
                {
                  LODWORD(v20) = 0;
                  v26 = &OBJC_IVAR___GEOPDSearchZeroKeywordWithSearchResultsSuggestionParameters__blurredHourOfDay;
                  goto LABEL_59;
                }
                continue;
              }
              break;
            }
            v26 = &OBJC_IVAR___GEOPDSearchZeroKeywordWithSearchResultsSuggestionParameters__blurredHourOfDay;
            goto LABEL_57;
          case 4u:
            v41 = 0;
            v42 = 0;
            v20 = 0;
            *(_BYTE *)(a1 + 32) |= 2u;
            break;
          default:
            if (!*(_QWORD *)(a1 + 8))
            {
              v27 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
              v28 = *(void **)(a1 + 8);
              *(_QWORD *)(a1 + 8) = v27;

            }
            if ((PBUnknownFieldAdd() & 1) == 0)
              goto LABEL_67;
            continue;
        }
        while (1)
        {
          v43 = *v4;
          v44 = *(_QWORD *)&v3[v43];
          v45 = v44 + 1;
          if (v44 == -1 || v45 > *(_QWORD *)&v3[*v5])
            break;
          v46 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v44);
          *(_QWORD *)&v3[v43] = v45;
          v20 |= (unint64_t)(v46 & 0x7F) << v41;
          if ((v46 & 0x80) == 0)
          {
            v26 = &OBJC_IVAR___GEOPDSearchZeroKeywordWithSearchResultsSuggestionParameters__dayOfWeek;
            goto LABEL_57;
          }
          v41 += 7;
          v25 = v42++ > 8;
          if (v25)
          {
            LODWORD(v20) = 0;
            v26 = &OBJC_IVAR___GEOPDSearchZeroKeywordWithSearchResultsSuggestionParameters__dayOfWeek;
            goto LABEL_59;
          }
        }
        v26 = &OBJC_IVAR___GEOPDSearchZeroKeywordWithSearchResultsSuggestionParameters__dayOfWeek;
LABEL_56:
        v3[*v6] = 1;
LABEL_57:
        if (v3[*v6])
          LODWORD(v20) = 0;
LABEL_59:
        *(_DWORD *)(a1 + *v26) = v20;
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v47 = v3[*v6] == 0;
  }
  else
  {
LABEL_67:
    v47 = 0;
  }
  objc_sync_exit(v3);

  return v47;
}

void sub_188C0B258(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchZeroKeywordWithSearchResultsSuggestionResultReadAllFrom(uint64_t a1, void *a2, int a3)
{
  char *v5;
  int *v6;
  int *v7;
  int *v8;
  int *v9;
  char v10;
  unsigned int v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  int v18;
  GEOPDSearchResultsForCategoryEntry *v20;
  id v21;
  void *v22;
  _BOOL8 v23;

  v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    v6 = (int *)MEMORY[0x1E0D82BF0];
    v7 = (int *)MEMORY[0x1E0D82BD8];
    v8 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v5[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v5[*MEMORY[0x1E0D82BD8]])
    {
      v9 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v5[*v8])
          break;
        v10 = 0;
        v11 = 0;
        v12 = 0;
        while (1)
        {
          v13 = *v6;
          v14 = *(_QWORD *)&v5[v13];
          v15 = v14 + 1;
          if (v14 == -1 || v15 > *(_QWORD *)&v5[*v7])
            break;
          v16 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v14);
          *(_QWORD *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0)
            goto LABEL_13;
          v10 += 7;
          if (v11++ >= 9)
          {
            v12 = 0;
            v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        v18 = v5[*v8];
        if (v5[*v8])
          v12 = 0;
LABEL_15:
        if (v18 || (v12 & 7) == 4)
          break;
        if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_29;
          v20 = objc_alloc_init(GEOPDSearchResultsForCategoryEntry);
          if (!GEOPDSearchResultsForCategoryEntryReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          -[GEOPDSearchZeroKeywordWithSearchResultsSuggestionResult addSearchResultsForCategoryEntry:](a1, v20);

        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v21 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v22 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v21;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_29;
        }
      }
      while (*(_QWORD *)&v5[*v6] < *(_QWORD *)&v5[*v7]);
    }
    v23 = v5[*v8] == 0;
  }
  else
  {
LABEL_29:
    v23 = 0;
  }
  objc_sync_exit(v5);

  return v23;
}

void sub_188C0BC68(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSiriSearchParametersReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  char v17;
  unsigned __int8 v18;
  int *v19;
  int *v20;
  int *v21;
  int *v22;
  char v23;
  unsigned int v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  BOOL v30;
  int v31;
  unint64_t v33;
  BOOL v34;
  int *v35;
  int v36;
  int v37;
  BOOL v38;
  char v39;
  unsigned int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  char v46;
  unsigned int v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  char v51;
  uint64_t v52;
  void *v53;
  GEOPDViewportInfo *v54;
  uint64_t v55;
  char v56;
  unsigned int v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  char v62;
  id v63;
  void *v64;
  int v65;
  char v66;
  unsigned int v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  char v72;
  char v73;
  uint64_t v74;
  BOOL v75;
  uint64_t v76;
  __int16 v77;
  int v78;
  __int16 v79;
  void *v80;
  int v82;
  int *v83;
  char v84;
  char v85;
  char v86;
  BOOL v87;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 88));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 84);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 80));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = ((*(unsigned __int16 *)(a1 + 104) >> 4) & 1)
      + (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 104)), (uint16x4_t)0xFFFAFFFBFFF7FFF5), (int8x8_t)0x1000100010001))+ ((*(_WORD *)(a1 + 104) >> 10) & 1)+ ((*(_WORD *)(a1 + 104) >> 7) & 1)+ (HIBYTE(*(_WORD *)(a1 + 104)) & 1));
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 > 4;
        v17 = v16 & ~(_BYTE)v11 | v9;
        v18 = v16 | v11;
        v84 = v17;
        v85 = v18 | v17;
        if (((v18 | v8) & 1) != 0)
          v19 = 0;
        else
          v19 = a3;
        v86 = (v19 == 0) | v18;
        v87 = v18;
        v20 = (int *)MEMORY[0x1E0D82BF0];
        v21 = (int *)MEMORY[0x1E0D82BC8];
        v22 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v7;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v20) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v21))
      goto LABEL_145;
    v23 = 0;
    v24 = 0;
    v25 = 0;
    while (1)
    {
      v26 = *v20;
      v27 = *(_QWORD *)(v3 + v26);
      v28 = v27 + 1;
      if (v27 == -1 || v28 > *(_QWORD *)(v3 + *v6))
        break;
      v29 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v27);
      *(_QWORD *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0)
        goto LABEL_25;
      v23 += 7;
      v30 = v24++ >= 9;
      if (v30)
      {
        v25 = 0;
        v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v21) = 1;
LABEL_25:
    v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(_BYTE *)(v3 + *v21))
      v25 = 0;
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_145:
      v82 = 1;
      goto LABEL_146;
    }
    v33 = v25 >> 3;
    v34 = v87;
    if ((v86 & 1) == 0)
    {
      v35 = v19;
      do
      {
        v37 = *v35++;
        v36 = v37;
        v34 = v37 != 0;
        if (v37)
          v38 = v36 == (_DWORD)v33;
        else
          v38 = 1;
      }
      while (!v38);
    }
    switch((int)v33)
    {
      case 1:
        if ((v8 & 1) == 0)
          goto LABEL_112;
        v39 = 0;
        v40 = 0;
        v41 = 0;
        *(_WORD *)(a1 + 104) |= 2u;
        while (1)
        {
          v42 = *v20;
          v43 = *(_QWORD *)(v3 + v42);
          v44 = v43 + 1;
          if (v43 == -1 || v44 > *(_QWORD *)(v3 + *v6))
            break;
          v45 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v43);
          *(_QWORD *)(v3 + v42) = v44;
          v41 |= (unint64_t)(v45 & 0x7F) << v39;
          if ((v45 & 0x80) == 0)
            goto LABEL_115;
          v39 += 7;
          v30 = v40++ >= 9;
          if (v30)
          {
            LODWORD(v41) = 0;
            goto LABEL_117;
          }
        }
        *(_BYTE *)(v3 + *v21) = 1;
LABEL_115:
        if (*(_BYTE *)(v3 + *v21))
          LODWORD(v41) = 0;
LABEL_117:
        v74 = 96;
        goto LABEL_122;
      case 2:
        if ((v8 & 1) == 0)
          goto LABEL_112;
        v46 = 0;
        v47 = 0;
        v41 = 0;
        *(_WORD *)(a1 + 104) |= 1u;
        while (2)
        {
          v48 = *v20;
          v49 = *(_QWORD *)(v3 + v48);
          v50 = v49 + 1;
          if (v49 == -1 || v50 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v51 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v49);
            *(_QWORD *)(v3 + v48) = v50;
            v41 |= (unint64_t)(v51 & 0x7F) << v46;
            if (v51 < 0)
            {
              v46 += 7;
              v30 = v47++ >= 9;
              if (v30)
              {
                LODWORD(v41) = 0;
                goto LABEL_121;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          LODWORD(v41) = 0;
LABEL_121:
        v74 = 92;
LABEL_122:
        *(_DWORD *)(a1 + v74) = v41;
        goto LABEL_144;
      case 3:
        if (!v34)
          goto LABEL_112;
        if ((*(_WORD *)(a1 + 104) & 0x200) == 0)
        {
          PBReaderReadString();
          v52 = objc_claimAutoreleasedReturnValue();
          v53 = *(void **)(a1 + 56);
          *(_QWORD *)(a1 + 56) = v52;
          goto LABEL_111;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_166;
        v77 = *(_WORD *)(a1 + 104) << 6;
        goto LABEL_142;
      case 4:
        if (!v34)
          goto LABEL_112;
        if ((*(_WORD *)(a1 + 104) & 0x800) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_166;
          v77 = 16 * *(_WORD *)(a1 + 104);
          goto LABEL_142;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_166;
        v54 = objc_alloc_init(GEOPDViewportInfo);
        if (!GEOPDViewportInfoReadAllFrom((uint64_t)v54, (void *)v3))
          goto LABEL_165;
        PBReaderRecallMark();
        v55 = 72;
        goto LABEL_110;
      case 5:
        if (!v34)
          goto LABEL_112;
        if ((*(_WORD *)(a1 + 104) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_166;
          v77 = *(_WORD *)(a1 + 104) << 10;
          goto LABEL_142;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_166;
        v54 = objc_alloc_init(GEOAddress);
        if (!GEOAddressReadAllFrom((uint64_t)v54, (void *)v3, v10 & 1))
          goto LABEL_165;
        PBReaderRecallMark();
        v55 = 24;
        goto LABEL_110;
      case 6:
        if (!v34 || (*(_WORD *)(a1 + 104) & 0x40) != 0)
          goto LABEL_112;
        PBReaderReadString();
        v54 = (GEOPDViewportInfo *)objc_claimAutoreleasedReturnValue();
        if (v54)
          -[GEOPDSiriSearchParameters _addNoFlagsBusinessCategoryFilter:](a1, v54);
        goto LABEL_99;
      case 7:
        if ((v8 & 1) == 0)
          goto LABEL_112;
        v56 = 0;
        v57 = 0;
        v58 = 0;
        *(_WORD *)(a1 + 104) |= 4u;
        while (2)
        {
          v59 = *v20;
          v60 = *(_QWORD *)(v3 + v59);
          v61 = v60 + 1;
          if (v60 == -1 || v61 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v62 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v60);
            *(_QWORD *)(v3 + v59) = v61;
            v58 |= (unint64_t)(v62 & 0x7F) << v56;
            if (v62 < 0)
            {
              v56 += 7;
              v30 = v57++ >= 9;
              if (v30)
              {
                v58 = 0;
                goto LABEL_126;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          v58 = 0;
LABEL_126:
        v75 = v58 != 0;
        v76 = 100;
        goto LABEL_131;
      case 9:
        if ((v8 & 1) == 0)
          goto LABEL_112;
        v66 = 0;
        v67 = 0;
        v68 = 0;
        *(_WORD *)(a1 + 104) |= 8u;
        while (2)
        {
          v69 = *v20;
          v70 = *(_QWORD *)(v3 + v69);
          v71 = v70 + 1;
          if (v70 == -1 || v71 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v72 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v70);
            *(_QWORD *)(v3 + v69) = v71;
            v68 |= (unint64_t)(v72 & 0x7F) << v66;
            if (v72 < 0)
            {
              v66 += 7;
              v30 = v67++ >= 9;
              if (v30)
              {
                v68 = 0;
                goto LABEL_130;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          v68 = 0;
LABEL_130:
        v75 = v68 != 0;
        v76 = 101;
LABEL_131:
        *(_BYTE *)(a1 + v76) = v75;
        goto LABEL_144;
      case 10:
        if (!v34 || (*(_WORD *)(a1 + 104) & 0x400) != 0)
          goto LABEL_112;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_166;
        v54 = objc_alloc_init(GEOPDSearchSubstringDescriptor);
        if (!GEOPDSearchSubstringDescriptorReadAllFrom((uint64_t)v54, (void *)v3))
          goto LABEL_165;
        PBReaderRecallMark();
        -[GEOPDSiriSearchParameters _addNoFlagsSearchSubstringDescriptor:](a1, v54);
LABEL_99:

        goto LABEL_143;
      case 11:
        if (!v34)
          goto LABEL_112;
        if ((*(_WORD *)(a1 + 104) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_166;
          v77 = *(_WORD *)(a1 + 104) << 8;
          goto LABEL_142;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_166;
        v54 = objc_alloc_init(GEOPDIndexQueryNode);
        if (!GEOPDIndexQueryNodeReadAllFrom((uint64_t)v54, (void *)v3, v10 & 1))
          goto LABEL_165;
        PBReaderRecallMark();
        v55 = 40;
        goto LABEL_110;
      case 12:
        if (!v34)
          goto LABEL_112;
        if ((*(_WORD *)(a1 + 104) & 0x100) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_166;
          v77 = *(_WORD *)(a1 + 104) << 7;
LABEL_142:
          v7 += v77 >> 15;
LABEL_143:
          v21 = (int *)MEMORY[0x1E0D82BC8];
          v22 = (int *)MEMORY[0x1E0D82BB8];
LABEL_144:
          if (!(v85 & 1 | (v7 != 0)))
            goto LABEL_145;
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_166;
        v54 = objc_alloc_init(GEOPDRecentRouteInfo);
        if (GEOPDRecentRouteInfoReadAllFrom((uint64_t)v54, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          v55 = 48;
LABEL_110:
          v53 = *(void **)(a1 + v55);
          *(_QWORD *)(a1 + v55) = v54;
LABEL_111:

          --v7;
          goto LABEL_143;
        }
LABEL_165:

LABEL_166:
        v82 = 0;
        v21 = (int *)MEMORY[0x1E0D82BC8];
LABEL_146:
        v83 = &OBJC_IVAR___GEOPDAutocompleteResultSection__readerMarkLength;
        if ((v84 & 1) != 0)
LABEL_147:
          *(_WORD *)(a1 + v83[679]) |= 0x10u;
        if (v87 || (v82 & 1) == 0)
        {
          *(_WORD *)(a1 + v83[679]) |= 0x200u;
          *(_WORD *)(a1 + v83[679]) |= 0x800u;
          *(_WORD *)(a1 + v83[679]) |= 0x20u;
          *(_WORD *)(a1 + v83[679]) |= 0x40u;
          *(_WORD *)(a1 + v83[679]) |= 0x400u;
          *(_WORD *)(a1 + v83[679]) |= 0x80u;
          *(_WORD *)(a1 + v83[679]) |= 0x100u;
        }
        else if (v19)
        {
          while (1)
          {
            v78 = *v19++;
            v79 = 512;
            switch(v78)
            {
              case 0:
                goto LABEL_159;
              case 3:
                goto LABEL_158;
              case 4:
                v79 = 2048;
                goto LABEL_158;
              case 5:
                v79 = 32;
                goto LABEL_158;
              case 6:
                v79 = 64;
                goto LABEL_158;
              case 10:
                v79 = 1024;
                goto LABEL_158;
              case 11:
                v79 = 128;
                goto LABEL_158;
              case 12:
                v79 = 256;
LABEL_158:
                *(_WORD *)(a1 + v83[679]) |= v79;
                break;
              default:
                continue;
            }
          }
        }
LABEL_159:
        if (v82)
          v3 = *(_BYTE *)(v3 + *v21) == 0;
        else
          v3 = 0;
        if (v87)
        {
          v80 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      default:
        if ((v84 & 1) == 0 || (*(_WORD *)(a1 + 104) & 0x10) != 0)
        {
LABEL_112:
          v73 = PBReaderSkipValueWithTag();
          v22 = (int *)MEMORY[0x1E0D82BB8];
          v21 = (int *)MEMORY[0x1E0D82BC8];
          if ((v73 & 1) == 0)
          {
            v82 = 0;
            goto LABEL_146;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v63 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v64 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v63;

          }
          v65 = PBUnknownFieldAdd();
          v21 = (int *)MEMORY[0x1E0D82BC8];
          v22 = (int *)MEMORY[0x1E0D82BB8];
          if (!v65)
          {
            v82 = 0;
            v83 = &OBJC_IVAR___GEOPDAutocompleteResultSection__readerMarkLength;
            goto LABEL_147;
          }
        }
        goto LABEL_144;
    }
  }
}

void sub_188C0CCC8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188C0CE44(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188C0D040(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188C0D9D8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188C0DAC0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDSiriSearchParametersCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _BYTE v10[128];
  uint64_t v11;

  v11 = *MEMORY[0x1E0C80C00];
  objc_msgSend(*(id *)(a1 + 72), "readAll:", 1);
  objc_msgSend(*(id *)(a1 + 24), "readAll:", 1);
  v8 = 0u;
  v9 = 0u;
  v6 = 0u;
  v7 = 0u;
  v2 = *(id *)(a1 + 64);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v7;
    while (1)
    {
      if (*(_QWORD *)v7 != v5)
        objc_enumerationMutation(v2);
      if (!--v4)
      {
        v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
        if (!v4)
          break;
      }
    }
  }

  -[GEOPDIndexQueryNode readAll:](*(_QWORD *)(a1 + 40), 1);
  -[GEOPDRecentRouteInfo readAll:](*(_QWORD *)(a1 + 48), 1);
}

unint64_t GEOPDSiriSearchParametersReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 84))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDSiriSearchParametersReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 88));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 80) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 84) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDSiriSearchParametersReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDSiriSearchParametersReadAllFrom_initialTag;
  Specified = GEOPDSiriSearchParametersReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDSiriSearchParametersCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 88));
  return Specified;
}

void sub_188C0DE4C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188C0E20C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL _GEOPDSiriSearchParametersIsDirty(uint64_t a1)
{
  __int16 v2;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 88));
  v2 = *(_WORD *)(a1 + 104);
  if ((v2 & 0x1A00) != 0)
    return 1;
  if ((v2 & 0x20) != 0)
  {
    if (GEOAddressIsDirty(*(_QWORD *)(a1 + 24)))
      return 1;
    v2 = *(_WORD *)(a1 + 104);
  }
  if ((v2 & 0x440) != 0)
    return 1;
  if ((v2 & 0x80) != 0)
  {
    if ((GEOPDIndexQueryNodeIsDirty(*(os_unfair_lock_s **)(a1 + 40)) & 1) != 0)
      return 1;
    v2 = *(_WORD *)(a1 + 104);
  }
  return (v2 & 0x100) != 0 && GEOPDRecentRouteInfoIsDirty(*(_QWORD *)(a1 + 48));
}

void sub_188C0E6DC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSiriSearchResultReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BOOL4 v16;
  int v17;
  int v18;
  int *v19;
  int *v20;
  _BOOL4 v21;
  int v22;
  int *v23;
  int *v24;
  char v25;
  unsigned int v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  BOOL v32;
  int v33;
  unint64_t v35;
  BOOL v36;
  int *v37;
  int v38;
  int v39;
  BOOL v40;
  GEOPDMultiLocalizedString *v41;
  char v42;
  unsigned int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  char v48;
  id v49;
  void *v50;
  int v51;
  int v52;
  char v53;
  void *v54;
  char v56;
  char v57;
  int v58;
  char v59;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = ((*(unsigned __int8 *)(a1 + 56) >> 2) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 1) & 1);
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v7 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 != 0;
        v17 = v16 & ~(_DWORD)v11 | v9;
        v18 = v16 | v11;
        if ((((v16 | v11) | v7) & 1) != 0)
          v19 = 0;
        else
          v19 = a3;
        v20 = (int *)MEMORY[0x1E0D82BF0];
        v21 = v8 != 0;
        v22 = 1;
        if (*(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(v3 + *v6))
          goto LABEL_76;
        v56 = v17;
        v58 = v21 | v18 | v17;
        v59 = (v19 == 0) | v18;
        v23 = (int *)MEMORY[0x1E0D82BC8];
        v24 = (int *)MEMORY[0x1E0D82BB8];
        v57 = v16 | v11;
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v8;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_BYTE *)(v3 + *v23))
      goto LABEL_74;
    v25 = 0;
    v26 = 0;
    v27 = 0;
    while (1)
    {
      v28 = *v20;
      v29 = *(_QWORD *)(v3 + v28);
      v30 = v29 + 1;
      if (v29 == -1 || v30 > *(_QWORD *)(v3 + *v6))
        break;
      v31 = *(_BYTE *)(*(_QWORD *)(v3 + *v24) + v29);
      *(_QWORD *)(v3 + v28) = v30;
      v27 |= (unint64_t)(v31 & 0x7F) << v25;
      if ((v31 & 0x80) == 0)
        goto LABEL_25;
      v25 += 7;
      v32 = v26++ >= 9;
      if (v32)
      {
        v27 = 0;
        v33 = *(unsigned __int8 *)(v3 + *v23);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v23) = 1;
LABEL_25:
    v33 = *(unsigned __int8 *)(v3 + *v23);
    if (*(_BYTE *)(v3 + *v23))
      v27 = 0;
LABEL_27:
    if (v33 || (v27 & 7) == 4)
    {
LABEL_74:
      v22 = 1;
      goto LABEL_75;
    }
    v35 = v27 >> 3;
    v36 = v18;
    if ((v59 & 1) == 0)
    {
      v37 = v19;
      do
      {
        v39 = *v37++;
        v38 = v39;
        v36 = v39 != 0;
        if (v39)
          v40 = v38 == (_DWORD)v35;
        else
          v40 = 1;
      }
      while (!v40);
    }
    if ((_DWORD)v35 != 3)
      break;
    if ((v7 & 1) != 0)
    {
      v42 = 0;
      v43 = 0;
      v44 = 0;
      *(_BYTE *)(a1 + 56) |= 1u;
      while (1)
      {
        v45 = *v20;
        v46 = *(_QWORD *)(v3 + v45);
        v47 = v46 + 1;
        if (v46 == -1 || v47 > *(_QWORD *)(v3 + *v6))
          break;
        v48 = *(_BYTE *)(*(_QWORD *)(v3 + *v24) + v46);
        *(_QWORD *)(v3 + v45) = v47;
        v44 |= (unint64_t)(v48 & 0x7F) << v42;
        if ((v48 & 0x80) == 0)
          goto LABEL_69;
        v42 += 7;
        v32 = v43++ >= 9;
        if (v32)
        {
          v44 = 0;
          goto LABEL_71;
        }
      }
      *(_BYTE *)(v3 + *v23) = 1;
LABEL_69:
      if (*(_BYTE *)(v3 + *v23))
        v44 = 0;
LABEL_71:
      *(_BYTE *)(a1 + 52) = v44 != 0;
      goto LABEL_72;
    }
LABEL_66:
    v22 = PBReaderSkipValueWithTag();
    v23 = (int *)MEMORY[0x1E0D82BC8];
    LOBYTE(v18) = v57;
    if ((v22 & v58 & 1) == 0)
      goto LABEL_75;
LABEL_73:
    if (*(_QWORD *)(v3 + *v20) >= *(_QWORD *)(v3 + *v6))
      goto LABEL_74;
  }
  if ((_DWORD)v35 != 2)
  {
    if ((_DWORD)v35 == 1)
    {
      if (v36 && (*(_BYTE *)(a1 + 56) & 4) == 0)
      {
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_95;
        v41 = objc_alloc_init(GEOPDMultiLocalizedString);
        if (!GEOPDMultiLocalizedStringReadAllFrom((uint64_t)v41, (void *)v3, v10 & 1))
          goto LABEL_94;
        PBReaderRecallMark();
        -[GEOPDSiriSearchResult _addNoFlagsDisambiguationLabel:](a1, v41);
LABEL_59:

        LOBYTE(v18) = v57;
        v23 = (int *)MEMORY[0x1E0D82BC8];
LABEL_72:
        if ((v58 & 1) == 0)
          goto LABEL_74;
        goto LABEL_73;
      }
    }
    else if ((v56 & 1) != 0 && (*(_BYTE *)(a1 + 56) & 2) == 0)
    {
      if (!*(_QWORD *)(a1 + 16))
      {
        v49 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v50 = *(void **)(a1 + 16);
        *(_QWORD *)(a1 + 16) = v49;

      }
      v22 = PBUnknownFieldAdd();
      LOBYTE(v18) = v57;
      v23 = (int *)MEMORY[0x1E0D82BC8];
      if (!v22)
        goto LABEL_77;
      goto LABEL_72;
    }
    goto LABEL_66;
  }
  if (!v36 || (*(_BYTE *)(a1 + 56) & 8) != 0)
    goto LABEL_66;
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_95;
  v41 = objc_alloc_init(GEOPDResultDetourInfo);
  if (GEOPDResultDetourInfoReadAllFrom((uint64_t)v41, (void *)v3))
  {
    PBReaderRecallMark();
    -[GEOPDSiriSearchResult _addNoFlagsResultDetourInfo:](a1, v41);
    goto LABEL_59;
  }
LABEL_94:

LABEL_95:
  v22 = 0;
  LOBYTE(v18) = v57;
LABEL_75:
  LOBYTE(v17) = v56;
LABEL_76:
  if ((v17 & 1) != 0)
LABEL_77:
    *(_BYTE *)(a1 + 56) |= 2u;
  if (v18 & 1 | ((v22 & 1) == 0))
  {
    *(_BYTE *)(a1 + 56) |= 4u;
    *(_BYTE *)(a1 + 56) |= 8u;
    goto LABEL_88;
  }
  if (v19)
  {
    while (2)
    {
      while (1)
      {
        v52 = *v19++;
        v51 = v52;
        if (v52 == 1)
          break;
        if (v51 == 2)
        {
          v53 = 8;
          goto LABEL_87;
        }
        if (!v51)
          goto LABEL_88;
      }
      v53 = 4;
LABEL_87:
      *(_BYTE *)(a1 + 56) |= v53;
      continue;
    }
  }
LABEL_88:
  if (v22)
  {
    v3 = *(_BYTE *)(v3 + (int)*MEMORY[0x1E0D82BC8]) == 0;
    if ((v18 & 1) == 0)
      return v3;
LABEL_92:
    v54 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  else
  {
    v3 = 0;
    if ((v18 & 1) != 0)
      goto LABEL_92;
  }
  return v3;
}

void sub_188C0F2C0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188C0F438(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188C0FA08(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDSiriSearchResultCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  _BYTE v19[128];
  _BYTE v20[128];
  uint64_t v21;

  v21 = *MEMORY[0x1E0C80C00];
  v15 = 0u;
  v16 = 0u;
  v17 = 0u;
  v18 = 0u;
  v2 = *(id *)(a1 + 24);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v15, v20, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v16;
    while (1)
    {
      if (*(_QWORD *)v16 != v5)
        objc_enumerationMutation(v2);
      if (!--v4)
      {
        v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v15, v20, 16);
        if (!v4)
          break;
      }
    }
  }

  v13 = 0u;
  v14 = 0u;
  v11 = 0u;
  v12 = 0u;
  v6 = *(id *)(a1 + 32);
  v7 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v11, v19, 16);
  if (v7)
  {
    v8 = v7;
    v9 = *(_QWORD *)v12;
    do
    {
      v10 = 0;
      do
      {
        if (*(_QWORD *)v12 != v9)
          objc_enumerationMutation(v6);
        objc_msgSend(*(id *)(*((_QWORD *)&v11 + 1) + 8 * v10++), "readAll:", 1, (_QWORD)v11);
      }
      while (v8 != v10);
      v8 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v11, v19, 16);
    }
    while (v8);
  }

}

unint64_t GEOPDSiriSearchResultReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDSiriSearchResultReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDSiriSearchResultReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDSiriSearchResultReadAllFrom_initialTag;
  Specified = GEOPDSiriSearchResultReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDSiriSearchResultCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_188C0FDE0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188C100C0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188C103CC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188C10788(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSpatialEventLookupResultReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  int *v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  BOOL v28;
  int v29;
  unint64_t v31;
  BOOL v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  char v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  char v44;
  GEOMapRegion *v45;
  void *v46;
  id v47;
  void *v48;
  int v49;
  char v50;
  char v51;
  int v52;
  int v53;
  char v54;
  void *v55;
  int v57;
  int *v58;
  char v59;
  char v60;
  char v61;
  char v62;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = ((*(unsigned __int8 *)(a1 + 56) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 2) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 1) & 1);
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v7 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 != 0;
        v59 = v16 & ~(_BYTE)v11 | v9;
        v60 = v16 | v11 | v59;
        if ((((v16 | v11) | v7) & 1) != 0)
          v17 = 0;
        else
          v17 = a3;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v61 = (v17 == 0) | v16 | v11;
        v62 = v16 | v11;
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v8;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v19))
      goto LABEL_75;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0)
        goto LABEL_25;
      v21 += 7;
      v28 = v22++ >= 9;
      if (v28)
      {
        v23 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_25:
    v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_27:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_75:
      v57 = 1;
      goto LABEL_76;
    }
    v31 = v23 >> 3;
    v32 = v62;
    if ((v61 & 1) == 0)
    {
      v33 = v17;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    if ((_DWORD)v31 != 3)
      break;
    if (!v32)
      goto LABEL_65;
    if ((*(_BYTE *)(a1 + 56) & 4) != 0)
    {
      v51 = PBReaderSkipValueWithTag();
      v6 = (int *)MEMORY[0x1E0D82BD8];
      if ((v51 & 1) == 0)
        goto LABEL_97;
      v8 += *(unsigned __int8 *)(a1 + 56) << 29 >> 31;
    }
    else
    {
      v44 = PBReaderPlaceMark();
      v6 = (int *)MEMORY[0x1E0D82BD8];
      if ((v44 & 1) == 0)
        goto LABEL_97;
      v45 = objc_alloc_init(GEOMapRegion);
      if (!GEOMapRegionReadAllFrom((uint64_t)v45, (void *)v3))
        goto LABEL_96;
      PBReaderRecallMark();
      v46 = *(void **)(a1 + 24);
      *(_QWORD *)(a1 + 24) = v45;

      --v8;
    }
    v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_66:
    if (!(v60 & 1 | (v8 != 0)))
      goto LABEL_75;
  }
  if ((_DWORD)v31 != 2)
  {
    if ((_DWORD)v31 == 1)
    {
      if ((v7 & 1) != 0)
      {
        v37 = 0;
        v38 = 0;
        v39 = 0;
        *(_BYTE *)(a1 + 56) |= 1u;
        v6 = (int *)MEMORY[0x1E0D82BD8];
        while (1)
        {
          v40 = *v18;
          v41 = *(_QWORD *)(v3 + v40);
          v42 = v41 + 1;
          if (v41 == -1 || v42 > *(_QWORD *)(v3 + *v6))
            break;
          v43 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v41);
          *(_QWORD *)(v3 + v40) = v42;
          v39 |= (unint64_t)(v43 & 0x7F) << v37;
          if ((v43 & 0x80) == 0)
            goto LABEL_69;
          v37 += 7;
          v28 = v38++ >= 9;
          if (v28)
          {
            LODWORD(v39) = 0;
            goto LABEL_71;
          }
        }
        *(_BYTE *)(v3 + *v19) = 1;
LABEL_69:
        if (*(_BYTE *)(v3 + *v19))
          LODWORD(v39) = 0;
LABEL_71:
        *(_DWORD *)(a1 + 52) = v39;
        goto LABEL_66;
      }
    }
    else if ((v59 & 1) != 0 && (*(_BYTE *)(a1 + 56) & 2) == 0)
    {
      if (!*(_QWORD *)(a1 + 16))
      {
        v47 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v48 = *(void **)(a1 + 16);
        *(_QWORD *)(a1 + 16) = v47;

      }
      v49 = PBUnknownFieldAdd();
      v19 = (int *)MEMORY[0x1E0D82BC8];
      v6 = (int *)MEMORY[0x1E0D82BD8];
      if (!v49)
      {
        v57 = 0;
        v58 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
        goto LABEL_78;
      }
      goto LABEL_66;
    }
LABEL_65:
    v50 = PBReaderSkipValueWithTag();
    v19 = (int *)MEMORY[0x1E0D82BC8];
    v6 = (int *)MEMORY[0x1E0D82BD8];
    if ((v50 & 1) != 0)
      goto LABEL_66;
    v57 = 0;
LABEL_76:
    v58 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
    goto LABEL_77;
  }
  if (!v32 || (*(_BYTE *)(a1 + 56) & 8) != 0)
    goto LABEL_65;
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_97;
  v45 = objc_alloc_init(GEOPDSpatialEventLookupResponse);
  if (GEOPDSpatialEventLookupResponseReadAllFrom((uint64_t)v45, (void *)v3, v10 & 1))
  {
    PBReaderRecallMark();
    -[GEOPDSpatialEventLookupResult _addNoFlagsEvent:](a1, v45);

    v19 = (int *)MEMORY[0x1E0D82BC8];
    v6 = (int *)MEMORY[0x1E0D82BD8];
    goto LABEL_66;
  }
LABEL_96:

LABEL_97:
  v57 = 0;
  v58 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
  v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_77:
  if ((v59 & 1) == 0)
    goto LABEL_79;
LABEL_78:
  *(_BYTE *)(a1 + v58[652]) |= 2u;
LABEL_79:
  if (v62 & 1 | ((v57 & 1) == 0))
  {
    *(_BYTE *)(a1 + v58[652]) |= 8u;
    *(_BYTE *)(a1 + v58[652]) |= 4u;
    goto LABEL_89;
  }
  if (v17)
  {
    while (2)
    {
      while (1)
      {
        v53 = *v17++;
        v52 = v53;
        if (v53 == 2)
          break;
        if (v52 == 3)
        {
          v54 = 4;
          goto LABEL_88;
        }
        if (!v52)
          goto LABEL_89;
      }
      v54 = 8;
LABEL_88:
      *(_BYTE *)(a1 + v58[652]) |= v54;
      continue;
    }
  }
LABEL_89:
  if (v57)
    v3 = *(_BYTE *)(v3 + *v19) == 0;
  else
    v3 = 0;
  if ((v62 & 1) != 0)
  {
    v55 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_188C10F94(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188C114F4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDSpatialEventLookupResultCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _BYTE v12[128];
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  v8 = 0u;
  v9 = 0u;
  v10 = 0u;
  v11 = 0u;
  v2 = *(id *)(a1 + 32);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v9;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v9 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v8 + 1) + 8 * v6++), "readAll:", 1, (_QWORD)v8);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
    }
    while (v4);
  }

  return objc_msgSend(*(id *)(a1 + 24), "readAll:", 1);
}

unint64_t GEOPDSpatialEventLookupResultReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDSpatialEventLookupResultReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDSpatialEventLookupResultReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDSpatialEventLookupResultReadAllFrom_initialTag;
  Specified = GEOPDSpatialEventLookupResultReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDSpatialEventLookupResultCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_188C1185C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188C11ABC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188C11D3C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188C120EC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSpatialPlaceLookupResultReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  int *v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  BOOL v28;
  int v29;
  unint64_t v31;
  BOOL v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  char v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  char v44;
  GEOMapRegion *v45;
  void *v46;
  id v47;
  void *v48;
  int v49;
  char v50;
  char v51;
  int v52;
  int v53;
  char v54;
  void *v55;
  int v57;
  int *v58;
  char v59;
  char v60;
  char v61;
  char v62;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = ((*(unsigned __int8 *)(a1 + 56) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 2) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 1) & 1);
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v7 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 != 0;
        v59 = v16 & ~(_BYTE)v11 | v9;
        v60 = v16 | v11 | v59;
        if ((((v16 | v11) | v7) & 1) != 0)
          v17 = 0;
        else
          v17 = a3;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v61 = (v17 == 0) | v16 | v11;
        v62 = v16 | v11;
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v8;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v19))
      goto LABEL_75;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0)
        goto LABEL_25;
      v21 += 7;
      v28 = v22++ >= 9;
      if (v28)
      {
        v23 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_25:
    v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_27:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_75:
      v57 = 1;
      goto LABEL_76;
    }
    v31 = v23 >> 3;
    v32 = v62;
    if ((v61 & 1) == 0)
    {
      v33 = v17;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    if ((_DWORD)v31 != 3)
      break;
    if (!v32)
      goto LABEL_65;
    if ((*(_BYTE *)(a1 + 56) & 4) != 0)
    {
      v51 = PBReaderSkipValueWithTag();
      v6 = (int *)MEMORY[0x1E0D82BD8];
      if ((v51 & 1) == 0)
        goto LABEL_97;
      v8 += *(unsigned __int8 *)(a1 + 56) << 29 >> 31;
    }
    else
    {
      v44 = PBReaderPlaceMark();
      v6 = (int *)MEMORY[0x1E0D82BD8];
      if ((v44 & 1) == 0)
        goto LABEL_97;
      v45 = objc_alloc_init(GEOMapRegion);
      if (!GEOMapRegionReadAllFrom((uint64_t)v45, (void *)v3))
        goto LABEL_96;
      PBReaderRecallMark();
      v46 = *(void **)(a1 + 24);
      *(_QWORD *)(a1 + 24) = v45;

      --v8;
    }
    v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_66:
    if (!(v60 & 1 | (v8 != 0)))
      goto LABEL_75;
  }
  if ((_DWORD)v31 != 2)
  {
    if ((_DWORD)v31 == 1)
    {
      if ((v7 & 1) != 0)
      {
        v37 = 0;
        v38 = 0;
        v39 = 0;
        *(_BYTE *)(a1 + 56) |= 1u;
        v6 = (int *)MEMORY[0x1E0D82BD8];
        while (1)
        {
          v40 = *v18;
          v41 = *(_QWORD *)(v3 + v40);
          v42 = v41 + 1;
          if (v41 == -1 || v42 > *(_QWORD *)(v3 + *v6))
            break;
          v43 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v41);
          *(_QWORD *)(v3 + v40) = v42;
          v39 |= (unint64_t)(v43 & 0x7F) << v37;
          if ((v43 & 0x80) == 0)
            goto LABEL_69;
          v37 += 7;
          v28 = v38++ >= 9;
          if (v28)
          {
            LODWORD(v39) = 0;
            goto LABEL_71;
          }
        }
        *(_BYTE *)(v3 + *v19) = 1;
LABEL_69:
        if (*(_BYTE *)(v3 + *v19))
          LODWORD(v39) = 0;
LABEL_71:
        *(_DWORD *)(a1 + 52) = v39;
        goto LABEL_66;
      }
    }
    else if ((v59 & 1) != 0 && (*(_BYTE *)(a1 + 56) & 2) == 0)
    {
      if (!*(_QWORD *)(a1 + 16))
      {
        v47 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v48 = *(void **)(a1 + 16);
        *(_QWORD *)(a1 + 16) = v47;

      }
      v49 = PBUnknownFieldAdd();
      v19 = (int *)MEMORY[0x1E0D82BC8];
      v6 = (int *)MEMORY[0x1E0D82BD8];
      if (!v49)
      {
        v57 = 0;
        v58 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
        goto LABEL_78;
      }
      goto LABEL_66;
    }
LABEL_65:
    v50 = PBReaderSkipValueWithTag();
    v19 = (int *)MEMORY[0x1E0D82BC8];
    v6 = (int *)MEMORY[0x1E0D82BD8];
    if ((v50 & 1) != 0)
      goto LABEL_66;
    v57 = 0;
LABEL_76:
    v58 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
    goto LABEL_77;
  }
  if (!v32 || (*(_BYTE *)(a1 + 56) & 8) != 0)
    goto LABEL_65;
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_97;
  v45 = objc_alloc_init(GEOPDSpatialPlaceLookupResponse);
  if (GEOPDSpatialPlaceLookupResponseReadAllFrom((uint64_t)v45, (void *)v3, v10 & 1))
  {
    PBReaderRecallMark();
    -[GEOPDSpatialPlaceLookupResult _addNoFlagsPlace:](a1, v45);

    v19 = (int *)MEMORY[0x1E0D82BC8];
    v6 = (int *)MEMORY[0x1E0D82BD8];
    goto LABEL_66;
  }
LABEL_96:

LABEL_97:
  v57 = 0;
  v58 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
  v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_77:
  if ((v59 & 1) == 0)
    goto LABEL_79;
LABEL_78:
  *(_BYTE *)(a1 + v58[657]) |= 2u;
LABEL_79:
  if (v62 & 1 | ((v57 & 1) == 0))
  {
    *(_BYTE *)(a1 + v58[657]) |= 8u;
    *(_BYTE *)(a1 + v58[657]) |= 4u;
    goto LABEL_89;
  }
  if (v17)
  {
    while (2)
    {
      while (1)
      {
        v53 = *v17++;
        v52 = v53;
        if (v53 == 2)
          break;
        if (v52 == 3)
        {
          v54 = 4;
          goto LABEL_88;
        }
        if (!v52)
          goto LABEL_89;
      }
      v54 = 8;
LABEL_88:
      *(_BYTE *)(a1 + v58[657]) |= v54;
      continue;
    }
  }
LABEL_89:
  if (v57)
    v3 = *(_BYTE *)(v3 + *v19) == 0;
  else
    v3 = 0;
  if ((v62 & 1) != 0)
  {
    v55 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_188C1290C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188C12E94(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDSpatialPlaceLookupResultCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _BYTE v12[128];
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  v8 = 0u;
  v9 = 0u;
  v10 = 0u;
  v11 = 0u;
  v2 = *(id *)(a1 + 32);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v9;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v9 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v8 + 1) + 8 * v6++), "readAll:", 1, (_QWORD)v8);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
    }
    while (v4);
  }

  return objc_msgSend(*(id *)(a1 + 24), "readAll:", 1);
}

unint64_t GEOPDSpatialPlaceLookupResultReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDSpatialPlaceLookupResultReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDSpatialPlaceLookupResultReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDSpatialPlaceLookupResultReadAllFrom_initialTag;
  Specified = GEOPDSpatialPlaceLookupResultReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDSpatialPlaceLookupResultCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_188C131FC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188C1345C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188C136DC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDTerritoryLookupParametersReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  GEOLatLngE7 *v18;
  id v19;
  void *v20;
  _BOOL8 v21;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_29;
          v18 = objc_alloc_init(GEOLatLngE7);
          if (!GEOLatLngE7ReadAllFrom((uint64_t)v18, v3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          -[GEOPDTerritoryLookupParameters addLocation:](a1, v18);

        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v19 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v20 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v19;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_29;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v21 = v3[*v6] == 0;
  }
  else
  {
LABEL_29:
    v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_188C13F70(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDTerritoryLookupResultReadAllFrom(uint64_t a1, void *a2)
{
  unsigned __int8 *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  int v8;
  char v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  char v17;
  BOOL v18;
  id v19;
  void *v20;
  _BOOL8 v21;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    v7 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      v8 = v3[*v6];
      if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
        break;
      if (v3[*v6])
      {
        v8 = 1;
        break;
      }
      v9 = 0;
      v10 = 0;
      v11 = 0;
      while (1)
      {
        v12 = *v4;
        v13 = *(_QWORD *)&v3[v12];
        v14 = v13 + 1;
        if (v13 == -1 || v14 > *(_QWORD *)&v3[*v5])
          break;
        v15 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v13);
        *(_QWORD *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0)
          goto LABEL_13;
        v9 += 7;
        if (v10++ >= 9)
        {
          v17 = 0;
          v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      v8 = v3[*v6];
      if (v3[*v6])
        v17 = 0;
      else
        v17 = v11;
LABEL_16:
      if (v8)
        v18 = 1;
      else
        v18 = (v17 & 7) == 4;
      if (v18)
        break;
      if (!*(_QWORD *)(a1 + 8))
      {
        v19 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v20 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = v19;

      }
      if ((PBUnknownFieldAdd() & 1) == 0)
        goto LABEL_23;
    }
    v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_188C146D4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDTransitNearbyPaymentMethodLookupOriginReadAllFrom(uint64_t a1, void *a2, int a3)
{
  char *v5;
  int *v6;
  int *v7;
  int *v8;
  int *v9;
  char v10;
  unsigned int v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  int v18;
  GEOWaypointTyped *v20;
  void *v21;
  id v22;
  void *v23;
  _BOOL8 v24;

  v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    v6 = (int *)MEMORY[0x1E0D82BF0];
    v7 = (int *)MEMORY[0x1E0D82BD8];
    v8 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v5[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v5[*MEMORY[0x1E0D82BD8]])
    {
      v9 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v5[*v8])
          break;
        v10 = 0;
        v11 = 0;
        v12 = 0;
        while (1)
        {
          v13 = *v6;
          v14 = *(_QWORD *)&v5[v13];
          v15 = v14 + 1;
          if (v14 == -1 || v15 > *(_QWORD *)&v5[*v7])
            break;
          v16 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v14);
          *(_QWORD *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0)
            goto LABEL_13;
          v10 += 7;
          if (v11++ >= 9)
          {
            v12 = 0;
            v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        v18 = v5[*v8];
        if (v5[*v8])
          v12 = 0;
LABEL_15:
        if (v18 || (v12 & 7) == 4)
          break;
        if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_29;
          v20 = objc_alloc_init(GEOWaypointTyped);
          if (!GEOWaypointTypedReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          v21 = *(void **)(a1 + 16);
          *(_QWORD *)(a1 + 16) = v20;

        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v22 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v23 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v22;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_29;
        }
      }
      while (*(_QWORD *)&v5[*v6] < *(_QWORD *)&v5[*v7]);
    }
    v24 = v5[*v8] == 0;
  }
  else
  {
LABEL_29:
    v24 = 0;
  }
  objc_sync_exit(v5);

  return v24;
}

void sub_188C14CF8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void GEOPDTransitNearbyPaymentMethodLookupOriginClearSensitiveFields(uint64_t a1, uint64_t a2, int a3)
{
  void *v5;
  id v6;
  unsigned int v7;
  id v8;
  void *v9;
  id v10;
  id v11;

  if (!a1 || !a3)
  {
    if (!a1)
    {
      v10 = 0;
      goto LABEL_8;
    }
LABEL_7:
    v10 = *(id *)(a1 + 16);
LABEL_8:
    v11 = v10;
    objc_msgSend(v10, "clearSensitiveFields:", a2);
    goto LABEL_9;
  }
  v5 = *(void **)(a1 + 16);
  if (!v5)
    goto LABEL_7;
  v6 = v5;
  v7 = GEOWaypointTypedHasSensitiveFields(v6);

  if (!v7)
    goto LABEL_7;
  v8 = *(id *)(a1 + 16);
  v11 = (id)objc_msgSend(v8, "copy");

  objc_msgSend(v11, "waypointLocation");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "clearSensitiveFields:", a2);

  -[GEOPDTransitNearbyPaymentMethodLookupOrigin setWaypointTyped:](a1, v11);
LABEL_9:

}

void **GEOPDTransitNearbyPaymentMethodLookupOriginHasSensitiveFields(void **result)
{
  if (result)
    return (void **)GEOWaypointTypedHasSensitiveFields(result[2]);
  return result;
}

BOOL GEOPDTransitNearbyPaymentMethodLookupParametersReadAllFrom(uint64_t a1, void *a2, int a3)
{
  char *v5;
  int *v6;
  int *v7;
  int *v8;
  int *v9;
  char v10;
  unsigned int v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  int v18;
  GEOPDTransitNearbyPaymentMethodLookupOrigin *v20;
  id v21;
  void *v22;
  _BOOL8 v23;

  v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    v6 = (int *)MEMORY[0x1E0D82BF0];
    v7 = (int *)MEMORY[0x1E0D82BD8];
    v8 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v5[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v5[*MEMORY[0x1E0D82BD8]])
    {
      v9 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v5[*v8])
          break;
        v10 = 0;
        v11 = 0;
        v12 = 0;
        while (1)
        {
          v13 = *v6;
          v14 = *(_QWORD *)&v5[v13];
          v15 = v14 + 1;
          if (v14 == -1 || v15 > *(_QWORD *)&v5[*v7])
            break;
          v16 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v14);
          *(_QWORD *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0)
            goto LABEL_13;
          v10 += 7;
          if (v11++ >= 9)
          {
            v12 = 0;
            v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        v18 = v5[*v8];
        if (v5[*v8])
          v12 = 0;
LABEL_15:
        if (v18 || (v12 & 7) == 4)
          break;
        if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_29;
          v20 = objc_alloc_init(GEOPDTransitNearbyPaymentMethodLookupOrigin);
          if (!GEOPDTransitNearbyPaymentMethodLookupOriginReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          -[GEOPDTransitNearbyPaymentMethodLookupParameters addTransitNearbyPaymentMethodLookupOrigin:](a1, v20);

        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v21 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v22 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v21;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_29;
        }
      }
      while (*(_QWORD *)&v5[*v6] < *(_QWORD *)&v5[*v7]);
    }
    v23 = v5[*v8] == 0;
  }
  else
  {
LABEL_29:
    v23 = 0;
  }
  objc_sync_exit(v5);

  return v23;
}

void sub_188C1562C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDTransitNearbyScheduleLookupOriginReadAllFrom(uint64_t a1, void *a2, int a3)
{
  char *v5;
  int *v6;
  int *v7;
  int *v8;
  int *v9;
  char v10;
  unsigned int v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  int v18;
  GEOWaypointTyped *v20;
  void *v21;
  id v22;
  void *v23;
  _BOOL8 v24;

  v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    v6 = (int *)MEMORY[0x1E0D82BF0];
    v7 = (int *)MEMORY[0x1E0D82BD8];
    v8 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v5[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v5[*MEMORY[0x1E0D82BD8]])
    {
      v9 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v5[*v8])
          break;
        v10 = 0;
        v11 = 0;
        v12 = 0;
        while (1)
        {
          v13 = *v6;
          v14 = *(_QWORD *)&v5[v13];
          v15 = v14 + 1;
          if (v14 == -1 || v15 > *(_QWORD *)&v5[*v7])
            break;
          v16 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v14);
          *(_QWORD *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0)
            goto LABEL_13;
          v10 += 7;
          if (v11++ >= 9)
          {
            v12 = 0;
            v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        v18 = v5[*v8];
        if (v5[*v8])
          v12 = 0;
LABEL_15:
        if (v18 || (v12 & 7) == 4)
          break;
        if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_29;
          v20 = objc_alloc_init(GEOWaypointTyped);
          if (!GEOWaypointTypedReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          v21 = *(void **)(a1 + 16);
          *(_QWORD *)(a1 + 16) = v20;

        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v22 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v23 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v22;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_29;
        }
      }
      while (*(_QWORD *)&v5[*v6] < *(_QWORD *)&v5[*v7]);
    }
    v24 = v5[*v8] == 0;
  }
  else
  {
LABEL_29:
    v24 = 0;
  }
  objc_sync_exit(v5);

  return v24;
}

void sub_188C15ED4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void GEOPDTransitNearbyScheduleLookupOriginClearSensitiveFields(uint64_t a1, uint64_t a2, int a3)
{
  void *v5;
  id v6;
  unsigned int v7;
  id v8;
  void *v9;
  id v10;
  id v11;

  if (!a1 || !a3)
  {
    if (!a1)
    {
      v10 = 0;
      goto LABEL_8;
    }
LABEL_7:
    v10 = *(id *)(a1 + 16);
LABEL_8:
    v11 = v10;
    objc_msgSend(v10, "clearSensitiveFields:", a2);
    goto LABEL_9;
  }
  v5 = *(void **)(a1 + 16);
  if (!v5)
    goto LABEL_7;
  v6 = v5;
  v7 = GEOWaypointTypedHasSensitiveFields(v6);

  if (!v7)
    goto LABEL_7;
  v8 = *(id *)(a1 + 16);
  v11 = (id)objc_msgSend(v8, "copy");

  objc_msgSend(v11, "waypointLocation");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "clearSensitiveFields:", a2);

  -[GEOPDTransitNearbyScheduleLookupOrigin setWaypointTyped:](a1, v11);
LABEL_9:

}

void **GEOPDTransitNearbyScheduleLookupOriginHasSensitiveFields(void **result)
{
  if (result)
    return (void **)GEOWaypointTypedHasSensitiveFields(result[2]);
  return result;
}

void sub_188C162F4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDTransitNearbyScheduleLookupParametersReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  char v17;
  unsigned __int8 v18;
  char v19;
  int *v20;
  int *v21;
  int *v22;
  int *v23;
  char v24;
  unsigned int v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  int v32;
  unint64_t v34;
  BOOL v35;
  int *v36;
  int v37;
  int v38;
  BOOL v39;
  GEOPDTransitNearbyScheduleLookupOrigin *v40;
  void *v41;
  id v42;
  void *v43;
  int v44;
  char v45;
  char v46;
  int v47;
  int v48;
  void *v49;
  int v51;
  int *v52;
  char v53;
  char v54;
  char v55;
  BOOL v56;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1)
      + (*(_BYTE *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1);
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v7 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 != 0;
        v17 = v16 & ~(_BYTE)v11 | v9;
        v18 = v16 | v11;
        v53 = v17;
        v19 = v18 | v17;
        if (((v18 | v7) & 1) != 0)
          v20 = 0;
        else
          v20 = a3;
        v56 = v18;
        v54 = v19;
        v55 = (v20 == 0) | v18;
        v21 = (int *)MEMORY[0x1E0D82BF0];
        v22 = (int *)MEMORY[0x1E0D82BC8];
        v23 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v8;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v21) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v22))
      goto LABEL_62;
    v24 = 0;
    v25 = 0;
    v26 = 0;
    while (1)
    {
      v27 = *v21;
      v28 = *(_QWORD *)(v3 + v27);
      v29 = v28 + 1;
      if (v28 == -1 || v29 > *(_QWORD *)(v3 + *v6))
        break;
      v30 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v28);
      *(_QWORD *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0)
        goto LABEL_25;
      v24 += 7;
      if (v25++ >= 9)
      {
        v26 = 0;
        v32 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v22) = 1;
LABEL_25:
    v32 = *(unsigned __int8 *)(v3 + *v22);
    if (*(_BYTE *)(v3 + *v22))
      v26 = 0;
LABEL_27:
    if (v32 || (v26 & 7) == 4)
    {
LABEL_62:
      v51 = 1;
      goto LABEL_63;
    }
    v34 = v26 >> 3;
    v35 = v56;
    if ((v55 & 1) == 0)
    {
      v36 = v20;
      do
      {
        v38 = *v36++;
        v37 = v38;
        v35 = v38 != 0;
        if (v38)
          v39 = v37 == (_DWORD)v34;
        else
          v39 = 1;
      }
      while (!v39);
    }
    if ((_DWORD)v34 == 2)
      break;
    if ((_DWORD)v34 == 1)
    {
      if (v35 && (*(_BYTE *)(a1 + 52) & 2) == 0)
      {
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_83;
        v40 = objc_alloc_init(GEOPDTransitNearbyScheduleLookupOrigin);
        if (!GEOPDTransitNearbyScheduleLookupOriginReadAllFrom((uint64_t)v40, (void *)v3, v10 & 1))
          goto LABEL_82;
        PBReaderRecallMark();
        -[GEOPDTransitNearbyScheduleLookupParameters _addNoFlagsTransitNearbyScheduleLookupOrigin:](a1, v40);

        goto LABEL_60;
      }
    }
    else if ((v53 & 1) != 0 && (*(_BYTE *)(a1 + 52) & 1) == 0)
    {
      if (!*(_QWORD *)(a1 + 16))
      {
        v42 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v43 = *(void **)(a1 + 16);
        *(_QWORD *)(a1 + 16) = v42;

      }
      v44 = PBUnknownFieldAdd();
      v22 = (int *)MEMORY[0x1E0D82BC8];
      if (!v44)
      {
        v51 = 0;
        v52 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
        goto LABEL_65;
      }
      goto LABEL_61;
    }
LABEL_56:
    v45 = PBReaderSkipValueWithTag();
    v22 = (int *)MEMORY[0x1E0D82BC8];
    if ((v45 & 1) == 0)
    {
      v51 = 0;
LABEL_63:
      v52 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
      goto LABEL_64;
    }
LABEL_61:
    if (!(v54 & 1 | (v8 != 0)))
      goto LABEL_62;
  }
  if (!v35)
    goto LABEL_56;
  if ((*(_BYTE *)(a1 + 52) & 4) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0)
      goto LABEL_83;
    v8 += *(unsigned __int8 *)(a1 + 52) << 29 >> 31;
    goto LABEL_60;
  }
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_83;
  v40 = objc_alloc_init(GEOWaypointTyped);
  if (GEOWaypointTypedReadAllFrom((uint64_t)v40, (void *)v3, v10 & 1))
  {
    PBReaderRecallMark();
    v41 = *(void **)(a1 + 32);
    *(_QWORD *)(a1 + 32) = v40;

    --v8;
LABEL_60:
    v22 = (int *)MEMORY[0x1E0D82BC8];
    goto LABEL_61;
  }
LABEL_82:

LABEL_83:
  v51 = 0;
  v52 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
  v22 = (int *)MEMORY[0x1E0D82BC8];
LABEL_64:
  if ((v53 & 1) == 0)
    goto LABEL_66;
LABEL_65:
  *(_BYTE *)(a1 + v52[667]) |= 1u;
LABEL_66:
  if (v56 || (v51 & 1) == 0)
  {
    *(_BYTE *)(a1 + v52[667]) |= 2u;
    *(_BYTE *)(a1 + v52[667]) |= 4u;
    goto LABEL_76;
  }
  if (v20)
  {
    while (1)
    {
      v48 = *v20++;
      v47 = v48;
      if (v48 == 1)
        break;
      if (v47 == 2)
      {
        v46 = 4;
LABEL_72:
        *(_BYTE *)(a1 + v52[667]) |= v46;
      }
      else if (!v47)
      {
        goto LABEL_76;
      }
    }
    v46 = 2;
    goto LABEL_72;
  }
LABEL_76:
  if (v51)
    v3 = *(_BYTE *)(v3 + *v22) == 0;
  else
    v3 = 0;
  if (v56)
  {
    v49 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_188C16A18(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188C16EFC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDTransitNearbyScheduleLookupParametersCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _BYTE v11[128];
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  v7 = 0u;
  v8 = 0u;
  v9 = 0u;
  v10 = 0u;
  v2 = *(id *)(a1 + 24);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v8;
    while (1)
    {
      if (*(_QWORD *)v8 != v5)
        objc_enumerationMutation(v2);
      if (!--v4)
      {
        v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
        if (!v4)
          break;
      }
    }
  }

  return objc_msgSend(*(id *)(a1 + 32), "readAll:", 1, v7);
}

unint64_t GEOPDTransitNearbyScheduleLookupParametersReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDTransitNearbyScheduleLookupParametersReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDTransitNearbyScheduleLookupParametersReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDTransitNearbyScheduleLookupParametersReadAllFrom_initialTag;
  Specified = GEOPDTransitNearbyScheduleLookupParametersReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDTransitNearbyScheduleLookupParametersCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_188C1724C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188C17478(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

os_unfair_lock_s *_GEOPDTransitNearbyScheduleLookupParametersIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  if ((*(_BYTE *)(a1 + 52) & 0xA) != 0)
    return (os_unfair_lock_s *)1;
  if ((*(_BYTE *)(a1 + 52) & 4) != 0)
    return GEOWaypointTypedIsDirty(*(os_unfair_lock_s **)(a1 + 32));
  return 0;
}

os_unfair_lock_s *GEOPDTransitNearbyScheduleLookupParametersIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  os_unfair_lock_s *v2;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    v2 = _GEOPDTransitNearbyScheduleLookupParametersIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 12);
    return v2;
  }
  return result;
}

void sub_188C17784(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDTransitScheduleLookupResultReadAllFrom(uint64_t a1, void *a2)
{
  unsigned __int8 *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  int v8;
  char v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  char v17;
  BOOL v18;
  id v19;
  void *v20;
  _BOOL8 v21;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    v7 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      v8 = v3[*v6];
      if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
        break;
      if (v3[*v6])
      {
        v8 = 1;
        break;
      }
      v9 = 0;
      v10 = 0;
      v11 = 0;
      while (1)
      {
        v12 = *v4;
        v13 = *(_QWORD *)&v3[v12];
        v14 = v13 + 1;
        if (v13 == -1 || v14 > *(_QWORD *)&v3[*v5])
          break;
        v15 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v13);
        *(_QWORD *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0)
          goto LABEL_13;
        v9 += 7;
        if (v10++ >= 9)
        {
          v17 = 0;
          v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      v8 = v3[*v6];
      if (v3[*v6])
        v17 = 0;
      else
        v17 = v11;
LABEL_16:
      if (v8)
        v18 = 1;
      else
        v18 = (v17 & 7) == 4;
      if (v18)
        break;
      if (!*(_QWORD *)(a1 + 8))
      {
        v19 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v20 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = v19;

      }
      if ((PBUnknownFieldAdd() & 1) == 0)
        goto LABEL_23;
    }
    v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_188C17D10(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDTransitVehiclePositionParametersReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  int v17;
  char v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  id v26;
  void *v27;
  char v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  _BOOL8 v35;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        v17 = v10 & 7;
        if (v16 || v17 == 4)
          break;
        if ((v10 >> 3) == 1)
        {
          if (v17 == 2)
          {
            if (!PBReaderPlaceMark())
              goto LABEL_49;
            while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5] && !v3[*v6])
            {
              v19 = 0;
              v20 = 0;
              v21 = 0;
              while (1)
              {
                v22 = *v4;
                v23 = *(_QWORD *)&v3[v22];
                v24 = v23 + 1;
                if (v23 == -1 || v24 > *(_QWORD *)&v3[*v5])
                  break;
                v25 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v23);
                *(_QWORD *)&v3[v22] = v24;
                v21 |= (unint64_t)(v25 & 0x7F) << v19;
                if (v25 < 0)
                {
                  v19 += 7;
                  v15 = v20++ >= 9;
                  if (!v15)
                    continue;
                }
                goto LABEL_32;
              }
              v3[*v6] = 1;
LABEL_32:
              PBRepeatedUInt64Add();
            }
            PBReaderRecallMark();
          }
          else
          {
            v28 = 0;
            v29 = 0;
            v30 = 0;
            while (1)
            {
              v31 = *v4;
              v32 = *(_QWORD *)&v3[v31];
              v33 = v32 + 1;
              if (v32 == -1 || v33 > *(_QWORD *)&v3[*v5])
                break;
              v34 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v32);
              *(_QWORD *)&v3[v31] = v33;
              v30 |= (unint64_t)(v34 & 0x7F) << v28;
              if (v34 < 0)
              {
                v28 += 7;
                v15 = v29++ >= 9;
                if (!v15)
                  continue;
              }
              goto LABEL_46;
            }
            v3[*v6] = 1;
LABEL_46:
            PBRepeatedUInt64Add();
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v26 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v27 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v26;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_49;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v35 = v3[*v6] == 0;
  }
  else
  {
LABEL_49:
    v35 = 0;
  }
  objc_sync_exit(v3);

  return v35;
}

void sub_188C1843C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDVectorPoiDisplayDVReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  int *v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  BOOL v28;
  int v29;
  unint64_t v31;
  BOOL v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  char v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  GEOPDZoomInfo *v44;
  uint64_t v45;
  char v46;
  unsigned int v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  char v51;
  char v52;
  unsigned int v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  char v57;
  void *v58;
  char v59;
  unsigned int v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  char v65;
  id v66;
  void *v67;
  int v68;
  char v69;
  uint64_t v70;
  __int16 v71;
  int v72;
  __int16 v73;
  void *v74;
  int v76;
  int *v77;
  char v78;
  char v79;
  char v80;
  char v81;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 68);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 64));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 92)), (uint16x4_t)0xFFFBFFF7FFF9FFF8), (int8x8_t)0x1000100010001))+ ((*(_WORD *)(a1 + 92) >> 6) & 1)+ ((*(_WORD *)(a1 + 92) >> 4) & 1));
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 > 3;
        v78 = v16 & ~(_BYTE)v11 | v9;
        v79 = v16 | v11 | v78;
        if ((((v16 | v11) | v8) & 1) != 0)
          v17 = 0;
        else
          v17 = a3;
        v80 = (v17 == 0) | v16 | v11;
        v81 = v16 | v11;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v7;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v19))
      goto LABEL_135;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0)
        goto LABEL_25;
      v21 += 7;
      v28 = v22++ >= 9;
      if (v28)
      {
        v23 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_25:
    v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_27:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_135:
      v76 = 1;
      goto LABEL_136;
    }
    v31 = v23 >> 3;
    v32 = v81;
    if ((v80 & 1) == 0)
    {
      v33 = v17;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if ((v8 & 1) == 0)
          goto LABEL_103;
        v37 = 0;
        v38 = 0;
        v39 = 0;
        *(_WORD *)(a1 + 92) |= 2u;
        while (1)
        {
          v40 = *v18;
          v41 = *(_QWORD *)(v3 + v40);
          v42 = v41 + 1;
          if (v41 == -1 || v42 > *(_QWORD *)(v3 + *v6))
            break;
          v43 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v41);
          *(_QWORD *)(v3 + v40) = v42;
          v39 |= (unint64_t)(v43 & 0x7F) << v37;
          if ((v43 & 0x80) == 0)
            goto LABEL_106;
          v37 += 7;
          v28 = v38++ >= 9;
          if (v28)
          {
            LODWORD(v39) = 0;
            goto LABEL_108;
          }
        }
        *(_BYTE *)(v3 + *v19) = 1;
LABEL_106:
        if (*(_BYTE *)(v3 + *v19))
          LODWORD(v39) = 0;
LABEL_108:
        v70 = 80;
        goto LABEL_117;
      case 2:
        if (!v32)
          goto LABEL_103;
        if ((*(_WORD *)(a1 + 92) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_154;
          v71 = *(_WORD *)(a1 + 92) << 8;
          goto LABEL_132;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_154;
        v44 = objc_alloc_init(GEOPDZoomInfo);
        if (!GEOPDZoomInfoReadAllFrom((uint64_t)v44, (void *)v3))
          goto LABEL_153;
        PBReaderRecallMark();
        v45 = 40;
        goto LABEL_88;
      case 3:
        if ((v8 & 1) == 0)
          goto LABEL_103;
        v46 = 0;
        v47 = 0;
        v39 = 0;
        *(_WORD *)(a1 + 92) |= 1u;
        while (2)
        {
          v48 = *v18;
          v49 = *(_QWORD *)(v3 + v48);
          v50 = v49 + 1;
          if (v49 == -1 || v50 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v19) = 1;
          }
          else
          {
            v51 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v49);
            *(_QWORD *)(v3 + v48) = v50;
            v39 |= (unint64_t)(v51 & 0x7F) << v46;
            if (v51 < 0)
            {
              v46 += 7;
              v28 = v47++ >= 9;
              if (v28)
              {
                LODWORD(v39) = 0;
                goto LABEL_112;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v19))
          LODWORD(v39) = 0;
LABEL_112:
        v70 = 76;
        goto LABEL_117;
      case 4:
        if (!v32)
          goto LABEL_103;
        if ((*(_WORD *)(a1 + 92) & 0x100) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_154;
          v71 = *(_WORD *)(a1 + 92) << 7;
          goto LABEL_132;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_154;
        v44 = objc_alloc_init(GEOPDZoomInfo);
        if (!GEOPDZoomInfoReadAllFrom((uint64_t)v44, (void *)v3))
          goto LABEL_153;
        PBReaderRecallMark();
        v45 = 48;
        goto LABEL_88;
      case 5:
        if (!v32)
          goto LABEL_103;
        if ((*(_WORD *)(a1 + 92) & 0x200) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_154;
          v71 = *(_WORD *)(a1 + 92) << 6;
          goto LABEL_132;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_154;
        v44 = objc_alloc_init(GEOPDCustomLandmark);
        if (!GEOPDCustomLandmarkReadAllFrom((uint64_t)v44, (void *)v3))
          goto LABEL_153;
        PBReaderRecallMark();
        v45 = 56;
        goto LABEL_88;
      case 6:
        if ((v8 & 1) == 0)
          goto LABEL_103;
        v52 = 0;
        v53 = 0;
        v39 = 0;
        *(_WORD *)(a1 + 92) |= 4u;
        while (2)
        {
          v54 = *v18;
          v55 = *(_QWORD *)(v3 + v54);
          v56 = v55 + 1;
          if (v55 == -1 || v56 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v19) = 1;
          }
          else
          {
            v57 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v55);
            *(_QWORD *)(v3 + v54) = v56;
            v39 |= (unint64_t)(v57 & 0x7F) << v52;
            if (v57 < 0)
            {
              v52 += 7;
              v28 = v53++ >= 9;
              if (v28)
              {
                LODWORD(v39) = 0;
                goto LABEL_116;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v19))
          LODWORD(v39) = 0;
LABEL_116:
        v70 = 84;
LABEL_117:
        *(_DWORD *)(a1 + v70) = v39;
        goto LABEL_134;
      case 7:
        if (!v32)
          goto LABEL_103;
        if ((*(_WORD *)(a1 + 92) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_154;
          v71 = *(_WORD *)(a1 + 92) << 10;
          goto LABEL_132;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_154;
        v44 = objc_alloc_init(GEOPDZoomInfo);
        if (!GEOPDZoomInfoReadAllFrom((uint64_t)v44, (void *)v3))
          goto LABEL_153;
        PBReaderRecallMark();
        v45 = 24;
        goto LABEL_88;
      case 8:
        if (!v32)
          goto LABEL_103;
        if ((*(_WORD *)(a1 + 92) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_154;
          v71 = *(_WORD *)(a1 + 92) << 9;
LABEL_132:
          v7 += v71 >> 15;
LABEL_133:
          v19 = (int *)MEMORY[0x1E0D82BC8];
          v20 = (int *)MEMORY[0x1E0D82BB8];
LABEL_134:
          if (!(v79 & 1 | (v7 != 0)))
            goto LABEL_135;
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_154;
        v44 = objc_alloc_init(GEOPDZoomInfo);
        if (GEOPDZoomInfoReadAllFrom((uint64_t)v44, (void *)v3))
        {
          PBReaderRecallMark();
          v45 = 32;
LABEL_88:
          v58 = *(void **)(a1 + v45);
          *(_QWORD *)(a1 + v45) = v44;

          --v7;
          goto LABEL_133;
        }
LABEL_153:

LABEL_154:
        v76 = 0;
        v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_136:
        v77 = &OBJC_IVAR___GEOPDAutocompleteResultSection__readerMarkLength;
        if ((v78 & 1) != 0)
LABEL_137:
          *(_WORD *)(a1 + v77[723]) |= 0x10u;
        if (v81 & 1 | ((v76 & 1) == 0))
        {
          *(_WORD *)(a1 + v77[723]) |= 0x80u;
          *(_WORD *)(a1 + v77[723]) |= 0x100u;
          *(_WORD *)(a1 + v77[723]) |= 0x200u;
          *(_WORD *)(a1 + v77[723]) |= 0x20u;
          *(_WORD *)(a1 + v77[723]) |= 0x40u;
        }
        else if (v17)
        {
          while (1)
          {
            v72 = *v17++;
            v73 = 128;
            switch(v72)
            {
              case 0:
                goto LABEL_147;
              case 2:
                goto LABEL_146;
              case 4:
                v73 = 256;
                goto LABEL_146;
              case 5:
                v73 = 512;
                goto LABEL_146;
              case 7:
                v73 = 32;
                goto LABEL_146;
              case 8:
                v73 = 64;
LABEL_146:
                *(_WORD *)(a1 + v77[723]) |= v73;
                break;
              default:
                continue;
            }
          }
        }
LABEL_147:
        if (v76)
          v3 = *(_BYTE *)(v3 + *v19) == 0;
        else
          v3 = 0;
        if ((v81 & 1) != 0)
        {
          v74 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      case 9:
        if ((v8 & 1) == 0)
          goto LABEL_103;
        v59 = 0;
        v60 = 0;
        v61 = 0;
        *(_WORD *)(a1 + 92) |= 8u;
        while (2)
        {
          v62 = *v18;
          v63 = *(_QWORD *)(v3 + v62);
          v64 = v63 + 1;
          if (v63 == -1 || v64 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v19) = 1;
          }
          else
          {
            v65 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v63);
            *(_QWORD *)(v3 + v62) = v64;
            v61 |= (unint64_t)(v65 & 0x7F) << v59;
            if (v65 < 0)
            {
              v59 += 7;
              v28 = v60++ >= 9;
              if (v28)
              {
                v61 = 0;
                goto LABEL_121;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v19))
          v61 = 0;
LABEL_121:
        *(_BYTE *)(a1 + 88) = v61 != 0;
        goto LABEL_134;
      default:
        if ((v78 & 1) == 0 || (*(_WORD *)(a1 + 92) & 0x10) != 0)
        {
LABEL_103:
          v69 = PBReaderSkipValueWithTag();
          v20 = (int *)MEMORY[0x1E0D82BB8];
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if ((v69 & 1) == 0)
          {
            v76 = 0;
            goto LABEL_136;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v66 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v67 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v66;

          }
          v68 = PBUnknownFieldAdd();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          v20 = (int *)MEMORY[0x1E0D82BB8];
          if (!v68)
          {
            v76 = 0;
            v77 = &OBJC_IVAR___GEOPDAutocompleteResultSection__readerMarkLength;
            goto LABEL_137;
          }
        }
        goto LABEL_134;
    }
  }
}

void sub_188C197F4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188C198CC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDVectorPoiDisplayDVReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t v6;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 68))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDVectorPoiDisplayDVReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 72));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 64) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 68) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDVectorPoiDisplayDVReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDVectorPoiDisplayDVReadAllFrom_initialTag;
  v6 = GEOPDVectorPoiDisplayDVReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return v6;
}

void sub_188C19B20(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDZoomInfoIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v14;
  int v15;
  int v16;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  _BOOL8 v21;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = *v4;
          v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = *v4;
      v15 = a1[v14];
      if (a1[v14])
        v8 = 0;
LABEL_14:
      v16 = v8 & 7;
      if (v15 || v16 == 4)
        break;
      if ((v8 >> 3) == 2 || (v8 >> 3) == 1)
      {
        if (v16 != 1)
          goto LABEL_30;
        v18 = *v2;
        v19 = *(_QWORD *)&a1[v18];
        if (v19 <= 0xFFFFFFFFFFFFFFF7 && (v20 = v19 + 8, v20 <= *(_QWORD *)&a1[*v3]))
          *(_QWORD *)&a1[v18] = v20;
        else
          a1[v14] = 1;
      }
      else if (!PBReaderSkipValueWithTag())
      {
LABEL_30:
        v21 = 0;
        goto LABEL_29;
      }
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v21 = a1[*v4] == 0;
LABEL_29:
  PBReaderRecallMark();
  return v21;
}

void sub_188C19F64(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188C1A1D8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDVendorSpecificPlaceRefinementParametersReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  char v17;
  unsigned __int8 v18;
  int *v19;
  int *v20;
  int *v21;
  int *v22;
  char v23;
  unsigned int v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  BOOL v30;
  int v31;
  unint64_t v33;
  BOOL v34;
  int *v35;
  int v36;
  int v37;
  BOOL v38;
  char v39;
  unsigned int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  id v46;
  void *v47;
  int v48;
  char v49;
  unsigned int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  GEOLatLng *v58;
  uint64_t v59;
  void *v60;
  void *v61;
  char v62;
  unsigned int v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  char v67;
  char v68;
  unsigned int v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  char v73;
  char v74;
  uint64_t v75;
  __int16 v76;
  int v77;
  __int16 v78;
  void *v79;
  int v81;
  int *v82;
  char v83;
  char v84;
  char v85;
  BOOL v86;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 96));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 92);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 88));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = ((*(unsigned __int16 *)(a1 + 112) >> 4) & 1)
      + (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 112)), (uint16x4_t)0xFFFBFFF7FFF5FFF9), (int8x8_t)0x1000100010001))+ ((*(_WORD *)(a1 + 112) >> 10) & 1)+ (HIBYTE(*(_WORD *)(a1 + 112)) & 1)+ ((*(_WORD *)(a1 + 112) >> 6) & 1));
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 > 4;
        v17 = v16 & ~(_BYTE)v11 | v9;
        v18 = v16 | v11;
        v83 = v17;
        v84 = v18 | v17;
        if (((v18 | v8) & 1) != 0)
          v19 = 0;
        else
          v19 = a3;
        v85 = (v19 == 0) | v18;
        v86 = v18;
        v20 = (int *)MEMORY[0x1E0D82BF0];
        v21 = (int *)MEMORY[0x1E0D82BC8];
        v22 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v7;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v20) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v21))
      goto LABEL_141;
    v23 = 0;
    v24 = 0;
    v25 = 0;
    while (1)
    {
      v26 = *v20;
      v27 = *(_QWORD *)(v3 + v26);
      v28 = v27 + 1;
      if (v27 == -1 || v28 > *(_QWORD *)(v3 + *v6))
        break;
      v29 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v27);
      *(_QWORD *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0)
        goto LABEL_25;
      v23 += 7;
      v30 = v24++ >= 9;
      if (v30)
      {
        v25 = 0;
        v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v21) = 1;
LABEL_25:
    v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(_BYTE *)(v3 + *v21))
      v25 = 0;
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_141:
      v81 = 1;
      goto LABEL_142;
    }
    v33 = v25 >> 3;
    v34 = v86;
    if ((v85 & 1) == 0)
    {
      v35 = v19;
      do
      {
        v37 = *v35++;
        v36 = v37;
        v34 = v37 != 0;
        if (v37)
          v38 = v36 == (_DWORD)v33;
        else
          v38 = 1;
      }
      while (!v38);
    }
    switch((int)v33)
    {
      case 1:
        if ((v8 & 1) == 0)
          goto LABEL_107;
        v39 = 0;
        v40 = 0;
        v41 = 0;
        *(_WORD *)(a1 + 112) |= 8u;
        while (1)
        {
          v42 = *v20;
          v43 = *(_QWORD *)(v3 + v42);
          v44 = v43 + 1;
          if (v43 == -1 || v44 > *(_QWORD *)(v3 + *v6))
            break;
          v45 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v43);
          *(_QWORD *)(v3 + v42) = v44;
          v41 |= (unint64_t)(v45 & 0x7F) << v39;
          if ((v45 & 0x80) == 0)
            goto LABEL_110;
          v39 += 7;
          v30 = v40++ >= 9;
          if (v30)
          {
            LODWORD(v41) = 0;
            goto LABEL_112;
          }
        }
        *(_BYTE *)(v3 + *v21) = 1;
LABEL_110:
        if (*(_BYTE *)(v3 + *v21))
          LODWORD(v41) = 0;
LABEL_112:
        v75 = 108;
        goto LABEL_125;
      case 2:
        if ((v8 & 1) == 0)
          goto LABEL_107;
        v49 = 0;
        v50 = 0;
        v51 = 0;
        *(_WORD *)(a1 + 112) |= 1u;
        while (2)
        {
          v52 = *v20;
          v53 = *(_QWORD *)(v3 + v52);
          v54 = v53 + 1;
          if (v53 == -1 || v54 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v55 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v53);
            *(_QWORD *)(v3 + v52) = v54;
            v51 |= (unint64_t)(v55 & 0x7F) << v49;
            if (v55 < 0)
            {
              v49 += 7;
              v30 = v50++ >= 9;
              if (v30)
              {
                v51 = 0;
                goto LABEL_116;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          v51 = 0;
LABEL_116:
        *(_QWORD *)(a1 + 64) = v51;
        goto LABEL_140;
      case 3:
        if (!v34)
          goto LABEL_107;
        if ((*(_WORD *)(a1 + 112) & 0x800) == 0)
        {
          PBReaderReadString();
          v56 = objc_claimAutoreleasedReturnValue();
          v57 = 80;
          goto LABEL_105;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_163;
        v76 = 16 * *(_WORD *)(a1 + 112);
        goto LABEL_138;
      case 4:
        if (!v34)
          goto LABEL_107;
        if ((*(_WORD *)(a1 + 112) & 0x80) == 0)
        {
          PBReaderReadString();
          v56 = objc_claimAutoreleasedReturnValue();
          v57 = 40;
          goto LABEL_105;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_163;
        v76 = *(_WORD *)(a1 + 112) << 8;
        goto LABEL_138;
      case 5:
        if (!v34)
          goto LABEL_107;
        if ((*(_WORD *)(a1 + 112) & 0x200) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_163;
          v76 = *(_WORD *)(a1 + 112) << 6;
          goto LABEL_138;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_163;
        v58 = objc_alloc_init(GEOLatLng);
        if (!GEOLatLngReadAllFrom((uint64_t)v58, (void *)v3))
          goto LABEL_162;
        PBReaderRecallMark();
        v59 = 56;
        goto LABEL_77;
      case 6:
        if (!v34)
          goto LABEL_107;
        if ((*(_WORD *)(a1 + 112) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_163;
          v76 = *(_WORD *)(a1 + 112) << 10;
LABEL_138:
          v7 += v76 >> 15;
LABEL_139:
          v21 = (int *)MEMORY[0x1E0D82BC8];
          v22 = (int *)MEMORY[0x1E0D82BB8];
          goto LABEL_140;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_163;
        v58 = objc_alloc_init(GEOStructuredAddress);
        if (GEOStructuredAddressReadAllFrom(v58, (void *)v3))
        {
          PBReaderRecallMark();
          v59 = 24;
LABEL_77:
          v60 = *(void **)(a1 + v59);
          *(_QWORD *)(a1 + v59) = v58;
LABEL_106:

          --v7;
          goto LABEL_139;
        }
LABEL_162:

LABEL_163:
        v81 = 0;
        v82 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
        v21 = (int *)MEMORY[0x1E0D82BC8];
LABEL_143:
        if ((v83 & 1) != 0)
LABEL_144:
          *(_WORD *)(a1 + v82[674]) |= 0x10u;
        if (v86 || (v81 & 1) == 0)
        {
          *(_WORD *)(a1 + v82[674]) |= 0x800u;
          *(_WORD *)(a1 + v82[674]) |= 0x80u;
          *(_WORD *)(a1 + v82[674]) |= 0x200u;
          *(_WORD *)(a1 + v82[674]) |= 0x20u;
          *(_WORD *)(a1 + v82[674]) |= 0x400u;
          *(_WORD *)(a1 + v82[674]) |= 0x100u;
          *(_WORD *)(a1 + v82[674]) |= 0x40u;
        }
        else if (v19)
        {
          while (1)
          {
            v77 = *v19++;
            v78 = 2048;
            switch(v77)
            {
              case 0:
                goto LABEL_156;
              case 3:
                goto LABEL_155;
              case 4:
                v78 = 128;
                goto LABEL_155;
              case 5:
                v78 = 512;
                goto LABEL_155;
              case 6:
                v78 = 32;
                goto LABEL_155;
              case 7:
                v78 = 1024;
                goto LABEL_155;
              case 8:
                v78 = 256;
                goto LABEL_155;
              case 11:
                v78 = 64;
LABEL_155:
                *(_WORD *)(a1 + v82[674]) |= v78;
                break;
              default:
                continue;
            }
          }
        }
LABEL_156:
        if (v81)
          v3 = *(_BYTE *)(v3 + *v21) == 0;
        else
          v3 = 0;
        if (v86)
        {
          v79 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      case 7:
        if (!v34)
          goto LABEL_107;
        if ((*(_WORD *)(a1 + 112) & 0x400) == 0)
        {
          PBReaderReadString();
          v56 = objc_claimAutoreleasedReturnValue();
          v57 = 72;
          goto LABEL_105;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_163;
        v76 = 32 * *(_WORD *)(a1 + 112);
        goto LABEL_138;
      case 8:
        if (!v34 || (*(_WORD *)(a1 + 112) & 0x100) != 0)
          goto LABEL_107;
        PBReaderReadString();
        v61 = (void *)objc_claimAutoreleasedReturnValue();
        if (v61)
          -[GEOPDVendorSpecificPlaceRefinementParameters _addNoFlagsFormattedAddressLineHint:](a1, v61);

        goto LABEL_139;
      case 9:
        if ((v8 & 1) == 0)
          goto LABEL_107;
        v62 = 0;
        v63 = 0;
        v41 = 0;
        *(_WORD *)(a1 + 112) |= 4u;
        while (2)
        {
          v64 = *v20;
          v65 = *(_QWORD *)(v3 + v64);
          v66 = v65 + 1;
          if (v65 == -1 || v66 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v67 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v65);
            *(_QWORD *)(v3 + v64) = v66;
            v41 |= (unint64_t)(v67 & 0x7F) << v62;
            if (v67 < 0)
            {
              v62 += 7;
              v30 = v63++ >= 9;
              if (v30)
              {
                LODWORD(v41) = 0;
                goto LABEL_120;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          LODWORD(v41) = 0;
LABEL_120:
        v75 = 104;
        goto LABEL_125;
      case 10:
        if ((v8 & 1) == 0)
          goto LABEL_107;
        v68 = 0;
        v69 = 0;
        v41 = 0;
        *(_WORD *)(a1 + 112) |= 2u;
        while (2)
        {
          v70 = *v20;
          v71 = *(_QWORD *)(v3 + v70);
          v72 = v71 + 1;
          if (v71 == -1 || v72 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v73 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v71);
            *(_QWORD *)(v3 + v70) = v72;
            v41 |= (unint64_t)(v73 & 0x7F) << v68;
            if (v73 < 0)
            {
              v68 += 7;
              v30 = v69++ >= 9;
              if (v30)
              {
                LODWORD(v41) = 0;
                goto LABEL_124;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          LODWORD(v41) = 0;
LABEL_124:
        v75 = 100;
LABEL_125:
        *(_DWORD *)(a1 + v75) = v41;
        goto LABEL_140;
      case 11:
        if (!v34)
          goto LABEL_107;
        if ((*(_WORD *)(a1 + 112) & 0x40) == 0)
        {
          PBReaderReadData();
          v56 = objc_claimAutoreleasedReturnValue();
          v57 = 32;
LABEL_105:
          v60 = *(void **)(a1 + v57);
          *(_QWORD *)(a1 + v57) = v56;
          goto LABEL_106;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_163;
        v76 = *(_WORD *)(a1 + 112) << 9;
        goto LABEL_138;
      default:
        if ((v83 & 1) == 0 || (*(_WORD *)(a1 + 112) & 0x10) != 0)
        {
LABEL_107:
          v74 = PBReaderSkipValueWithTag();
          v22 = (int *)MEMORY[0x1E0D82BB8];
          v21 = (int *)MEMORY[0x1E0D82BC8];
          if ((v74 & 1) == 0)
          {
            v81 = 0;
LABEL_142:
            v82 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
            goto LABEL_143;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v46 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v47 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v46;

          }
          v48 = PBUnknownFieldAdd();
          v21 = (int *)MEMORY[0x1E0D82BC8];
          v22 = (int *)MEMORY[0x1E0D82BB8];
          if (!v48)
          {
            v81 = 0;
            v82 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
            goto LABEL_144;
          }
        }
LABEL_140:
        if (!(v84 & 1 | (v7 != 0)))
          goto LABEL_141;
        continue;
    }
  }
}

void sub_188C1B2A0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188C1B434(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188C1B578(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188C1BFDC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188C1C0CC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDVendorSpecificPlaceRefinementParametersReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 92))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDVendorSpecificPlaceRefinementParametersReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 96));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 88) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 92) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDVendorSpecificPlaceRefinementParametersReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDVendorSpecificPlaceRefinementParametersReadAllFrom_initialTag;
  Specified = GEOPDVendorSpecificPlaceRefinementParametersReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    objc_msgSend(*(id *)(a1 + 56), "readAll:", 1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 96));
  return Specified;
}

void sub_188C1C334(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188C1C680(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDVendorSpecificPlaceRefinementParametersIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 96));
  v2 = (*(_WORD *)(a1 + 112) & 0x1FE0) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 96));
  return v2;
}

void sub_188C1CA80(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDVendorSpecificPlaceRefinementResultReadAllFrom(uint64_t a1, void *a2)
{
  unsigned __int8 *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  int v8;
  char v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  char v17;
  BOOL v18;
  id v19;
  void *v20;
  _BOOL8 v21;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    v7 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      v8 = v3[*v6];
      if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
        break;
      if (v3[*v6])
      {
        v8 = 1;
        break;
      }
      v9 = 0;
      v10 = 0;
      v11 = 0;
      while (1)
      {
        v12 = *v4;
        v13 = *(_QWORD *)&v3[v12];
        v14 = v13 + 1;
        if (v13 == -1 || v14 > *(_QWORD *)&v3[*v5])
          break;
        v15 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v13);
        *(_QWORD *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0)
          goto LABEL_13;
        v9 += 7;
        if (v10++ >= 9)
        {
          v17 = 0;
          v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      v8 = v3[*v6];
      if (v3[*v6])
        v17 = 0;
      else
        v17 = v11;
LABEL_16:
      if (v8)
        v18 = 1;
      else
        v18 = (v17 & 7) == 4;
      if (v18)
        break;
      if (!*(_QWORD *)(a1 + 8))
      {
        v19 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v20 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = v19;

      }
      if ((PBUnknownFieldAdd() & 1) == 0)
        goto LABEL_23;
    }
    v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_188C1D2FC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDViewportInfoReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  unint64_t v18;
  GEOMapRegion *v19;
  void *v20;
  char v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  char v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  id v34;
  void *v35;
  uint64_t v36;
  _BOOL8 v37;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      while (1)
      {
        if (v3[*v6])
          goto LABEL_53;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          goto LABEL_53;
        v18 = v10 >> 3;
        if ((v10 >> 3) == 3)
          break;
        if ((_DWORD)v18 == 2)
        {
          v28 = 0;
          v29 = 0;
          v23 = 0;
          *(_BYTE *)(a1 + 32) |= 2u;
          while (1)
          {
            v30 = *v4;
            v31 = *(_QWORD *)&v3[v30];
            v32 = v31 + 1;
            if (v31 == -1 || v32 > *(_QWORD *)&v3[*v5])
              break;
            v33 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v31);
            *(_QWORD *)&v3[v30] = v32;
            v23 |= (unint64_t)(v33 & 0x7F) << v28;
            if ((v33 & 0x80) == 0)
              goto LABEL_48;
            v28 += 7;
            v15 = v29++ >= 9;
            if (v15)
            {
              LODWORD(v23) = 0;
              goto LABEL_50;
            }
          }
          v3[*v6] = 1;
LABEL_48:
          if (v3[*v6])
            LODWORD(v23) = 0;
LABEL_50:
          v36 = 28;
LABEL_51:
          *(_DWORD *)(a1 + v36) = v23;
          goto LABEL_52;
        }
        if ((_DWORD)v18 == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_55;
          v19 = objc_alloc_init(GEOMapRegion);
          if (!GEOMapRegionReadAllFrom((uint64_t)v19, v3))
          {

            goto LABEL_55;
          }
          PBReaderRecallMark();
          v20 = *(void **)(a1 + 16);
          *(_QWORD *)(a1 + 16) = v19;

        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v34 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v35 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v34;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_55;
        }
LABEL_52:
        if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
          goto LABEL_53;
      }
      v21 = 0;
      v22 = 0;
      v23 = 0;
      *(_BYTE *)(a1 + 32) |= 1u;
      while (1)
      {
        v24 = *v4;
        v25 = *(_QWORD *)&v3[v24];
        v26 = v25 + 1;
        if (v25 == -1 || v26 > *(_QWORD *)&v3[*v5])
          break;
        v27 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v25);
        *(_QWORD *)&v3[v24] = v26;
        v23 |= (unint64_t)(v27 & 0x7F) << v21;
        if ((v27 & 0x80) == 0)
          goto LABEL_44;
        v21 += 7;
        v15 = v22++ >= 9;
        if (v15)
        {
          LODWORD(v23) = 0;
          goto LABEL_46;
        }
      }
      v3[*v6] = 1;
LABEL_44:
      if (v3[*v6])
        LODWORD(v23) = 0;
LABEL_46:
      v36 = 24;
      goto LABEL_51;
    }
LABEL_53:
    v37 = v3[*v6] == 0;
  }
  else
  {
LABEL_55:
    v37 = 0;
  }
  objc_sync_exit(v3);

  return v37;
}

void sub_188C1DF8C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDViewportInfoReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOPDViewportInfoReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188C1DFEC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDWarsawMerchantIdentifierReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  char v15;
  unsigned __int8 v16;
  char v17;
  int *v18;
  int *v19;
  int *v20;
  int *v21;
  char v22;
  unsigned int v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  int v30;
  unint64_t v32;
  BOOL v33;
  int *v34;
  int v35;
  int v36;
  BOOL v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  id v41;
  void *v42;
  char v43;
  int v44;
  char v45;
  void *v46;
  int v48;
  char v49;
  char v50;
  char v51;
  BOOL v52;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 52);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 48));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int8 *)(a1 + 60) >> 3) & 1)
      + (*(_BYTE *)(a1 + 60) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 1) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 2) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v11;
        v12 = v7;
        goto LABEL_8;
      case -3:
        v9 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v11 > 1;
        v15 = v14 & ~(_BYTE)v7;
        v16 = v14 | v7;
        v49 = v15 | v8;
        v17 = v16 | v15 | v8;
        if (((v16 | v9) & 1) != 0)
          v18 = 0;
        else
          v18 = a3;
        v52 = v16;
        v50 = v17;
        v51 = (v18 == 0) | v16;
        v19 = (int *)MEMORY[0x1E0D82BF0];
        v20 = (int *)MEMORY[0x1E0D82BC8];
        v21 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_7:
        v12 = v7;
        v13 = v8;
LABEL_8:
        ++v10;
        v7 = v12;
        v8 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v19) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v20))
      goto LABEL_65;
    v22 = 0;
    v23 = 0;
    v24 = 0;
    while (1)
    {
      v25 = *v19;
      v26 = *(_QWORD *)(v3 + v25);
      v27 = v26 + 1;
      if (v26 == -1 || v27 > *(_QWORD *)(v3 + *v6))
        break;
      v28 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v26);
      *(_QWORD *)(v3 + v25) = v27;
      v24 |= (unint64_t)(v28 & 0x7F) << v22;
      if ((v28 & 0x80) == 0)
        goto LABEL_23;
      v22 += 7;
      if (v23++ >= 9)
      {
        v24 = 0;
        v30 = *(unsigned __int8 *)(v3 + *v20);
        goto LABEL_25;
      }
    }
    *(_BYTE *)(v3 + *v20) = 1;
LABEL_23:
    v30 = *(unsigned __int8 *)(v3 + *v20);
    if (*(_BYTE *)(v3 + *v20))
      v24 = 0;
LABEL_25:
    if (v30 || (v24 & 7) == 4)
    {
LABEL_65:
      v48 = 1;
      goto LABEL_66;
    }
    v32 = v24 >> 3;
    v33 = v52;
    if ((v51 & 1) == 0)
    {
      v34 = v18;
      do
      {
        v36 = *v34++;
        v35 = v36;
        v33 = v36 != 0;
        if (v36)
          v37 = v35 == (_DWORD)v32;
        else
          v37 = 1;
      }
      while (!v37);
    }
    if ((_DWORD)v32 == 3)
    {
      if (!v33)
        goto LABEL_55;
      if ((*(_BYTE *)(a1 + 60) & 4) != 0)
      {
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_81;
        v43 = 32 * *(_BYTE *)(a1 + 60);
        goto LABEL_63;
      }
      PBReaderReadString();
      v38 = objc_claimAutoreleasedReturnValue();
      v39 = 32;
      goto LABEL_48;
    }
    if ((_DWORD)v32 == 2)
      break;
    if ((_DWORD)v32 == 1)
    {
      if (!v33)
        goto LABEL_55;
      if ((*(_BYTE *)(a1 + 60) & 2) != 0)
      {
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_81;
        v43 = *(_BYTE *)(a1 + 60) << 6;
        goto LABEL_63;
      }
      PBReaderReadString();
      v38 = objc_claimAutoreleasedReturnValue();
      v39 = 24;
      goto LABEL_48;
    }
    if ((v49 & 1) == 0 || (*(_BYTE *)(a1 + 60) & 1) != 0)
    {
LABEL_55:
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        goto LABEL_81;
      goto LABEL_64;
    }
    if (!*(_QWORD *)(a1 + 16))
    {
      v41 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
      v42 = *(void **)(a1 + 16);
      *(_QWORD *)(a1 + 16) = v41;

    }
    if (!PBUnknownFieldAdd())
    {
      v48 = 0;
      v20 = (int *)MEMORY[0x1E0D82BC8];
      goto LABEL_67;
    }
LABEL_64:
    v20 = (int *)MEMORY[0x1E0D82BC8];
    if (!(v50 & 1 | (v10 != 0)))
      goto LABEL_65;
  }
  if (!v33)
    goto LABEL_55;
  if ((*(_BYTE *)(a1 + 60) & 8) == 0)
  {
    PBReaderReadString();
    v38 = objc_claimAutoreleasedReturnValue();
    v39 = 40;
LABEL_48:
    v40 = *(void **)(a1 + v39);
    *(_QWORD *)(a1 + v39) = v38;

    --v10;
    goto LABEL_64;
  }
  if ((PBReaderSkipValueWithTag() & 1) != 0)
  {
    v43 = 16 * *(_BYTE *)(a1 + 60);
LABEL_63:
    v10 += v43 >> 7;
    goto LABEL_64;
  }
LABEL_81:
  v48 = 0;
  v20 = (int *)MEMORY[0x1E0D82BC8];
LABEL_66:
  if ((v49 & 1) == 0)
    goto LABEL_68;
LABEL_67:
  *(_BYTE *)(a1 + 60) |= 1u;
LABEL_68:
  if (v52 || (v48 & 1) == 0)
  {
    *(_BYTE *)(a1 + 60) |= 2u;
    *(_BYTE *)(a1 + 60) |= 8u;
    *(_BYTE *)(a1 + 60) |= 4u;
  }
  else if (v18)
  {
    while (1)
    {
      v44 = *v18++;
      v45 = 2;
      switch(v44)
      {
        case 0:
          goto LABEL_75;
        case 1:
          goto LABEL_74;
        case 2:
          v45 = 8;
          goto LABEL_74;
        case 3:
          v45 = 4;
LABEL_74:
          *(_BYTE *)(a1 + 60) |= v45;
          break;
        default:
          continue;
      }
    }
  }
LABEL_75:
  if (v48)
    v3 = *(_BYTE *)(v3 + *v20) == 0;
  else
    v3 = 0;
  if (v52)
  {
    v46 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_188C1F01C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188C1F0EC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDWarsawMerchantIdentifierReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 52))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDWarsawMerchantIdentifierReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 52) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDWarsawMerchantIdentifierReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDWarsawMerchantIdentifierReadAllFrom_initialTag;
  Specified = GEOPDWarsawMerchantIdentifierReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_188C1F4B4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188C1F660(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDWarsawMerchantIdentifierIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v2 = (*(_BYTE *)(a1 + 60) & 0x1E) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return v2;
}

void sub_188C1F864(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDWifiAccessPointReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  uint64_t v18;
  void *v19;
  id v20;
  void *v21;
  char v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  char v29;
  unsigned int v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  char v35;
  unsigned int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  char v41;
  char v42;
  unsigned int v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  char v47;
  uint64_t v48;
  _BOOL8 v49;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        switch((v10 >> 3))
        {
          case 1u:
            PBReaderReadString();
            v18 = objc_claimAutoreleasedReturnValue();
            v19 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v18;

            continue;
          case 2u:
            v22 = 0;
            v23 = 0;
            v24 = 0;
            *(_BYTE *)(a1 + 44) |= 8u;
            while (1)
            {
              v25 = *v4;
              v26 = *(_QWORD *)&v3[v25];
              v27 = v26 + 1;
              if (v26 == -1 || v27 > *(_QWORD *)&v3[*v5])
                break;
              v28 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v26);
              *(_QWORD *)&v3[v25] = v27;
              v24 |= (unint64_t)(v28 & 0x7F) << v22;
              if ((v28 & 0x80) == 0)
                goto LABEL_54;
              v22 += 7;
              v15 = v23++ >= 9;
              if (v15)
              {
                LODWORD(v24) = 0;
                goto LABEL_56;
              }
            }
            v3[*v6] = 1;
LABEL_54:
            if (v3[*v6])
              LODWORD(v24) = 0;
LABEL_56:
            v48 = 40;
            goto LABEL_69;
          case 3u:
            v29 = 0;
            v30 = 0;
            v24 = 0;
            *(_BYTE *)(a1 + 44) |= 4u;
            while (2)
            {
              v31 = *v4;
              v32 = *(_QWORD *)&v3[v31];
              v33 = v32 + 1;
              if (v32 == -1 || v33 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v34 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v32);
                *(_QWORD *)&v3[v31] = v33;
                v24 |= (unint64_t)(v34 & 0x7F) << v29;
                if (v34 < 0)
                {
                  v29 += 7;
                  v15 = v30++ >= 9;
                  if (v15)
                  {
                    LODWORD(v24) = 0;
                    goto LABEL_60;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              LODWORD(v24) = 0;
LABEL_60:
            v48 = 36;
            goto LABEL_69;
          case 4u:
            v35 = 0;
            v36 = 0;
            v37 = 0;
            *(_BYTE *)(a1 + 44) |= 1u;
            while (2)
            {
              v38 = *v4;
              v39 = *(_QWORD *)&v3[v38];
              v40 = v39 + 1;
              if (v39 == -1 || v40 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v41 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v39);
                *(_QWORD *)&v3[v38] = v40;
                v37 |= (unint64_t)(v41 & 0x7F) << v35;
                if (v41 < 0)
                {
                  v35 += 7;
                  v15 = v36++ >= 9;
                  if (v15)
                  {
                    v37 = 0;
                    goto LABEL_64;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              v37 = 0;
LABEL_64:
            *(_QWORD *)(a1 + 24) = v37;
            continue;
          case 5u:
            v42 = 0;
            v43 = 0;
            v24 = 0;
            *(_BYTE *)(a1 + 44) |= 2u;
            break;
          default:
            if (!*(_QWORD *)(a1 + 8))
            {
              v20 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
              v21 = *(void **)(a1 + 8);
              *(_QWORD *)(a1 + 8) = v20;

            }
            if (!PBUnknownFieldAdd())
              goto LABEL_72;
            continue;
        }
        while (1)
        {
          v44 = *v4;
          v45 = *(_QWORD *)&v3[v44];
          v46 = v45 + 1;
          if (v45 == -1 || v46 > *(_QWORD *)&v3[*v5])
            break;
          v47 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v45);
          *(_QWORD *)&v3[v44] = v46;
          v24 |= (unint64_t)(v47 & 0x7F) << v42;
          if ((v47 & 0x80) == 0)
            goto LABEL_66;
          v42 += 7;
          v15 = v43++ >= 9;
          if (v15)
          {
            LODWORD(v24) = 0;
            goto LABEL_68;
          }
        }
        v3[*v6] = 1;
LABEL_66:
        if (v3[*v6])
          LODWORD(v24) = 0;
LABEL_68:
        v48 = 32;
LABEL_69:
        *(_DWORD *)(a1 + v48) = v24;
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v49 = v3[*v6] == 0;
  }
  else
  {
LABEL_72:
    v49 = 0;
  }
  objc_sync_exit(v3);

  return v49;
}

void sub_188C202E0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDWifiFingerprintParametersReadAllFrom(uint64_t a1, void *a2, int a3)
{
  char *v5;
  int *v6;
  int *v7;
  int *v8;
  int *v9;
  char v10;
  unsigned int v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  BOOL v17;
  int v18;
  GEOPDWifiMeasurement *v20;
  char v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  id v28;
  void *v29;
  _BOOL8 v30;

  v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    v6 = (int *)MEMORY[0x1E0D82BF0];
    v7 = (int *)MEMORY[0x1E0D82BD8];
    v8 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v5[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v5[*MEMORY[0x1E0D82BD8]])
    {
      v9 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v5[*v8])
          break;
        v10 = 0;
        v11 = 0;
        v12 = 0;
        while (1)
        {
          v13 = *v6;
          v14 = *(_QWORD *)&v5[v13];
          v15 = v14 + 1;
          if (v14 == -1 || v15 > *(_QWORD *)&v5[*v7])
            break;
          v16 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v14);
          *(_QWORD *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0)
            goto LABEL_13;
          v10 += 7;
          v17 = v11++ >= 9;
          if (v17)
          {
            v12 = 0;
            v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        v18 = v5[*v8];
        if (v5[*v8])
          v12 = 0;
LABEL_15:
        if (v18 || (v12 & 7) == 4)
          break;
        if ((v12 >> 3) == 2)
        {
          v21 = 0;
          v22 = 0;
          v23 = 0;
          *(_BYTE *)(a1 + 28) |= 1u;
          while (1)
          {
            v24 = *v6;
            v25 = *(_QWORD *)&v5[v24];
            v26 = v25 + 1;
            if (v25 == -1 || v26 > *(_QWORD *)&v5[*v7])
              break;
            v27 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v25);
            *(_QWORD *)&v5[v24] = v26;
            v23 |= (unint64_t)(v27 & 0x7F) << v21;
            if ((v27 & 0x80) == 0)
              goto LABEL_36;
            v21 += 7;
            v17 = v22++ >= 9;
            if (v17)
            {
              LODWORD(v23) = 0;
              goto LABEL_38;
            }
          }
          v5[*v8] = 1;
LABEL_36:
          if (v5[*v8])
            LODWORD(v23) = 0;
LABEL_38:
          *(_DWORD *)(a1 + 24) = v23;
        }
        else if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_42;
          v20 = objc_alloc_init(GEOPDWifiMeasurement);
          if (!GEOPDWifiMeasurementReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_42;
          }
          PBReaderRecallMark();
          -[GEOPDWifiFingerprintParameters addMeasurement:](a1, v20);

        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v28 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v29 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v28;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_42;
        }
      }
      while (*(_QWORD *)&v5[*v6] < *(_QWORD *)&v5[*v7]);
    }
    v30 = v5[*v8] == 0;
  }
  else
  {
LABEL_42:
    v30 = 0;
  }
  objc_sync_exit(v5);

  return v30;
}

void sub_188C20EBC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEOPDWifiMeasurementHasSensitiveFields(id *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _BYTE v12[128];
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  if (!a1)
    return 0;
  v10 = 0u;
  v11 = 0u;
  v8 = 0u;
  v9 = 0u;
  -[GEOPDWifiMeasurement locations](a1);
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  v2 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
  if (v2)
  {
    v3 = v2;
    v4 = *(_QWORD *)v9;
    while (2)
    {
      v5 = 0;
      do
      {
        if (*(_QWORD *)v9 != v4)
          objc_enumerationMutation(v1);
        if ((GEOLocationHasSensitiveFields(*(_QWORD *)(*((_QWORD *)&v8 + 1) + 8 * v5)) & 1) != 0)
        {
          v6 = 1;
          goto LABEL_12;
        }
        ++v5;
      }
      while (v3 != v5);
      v3 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
      if (v3)
        continue;
      break;
    }
  }
  v6 = 0;
LABEL_12:

  return v6;
}

unint64_t GEOPDWifiMeasurementClearSensitiveFields(uint64_t a1, uint64_t a2, int a3)
{
  unint64_t result;
  unint64_t i;
  uint64_t v8;
  void *v9;
  _DWORD *v10;

  -[GEOPDWifiMeasurement _readLocations](a1);
  result = objc_msgSend(*(id *)(a1 + 40), "count");
  if (result)
  {
    for (i = 0; i < result; ++i)
    {
      objc_msgSend(*(id *)(a1 + 40), "objectAtIndexedSubscript:", i);
      v8 = objc_claimAutoreleasedReturnValue();
      v9 = (void *)v8;
      if (a3 && GEOLocationHasSensitiveFields(v8))
      {
        v10 = (_DWORD *)objc_msgSend(v9, "copy");
        GEOLocationClearSensitiveFields(v10);
        objc_msgSend(*(id *)(a1 + 40), "replaceObjectAtIndex:withObject:", i, v10);

      }
      else
      {
        objc_msgSend(v9, "clearSensitiveFields:", a2);
      }

      result = objc_msgSend(*(id *)(a1 + 40), "count");
    }
  }
  return result;
}

BOOL GEOPDWifiFingerprintResultReadAllFrom(uint64_t a1, void *a2)
{
  unsigned __int8 *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  int v8;
  char v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  char v17;
  BOOL v18;
  id v19;
  void *v20;
  _BOOL8 v21;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    v7 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      v8 = v3[*v6];
      if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
        break;
      if (v3[*v6])
      {
        v8 = 1;
        break;
      }
      v9 = 0;
      v10 = 0;
      v11 = 0;
      while (1)
      {
        v12 = *v4;
        v13 = *(_QWORD *)&v3[v12];
        v14 = v13 + 1;
        if (v13 == -1 || v14 > *(_QWORD *)&v3[*v5])
          break;
        v15 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v13);
        *(_QWORD *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0)
          goto LABEL_13;
        v9 += 7;
        if (v10++ >= 9)
        {
          v17 = 0;
          v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      v8 = v3[*v6];
      if (v3[*v6])
        v17 = 0;
      else
        v17 = v11;
LABEL_16:
      if (v8)
        v18 = 1;
      else
        v18 = (v17 & 7) == 4;
      if (v18)
        break;
      if (!*(_QWORD *)(a1 + 8))
      {
        v19 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v20 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = v19;

      }
      if ((PBUnknownFieldAdd() & 1) == 0)
        goto LABEL_23;
    }
    v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_188C218F0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188C21B20(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDWifiMeasurementReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BOOL4 v17;
  int v18;
  int v19;
  int *v20;
  int *v21;
  _BOOL4 v22;
  int v23;
  int *v24;
  int *v25;
  char v26;
  unsigned int v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  BOOL v33;
  int v34;
  unint64_t v36;
  BOOL v37;
  int *v38;
  int v39;
  int v40;
  BOOL v41;
  GEOLocation *v42;
  id v43;
  void *v44;
  char v45;
  unsigned int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  char v51;
  char v52;
  unsigned int v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  char v57;
  uint64_t v58;
  char v59;
  int v60;
  int v61;
  void *v62;
  char v64;
  char v65;
  int v66;
  char v67;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 60);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 56));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
  v13 = ((*(unsigned __int8 *)(a1 + 68) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 68) >> 4) & 1)
      + ((*(unsigned __int8 *)(a1 + 68) >> 2) & 1);
  while (2)
  {
    v14 = 1;
    v15 = 1;
    v16 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v13;
        goto LABEL_8;
      case -3:
        v7 = 1;
        goto LABEL_7;
      case -2:
        v15 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v17 = v13 != 0;
        v18 = v17 & ~(_DWORD)v11 | v9;
        v19 = v17 | v11;
        if ((((v17 | v11) | v7) & 1) != 0)
          v20 = 0;
        else
          v20 = a3;
        v21 = (int *)MEMORY[0x1E0D82BF0];
        v22 = v8 != 0;
        v23 = 1;
        if (*(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(v3 + *v6))
          goto LABEL_88;
        v64 = v18;
        v66 = v22 | v19 | v18;
        v67 = (v20 == 0) | v19;
        v24 = (int *)MEMORY[0x1E0D82BC8];
        v25 = (int *)MEMORY[0x1E0D82BB8];
        v65 = v17 | v11;
        break;
      default:
        ++v13;
LABEL_7:
        v14 = v9;
LABEL_8:
        v15 = v10;
        v16 = v11;
LABEL_10:
        ++v8;
        v9 = v14;
        v10 = v15;
        v11 = v16;
        continue;
    }
    break;
  }
  while (!*(_BYTE *)(v3 + *v24))
  {
    v26 = 0;
    v27 = 0;
    v28 = 0;
    while (1)
    {
      v29 = *v21;
      v30 = *(_QWORD *)(v3 + v29);
      v31 = v30 + 1;
      if (v30 == -1 || v31 > *(_QWORD *)(v3 + *v6))
        break;
      v32 = *(_BYTE *)(*(_QWORD *)(v3 + *v25) + v30);
      *(_QWORD *)(v3 + v29) = v31;
      v28 |= (unint64_t)(v32 & 0x7F) << v26;
      if ((v32 & 0x80) == 0)
        goto LABEL_25;
      v26 += 7;
      v33 = v27++ >= 9;
      if (v33)
      {
        v28 = 0;
        v34 = *(unsigned __int8 *)(v3 + *v24);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v24) = 1;
LABEL_25:
    v34 = *(unsigned __int8 *)(v3 + *v24);
    if (*(_BYTE *)(v3 + *v24))
      v28 = 0;
LABEL_27:
    if (v34 || (v28 & 7) == 4)
      break;
    v36 = v28 >> 3;
    v37 = v19;
    if ((v67 & 1) == 0)
    {
      v38 = v20;
      do
      {
        v40 = *v38++;
        v39 = v40;
        v37 = v40 != 0;
        if (v40)
          v41 = v39 == (_DWORD)v36;
        else
          v41 = 1;
      }
      while (!v41);
    }
    switch((int)v36)
    {
      case 1:
        if (!v37 || (*(_BYTE *)(a1 + 68) & 8) != 0)
          goto LABEL_72;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_107;
        v42 = objc_alloc_init(GEOLocation);
        if (!GEOLocationReadAllFrom((uint64_t)v42, (void *)v3, v10 & 1))
          goto LABEL_106;
        PBReaderRecallMark();
        -[GEOPDWifiMeasurement _addNoFlagsLocation:](a1, v42);
        goto LABEL_55;
      case 2:
        if (!v37 || (*(_BYTE *)(a1 + 68) & 0x10) != 0)
          goto LABEL_72;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_107;
        v42 = objc_alloc_init(GEOPDWifiAccessPoint);
        if (!GEOPDWifiAccessPointReadAllFrom((uint64_t)v42, (void *)v3))
        {
LABEL_106:

LABEL_107:
          v23 = 0;
          v12 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
          LOBYTE(v19) = v65;
          goto LABEL_87;
        }
        PBReaderRecallMark();
        -[GEOPDWifiMeasurement _addNoFlagsWifiAccessPoint:](a1, v42);
LABEL_55:

        LOBYTE(v19) = v65;
        v24 = (int *)MEMORY[0x1E0D82BC8];
        goto LABEL_83;
      case 3:
        if ((v7 & 1) == 0)
          goto LABEL_72;
        v45 = 0;
        v46 = 0;
        v47 = 0;
        *(_BYTE *)(a1 + 68) |= 1u;
        while (2)
        {
          v48 = *v21;
          v49 = *(_QWORD *)(v3 + v48);
          v50 = v49 + 1;
          if (v49 == -1 || v50 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v24) = 1;
          }
          else
          {
            v51 = *(_BYTE *)(*(_QWORD *)(v3 + *v25) + v49);
            *(_QWORD *)(v3 + v48) = v50;
            v47 |= (unint64_t)(v51 & 0x7F) << v45;
            if (v51 < 0)
            {
              v45 += 7;
              v33 = v46++ >= 9;
              if (v33)
              {
                v47 = 0;
                goto LABEL_77;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v24))
          v47 = 0;
LABEL_77:
        v58 = 24;
        goto LABEL_82;
      case 4:
        if ((v7 & 1) == 0)
          goto LABEL_72;
        v52 = 0;
        v53 = 0;
        v47 = 0;
        *(_BYTE *)(a1 + 68) |= 2u;
        while (2)
        {
          v54 = *v21;
          v55 = *(_QWORD *)(v3 + v54);
          v56 = v55 + 1;
          if (v55 == -1 || v56 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v24) = 1;
          }
          else
          {
            v57 = *(_BYTE *)(*(_QWORD *)(v3 + *v25) + v55);
            *(_QWORD *)(v3 + v54) = v56;
            v47 |= (unint64_t)(v57 & 0x7F) << v52;
            if (v57 < 0)
            {
              v52 += 7;
              v33 = v53++ >= 9;
              if (v33)
              {
                v47 = 0;
                goto LABEL_81;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v24))
          v47 = 0;
LABEL_81:
        v58 = 32;
LABEL_82:
        *(_QWORD *)(a1 + v58) = v47;
        goto LABEL_83;
      default:
        if ((v64 & 1) == 0 || (*(_BYTE *)(a1 + 68) & 4) != 0)
        {
LABEL_72:
          v23 = PBReaderSkipValueWithTag();
          v24 = (int *)MEMORY[0x1E0D82BC8];
          LOBYTE(v19) = v65;
          if ((v23 & v66 & 1) == 0)
            goto LABEL_86;
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v43 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v44 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v43;

          }
          v23 = PBUnknownFieldAdd();
          LOBYTE(v19) = v65;
          v24 = (int *)MEMORY[0x1E0D82BC8];
          if (!v23)
          {
            v12 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
            goto LABEL_89;
          }
LABEL_83:
          if ((v66 & 1) == 0)
            goto LABEL_85;
        }
        if (*(_QWORD *)(v3 + *v21) >= *(_QWORD *)(v3 + *v6))
          goto LABEL_85;
        break;
    }
  }
LABEL_85:
  v23 = 1;
LABEL_86:
  v12 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
LABEL_87:
  LOBYTE(v18) = v64;
LABEL_88:
  if ((v18 & 1) != 0)
LABEL_89:
    *(_BYTE *)(a1 + v12[700]) |= 4u;
  if (!(v19 & 1 | ((v23 & 1) == 0)))
  {
    if (!v20)
      goto LABEL_100;
    while (1)
    {
      v61 = *v20++;
      v60 = v61;
      if (v61 == 1)
        break;
      if (v60 == 2)
      {
        v59 = 16;
LABEL_96:
        *(_BYTE *)(a1 + v12[700]) |= v59;
      }
      else if (!v60)
      {
        goto LABEL_100;
      }
    }
    v59 = 8;
    goto LABEL_96;
  }
  *(_BYTE *)(a1 + v12[700]) |= 8u;
  *(_BYTE *)(a1 + v12[700]) |= 0x10u;
LABEL_100:
  if (v23)
  {
    v3 = *(_BYTE *)(v3 + (int)*MEMORY[0x1E0D82BC8]) == 0;
    if ((v19 & 1) == 0)
      return v3;
    goto LABEL_104;
  }
  v3 = 0;
  if ((v19 & 1) != 0)
  {
LABEL_104:
    v62 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_188C223A8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188C22A48(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDWifiMeasurementCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  _BYTE v19[128];
  _BYTE v20[128];
  uint64_t v21;

  v21 = *MEMORY[0x1E0C80C00];
  v15 = 0u;
  v16 = 0u;
  v17 = 0u;
  v18 = 0u;
  v2 = *(id *)(a1 + 40);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v15, v20, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v16;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v16 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v15 + 1) + 8 * v6++), "readAll:", 1);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v15, v20, 16);
    }
    while (v4);
  }

  v13 = 0u;
  v14 = 0u;
  v11 = 0u;
  v12 = 0u;
  v7 = *(id *)(a1 + 48);
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v11, v19, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v12;
    while (1)
    {
      if (*(_QWORD *)v12 != v10)
        objc_enumerationMutation(v7);
      if (!--v9)
      {
        v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v11, v19, 16);
        if (!v9)
          break;
      }
    }
  }

}

unint64_t GEOPDWifiMeasurementReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 60))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDWifiMeasurementReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 60) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDWifiMeasurementReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDWifiMeasurementReadAllFrom_initialTag;
  Specified = GEOPDWifiMeasurementReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDWifiMeasurementCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_188C22E1C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188C2311C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188C2344C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDZoomInfoReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  id v23;
  void *v24;
  int *v25;
  _BOOL8 v26;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      while (1)
      {
        if (v3[*v6])
          goto LABEL_37;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          goto LABEL_37;
        if ((v10 >> 3) == 2)
          break;
        if ((v10 >> 3) == 1)
        {
          *(_BYTE *)(a1 + 32) |= 2u;
          v18 = *v4;
          v19 = *(_QWORD *)&v3[v18];
          if (v19 <= 0xFFFFFFFFFFFFFFF7 && v19 + 8 <= *(_QWORD *)&v3[*v5])
          {
            v20 = *(_QWORD *)(*(_QWORD *)&v3[*v7] + v19);
            *(_QWORD *)&v3[v18] = v19 + 8;
          }
          else
          {
            v3[*v6] = 1;
            v20 = 0;
          }
          v25 = &OBJC_IVAR___GEOPDZoomInfo__minZoom;
LABEL_35:
          *(_QWORD *)(a1 + *v25) = v20;
          goto LABEL_36;
        }
        if (!*(_QWORD *)(a1 + 8))
        {
          v23 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
          v24 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = v23;

        }
        if ((PBUnknownFieldAdd() & 1) == 0)
          goto LABEL_38;
LABEL_36:
        if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
          goto LABEL_37;
      }
      *(_BYTE *)(a1 + 32) |= 1u;
      v21 = *v4;
      v22 = *(_QWORD *)&v3[v21];
      if (v22 <= 0xFFFFFFFFFFFFFFF7 && v22 + 8 <= *(_QWORD *)&v3[*v5])
      {
        v20 = *(_QWORD *)(*(_QWORD *)&v3[*v7] + v22);
        *(_QWORD *)&v3[v21] = v22 + 8;
      }
      else
      {
        v3[*v6] = 1;
        v20 = 0;
      }
      v25 = &OBJC_IVAR___GEOPDZoomInfo__maxZoom;
      goto LABEL_35;
    }
LABEL_37:
    v26 = v3[*v6] == 0;
  }
  else
  {
LABEL_38:
    v26 = 0;
  }
  objc_sync_exit(v3);

  return v26;
}

void sub_188C23D80(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188C24F38(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_188C26688(_Unwind_Exception *a1)
{
  _geo_isolate_unlock();
  _Unwind_Resume(a1);
}

void sub_188C26B30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  uint64_t v17;
  va_list va;

  va_start(va, a17);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v17 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_188C26E30(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  _Unwind_Resume(exception_object);
}

void sub_188C2728C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,char a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28)
{
  _Unwind_Resume(exception_object);
}

void sub_188C273E0(_Unwind_Exception *a1)
{
  _geo_isolate_unlock();
  _Unwind_Resume(a1);
}

void sub_188C27540(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_188C27810(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  _Block_object_dispose(&a25, 8);
  _Block_object_dispose(&a29, 8);
  _Unwind_Resume(a1);
}

void sub_188C292C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14)
{
  void *v14;
  void *v15;

  _Unwind_Resume(a1);
}

void sub_188C2972C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,char a39)
{
  void *v39;
  uint64_t v40;
  void *v42;

  _Block_object_dispose(&a32, 8);
  _Block_object_dispose(&a39, 8);
  _Block_object_dispose((const void *)(v40 - 216), 8);
  v42 = *(void **)(v40 - 168);
  if (v42)
  {
    *(_QWORD *)(v40 - 160) = v42;
    operator delete(v42);
  }
  _Block_object_dispose((const void *)(v40 - 144), 8);

  _Unwind_Resume(a1);
}

__n128 __Block_byref_object_copy__1(__n128 *a1, __n128 *a2)
{
  __n128 result;

  a1[3].n128_u64[0] = 0;
  a1[3].n128_u64[1] = 0;
  a1[4].n128_u64[0] = 0;
  result = a2[3];
  a1[3] = result;
  a1[4].n128_u64[0] = a2[4].n128_u64[0];
  a2[3].n128_u64[0] = 0;
  a2[3].n128_u64[1] = 0;
  a2[4].n128_u64[0] = 0;
  return result;
}

void __Block_byref_object_dispose__2(uint64_t a1)
{
  void *v2;

  v2 = *(void **)(a1 + 48);
  if (v2)
  {
    *(_QWORD *)(a1 + 56) = v2;
    operator delete(v2);
  }
}

uint64_t __Block_byref_object_copy__3(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 48) = *(_QWORD *)(a2 + 48);
  return result;
}

void sub_188C29B94(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_188C29E78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19, void *a20)
{

  _Unwind_Resume(a1);
}

void sub_188C29F3C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

double geo::MapPickedFeature::operator=(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double result;

  if (a2 != a1)
  {
    v2 = *(_QWORD *)(a2 + 8);
    if (*(_QWORD *)(a1 + 8) != v2)
      *(_QWORD *)(a1 + 8) = v2;
    result = *(double *)(a2 + 16);
    *(double *)(a1 + 16) = result;
  }
  return result;
}

float geo::MapPickedRoadFeature::operator=(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  float result;

  if (a2 != a1)
  {
    v3 = geo::MapPickedRoadFeature::operator=();
    v4 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(v3 + 24) = v4;
    *(_QWORD *)(v3 + 32) = v4;
    result = *(float *)(a2 + 40);
    *(float *)(v3 + 40) = result;
  }
  return result;
}

void geo::MapPickedRoadFeature::~MapPickedRoadFeature(geo::MapPickedRoadFeature *this)
{
  JUMPOUT(0x18D76437CLL);
}

uint64_t geo::MapPickedRoadFeature::type(geo::MapPickedRoadFeature *this)
{
  return 1;
}

void sub_188C2AB84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,char a42,uint64_t a43,uint64_t a44,uint64_t a45,char a46)
{
  _Block_object_dispose(&a42, 8);
  _Block_object_dispose(&a46, 8);
  _Unwind_Resume(a1);
}

uint64_t _getFirstColumnInt64_0(const char **a1, int a2, const char **a3)
{
  const char *v4;

  if (a2)
  {
    v4 = *a3;
    if (*a3)
      v4 = (const char *)strtoll(v4, 0, 10);
  }
  else
  {
    v4 = 0;
  }
  *a1 = v4;
  return 0;
}

void sub_188C2D520(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_188C2F368(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_list va;

  va_start(va, a10);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_188C2F6E4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAutocompleteEntryReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  int *v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  uint32x4_t v14;
  int8x16_t v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  char v21;
  unsigned __int8 v22;
  int *v23;
  int *v24;
  int *v25;
  int *v26;
  char v27;
  unsigned int v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  BOOL v34;
  int v35;
  unint64_t v37;
  BOOL v38;
  int *v39;
  int v40;
  int v41;
  BOOL v42;
  GEOPDAutocompleteEntryHighlightLine *v43;
  uint64_t v44;
  id v45;
  void *v46;
  int v47;
  char v48;
  unsigned int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  char v55;
  unsigned int v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  char v60;
  char v61;
  unsigned int v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  char v66;
  char v67;
  unsigned int v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  char v73;
  uint64_t v74;
  void *v75;
  char v76;
  unsigned int v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  char v81;
  char v82;
  uint64_t v83;
  int v84;
  int v85;
  int v86;
  void *v87;
  int v89;
  char v90;
  char v91;
  char v92;
  BOOL v93;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 160));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 156);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 152));
  v7 = v6;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = *(_DWORD *)(a1 + 184);
  v14 = (uint32x4_t)vdupq_n_s32(v13);
  v15.i64[0] = 0x100000001;
  v15.i64[1] = 0x100000001;
  v16 = vaddvq_s32(vaddq_s32(vaddq_s32((int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v14, (uint32x4_t)xmmword_189CCA170), v15), (int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v14, (uint32x4_t)xmmword_189CCA180), v15)), vaddq_s32((int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v14, (uint32x4_t)xmmword_189CCA150), v15), (int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v14, (uint32x4_t)xmmword_189CCA160), v15))))+ ((v13 >> 5) & 1);
  while (2)
  {
    v17 = 1;
    v18 = 1;
    v19 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v16;
        goto LABEL_8;
      case -3:
        v9 = 1;
        goto LABEL_7;
      case -2:
        v18 = v11;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v20 = v16 > 0xB;
        v21 = v20 & ~(_BYTE)v12 | v10;
        v22 = v20 | v12;
        v90 = v21;
        v91 = v22 | v21;
        if (((v22 | v9) & 1) != 0)
          v23 = 0;
        else
          v23 = a3;
        v92 = (v23 == 0) | v22;
        v93 = v22;
        v24 = (int *)MEMORY[0x1E0D82BF0];
        v25 = (int *)MEMORY[0x1E0D82BC8];
        v26 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v16;
LABEL_7:
        v17 = v10;
LABEL_8:
        v18 = v11;
        v19 = v12;
LABEL_10:
        ++v8;
        v10 = v17;
        v11 = v18;
        v12 = v19;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v24) >= *(_QWORD *)(v3 + *v7) || *(_BYTE *)(v3 + *v25))
      goto LABEL_223;
    v27 = 0;
    v28 = 0;
    v29 = 0;
    while (1)
    {
      v30 = *v24;
      v31 = *(_QWORD *)(v3 + v30);
      v32 = v31 + 1;
      if (v31 == -1 || v32 > *(_QWORD *)(v3 + *v7))
        break;
      v33 = *(_BYTE *)(*(_QWORD *)(v3 + *v26) + v31);
      *(_QWORD *)(v3 + v30) = v32;
      v29 |= (unint64_t)(v33 & 0x7F) << v27;
      if ((v33 & 0x80) == 0)
        goto LABEL_25;
      v27 += 7;
      v34 = v28++ >= 9;
      if (v34)
      {
        v29 = 0;
        v35 = *(unsigned __int8 *)(v3 + *v25);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v25) = 1;
LABEL_25:
    v35 = *(unsigned __int8 *)(v3 + *v25);
    if (*(_BYTE *)(v3 + *v25))
      v29 = 0;
LABEL_27:
    if (v35 || (v29 & 7) == 4)
    {
LABEL_223:
      v89 = 1;
      goto LABEL_224;
    }
    v37 = v29 >> 3;
    v38 = v93;
    if ((v92 & 1) == 0)
    {
      v39 = v23;
      do
      {
        v41 = *v39++;
        v40 = v41;
        v38 = v41 != 0;
        if (v41)
          v42 = v40 == (_DWORD)v37;
        else
          v42 = 1;
      }
      while (!v42);
    }
    switch((int)v37)
    {
      case 1:
        if (!v38)
          goto LABEL_165;
        if ((*(_BYTE *)(a1 + 185) & 0x40) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_253;
          v43 = objc_alloc_init(GEOPDAutocompleteEntryHighlightLine);
          if (GEOPDAutocompleteEntryHighlightLineReadAllFrom((uint64_t)v43, (void *)v3, v11 & 1))
          {
            PBReaderRecallMark();
            v44 = 88;
            goto LABEL_155;
          }
          goto LABEL_252;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_253;
        v84 = (int)(*(_DWORD *)(a1 + 184) << 17) >> 31;
        goto LABEL_220;
      case 2:
        if (!v38)
          goto LABEL_165;
        if ((*(_BYTE *)(a1 + 185) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_253;
          v84 = (int)(*(_DWORD *)(a1 + 184) << 18) >> 31;
          goto LABEL_220;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_253;
        v43 = objc_alloc_init(GEOPDAutocompleteEntryHighlightLine);
        if (!GEOPDAutocompleteEntryHighlightLineReadAllFrom((uint64_t)v43, (void *)v3, v11 & 1))
          goto LABEL_252;
        PBReaderRecallMark();
        v44 = 80;
        goto LABEL_155;
      case 3:
        if ((v9 & 1) == 0)
          goto LABEL_165;
        v48 = 0;
        v49 = 0;
        v50 = 0;
        *(_DWORD *)(a1 + 184) |= 8u;
        while (2)
        {
          v51 = *v24;
          v52 = *(_QWORD *)(v3 + v51);
          v53 = v52 + 1;
          if (v52 == -1 || v53 > *(_QWORD *)(v3 + *v7))
          {
            *(_BYTE *)(v3 + *v25) = 1;
          }
          else
          {
            v54 = *(_BYTE *)(*(_QWORD *)(v3 + *v26) + v52);
            *(_QWORD *)(v3 + v51) = v53;
            v50 |= (unint64_t)(v54 & 0x7F) << v48;
            if (v54 < 0)
            {
              v48 += 7;
              v34 = v49++ >= 9;
              if (v34)
              {
                LODWORD(v50) = 0;
                goto LABEL_170;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v25))
          LODWORD(v50) = 0;
LABEL_170:
        v83 = 176;
        goto LABEL_187;
      case 4:
        if (!v38)
          goto LABEL_165;
        if ((*(_BYTE *)(a1 + 186) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_253;
          v84 = (int)(*(_DWORD *)(a1 + 184) << 12) >> 31;
          goto LABEL_220;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_253;
        v43 = objc_alloc_init(GEOPDAutocompleteEntryQuery);
        if (!GEOPDAutocompleteEntryQueryReadAllFrom((uint64_t)v43, (void *)v3, v11 & 1))
          goto LABEL_252;
        PBReaderRecallMark();
        v44 = 128;
        goto LABEL_155;
      case 5:
        if (!v38)
          goto LABEL_165;
        if ((*(_BYTE *)(a1 + 185) & 1) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_253;
          v84 = (int)(*(_DWORD *)(a1 + 184) << 23) >> 31;
          goto LABEL_220;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_253;
        v43 = objc_alloc_init(GEOPDAutocompleteEntryBusiness);
        if (!GEOPDAutocompleteEntryBusinessReadAllFrom((uint64_t)v43, (void *)v3, v11 & 1))
          goto LABEL_252;
        PBReaderRecallMark();
        v44 = 40;
        goto LABEL_155;
      case 6:
        if (!v38)
          goto LABEL_165;
        if ((*(_BYTE *)(a1 + 184) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_253;
          v84 = (int)(*(_DWORD *)(a1 + 184) << 25) >> 31;
          goto LABEL_220;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_253;
        v43 = objc_alloc_init(GEOPDAutocompleteEntryAddress);
        if (!GEOPDAutocompleteEntryAddressReadAllFrom((uint64_t)v43, (void *)v3, v11 & 1))
          goto LABEL_252;
        PBReaderRecallMark();
        v44 = 24;
        goto LABEL_155;
      case 7:
        if (!v38)
          goto LABEL_165;
        if ((*(_BYTE *)(a1 + 185) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_253;
          v84 = (int)(*(_DWORD *)(a1 + 184) << 22) >> 31;
          goto LABEL_220;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_253;
        v43 = objc_alloc_init(GEOPDAutocompleteEntryCategory);
        if (!GEOPDAutocompleteEntryCategoryReadAllFrom((uint64_t)v43, (void *)v3, v11 & 1))
          goto LABEL_252;
        PBReaderRecallMark();
        v44 = 48;
        goto LABEL_155;
      case 8:
        if (!v38)
          goto LABEL_165;
        if ((*(_BYTE *)(a1 + 184) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_253;
          v84 = (int)(*(_DWORD *)(a1 + 184) << 24) >> 31;
          goto LABEL_220;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_253;
        v43 = objc_alloc_init(GEOPDAutocompleteEntryBrandProfile);
        if (!GEOPDAutocompleteEntryBrandProfileReadAllFrom((uint64_t)v43, (void *)v3))
          goto LABEL_252;
        PBReaderRecallMark();
        v44 = 32;
        goto LABEL_155;
      case 9:
        if (!v38)
          goto LABEL_165;
        if ((*(_BYTE *)(a1 + 185) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_253;
          v84 = (int)(*(_DWORD *)(a1 + 184) << 16) >> 31;
          goto LABEL_220;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_253;
        v43 = objc_alloc_init(GEOPDAutocompleteEntryOfflineArea);
        if (!GEOPDAutocompleteEntryOfflineAreaReadAllFrom((uint64_t)v43, (void *)v3))
          goto LABEL_252;
        PBReaderRecallMark();
        v44 = 96;
        goto LABEL_155;
      case 10:
        if (!v38)
          goto LABEL_165;
        if ((*(_BYTE *)(a1 + 185) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_253;
          v84 = (int)(*(_DWORD *)(a1 + 184) << 21) >> 31;
          goto LABEL_220;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_253;
        v43 = objc_alloc_init(GEOPDAutocompleteEntryClientResolved);
        if (!GEOPDAutocompleteEntryClientResolvedReadAllFrom((uint64_t)v43, (void *)v3))
          goto LABEL_252;
        PBReaderRecallMark();
        v44 = 56;
        goto LABEL_155;
      case 11:
        if (!v38)
          goto LABEL_165;
        if ((*(_BYTE *)(a1 + 185) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_253;
          v84 = (int)(*(_DWORD *)(a1 + 184) << 19) >> 31;
          goto LABEL_220;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_253;
        v43 = objc_alloc_init(GEOPDAutocompleteEntryDirectionIntent);
        if (!GEOPDAutocompleteEntryDirectionIntentReadAllFrom((uint64_t)v43, (void *)v3, v11 & 1))
          goto LABEL_252;
        PBReaderRecallMark();
        v44 = 72;
        goto LABEL_155;
      case 12:
        if (!v38)
          goto LABEL_165;
        if ((*(_BYTE *)(a1 + 186) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_253;
          v84 = (int)(*(_DWORD *)(a1 + 184) << 11) >> 31;
          goto LABEL_220;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_253;
        v43 = objc_alloc_init(GEOPDRetainedSearchMetadata);
        if (!GEOPDRetainedSearchMetadataReadAllFrom((uint64_t)v43, (void *)v3, v11 & 1))
          goto LABEL_252;
        PBReaderRecallMark();
        v44 = 136;
        goto LABEL_155;
      case 13:
        if (!v38)
          goto LABEL_165;
        if ((*(_BYTE *)(a1 + 186) & 1) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_253;
          v84 = (int)(*(_DWORD *)(a1 + 184) << 15) >> 31;
          goto LABEL_220;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_253;
        v43 = objc_alloc_init(GEOPDParsecRankingFeatures);
        if (!GEOPDParsecRankingFeaturesReadAllFrom((uint64_t)v43, (void *)v3))
          goto LABEL_252;
        PBReaderRecallMark();
        v44 = 104;
        goto LABEL_155;
      case 14:
        if ((v9 & 1) == 0)
          goto LABEL_165;
        v55 = 0;
        v56 = 0;
        v50 = 0;
        *(_DWORD *)(a1 + 184) |= 4u;
        while (2)
        {
          v57 = *v24;
          v58 = *(_QWORD *)(v3 + v57);
          v59 = v58 + 1;
          if (v58 == -1 || v59 > *(_QWORD *)(v3 + *v7))
          {
            *(_BYTE *)(v3 + *v25) = 1;
          }
          else
          {
            v60 = *(_BYTE *)(*(_QWORD *)(v3 + *v26) + v58);
            *(_QWORD *)(v3 + v57) = v59;
            v50 |= (unint64_t)(v60 & 0x7F) << v55;
            if (v60 < 0)
            {
              v55 += 7;
              v34 = v56++ >= 9;
              if (v34)
              {
                LODWORD(v50) = 0;
                goto LABEL_174;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v25))
          LODWORD(v50) = 0;
LABEL_174:
        v83 = 172;
        goto LABEL_187;
      case 15:
        if ((v9 & 1) == 0)
          goto LABEL_165;
        v61 = 0;
        v62 = 0;
        v50 = 0;
        *(_DWORD *)(a1 + 184) |= 2u;
        while (2)
        {
          v63 = *v24;
          v64 = *(_QWORD *)(v3 + v63);
          v65 = v64 + 1;
          if (v64 == -1 || v65 > *(_QWORD *)(v3 + *v7))
          {
            *(_BYTE *)(v3 + *v25) = 1;
          }
          else
          {
            v66 = *(_BYTE *)(*(_QWORD *)(v3 + *v26) + v64);
            *(_QWORD *)(v3 + v63) = v65;
            v50 |= (unint64_t)(v66 & 0x7F) << v61;
            if (v66 < 0)
            {
              v61 += 7;
              v34 = v62++ >= 9;
              if (v34)
              {
                LODWORD(v50) = 0;
                goto LABEL_178;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v25))
          LODWORD(v50) = 0;
LABEL_178:
        v83 = 168;
        goto LABEL_187;
      case 16:
        if (!v38)
          goto LABEL_165;
        if ((*(_BYTE *)(a1 + 186) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_253;
          v84 = (int)(*(_DWORD *)(a1 + 184) << 10) >> 31;
          goto LABEL_220;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_253;
        v43 = objc_alloc_init(GEOPDServerResultScoreMetadata);
        if (!GEOPDServerResultScoreMetadataReadAllFrom((uint64_t)v43, (void *)v3))
          goto LABEL_252;
        PBReaderRecallMark();
        v44 = 144;
        goto LABEL_155;
      case 17:
        if ((v9 & 1) == 0)
          goto LABEL_165;
        v67 = 0;
        v68 = 0;
        v69 = 0;
        *(_DWORD *)(a1 + 184) |= 0x10u;
        while (2)
        {
          v70 = *v24;
          v71 = *(_QWORD *)(v3 + v70);
          v72 = v71 + 1;
          if (v71 == -1 || v72 > *(_QWORD *)(v3 + *v7))
          {
            *(_BYTE *)(v3 + *v25) = 1;
          }
          else
          {
            v73 = *(_BYTE *)(*(_QWORD *)(v3 + *v26) + v71);
            *(_QWORD *)(v3 + v70) = v72;
            v69 |= (unint64_t)(v73 & 0x7F) << v67;
            if (v73 < 0)
            {
              v67 += 7;
              v34 = v68++ >= 9;
              if (v34)
              {
                v69 = 0;
                goto LABEL_182;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v25))
          v69 = 0;
LABEL_182:
        *(_BYTE *)(a1 + 180) = v69 != 0;
        goto LABEL_222;
      case 18:
        if (!v38)
          goto LABEL_165;
        if ((*(_BYTE *)(a1 + 186) & 4) == 0)
        {
          PBReaderReadString();
          v74 = objc_claimAutoreleasedReturnValue();
          v75 = *(void **)(a1 + 120);
          *(_QWORD *)(a1 + 120) = v74;
          goto LABEL_156;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_253;
        v84 = (int)(*(_DWORD *)(a1 + 184) << 13) >> 31;
        goto LABEL_220;
      case 19:
        if (!v38)
          goto LABEL_165;
        if ((*(_BYTE *)(a1 + 185) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_253;
          v84 = (int)(*(_DWORD *)(a1 + 184) << 20) >> 31;
          goto LABEL_220;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_253;
        v43 = objc_alloc_init(GEOPDAutocompleteEntryCollection);
        if (!GEOPDAutocompleteEntryCollectionReadAllFrom((uint64_t)v43, (void *)v3))
          goto LABEL_252;
        PBReaderRecallMark();
        v44 = 64;
        goto LABEL_155;
      case 20:
        if (!v38)
          goto LABEL_165;
        if ((*(_BYTE *)(a1 + 186) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_253;
          v84 = (int)(*(_DWORD *)(a1 + 184) << 14) >> 31;
LABEL_220:
          v8 += v84;
LABEL_221:
          v25 = (int *)MEMORY[0x1E0D82BC8];
          v7 = (int *)MEMORY[0x1E0D82BD8];
          v26 = (int *)MEMORY[0x1E0D82BB8];
LABEL_222:
          if (!(v91 & 1 | (v8 != 0)))
            goto LABEL_223;
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_253;
        v43 = objc_alloc_init(GEOPDAutocompleteEntryPublisher);
        if (GEOPDAutocompleteEntryPublisherReadAllFrom((uint64_t)v43, (void *)v3))
        {
          PBReaderRecallMark();
          v44 = 112;
LABEL_155:
          v75 = *(void **)(a1 + v44);
          *(_QWORD *)(a1 + v44) = v43;
LABEL_156:

          --v8;
          goto LABEL_221;
        }
LABEL_252:

LABEL_253:
        v89 = 0;
        v25 = (int *)MEMORY[0x1E0D82BC8];
LABEL_224:
        if ((v90 & 1) != 0)
LABEL_225:
          *(_DWORD *)(a1 + 184) |= 0x20u;
        if (v93 || (v89 & 1) == 0)
        {
          *(_DWORD *)(a1 + 184) |= 0x4000u;
          *(_DWORD *)(a1 + 184) |= 0x2000u;
          *(_DWORD *)(a1 + 184) |= 0x80000u;
          *(_DWORD *)(a1 + 184) |= 0x100u;
          *(_DWORD *)(a1 + 184) |= 0x40u;
          *(_DWORD *)(a1 + 184) |= 0x200u;
          *(_DWORD *)(a1 + 184) |= 0x80u;
          *(_DWORD *)(a1 + 184) |= 0x8000u;
          *(_DWORD *)(a1 + 184) |= 0x400u;
          *(_DWORD *)(a1 + 184) |= 0x1000u;
          *(_DWORD *)(a1 + 184) |= 0x100000u;
          *(_DWORD *)(a1 + 184) |= 0x10000u;
          *(_DWORD *)(a1 + 184) |= 0x200000u;
          *(_DWORD *)(a1 + 184) |= 0x40000u;
          *(_DWORD *)(a1 + 184) |= 0x800u;
          *(_DWORD *)(a1 + 184) |= 0x20000u;
        }
        else if (v23)
        {
          while (1)
          {
            v85 = *v23++;
            v86 = 0x4000;
            switch(v85)
            {
              case 0:
                goto LABEL_246;
              case 1:
                goto LABEL_245;
              case 2:
                v86 = 0x2000;
                goto LABEL_245;
              case 4:
                v86 = 0x80000;
                goto LABEL_245;
              case 5:
                v86 = 256;
                goto LABEL_245;
              case 6:
                v86 = 64;
                goto LABEL_245;
              case 7:
                v86 = 512;
                goto LABEL_245;
              case 8:
                v86 = 128;
                goto LABEL_245;
              case 9:
                v86 = 0x8000;
                goto LABEL_245;
              case 10:
                v86 = 1024;
                goto LABEL_245;
              case 11:
                v86 = 4096;
                goto LABEL_245;
              case 12:
                v86 = 0x100000;
                goto LABEL_245;
              case 13:
                v86 = 0x10000;
                goto LABEL_245;
              case 16:
                v86 = 0x200000;
                goto LABEL_245;
              case 18:
                v86 = 0x40000;
                goto LABEL_245;
              case 19:
                v86 = 2048;
                goto LABEL_245;
              case 20:
                v86 = 0x20000;
LABEL_245:
                *(_DWORD *)(a1 + 184) |= v86;
                break;
              default:
                continue;
            }
          }
        }
LABEL_246:
        if (v89)
          v3 = *(_BYTE *)(v3 + *v25) == 0;
        else
          v3 = 0;
        if (v93)
        {
          v87 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      case 21:
        if ((v9 & 1) == 0)
          goto LABEL_165;
        v76 = 0;
        v77 = 0;
        v50 = 0;
        *(_DWORD *)(a1 + 184) |= 1u;
        while (2)
        {
          v78 = *v24;
          v79 = *(_QWORD *)(v3 + v78);
          v80 = v79 + 1;
          if (v79 == -1 || v80 > *(_QWORD *)(v3 + *v7))
          {
            *(_BYTE *)(v3 + *v25) = 1;
          }
          else
          {
            v81 = *(_BYTE *)(*(_QWORD *)(v3 + *v26) + v79);
            *(_QWORD *)(v3 + v78) = v80;
            v50 |= (unint64_t)(v81 & 0x7F) << v76;
            if (v81 < 0)
            {
              v76 += 7;
              v34 = v77++ >= 9;
              if (v34)
              {
                LODWORD(v50) = 0;
                goto LABEL_186;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v25))
          LODWORD(v50) = 0;
LABEL_186:
        v83 = 164;
LABEL_187:
        *(_DWORD *)(a1 + v83) = v50;
        goto LABEL_222;
      default:
        if ((v90 & 1) == 0 || (*(_BYTE *)(a1 + 184) & 0x20) != 0)
        {
LABEL_165:
          v82 = PBReaderSkipValueWithTag();
          v26 = (int *)MEMORY[0x1E0D82BB8];
          v7 = (int *)MEMORY[0x1E0D82BD8];
          v25 = (int *)MEMORY[0x1E0D82BC8];
          if ((v82 & 1) == 0)
          {
            v89 = 0;
            goto LABEL_224;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v45 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v46 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v45;

          }
          v47 = PBUnknownFieldAdd();
          v25 = (int *)MEMORY[0x1E0D82BC8];
          v7 = (int *)MEMORY[0x1E0D82BD8];
          v26 = (int *)MEMORY[0x1E0D82BB8];
          if (!v47)
          {
            v89 = 0;
            goto LABEL_225;
          }
        }
        goto LABEL_222;
    }
  }
}

void sub_188C30A80(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188C30E30(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188C30F74(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188C310B8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188C311F8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188C3133C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188C31484(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188C315CC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188C31714(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188C3185C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188C319A0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188C31D40(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188C31F00(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188C32044(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188C3218C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188C33944(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDAutocompleteEntryCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 88), "readAll:", 1);
  objc_msgSend(*(id *)(a1 + 80), "readAll:", 1);
  objc_msgSend(*(id *)(a1 + 128), "readAll:", 1);
  objc_msgSend(*(id *)(a1 + 40), "readAll:", 1);
  objc_msgSend(*(id *)(a1 + 24), "readAll:", 1);
  objc_msgSend(*(id *)(a1 + 48), "readAll:", 1);
  objc_msgSend(*(id *)(a1 + 32), "readAll:", 1);
  objc_msgSend(*(id *)(a1 + 96), "readAll:", 1);
  objc_msgSend(*(id *)(a1 + 56), "readAll:", 1);
  objc_msgSend(*(id *)(a1 + 72), "readAll:", 1);
  -[GEOPDRetainedSearchMetadata readAll:](*(_QWORD *)(a1 + 136), 1);
  objc_msgSend(*(id *)(a1 + 104), "readAll:", 1);
  objc_msgSend(*(id *)(a1 + 64), "readAll:", 1);
  return objc_msgSend(*(id *)(a1 + 112), "readAll:", 1);
}

unint64_t GEOPDAutocompleteEntryReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 156))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDAutocompleteEntryReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 160));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 152) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 156) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDAutocompleteEntryReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDAutocompleteEntryReadAllFrom_initialTag;
  Specified = GEOPDAutocompleteEntryReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDAutocompleteEntryCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 160));
  return Specified;
}

void sub_188C33BD8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAutocompleteEntryReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOPDAutocompleteEntryReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188C33C38(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDAutocompleteEntryIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  BOOL v13;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  int v32;
  char v33;
  unsigned int v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  uint64_t v40;
  int v41;
  int v42;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unsigned int v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  int v51;
  unsigned int v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  int v56;
  int v57;
  _BOOL8 v58;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] >= *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
LABEL_146:
    v58 = a1[*v4] == 0;
    PBReaderRecallMark();
    return v58;
  }
  v5 = (int *)MEMORY[0x1E0D82BB8];
  while (2)
  {
    if (a1[*v4])
      goto LABEL_146;
    v6 = 0;
    v7 = 0;
    v8 = 0;
    while (1)
    {
      v9 = *v2;
      v10 = *(_QWORD *)&a1[v9];
      v11 = v10 + 1;
      if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
        break;
      v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
      *(_QWORD *)&a1[v9] = v11;
      v8 |= (unint64_t)(v12 & 0x7F) << v6;
      if ((v12 & 0x80) == 0)
        goto LABEL_12;
      v6 += 7;
      v13 = v7++ >= 9;
      if (v13)
      {
        v8 = 0;
        v14 = a1[*v4];
        goto LABEL_14;
      }
    }
    a1[*v4] = 1;
LABEL_12:
    v14 = a1[*v4];
    if (a1[*v4])
      v8 = 0;
LABEL_14:
    v15 = v8 & 7;
    if (v14 || v15 == 4)
      goto LABEL_146;
    switch((v8 >> 3))
    {
      case 1u:
      case 2u:
        if (v15 == 2 && PBReaderPlaceMark() && GEOPDAutocompleteEntryHighlightLineIsValid(a1))
          goto LABEL_132;
        goto LABEL_148;
      case 3u:
        if ((v8 & 7) != 0)
          goto LABEL_148;
        v17 = 0;
        while (1)
        {
          v18 = *v2;
          v19 = *(_QWORD *)&a1[v18];
          v20 = v19 + 1;
          if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
            goto LABEL_143;
          v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
          *(_QWORD *)&a1[v18] = v20;
          if (v21 < 0)
          {
            v22 = v17++ > 8;
            if (!v22)
              continue;
          }
          goto LABEL_133;
        }
      case 4u:
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDAutocompleteEntryQueryIsValid(a1))
          goto LABEL_148;
        goto LABEL_132;
      case 5u:
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDAutocompleteEntryBusinessIsValid(a1))
          goto LABEL_148;
        goto LABEL_132;
      case 6u:
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDAutocompleteEntryAddressIsValid(a1))
          goto LABEL_148;
        goto LABEL_132;
      case 7u:
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDAutocompleteEntryCategoryIsValid(a1))
          goto LABEL_148;
        goto LABEL_132;
      case 8u:
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDAutocompleteEntryBrandProfileIsValid(a1))
          goto LABEL_148;
        goto LABEL_132;
      case 9u:
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDAutocompleteEntryOfflineAreaIsValid(a1))
          goto LABEL_148;
        goto LABEL_132;
      case 0xAu:
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDAutocompleteEntryClientResolvedIsValid(a1))
          goto LABEL_148;
        goto LABEL_132;
      case 0xBu:
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDAutocompleteEntryDirectionIntentIsValid(a1))
          goto LABEL_148;
        goto LABEL_132;
      case 0xCu:
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDRetainedSearchMetadataIsValid(a1))
          goto LABEL_148;
        goto LABEL_132;
      case 0xDu:
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDParsecRankingFeaturesIsValid(a1))
          goto LABEL_148;
        goto LABEL_132;
      case 0xEu:
        if ((v8 & 7) != 0)
          goto LABEL_148;
        v23 = 0;
        while (1)
        {
          v24 = *v2;
          v25 = *(_QWORD *)&a1[v24];
          v26 = v25 + 1;
          if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
            goto LABEL_143;
          v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
          *(_QWORD *)&a1[v24] = v26;
          if (v27 < 0)
          {
            v22 = v23++ > 8;
            if (!v22)
              continue;
          }
          goto LABEL_133;
        }
      case 0xFu:
        if ((v8 & 7) != 0)
          goto LABEL_148;
        v28 = 0;
        while (1)
        {
          v29 = *v2;
          v30 = *(_QWORD *)&a1[v29];
          v31 = v30 + 1;
          if (v30 == -1 || v31 > *(_QWORD *)&a1[*v3])
            goto LABEL_143;
          v32 = *(char *)(*(_QWORD *)&a1[*v5] + v30);
          *(_QWORD *)&a1[v29] = v31;
          if (v32 < 0)
          {
            v22 = v28++ > 8;
            if (!v22)
              continue;
          }
          goto LABEL_133;
        }
      case 0x10u:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_148;
        objc_msgSend(a1, "position", 0, 0);
        objc_msgSend(a1, "length");
LABEL_90:
        if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3] || a1[*v4])
          goto LABEL_144;
        v33 = 0;
        v34 = 0;
        v35 = 0;
        while (1)
        {
          v36 = *v2;
          v37 = *(_QWORD *)&a1[v36];
          v38 = v37 + 1;
          if (v37 == -1 || v38 > *(_QWORD *)&a1[*v3])
            break;
          v39 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v37);
          *(_QWORD *)&a1[v36] = v38;
          v35 |= (unint64_t)(v39 & 0x7F) << v33;
          if ((v39 & 0x80) == 0)
            goto LABEL_100;
          v33 += 7;
          v13 = v34++ >= 9;
          if (v13)
          {
            v35 = 0;
            v40 = *v4;
            v41 = a1[v40];
            goto LABEL_102;
          }
        }
        a1[*v4] = 1;
LABEL_100:
        v40 = *v4;
        v41 = a1[v40];
        if (a1[v40])
          v35 = 0;
LABEL_102:
        v42 = v35 & 7;
        if (v41 || v42 == 4)
        {
LABEL_144:
          v57 = a1[*v4];
          PBReaderRecallMark();
          if (v57)
            goto LABEL_148;
LABEL_132:
          PBReaderRecallMark();
LABEL_133:
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_146;
          continue;
        }
        if ((v35 >> 3) != 1)
        {
          if (!PBReaderSkipValueWithTag())
            goto LABEL_147;
          goto LABEL_90;
        }
        if (v42 == 5)
        {
          v44 = *v2;
          v45 = *(_QWORD *)&a1[v44];
          if (v45 <= 0xFFFFFFFFFFFFFFFBLL && (v46 = v45 + 4, v46 <= *(_QWORD *)&a1[*v3]))
            *(_QWORD *)&a1[v44] = v46;
          else
            a1[v40] = 1;
          goto LABEL_90;
        }
LABEL_147:
        PBReaderRecallMark();
LABEL_148:
        PBReaderRecallMark();
        return 0;
      case 0x11u:
        if ((v8 & 7) != 0)
          goto LABEL_148;
        v47 = 0;
        while (1)
        {
          v48 = *v2;
          v49 = *(_QWORD *)&a1[v48];
          v50 = v49 + 1;
          if (v49 == -1 || v50 > *(_QWORD *)&a1[*v3])
            goto LABEL_143;
          v51 = *(char *)(*(_QWORD *)&a1[*v5] + v49);
          *(_QWORD *)&a1[v48] = v50;
          if (v51 < 0)
          {
            v22 = v47++ > 8;
            if (!v22)
              continue;
          }
          goto LABEL_133;
        }
      case 0x12u:
        if (v15 == 2)
          goto LABEL_123;
        goto LABEL_148;
      case 0x13u:
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDAutocompleteEntryCollectionIsValid(a1))
          goto LABEL_148;
        goto LABEL_132;
      case 0x14u:
        if (v15 == 2 && PBReaderPlaceMark() && GEOPDAutocompleteEntryPublisherIsValid(a1))
          goto LABEL_132;
        goto LABEL_148;
      case 0x15u:
        if ((v8 & 7) != 0)
          goto LABEL_148;
        v52 = 0;
        while (1)
        {
          v53 = *v2;
          v54 = *(_QWORD *)&a1[v53];
          v55 = v54 + 1;
          if (v54 == -1 || v55 > *(_QWORD *)&a1[*v3])
            break;
          v56 = *(char *)(*(_QWORD *)&a1[*v5] + v54);
          *(_QWORD *)&a1[v53] = v55;
          if (v56 < 0)
          {
            v22 = v52++ > 8;
            if (!v22)
              continue;
          }
          goto LABEL_133;
        }
LABEL_143:
        a1[*v4] = 1;
        goto LABEL_133;
      default:
LABEL_123:
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_148;
        goto LABEL_133;
    }
  }
}

BOOL GEOPDAutocompleteEntryHighlightLineIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  _BOOL8 v17;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      if ((v8 >> 3) == 2)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDAutocompleteEntryHighlightSpanIsValid(a1))
          goto LABEL_29;
        PBReaderRecallMark();
      }
      else if ((v8 >> 3) == 1 && v15 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_29:
        PBReaderRecallMark();
        return 0;
      }
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

BOOL GEOPDAutocompleteEntryQueryIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  int v32;
  _BOOL8 v33;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2)
            goto LABEL_58;
          goto LABEL_20;
        case 2u:
          if ((v8 & 7) != 0)
            goto LABEL_58;
          v17 = 0;
          while (1)
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
              goto LABEL_54;
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if (v21 < 0)
            {
              v22 = v17++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_55;
          }
        case 3u:
          if ((v8 & 7) != 0)
            goto LABEL_58;
          v23 = 0;
          while (1)
          {
            v24 = *v2;
            v25 = *(_QWORD *)&a1[v24];
            v26 = v25 + 1;
            if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
              goto LABEL_54;
            v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
            *(_QWORD *)&a1[v24] = v26;
            if (v27 < 0)
            {
              v22 = v23++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_55;
          }
        case 4u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDResultRefinementIsValid(a1))
            goto LABEL_58;
          goto LABEL_45;
        case 5u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOStyleAttributesIsValid(a1))
            goto LABEL_58;
LABEL_45:
          PBReaderRecallMark();
          continue;
        case 6u:
          if ((v8 & 7) != 0)
            goto LABEL_58;
          v28 = 0;
          break;
        default:
LABEL_20:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_58:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v29 = *v2;
        v30 = *(_QWORD *)&a1[v29];
        v31 = v30 + 1;
        if (v30 == -1 || v31 > *(_QWORD *)&a1[*v3])
          break;
        v32 = *(char *)(*(_QWORD *)&a1[*v5] + v30);
        *(_QWORD *)&a1[v29] = v31;
        if (v32 < 0)
        {
          v22 = v28++ > 8;
          if (!v22)
            continue;
        }
        goto LABEL_55;
      }
LABEL_54:
      a1[*v4] = 1;
LABEL_55:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v33 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v33;
}

BOOL GEOPDAutocompleteEntryBusinessIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v14;
  int v15;
  int v16;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int v22;
  BOOL v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  int v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  _BOOL8 v32;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = *v4;
          v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = *v4;
      v15 = a1[v14];
      if (a1[v14])
        v8 = 0;
LABEL_14:
      v16 = v8 & 7;
      if (v15 || v16 == 4)
        break;
      switch((v8 >> 3))
      {
        case 2u:
          if ((v8 & 7) != 0)
            goto LABEL_55;
          v18 = 0;
          while (1)
          {
            v19 = *v2;
            v20 = *(_QWORD *)&a1[v19];
            v21 = v20 + 1;
            if (v20 == -1 || v21 > *(_QWORD *)&a1[*v3])
              goto LABEL_37;
            v22 = *(char *)(*(_QWORD *)&a1[*v5] + v20);
            *(_QWORD *)&a1[v19] = v21;
            if (v22 < 0)
            {
              v23 = v18++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_50;
          }
        case 3u:
          if ((v8 & 7) != 0)
            goto LABEL_55;
          v24 = 0;
          break;
        case 4u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOPDPlaceIsValid(a1))
            goto LABEL_55;
          goto LABEL_49;
        case 5u:
          if (v16 != 1)
            goto LABEL_55;
          v29 = *v2;
          v30 = *(_QWORD *)&a1[v29];
          if (v30 > 0xFFFFFFFFFFFFFFF7)
            goto LABEL_45;
          v31 = v30 + 8;
          if (v31 > *(_QWORD *)&a1[*v3])
            goto LABEL_45;
          *(_QWORD *)&a1[v29] = v31;
          continue;
        case 6u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOPDMapsIdentifierIsValid(a1))
            goto LABEL_55;
LABEL_49:
          PBReaderRecallMark();
          continue;
        default:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_55:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v25 = *v2;
        v26 = *(_QWORD *)&a1[v25];
        v27 = v26 + 1;
        if (v26 == -1 || v27 > *(_QWORD *)&a1[*v3])
          break;
        v28 = *(char *)(*(_QWORD *)&a1[*v5] + v26);
        *(_QWORD *)&a1[v25] = v27;
        if (v28 < 0)
        {
          v23 = v24++ > 8;
          if (!v23)
            continue;
        }
        goto LABEL_50;
      }
LABEL_37:
      v14 = *v4;
LABEL_45:
      a1[v14] = 1;
LABEL_50:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v32 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v32;
}

BOOL GEOPDAutocompleteEntryAddressIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v14;
  int v15;
  int v16;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  int v25;
  BOOL v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  int v31;
  unsigned int v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  int v36;
  _BOOL8 v37;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = *v4;
          v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = *v4;
      v15 = a1[v14];
      if (a1[v14])
        v8 = 0;
LABEL_14:
      v16 = v8 & 7;
      if (v15 || v16 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v16 == 2 && PBReaderPlaceMark() && GEOLatLngIsValid(a1))
            goto LABEL_48;
          goto LABEL_62;
        case 2u:
          if ((v8 & 7) != 0)
            goto LABEL_62;
          v21 = 0;
          while (1)
          {
            v22 = *v2;
            v23 = *(_QWORD *)&a1[v22];
            v24 = v23 + 1;
            if (v23 == -1 || v24 > *(_QWORD *)&a1[*v3])
              goto LABEL_57;
            v25 = *(char *)(*(_QWORD *)&a1[*v5] + v23);
            *(_QWORD *)&a1[v22] = v24;
            if (v25 < 0)
            {
              v26 = v21++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_59;
          }
        case 3u:
        case 5u:
          if (v16 != 1)
            goto LABEL_62;
          v18 = *v2;
          v19 = *(_QWORD *)&a1[v18];
          if (v19 > 0xFFFFFFFFFFFFFFF7)
            goto LABEL_58;
          v20 = v19 + 8;
          if (v20 > *(_QWORD *)&a1[*v3])
            goto LABEL_58;
          *(_QWORD *)&a1[v18] = v20;
          continue;
        case 4u:
          if ((v8 & 7) != 0)
            goto LABEL_62;
          v27 = 0;
          while (1)
          {
            v28 = *v2;
            v29 = *(_QWORD *)&a1[v28];
            v30 = v29 + 1;
            if (v29 == -1 || v30 > *(_QWORD *)&a1[*v3])
              goto LABEL_57;
            v31 = *(char *)(*(_QWORD *)&a1[*v5] + v29);
            *(_QWORD *)&a1[v28] = v30;
            if (v31 < 0)
            {
              v26 = v27++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_59;
          }
        case 6u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOPDMapsIdentifierIsValid(a1))
            goto LABEL_62;
LABEL_48:
          PBReaderRecallMark();
          continue;
        case 7u:
          if ((v8 & 7) != 0)
            goto LABEL_62;
          v32 = 0;
          break;
        default:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_62:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v33 = *v2;
        v34 = *(_QWORD *)&a1[v33];
        v35 = v34 + 1;
        if (v34 == -1 || v35 > *(_QWORD *)&a1[*v3])
          break;
        v36 = *(char *)(*(_QWORD *)&a1[*v5] + v34);
        *(_QWORD *)&a1[v33] = v35;
        if (v36 < 0)
        {
          v26 = v32++ > 8;
          if (!v26)
            continue;
        }
        goto LABEL_59;
      }
LABEL_57:
      v14 = *v4;
LABEL_58:
      a1[v14] = 1;
LABEL_59:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v37 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v37;
}

BOOL GEOPDAutocompleteEntryCategoryIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  _BOOL8 v17;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (!a1[*v4])
    {
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 == 2 && PBReaderPlaceMark() && GEOLocalizedStringIsValid(a1))
            goto LABEL_33;
          goto LABEL_36;
        case 2u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOStyleAttributesIsValid(a1))
            goto LABEL_36;
          goto LABEL_33;
        case 3u:
          if (v15 == 2)
            goto LABEL_28;
          goto LABEL_36;
        case 4u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDVenueIdentifierIsValid(a1))
            goto LABEL_36;
LABEL_33:
          PBReaderRecallMark();
          goto LABEL_34;
        default:
LABEL_28:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_36:
            PBReaderRecallMark();
            return 0;
          }
LABEL_34:
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_35;
          break;
      }
    }
  }
LABEL_35:
  v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

BOOL GEOPDAutocompleteEntryBrandProfileIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  _BOOL8 v17;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_26:
          v17 = 0;
          goto LABEL_25;
        }
      }
      else if (!PBReaderSkipValueWithTag())
      {
        goto LABEL_26;
      }
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v17 = a1[*v4] == 0;
LABEL_25:
  PBReaderRecallMark();
  return v17;
}

BOOL GEOPDAutocompleteEntryOfflineAreaIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unint64_t v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int v22;
  BOOL v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  int v28;
  _BOOL8 v29;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      v17 = v8 >> 3;
      if ((v8 >> 3) == 3)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDMapsIdentifierIsValid(a1))
        {
LABEL_46:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else
      {
        if ((_DWORD)v17 == 2)
        {
          if ((v8 & 7) != 0)
            goto LABEL_46;
          v24 = 0;
          while (1)
          {
            v25 = *v2;
            v26 = *(_QWORD *)&a1[v25];
            v27 = v26 + 1;
            if (v26 == -1 || v27 > *(_QWORD *)&a1[*v3])
              goto LABEL_41;
            v28 = *(char *)(*(_QWORD *)&a1[*v5] + v26);
            *(_QWORD *)&a1[v25] = v27;
            if (v28 < 0)
            {
              v23 = v24++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_43;
          }
        }
        if ((_DWORD)v17 == 1)
        {
          if ((v8 & 7) != 0)
            goto LABEL_46;
          v18 = 0;
          while (1)
          {
            v19 = *v2;
            v20 = *(_QWORD *)&a1[v19];
            v21 = v20 + 1;
            if (v20 == -1 || v21 > *(_QWORD *)&a1[*v3])
              break;
            v22 = *(char *)(*(_QWORD *)&a1[*v5] + v20);
            *(_QWORD *)&a1[v19] = v21;
            if (v22 < 0)
            {
              v23 = v18++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_43;
          }
LABEL_41:
          a1[*v4] = 1;
          continue;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_46;
      }
LABEL_43:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v29 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v29;
}

BOOL GEOPDAutocompleteEntryClientResolvedIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int v20;
  _BOOL8 v22;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      if (v14 || (v8 & 7) == 4)
        break;
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0)
          goto LABEL_33;
        v16 = 0;
        while (1)
        {
          v17 = *v2;
          v18 = *(_QWORD *)&a1[v17];
          v19 = v18 + 1;
          if (v18 == -1 || v19 > *(_QWORD *)&a1[*v3])
            break;
          v20 = *(char *)(*(_QWORD *)&a1[*v5] + v18);
          *(_QWORD *)&a1[v17] = v19;
          if (v20 < 0 && v16++ <= 8)
            continue;
          goto LABEL_30;
        }
        a1[*v4] = 1;
      }
      else if (!PBReaderSkipValueWithTag())
      {
LABEL_33:
        v22 = 0;
        goto LABEL_32;
      }
LABEL_30:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v22 = a1[*v4] == 0;
LABEL_32:
  PBReaderRecallMark();
  return v22;
}

BOOL GEOPDAutocompleteEntryDirectionIntentIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  _BOOL8 v17;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDDirectionIntentIsValid(a1))
        {
LABEL_27:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_27;
      }
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

BOOL GEOPDParsecRankingFeaturesIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v14;
  int v15;
  int v16;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  int v25;
  BOOL v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  int v31;
  _BOOL8 v32;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = *v4;
          v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = *v4;
      v15 = a1[v14];
      if (a1[v14])
        v8 = 0;
LABEL_14:
      v16 = v8 & 7;
      if (v15 || v16 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
        case 2u:
        case 3u:
          if (v16 != 1)
            goto LABEL_46;
          v18 = *v2;
          v19 = *(_QWORD *)&a1[v18];
          if (v19 > 0xFFFFFFFFFFFFFFF7)
            goto LABEL_42;
          v20 = v19 + 8;
          if (v20 > *(_QWORD *)&a1[*v3])
            goto LABEL_42;
          *(_QWORD *)&a1[v18] = v20;
          continue;
        case 4u:
          if ((v8 & 7) != 0)
            goto LABEL_46;
          v21 = 0;
          while (1)
          {
            v22 = *v2;
            v23 = *(_QWORD *)&a1[v22];
            v24 = v23 + 1;
            if (v23 == -1 || v24 > *(_QWORD *)&a1[*v3])
              goto LABEL_41;
            v25 = *(char *)(*(_QWORD *)&a1[*v5] + v23);
            *(_QWORD *)&a1[v22] = v24;
            if (v25 < 0)
            {
              v26 = v21++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_43;
          }
        case 5u:
          if ((v8 & 7) != 0)
            goto LABEL_46;
          v27 = 0;
          break;
        default:
          if (PBReaderSkipValueWithTag())
            continue;
LABEL_46:
          v32 = 0;
          goto LABEL_45;
      }
      while (1)
      {
        v28 = *v2;
        v29 = *(_QWORD *)&a1[v28];
        v30 = v29 + 1;
        if (v29 == -1 || v30 > *(_QWORD *)&a1[*v3])
          break;
        v31 = *(char *)(*(_QWORD *)&a1[*v5] + v29);
        *(_QWORD *)&a1[v28] = v30;
        if (v31 < 0)
        {
          v26 = v27++ > 8;
          if (!v26)
            continue;
        }
        goto LABEL_43;
      }
LABEL_41:
      v14 = *v4;
LABEL_42:
      a1[v14] = 1;
LABEL_43:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v32 = a1[*v4] == 0;
LABEL_45:
  PBReaderRecallMark();
  return v32;
}

BOOL GEOPDAutocompleteEntryCollectionIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  _BOOL8 v17;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDMapsIdentifierIsValid(a1))
        {
LABEL_27:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_27;
      }
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

BOOL GEOPDAutocompleteEntryPublisherIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  _BOOL8 v17;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDMapsIdentifierIsValid(a1))
        {
LABEL_27:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_27;
      }
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

void sub_188C362B8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDAutocompleteEntryIsDirty(uint64_t a1)
{
  unsigned int v2;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 160));
  v2 = *(_DWORD *)(a1 + 184);
  if ((v2 & 0x400000) != 0)
    return 1;
  if ((v2 & 0x4000) != 0)
  {
    if (GEOPDAutocompleteEntryHighlightLineIsDirty(*(_QWORD *)(a1 + 88)))
      return 1;
    v2 = *(_DWORD *)(a1 + 184);
  }
  if ((v2 & 0x2000) != 0)
  {
    if (GEOPDAutocompleteEntryHighlightLineIsDirty(*(_QWORD *)(a1 + 80)))
      return 1;
    v2 = *(_DWORD *)(a1 + 184);
  }
  if ((v2 & 0x80000) != 0)
  {
    if (GEOPDAutocompleteEntryQueryIsDirty(*(_QWORD *)(a1 + 128)))
      return 1;
    v2 = *(_DWORD *)(a1 + 184);
  }
  if ((v2 & 0x100) != 0)
  {
    if ((GEOPDAutocompleteEntryBusinessIsDirty(*(os_unfair_lock_s **)(a1 + 40)) & 1) != 0)
      return 1;
    v2 = *(_DWORD *)(a1 + 184);
  }
  if ((v2 & 0x40) != 0)
  {
    if (GEOPDAutocompleteEntryAddressIsDirty(*(_QWORD *)(a1 + 24)))
      return 1;
    v2 = *(_DWORD *)(a1 + 184);
  }
  if ((v2 & 0x200) != 0)
  {
    if ((GEOPDAutocompleteEntryCategoryIsDirty(*(os_unfair_lock_s **)(a1 + 48)) & 1) != 0)
      return 1;
    v2 = *(_DWORD *)(a1 + 184);
  }
  if ((v2 & 0x9480) != 0)
    return 1;
  if ((v2 & 0x100000) == 0)
    goto LABEL_24;
  if (GEOPDRetainedSearchMetadataIsDirty(*(_QWORD *)(a1 + 136)))
    return 1;
  v2 = *(_DWORD *)(a1 + 184);
LABEL_24:
  if ((v2 & 0x250800) != 0)
    return 1;
  return (v2 >> 17) & 1;
}

os_unfair_lock_s *GEOPDAutocompleteEntryIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOPDAutocompleteEntryIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 40);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void GEOPDAutocompleteEntryClearSensitiveFields(void *a1, uint64_t a2, int a3)
{
  void *v5;
  unsigned int v6;
  void *v7;
  void *v8;
  id v9;

  if (a3
    && objc_msgSend(a1, "hasBusiness")
    && (objc_msgSend(a1, "business"),
        v5 = (void *)objc_claimAutoreleasedReturnValue(),
        v6 = GEOPDAutocompleteEntryBusinessHasSensitiveFields(v5, a2),
        v5,
        v6))
  {
    objc_msgSend(a1, "business");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v9 = (id)objc_msgSend(v7, "copy");

    objc_msgSend(v9, "place");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "clearSensitiveFields:", a2);

    objc_msgSend(a1, "setBusiness:", v9);
  }
  else
  {
    objc_msgSend(a1, "business");
    v9 = (id)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "clearSensitiveFields:", a2);
  }

}

void *GEOPDAutocompleteEntryHasSensitiveFields(void *result, uint64_t a2)
{
  void *v3;
  void *v4;

  if (result)
  {
    objc_msgSend(result, "business");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    v4 = GEOPDAutocompleteEntryBusinessHasSensitiveFields(v3, a2);

    return v4;
  }
  return result;
}

void *GEOPDAutocompleteEntryBusinessHasSensitiveFields(void *result, uint64_t a2)
{
  void *v3;
  void *v4;

  if (result)
  {
    objc_msgSend(result, "place");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    v4 = GEOPDPlaceHasSensitiveFields(v3, a2);

    return v4;
  }
  return result;
}

void GEOPDAutocompleteEntryBusinessClearSensitiveFields(void *a1, uint64_t a2, int a3)
{
  void *v5;
  unsigned int v6;
  void *v7;
  void *v8;
  id v9;

  if (a3
    && objc_msgSend(a1, "hasPlace")
    && (objc_msgSend(a1, "place"),
        v5 = (void *)objc_claimAutoreleasedReturnValue(),
        v6 = GEOPDPlaceHasSensitiveFields(v5, a2),
        v5,
        v6))
  {
    objc_msgSend(a1, "place");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v9 = (id)objc_msgSend(v7, "copy");

    objc_msgSend(v9, "requestData");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "clearSensitiveFields:", a2);

    objc_msgSend(a1, "setPlace:", v9);
  }
  else
  {
    objc_msgSend(a1, "place");
    v9 = (id)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "clearSensitiveFields:", a2);
  }

}

void sub_188C36E38(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188C37910(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188C37D64(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAutocompleteEntryAddressReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  int *v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  char v18;
  int *v19;
  int *v20;
  int *v21;
  int *v22;
  int *v23;
  char v24;
  unsigned int v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  BOOL v31;
  int v32;
  unint64_t v34;
  BOOL v35;
  int *v36;
  int v37;
  int v38;
  BOOL v39;
  GEOLatLng *v40;
  uint64_t v41;
  id v42;
  void *v43;
  int v44;
  char v45;
  unsigned int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  char v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  char v55;
  unsigned int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  char v61;
  uint64_t v62;
  unint64_t v63;
  void *v64;
  char v65;
  unsigned int v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  char v71;
  char v72;
  __int16 v73;
  uint64_t v74;
  int v75;
  int v76;
  __int16 v77;
  void *v78;
  int v80;
  char v81;
  char v82;
  char v83;
  char v84;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 68);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 64));
  v7 = v6;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = ((*(unsigned __int16 *)(a1 + 84) >> 6) & 1)
      + ((*(unsigned __int16 *)(a1 + 84) >> 7) & 1)
      + ((*(unsigned __int16 *)(a1 + 84) >> 5) & 1);
  while (2)
  {
    v14 = 1;
    v15 = 1;
    v16 = 1;
    switch(a3[v9])
    {
      case -4:
        ++v13;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v15 = v11;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v17 = v13 != 0;
        v18 = v17 | v12;
        v81 = v17 & ~(_BYTE)v12 | v10;
        v83 = v17 | v12 | v81;
        if ((((v17 | v12) | v8) & 1) != 0)
          v19 = 0;
        else
          v19 = a3;
        v20 = (int *)MEMORY[0x1E0D82BF0];
        v21 = (int *)MEMORY[0x1E0D82BC8];
        v84 = (v19 == 0) | v18;
        v22 = &OBJC_IVAR___GEOPDAutocompleteResultSection__readerMarkLength;
        v23 = (int *)MEMORY[0x1E0D82BB8];
        v82 = v17 | v12;
        break;
      default:
        ++v13;
LABEL_7:
        v14 = v10;
LABEL_8:
        v15 = v11;
        v16 = v12;
LABEL_10:
        ++v9;
        v10 = v14;
        v11 = v15;
        v12 = v16;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v20) >= *(_QWORD *)(v3 + *v7) || *(_BYTE *)(v3 + *v21))
      goto LABEL_114;
    v24 = 0;
    v25 = 0;
    v26 = 0;
    while (1)
    {
      v27 = *v20;
      v28 = *(_QWORD *)(v3 + v27);
      v29 = v28 + 1;
      if (v28 == -1 || v29 > *(_QWORD *)(v3 + *v7))
        break;
      v30 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v28);
      *(_QWORD *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0)
        goto LABEL_25;
      v24 += 7;
      v31 = v25++ >= 9;
      if (v31)
      {
        v26 = 0;
        v32 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v21) = 1;
LABEL_25:
    v32 = *(unsigned __int8 *)(v3 + *v21);
    if (*(_BYTE *)(v3 + *v21))
      v26 = 0;
LABEL_27:
    if (v32 || (v26 & 7) == 4)
    {
LABEL_114:
      v80 = 1;
      goto LABEL_115;
    }
    v34 = v26 >> 3;
    v35 = v18;
    if ((v84 & 1) == 0)
    {
      v36 = v19;
      do
      {
        v38 = *v36++;
        v37 = v38;
        v35 = v38 != 0;
        if (v38)
          v39 = v37 == (_DWORD)v34;
        else
          v39 = 1;
      }
      while (!v39);
    }
    switch((int)v34)
    {
      case 1:
        if (!v35)
          goto LABEL_88;
        if ((*(_WORD *)(a1 + v22[792]) & 0x40) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_135;
          v40 = objc_alloc_init(GEOLatLng);
          if (GEOLatLngReadAllFrom((uint64_t)v40, (void *)v3))
          {
            PBReaderRecallMark();
            v41 = 24;
            goto LABEL_79;
          }
          goto LABEL_134;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_135;
        v22 = &OBJC_IVAR___GEOPDAutocompleteResultSection__readerMarkLength;
        v73 = *(_WORD *)(a1 + 84) << 9;
        goto LABEL_107;
      case 2:
        if ((v8 & 1) == 0)
          goto LABEL_88;
        v45 = 0;
        v46 = 0;
        v47 = 0;
        *(_WORD *)(a1 + v22[792]) |= 4u;
        while (2)
        {
          v48 = *v20;
          v49 = *(_QWORD *)(v3 + v48);
          v50 = v49 + 1;
          if (v49 == -1 || v50 > *(_QWORD *)(v3 + *v7))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v51 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v49);
            *(_QWORD *)(v3 + v48) = v50;
            v47 |= (unint64_t)(v51 & 0x7F) << v45;
            if (v51 < 0)
            {
              v45 += 7;
              v31 = v46++ >= 9;
              if (v31)
              {
                v47 = 0;
                goto LABEL_94;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          v47 = 0;
LABEL_94:
        *(_QWORD *)(a1 + 56) = v47;
        goto LABEL_89;
      case 3:
        if ((v8 & 1) == 0)
          goto LABEL_88;
        *(_WORD *)(a1 + v22[792]) |= 2u;
        v52 = *v20;
        v53 = *(_QWORD *)(v3 + v52);
        if (v53 <= 0xFFFFFFFFFFFFFFF7 && v53 + 8 <= *(_QWORD *)(v3 + *v7))
        {
          v54 = *(_QWORD *)(*(_QWORD *)(v3 + *v23) + v53);
          *(_QWORD *)(v3 + v52) = v53 + 8;
        }
        else
        {
          *(_BYTE *)(v3 + *v21) = 1;
          v54 = 0;
        }
        v74 = 40;
        goto LABEL_113;
      case 4:
        if ((v8 & 1) == 0)
          goto LABEL_88;
        v55 = 0;
        v56 = 0;
        v57 = 0;
        *(_WORD *)(a1 + v22[792]) |= 8u;
        while (2)
        {
          v58 = *v20;
          v59 = *(_QWORD *)(v3 + v58);
          v60 = v59 + 1;
          if (v59 == -1 || v60 > *(_QWORD *)(v3 + *v7))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v61 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v59);
            *(_QWORD *)(v3 + v58) = v60;
            v57 |= (unint64_t)(v61 & 0x7F) << v55;
            if (v61 < 0)
            {
              v55 += 7;
              v31 = v56++ >= 9;
              if (v31)
              {
                LODWORD(v57) = 0;
                goto LABEL_98;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          LODWORD(v57) = 0;
LABEL_98:
        *(_DWORD *)(a1 + 76) = v57;
        goto LABEL_89;
      case 5:
        if ((v8 & 1) == 0)
          goto LABEL_88;
        *(_WORD *)(a1 + v22[792]) |= 1u;
        v62 = *v20;
        v63 = *(_QWORD *)(v3 + v62);
        if (v63 <= 0xFFFFFFFFFFFFFFF7 && v63 + 8 <= *(_QWORD *)(v3 + *v7))
        {
          v54 = *(_QWORD *)(*(_QWORD *)(v3 + *v23) + v63);
          *(_QWORD *)(v3 + v62) = v63 + 8;
        }
        else
        {
          *(_BYTE *)(v3 + *v21) = 1;
          v54 = 0;
        }
        v74 = 32;
LABEL_113:
        *(_QWORD *)(a1 + v74) = v54;
        goto LABEL_89;
      case 6:
        if (!v35)
          goto LABEL_88;
        if ((*(_WORD *)(a1 + v22[792]) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_135;
          v22 = &OBJC_IVAR___GEOPDAutocompleteResultSection__readerMarkLength;
          v73 = *(_WORD *)(a1 + 84) << 8;
LABEL_107:
          v9 += v73 >> 15;
          v18 = v82;
          v21 = (int *)MEMORY[0x1E0D82BC8];
          goto LABEL_108;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_135;
        v40 = objc_alloc_init(GEOPDMapsIdentifier);
        if (GEOPDMapsIdentifierReadAllFrom((uint64_t)v40, (void *)v3))
        {
          PBReaderRecallMark();
          v41 = 48;
LABEL_79:
          v64 = *(void **)(a1 + v41);
          *(_QWORD *)(a1 + v41) = v40;

          --v9;
          v18 = v82;
          v21 = (int *)MEMORY[0x1E0D82BC8];
          v22 = &OBJC_IVAR___GEOPDAutocompleteResultSection__readerMarkLength;
LABEL_108:
          v7 = (int *)MEMORY[0x1E0D82BD8];
LABEL_89:
          if (!(v83 & 1 | (v9 != 0)))
            goto LABEL_114;
          continue;
        }
LABEL_134:

LABEL_135:
        v80 = 0;
        v18 = v82;
        v21 = (int *)MEMORY[0x1E0D82BC8];
        v22 = &OBJC_IVAR___GEOPDAutocompleteResultSection__readerMarkLength;
LABEL_115:
        if ((v81 & 1) != 0)
LABEL_116:
          *(_WORD *)(a1 + v22[792]) |= 0x20u;
        if (v18 & 1 | ((v80 & 1) == 0))
        {
          *(_WORD *)(a1 + v22[792]) |= 0x40u;
          *(_WORD *)(a1 + v22[792]) |= 0x80u;
          goto LABEL_127;
        }
        if (v19)
        {
          while (2)
          {
            while (1)
            {
              v76 = *v19++;
              v75 = v76;
              if (v76 == 1)
                break;
              if (v75 == 6)
              {
                v77 = 128;
                goto LABEL_126;
              }
              if (!v75)
                goto LABEL_127;
            }
            v77 = 64;
LABEL_126:
            *(_WORD *)(a1 + v22[792]) |= v77;
            continue;
          }
        }
LABEL_127:
        if (v80)
        {
          v3 = *(_BYTE *)(v3 + *v21) == 0;
          if ((v18 & 1) == 0)
            return v3;
LABEL_131:
          v78 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        else
        {
          v3 = 0;
          if ((v18 & 1) != 0)
            goto LABEL_131;
        }
        return v3;
      case 7:
        if ((v8 & 1) == 0)
          goto LABEL_88;
        v65 = 0;
        v66 = 0;
        v67 = 0;
        *(_WORD *)(a1 + v22[792]) |= 0x10u;
        while (2)
        {
          v68 = *v20;
          v69 = *(_QWORD *)(v3 + v68);
          v70 = v69 + 1;
          if (v69 == -1 || v70 > *(_QWORD *)(v3 + *v7))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v71 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v69);
            *(_QWORD *)(v3 + v68) = v70;
            v67 |= (unint64_t)(v71 & 0x7F) << v65;
            if (v71 < 0)
            {
              v65 += 7;
              v31 = v66++ >= 9;
              if (v31)
              {
                v67 = 0;
                goto LABEL_102;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          v67 = 0;
LABEL_102:
        *(_BYTE *)(a1 + 80) = v67 != 0;
        goto LABEL_89;
      default:
        if ((v81 & 1) == 0 || (*(_WORD *)(a1 + v22[792]) & 0x20) != 0)
        {
LABEL_88:
          v72 = PBReaderSkipValueWithTag();
          v7 = (int *)MEMORY[0x1E0D82BD8];
          v22 = &OBJC_IVAR___GEOPDAutocompleteResultSection__readerMarkLength;
          v21 = (int *)MEMORY[0x1E0D82BC8];
          v18 = v82;
          if ((v72 & 1) == 0)
          {
            v80 = 0;
            goto LABEL_115;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v42 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v43 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v42;

          }
          v44 = PBUnknownFieldAdd();
          v18 = v82;
          v21 = (int *)MEMORY[0x1E0D82BC8];
          v22 = &OBJC_IVAR___GEOPDAutocompleteResultSection__readerMarkLength;
          v7 = (int *)MEMORY[0x1E0D82BD8];
          if (!v44)
          {
            v80 = 0;
            goto LABEL_116;
          }
        }
        goto LABEL_89;
    }
  }
}

void sub_188C38DA4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188C39B48(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAutocompleteEntryAddressReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 68))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDAutocompleteEntryAddressReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 72));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 64) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 68) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDAutocompleteEntryAddressReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDAutocompleteEntryAddressReadAllFrom_initialTag;
  Specified = GEOPDAutocompleteEntryAddressReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    objc_msgSend(*(id *)(a1 + 24), "readAll:", 1);
    objc_msgSend(*(id *)(a1 + 48), "readAll:", 1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return Specified;
}

void sub_188C39D00(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAutocompleteEntryAddressReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOPDAutocompleteEntryAddressReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188C39D60(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188C39FBC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDAutocompleteEntryAddressIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  v2 = (*(_WORD *)(a1 + 84) & 0x1C0) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return v2;
}

void sub_188C3A468(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188C3A9E4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDAutocompleteEntryBrandProfileReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  uint64_t v18;
  void *v19;
  id v20;
  void *v21;
  _BOOL8 v22;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 1)
        {
          PBReaderReadString();
          v18 = objc_claimAutoreleasedReturnValue();
          v19 = *(void **)(a1 + 16);
          *(_QWORD *)(a1 + 16) = v18;

        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v20 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v21 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v20;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_26;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v22 = v3[*v6] == 0;
  }
  else
  {
LABEL_26:
    v22 = 0;
  }
  objc_sync_exit(v3);

  return v22;
}

void sub_188C3B0B4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDAutocompleteEntryBrandProfileReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOPDAutocompleteEntryBrandProfileReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188C3B114(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188C3B67C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAutocompleteEntryBusinessReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  int *v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  int *v18;
  int *v19;
  int *v20;
  int *v21;
  char v22;
  unsigned int v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  BOOL v29;
  int v30;
  unint64_t v32;
  BOOL v33;
  int *v34;
  int v35;
  int v36;
  BOOL v37;
  char v38;
  unsigned int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  id v45;
  void *v46;
  int v47;
  char v48;
  unsigned int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  GEOPDPlace *v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  void *v60;
  char v61;
  char v62;
  char v63;
  int v64;
  int v65;
  void *v66;
  int v68;
  int *v69;
  char v70;
  char v71;
  char v72;
  char v73;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 60);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 56));
  v7 = v6;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = ((*(unsigned __int8 *)(a1 + 72) >> 5) & 1)
      + ((*(unsigned __int8 *)(a1 + 72) >> 4) & 1)
      + ((*(unsigned __int8 *)(a1 + 72) >> 3) & 1);
  while (2)
  {
    v14 = 1;
    v15 = 1;
    v16 = 1;
    switch(a3[v9])
    {
      case -4:
        ++v13;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v15 = v11;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v17 = v13 != 0;
        v70 = v17 & ~(_BYTE)v12 | v10;
        v71 = v17 | v12 | v70;
        if ((((v17 | v12) | v8) & 1) != 0)
          v18 = 0;
        else
          v18 = a3;
        v19 = (int *)MEMORY[0x1E0D82BF0];
        v72 = (v18 == 0) | v17 | v12;
        v73 = v17 | v12;
        v20 = (int *)MEMORY[0x1E0D82BC8];
        v21 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v13;
LABEL_7:
        v14 = v10;
LABEL_8:
        v15 = v11;
        v16 = v12;
LABEL_10:
        ++v9;
        v10 = v14;
        v11 = v15;
        v12 = v16;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v19) >= *(_QWORD *)(v3 + *v7) || *(_BYTE *)(v3 + *v20))
      goto LABEL_95;
    v22 = 0;
    v23 = 0;
    v24 = 0;
    while (1)
    {
      v25 = *v19;
      v26 = *(_QWORD *)(v3 + v25);
      v27 = v26 + 1;
      if (v26 == -1 || v27 > *(_QWORD *)(v3 + *v7))
        break;
      v28 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v26);
      *(_QWORD *)(v3 + v25) = v27;
      v24 |= (unint64_t)(v28 & 0x7F) << v22;
      if ((v28 & 0x80) == 0)
        goto LABEL_25;
      v22 += 7;
      v29 = v23++ >= 9;
      if (v29)
      {
        v24 = 0;
        v30 = *(unsigned __int8 *)(v3 + *v20);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v20) = 1;
LABEL_25:
    v30 = *(unsigned __int8 *)(v3 + *v20);
    if (*(_BYTE *)(v3 + *v20))
      v24 = 0;
LABEL_27:
    if (v30 || (v24 & 7) == 4)
    {
LABEL_95:
      v68 = 1;
      goto LABEL_96;
    }
    v32 = v24 >> 3;
    v33 = v73;
    if ((v72 & 1) == 0)
    {
      v34 = v18;
      do
      {
        v36 = *v34++;
        v35 = v36;
        v33 = v36 != 0;
        if (v36)
          v37 = v35 == (_DWORD)v32;
        else
          v37 = 1;
      }
      while (!v37);
    }
    switch((int)v32)
    {
      case 2:
        if ((v8 & 1) == 0)
          goto LABEL_76;
        v38 = 0;
        v39 = 0;
        v40 = 0;
        *(_BYTE *)(a1 + 72) |= 2u;
        while (1)
        {
          v41 = *v19;
          v42 = *(_QWORD *)(v3 + v41);
          v43 = v42 + 1;
          if (v42 == -1 || v43 > *(_QWORD *)(v3 + *v7))
            break;
          v44 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v42);
          *(_QWORD *)(v3 + v41) = v43;
          v40 |= (unint64_t)(v44 & 0x7F) << v38;
          if ((v44 & 0x80) == 0)
            goto LABEL_79;
          v38 += 7;
          v29 = v39++ >= 9;
          if (v29)
          {
            v40 = 0;
            goto LABEL_81;
          }
        }
        *(_BYTE *)(v3 + *v20) = 1;
LABEL_79:
        if (*(_BYTE *)(v3 + *v20))
          v40 = 0;
LABEL_81:
        *(_QWORD *)(a1 + 40) = v40;
        goto LABEL_94;
      case 3:
        if ((v8 & 1) == 0)
          goto LABEL_76;
        v48 = 0;
        v49 = 0;
        v50 = 0;
        *(_BYTE *)(a1 + 72) |= 4u;
        while (2)
        {
          v51 = *v19;
          v52 = *(_QWORD *)(v3 + v51);
          v53 = v52 + 1;
          if (v52 == -1 || v53 > *(_QWORD *)(v3 + *v7))
          {
            *(_BYTE *)(v3 + *v20) = 1;
          }
          else
          {
            v54 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v52);
            *(_QWORD *)(v3 + v51) = v53;
            v50 |= (unint64_t)(v54 & 0x7F) << v48;
            if (v54 < 0)
            {
              v48 += 7;
              v29 = v49++ >= 9;
              if (v29)
              {
                LODWORD(v50) = 0;
                goto LABEL_85;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v20))
          LODWORD(v50) = 0;
LABEL_85:
        *(_DWORD *)(a1 + 68) = v50;
        goto LABEL_94;
      case 4:
        if (!v33)
          goto LABEL_76;
        if ((*(_BYTE *)(a1 + 72) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_115;
          v62 = 4 * *(_BYTE *)(a1 + 72);
          goto LABEL_90;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_115;
        v55 = objc_alloc_init(GEOPDPlace);
        if (!GEOPDPlaceReadAllFrom((uint64_t)v55, (void *)v3, v11 & 1))
          goto LABEL_114;
        PBReaderRecallMark();
        v56 = 48;
        goto LABEL_75;
      case 5:
        if ((v8 & 1) == 0)
          goto LABEL_76;
        *(_BYTE *)(a1 + 72) |= 1u;
        v57 = *v19;
        v58 = *(_QWORD *)(v3 + v57);
        if (v58 <= 0xFFFFFFFFFFFFFFF7 && v58 + 8 <= *(_QWORD *)(v3 + *v7))
        {
          v59 = *(_QWORD *)(*(_QWORD *)(v3 + *v21) + v58);
          *(_QWORD *)(v3 + v57) = v58 + 8;
        }
        else
        {
          *(_BYTE *)(v3 + *v20) = 1;
          v59 = 0;
        }
        *(_QWORD *)(a1 + 24) = v59;
        goto LABEL_94;
      case 6:
        if (!v33)
          goto LABEL_76;
        if ((*(_BYTE *)(a1 + 72) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_115;
          v62 = 8 * *(_BYTE *)(a1 + 72);
LABEL_90:
          v9 += v62 >> 7;
LABEL_91:
          v20 = (int *)MEMORY[0x1E0D82BC8];
          v7 = (int *)MEMORY[0x1E0D82BD8];
LABEL_94:
          if (!(v71 & 1 | (v9 != 0)))
            goto LABEL_95;
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_115;
        v55 = objc_alloc_init(GEOPDMapsIdentifier);
        if (GEOPDMapsIdentifierReadAllFrom((uint64_t)v55, (void *)v3))
        {
          PBReaderRecallMark();
          v56 = 32;
LABEL_75:
          v60 = *(void **)(a1 + v56);
          *(_QWORD *)(a1 + v56) = v55;

          --v9;
          goto LABEL_91;
        }
LABEL_114:

LABEL_115:
        v68 = 0;
        v20 = (int *)MEMORY[0x1E0D82BC8];
LABEL_96:
        v69 = &OBJC_IVAR___GEOPDAutocompleteResultSection__readerMarkLength;
        if ((v70 & 1) != 0)
LABEL_97:
          *(_BYTE *)(a1 + v69[808]) |= 8u;
        if (v73 & 1 | ((v68 & 1) == 0))
        {
          *(_BYTE *)(a1 + v69[808]) |= 0x20u;
          *(_BYTE *)(a1 + v69[808]) |= 0x10u;
          goto LABEL_108;
        }
        if (v18)
        {
          while (1)
          {
            v65 = *v18++;
            v64 = v65;
            if (v65 == 4)
              break;
            if (v64 == 6)
            {
              v63 = 16;
LABEL_104:
              *(_BYTE *)(a1 + v69[808]) |= v63;
            }
            else if (!v64)
            {
              goto LABEL_108;
            }
          }
          v63 = 32;
          goto LABEL_104;
        }
LABEL_108:
        if (v68)
          v3 = *(_BYTE *)(v3 + *v20) == 0;
        else
          v3 = 0;
        if ((v73 & 1) != 0)
        {
          v66 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      default:
        if ((v70 & 1) == 0 || (*(_BYTE *)(a1 + 72) & 8) != 0)
        {
LABEL_76:
          v61 = PBReaderSkipValueWithTag();
          v7 = (int *)MEMORY[0x1E0D82BD8];
          v20 = (int *)MEMORY[0x1E0D82BC8];
          if ((v61 & 1) == 0)
          {
            v68 = 0;
            goto LABEL_96;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v45 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v46 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v45;

          }
          v47 = PBUnknownFieldAdd();
          v20 = (int *)MEMORY[0x1E0D82BC8];
          v7 = (int *)MEMORY[0x1E0D82BD8];
          if (!v47)
          {
            v68 = 0;
            v69 = &OBJC_IVAR___GEOPDAutocompleteResultSection__readerMarkLength;
            goto LABEL_97;
          }
        }
        goto LABEL_94;
    }
  }
}

void sub_188C3BF90(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188C3C748(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAutocompleteEntryBusinessReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 60))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDAutocompleteEntryBusinessReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 60) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDAutocompleteEntryBusinessReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDAutocompleteEntryBusinessReadAllFrom_initialTag;
  Specified = GEOPDAutocompleteEntryBusinessReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    objc_msgSend(*(id *)(a1 + 48), "readAll:", 1);
    objc_msgSend(*(id *)(a1 + 32), "readAll:", 1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_188C3C900(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAutocompleteEntryBusinessReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOPDAutocompleteEntryBusinessReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188C3C960(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188C3CB58(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDAutocompleteEntryBusinessIsDirty(uint64_t a1)
{
  unsigned int v2;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  v2 = *(unsigned __int8 *)(a1 + 72);
  if ((v2 & 0x40) != 0)
    return 1;
  if ((v2 & 0x20) != 0)
  {
    if ((GEOPDPlaceIsDirty(*(os_unfair_lock_s **)(a1 + 48)) & 1) != 0)
      return 1;
    v2 = *(unsigned __int8 *)(a1 + 72);
  }
  return (v2 >> 4) & 1;
}

os_unfair_lock_s *GEOPDAutocompleteEntryBusinessIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOPDAutocompleteEntryBusinessIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 16);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_188C3CFC4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188C3D3F8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188C3D67C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAutocompleteEntryCategoryReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  char v17;
  unsigned __int8 v18;
  int *v19;
  int *v20;
  int *v21;
  int *v22;
  char v23;
  unsigned int v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  int v31;
  unint64_t v33;
  BOOL v34;
  int *v35;
  int v36;
  int v37;
  BOOL v38;
  GEOLocalizedString *v39;
  uint64_t v40;
  id v41;
  void *v42;
  int v43;
  uint64_t v44;
  void *v45;
  char v46;
  char v47;
  int v48;
  char v49;
  void *v50;
  int v52;
  int *v53;
  char v54;
  char v55;
  char v56;
  BOOL v57;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 60);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 56));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = (vaddv_s16((int16x4_t)(*(_QWORD *)&vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int8 *)(a1 + 68)), (uint16x4_t)0xFFFCFFFDFFFFFFFELL) & 0xFF01FF01FF01FF01))+ (*(_BYTE *)(a1 + 68) & 1));
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 > 2;
        v17 = v16 & ~(_BYTE)v11 | v9;
        v18 = v16 | v11;
        v54 = v17;
        v55 = v18 | v17;
        if (((v18 | v8) & 1) != 0)
          v19 = 0;
        else
          v19 = a3;
        v20 = (int *)MEMORY[0x1E0D82BF0];
        v56 = (v19 == 0) | v18;
        v57 = v18;
        v21 = (int *)MEMORY[0x1E0D82BC8];
        v22 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v7;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v20) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v21))
      goto LABEL_78;
    v23 = 0;
    v24 = 0;
    v25 = 0;
    while (1)
    {
      v26 = *v20;
      v27 = *(_QWORD *)(v3 + v26);
      v28 = v27 + 1;
      if (v27 == -1 || v28 > *(_QWORD *)(v3 + *v6))
        break;
      v29 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v27);
      *(_QWORD *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0)
        goto LABEL_25;
      v23 += 7;
      if (v24++ >= 9)
      {
        v25 = 0;
        v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v21) = 1;
LABEL_25:
    v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(_BYTE *)(v3 + *v21))
      v25 = 0;
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_78:
      v52 = 1;
      goto LABEL_79;
    }
    v33 = v25 >> 3;
    v34 = v57;
    if ((v56 & 1) == 0)
    {
      v35 = v19;
      do
      {
        v37 = *v35++;
        v36 = v37;
        v34 = v37 != 0;
        if (v37)
          v38 = v36 == (_DWORD)v33;
        else
          v38 = 1;
      }
      while (!v38);
    }
    switch((int)v33)
    {
      case 1:
        if (!v34)
          goto LABEL_65;
        if ((*(_BYTE *)(a1 + 68) & 2) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_96;
          v39 = objc_alloc_init(GEOLocalizedString);
          if (GEOLocalizedStringReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1))
          {
            PBReaderRecallMark();
            v40 = 24;
            goto LABEL_63;
          }
          goto LABEL_95;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_96;
        v47 = *(_BYTE *)(a1 + 68) << 6;
        goto LABEL_75;
      case 2:
        if (!v34)
          goto LABEL_65;
        if ((*(_BYTE *)(a1 + 68) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_96;
          v47 = 32 * *(_BYTE *)(a1 + 68);
          goto LABEL_75;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_96;
        v39 = objc_alloc_init(GEOStyleAttributes);
        if (!GEOStyleAttributesReadAllFrom((uint64_t)v39, (void *)v3))
          goto LABEL_95;
        PBReaderRecallMark();
        v40 = 32;
        goto LABEL_63;
      case 3:
        if (!v34)
          goto LABEL_65;
        if ((*(_BYTE *)(a1 + 68) & 8) == 0)
        {
          PBReaderReadData();
          v44 = objc_claimAutoreleasedReturnValue();
          v45 = *(void **)(a1 + 40);
          *(_QWORD *)(a1 + 40) = v44;
          goto LABEL_64;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_96;
        v47 = 16 * *(_BYTE *)(a1 + 68);
        goto LABEL_75;
      case 4:
        if (!v34)
          goto LABEL_65;
        if ((*(_BYTE *)(a1 + 68) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_96;
          v47 = 8 * *(_BYTE *)(a1 + 68);
LABEL_75:
          v7 += v47 >> 7;
LABEL_76:
          v21 = (int *)MEMORY[0x1E0D82BC8];
LABEL_77:
          if (!(v55 & 1 | (v7 != 0)))
            goto LABEL_78;
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_96;
        v39 = objc_alloc_init(GEOPDVenueIdentifier);
        if (GEOPDVenueIdentifierReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          v40 = 48;
LABEL_63:
          v45 = *(void **)(a1 + v40);
          *(_QWORD *)(a1 + v40) = v39;
LABEL_64:

          --v7;
          goto LABEL_76;
        }
LABEL_95:

LABEL_96:
        v52 = 0;
        v21 = (int *)MEMORY[0x1E0D82BC8];
LABEL_79:
        v53 = &OBJC_IVAR___GEOPDAutocompleteResultSection__readerMarkLength;
        if ((v54 & 1) != 0)
LABEL_80:
          *(_BYTE *)(a1 + v53[818]) |= 1u;
        if (v57 || (v52 & 1) == 0)
        {
          *(_BYTE *)(a1 + v53[818]) |= 2u;
          *(_BYTE *)(a1 + v53[818]) |= 4u;
          *(_BYTE *)(a1 + v53[818]) |= 8u;
          *(_BYTE *)(a1 + v53[818]) |= 0x10u;
        }
        else if (v19)
        {
          while (1)
          {
            v48 = *v19++;
            v49 = 2;
            switch(v48)
            {
              case 0:
                goto LABEL_89;
              case 1:
                goto LABEL_88;
              case 2:
                v49 = 4;
                goto LABEL_88;
              case 3:
                v49 = 8;
                goto LABEL_88;
              case 4:
                v49 = 16;
LABEL_88:
                *(_BYTE *)(a1 + v53[818]) |= v49;
                break;
              default:
                continue;
            }
          }
        }
LABEL_89:
        if (v52)
          v3 = *(_BYTE *)(v3 + *v21) == 0;
        else
          v3 = 0;
        if (v57)
        {
          v50 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      default:
        if ((v54 & 1) == 0 || (*(_BYTE *)(a1 + 68) & 1) != 0)
        {
LABEL_65:
          v46 = PBReaderSkipValueWithTag();
          v21 = (int *)MEMORY[0x1E0D82BC8];
          if ((v46 & 1) == 0)
          {
            v52 = 0;
            goto LABEL_79;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v41 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v42 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v41;

          }
          v43 = PBUnknownFieldAdd();
          v21 = (int *)MEMORY[0x1E0D82BC8];
          if (!v43)
          {
            v52 = 0;
            v53 = &OBJC_IVAR___GEOPDAutocompleteResultSection__readerMarkLength;
            goto LABEL_80;
          }
        }
        goto LABEL_77;
    }
  }
}

void sub_188C3DE68(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188C3DFAC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188C3E0F0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188C3E854(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDAutocompleteEntryCategoryCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 24), "readAll:", 1);
  objc_msgSend(*(id *)(a1 + 32), "readAll:", 1);
  -[GEOPDVenueIdentifier readAll:](*(_QWORD *)(a1 + 48), 1);
}

unint64_t GEOPDAutocompleteEntryCategoryReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 60))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDAutocompleteEntryCategoryReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 60) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDAutocompleteEntryCategoryReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDAutocompleteEntryCategoryReadAllFrom_initialTag;
  Specified = GEOPDAutocompleteEntryCategoryReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDAutocompleteEntryCategoryCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_188C3EA3C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAutocompleteEntryCategoryReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOPDAutocompleteEntryCategoryReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188C3EA9C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188C3EC60(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL _GEOPDAutocompleteEntryCategoryIsDirty(uint64_t a1)
{
  char v2;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  v2 = *(_BYTE *)(a1 + 68);
  if ((v2 & 0x20) != 0)
    return 1;
  if ((*(_BYTE *)(a1 + 68) & 2) != 0)
  {
    if (GEOLocalizedStringIsDirty(*(_QWORD *)(a1 + 24)))
      return 1;
    v2 = *(_BYTE *)(a1 + 68);
  }
  if ((v2 & 0xC) != 0)
    return 1;
  return (v2 & 0x10) != 0 && GEOPDVenueIdentifierIsDirty(*(_QWORD *)(a1 + 48));
}

os_unfair_lock_s *GEOPDAutocompleteEntryCategoryIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  _BOOL8 IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOPDAutocompleteEntryCategoryIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 16);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_188C3EFE8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188C3F2E8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDAutocompleteEntryClientResolvedReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  id v25;
  void *v26;
  _BOOL8 v27;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 1)
        {
          v18 = 0;
          v19 = 0;
          v20 = 0;
          *(_BYTE *)(a1 + 20) |= 1u;
          while (1)
          {
            v21 = *v4;
            v22 = *(_QWORD *)&v3[v21];
            v23 = v22 + 1;
            if (v22 == -1 || v23 > *(_QWORD *)&v3[*v5])
              break;
            v24 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v22);
            *(_QWORD *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0)
              goto LABEL_32;
            v18 += 7;
            v15 = v19++ >= 9;
            if (v15)
            {
              LODWORD(v20) = 0;
              goto LABEL_34;
            }
          }
          v3[*v6] = 1;
LABEL_32:
          if (v3[*v6])
            LODWORD(v20) = 0;
LABEL_34:
          *(_DWORD *)(a1 + 16) = v20;
        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v25 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v26 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v25;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_37;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v27 = v3[*v6] == 0;
  }
  else
  {
LABEL_37:
    v27 = 0;
  }
  objc_sync_exit(v3);

  return v27;
}

void sub_188C3FD14(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDAutocompleteEntryClientResolvedReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOPDAutocompleteEntryClientResolvedReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188C3FD74(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDAutocompleteEntryCollectionReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  GEOPDMapsIdentifier *v18;
  void *v19;
  id v20;
  void *v21;
  _BOOL8 v22;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_29;
          v18 = objc_alloc_init(GEOPDMapsIdentifier);
          if (!GEOPDMapsIdentifierReadAllFrom((uint64_t)v18, v3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          v19 = *(void **)(a1 + 16);
          *(_QWORD *)(a1 + 16) = v18;

        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v20 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v21 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v20;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_29;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v22 = v3[*v6] == 0;
  }
  else
  {
LABEL_29:
    v22 = 0;
  }
  objc_sync_exit(v3);

  return v22;
}

void sub_188C406E8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDAutocompleteEntryCollectionReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOPDAutocompleteEntryCollectionReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188C40748(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDAutocompleteEntryDirectionIntentReadAllFrom(uint64_t a1, void *a2, int a3)
{
  char *v5;
  int *v6;
  int *v7;
  int *v8;
  int *v9;
  char v10;
  unsigned int v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  int v18;
  GEOPDDirectionIntent *v20;
  void *v21;
  id v22;
  void *v23;
  _BOOL8 v24;

  v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    v6 = (int *)MEMORY[0x1E0D82BF0];
    v7 = (int *)MEMORY[0x1E0D82BD8];
    v8 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v5[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v5[*MEMORY[0x1E0D82BD8]])
    {
      v9 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v5[*v8])
          break;
        v10 = 0;
        v11 = 0;
        v12 = 0;
        while (1)
        {
          v13 = *v6;
          v14 = *(_QWORD *)&v5[v13];
          v15 = v14 + 1;
          if (v14 == -1 || v15 > *(_QWORD *)&v5[*v7])
            break;
          v16 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v14);
          *(_QWORD *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0)
            goto LABEL_13;
          v10 += 7;
          if (v11++ >= 9)
          {
            v12 = 0;
            v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        v18 = v5[*v8];
        if (v5[*v8])
          v12 = 0;
LABEL_15:
        if (v18 || (v12 & 7) == 4)
          break;
        if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_29;
          v20 = objc_alloc_init(GEOPDDirectionIntent);
          if (!GEOPDDirectionIntentReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          v21 = *(void **)(a1 + 16);
          *(_QWORD *)(a1 + 16) = v20;

        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v22 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v23 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v22;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_29;
        }
      }
      while (*(_QWORD *)&v5[*v6] < *(_QWORD *)&v5[*v7]);
    }
    v24 = v5[*v8] == 0;
  }
  else
  {
LABEL_29:
    v24 = 0;
  }
  objc_sync_exit(v5);

  return v24;
}

void sub_188C410D8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDAutocompleteEntryDirectionIntentReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOPDAutocompleteEntryDirectionIntentReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188C41138(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188C415EC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAutocompleteEntryHighlightLineReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  char v15;
  unsigned __int8 v16;
  char v17;
  int *v18;
  int *v19;
  int *v20;
  int *v21;
  char v22;
  unsigned int v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  int v30;
  unint64_t v32;
  BOOL v33;
  int *v34;
  int v35;
  int v36;
  BOOL v37;
  uint64_t v38;
  void *v39;
  GEOPDAutocompleteEntryHighlightSpan *v40;
  id v41;
  void *v42;
  int v43;
  char v44;
  char v45;
  int v46;
  int v47;
  void *v48;
  int v50;
  char v51;
  char v52;
  char v53;
  BOOL v54;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1)
      + (*(_BYTE *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v9])
    {
      case -4:
        ++v11;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_9;
      case 0:
        v14 = v11 != 0;
        v15 = v14 & ~(_BYTE)v10 | v7;
        v16 = v14 | v10;
        v51 = v15;
        v17 = v16 | v15;
        if (((v16 | v8) & 1) != 0)
          v18 = 0;
        else
          v18 = a3;
        v54 = v16;
        v52 = v17;
        v53 = (v18 == 0) | v16;
        v19 = (int *)MEMORY[0x1E0D82BF0];
        v20 = (int *)MEMORY[0x1E0D82BC8];
        v21 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_7:
        v12 = v7;
LABEL_8:
        v13 = v10;
LABEL_9:
        ++v9;
        v7 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v19) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v20))
      goto LABEL_59;
    v22 = 0;
    v23 = 0;
    v24 = 0;
    while (1)
    {
      v25 = *v19;
      v26 = *(_QWORD *)(v3 + v25);
      v27 = v26 + 1;
      if (v26 == -1 || v27 > *(_QWORD *)(v3 + *v6))
        break;
      v28 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v26);
      *(_QWORD *)(v3 + v25) = v27;
      v24 |= (unint64_t)(v28 & 0x7F) << v22;
      if ((v28 & 0x80) == 0)
        goto LABEL_24;
      v22 += 7;
      if (v23++ >= 9)
      {
        v24 = 0;
        v30 = *(unsigned __int8 *)(v3 + *v20);
        goto LABEL_26;
      }
    }
    *(_BYTE *)(v3 + *v20) = 1;
LABEL_24:
    v30 = *(unsigned __int8 *)(v3 + *v20);
    if (*(_BYTE *)(v3 + *v20))
      v24 = 0;
LABEL_26:
    if (v30 || (v24 & 7) == 4)
    {
LABEL_59:
      v50 = 1;
      goto LABEL_60;
    }
    v32 = v24 >> 3;
    v33 = v54;
    if ((v53 & 1) == 0)
    {
      v34 = v18;
      do
      {
        v36 = *v34++;
        v35 = v36;
        v33 = v36 != 0;
        if (v36)
          v37 = v35 == (_DWORD)v32;
        else
          v37 = 1;
      }
      while (!v37);
    }
    if ((_DWORD)v32 == 2)
      break;
    if ((_DWORD)v32 == 1)
    {
      if (!v33)
        goto LABEL_53;
      if ((*(_BYTE *)(a1 + 52) & 2) != 0)
      {
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_79;
        v9 += *(unsigned __int8 *)(a1 + 52) << 30 >> 31;
      }
      else
      {
        PBReaderReadString();
        v38 = objc_claimAutoreleasedReturnValue();
        v39 = *(void **)(a1 + 24);
        *(_QWORD *)(a1 + 24) = v38;

        --v9;
      }
      goto LABEL_57;
    }
    if ((v51 & 1) == 0 || (*(_BYTE *)(a1 + 52) & 1) != 0)
      goto LABEL_53;
    if (!*(_QWORD *)(a1 + 16))
    {
      v41 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
      v42 = *(void **)(a1 + 16);
      *(_QWORD *)(a1 + 16) = v41;

    }
    v43 = PBUnknownFieldAdd();
    v20 = (int *)MEMORY[0x1E0D82BC8];
    if (!v43)
    {
      v50 = 0;
      goto LABEL_61;
    }
LABEL_58:
    if (!(v52 & 1 | (v9 != 0)))
      goto LABEL_59;
  }
  if (!v33 || (*(_BYTE *)(a1 + 52) & 4) != 0)
  {
LABEL_53:
    v44 = PBReaderSkipValueWithTag();
    v20 = (int *)MEMORY[0x1E0D82BC8];
    if ((v44 & 1) == 0)
    {
      v50 = 0;
      goto LABEL_60;
    }
    goto LABEL_58;
  }
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_79;
  v40 = objc_alloc_init(GEOPDAutocompleteEntryHighlightSpan);
  if (GEOPDAutocompleteEntryHighlightSpanReadAllFrom((uint64_t)v40, (void *)v3))
  {
    PBReaderRecallMark();
    -[GEOPDAutocompleteEntryHighlightLine _addNoFlagsSpan:](a1, v40);

LABEL_57:
    v20 = (int *)MEMORY[0x1E0D82BC8];
    goto LABEL_58;
  }

LABEL_79:
  v50 = 0;
  v20 = (int *)MEMORY[0x1E0D82BC8];
LABEL_60:
  if ((v51 & 1) == 0)
    goto LABEL_62;
LABEL_61:
  *(_BYTE *)(a1 + 52) |= 1u;
LABEL_62:
  if (v54 || (v50 & 1) == 0)
  {
    *(_BYTE *)(a1 + 52) |= 2u;
    *(_BYTE *)(a1 + 52) |= 4u;
    goto LABEL_72;
  }
  if (v18)
  {
    while (1)
    {
      v47 = *v18++;
      v46 = v47;
      if (v47 == 1)
        break;
      if (v46 == 2)
      {
        v45 = 4;
LABEL_68:
        *(_BYTE *)(a1 + 52) |= v45;
      }
      else if (!v46)
      {
        goto LABEL_72;
      }
    }
    v45 = 2;
    goto LABEL_68;
  }
LABEL_72:
  if (v50)
    v3 = *(_BYTE *)(v3 + *v20) == 0;
  else
    v3 = 0;
  if (v54)
  {
    v48 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_188C41C00(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188C42540(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDAutocompleteEntryHighlightLineCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _BYTE v10[128];
  uint64_t v11;

  v11 = *MEMORY[0x1E0C80C00];
  v6 = 0u;
  v7 = 0u;
  v8 = 0u;
  v9 = 0u;
  v1 = *(id *)(a1 + 32);
  v2 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
  if (v2)
  {
    v3 = v2;
    v4 = *(_QWORD *)v7;
    do
    {
      v5 = 0;
      do
      {
        if (*(_QWORD *)v7 != v4)
          objc_enumerationMutation(v1);
        objc_msgSend(*(id *)(*((_QWORD *)&v6 + 1) + 8 * v5++), "readAll:", 1, (_QWORD)v6);
      }
      while (v3 != v5);
      v3 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
    }
    while (v3);
  }

}

unint64_t GEOPDAutocompleteEntryHighlightLineReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDAutocompleteEntryHighlightLineReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDAutocompleteEntryHighlightLineReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDAutocompleteEntryHighlightLineReadAllFrom_initialTag;
  Specified = GEOPDAutocompleteEntryHighlightLineReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDAutocompleteEntryHighlightLineCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_188C427CC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAutocompleteEntryHighlightLineReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOPDAutocompleteEntryHighlightLineReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188C4282C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDAutocompleteEntryHighlightSpanIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int v20;
  BOOL v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  int v26;
  _BOOL8 v27;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_39;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      if (v14 || (v8 & 7) == 4)
        goto LABEL_39;
      if ((v8 >> 3) == 2)
        break;
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0)
          goto LABEL_41;
        v16 = 0;
        while (1)
        {
          v17 = *v2;
          v18 = *(_QWORD *)&a1[v17];
          v19 = v18 + 1;
          if (v18 == -1 || v19 > *(_QWORD *)&a1[*v3])
            break;
          v20 = *(char *)(*(_QWORD *)&a1[*v5] + v18);
          *(_QWORD *)&a1[v17] = v19;
          if (v20 < 0)
          {
            v21 = v16++ > 8;
            if (!v21)
              continue;
          }
          goto LABEL_38;
        }
LABEL_36:
        a1[*v4] = 1;
        goto LABEL_38;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_41:
        v27 = 0;
        goto LABEL_40;
      }
LABEL_38:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_39;
    }
    if ((v8 & 7) != 0)
      goto LABEL_41;
    v22 = 0;
    while (1)
    {
      v23 = *v2;
      v24 = *(_QWORD *)&a1[v23];
      v25 = v24 + 1;
      if (v24 == -1 || v25 > *(_QWORD *)&a1[*v3])
        goto LABEL_36;
      v26 = *(char *)(*(_QWORD *)&a1[*v5] + v24);
      *(_QWORD *)&a1[v23] = v25;
      if (v26 < 0)
      {
        v21 = v22++ > 8;
        if (!v21)
          continue;
      }
      goto LABEL_38;
    }
  }
LABEL_39:
  v27 = a1[*v4] == 0;
LABEL_40:
  PBReaderRecallMark();
  return v27;
}

void sub_188C42CA4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDAutocompleteEntryHighlightLineIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v2 = (*(_BYTE *)(a1 + 52) & 0xE) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return v2;
}

void sub_188C43058(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188C43340(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDAutocompleteEntryHighlightSpanReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  BOOL v25;
  int *v26;
  char v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  id v33;
  void *v34;
  _BOOL8 v35;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      while (1)
      {
        if (v3[*v6])
          goto LABEL_49;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          goto LABEL_49;
        if ((v10 >> 3) == 2)
          break;
        if ((v10 >> 3) == 1)
        {
          v18 = 0;
          v19 = 0;
          v20 = 0;
          *(_BYTE *)(a1 + 24) |= 2u;
          while (1)
          {
            v21 = *v4;
            v22 = *(_QWORD *)&v3[v21];
            v23 = v22 + 1;
            if (v22 == -1 || v23 > *(_QWORD *)&v3[*v5])
            {
              v26 = &OBJC_IVAR___GEOPDAutocompleteEntryHighlightSpan__startIndex;
              goto LABEL_41;
            }
            v24 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v22);
            *(_QWORD *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0)
              break;
            v18 += 7;
            v25 = v19++ > 8;
            if (v25)
            {
              LODWORD(v20) = 0;
              v26 = &OBJC_IVAR___GEOPDAutocompleteEntryHighlightSpan__startIndex;
              goto LABEL_44;
            }
          }
          v26 = &OBJC_IVAR___GEOPDAutocompleteEntryHighlightSpan__startIndex;
LABEL_42:
          if (v3[*v6])
            LODWORD(v20) = 0;
LABEL_44:
          *(_DWORD *)(a1 + *v26) = v20;
          goto LABEL_45;
        }
        if (!*(_QWORD *)(a1 + 8))
        {
          v33 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
          v34 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = v33;

        }
        if ((PBUnknownFieldAdd() & 1) == 0)
          goto LABEL_50;
LABEL_45:
        if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
          goto LABEL_49;
      }
      v27 = 0;
      v28 = 0;
      v20 = 0;
      *(_BYTE *)(a1 + 24) |= 1u;
      while (1)
      {
        v29 = *v4;
        v30 = *(_QWORD *)&v3[v29];
        v31 = v30 + 1;
        if (v30 == -1 || v31 > *(_QWORD *)&v3[*v5])
          break;
        v32 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v30);
        *(_QWORD *)&v3[v29] = v31;
        v20 |= (unint64_t)(v32 & 0x7F) << v27;
        if ((v32 & 0x80) == 0)
        {
          v26 = &OBJC_IVAR___GEOPDAutocompleteEntryHighlightSpan__length;
          goto LABEL_42;
        }
        v27 += 7;
        v25 = v28++ > 8;
        if (v25)
        {
          LODWORD(v20) = 0;
          v26 = &OBJC_IVAR___GEOPDAutocompleteEntryHighlightSpan__length;
          goto LABEL_44;
        }
      }
      v26 = &OBJC_IVAR___GEOPDAutocompleteEntryHighlightSpan__length;
LABEL_41:
      v3[*v6] = 1;
      goto LABEL_42;
    }
LABEL_49:
    v35 = v3[*v6] == 0;
  }
  else
  {
LABEL_50:
    v35 = 0;
  }
  objc_sync_exit(v3);

  return v35;
}

void sub_188C43D30(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDAutocompleteEntryHighlightSpanReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOPDAutocompleteEntryHighlightSpanReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188C43D90(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDAutocompleteEntryOfflineAreaReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  unint64_t v18;
  char v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  GEOPDMapsIdentifier *v26;
  void *v27;
  char v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  id v35;
  void *v36;
  _BOOL8 v37;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        v18 = v10 >> 3;
        if ((v10 >> 3) == 3)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_54;
          v26 = objc_alloc_init(GEOPDMapsIdentifier);
          if (!GEOPDMapsIdentifierReadAllFrom((uint64_t)v26, v3))
          {

            goto LABEL_54;
          }
          PBReaderRecallMark();
          v27 = *(void **)(a1 + 24);
          *(_QWORD *)(a1 + 24) = v26;

        }
        else if ((_DWORD)v18 == 2)
        {
          v28 = 0;
          v29 = 0;
          v30 = 0;
          *(_BYTE *)(a1 + 36) |= 2u;
          while (1)
          {
            v31 = *v4;
            v32 = *(_QWORD *)&v3[v31];
            v33 = v32 + 1;
            if (v32 == -1 || v33 > *(_QWORD *)&v3[*v5])
              break;
            v34 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v32);
            *(_QWORD *)&v3[v31] = v33;
            v30 |= (unint64_t)(v34 & 0x7F) << v28;
            if ((v34 & 0x80) == 0)
              goto LABEL_48;
            v28 += 7;
            v15 = v29++ >= 9;
            if (v15)
            {
              v30 = 0;
              goto LABEL_50;
            }
          }
          v3[*v6] = 1;
LABEL_48:
          if (v3[*v6])
            v30 = 0;
LABEL_50:
          *(_BYTE *)(a1 + 32) = v30 != 0;
        }
        else if ((_DWORD)v18 == 1)
        {
          v19 = 0;
          v20 = 0;
          v21 = 0;
          *(_BYTE *)(a1 + 36) |= 1u;
          while (1)
          {
            v22 = *v4;
            v23 = *(_QWORD *)&v3[v22];
            v24 = v23 + 1;
            if (v23 == -1 || v24 > *(_QWORD *)&v3[*v5])
              break;
            v25 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v23);
            *(_QWORD *)&v3[v22] = v24;
            v21 |= (unint64_t)(v25 & 0x7F) << v19;
            if ((v25 & 0x80) == 0)
              goto LABEL_44;
            v19 += 7;
            v15 = v20++ >= 9;
            if (v15)
            {
              v21 = 0;
              goto LABEL_46;
            }
          }
          v3[*v6] = 1;
LABEL_44:
          if (v3[*v6])
            v21 = 0;
LABEL_46:
          *(_QWORD *)(a1 + 16) = v21;
        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v35 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v36 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v35;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_54;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v37 = v3[*v6] == 0;
  }
  else
  {
LABEL_54:
    v37 = 0;
  }
  objc_sync_exit(v3);

  return v37;
}

void sub_188C44B7C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDAutocompleteEntryOfflineAreaReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOPDAutocompleteEntryOfflineAreaReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188C44BDC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDAutocompleteEntryPublisherReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  GEOPDMapsIdentifier *v18;
  void *v19;
  id v20;
  void *v21;
  _BOOL8 v22;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_29;
          v18 = objc_alloc_init(GEOPDMapsIdentifier);
          if (!GEOPDMapsIdentifierReadAllFrom((uint64_t)v18, v3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          v19 = *(void **)(a1 + 16);
          *(_QWORD *)(a1 + 16) = v18;

        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v20 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v21 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v20;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_29;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v22 = v3[*v6] == 0;
  }
  else
  {
LABEL_29:
    v22 = 0;
  }
  objc_sync_exit(v3);

  return v22;
}

void sub_188C4574C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDAutocompleteEntryPublisherReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOPDAutocompleteEntryPublisherReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188C457AC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188C45C70(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAutocompleteEntryQueryReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  int *v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  BOOL v28;
  int v29;
  unint64_t v31;
  BOOL v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  uint64_t v37;
  void *v38;
  id v39;
  void *v40;
  int v41;
  char v42;
  unsigned int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  char v48;
  char v49;
  unsigned int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  char v55;
  GEOPDResultRefinement *v56;
  char v57;
  unsigned int v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  char v63;
  char v64;
  BOOL v65;
  uint64_t v66;
  char v67;
  int v68;
  char v69;
  void *v70;
  int v72;
  int *v73;
  char v74;
  char v75;
  char v76;
  char v77;
  char v78;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 52);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 48));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = vaddv_s16((int16x4_t)(*(_QWORD *)&vshl_u16((uint16x4_t)(*(_QWORD *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 68)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFDFFFAFFFCFFFBLL) & 0xFF01FF01FF01FF01));
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 > 1;
        v74 = v16 & ~(_BYTE)v11 | v9;
        v75 = v8;
        v76 = v16 | v11 | v74;
        if ((((v16 | v11) | v8) & 1) != 0)
          v17 = 0;
        else
          v17 = a3;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v77 = (v17 == 0) | v16 | v11;
        v78 = v16 | v11;
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v7;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v19))
      goto LABEL_105;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0)
        goto LABEL_25;
      v21 += 7;
      v28 = v22++ >= 9;
      if (v28)
      {
        v23 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_25:
    v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_27:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_105:
      v72 = 1;
      goto LABEL_106;
    }
    v31 = v23 >> 3;
    v32 = v78;
    if ((v77 & 1) == 0)
    {
      v33 = v17;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if (!v32)
          goto LABEL_83;
        if ((*(_BYTE *)(a1 + 68) & 0x10) == 0)
        {
          PBReaderReadString();
          v37 = objc_claimAutoreleasedReturnValue();
          v38 = *(void **)(a1 + 24);
          *(_QWORD *)(a1 + 24) = v37;
          goto LABEL_74;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_122;
        v67 = 8 * *(_BYTE *)(a1 + 68);
        goto LABEL_102;
      case 2:
        if ((v75 & 1) == 0)
          goto LABEL_83;
        v42 = 0;
        v43 = 0;
        v44 = 0;
        *(_BYTE *)(a1 + 68) |= 1u;
        while (2)
        {
          v45 = *v18;
          v46 = *(_QWORD *)(v3 + v45);
          v47 = v46 + 1;
          if (v46 == -1 || v47 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v19) = 1;
          }
          else
          {
            v48 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v46);
            *(_QWORD *)(v3 + v45) = v47;
            v44 |= (unint64_t)(v48 & 0x7F) << v42;
            if (v48 < 0)
            {
              v42 += 7;
              v28 = v43++ >= 9;
              if (v28)
              {
                LODWORD(v44) = 0;
                goto LABEL_88;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v19))
          LODWORD(v44) = 0;
LABEL_88:
        *(_DWORD *)(a1 + 60) = v44;
        goto LABEL_104;
      case 3:
        if ((v75 & 1) == 0)
          goto LABEL_83;
        v49 = 0;
        v50 = 0;
        v51 = 0;
        *(_BYTE *)(a1 + 68) |= 4u;
        while (2)
        {
          v52 = *v18;
          v53 = *(_QWORD *)(v3 + v52);
          v54 = v53 + 1;
          if (v53 == -1 || v54 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v19) = 1;
          }
          else
          {
            v55 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v53);
            *(_QWORD *)(v3 + v52) = v54;
            v51 |= (unint64_t)(v55 & 0x7F) << v49;
            if (v55 < 0)
            {
              v49 += 7;
              v28 = v50++ >= 9;
              if (v28)
              {
                v51 = 0;
                goto LABEL_92;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v19))
          v51 = 0;
LABEL_92:
        v65 = v51 != 0;
        v66 = 65;
        goto LABEL_97;
      case 4:
        if (!v32 || (*(_BYTE *)(a1 + 68) & 0x20) != 0)
          goto LABEL_83;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_122;
        v56 = objc_alloc_init(GEOPDResultRefinement);
        if (!GEOPDResultRefinementReadAllFrom((uint64_t)v56, (void *)v3, v10 & 1))
          goto LABEL_121;
        PBReaderRecallMark();
        -[GEOPDAutocompleteEntryQuery _addNoFlagsResultRefinement:](a1, v56);

        goto LABEL_103;
      case 5:
        if (!v32)
          goto LABEL_83;
        if ((*(_BYTE *)(a1 + 68) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_122;
          v67 = 2 * *(_BYTE *)(a1 + 68);
LABEL_102:
          v7 += v67 >> 7;
          goto LABEL_103;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_122;
        v56 = objc_alloc_init(GEOStyleAttributes);
        if (GEOStyleAttributesReadAllFrom((uint64_t)v56, (void *)v3))
        {
          PBReaderRecallMark();
          v38 = *(void **)(a1 + 40);
          *(_QWORD *)(a1 + 40) = v56;
LABEL_74:

          --v7;
LABEL_103:
          v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_104:
          if (!(v76 & 1 | (v7 != 0)))
            goto LABEL_105;
          continue;
        }
LABEL_121:

LABEL_122:
        v72 = 0;
        v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_106:
        v73 = &OBJC_IVAR___GEOPDAutocompleteResultSection__readerMarkLength;
        if ((v74 & 1) != 0)
LABEL_107:
          *(_BYTE *)(a1 + v73[854]) |= 8u;
        if (v78 & 1 | ((v72 & 1) == 0))
        {
          *(_BYTE *)(a1 + v73[854]) |= 0x10u;
          *(_BYTE *)(a1 + v73[854]) |= 0x20u;
          *(_BYTE *)(a1 + v73[854]) |= 0x40u;
        }
        else if (v17)
        {
          while (1)
          {
            v68 = *v17++;
            v69 = 16;
            switch(v68)
            {
              case 0:
                goto LABEL_115;
              case 1:
                goto LABEL_114;
              case 4:
                v69 = 32;
                goto LABEL_114;
              case 5:
                v69 = 64;
LABEL_114:
                *(_BYTE *)(a1 + v73[854]) |= v69;
                break;
              default:
                continue;
            }
          }
        }
LABEL_115:
        if (v72)
          v3 = *(_BYTE *)(v3 + *v19) == 0;
        else
          v3 = 0;
        if ((v78 & 1) != 0)
        {
          v70 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      case 6:
        if ((v75 & 1) == 0)
          goto LABEL_83;
        v57 = 0;
        v58 = 0;
        v59 = 0;
        *(_BYTE *)(a1 + 68) |= 2u;
        while (2)
        {
          v60 = *v18;
          v61 = *(_QWORD *)(v3 + v60);
          v62 = v61 + 1;
          if (v61 == -1 || v62 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v19) = 1;
          }
          else
          {
            v63 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v61);
            *(_QWORD *)(v3 + v60) = v62;
            v59 |= (unint64_t)(v63 & 0x7F) << v57;
            if (v63 < 0)
            {
              v57 += 7;
              v28 = v58++ >= 9;
              if (v28)
              {
                v59 = 0;
                goto LABEL_96;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v19))
          v59 = 0;
LABEL_96:
        v65 = v59 != 0;
        v66 = 64;
LABEL_97:
        *(_BYTE *)(a1 + v66) = v65;
        goto LABEL_104;
      default:
        if ((v74 & 1) == 0 || (*(_BYTE *)(a1 + 68) & 8) != 0)
        {
LABEL_83:
          v64 = PBReaderSkipValueWithTag();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if ((v64 & 1) == 0)
          {
            v72 = 0;
            goto LABEL_106;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v39 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v40 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v39;

          }
          v41 = PBUnknownFieldAdd();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if (!v41)
          {
            v72 = 0;
            v73 = &OBJC_IVAR___GEOPDAutocompleteResultSection__readerMarkLength;
            goto LABEL_107;
          }
        }
        goto LABEL_104;
    }
  }
}

void sub_188C467B4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188C46AE8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188C47644(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDAutocompleteEntryQueryCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _BYTE v12[128];
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  v8 = 0u;
  v9 = 0u;
  v10 = 0u;
  v11 = 0u;
  v2 = *(id *)(a1 + 32);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v9;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v9 != v5)
          objc_enumerationMutation(v2);
        -[GEOPDResultRefinement readAll:](*(_QWORD *)(*((_QWORD *)&v8 + 1) + 8 * v6++), 1);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
    }
    while (v4);
  }

  return objc_msgSend(*(id *)(a1 + 40), "readAll:", 1, (_QWORD)v8);
}

unint64_t GEOPDAutocompleteEntryQueryReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 52))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDAutocompleteEntryQueryReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 52) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDAutocompleteEntryQueryReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDAutocompleteEntryQueryReadAllFrom_initialTag;
  Specified = GEOPDAutocompleteEntryQueryReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDAutocompleteEntryQueryCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_188C478E8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAutocompleteEntryQueryReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOPDAutocompleteEntryQueryReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188C47948(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188C47C0C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDAutocompleteEntryQueryIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v2 = *(unsigned __int8 *)(a1 + 68) > 0xFu;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return v2;
}

void sub_188C48210(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188C486FC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDAutocompleteSessionDataReadAllFrom(uint64_t a1, void *a2)
{
  unsigned __int8 *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  int v8;
  char v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  char v17;
  BOOL v18;
  id v19;
  void *v20;
  _BOOL8 v21;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    v7 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      v8 = v3[*v6];
      if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
        break;
      if (v3[*v6])
      {
        v8 = 1;
        break;
      }
      v9 = 0;
      v10 = 0;
      v11 = 0;
      while (1)
      {
        v12 = *v4;
        v13 = *(_QWORD *)&v3[v12];
        v14 = v13 + 1;
        if (v13 == -1 || v14 > *(_QWORD *)&v3[*v5])
          break;
        v15 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v13);
        *(_QWORD *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0)
          goto LABEL_13;
        v9 += 7;
        if (v10++ >= 9)
        {
          v17 = 0;
          v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      v8 = v3[*v6];
      if (v3[*v6])
        v17 = 0;
      else
        v17 = v11;
LABEL_16:
      if (v8)
        v18 = 1;
      else
        v18 = (v17 & 7) == 4;
      if (v18)
        break;
      if (!*(_QWORD *)(a1 + 8))
      {
        v19 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v20 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = v19;

      }
      if ((PBUnknownFieldAdd() & 1) == 0)
        goto LABEL_23;
    }
    v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_188C48D08(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDAutocompleteSessionDataReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOPDAutocompleteSessionDataReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188C48D68(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDAutocompleteSessionDataIsValid(unsigned __int8 *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  int v6;
  char v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v15;
  _BOOL8 v16;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  v5 = (int *)MEMORY[0x1E0D82BB8];
  while (1)
  {
    v6 = a1[*v4];
    if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
      break;
    if (a1[*v4])
    {
      v6 = 1;
      break;
    }
    v7 = 0;
    v8 = 0;
    v9 = 0;
    while (1)
    {
      v10 = *v2;
      v11 = *(_QWORD *)&a1[v10];
      v12 = v11 + 1;
      if (v11 == -1 || v12 > *(_QWORD *)&a1[*v3])
        break;
      v13 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v11);
      *(_QWORD *)&a1[v10] = v12;
      v9 |= (unint64_t)(v13 & 0x7F) << v7;
      if ((v13 & 0x80) == 0)
        goto LABEL_12;
      v7 += 7;
      if (v8++ >= 9)
      {
        LOBYTE(v9) = 0;
        v6 = a1[*v4];
        goto LABEL_14;
      }
    }
    a1[*v4] = 1;
LABEL_12:
    v6 = a1[*v4];
    if (a1[*v4])
      LOBYTE(v9) = 0;
LABEL_14:
    if (v6)
      v15 = 1;
    else
      v15 = (v9 & 7) == 4;
    if (v15)
      break;
    if ((PBReaderSkipValueWithTag() & 1) == 0)
    {
      v16 = 0;
      goto LABEL_22;
    }
  }
  v16 = v6 == 0;
LABEL_22:
  PBReaderRecallMark();
  return v16;
}

BOOL GEOPDClientRankingFeatureFunctionTypeDiscreteReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  uint64_t v18;
  unint64_t v19;
  int v20;
  id v21;
  void *v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  int *v29;
  _BOOL8 v30;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        switch((v10 >> 3))
        {
          case 1u:
            *(_BYTE *)(a1 + 32) |= 2u;
            v18 = *v4;
            v19 = *(_QWORD *)&v3[v18];
            if (v19 <= 0xFFFFFFFFFFFFFFFBLL && v19 + 4 <= *(_QWORD *)&v3[*v5])
            {
              v20 = *(_DWORD *)(*(_QWORD *)&v3[*v7] + v19);
              *(_QWORD *)&v3[v18] = v19 + 4;
            }
            else
            {
              v3[*v6] = 1;
              v20 = 0;
            }
            v29 = &OBJC_IVAR___GEOPDClientRankingFeatureFunctionTypeDiscrete__featureValueThresholdLow;
            goto LABEL_44;
          case 2u:
            *(_BYTE *)(a1 + 32) |= 8u;
            v23 = *v4;
            v24 = *(_QWORD *)&v3[v23];
            if (v24 <= 0xFFFFFFFFFFFFFFFBLL && v24 + 4 <= *(_QWORD *)&v3[*v5])
            {
              v20 = *(_DWORD *)(*(_QWORD *)&v3[*v7] + v24);
              *(_QWORD *)&v3[v23] = v24 + 4;
            }
            else
            {
              v3[*v6] = 1;
              v20 = 0;
            }
            v29 = &OBJC_IVAR___GEOPDClientRankingFeatureFunctionTypeDiscrete__featureWeightLow;
            goto LABEL_44;
          case 3u:
            *(_BYTE *)(a1 + 32) |= 1u;
            v25 = *v4;
            v26 = *(_QWORD *)&v3[v25];
            if (v26 <= 0xFFFFFFFFFFFFFFFBLL && v26 + 4 <= *(_QWORD *)&v3[*v5])
            {
              v20 = *(_DWORD *)(*(_QWORD *)&v3[*v7] + v26);
              *(_QWORD *)&v3[v25] = v26 + 4;
            }
            else
            {
              v3[*v6] = 1;
              v20 = 0;
            }
            v29 = &OBJC_IVAR___GEOPDClientRankingFeatureFunctionTypeDiscrete__featureValueThresholdHigh;
            goto LABEL_44;
          case 4u:
            *(_BYTE *)(a1 + 32) |= 4u;
            v27 = *v4;
            v28 = *(_QWORD *)&v3[v27];
            if (v28 <= 0xFFFFFFFFFFFFFFFBLL && v28 + 4 <= *(_QWORD *)&v3[*v5])
            {
              v20 = *(_DWORD *)(*(_QWORD *)&v3[*v7] + v28);
              *(_QWORD *)&v3[v27] = v28 + 4;
            }
            else
            {
              v3[*v6] = 1;
              v20 = 0;
            }
            v29 = &OBJC_IVAR___GEOPDClientRankingFeatureFunctionTypeDiscrete__featureWeightHigh;
LABEL_44:
            *(_DWORD *)(a1 + *v29) = v20;
            break;
          default:
            if (!*(_QWORD *)(a1 + 8))
            {
              v21 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
              v22 = *(void **)(a1 + 8);
              *(_QWORD *)(a1 + 8) = v21;

            }
            if ((PBUnknownFieldAdd() & 1) == 0)
              goto LABEL_47;
            break;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v30 = v3[*v6] == 0;
  }
  else
  {
LABEL_47:
    v30 = 0;
  }
  objc_sync_exit(v3);

  return v30;
}

void sub_188C499A0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDClientRankingFeatureFunctionTypeDiscreteIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v14;
  int v15;
  int v16;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  _BOOL8 v21;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (!a1[*v4])
    {
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = *v4;
          v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = *v4;
      v15 = a1[v14];
      if (a1[v14])
        v8 = 0;
LABEL_14:
      v16 = v8 & 7;
      if (v15 || v16 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
        case 2u:
        case 3u:
        case 4u:
          if (v16 != 5)
            goto LABEL_29;
          v18 = *v2;
          v19 = *(_QWORD *)&a1[v18];
          if (v19 <= 0xFFFFFFFFFFFFFFFBLL && (v20 = v19 + 4, v20 <= *(_QWORD *)&a1[*v3]))
            *(_QWORD *)&a1[v18] = v20;
          else
            a1[v14] = 1;
          goto LABEL_26;
        default:
          if (!PBReaderSkipValueWithTag())
          {
LABEL_29:
            v21 = 0;
            goto LABEL_28;
          }
LABEL_26:
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_27;
          break;
      }
    }
  }
LABEL_27:
  v21 = a1[*v4] == 0;
LABEL_28:
  PBReaderRecallMark();
  return v21;
}

BOOL GEOPDClientRankingFeatureFunctionTypeLinearReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  id v26;
  void *v27;
  int *v28;
  _BOOL8 v29;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      while (1)
      {
        if (v3[*v6])
          goto LABEL_43;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          goto LABEL_43;
        v18 = v10 >> 3;
        if ((v10 >> 3) == 3)
        {
          *(_BYTE *)(a1 + 28) |= 2u;
          v22 = *v4;
          v23 = *(_QWORD *)&v3[v22];
          if (v23 <= 0xFFFFFFFFFFFFFFFBLL && v23 + 4 <= *(_QWORD *)&v3[*v5])
          {
            v21 = *(_DWORD *)(*(_QWORD *)&v3[*v7] + v23);
            *(_QWORD *)&v3[v22] = v23 + 4;
          }
          else
          {
            v3[*v6] = 1;
            v21 = 0;
          }
          v28 = &OBJC_IVAR___GEOPDClientRankingFeatureFunctionTypeLinear__featureMeanValue;
          goto LABEL_41;
        }
        if ((_DWORD)v18 == 2)
          break;
        if ((_DWORD)v18 == 1)
        {
          *(_BYTE *)(a1 + 28) |= 4u;
          v19 = *v4;
          v20 = *(_QWORD *)&v3[v19];
          if (v20 <= 0xFFFFFFFFFFFFFFFBLL && v20 + 4 <= *(_QWORD *)&v3[*v5])
          {
            v21 = *(_DWORD *)(*(_QWORD *)&v3[*v7] + v20);
            *(_QWORD *)&v3[v19] = v20 + 4;
          }
          else
          {
            v3[*v6] = 1;
            v21 = 0;
          }
          v28 = &OBJC_IVAR___GEOPDClientRankingFeatureFunctionTypeLinear__featureWeight;
LABEL_41:
          *(_DWORD *)(a1 + *v28) = v21;
          goto LABEL_42;
        }
        if (!*(_QWORD *)(a1 + 8))
        {
          v26 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
          v27 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = v26;

        }
        if ((PBUnknownFieldAdd() & 1) == 0)
          goto LABEL_44;
LABEL_42:
        if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
          goto LABEL_43;
      }
      *(_BYTE *)(a1 + 28) |= 1u;
      v24 = *v4;
      v25 = *(_QWORD *)&v3[v24];
      if (v25 <= 0xFFFFFFFFFFFFFFFBLL && v25 + 4 <= *(_QWORD *)&v3[*v5])
      {
        v21 = *(_DWORD *)(*(_QWORD *)&v3[*v7] + v25);
        *(_QWORD *)&v3[v24] = v25 + 4;
      }
      else
      {
        v3[*v6] = 1;
        v21 = 0;
      }
      v28 = &OBJC_IVAR___GEOPDClientRankingFeatureFunctionTypeLinear__featureMaxRelativeValue;
      goto LABEL_41;
    }
LABEL_43:
    v29 = v3[*v6] == 0;
  }
  else
  {
LABEL_44:
    v29 = 0;
  }
  objc_sync_exit(v3);

  return v29;
}

void sub_188C4A8CC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDClientRankingFeatureFunctionTypeLinearIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v14;
  int v15;
  int v16;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  _BOOL8 v22;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = *v4;
          v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = *v4;
      v15 = a1[v14];
      if (a1[v14])
        v8 = 0;
LABEL_14:
      v16 = v8 & 7;
      if (v15 || v16 == 4)
        break;
      v18 = v8 >> 3;
      if ((v8 >> 3) == 3 || (_DWORD)v18 == 2 || (_DWORD)v18 == 1)
      {
        if (v16 != 5)
          goto LABEL_31;
        v19 = *v2;
        v20 = *(_QWORD *)&a1[v19];
        if (v20 <= 0xFFFFFFFFFFFFFFFBLL && (v21 = v20 + 4, v21 <= *(_QWORD *)&a1[*v3]))
          *(_QWORD *)&a1[v19] = v21;
        else
          a1[v14] = 1;
      }
      else if (!PBReaderSkipValueWithTag())
      {
LABEL_31:
        v22 = 0;
        goto LABEL_30;
      }
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v22 = a1[*v4] == 0;
LABEL_30:
  PBReaderRecallMark();
  return v22;
}

void sub_188C4B0A4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDClientRankingFeatureMetadataReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  int *v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  BOOL v28;
  int v29;
  unint64_t v31;
  BOOL v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  char v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  id v44;
  void *v45;
  int v46;
  GEOPDClientRankingFeatureTypeSource *v47;
  uint64_t v48;
  char v49;
  unsigned int v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  void *v55;
  char v56;
  uint64_t v57;
  __int16 v58;
  int v59;
  __int16 v60;
  void *v61;
  int v63;
  int *v64;
  char v65;
  char v66;
  char v67;
  char v68;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 68);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 64));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 84)), (uint16x4_t)0xFFFAFFF9FFFBFFFCLL), (int8x8_t)0x1000100010001))+ ((*(_WORD *)(a1 + 84) >> 3) & 1)+ ((*(_WORD *)(a1 + 84) >> 2) & 1));
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 > 3;
        v65 = v16 & ~(_BYTE)v11 | v9;
        v66 = v16 | v11 | v65;
        if ((((v16 | v11) | v8) & 1) != 0)
          v17 = 0;
        else
          v17 = a3;
        v67 = (v17 == 0) | v16 | v11;
        v68 = v16 | v11;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v7;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v19))
      goto LABEL_111;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0)
        goto LABEL_25;
      v21 += 7;
      v28 = v22++ >= 9;
      if (v28)
      {
        v23 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_25:
    v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_27:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_111:
      v63 = 1;
      goto LABEL_112;
    }
    v31 = v23 >> 3;
    v32 = v68;
    if ((v67 & 1) == 0)
    {
      v33 = v17;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if ((v8 & 1) == 0)
          goto LABEL_87;
        v37 = 0;
        v38 = 0;
        v39 = 0;
        *(_WORD *)(a1 + 84) |= 1u;
        while (1)
        {
          v40 = *v18;
          v41 = *(_QWORD *)(v3 + v40);
          v42 = v41 + 1;
          if (v41 == -1 || v42 > *(_QWORD *)(v3 + *v6))
            break;
          v43 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v41);
          *(_QWORD *)(v3 + v40) = v42;
          v39 |= (unint64_t)(v43 & 0x7F) << v37;
          if ((v43 & 0x80) == 0)
            goto LABEL_90;
          v37 += 7;
          v28 = v38++ >= 9;
          if (v28)
          {
            LODWORD(v39) = 0;
            goto LABEL_92;
          }
        }
        *(_BYTE *)(v3 + *v19) = 1;
LABEL_90:
        if (*(_BYTE *)(v3 + *v19))
          LODWORD(v39) = 0;
LABEL_92:
        v57 = 76;
        goto LABEL_97;
      case 2:
        if (!v32)
          goto LABEL_87;
        if ((*(_WORD *)(a1 + 84) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_131;
          v58 = *(_WORD *)(a1 + 84) << 10;
          goto LABEL_108;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_131;
        v47 = objc_alloc_init(GEOPDClientRankingFeatureTypeSource);
        if (!GEOPDClientRankingFeatureTypeSourceReadAllFrom((uint64_t)v47, (void *)v3))
          goto LABEL_130;
        PBReaderRecallMark();
        v48 = 40;
        goto LABEL_86;
      case 3:
        if (!v32)
          goto LABEL_87;
        if ((*(_WORD *)(a1 + 84) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_131;
          v58 = *(_WORD *)(a1 + 84) << 11;
          goto LABEL_108;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_131;
        v47 = objc_alloc_init(GEOPDClientRankingFeatureTypeResult);
        if (!GEOPDClientRankingFeatureTypeResultReadAllFrom((uint64_t)v47, (void *)v3))
          goto LABEL_130;
        PBReaderRecallMark();
        v48 = 32;
        goto LABEL_86;
      case 4:
        if ((v8 & 1) == 0)
          goto LABEL_87;
        v49 = 0;
        v50 = 0;
        v39 = 0;
        *(_WORD *)(a1 + 84) |= 2u;
        while (2)
        {
          v51 = *v18;
          v52 = *(_QWORD *)(v3 + v51);
          v53 = v52 + 1;
          if (v52 == -1 || v53 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v19) = 1;
          }
          else
          {
            v54 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v52);
            *(_QWORD *)(v3 + v51) = v53;
            v39 |= (unint64_t)(v54 & 0x7F) << v49;
            if (v54 < 0)
            {
              v49 += 7;
              v28 = v50++ >= 9;
              if (v28)
              {
                LODWORD(v39) = 0;
                goto LABEL_96;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v19))
          LODWORD(v39) = 0;
LABEL_96:
        v57 = 80;
LABEL_97:
        *(_DWORD *)(a1 + v57) = v39;
        goto LABEL_110;
      case 5:
        if (!v32)
          goto LABEL_87;
        if ((*(_WORD *)(a1 + 84) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_131;
          v58 = *(_WORD *)(a1 + 84) << 8;
          goto LABEL_108;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_131;
        v47 = objc_alloc_init(GEOPDClientRankingFeatureFunctionTypeLinear);
        if (!GEOPDClientRankingFeatureFunctionTypeLinearReadAllFrom((uint64_t)v47, (void *)v3))
          goto LABEL_130;
        PBReaderRecallMark();
        v48 = 56;
        goto LABEL_86;
      case 6:
        if (!v32)
          goto LABEL_87;
        if ((*(_WORD *)(a1 + 84) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_131;
          v58 = *(_WORD *)(a1 + 84) << 9;
          goto LABEL_108;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_131;
        v47 = objc_alloc_init(GEOPDClientRankingFeatureFunctionTypeDiscrete);
        if (!GEOPDClientRankingFeatureFunctionTypeDiscreteReadAllFrom((uint64_t)v47, (void *)v3))
          goto LABEL_130;
        PBReaderRecallMark();
        v48 = 48;
        goto LABEL_86;
      case 7:
        if (!v32)
          goto LABEL_87;
        if ((*(_WORD *)(a1 + 84) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_131;
          v58 = *(_WORD *)(a1 + 84) << 12;
LABEL_108:
          v7 += v58 >> 15;
LABEL_109:
          v19 = (int *)MEMORY[0x1E0D82BC8];
          v20 = (int *)MEMORY[0x1E0D82BB8];
          goto LABEL_110;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_131;
        v47 = objc_alloc_init(GEOPDClientRankingFeatureTypeComposite);
        if (GEOPDClientRankingFeatureTypeCompositeReadAllFrom((uint64_t)v47, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          v48 = 24;
LABEL_86:
          v55 = *(void **)(a1 + v48);
          *(_QWORD *)(a1 + v48) = v47;

          --v7;
          goto LABEL_109;
        }
LABEL_130:

LABEL_131:
        v63 = 0;
        v64 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
        v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_113:
        if ((v65 & 1) != 0)
LABEL_114:
          *(_WORD *)(a1 + v64[784]) |= 4u;
        if (v68 & 1 | ((v63 & 1) == 0))
        {
          *(_WORD *)(a1 + v64[784]) |= 0x20u;
          *(_WORD *)(a1 + v64[784]) |= 0x10u;
          *(_WORD *)(a1 + v64[784]) |= 0x80u;
          *(_WORD *)(a1 + v64[784]) |= 0x40u;
          *(_WORD *)(a1 + v64[784]) |= 8u;
        }
        else if (v17)
        {
          while (1)
          {
            v59 = *v17++;
            v60 = 32;
            switch(v59)
            {
              case 0:
                goto LABEL_124;
              case 2:
                goto LABEL_123;
              case 3:
                v60 = 16;
                goto LABEL_123;
              case 5:
                v60 = 128;
                goto LABEL_123;
              case 6:
                v60 = 64;
                goto LABEL_123;
              case 7:
                v60 = 8;
LABEL_123:
                *(_WORD *)(a1 + v64[784]) |= v60;
                break;
              default:
                continue;
            }
          }
        }
LABEL_124:
        if (v63)
          v3 = *(_BYTE *)(v3 + *v19) == 0;
        else
          v3 = 0;
        if ((v68 & 1) != 0)
        {
          v61 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      default:
        if ((v65 & 1) == 0 || (*(_WORD *)(a1 + 84) & 4) != 0)
        {
LABEL_87:
          v56 = PBReaderSkipValueWithTag();
          v20 = (int *)MEMORY[0x1E0D82BB8];
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if ((v56 & 1) == 0)
          {
            v63 = 0;
LABEL_112:
            v64 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
            goto LABEL_113;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v44 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v45 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v44;

          }
          v46 = PBUnknownFieldAdd();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          v20 = (int *)MEMORY[0x1E0D82BB8];
          if (!v46)
          {
            v63 = 0;
            v64 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
            goto LABEL_114;
          }
        }
LABEL_110:
        if (!(v66 & 1 | (v7 != 0)))
          goto LABEL_111;
        continue;
    }
  }
}

void sub_188C4BA98(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188C4BBEC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188C4BCD4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188C4BDBC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188C4C334(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDClientRankingFeatureMetadataReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 68))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDClientRankingFeatureMetadataReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 72));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 64) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 68) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDClientRankingFeatureMetadataReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDClientRankingFeatureMetadataReadAllFrom_initialTag;
  Specified = GEOPDClientRankingFeatureMetadataReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return Specified;
}

void sub_188C4D378(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDClientRankingFeatureMetadataIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  BOOL v13;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  char v28;
  unsigned int v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  uint64_t v35;
  int v36;
  int v37;
  char v39;
  unsigned int v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  int v46;
  int v47;
  char v49;
  unsigned int v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  char v55;
  int v56;
  int v57;
  unsigned int v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  int v63;
  unsigned int v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  int v68;
  unsigned int v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  int v73;
  int v74;
  uint64_t v75;
  unint64_t v76;
  unint64_t v77;
  int v78;
  int v79;
  _BOOL8 v80;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        v13 = v7++ >= 9;
        if (v13)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0)
            goto LABEL_181;
          v17 = 0;
          while (1)
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
              goto LABEL_45;
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if (v21 < 0)
            {
              v22 = v17++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_54;
          }
        case 2u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDSearchClientBehaviorIsValid(a1))
            goto LABEL_181;
          goto LABEL_53;
        case 3u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDClientRankingFeatureTypeResultIsValid(a1))
            goto LABEL_181;
          goto LABEL_53;
        case 4u:
          if ((v8 & 7) != 0)
            goto LABEL_181;
          v23 = 0;
          while (1)
          {
            v24 = *v2;
            v25 = *(_QWORD *)&a1[v24];
            v26 = v25 + 1;
            if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
              break;
            v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
            *(_QWORD *)&a1[v24] = v26;
            if (v27 < 0)
            {
              v22 = v23++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_54;
          }
LABEL_45:
          a1[*v4] = 1;
          continue;
        case 5u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDClientRankingFeatureFunctionTypeLinearIsValid(a1))
            goto LABEL_181;
          goto LABEL_53;
        case 6u:
          if (v15 == 2 && PBReaderPlaceMark() && GEOPDClientRankingFeatureFunctionTypeDiscreteIsValid(a1))
            goto LABEL_53;
          goto LABEL_181;
        case 7u:
          if (v15 != 2 || !PBReaderPlaceMark())
            goto LABEL_181;
          objc_msgSend(a1, "position", 0, 0);
          objc_msgSend(a1, "length");
          break;
        default:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_181;
          continue;
      }
      while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3] && !a1[*v4])
      {
        v28 = 0;
        v29 = 0;
        v30 = 0;
        while (1)
        {
          v31 = *v2;
          v32 = *(_QWORD *)&a1[v31];
          v33 = v32 + 1;
          if (v32 == -1 || v33 > *(_QWORD *)&a1[*v3])
            break;
          v34 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v32);
          *(_QWORD *)&a1[v31] = v33;
          v30 |= (unint64_t)(v34 & 0x7F) << v28;
          if ((v34 & 0x80) == 0)
            goto LABEL_69;
          v28 += 7;
          v13 = v29++ >= 9;
          if (v13)
          {
            v30 = 0;
            v35 = *v4;
            v36 = a1[v35];
            goto LABEL_71;
          }
        }
        a1[*v4] = 1;
LABEL_69:
        v35 = *v4;
        v36 = a1[v35];
        if (a1[v35])
          v30 = 0;
LABEL_71:
        v37 = v30 & 7;
        if (v36 || v37 == 4)
          break;
        if ((v30 >> 3) == 2)
        {
          if (v37 == 5)
          {
            v75 = *v2;
            v76 = *(_QWORD *)&a1[v75];
            if (v76 <= 0xFFFFFFFFFFFFFFFBLL && (v77 = v76 + 4, v77 <= *(_QWORD *)&a1[*v3]))
              *(_QWORD *)&a1[v75] = v77;
            else
              a1[v35] = 1;
            continue;
          }
          goto LABEL_180;
        }
        if ((v30 >> 3) == 1)
        {
          if (v37 == 2 && PBReaderPlaceMark())
          {
            objc_msgSend(a1, "position");
            objc_msgSend(a1, "length");
LABEL_80:
            while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3] && !a1[*v4])
            {
              v39 = 0;
              v40 = 0;
              v41 = 0;
              while (1)
              {
                v42 = *v2;
                v43 = *(_QWORD *)&a1[v42];
                v44 = v43 + 1;
                if (v43 == -1 || v44 > *(_QWORD *)&a1[*v3])
                  break;
                v45 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v43);
                *(_QWORD *)&a1[v42] = v44;
                v41 |= (unint64_t)(v45 & 0x7F) << v39;
                if ((v45 & 0x80) == 0)
                  goto LABEL_90;
                v39 += 7;
                v13 = v40++ >= 9;
                if (v13)
                {
                  v41 = 0;
                  v46 = a1[*v4];
                  goto LABEL_92;
                }
              }
              a1[*v4] = 1;
LABEL_90:
              v46 = a1[*v4];
              if (a1[*v4])
                v41 = 0;
LABEL_92:
              v47 = v41 & 7;
              if (v46 || v47 == 4)
                break;
              if ((v41 >> 3) == 2)
              {
                if ((v41 & 7) != 0)
                  goto LABEL_179;
                v69 = 0;
                while (1)
                {
                  v70 = *v2;
                  v71 = *(_QWORD *)&a1[v70];
                  v72 = v71 + 1;
                  if (v71 == -1 || v72 > *(_QWORD *)&a1[*v3])
                    break;
                  v73 = *(char *)(*(_QWORD *)&a1[*v5] + v71);
                  *(_QWORD *)&a1[v70] = v72;
                  if (v73 < 0)
                  {
                    v22 = v69++ > 8;
                    if (!v22)
                      continue;
                  }
                  goto LABEL_80;
                }
                a1[*v4] = 1;
              }
              else if ((v41 >> 3) == 1)
              {
                if (v47 != 2 || !PBReaderPlaceMark())
                  goto LABEL_179;
                objc_msgSend(a1, "position");
                objc_msgSend(a1, "length");
LABEL_101:
                while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3] && !a1[*v4])
                {
                  v49 = 0;
                  v50 = 0;
                  v51 = 0;
                  while (1)
                  {
                    v52 = *v2;
                    v53 = *(_QWORD *)&a1[v52];
                    v54 = v53 + 1;
                    if (v53 == -1 || v54 > *(_QWORD *)&a1[*v3])
                      break;
                    v55 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v53);
                    *(_QWORD *)&a1[v52] = v54;
                    v51 |= (unint64_t)(v55 & 0x7F) << v49;
                    if ((v55 & 0x80) == 0)
                      goto LABEL_111;
                    v49 += 7;
                    v13 = v50++ >= 9;
                    if (v13)
                    {
                      v51 = 0;
                      v56 = a1[*v4];
                      goto LABEL_113;
                    }
                  }
                  a1[*v4] = 1;
LABEL_111:
                  v56 = a1[*v4];
                  if (a1[*v4])
                    v51 = 0;
LABEL_113:
                  v57 = v51 & 7;
                  if (v56 || v57 == 4)
                    break;
                  switch((v51 >> 3))
                  {
                    case 1u:
                      if ((v51 & 7) != 0)
                        goto LABEL_178;
                      v59 = 0;
                      while (1)
                      {
                        v60 = *v2;
                        v61 = *(_QWORD *)&a1[v60];
                        v62 = v61 + 1;
                        if (v61 == -1 || v62 > *(_QWORD *)&a1[*v3])
                          goto LABEL_144;
                        v63 = *(char *)(*(_QWORD *)&a1[*v5] + v61);
                        *(_QWORD *)&a1[v60] = v62;
                        if (v63 < 0)
                        {
                          v22 = v59++ > 8;
                          if (!v22)
                            continue;
                        }
                        goto LABEL_101;
                      }
                    case 2u:
                      if (v57 != 2 || !PBReaderPlaceMark() || !GEOPDSearchClientBehaviorIsValid(a1))
                        goto LABEL_178;
                      goto LABEL_152;
                    case 3u:
                      if (v57 != 2
                        || !PBReaderPlaceMark()
                        || !GEOPDClientRankingFeatureTypeResultIsValid(a1))
                      {
                        goto LABEL_178;
                      }
                      goto LABEL_152;
                    case 4u:
                      if ((v51 & 7) != 0)
                        goto LABEL_178;
                      v64 = 0;
                      break;
                    case 5u:
                      if (v57 != 2
                        || !PBReaderPlaceMark()
                        || !GEOPDClientRankingFeatureFunctionTypeLinearIsValid(a1))
                      {
                        goto LABEL_178;
                      }
                      goto LABEL_152;
                    case 6u:
                      if (v57 != 2
                        || !PBReaderPlaceMark()
                        || !GEOPDClientRankingFeatureFunctionTypeDiscreteIsValid(a1))
                      {
                        goto LABEL_178;
                      }
LABEL_152:
                      PBReaderRecallMark();
                      continue;
                    default:
                      if ((PBReaderSkipValueWithTag() & 1) != 0)
                        continue;
LABEL_178:
                      PBReaderRecallMark();
                      goto LABEL_179;
                  }
                  while (1)
                  {
                    v65 = *v2;
                    v66 = *(_QWORD *)&a1[v65];
                    v67 = v66 + 1;
                    if (v66 == -1 || v67 > *(_QWORD *)&a1[*v3])
                      break;
                    v68 = *(char *)(*(_QWORD *)&a1[*v5] + v66);
                    *(_QWORD *)&a1[v65] = v67;
                    if (v68 < 0)
                    {
                      v22 = v64++ > 8;
                      if (!v22)
                        continue;
                    }
                    goto LABEL_101;
                  }
LABEL_144:
                  a1[*v4] = 1;
                }
                v74 = a1[*v4];
                PBReaderRecallMark();
                if (v74)
                {
LABEL_179:
                  PBReaderRecallMark();
                  goto LABEL_180;
                }
                PBReaderRecallMark();
              }
              else if ((PBReaderSkipValueWithTag() & 1) == 0)
              {
                goto LABEL_179;
              }
            }
            v78 = a1[*v4];
            PBReaderRecallMark();
            if (!v78)
            {
              PBReaderRecallMark();
              continue;
            }
          }
LABEL_180:
          PBReaderRecallMark();
LABEL_181:
          PBReaderRecallMark();
          return 0;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_180;
      }
      v79 = a1[*v4];
      PBReaderRecallMark();
      if (v79)
        goto LABEL_181;
LABEL_53:
      PBReaderRecallMark();
LABEL_54:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v80 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v80;
}

BOOL GEOPDClientRankingFeatureTypeResultIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int v20;
  _BOOL8 v22;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      if (v14 || (v8 & 7) == 4)
        break;
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0)
          goto LABEL_33;
        v16 = 0;
        while (1)
        {
          v17 = *v2;
          v18 = *(_QWORD *)&a1[v17];
          v19 = v18 + 1;
          if (v18 == -1 || v19 > *(_QWORD *)&a1[*v3])
            break;
          v20 = *(char *)(*(_QWORD *)&a1[*v5] + v18);
          *(_QWORD *)&a1[v17] = v19;
          if (v20 < 0 && v16++ <= 8)
            continue;
          goto LABEL_30;
        }
        a1[*v4] = 1;
      }
      else if (!PBReaderSkipValueWithTag())
      {
LABEL_33:
        v22 = 0;
        goto LABEL_32;
      }
LABEL_30:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v22 = a1[*v4] == 0;
LABEL_32:
  PBReaderRecallMark();
  return v22;
}

void sub_188C4E094(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDClientRankingFeatureMetadataIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  v2 = (*(_WORD *)(a1 + 84) & 0x1F8) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return v2;
}

void sub_188C4E33C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDClientRankingFeatureTypeCompositeReadAllFrom(uint64_t a1, void *a2, int a3)
{
  char *v5;
  int *v6;
  int *v7;
  int *v8;
  int *v9;
  char v10;
  unsigned int v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  int v18;
  GEOPDVariableExponentPair *v20;
  uint64_t v21;
  unint64_t v22;
  int v23;
  id v24;
  void *v25;
  _BOOL8 v26;

  v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    v6 = (int *)MEMORY[0x1E0D82BF0];
    v7 = (int *)MEMORY[0x1E0D82BD8];
    v8 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v5[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v5[*MEMORY[0x1E0D82BD8]])
    {
      v9 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v5[*v8])
          break;
        v10 = 0;
        v11 = 0;
        v12 = 0;
        while (1)
        {
          v13 = *v6;
          v14 = *(_QWORD *)&v5[v13];
          v15 = v14 + 1;
          if (v14 == -1 || v15 > *(_QWORD *)&v5[*v7])
            break;
          v16 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v14);
          *(_QWORD *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0)
            goto LABEL_13;
          v10 += 7;
          if (v11++ >= 9)
          {
            v12 = 0;
            v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        v18 = v5[*v8];
        if (v5[*v8])
          v12 = 0;
LABEL_15:
        if (v18 || (v12 & 7) == 4)
          break;
        if ((v12 >> 3) == 2)
        {
          *(_BYTE *)(a1 + 28) |= 1u;
          v21 = *v6;
          v22 = *(_QWORD *)&v5[v21];
          if (v22 <= 0xFFFFFFFFFFFFFFFBLL && v22 + 4 <= *(_QWORD *)&v5[*v7])
          {
            v23 = *(_DWORD *)(*(_QWORD *)&v5[*v9] + v22);
            *(_QWORD *)&v5[v21] = v22 + 4;
          }
          else
          {
            v5[*v8] = 1;
            v23 = 0;
          }
          *(_DWORD *)(a1 + 24) = v23;
        }
        else if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_36;
          v20 = objc_alloc_init(GEOPDVariableExponentPair);
          if (!GEOPDVariableExponentPairReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_36;
          }
          PBReaderRecallMark();
          -[GEOPDClientRankingFeatureTypeComposite addVariableExponentPair:](a1, v20);

        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v24 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v25 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v24;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_36;
        }
      }
      while (*(_QWORD *)&v5[*v6] < *(_QWORD *)&v5[*v7]);
    }
    v26 = v5[*v8] == 0;
  }
  else
  {
LABEL_36:
    v26 = 0;
  }
  objc_sync_exit(v5);

  return v26;
}

void sub_188C4F028(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDClientRankingFeatureTypeResultReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  id v25;
  void *v26;
  _BOOL8 v27;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 1)
        {
          v18 = 0;
          v19 = 0;
          v20 = 0;
          *(_BYTE *)(a1 + 20) |= 1u;
          while (1)
          {
            v21 = *v4;
            v22 = *(_QWORD *)&v3[v21];
            v23 = v22 + 1;
            if (v22 == -1 || v23 > *(_QWORD *)&v3[*v5])
              break;
            v24 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v22);
            *(_QWORD *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0)
              goto LABEL_32;
            v18 += 7;
            v15 = v19++ >= 9;
            if (v15)
            {
              LODWORD(v20) = 0;
              goto LABEL_34;
            }
          }
          v3[*v6] = 1;
LABEL_32:
          if (v3[*v6])
            LODWORD(v20) = 0;
LABEL_34:
          *(_DWORD *)(a1 + 16) = v20;
        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v25 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v26 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v25;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_37;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v27 = v3[*v6] == 0;
  }
  else
  {
LABEL_37:
    v27 = 0;
  }
  objc_sync_exit(v3);

  return v27;
}

void sub_188C4FFFC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDClientRankingFeatureTypeSourceReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  BOOL v25;
  int *v26;
  char v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  id v33;
  void *v34;
  _BOOL8 v35;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      while (1)
      {
        if (v3[*v6])
          goto LABEL_49;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          goto LABEL_49;
        if ((v10 >> 3) == 2)
          break;
        if ((v10 >> 3) == 1)
        {
          v18 = 0;
          v19 = 0;
          v20 = 0;
          *(_BYTE *)(a1 + 24) |= 2u;
          while (1)
          {
            v21 = *v4;
            v22 = *(_QWORD *)&v3[v21];
            v23 = v22 + 1;
            if (v22 == -1 || v23 > *(_QWORD *)&v3[*v5])
            {
              v26 = &OBJC_IVAR___GEOPDClientRankingFeatureTypeSource__suggestionType;
              goto LABEL_41;
            }
            v24 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v22);
            *(_QWORD *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0)
              break;
            v18 += 7;
            v25 = v19++ > 8;
            if (v25)
            {
              LODWORD(v20) = 0;
              v26 = &OBJC_IVAR___GEOPDClientRankingFeatureTypeSource__suggestionType;
              goto LABEL_44;
            }
          }
          v26 = &OBJC_IVAR___GEOPDClientRankingFeatureTypeSource__suggestionType;
LABEL_42:
          if (v3[*v6])
            LODWORD(v20) = 0;
LABEL_44:
          *(_DWORD *)(a1 + *v26) = v20;
          goto LABEL_45;
        }
        if (!*(_QWORD *)(a1 + 8))
        {
          v33 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
          v34 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = v33;

        }
        if ((PBUnknownFieldAdd() & 1) == 0)
          goto LABEL_50;
LABEL_45:
        if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
          goto LABEL_49;
      }
      v27 = 0;
      v28 = 0;
      v20 = 0;
      *(_BYTE *)(a1 + 24) |= 1u;
      while (1)
      {
        v29 = *v4;
        v30 = *(_QWORD *)&v3[v29];
        v31 = v30 + 1;
        if (v30 == -1 || v31 > *(_QWORD *)&v3[*v5])
          break;
        v32 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v30);
        *(_QWORD *)&v3[v29] = v31;
        v20 |= (unint64_t)(v32 & 0x7F) << v27;
        if ((v32 & 0x80) == 0)
        {
          v26 = &OBJC_IVAR___GEOPDClientRankingFeatureTypeSource__serverEntryType;
          goto LABEL_42;
        }
        v27 += 7;
        v25 = v28++ > 8;
        if (v25)
        {
          LODWORD(v20) = 0;
          v26 = &OBJC_IVAR___GEOPDClientRankingFeatureTypeSource__serverEntryType;
          goto LABEL_44;
        }
      }
      v26 = &OBJC_IVAR___GEOPDClientRankingFeatureTypeSource__serverEntryType;
LABEL_41:
      v3[*v6] = 1;
      goto LABEL_42;
    }
LABEL_49:
    v35 = v3[*v6] == 0;
  }
  else
  {
LABEL_50:
    v35 = 0;
  }
  objc_sync_exit(v3);

  return v35;
}

void sub_188C50CB8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDClientRankingFeatureUnitReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  char v15;
  unsigned __int8 v16;
  int *v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  BOOL v28;
  int v29;
  unint64_t v31;
  BOOL v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  char v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  id v44;
  void *v45;
  int v46;
  GEOPDClientRankingFeatureTypeSource *v47;
  uint64_t v48;
  char v49;
  unsigned int v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  void *v55;
  char v56;
  uint64_t v57;
  char v58;
  int v59;
  char v60;
  void *v61;
  int v63;
  int *v64;
  char v65;
  char v66;
  char v67;
  BOOL v68;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 60);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 56));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = (vaddv_s16((int16x4_t)(*(_QWORD *)&vshl_u16((uint16x4_t)(*(_QWORD *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 76)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFBFFFAFFFCFFFDLL) & 0xFF01FF01FF01FF01))+ ((*(_BYTE *)(a1 + 76) & 4) != 0));
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v11;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_9;
      case 0:
        v14 = v11 > 2;
        v15 = v14 & ~(_BYTE)v10 | v9;
        v16 = v14 | v10;
        v65 = v15;
        v66 = v16 | v15;
        if (((v16 | v8) & 1) != 0)
          v17 = 0;
        else
          v17 = a3;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v67 = (v17 == 0) | v16;
        v68 = v16;
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_7:
        v12 = v9;
LABEL_8:
        v13 = v10;
LABEL_9:
        ++v7;
        v9 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v19))
      goto LABEL_103;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0)
        goto LABEL_24;
      v21 += 7;
      v28 = v22++ >= 9;
      if (v28)
      {
        v23 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_26;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_24:
    v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_26:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_103:
      v63 = 1;
      goto LABEL_104;
    }
    v31 = v23 >> 3;
    v32 = v68;
    if ((v67 & 1) == 0)
    {
      v33 = v17;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if ((v8 & 1) == 0)
          goto LABEL_81;
        v37 = 0;
        v38 = 0;
        v39 = 0;
        *(_BYTE *)(a1 + 76) |= 1u;
        while (1)
        {
          v40 = *v18;
          v41 = *(_QWORD *)(v3 + v40);
          v42 = v41 + 1;
          if (v41 == -1 || v42 > *(_QWORD *)(v3 + *v6))
            break;
          v43 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v41);
          *(_QWORD *)(v3 + v40) = v42;
          v39 |= (unint64_t)(v43 & 0x7F) << v37;
          if ((v43 & 0x80) == 0)
            goto LABEL_84;
          v37 += 7;
          v28 = v38++ >= 9;
          if (v28)
          {
            LODWORD(v39) = 0;
            goto LABEL_86;
          }
        }
        *(_BYTE *)(v3 + *v19) = 1;
LABEL_84:
        if (*(_BYTE *)(v3 + *v19))
          LODWORD(v39) = 0;
LABEL_86:
        v57 = 68;
        goto LABEL_91;
      case 2:
        if (!v32)
          goto LABEL_81;
        if ((*(_BYTE *)(a1 + 76) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_122;
          v58 = 8 * *(_BYTE *)(a1 + 76);
          goto LABEL_100;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_122;
        v47 = objc_alloc_init(GEOPDClientRankingFeatureTypeSource);
        if (!GEOPDClientRankingFeatureTypeSourceReadAllFrom((uint64_t)v47, (void *)v3))
          goto LABEL_121;
        PBReaderRecallMark();
        v48 = 32;
        goto LABEL_80;
      case 3:
        if (!v32)
          goto LABEL_81;
        if ((*(_BYTE *)(a1 + 76) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_122;
          v58 = 16 * *(_BYTE *)(a1 + 76);
          goto LABEL_100;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_122;
        v47 = objc_alloc_init(GEOPDClientRankingFeatureTypeResult);
        if (!GEOPDClientRankingFeatureTypeResultReadAllFrom((uint64_t)v47, (void *)v3))
          goto LABEL_121;
        PBReaderRecallMark();
        v48 = 24;
        goto LABEL_80;
      case 4:
        if ((v8 & 1) == 0)
          goto LABEL_81;
        v49 = 0;
        v50 = 0;
        v39 = 0;
        *(_BYTE *)(a1 + 76) |= 2u;
        while (2)
        {
          v51 = *v18;
          v52 = *(_QWORD *)(v3 + v51);
          v53 = v52 + 1;
          if (v52 == -1 || v53 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v19) = 1;
          }
          else
          {
            v54 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v52);
            *(_QWORD *)(v3 + v51) = v53;
            v39 |= (unint64_t)(v54 & 0x7F) << v49;
            if (v54 < 0)
            {
              v49 += 7;
              v28 = v50++ >= 9;
              if (v28)
              {
                LODWORD(v39) = 0;
                goto LABEL_90;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v19))
          LODWORD(v39) = 0;
LABEL_90:
        v57 = 72;
LABEL_91:
        *(_DWORD *)(a1 + v57) = v39;
        goto LABEL_102;
      case 5:
        if (!v32)
          goto LABEL_81;
        if ((*(_BYTE *)(a1 + 76) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_122;
          v58 = 2 * *(_BYTE *)(a1 + 76);
          goto LABEL_100;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_122;
        v47 = objc_alloc_init(GEOPDClientRankingFeatureFunctionTypeLinear);
        if (!GEOPDClientRankingFeatureFunctionTypeLinearReadAllFrom((uint64_t)v47, (void *)v3))
          goto LABEL_121;
        PBReaderRecallMark();
        v48 = 48;
        goto LABEL_80;
      case 6:
        if (!v32)
          goto LABEL_81;
        if ((*(_BYTE *)(a1 + 76) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_122;
          v58 = 4 * *(_BYTE *)(a1 + 76);
LABEL_100:
          v7 += v58 >> 7;
LABEL_101:
          v19 = (int *)MEMORY[0x1E0D82BC8];
          goto LABEL_102;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_122;
        v47 = objc_alloc_init(GEOPDClientRankingFeatureFunctionTypeDiscrete);
        if (GEOPDClientRankingFeatureFunctionTypeDiscreteReadAllFrom((uint64_t)v47, (void *)v3))
        {
          PBReaderRecallMark();
          v48 = 40;
LABEL_80:
          v55 = *(void **)(a1 + v48);
          *(_QWORD *)(a1 + v48) = v47;

          --v7;
          goto LABEL_101;
        }
LABEL_121:

LABEL_122:
        v63 = 0;
        v64 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
        v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_105:
        if ((v65 & 1) != 0)
LABEL_106:
          *(_BYTE *)(a1 + v64[805]) |= 4u;
        if (v68 || (v63 & 1) == 0)
        {
          *(_BYTE *)(a1 + v64[805]) |= 0x10u;
          *(_BYTE *)(a1 + v64[805]) |= 8u;
          *(_BYTE *)(a1 + v64[805]) |= 0x40u;
          *(_BYTE *)(a1 + v64[805]) |= 0x20u;
        }
        else if (v17)
        {
          while (1)
          {
            v59 = *v17++;
            v60 = 16;
            switch(v59)
            {
              case 0:
                goto LABEL_115;
              case 2:
                goto LABEL_114;
              case 3:
                v60 = 8;
                goto LABEL_114;
              case 5:
                v60 = 64;
                goto LABEL_114;
              case 6:
                v60 = 32;
LABEL_114:
                *(_BYTE *)(a1 + v64[805]) |= v60;
                break;
              default:
                continue;
            }
          }
        }
LABEL_115:
        if (v63)
          v3 = *(_BYTE *)(v3 + *v19) == 0;
        else
          v3 = 0;
        if (v68)
        {
          v61 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      default:
        if ((v65 & 1) == 0 || (*(_BYTE *)(a1 + 76) & 4) != 0)
        {
LABEL_81:
          v56 = PBReaderSkipValueWithTag();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if ((v56 & 1) == 0)
          {
            v63 = 0;
LABEL_104:
            v64 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
            goto LABEL_105;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v44 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v45 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v44;

          }
          v46 = PBUnknownFieldAdd();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if (!v46)
          {
            v63 = 0;
            v64 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
            goto LABEL_106;
          }
        }
LABEL_102:
        if (!(v66 & 1 | (v7 != 0)))
          goto LABEL_103;
        continue;
    }
  }
}

void sub_188C51910(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188C519F8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188C51F30(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188C52000(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDClientRankingFeatureUnitReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 60))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDClientRankingFeatureUnitReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 60) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDClientRankingFeatureUnitReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDClientRankingFeatureUnitReadAllFrom_initialTag;
  Specified = GEOPDClientRankingFeatureUnitReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_188C52250(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188C52468(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188C5267C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDParsecQueryRankingFeaturesReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  id v23;
  void *v24;
  int *v25;
  _BOOL8 v26;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      while (1)
      {
        if (v3[*v6])
          goto LABEL_37;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          goto LABEL_37;
        if ((v10 >> 3) == 2)
          break;
        if ((v10 >> 3) == 1)
        {
          *(_BYTE *)(a1 + 32) |= 2u;
          v18 = *v4;
          v19 = *(_QWORD *)&v3[v18];
          if (v19 <= 0xFFFFFFFFFFFFFFF7 && v19 + 8 <= *(_QWORD *)&v3[*v5])
          {
            v20 = *(_QWORD *)(*(_QWORD *)&v3[*v7] + v19);
            *(_QWORD *)&v3[v18] = v19 + 8;
          }
          else
          {
            v3[*v6] = 1;
            v20 = 0;
          }
          v25 = &OBJC_IVAR___GEOPDParsecQueryRankingFeatures__poiScore;
LABEL_35:
          *(_QWORD *)(a1 + *v25) = v20;
          goto LABEL_36;
        }
        if (!*(_QWORD *)(a1 + 8))
        {
          v23 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
          v24 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = v23;

        }
        if ((PBUnknownFieldAdd() & 1) == 0)
          goto LABEL_38;
LABEL_36:
        if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
          goto LABEL_37;
      }
      *(_BYTE *)(a1 + 32) |= 1u;
      v21 = *v4;
      v22 = *(_QWORD *)&v3[v21];
      if (v22 <= 0xFFFFFFFFFFFFFFF7 && v22 + 8 <= *(_QWORD *)&v3[*v5])
      {
        v20 = *(_QWORD *)(*(_QWORD *)&v3[*v7] + v22);
        *(_QWORD *)&v3[v21] = v22 + 8;
      }
      else
      {
        v3[*v6] = 1;
        v20 = 0;
      }
      v25 = &OBJC_IVAR___GEOPDParsecQueryRankingFeatures__geoScore;
      goto LABEL_35;
    }
LABEL_37:
    v26 = v3[*v6] == 0;
  }
  else
  {
LABEL_38:
    v26 = 0;
  }
  objc_sync_exit(v3);

  return v26;
}

void sub_188C5317C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDParsecRankingFeaturesReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  id v21;
  void *v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  char v34;
  unsigned int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  BOOL v41;
  uint64_t v42;
  uint64_t v43;
  _BOOL8 v44;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        switch((v10 >> 3))
        {
          case 1u:
            *(_BYTE *)(a1 + 44) |= 4u;
            v18 = *v4;
            v19 = *(_QWORD *)&v3[v18];
            if (v19 <= 0xFFFFFFFFFFFFFFF7 && v19 + 8 <= *(_QWORD *)&v3[*v5])
            {
              v20 = *(_QWORD *)(*(_QWORD *)&v3[*v7] + v19);
              *(_QWORD *)&v3[v18] = v19 + 8;
            }
            else
            {
              v3[*v6] = 1;
              v20 = 0;
            }
            v43 = 32;
            goto LABEL_62;
          case 2u:
            *(_BYTE *)(a1 + 44) |= 2u;
            v23 = *v4;
            v24 = *(_QWORD *)&v3[v23];
            if (v24 <= 0xFFFFFFFFFFFFFFF7 && v24 + 8 <= *(_QWORD *)&v3[*v5])
            {
              v20 = *(_QWORD *)(*(_QWORD *)&v3[*v7] + v24);
              *(_QWORD *)&v3[v23] = v24 + 8;
            }
            else
            {
              v3[*v6] = 1;
              v20 = 0;
            }
            v43 = 24;
            goto LABEL_62;
          case 3u:
            *(_BYTE *)(a1 + 44) |= 1u;
            v25 = *v4;
            v26 = *(_QWORD *)&v3[v25];
            if (v26 <= 0xFFFFFFFFFFFFFFF7 && v26 + 8 <= *(_QWORD *)&v3[*v5])
            {
              v20 = *(_QWORD *)(*(_QWORD *)&v3[*v7] + v26);
              *(_QWORD *)&v3[v25] = v26 + 8;
            }
            else
            {
              v3[*v6] = 1;
              v20 = 0;
            }
            v43 = 16;
LABEL_62:
            *(_QWORD *)(a1 + v43) = v20;
            continue;
          case 4u:
            v27 = 0;
            v28 = 0;
            v29 = 0;
            *(_BYTE *)(a1 + 44) |= 0x10u;
            while (2)
            {
              v30 = *v4;
              v31 = *(_QWORD *)&v3[v30];
              v32 = v31 + 1;
              if (v31 == -1 || v32 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v33 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v31);
                *(_QWORD *)&v3[v30] = v32;
                v29 |= (unint64_t)(v33 & 0x7F) << v27;
                if (v33 < 0)
                {
                  v27 += 7;
                  v15 = v28++ >= 9;
                  if (v15)
                  {
                    v29 = 0;
                    goto LABEL_50;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              v29 = 0;
LABEL_50:
            v41 = v29 != 0;
            v42 = 41;
            goto LABEL_55;
          case 5u:
            v34 = 0;
            v35 = 0;
            v36 = 0;
            *(_BYTE *)(a1 + 44) |= 8u;
            break;
          default:
            if (!*(_QWORD *)(a1 + 8))
            {
              v21 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
              v22 = *(void **)(a1 + 8);
              *(_QWORD *)(a1 + 8) = v21;

            }
            if (!PBUnknownFieldAdd())
              goto LABEL_65;
            continue;
        }
        while (1)
        {
          v37 = *v4;
          v38 = *(_QWORD *)&v3[v37];
          v39 = v38 + 1;
          if (v38 == -1 || v39 > *(_QWORD *)&v3[*v5])
            break;
          v40 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v38);
          *(_QWORD *)&v3[v37] = v39;
          v36 |= (unint64_t)(v40 & 0x7F) << v34;
          if ((v40 & 0x80) == 0)
            goto LABEL_52;
          v34 += 7;
          v15 = v35++ >= 9;
          if (v15)
          {
            v36 = 0;
            goto LABEL_54;
          }
        }
        v3[*v6] = 1;
LABEL_52:
        if (v3[*v6])
          v36 = 0;
LABEL_54:
        v41 = v36 != 0;
        v42 = 40;
LABEL_55:
        *(_BYTE *)(a1 + v42) = v41;
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v44 = v3[*v6] == 0;
  }
  else
  {
LABEL_65:
    v44 = 0;
  }
  objc_sync_exit(v3);

  return v44;
}

void sub_188C5422C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDParsecRankingFeaturesReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOPDParsecRankingFeaturesReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188C5428C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDServerResultScoreMetadataReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  uint64_t v18;
  unint64_t v19;
  int v20;
  id v21;
  void *v22;
  _BOOL8 v23;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 1)
        {
          *(_BYTE *)(a1 + 20) |= 1u;
          v18 = *v4;
          v19 = *(_QWORD *)&v3[v18];
          if (v19 <= 0xFFFFFFFFFFFFFFFBLL && v19 + 4 <= *(_QWORD *)&v3[*v5])
          {
            v20 = *(_DWORD *)(*(_QWORD *)&v3[*v7] + v19);
            *(_QWORD *)&v3[v18] = v19 + 4;
          }
          else
          {
            v3[*v6] = 1;
            v20 = 0;
          }
          *(_DWORD *)(a1 + 16) = v20;
        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v21 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v22 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v21;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_31;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v23 = v3[*v6] == 0;
  }
  else
  {
LABEL_31:
    v23 = 0;
  }
  objc_sync_exit(v3);

  return v23;
}

void sub_188C54F94(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDVariableExponentPairReadAllFrom(uint64_t a1, void *a2, int a3)
{
  char *v5;
  int *v6;
  int *v7;
  int *v8;
  int *v9;
  char v10;
  unsigned int v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  BOOL v17;
  int v18;
  GEOPDClientRankingFeatureUnit *v20;
  void *v21;
  char v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  id v29;
  void *v30;
  _BOOL8 v31;

  v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    v6 = (int *)MEMORY[0x1E0D82BF0];
    v7 = (int *)MEMORY[0x1E0D82BD8];
    v8 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v5[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v5[*MEMORY[0x1E0D82BD8]])
    {
      v9 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v5[*v8])
          break;
        v10 = 0;
        v11 = 0;
        v12 = 0;
        while (1)
        {
          v13 = *v6;
          v14 = *(_QWORD *)&v5[v13];
          v15 = v14 + 1;
          if (v14 == -1 || v15 > *(_QWORD *)&v5[*v7])
            break;
          v16 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v14);
          *(_QWORD *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0)
            goto LABEL_13;
          v10 += 7;
          v17 = v11++ >= 9;
          if (v17)
          {
            v12 = 0;
            v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        v18 = v5[*v8];
        if (v5[*v8])
          v12 = 0;
LABEL_15:
        if (v18 || (v12 & 7) == 4)
          break;
        if ((v12 >> 3) == 2)
        {
          v22 = 0;
          v23 = 0;
          v24 = 0;
          *(_BYTE *)(a1 + 28) |= 1u;
          while (1)
          {
            v25 = *v6;
            v26 = *(_QWORD *)&v5[v25];
            v27 = v26 + 1;
            if (v26 == -1 || v27 > *(_QWORD *)&v5[*v7])
              break;
            v28 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v26);
            *(_QWORD *)&v5[v25] = v27;
            v24 |= (unint64_t)(v28 & 0x7F) << v22;
            if ((v28 & 0x80) == 0)
              goto LABEL_36;
            v22 += 7;
            v17 = v23++ >= 9;
            if (v17)
            {
              LODWORD(v24) = 0;
              goto LABEL_38;
            }
          }
          v5[*v8] = 1;
LABEL_36:
          if (v5[*v8])
            LODWORD(v24) = 0;
LABEL_38:
          *(_DWORD *)(a1 + 24) = v24;
        }
        else if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_42;
          v20 = objc_alloc_init(GEOPDClientRankingFeatureUnit);
          if (!GEOPDClientRankingFeatureUnitReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_42;
          }
          PBReaderRecallMark();
          v21 = *(void **)(a1 + 16);
          *(_QWORD *)(a1 + 16) = v20;

        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v29 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v30 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v29;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_42;
        }
      }
      while (*(_QWORD *)&v5[*v6] < *(_QWORD *)&v5[*v7]);
    }
    v31 = v5[*v8] == 0;
  }
  else
  {
LABEL_42:
    v31 = 0;
  }
  objc_sync_exit(v5);

  return v31;
}

void sub_188C557F8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEOServerFormatTokenEqual(void *a1, void *a2)
{
  unint64_t v3;
  unint64_t v4;
  void *v5;
  uint64_t v6;
  BOOL v8;
  BOOL v9;
  uint64_t v10;
  void *v11;
  void *v12;
  unint64_t v13;
  uint64_t v14;
  int v15;
  int v16;
  int v17;
  void *v18;
  void *v19;
  unint64_t v20;
  unint64_t v21;
  void *v22;
  void *v23;
  void *v24;
  unint64_t v25;
  unint64_t v26;
  void *v27;
  void *v28;
  uint64_t v29;
  unint64_t v30;
  void *v31;
  void *v32;
  uint64_t v33;
  unint64_t v34;
  void *v35;
  void *v36;
  uint64_t v37;
  unint64_t v38;
  void *v39;
  void *v40;
  void *v41;
  unint64_t v42;
  unint64_t v43;
  void *v44;
  void *v45;
  unint64_t v46;
  unint64_t v47;
  void *v48;
  void *v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;
  BOOL v53;
  BOOL v54;
  uint64_t v55;
  void *v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t i;
  unint64_t v63;
  uint64_t v64;
  void *v65;
  char v66;
  BOOL v67;
  BOOL v68;
  double v69;
  double v70;
  double v71;
  void *v72;
  void *v73;
  unint64_t v74;
  unint64_t v75;
  BOOL v76;
  BOOL v77;
  uint64_t v78;
  int v79;
  int v80;
  void *v81;
  void *v82;
  unint64_t v83;
  unint64_t v84;
  void *v85;
  void *v86;
  void *v87;
  id v88;
  unint64_t v89;
  unint64_t v90;
  void *v91;
  void *v92;
  void *v93;
  uint64_t v94;
  void *v95;
  void *v96;
  unint64_t v97;
  unint64_t v98;
  void *v99;
  int v100;
  void *v101;
  void *v102;
  void *v103;
  BOOL v104;
  BOOL v105;
  uint64_t v106;
  id v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t j;
  void *v113;
  void *v114;
  BOOL v115;
  void *v116;
  BOOL v117;
  void *v118;
  void *v119;
  unint64_t v120;
  void *v121;
  unint64_t v122;
  unint64_t v123;
  void *v124;
  void *v125;
  BOOL v126;
  BOOL v127;
  void *v128;
  int v129;
  void *v130;
  void *v131;
  void *v132;
  unint64_t v133;
  unint64_t v134;
  BOOL v135;
  BOOL v136;
  float v137;
  float v138;
  float v139;
  BOOL v140;
  BOOL v141;
  uint64_t v142;
  void *v143;
  void *v144;
  void *v145;
  BOOL v146;
  BOOL v147;
  void *v148;
  void *v149;
  int v150;
  int v151;
  int v152;
  int v153;
  int v154;
  int v155;
  int v156;
  int v157;
  int v158;
  int v159;
  void *v160;
  BOOL v161;
  BOOL v162;
  uint64_t v163;
  void *v164;
  void *v165;
  void *v166;
  BOOL v167;
  BOOL v168;
  void *v169;
  void *v170;
  unint64_t v171;
  void *v172;
  BOOL v173;
  BOOL v174;
  void *v175;
  void *v176;
  void *v177;
  void *v178;
  void *v179;
  void *v180;
  id v181;
  void *v182;
  void *v183;
  unint64_t v184;
  unint64_t v185;
  char v186;
  void *v187;
  void *v188;
  void *v189;
  void *v190;
  void *v191;
  void *v192;
  void *v193;
  BOOL v194;
  BOOL v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t k;
  unint64_t v202;
  uint64_t v203;
  void *v204;
  char v205;
  void *v206;
  BOOL v207;
  BOOL v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t m;
  unint64_t v215;
  uint64_t v216;
  void *v217;
  char v218;
  BOOL v219;
  BOOL v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t n;
  uint64_t v227;
  void *v228;
  void *v229;
  void *v230;
  id v231;
  void *v232;
  id v233;
  id v234;
  unint64_t v235;
  unint64_t v236;
  unint64_t obj;
  id obja;
  void *v239;
  unint64_t v240;
  int v241;
  unint64_t v242;
  void *v243;
  int v244;
  void *v245;
  void *v246;
  void *v247;
  void *v248;
  void *v249;
  void *v250;
  void *v251;
  unint64_t v252;
  int v253;
  id v254;
  void *v255;
  void *v256;
  void *v257;
  uint64_t v258;
  void *v259;
  uint64_t v260;
  void *v261;
  char v262;
  void *v263;
  void *v264;
  void *v265;
  id v266;
  id v267;
  id v268;
  id v269;
  int v270;
  id v271;
  char v272;
  int v273;
  void *v274;
  void *v275;
  unint64_t v276;
  unint64_t v277;
  void *v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  unint64_t v284;
  void *v285;
  char v286;
  void *v287;
  unint64_t v288;
  void *v289;
  __int128 v290;
  __int128 v291;
  __int128 v292;
  __int128 v293;
  _BYTE v294[128];
  uint64_t v295;

  v295 = *MEMORY[0x1E0C80C00];
  v3 = a1;
  v4 = a2;
  v5 = (void *)v4;
  if (!(v3 | v4))
  {
    v6 = 1;
    goto LABEL_3;
  }
  v6 = 0;
  v8 = v3 != 0;
  if (v4)
  {
    v8 = 0;
    v9 = v3 == 0;
  }
  else
  {
    v9 = 0;
  }
  if (!v9 && !v8)
  {
    v10 = objc_msgSend((id)v3, "type");
    if (v10 != objc_msgSend(v5, "type"))
    {
      v6 = 0;
      goto LABEL_3;
    }
    objc_msgSend((id)v3, "token");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "token");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    v13 = v11;
    v14 = v12;
    if (!(v13 | v14)
      || (v15 = objc_msgSend((id)v13, "isEqual:", v14), (id)v14, (id)v13, v15))
    {
      v16 = objc_msgSend((id)v3, "value1");
      if (v16 == objc_msgSend(v5, "value1"))
      {
        v17 = objc_msgSend((id)v3, "value2");
        if (v17 == objc_msgSend(v5, "value2"))
        {
          objc_msgSend((id)v3, "value3s");
          v18 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v5, "value3s");
          v19 = (void *)objc_claimAutoreleasedReturnValue();
          v20 = v18;
          v21 = v19;
          v22 = (void *)v21;
          if (!(v20 | v21))
            goto LABEL_15;
          v53 = v20 != 0;
          if (v21)
          {
            v53 = 0;
            v54 = v20 == 0;
          }
          else
          {
            v54 = 0;
          }
          if (!v54 && !v53)
          {
            v55 = objc_msgSend((id)v20, "count");
            if (v55 == objc_msgSend(v22, "count"))
            {
              v274 = (void *)v13;
              v279 = v14;
              v56 = v22;
              v292 = 0u;
              v293 = 0u;
              v290 = 0u;
              v291 = 0u;
              v267 = (id)v20;
              v57 = (id)v20;
              v58 = objc_msgSend(v57, "countByEnumeratingWithState:objects:count:", &v290, v294, 16);
              if (v58)
              {
                v59 = v58;
                v60 = 0;
                v61 = *(_QWORD *)v291;
                while (2)
                {
                  for (i = 0; i != v59; ++i)
                  {
                    if (*(_QWORD *)v291 != v61)
                      objc_enumerationMutation(v57);
                    v63 = *(_QWORD *)(*((_QWORD *)&v290 + 1) + 8 * i);
                    objc_msgSend(v56, "objectAtIndexedSubscript:", v60 + i);
                    v64 = objc_claimAutoreleasedReturnValue();
                    if (v63 | v64)
                    {
                      v65 = (void *)v64;
                      v66 = objc_msgSend((id)v63, "isEqual:", v64);

                      if ((v66 & 1) == 0)
                      {

                        v22 = v56;
                        v6 = 0;
                        v20 = (unint64_t)v267;
                        v13 = (unint64_t)v274;
                        v14 = v279;
                        goto LABEL_212;
                      }
                    }
                  }
                  v59 = objc_msgSend(v57, "countByEnumeratingWithState:objects:count:", &v290, v294, 16);
                  v60 += i;
                  if (v59)
                    continue;
                  break;
                }
              }

              v22 = v56;
              v20 = (unint64_t)v267;
              v13 = (unint64_t)v274;
              v14 = v279;
LABEL_15:
              objc_msgSend((id)v3, "stringValue");
              v23 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v5, "stringValue");
              v24 = (void *)objc_claimAutoreleasedReturnValue();
              v25 = v23;
              v26 = v24;
              if (v25 | v26)
              {
                v6 = objc_msgSend((id)v25, "isEqual:", v26);

                if (!(_DWORD)v6)
                {
LABEL_211:

LABEL_212:
                  goto LABEL_44;
                }
              }
              v287 = v22;
              v288 = v26;
              objc_msgSend((id)v3, "priceValue");
              v27 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v5, "priceValue");
              v28 = (void *)objc_claimAutoreleasedReturnValue();
              v29 = v27;
              v30 = v28;
              v289 = (void *)v30;
              if (!(v29 | v30))
                goto LABEL_18;
              v6 = 0;
              v67 = v29 != 0;
              if (v30)
                v67 = 0;
              v33 = v29;
              if (v30)
                v68 = v29 == 0;
              else
                v68 = 0;
              if (v68)
              {
                v26 = v288;
              }
              else
              {
                v26 = v288;
                if (!v67)
                {
                  objc_msgSend((id)v29, "value");
                  v70 = v69;
                  objc_msgSend(v289, "value");
                  if (vabdd_f64(v70, v71) < 0.0001)
                  {
                    objc_msgSend((id)v29, "currencyCode");
                    v72 = (void *)objc_claimAutoreleasedReturnValue();
                    objc_msgSend(v289, "currencyCode");
                    v73 = (void *)objc_claimAutoreleasedReturnValue();
                    v74 = v72;
                    v75 = v73;
                    if (v74 | v75)
                    {
                      v124 = (void *)v75;
                      v286 = objc_msgSend((id)v74, "isEqual:", v75);

                      if ((v286 & 1) == 0)
                      {
                        v6 = 0;
                        v26 = v288;
LABEL_210:

                        v22 = v287;
                        goto LABEL_211;
                      }
                    }
                    else
                    {

                    }
LABEL_18:
                    v283 = v29;
                    objc_msgSend((id)v3, "artworkValue");
                    v31 = (void *)objc_claimAutoreleasedReturnValue();
                    objc_msgSend(v5, "artworkValue");
                    v32 = (void *)objc_claimAutoreleasedReturnValue();
                    v33 = v31;
                    v34 = v32;
                    v284 = v25;
                    v285 = (void *)v34;
                    if (!(v33 | v34))
                    {
LABEL_19:
                      objc_msgSend((id)v3, "timeStampValues");
                      v35 = (void *)objc_claimAutoreleasedReturnValue();
                      objc_msgSend(v5, "timeStampValues");
                      v36 = (void *)objc_claimAutoreleasedReturnValue();
                      v37 = v35;
                      v38 = v36;
                      v39 = (void *)v38;
                      if (!(v37 | v38))
                      {
                        v263 = (void *)v37;
                        goto LABEL_21;
                      }
                      v104 = v37 != 0;
                      if (v38)
                      {
                        v104 = 0;
                        v105 = v37 == 0;
                      }
                      else
                      {
                        v105 = 0;
                      }
                      if (!v105 && !v104)
                      {
                        v263 = (void *)v37;
                        v106 = objc_msgSend((id)v37, "count");
                        v9 = v106 == objc_msgSend(v39, "count");
                        v37 = (uint64_t)v263;
                        if (v9)
                        {
                          v258 = v33;
                          v277 = v13;
                          v281 = v14;
                          v269 = (id)v20;
                          v292 = 0u;
                          v293 = 0u;
                          v290 = 0u;
                          v291 = 0u;
                          v107 = v263;
                          v108 = objc_msgSend(v107, "countByEnumeratingWithState:objects:count:", &v290, v294, 16);
                          if (v108)
                          {
                            v109 = v108;
                            v110 = 0;
                            v111 = *(_QWORD *)v291;
                            while (2)
                            {
                              for (j = 0; j != v109; ++j)
                              {
                                if (*(_QWORD *)v291 != v111)
                                  objc_enumerationMutation(v107);
                                v113 = *(void **)(*((_QWORD *)&v290 + 1) + 8 * j);
                                objc_msgSend(v39, "objectAtIndexedSubscript:", v110 + j);
                                v114 = (void *)objc_claimAutoreleasedReturnValue();
                                LODWORD(v113) = __GEOServerFormatTokenEqual_block_invoke_2(v113, v114);

                                if (!(_DWORD)v113)
                                {

                                  v6 = 0;
                                  v33 = (uint64_t)v107;
                                  v20 = (unint64_t)v269;
                                  v13 = v277;
                                  v14 = v281;
                                  v26 = v288;
                                  v78 = v258;
                                  goto LABEL_207;
                                }
                              }
                              v109 = objc_msgSend(v107, "countByEnumeratingWithState:objects:count:", &v290, v294, 16);
                              v110 += j;
                              if (v109)
                                continue;
                              break;
                            }
                          }

                          v20 = (unint64_t)v269;
                          v13 = v277;
                          v14 = v281;
                          v33 = v258;
LABEL_21:
                          objc_msgSend((id)v3, "urlValue");
                          v40 = (void *)objc_claimAutoreleasedReturnValue();
                          objc_msgSend(v5, "urlValue");
                          v41 = (void *)objc_claimAutoreleasedReturnValue();
                          v42 = v40;
                          v43 = v41;
                          v275 = (void *)v43;
                          v278 = (void *)v42;
                          if (v42 | v43)
                          {
                            v6 = 0;
                            v115 = v42 != 0;
                            if (v43)
                              v115 = 0;
                            v116 = (void *)v42;
                            if (v43)
                              v117 = v42 == 0;
                            else
                              v117 = 0;
                            if (v117 || v115)
                              goto LABEL_137;
                            objc_msgSend((id)v42, "displayTitle");
                            v118 = (void *)objc_claimAutoreleasedReturnValue();
                            objc_msgSend(v275, "displayTitle");
                            v119 = (void *)objc_claimAutoreleasedReturnValue();
                            v120 = v118;
                            v52 = v119;
                            v259 = (void *)v120;
                            if (v120 | v52)
                            {
                              v270 = objc_msgSend((id)v120, "isEqual:", v52);

                              if (!v270)
                              {
                                v6 = 0;
                                v266 = v275;
                                v254 = (id)v42;
                                v50 = (unint64_t)v259;
                                goto LABEL_136;
                              }
                            }
                            objc_msgSend((id)v42, "url");
                            v121 = (void *)objc_claimAutoreleasedReturnValue();
                            objc_msgSend(v275, "url");
                            v271 = (id)objc_claimAutoreleasedReturnValue();
                            v122 = v121;
                            v123 = (unint64_t)v271;
                            if (v122 | v123)
                            {
                              v145 = (void *)v123;
                              v272 = objc_msgSend((id)v122, "isEqual:", v123);

                              if ((v272 & 1) == 0)
                              {
                                v78 = v33;
                                v6 = 0;
LABEL_138:
                                v26 = v288;

                                v33 = (uint64_t)v263;
                                goto LABEL_207;
                              }
                            }
                            else
                            {

                            }
                          }
                          objc_msgSend((id)v3, "maneuverValue");
                          v44 = (void *)objc_claimAutoreleasedReturnValue();
                          objc_msgSend(v5, "maneuverValue");
                          v45 = (void *)objc_claimAutoreleasedReturnValue();
                          v46 = v44;
                          v47 = v45;
                          v254 = (id)v46;
                          v266 = (id)v47;
                          if (!(v46 | v47))
                          {
LABEL_23:
                            objc_msgSend((id)v3, "numberData");
                            v48 = (void *)objc_claimAutoreleasedReturnValue();
                            objc_msgSend(v5, "numberData");
                            v49 = (void *)objc_claimAutoreleasedReturnValue();
                            v50 = v48;
                            v51 = v49;
                            v52 = v51;
                            if (v50 | v51)
                            {
                              v6 = 0;
                              v135 = v50 != 0;
                              if (v51)
                              {
                                v135 = 0;
                                v136 = v50 == 0;
                              }
                              else
                              {
                                v136 = 0;
                              }
                              if (!v136 && !v135)
                              {
                                objc_msgSend((id)v50, "value");
                                v138 = v137;
                                objc_msgSend((id)v52, "value");
                                v6 = vabds_f32(v138, v139) < 1.0e-12;
                              }
                            }
                            else
                            {
                              v6 = 1;
                            }

                            goto LABEL_136;
                          }
                          v125 = (void *)v46;
                          v6 = 0;
                          v126 = v125 != 0;
                          if (v47)
                          {
                            v126 = 0;
                            v127 = v125 == 0;
                          }
                          else
                          {
                            v127 = 0;
                          }
                          if (v127 || v126)
                          {
                            v50 = (unint64_t)v125;
                            v52 = v47;
                          }
                          else
                          {
                            v128 = (void *)v47;
                            v129 = objc_msgSend(v125, "maneuverType");
                            if (v129 == objc_msgSend(v128, "maneuverType"))
                            {
                              objc_msgSend(v125, "junctionInfo");
                              v130 = (void *)objc_claimAutoreleasedReturnValue();
                              objc_msgSend(v266, "junctionInfo");
                              v131 = v125;
                              v132 = (void *)objc_claimAutoreleasedReturnValue();
                              v133 = v130;
                              v134 = v132;
                              if (v133 | v134)
                              {
                                v160 = (void *)v134;
                                v262 = objc_msgSend((id)v133, "isEqual:", v134);

                                if ((v262 & 1) == 0)
                                {
                                  v116 = v131;
                                  v43 = (unint64_t)v266;
                                  v6 = 0;
                                  goto LABEL_137;
                                }
                              }
                              else
                              {

                              }
                              goto LABEL_23;
                            }
                            v6 = 0;
                            v50 = (unint64_t)v125;
                            v52 = (unint64_t)v266;
                          }
LABEL_136:

                          v116 = v254;
                          v43 = (unint64_t)v266;
LABEL_137:
                          v78 = v33;

                          goto LABEL_138;
                        }
                      }
                      v78 = v33;

                      v33 = v37;
                      v6 = 0;
LABEL_206:
                      v26 = v288;
                      goto LABEL_207;
                    }
                    v6 = 0;
                    v76 = v33 != 0;
                    if (v34)
                    {
                      v76 = 0;
                      v77 = v33 == 0;
                    }
                    else
                    {
                      v77 = 0;
                    }
                    v78 = v33;
                    v39 = (void *)v34;
                    if (v77)
                      goto LABEL_206;
                    v26 = v288;
                    if (!v76)
                    {
                      v79 = objc_msgSend((id)v33, "artworkSourceType");
                      v39 = v285;
                      if (v79 == objc_msgSend(v285, "artworkSourceType"))
                      {
                        v80 = objc_msgSend((id)v33, "artworkUseType");
                        if (v80 == objc_msgSend(v285, "artworkUseType"))
                        {
                          objc_msgSend((id)v33, "shieldDataSource");
                          v81 = (void *)objc_claimAutoreleasedReturnValue();
                          objc_msgSend(v285, "shieldDataSource");
                          v82 = (void *)objc_claimAutoreleasedReturnValue();
                          v83 = v81;
                          v84 = v82;
                          v85 = (void *)v84;
                          if (!(v83 | v84))
                            goto LABEL_63;
                          v140 = v83 != 0;
                          if (v84)
                          {
                            v140 = 0;
                            v141 = v83 == 0;
                          }
                          else
                          {
                            v141 = 0;
                          }
                          if (!v141 && !v140)
                          {
                            v142 = objc_msgSend((id)v83, "shieldType");
                            if (v142 == objc_msgSend(v85, "shieldType"))
                            {
                              v260 = v33;
                              v265 = v85;
                              v282 = v14;
                              v256 = (void *)v83;
                              objc_msgSend((id)v83, "shieldText");
                              v143 = (void *)objc_claimAutoreleasedReturnValue();
                              if (!v143)
                              {
                                objc_msgSend(v85, "shieldText");
                                v274 = (void *)objc_claimAutoreleasedReturnValue();
                                if (!v274)
                                {
                                  v274 = 0;
                                  v253 = 0;
                                  goto LABEL_189;
                                }
                              }
                              objc_msgSend((id)v83, "shieldText");
                              v144 = (void *)objc_claimAutoreleasedReturnValue();
                              objc_msgSend(v265, "shieldText");
                              v14 = (uint64_t)v144;
                              v33 = objc_claimAutoreleasedReturnValue();
                              if ((objc_msgSend(v144, "isEqualToString:") & 1) != 0)
                              {
                                v253 = 1;
LABEL_189:
                                objc_msgSend((id)v83, "shieldColorString");
                                v187 = (void *)objc_claimAutoreleasedReturnValue();
                                if (v187
                                  || (objc_msgSend(v265, "shieldColorString"),
                                      (v250 = (void *)objc_claimAutoreleasedReturnValue()) != 0))
                                {
                                  objc_msgSend((id)v83, "shieldColorString");
                                  v188 = (void *)objc_claimAutoreleasedReturnValue();
                                  objc_msgSend(v265, "shieldColorString");
                                  v189 = (void *)objc_claimAutoreleasedReturnValue();
                                  v273 = objc_msgSend(v188, "isEqualToString:", v189);

                                  if (v187)
                                  {

                                    if (!v253)
                                      goto LABEL_194;
                                    goto LABEL_193;
                                  }
                                }
                                else
                                {
                                  v250 = 0;
                                  v273 = 1;
                                }

                                if ((v253 & 1) == 0)
                                {
LABEL_194:
                                  if (v143)
                                  {

                                    v85 = v265;
                                    v83 = (unint64_t)v256;

                                    v14 = v282;
                                    v33 = v260;
                                    if (!v273)
                                      goto LABEL_177;
                                  }
                                  else
                                  {

                                    v85 = v265;
                                    v83 = (unint64_t)v256;

                                    v14 = v282;
                                    v33 = v260;
                                    if ((v273 & 1) == 0)
                                      goto LABEL_177;
                                  }
LABEL_63:
                                  v264 = v85;
                                  objc_msgSend((id)v33, "iconDataSource");
                                  v86 = (void *)objc_claimAutoreleasedReturnValue();
                                  objc_msgSend(v285, "iconDataSource");
                                  v87 = (void *)objc_claimAutoreleasedReturnValue();
                                  v88 = v86;
                                  v89 = v87;
                                  v90 = (unint64_t)v88;
                                  v91 = (void *)v89;
                                  if (v90 | v89)
                                  {
                                    v146 = v90 != 0;
                                    if (v89)
                                    {
                                      v146 = 0;
                                      v147 = v90 == 0;
                                    }
                                    else
                                    {
                                      v147 = 0;
                                    }
                                    v148 = (void *)v89;
                                    v149 = (void *)v90;
                                    if (v147)
                                      goto LABEL_203;
                                    v148 = (void *)v89;
                                    v149 = (void *)v90;
                                    if (v146)
                                      goto LABEL_203;
                                    v261 = (void *)v89;
                                    v150 = objc_msgSend((id)v90, "iconType");
                                    v151 = objc_msgSend(v261, "iconType");
                                    v148 = v261;
                                    v149 = (void *)v90;
                                    v9 = v150 == v151;
                                    v91 = v261;
                                    if (!v9)
                                      goto LABEL_203;
                                    v152 = objc_msgSend((id)v90, "cartoID");
                                    v153 = objc_msgSend(v261, "cartoID");
                                    v148 = v261;
                                    v149 = (void *)v90;
                                    v9 = v152 == v153;
                                    v91 = v261;
                                    if (!v9)
                                      goto LABEL_203;
                                    v154 = objc_msgSend((id)v90, "defaultTransitType");
                                    v155 = objc_msgSend(v261, "defaultTransitType");
                                    v148 = v261;
                                    v149 = (void *)v90;
                                    v9 = v154 == v155;
                                    v91 = v261;
                                    if (!v9)
                                      goto LABEL_203;
                                    v156 = objc_msgSend((id)v90, "iconAttributeKey");
                                    v157 = objc_msgSend(v261, "iconAttributeKey");
                                    v148 = v261;
                                    v149 = (void *)v90;
                                    v9 = v156 == v157;
                                    v91 = v261;
                                    if (!v9)
                                      goto LABEL_203;
                                    v158 = objc_msgSend((id)v90, "iconAttributeValue");
                                    v159 = objc_msgSend(v261, "iconAttributeValue");

                                    v9 = v158 == v159;
                                    v91 = v261;
                                    if (!v9)
                                      goto LABEL_204;
                                  }
                                  v255 = (void *)v83;
                                  v257 = v91;
                                  v251 = (void *)v90;
                                  v276 = v13;
                                  v280 = v14;
                                  v268 = (id)v20;
                                  objc_msgSend((id)v33, "iconFallbackShieldDataSource");
                                  v92 = (void *)objc_claimAutoreleasedReturnValue();
                                  objc_msgSend(v285, "iconFallbackShieldDataSource");
                                  v93 = (void *)objc_claimAutoreleasedReturnValue();
                                  v94 = v92;
                                  v252 = v93;
                                  if (!(v94 | v252))
                                    goto LABEL_65;
                                  v161 = v94 != 0;
                                  if (v252)
                                  {
                                    v161 = 0;
                                    v162 = v94 == 0;
                                  }
                                  else
                                  {
                                    v162 = 0;
                                  }
                                  if (!v162 && !v161)
                                  {
                                    v163 = objc_msgSend((id)v94, "shieldType");
                                    if (v163 == objc_msgSend((id)v252, "shieldType"))
                                    {
                                      v164 = (void *)v94;
                                      objc_msgSend((id)v94, "shieldText");
                                      v165 = (void *)objc_claimAutoreleasedReturnValue();
                                      if (!v165)
                                      {
                                        objc_msgSend((id)v252, "shieldText");
                                        v245 = (void *)objc_claimAutoreleasedReturnValue();
                                        if (!v245)
                                        {
                                          v245 = 0;
                                          v241 = 0;
                                          goto LABEL_221;
                                        }
                                      }
                                      objc_msgSend((id)v94, "shieldText");
                                      v166 = (void *)objc_claimAutoreleasedReturnValue();
                                      objc_msgSend((id)v252, "shieldText");
                                      v247 = v166;
                                      v94 = objc_claimAutoreleasedReturnValue();
                                      if ((objc_msgSend(v166, "isEqualToString:") & 1) != 0)
                                      {
                                        v241 = 1;
LABEL_221:
                                        objc_msgSend(v164, "shieldColorString");
                                        v191 = (void *)objc_claimAutoreleasedReturnValue();
                                        if (v191
                                          || (objc_msgSend((id)v252, "shieldColorString"),
                                              (v239 = (void *)objc_claimAutoreleasedReturnValue()) != 0))
                                        {
                                          objc_msgSend(v164, "shieldColorString");
                                          v192 = (void *)objc_claimAutoreleasedReturnValue();
                                          objc_msgSend((id)v252, "shieldColorString");
                                          v193 = (void *)objc_claimAutoreleasedReturnValue();
                                          v244 = objc_msgSend(v192, "isEqualToString:", v193);

                                          if (v191)
                                          {

                                            if (!v241)
                                              goto LABEL_226;
                                            goto LABEL_225;
                                          }
                                        }
                                        else
                                        {
                                          v239 = 0;
                                          v244 = 1;
                                        }

                                        if ((v241 & 1) == 0)
                                        {
LABEL_226:
                                          if (v165)
                                          {

                                            v94 = (uint64_t)v164;
                                            if (!v244)
                                              goto LABEL_230;
                                          }
                                          else
                                          {

                                            v94 = (uint64_t)v164;
                                            if ((v244 & 1) == 0)
                                            {
LABEL_230:
                                              v149 = (void *)v94;
                                              v20 = (unint64_t)v268;
                                              v13 = v276;
                                              v83 = (unint64_t)v255;
                                              v91 = v257;
                                              v90 = (unint64_t)v251;
                                              v148 = (void *)v252;
                                              goto LABEL_203;
                                            }
                                          }
LABEL_65:
                                          v249 = (void *)v94;
                                          objc_msgSend((id)v33, "textDataSource");
                                          v95 = (void *)objc_claimAutoreleasedReturnValue();
                                          objc_msgSend(v285, "textDataSource");
                                          v96 = (void *)objc_claimAutoreleasedReturnValue();
                                          v97 = v95;
                                          v98 = v96;
                                          v99 = (void *)v98;
                                          if (!(v97 | v98))
                                            goto LABEL_66;
                                          v167 = v97 != 0;
                                          v246 = (void *)v98;
                                          v248 = (void *)v97;
                                          if (v98)
                                          {
                                            v167 = 0;
                                            v168 = v97 == 0;
                                          }
                                          else
                                          {
                                            v168 = 0;
                                          }
                                          if (v168 || v167)
                                          {
LABEL_294:
                                            v99 = v246;

                                            v97 = (unint64_t)v248;
                                            goto LABEL_295;
                                          }
                                          objc_msgSend((id)v97, "text");
                                          v169 = (void *)objc_claimAutoreleasedReturnValue();
                                          objc_msgSend(v246, "text");
                                          v170 = (void *)objc_claimAutoreleasedReturnValue();
                                          v171 = v169;
                                          v242 = v170;
                                          v243 = (void *)v171;
                                          if (!(v171 | v242))
                                          {
                                            v99 = v246;

                                            v97 = (unint64_t)v248;
LABEL_66:
                                            v100 = objc_msgSend((id)v33, "hasRoutingIncidentBadge");
                                            if (v100 == objc_msgSend(v285, "hasRoutingIncidentBadge"))
                                            {
                                              objc_msgSend((id)v33, "accessibilityText");
                                              v101 = (void *)objc_claimAutoreleasedReturnValue();
                                              if (v101
                                                || (objc_msgSend(v285, "accessibilityText"),
                                                    (v14 = objc_claimAutoreleasedReturnValue()) != 0))
                                              {
                                                objc_msgSend((id)v33, "accessibilityText");
                                                v102 = (void *)objc_claimAutoreleasedReturnValue();
                                                objc_msgSend(v285, "accessibilityText");
                                                v103 = (void *)objc_claimAutoreleasedReturnValue();
                                                v6 = objc_msgSend(v102, "isEqualToString:", v103);

                                                if (v101)
                                                  goto LABEL_218;
                                              }
                                              else
                                              {
                                                v6 = 1;
                                              }
                                              v101 = (void *)v14;
LABEL_218:

                                              v30 = (unint64_t)v285;
                                              v20 = (unint64_t)v268;
                                              v13 = v276;
                                              v14 = v280;
                                              v25 = v284;
                                              if (!(_DWORD)v6)
                                              {
                                                v26 = v288;
                                                goto LABEL_208;
                                              }
                                              goto LABEL_19;
                                            }
LABEL_295:

                                            v6 = 0;
                                            v39 = v285;
                                            v78 = v33;
                                            v20 = (unint64_t)v268;
                                            v13 = v276;
                                            goto LABEL_206;
                                          }
                                          v173 = v171 != 0;
                                          if (v242)
                                          {
                                            v173 = 0;
                                            v174 = v171 == 0;
                                          }
                                          else
                                          {
                                            v174 = 0;
                                          }
                                          if (v174 || v173)
                                          {
LABEL_293:

                                            goto LABEL_294;
                                          }
                                          objc_msgSend((id)v171, "formatStrings");
                                          v175 = (void *)objc_claimAutoreleasedReturnValue();
                                          objc_msgSend((id)v242, "formatStrings");
                                          v176 = (void *)objc_claimAutoreleasedReturnValue();
                                          v236 = v175;
                                          v240 = v176;
                                          if (v236 | v240)
                                          {
                                            v194 = v236 != 0;
                                            if (v240)
                                            {
                                              v194 = 0;
                                              v195 = v236 == 0;
                                            }
                                            else
                                            {
                                              v195 = 0;
                                            }
                                            if (v195
                                              || v194
                                              || (v196 = objc_msgSend((id)v236, "count"),
                                                  v196 != objc_msgSend((id)v240, "count")))
                                            {

                                              v206 = (void *)v236;
                                              goto LABEL_291;
                                            }
                                            v292 = 0u;
                                            v293 = 0u;
                                            v290 = 0u;
                                            v291 = 0u;
                                            obja = (id)v236;
                                            v197 = objc_msgSend(obja, "countByEnumeratingWithState:objects:count:", &v290, v294, 16);
                                            if (v197)
                                            {
                                              v198 = v197;
                                              v199 = 0;
                                              v200 = *(_QWORD *)v291;
                                              while (2)
                                              {
                                                for (k = 0; k != v198; ++k)
                                                {
                                                  if (*(_QWORD *)v291 != v200)
                                                    objc_enumerationMutation(obja);
                                                  v202 = *(_QWORD *)(*((_QWORD *)&v290 + 1) + 8 * k);
                                                  objc_msgSend((id)v240, "objectAtIndexedSubscript:", v199 + k);
                                                  v203 = objc_claimAutoreleasedReturnValue();
                                                  if (v202 | v203)
                                                  {
                                                    v204 = (void *)v203;
                                                    v205 = objc_msgSend((id)v202, "isEqual:", v203);

                                                    if ((v205 & 1) == 0)
                                                    {

                                                      goto LABEL_292;
                                                    }
                                                  }
                                                }
                                                v198 = objc_msgSend(obja, "countByEnumeratingWithState:objects:count:", &v290, v294, 16);
                                                v199 += k;
                                                if (v198)
                                                  continue;
                                                break;
                                              }
                                            }

                                          }
                                          objc_msgSend(v243, "separators");
                                          v177 = (void *)objc_claimAutoreleasedReturnValue();
                                          objc_msgSend((id)v242, "separators");
                                          v178 = (void *)objc_claimAutoreleasedReturnValue();
                                          v235 = v177;
                                          obj = v178;
                                          if (v235 | obj)
                                          {
                                            v207 = v235 != 0;
                                            if (obj)
                                            {
                                              v207 = 0;
                                              v208 = v235 == 0;
                                            }
                                            else
                                            {
                                              v208 = 0;
                                            }
                                            if (v208
                                              || v207
                                              || (v209 = objc_msgSend((id)v235, "count"),
                                                  v209 != objc_msgSend((id)obj, "count")))
                                            {

LABEL_290:
                                              v206 = (void *)v235;
LABEL_291:

LABEL_292:
                                              goto LABEL_293;
                                            }
                                            v292 = 0u;
                                            v293 = 0u;
                                            v290 = 0u;
                                            v291 = 0u;
                                            v234 = (id)v235;
                                            v210 = objc_msgSend(v234, "countByEnumeratingWithState:objects:count:", &v290, v294, 16);
                                            if (v210)
                                            {
                                              v211 = v210;
                                              v212 = 0;
                                              v213 = *(_QWORD *)v291;
                                              while (2)
                                              {
                                                for (m = 0; m != v211; ++m)
                                                {
                                                  if (*(_QWORD *)v291 != v213)
                                                    objc_enumerationMutation(v234);
                                                  v215 = *(_QWORD *)(*((_QWORD *)&v290 + 1) + 8 * m);
                                                  objc_msgSend((id)obj, "objectAtIndexedSubscript:", v212 + m);
                                                  v216 = objc_claimAutoreleasedReturnValue();
                                                  if (v215 | v216)
                                                  {
                                                    v217 = (void *)v216;
                                                    v218 = objc_msgSend((id)v215, "isEqual:", v216);

                                                    if ((v218 & 1) == 0)
                                                    {

                                                      goto LABEL_290;
                                                    }
                                                  }
                                                }
                                                v211 = objc_msgSend(v234, "countByEnumeratingWithState:objects:count:", &v290, v294, 16);
                                                v212 += m;
                                                if (v211)
                                                  continue;
                                                break;
                                              }
                                            }

                                          }
                                          objc_msgSend(v243, "formatTokens");
                                          v179 = (void *)objc_claimAutoreleasedReturnValue();
                                          objc_msgSend((id)v242, "formatTokens");
                                          v180 = (void *)objc_claimAutoreleasedReturnValue();
                                          v181 = v179;
                                          v232 = v181;
                                          v233 = v180;
                                          if (__PAIR128__((unint64_t)v233, (unint64_t)v181) == 0)
                                            goto LABEL_186;
                                          v219 = v181 != 0;
                                          if (v233)
                                          {
                                            v219 = 0;
                                            v220 = v181 == 0;
                                          }
                                          else
                                          {
                                            v220 = 0;
                                          }
                                          if (!v220 && !v219)
                                          {
                                            v221 = objc_msgSend(v181, "count");
                                            if (v221 == objc_msgSend(v233, "count"))
                                            {
                                              v292 = 0u;
                                              v293 = 0u;
                                              v290 = 0u;
                                              v291 = 0u;
                                              v231 = v181;
                                              v222 = objc_msgSend(v231, "countByEnumeratingWithState:objects:count:", &v290, v294, 16);
                                              if (v222)
                                              {
                                                v223 = v222;
                                                v224 = 0;
                                                v225 = *(_QWORD *)v291;
                                                while (2)
                                                {
                                                  for (n = 0; n != v223; ++n)
                                                  {
                                                    if (*(_QWORD *)v291 != v225)
                                                      objc_enumerationMutation(v231);
                                                    v227 = *(_QWORD *)(*((_QWORD *)&v290 + 1) + 8 * n);
                                                    objc_msgSend(v233, "objectAtIndexedSubscript:", v224 + n);
                                                    v228 = (void *)objc_claimAutoreleasedReturnValue();
                                                    LODWORD(v227) = GEOServerFormatTokenEqual(v227, v228);

                                                    if (!(_DWORD)v227)
                                                    {
                                                      v230 = v231;

                                                      v229 = v233;
                                                      goto LABEL_284;
                                                    }
                                                  }
                                                  v223 = objc_msgSend(v231, "countByEnumeratingWithState:objects:count:", &v290, v294, 16);
                                                  v224 += n;
                                                  if (v223)
                                                    continue;
                                                  break;
                                                }
                                              }

LABEL_186:
                                              objc_msgSend(v243, "alternativeString");
                                              v182 = (void *)objc_claimAutoreleasedReturnValue();
                                              objc_msgSend((id)v242, "alternativeString");
                                              v183 = (void *)objc_claimAutoreleasedReturnValue();
                                              v184 = v182;
                                              v185 = v183;
                                              if (v184 | v185)
                                                v186 = objc_msgSend((id)v184, "isEqual:", v185);
                                              else
                                                v186 = 1;

                                              v99 = v246;
                                              v97 = (unint64_t)v248;

                                              if ((v186 & 1) == 0)
                                                goto LABEL_295;
                                              goto LABEL_66;
                                            }
                                          }
                                          v229 = v233;

                                          v230 = v232;
LABEL_284:

                                          goto LABEL_290;
                                        }
LABEL_225:

                                        goto LABEL_226;
                                      }

                                      v190 = v245;
                                      if (v165)
                                        v190 = v165;

                                      v94 = (uint64_t)v164;
                                    }
                                  }

                                  v148 = (void *)v252;
                                  v149 = (void *)v94;
                                  v20 = (unint64_t)v268;
                                  v13 = v276;
                                  v91 = v257;
                                  v90 = (unint64_t)v251;
LABEL_203:

LABEL_204:
                                  goto LABEL_205;
                                }
LABEL_193:

                                goto LABEL_194;
                              }

                              v172 = v274;
                              if (v143)
                                v172 = v143;

                              v14 = v282;
                              v33 = v78;
                              v85 = v265;
                            }
                          }

LABEL_177:
LABEL_205:

                          v6 = 0;
                          v39 = v285;
                          v78 = v33;
                          goto LABEL_206;
                        }
                      }
                      v6 = 0;
                    }
LABEL_207:

                    v25 = v284;
                    v30 = (unint64_t)v285;
                    v33 = v78;
LABEL_208:
                    v29 = v283;
                    goto LABEL_209;
                  }
                  v6 = 0;
                  v30 = (unint64_t)v289;
                  v33 = v29;
                }
              }
LABEL_209:

              goto LABEL_210;
            }
          }

        }
      }
    }
    v6 = 0;
LABEL_44:

  }
LABEL_3:

  return v6;
}

BOOL GEOPDSBrandFilterReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  id v25;
  void *v26;
  _BOOL8 v27;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 1)
        {
          v18 = 0;
          v19 = 0;
          v20 = 0;
          *(_BYTE *)(a1 + 24) |= 1u;
          while (1)
          {
            v21 = *v4;
            v22 = *(_QWORD *)&v3[v21];
            v23 = v22 + 1;
            if (v22 == -1 || v23 > *(_QWORD *)&v3[*v5])
              break;
            v24 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v22);
            *(_QWORD *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0)
              goto LABEL_32;
            v18 += 7;
            v15 = v19++ >= 9;
            if (v15)
            {
              v20 = 0;
              goto LABEL_34;
            }
          }
          v3[*v6] = 1;
LABEL_32:
          if (v3[*v6])
            v20 = 0;
LABEL_34:
          *(_QWORD *)(a1 + 16) = v20;
        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v25 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v26 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v25;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_37;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v27 = v3[*v6] == 0;
  }
  else
  {
LABEL_37:
    v27 = 0;
  }
  objc_sync_exit(v3);

  return v27;
}

void sub_188C57900(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSCategoryFilterReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  uint64_t v18;
  void *v19;
  id v20;
  void *v21;
  _BOOL8 v22;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 1)
        {
          PBReaderReadData();
          v18 = objc_claimAutoreleasedReturnValue();
          v19 = *(void **)(a1 + 16);
          *(_QWORD *)(a1 + 16) = v18;

        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v20 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v21 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v20;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_26;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v22 = v3[*v6] == 0;
  }
  else
  {
LABEL_26:
    v22 = 0;
  }
  objc_sync_exit(v3);

  return v22;
}

void sub_188C57FF0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188C58308(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSCategorySearchResultSectionReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  int *v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  BOOL v28;
  int v29;
  unint64_t v31;
  BOOL v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  void *v40;
  int v41;
  char v42;
  unsigned int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  char v48;
  GEOStyleAttributes *v49;
  void *v50;
  char v51;
  char v52;
  int v53;
  char v54;
  void *v55;
  int v57;
  int *v58;
  char v59;
  char v60;
  char v61;
  char v62;
  char v63;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 60);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 56));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = (vaddv_s16((int16x4_t)(*(_QWORD *)&vshl_u16((uint16x4_t)(*(_QWORD *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 72)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFDFFFBFFFEFFFCLL) & 0xFF01FF01FF01FF01))+ ((*(_BYTE *)(a1 + 72) & 2) != 0));
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v7 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 > 2;
        v60 = v16 & ~(_BYTE)v11 | v9;
        v61 = v16 | v11 | v60;
        v59 = v7;
        if ((((v16 | v11) | v7) & 1) != 0)
          v17 = 0;
        else
          v17 = a3;
        v62 = (v17 == 0) | v16 | v11;
        v63 = v16 | v11;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v8;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v19))
      goto LABEL_86;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0)
        goto LABEL_25;
      v21 += 7;
      v28 = v22++ >= 9;
      if (v28)
      {
        v23 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_25:
    v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_27:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_86:
      v57 = 1;
      goto LABEL_87;
    }
    v31 = v23 >> 3;
    v32 = v63;
    if ((v62 & 1) == 0)
    {
      v33 = v17;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if (!v32)
          goto LABEL_69;
        if ((*(_BYTE *)(a1 + 72) & 4) == 0)
        {
          PBReaderReadString();
          v37 = objc_claimAutoreleasedReturnValue();
          v38 = 24;
          goto LABEL_67;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_105;
        v52 = 32 * *(_BYTE *)(a1 + 72);
        goto LABEL_83;
      case 2:
        if (!v32)
          goto LABEL_69;
        if ((*(_BYTE *)(a1 + 72) & 0x10) == 0)
        {
          PBReaderReadString();
          v37 = objc_claimAutoreleasedReturnValue();
          v38 = 40;
          goto LABEL_67;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_105;
        v52 = 8 * *(_BYTE *)(a1 + 72);
        goto LABEL_83;
      case 3:
        if ((v59 & 1) == 0)
          goto LABEL_69;
        v42 = 0;
        v43 = 0;
        v44 = 0;
        *(_BYTE *)(a1 + 72) |= 1u;
        while (2)
        {
          v45 = *v18;
          v46 = *(_QWORD *)(v3 + v45);
          v47 = v46 + 1;
          if (v46 == -1 || v47 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v19) = 1;
          }
          else
          {
            v48 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v46);
            *(_QWORD *)(v3 + v45) = v47;
            v44 |= (unint64_t)(v48 & 0x7F) << v42;
            if (v48 < 0)
            {
              v42 += 7;
              v28 = v43++ >= 9;
              if (v28)
              {
                LODWORD(v44) = 0;
                goto LABEL_74;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v19))
          LODWORD(v44) = 0;
LABEL_74:
        *(_DWORD *)(a1 + 68) = v44;
        goto LABEL_85;
      case 4:
        if (!v32)
          goto LABEL_69;
        if ((*(_BYTE *)(a1 + 72) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_105;
          v52 = 4 * *(_BYTE *)(a1 + 72);
LABEL_83:
          v8 += v52 >> 7;
          goto LABEL_84;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_105;
        v49 = objc_alloc_init(GEOStyleAttributes);
        if (GEOStyleAttributesReadAllFrom((uint64_t)v49, (void *)v3))
        {
          PBReaderRecallMark();
          v50 = *(void **)(a1 + 48);
          *(_QWORD *)(a1 + 48) = v49;
LABEL_68:

          --v8;
LABEL_84:
          v19 = (int *)MEMORY[0x1E0D82BC8];
          goto LABEL_85;
        }

LABEL_105:
        v57 = 0;
        v58 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
        v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_88:
        if ((v60 & 1) != 0)
LABEL_89:
          *(_BYTE *)(a1 + v58[823]) |= 2u;
        if (v63 & 1 | ((v57 & 1) == 0))
        {
          *(_BYTE *)(a1 + v58[823]) |= 4u;
          *(_BYTE *)(a1 + v58[823]) |= 0x10u;
          *(_BYTE *)(a1 + v58[823]) |= 0x20u;
          *(_BYTE *)(a1 + v58[823]) |= 8u;
        }
        else if (v17)
        {
          while (1)
          {
            v53 = *v17++;
            v54 = 4;
            switch(v53)
            {
              case 0:
                goto LABEL_98;
              case 1:
                goto LABEL_97;
              case 2:
                v54 = 16;
                goto LABEL_97;
              case 4:
                v54 = 32;
                goto LABEL_97;
              case 5:
                v54 = 8;
LABEL_97:
                *(_BYTE *)(a1 + v58[823]) |= v54;
                break;
              default:
                continue;
            }
          }
        }
LABEL_98:
        if (v57)
          v3 = *(_BYTE *)(v3 + *v19) == 0;
        else
          v3 = 0;
        if ((v63 & 1) != 0)
        {
          v55 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      case 5:
        if (!v32)
          goto LABEL_69;
        if ((*(_BYTE *)(a1 + 72) & 8) == 0)
        {
          PBReaderReadString();
          v37 = objc_claimAutoreleasedReturnValue();
          v38 = 32;
LABEL_67:
          v50 = *(void **)(a1 + v38);
          *(_QWORD *)(a1 + v38) = v37;
          goto LABEL_68;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_105;
        v52 = 16 * *(_BYTE *)(a1 + 72);
        goto LABEL_83;
      default:
        if ((v60 & 1) == 0 || (*(_BYTE *)(a1 + 72) & 2) != 0)
        {
LABEL_69:
          v51 = PBReaderSkipValueWithTag();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if ((v51 & 1) == 0)
          {
            v57 = 0;
LABEL_87:
            v58 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
            goto LABEL_88;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v39 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v40 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v39;

          }
          v41 = PBUnknownFieldAdd();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if (!v41)
          {
            v57 = 0;
            v58 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
            goto LABEL_89;
          }
        }
LABEL_85:
        if (!(v61 & 1 | (v8 != 0)))
          goto LABEL_86;
        continue;
    }
  }
}

void sub_188C58B70(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188C58D34(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188C59218(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188C592FC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSCategorySearchResultSectionReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 60))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDSCategorySearchResultSectionReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 60) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDSCategorySearchResultSectionReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDSCategorySearchResultSectionReadAllFrom_initialTag;
  Specified = GEOPDSCategorySearchResultSectionReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    objc_msgSend(*(id *)(a1 + 48), "readAll:", 1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_188C59838(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSCategorySearchResultSectionIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  _BOOL8 v23;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2)
            goto LABEL_42;
          goto LABEL_36;
        case 2u:
          if (v15 == 2)
            goto LABEL_36;
          goto LABEL_42;
        case 3u:
          if ((v8 & 7) != 0)
            goto LABEL_42;
          v17 = 0;
          break;
        case 4u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOStyleAttributesIsValid(a1))
            goto LABEL_42;
          PBReaderRecallMark();
          continue;
        case 5u:
          if (v15 == 2)
            goto LABEL_36;
          goto LABEL_42;
        default:
LABEL_36:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_42:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v18 = *v2;
        v19 = *(_QWORD *)&a1[v18];
        v20 = v19 + 1;
        if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
          break;
        v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
        *(_QWORD *)&a1[v18] = v20;
        if (v21 < 0 && v17++ <= 8)
          continue;
        goto LABEL_37;
      }
      a1[*v4] = 1;
LABEL_37:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v23 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v23;
}

void sub_188C59CB0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSCategorySearchResultSectionIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  v2 = (*(_BYTE *)(a1 + 72) & 0x7C) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return v2;
}

void sub_188C59F14(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSImplicitQueryCategoryFilterReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  int *v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  BOOL v28;
  int v29;
  unint64_t v31;
  BOOL v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  char v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  id v44;
  void *v45;
  int v46;
  GEOPDSImplicitQuerySearchForEVCharger *v47;
  uint64_t v48;
  void *v49;
  char v50;
  char v51;
  int v52;
  char v53;
  void *v54;
  int v56;
  int *v57;
  char v58;
  char v59;
  char v60;
  char v61;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 52);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 48));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = vaddv_s16((int16x4_t)(*(_QWORD *)&vshl_u16((uint16x4_t)(*(_QWORD *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 64)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFFFFFEFFFCFFFDLL) & 0xFF01FF01FF01FF01));
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 > 1;
        v58 = v16 & ~(_BYTE)v11 | v9;
        v59 = v16 | v11 | v58;
        if ((((v16 | v11) | v8) & 1) != 0)
          v17 = 0;
        else
          v17 = a3;
        v60 = (v17 == 0) | v16 | v11;
        v61 = v16 | v11;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v7;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v19))
      goto LABEL_84;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0)
        goto LABEL_25;
      v21 += 7;
      v28 = v22++ >= 9;
      if (v28)
      {
        v23 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_25:
    v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_27:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_84:
      v56 = 1;
      goto LABEL_85;
    }
    v31 = v23 >> 3;
    v32 = v61;
    if ((v60 & 1) == 0)
    {
      v33 = v17;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if ((v8 & 1) == 0)
          goto LABEL_69;
        v37 = 0;
        v38 = 0;
        v39 = 0;
        *(_BYTE *)(a1 + 64) |= 1u;
        while (1)
        {
          v40 = *v18;
          v41 = *(_QWORD *)(v3 + v40);
          v42 = v41 + 1;
          if (v41 == -1 || v42 > *(_QWORD *)(v3 + *v6))
            break;
          v43 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v41);
          *(_QWORD *)(v3 + v40) = v42;
          v39 |= (unint64_t)(v43 & 0x7F) << v37;
          if ((v43 & 0x80) == 0)
            goto LABEL_72;
          v37 += 7;
          v28 = v38++ >= 9;
          if (v28)
          {
            LODWORD(v39) = 0;
            goto LABEL_74;
          }
        }
        *(_BYTE *)(v3 + *v19) = 1;
LABEL_72:
        if (*(_BYTE *)(v3 + *v19))
          LODWORD(v39) = 0;
LABEL_74:
        *(_DWORD *)(a1 + 60) = v39;
        goto LABEL_83;
      case 2:
        if (!v32)
          goto LABEL_69;
        if ((*(_BYTE *)(a1 + 64) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_102;
          v51 = 8 * *(_BYTE *)(a1 + 64);
          goto LABEL_81;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_102;
        v47 = objc_alloc_init(GEOPDSImplicitQuerySearchForEVCharger);
        if (!GEOPDSImplicitQuerySearchForEVChargerReadAllFrom((uint64_t)v47, (void *)v3))
          goto LABEL_101;
        PBReaderRecallMark();
        v48 = 40;
        goto LABEL_68;
      case 3:
        if (!v32)
          goto LABEL_69;
        if ((*(_BYTE *)(a1 + 64) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_102;
          v51 = 16 * *(_BYTE *)(a1 + 64);
          goto LABEL_81;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_102;
        v47 = objc_alloc_init(GEOPDSImplicitQuerySearchAroundPOI);
        if (!GEOPDSImplicitQuerySearchAroundPOIReadAllFrom((uint64_t)v47, (void *)v3, v10 & 1))
          goto LABEL_101;
        PBReaderRecallMark();
        v48 = 32;
        goto LABEL_68;
      case 4:
        if (!v32)
          goto LABEL_69;
        if ((*(_BYTE *)(a1 + 64) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_102;
          v51 = 32 * *(_BYTE *)(a1 + 64);
LABEL_81:
          v7 += v51 >> 7;
LABEL_82:
          v19 = (int *)MEMORY[0x1E0D82BC8];
          v20 = (int *)MEMORY[0x1E0D82BB8];
          goto LABEL_83;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_102;
        v47 = objc_alloc_init(GEOPDSImplicitQueryIntroTipForHiking);
        if (GEOPDSImplicitQueryIntroTipForHikingReadAllFrom((uint64_t)v47, (void *)v3))
        {
          PBReaderRecallMark();
          v48 = 24;
LABEL_68:
          v49 = *(void **)(a1 + v48);
          *(_QWORD *)(a1 + v48) = v47;

          --v7;
          goto LABEL_82;
        }
LABEL_101:

LABEL_102:
        v56 = 0;
        v57 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
        v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_86:
        if ((v58 & 1) != 0)
LABEL_87:
          *(_BYTE *)(a1 + v57[832]) |= 2u;
        if (v61 & 1 | ((v56 & 1) == 0))
        {
          *(_BYTE *)(a1 + v57[832]) |= 0x10u;
          *(_BYTE *)(a1 + v57[832]) |= 8u;
          *(_BYTE *)(a1 + v57[832]) |= 4u;
        }
        else if (v17)
        {
          while (1)
          {
            v52 = *v17++;
            v53 = 16;
            switch(v52)
            {
              case 0:
                goto LABEL_95;
              case 2:
                goto LABEL_94;
              case 3:
                v53 = 8;
                goto LABEL_94;
              case 4:
                v53 = 4;
LABEL_94:
                *(_BYTE *)(a1 + v57[832]) |= v53;
                break;
              default:
                continue;
            }
          }
        }
LABEL_95:
        if (v56)
          v3 = *(_BYTE *)(v3 + *v19) == 0;
        else
          v3 = 0;
        if ((v61 & 1) != 0)
        {
          v54 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      default:
        if ((v58 & 1) == 0 || (*(_BYTE *)(a1 + 64) & 2) != 0)
        {
LABEL_69:
          v50 = PBReaderSkipValueWithTag();
          v20 = (int *)MEMORY[0x1E0D82BB8];
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if ((v50 & 1) == 0)
          {
            v56 = 0;
LABEL_85:
            v57 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
            goto LABEL_86;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v44 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v45 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v44;

          }
          v46 = PBUnknownFieldAdd();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          v20 = (int *)MEMORY[0x1E0D82BB8];
          if (!v46)
          {
            v56 = 0;
            v57 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
            goto LABEL_87;
          }
        }
LABEL_83:
        if (!(v59 & 1 | (v7 != 0)))
          goto LABEL_84;
        continue;
    }
  }
}

void sub_188C5AC08(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188C5AD60(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188C5B1CC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188C5B2B0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSImplicitQueryCategoryFilterReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 52))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDSImplicitQueryCategoryFilterReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 52) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDSImplicitQueryCategoryFilterReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDSImplicitQueryCategoryFilterReadAllFrom_initialTag;
  Specified = GEOPDSImplicitQueryCategoryFilterReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    -[GEOPDSImplicitQuerySearchAroundPOI readAll:](*(_QWORD *)(a1 + 32), 1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_188C5B518(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188C5B6E0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDSImplicitQueryCategoryFilterIsDirty(uint64_t a1)
{
  unsigned int v2;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v2 = *(unsigned __int8 *)(a1 + 64);
  if ((v2 & 0x30) != 0)
    return 1;
  if ((v2 & 8) != 0)
  {
    if (GEOPDSImplicitQuerySearchAroundPOIIsDirty(*(_QWORD *)(a1 + 32)))
      return 1;
    v2 = *(unsigned __int8 *)(a1 + 64);
  }
  return (v2 >> 2) & 1;
}

os_unfair_lock_s *GEOPDSImplicitQueryCategoryFilterIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOPDSImplicitQueryCategoryFilterIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 14);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_188C5BA08(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSImplicitQueryIntroTipForHikingReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  GEOLatLng *v18;
  void *v19;
  char v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  id v27;
  void *v28;
  _BOOL8 v29;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 2)
        {
          v20 = 0;
          v21 = 0;
          v22 = 0;
          *(_BYTE *)(a1 + 32) |= 1u;
          while (1)
          {
            v23 = *v4;
            v24 = *(_QWORD *)&v3[v23];
            v25 = v24 + 1;
            if (v24 == -1 || v25 > *(_QWORD *)&v3[*v5])
              break;
            v26 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v24);
            *(_QWORD *)&v3[v23] = v25;
            v22 |= (unint64_t)(v26 & 0x7F) << v20;
            if ((v26 & 0x80) == 0)
              goto LABEL_36;
            v20 += 7;
            v15 = v21++ >= 9;
            if (v15)
            {
              v22 = 0;
              goto LABEL_38;
            }
          }
          v3[*v6] = 1;
LABEL_36:
          if (v3[*v6])
            v22 = 0;
LABEL_38:
          *(_QWORD *)(a1 + 16) = v22;
        }
        else if ((v10 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_42;
          v18 = objc_alloc_init(GEOLatLng);
          if (!GEOLatLngReadAllFrom((uint64_t)v18, v3))
          {

            goto LABEL_42;
          }
          PBReaderRecallMark();
          v19 = *(void **)(a1 + 24);
          *(_QWORD *)(a1 + 24) = v18;

        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v27 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v28 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v27;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_42;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v29 = v3[*v6] == 0;
  }
  else
  {
LABEL_42:
    v29 = 0;
  }
  objc_sync_exit(v3);

  return v29;
}

void sub_188C5C490(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSImplicitQuerySearchAroundPOIReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  int *v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  BOOL v28;
  int v29;
  unint64_t v31;
  BOOL v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  uint64_t v37;
  void *v38;
  char v39;
  unsigned int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  GEOLatLng *v46;
  id v47;
  void *v48;
  int v49;
  char v50;
  char v51;
  int v52;
  int v53;
  char v54;
  void *v55;
  int v57;
  int *v58;
  char v59;
  char v60;
  char v61;
  char v62;
  char v63;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 52);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 48));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = ((*(unsigned __int8 *)(a1 + 60) >> 2) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 1) & 1);
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v12;
        v13 = v7;
        goto LABEL_8;
      case -3:
        v9 = 1;
        goto LABEL_7;
      case -2:
        v13 = v7;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 != 0;
        v60 = v16 & ~(_BYTE)v11 | v8;
        v61 = v16 | v11 | v60;
        v59 = v9;
        if ((((v16 | v11) | v9) & 1) != 0)
          v17 = 0;
        else
          v17 = a3;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v62 = (v17 == 0) | v16 | v11;
        v63 = v16 | v11;
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v7;
        v14 = v8;
LABEL_8:
        v15 = v11;
LABEL_10:
        ++v10;
        v7 = v13;
        v8 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v19))
      goto LABEL_77;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0)
        goto LABEL_25;
      v21 += 7;
      v28 = v22++ >= 9;
      if (v28)
      {
        v23 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_25:
    v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_27:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_77:
      v57 = 1;
      goto LABEL_78;
    }
    v31 = v23 >> 3;
    v32 = v63;
    if ((v62 & 1) == 0)
    {
      v33 = v17;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    if ((_DWORD)v31 == 3)
    {
      if ((v59 & 1) != 0)
      {
        v39 = 0;
        v40 = 0;
        v41 = 0;
        *(_BYTE *)(a1 + 60) |= 1u;
        while (1)
        {
          v42 = *v18;
          v43 = *(_QWORD *)(v3 + v42);
          v44 = v43 + 1;
          if (v43 == -1 || v44 > *(_QWORD *)(v3 + *v6))
            break;
          v45 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v43);
          *(_QWORD *)(v3 + v42) = v44;
          v41 |= (unint64_t)(v45 & 0x7F) << v39;
          if ((v45 & 0x80) == 0)
            goto LABEL_67;
          v39 += 7;
          v28 = v40++ >= 9;
          if (v28)
          {
            v41 = 0;
            goto LABEL_69;
          }
        }
        *(_BYTE *)(v3 + *v19) = 1;
LABEL_67:
        if (*(_BYTE *)(v3 + *v19))
          v41 = 0;
LABEL_69:
        *(_QWORD *)(a1 + 32) = v41;
        goto LABEL_76;
      }
      goto LABEL_64;
    }
    if ((_DWORD)v31 == 2)
      break;
    if ((_DWORD)v31 == 1)
    {
      if (v32)
      {
        if ((*(_BYTE *)(a1 + 60) & 4) == 0)
        {
          PBReaderReadString();
          v37 = objc_claimAutoreleasedReturnValue();
          v38 = *(void **)(a1 + 24);
          *(_QWORD *)(a1 + 24) = v37;
          goto LABEL_57;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_98;
        v51 = 32 * *(_BYTE *)(a1 + 60);
        goto LABEL_74;
      }
    }
    else if ((v60 & 1) != 0 && (*(_BYTE *)(a1 + 60) & 2) == 0)
    {
      if (!*(_QWORD *)(a1 + 16))
      {
        v47 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v48 = *(void **)(a1 + 16);
        *(_QWORD *)(a1 + 16) = v47;

      }
      v49 = PBUnknownFieldAdd();
      v19 = (int *)MEMORY[0x1E0D82BC8];
      if (!v49)
      {
        v57 = 0;
        v58 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
        goto LABEL_80;
      }
      goto LABEL_76;
    }
LABEL_64:
    v50 = PBReaderSkipValueWithTag();
    v19 = (int *)MEMORY[0x1E0D82BC8];
    if ((v50 & 1) == 0)
    {
      v57 = 0;
LABEL_78:
      v58 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
      goto LABEL_79;
    }
LABEL_76:
    if (!(v61 & 1 | (v10 != 0)))
      goto LABEL_77;
  }
  if (!v32)
    goto LABEL_64;
  if ((*(_BYTE *)(a1 + 60) & 8) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0)
      goto LABEL_98;
    v51 = 16 * *(_BYTE *)(a1 + 60);
LABEL_74:
    v10 += v51 >> 7;
    goto LABEL_75;
  }
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_98;
  v46 = objc_alloc_init(GEOLatLng);
  if (GEOLatLngReadAllFrom((uint64_t)v46, (void *)v3))
  {
    PBReaderRecallMark();
    v38 = *(void **)(a1 + 40);
    *(_QWORD *)(a1 + 40) = v46;
LABEL_57:

    --v10;
LABEL_75:
    v19 = (int *)MEMORY[0x1E0D82BC8];
    goto LABEL_76;
  }

LABEL_98:
  v57 = 0;
  v58 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
  v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_79:
  if ((v60 & 1) == 0)
    goto LABEL_81;
LABEL_80:
  *(_BYTE *)(a1 + v58[844]) |= 2u;
LABEL_81:
  if (v63 & 1 | ((v57 & 1) == 0))
  {
    *(_BYTE *)(a1 + v58[844]) |= 4u;
    *(_BYTE *)(a1 + v58[844]) |= 8u;
    goto LABEL_91;
  }
  if (v17)
  {
    while (2)
    {
      while (1)
      {
        v53 = *v17++;
        v52 = v53;
        if (v53 == 1)
          break;
        if (v52 == 2)
        {
          v54 = 8;
          goto LABEL_90;
        }
        if (!v52)
          goto LABEL_91;
      }
      v54 = 4;
LABEL_90:
      *(_BYTE *)(a1 + v58[844]) |= v54;
      continue;
    }
  }
LABEL_91:
  if (v57)
    v3 = *(_BYTE *)(v3 + *v19) == 0;
  else
    v3 = 0;
  if ((v63 & 1) != 0)
  {
    v55 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_188C5CEFC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188C5D2A0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188C5D384(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSImplicitQuerySearchAroundPOIReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t SearchAroundPOIReadSpecified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 52))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDSImplicitQuerySearchAroundPOIReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 52) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDSImplicitQuerySearchAroundPOIReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDSImplicitQuerySearchAroundPOIReadAllFrom_initialTag;
  SearchAroundPOIReadSpecified = GEOPDSImplicitQuerySearchAroundPOIReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    objc_msgSend(*(id *)(a1 + 40), "readAll:", 1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return SearchAroundPOIReadSpecified;
}

void sub_188C5D5EC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188C5D7A0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSImplicitQuerySearchAroundPOIIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v2 = (*(_BYTE *)(a1 + 60) & 0x1C) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return v2;
}

void sub_188C5D9C4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSImplicitQuerySearchForEVChargerReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  id v25;
  void *v26;
  _BOOL8 v27;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 1)
        {
          v18 = 0;
          v19 = 0;
          v20 = 0;
          *(_BYTE *)(a1 + 24) |= 1u;
          while (1)
          {
            v21 = *v4;
            v22 = *(_QWORD *)&v3[v21];
            v23 = v22 + 1;
            if (v22 == -1 || v23 > *(_QWORD *)&v3[*v5])
              break;
            v24 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v22);
            *(_QWORD *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0)
              goto LABEL_32;
            v18 += 7;
            v15 = v19++ >= 9;
            if (v15)
            {
              v20 = 0;
              goto LABEL_34;
            }
          }
          v3[*v6] = 1;
LABEL_32:
          if (v3[*v6])
            v20 = 0;
LABEL_34:
          *(_QWORD *)(a1 + 16) = v20;
        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v25 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v26 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v25;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_37;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v27 = v3[*v6] == 0;
  }
  else
  {
LABEL_37:
    v27 = 0;
  }
  objc_sync_exit(v3);

  return v27;
}

void sub_188C5E0E4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSInferredInfoReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  int *v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  int *v18;
  int *v19;
  int *v20;
  int *v21;
  char v22;
  unsigned int v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  BOOL v29;
  int v30;
  unint64_t v32;
  BOOL v33;
  int *v34;
  int v35;
  int v36;
  BOOL v37;
  char v38;
  unsigned int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  id v45;
  void *v46;
  int v47;
  GEOPDSInferredValue *v48;
  void *v49;
  char v50;
  unsigned int v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  char v55;
  char v56;
  uint64_t v57;
  char v58;
  int v59;
  int v60;
  void *v61;
  int v63;
  int *v64;
  char v65;
  char v66;
  char v67;
  char v68;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = v6;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = ((*(unsigned __int8 *)(a1 + 60) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 4) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 2) & 1);
  while (2)
  {
    v14 = 1;
    v15 = 1;
    v16 = 1;
    switch(a3[v9])
    {
      case -4:
        ++v13;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v15 = v11;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v17 = v13 != 0;
        v65 = v17 & ~(_BYTE)v12 | v10;
        v66 = v17 | v12 | v65;
        if ((((v17 | v12) | v8) & 1) != 0)
          v18 = 0;
        else
          v18 = a3;
        v67 = (v18 == 0) | v17 | v12;
        v68 = v17 | v12;
        v19 = (int *)MEMORY[0x1E0D82BF0];
        v20 = (int *)MEMORY[0x1E0D82BC8];
        v21 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v13;
LABEL_7:
        v14 = v10;
LABEL_8:
        v15 = v11;
        v16 = v12;
LABEL_10:
        ++v9;
        v10 = v14;
        v11 = v15;
        v12 = v16;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v19) >= *(_QWORD *)(v3 + *v7) || *(_BYTE *)(v3 + *v20))
      goto LABEL_86;
    v22 = 0;
    v23 = 0;
    v24 = 0;
    while (1)
    {
      v25 = *v19;
      v26 = *(_QWORD *)(v3 + v25);
      v27 = v26 + 1;
      if (v26 == -1 || v27 > *(_QWORD *)(v3 + *v7))
        break;
      v28 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v26);
      *(_QWORD *)(v3 + v25) = v27;
      v24 |= (unint64_t)(v28 & 0x7F) << v22;
      if ((v28 & 0x80) == 0)
        goto LABEL_25;
      v22 += 7;
      v29 = v23++ >= 9;
      if (v29)
      {
        v24 = 0;
        v30 = *(unsigned __int8 *)(v3 + *v20);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v20) = 1;
LABEL_25:
    v30 = *(unsigned __int8 *)(v3 + *v20);
    if (*(_BYTE *)(v3 + *v20))
      v24 = 0;
LABEL_27:
    if (v30 || (v24 & 7) == 4)
    {
LABEL_86:
      v63 = 1;
      goto LABEL_87;
    }
    v32 = v24 >> 3;
    v33 = v68;
    if ((v67 & 1) == 0)
    {
      v34 = v18;
      do
      {
        v36 = *v34++;
        v35 = v36;
        v33 = v36 != 0;
        if (v36)
          v37 = v35 == (_DWORD)v32;
        else
          v37 = 1;
      }
      while (!v37);
    }
    switch((int)v32)
    {
      case 1:
        if ((v8 & 1) == 0)
          goto LABEL_71;
        v38 = 0;
        v39 = 0;
        v40 = 0;
        *(_BYTE *)(a1 + 60) |= 1u;
        while (1)
        {
          v41 = *v19;
          v42 = *(_QWORD *)(v3 + v41);
          v43 = v42 + 1;
          if (v42 == -1 || v43 > *(_QWORD *)(v3 + *v7))
            break;
          v44 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v42);
          *(_QWORD *)(v3 + v41) = v43;
          v40 |= (unint64_t)(v44 & 0x7F) << v38;
          if ((v44 & 0x80) == 0)
            goto LABEL_74;
          v38 += 7;
          v29 = v39++ >= 9;
          if (v29)
          {
            LODWORD(v40) = 0;
            goto LABEL_76;
          }
        }
        *(_BYTE *)(v3 + *v20) = 1;
LABEL_74:
        if (*(_BYTE *)(v3 + *v20))
          LODWORD(v40) = 0;
LABEL_76:
        v57 = 52;
        goto LABEL_81;
      case 2:
        if (!v33)
          goto LABEL_71;
        if ((*(_BYTE *)(a1 + 60) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_106;
          v9 += *(unsigned __int8 *)(a1 + 60) << 28 >> 31;
          goto LABEL_84;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_106;
        v48 = objc_alloc_init(GEOPDSInferredValue);
        if (GEOPDSInferredValueReadAllFrom((uint64_t)v48, (void *)v3))
        {
          PBReaderRecallMark();
          v49 = *(void **)(a1 + 24);
          *(_QWORD *)(a1 + 24) = v48;

          --v9;
LABEL_84:
          v20 = (int *)MEMORY[0x1E0D82BC8];
          v7 = (int *)MEMORY[0x1E0D82BD8];
LABEL_85:
          if (!(v66 & 1 | (v9 != 0)))
            goto LABEL_86;
          continue;
        }
LABEL_105:

LABEL_106:
        v63 = 0;
        v20 = (int *)MEMORY[0x1E0D82BC8];
LABEL_87:
        v64 = &OBJC_IVAR___GEOPDAutocompleteResultSection__readerMarkLength;
        if ((v65 & 1) != 0)
LABEL_88:
          *(_BYTE *)(a1 + v64[892]) |= 4u;
        if (v68 & 1 | ((v63 & 1) == 0))
        {
          *(_BYTE *)(a1 + v64[892]) |= 8u;
          *(_BYTE *)(a1 + v64[892]) |= 0x10u;
          goto LABEL_99;
        }
        if (v18)
        {
          while (1)
          {
            v60 = *v18++;
            v59 = v60;
            if (v60 == 2)
              break;
            if (v59 == 4)
            {
              v58 = 16;
LABEL_95:
              *(_BYTE *)(a1 + v64[892]) |= v58;
            }
            else if (!v59)
            {
              goto LABEL_99;
            }
          }
          v58 = 8;
          goto LABEL_95;
        }
LABEL_99:
        if (v63)
          v3 = *(_BYTE *)(v3 + *v20) == 0;
        else
          v3 = 0;
        if ((v68 & 1) != 0)
        {
          v61 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      case 3:
        if ((v8 & 1) == 0)
          goto LABEL_71;
        v50 = 0;
        v51 = 0;
        v40 = 0;
        *(_BYTE *)(a1 + 60) |= 2u;
        while (2)
        {
          v52 = *v19;
          v53 = *(_QWORD *)(v3 + v52);
          v54 = v53 + 1;
          if (v53 == -1 || v54 > *(_QWORD *)(v3 + *v7))
          {
            *(_BYTE *)(v3 + *v20) = 1;
          }
          else
          {
            v55 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v53);
            *(_QWORD *)(v3 + v52) = v54;
            v40 |= (unint64_t)(v55 & 0x7F) << v50;
            if (v55 < 0)
            {
              v50 += 7;
              v29 = v51++ >= 9;
              if (v29)
              {
                LODWORD(v40) = 0;
                goto LABEL_80;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v20))
          LODWORD(v40) = 0;
LABEL_80:
        v57 = 56;
LABEL_81:
        *(_DWORD *)(a1 + v57) = v40;
        goto LABEL_85;
      case 4:
        if (!v33 || (*(_BYTE *)(a1 + 60) & 0x10) != 0)
          goto LABEL_71;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_106;
        v48 = objc_alloc_init(GEOPDSInferredInfo);
        if (!GEOPDSInferredInfoReadAllFrom())
          goto LABEL_105;
        PBReaderRecallMark();
        -[GEOPDSInferredInfo _addNoFlagsOperand:](a1, v48);

        goto LABEL_84;
      default:
        if ((v65 & 1) == 0 || (*(_BYTE *)(a1 + 60) & 4) != 0)
        {
LABEL_71:
          v56 = PBReaderSkipValueWithTag();
          v7 = (int *)MEMORY[0x1E0D82BD8];
          v20 = (int *)MEMORY[0x1E0D82BC8];
          if ((v56 & 1) == 0)
          {
            v63 = 0;
            goto LABEL_87;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v45 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v46 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v45;

          }
          v47 = PBUnknownFieldAdd();
          v20 = (int *)MEMORY[0x1E0D82BC8];
          v7 = (int *)MEMORY[0x1E0D82BD8];
          if (!v47)
          {
            v63 = 0;
            v64 = &OBJC_IVAR___GEOPDAutocompleteResultSection__readerMarkLength;
            goto LABEL_88;
          }
        }
        goto LABEL_85;
    }
  }
}

void sub_188C5EBA0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188C5F0E0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188C5F1BC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDSInferredInfoCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _BYTE v10[128];
  uint64_t v11;

  v11 = *MEMORY[0x1E0C80C00];
  v6 = 0u;
  v7 = 0u;
  v8 = 0u;
  v9 = 0u;
  v1 = *(id *)(a1 + 32);
  v2 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
  if (v2)
  {
    v3 = v2;
    v4 = *(_QWORD *)v7;
    do
    {
      v5 = 0;
      do
      {
        if (*(_QWORD *)v7 != v4)
          objc_enumerationMutation(v1);
        -[GEOPDSInferredInfo readAll:](*(_QWORD *)(*((_QWORD *)&v6 + 1) + 8 * v5++), 1);
      }
      while (v3 != v5);
      v3 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
    }
    while (v3);
  }

}

unint64_t GEOPDSInferredInfoReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDSInferredInfoReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDSInferredInfoReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDSInferredInfoReadAllFrom_initialTag;
  Specified = GEOPDSInferredInfoReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDSInferredInfoCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_188C5FD54(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSInferredInfoIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  BOOL v13;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  char v23;
  unsigned int v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  int v30;
  int v31;
  BOOL v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  int v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  int v42;
  char v43;
  unsigned int v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  int v50;
  unsigned int v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  int v56;
  unsigned int v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  int v61;
  unsigned int v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  int v66;
  int v67;
  unsigned int v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  int v72;
  int v73;
  _BOOL8 v74;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] >= *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
LABEL_134:
    v74 = a1[*v4] == 0;
    PBReaderRecallMark();
    return v74;
  }
  v5 = (int *)MEMORY[0x1E0D82BB8];
  while (2)
  {
    if (a1[*v4])
      goto LABEL_134;
    v6 = 0;
    v7 = 0;
    v8 = 0;
    while (1)
    {
      v9 = *v2;
      v10 = *(_QWORD *)&a1[v9];
      v11 = v10 + 1;
      if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
        break;
      v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
      *(_QWORD *)&a1[v9] = v11;
      v8 |= (unint64_t)(v12 & 0x7F) << v6;
      if ((v12 & 0x80) == 0)
        goto LABEL_12;
      v6 += 7;
      v13 = v7++ >= 9;
      if (v13)
      {
        v8 = 0;
        v14 = a1[*v4];
        goto LABEL_14;
      }
    }
    a1[*v4] = 1;
LABEL_12:
    v14 = a1[*v4];
    if (a1[*v4])
      v8 = 0;
LABEL_14:
    v15 = v8 & 7;
    if (v14 || v15 == 4)
      goto LABEL_134;
    switch((v8 >> 3))
    {
      case 1u:
        if ((v8 & 7) != 0)
          goto LABEL_137;
        v17 = 0;
        while (1)
        {
          v18 = *v2;
          v19 = *(_QWORD *)&a1[v18];
          v20 = v19 + 1;
          if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
            goto LABEL_126;
          v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
          *(_QWORD *)&a1[v18] = v20;
          if (v21 < 0)
          {
            v22 = v17++ > 8;
            if (!v22)
              continue;
          }
          goto LABEL_133;
        }
      case 2u:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_137;
        objc_msgSend(a1, "position", 0, 0);
        objc_msgSend(a1, "length");
LABEL_32:
        if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3] || a1[*v4])
          goto LABEL_131;
        v23 = 0;
        v24 = 0;
        v25 = 0;
        while (2)
        {
          v26 = *v2;
          v27 = *(_QWORD *)&a1[v26];
          v28 = v27 + 1;
          if (v27 == -1 || v28 > *(_QWORD *)&a1[*v3])
          {
            a1[*v4] = 1;
          }
          else
          {
            v29 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v27);
            *(_QWORD *)&a1[v26] = v28;
            v25 |= (unint64_t)(v29 & 0x7F) << v23;
            if (v29 < 0)
            {
              v23 += 7;
              v13 = v24++ >= 9;
              if (v13)
              {
                v25 = 0;
                v30 = a1[*v4];
                goto LABEL_44;
              }
              continue;
            }
          }
          break;
        }
        v30 = a1[*v4];
        if (a1[*v4])
          v25 = 0;
LABEL_44:
        v31 = v25 & 7;
        if (v30)
          v32 = 1;
        else
          v32 = v31 == 4;
        if (v32)
        {
LABEL_131:
          v73 = a1[*v4];
          PBReaderRecallMark();
          if (v73)
            goto LABEL_137;
LABEL_132:
          PBReaderRecallMark();
LABEL_133:
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_134;
          continue;
        }
        switch((v25 >> 3))
        {
          case 1u:
            if ((v25 & 7) != 0)
              goto LABEL_136;
            v33 = 0;
            while (1)
            {
              v34 = *v2;
              v35 = *(_QWORD *)&a1[v34];
              v36 = v35 + 1;
              if (v35 == -1 || v36 > *(_QWORD *)&a1[*v3])
                goto LABEL_115;
              v37 = *(char *)(*(_QWORD *)&a1[*v5] + v35);
              *(_QWORD *)&a1[v34] = v36;
              if (v37 < 0)
              {
                v22 = v33++ > 8;
                if (!v22)
                  continue;
              }
              goto LABEL_32;
            }
          case 2u:
            if ((v25 & 7) != 0)
              goto LABEL_136;
            v38 = 0;
            while (1)
            {
              v39 = *v2;
              v40 = *(_QWORD *)&a1[v39];
              v41 = v40 + 1;
              if (v40 == -1 || v41 > *(_QWORD *)&a1[*v3])
                goto LABEL_115;
              v42 = *(char *)(*(_QWORD *)&a1[*v5] + v40);
              *(_QWORD *)&a1[v39] = v41;
              if (v42 < 0)
              {
                v22 = v38++ > 8;
                if (!v22)
                  continue;
              }
              goto LABEL_32;
            }
          case 3u:
            if (v31 != 2 || !PBReaderPlaceMark())
              goto LABEL_136;
            objc_msgSend(a1, "position");
            objc_msgSend(a1, "length");
            break;
          case 4u:
            if ((v25 & 7) != 0)
              goto LABEL_136;
            v62 = 0;
            do
            {
              v63 = *v2;
              v64 = *(_QWORD *)&a1[v63];
              v65 = v64 + 1;
              if (v64 == -1 || v65 > *(_QWORD *)&a1[*v3])
              {
LABEL_115:
                a1[*v4] = 1;
                goto LABEL_32;
              }
              v66 = *(char *)(*(_QWORD *)&a1[*v5] + v64);
              *(_QWORD *)&a1[v63] = v65;
              if ((v66 & 0x80000000) == 0)
                break;
              v22 = v62++ > 8;
            }
            while (!v22);
            goto LABEL_32;
          default:
            if ((PBReaderSkipValueWithTag() & 1) != 0)
              goto LABEL_32;
            goto LABEL_136;
        }
LABEL_70:
        while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3] && !a1[*v4])
        {
          v43 = 0;
          v44 = 0;
          v45 = 0;
          while (1)
          {
            v46 = *v2;
            v47 = *(_QWORD *)&a1[v46];
            v48 = v47 + 1;
            if (v47 == -1 || v48 > *(_QWORD *)&a1[*v3])
              break;
            v49 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v47);
            *(_QWORD *)&a1[v46] = v48;
            v45 |= (unint64_t)(v49 & 0x7F) << v43;
            if ((v49 & 0x80) == 0)
              goto LABEL_80;
            v43 += 7;
            v13 = v44++ >= 9;
            if (v13)
            {
              v45 = 0;
              v50 = a1[*v4];
              goto LABEL_82;
            }
          }
          a1[*v4] = 1;
LABEL_80:
          v50 = a1[*v4];
          if (a1[*v4])
            v45 = 0;
LABEL_82:
          if (v50 || (v45 & 7) == 4)
            break;
          if ((v45 >> 3) == 2)
          {
            if ((v45 & 7) == 0)
            {
              v57 = 0;
              while (1)
              {
                v58 = *v2;
                v59 = *(_QWORD *)&a1[v58];
                v60 = v59 + 1;
                if (v59 == -1 || v60 > *(_QWORD *)&a1[*v3])
                  break;
                v61 = *(char *)(*(_QWORD *)&a1[*v5] + v59);
                *(_QWORD *)&a1[v58] = v60;
                if (v61 < 0)
                {
                  v22 = v57++ > 8;
                  if (!v22)
                    continue;
                }
                goto LABEL_70;
              }
LABEL_104:
              a1[*v4] = 1;
              continue;
            }
            goto LABEL_135;
          }
          if ((v45 >> 3) == 1)
          {
            if ((v45 & 7) == 0)
            {
              v52 = 0;
              while (1)
              {
                v53 = *v2;
                v54 = *(_QWORD *)&a1[v53];
                v55 = v54 + 1;
                if (v54 == -1 || v55 > *(_QWORD *)&a1[*v3])
                  goto LABEL_104;
                v56 = *(char *)(*(_QWORD *)&a1[*v5] + v54);
                *(_QWORD *)&a1[v53] = v55;
                if (v56 < 0)
                {
                  v22 = v52++ > 8;
                  if (!v22)
                    continue;
                }
                goto LABEL_70;
              }
            }
LABEL_135:
            PBReaderRecallMark();
            goto LABEL_136;
          }
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_135;
        }
        v67 = a1[*v4];
        PBReaderRecallMark();
        if (!v67)
        {
          PBReaderRecallMark();
          goto LABEL_32;
        }
LABEL_136:
        PBReaderRecallMark();
LABEL_137:
        PBReaderRecallMark();
        return 0;
      case 3u:
        if ((v8 & 7) != 0)
          goto LABEL_137;
        v68 = 0;
        while (1)
        {
          v69 = *v2;
          v70 = *(_QWORD *)&a1[v69];
          v71 = v70 + 1;
          if (v70 == -1 || v71 > *(_QWORD *)&a1[*v3])
            break;
          v72 = *(char *)(*(_QWORD *)&a1[*v5] + v70);
          *(_QWORD *)&a1[v69] = v71;
          if (v72 < 0)
          {
            v22 = v68++ > 8;
            if (!v22)
              continue;
          }
          goto LABEL_133;
        }
LABEL_126:
        a1[*v4] = 1;
        goto LABEL_133;
      case 4u:
        if (v15 == 2 && PBReaderPlaceMark() && GEOPDSInferredInfoIsValid(a1))
          goto LABEL_132;
        goto LABEL_137;
      default:
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_137;
        goto LABEL_133;
    }
  }
}

void sub_188C606A8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDSInferredInfoIsDirty(uint64_t a1)
{
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t i;
  os_unfair_lock_s *v6;
  char IsDirty;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  _BYTE v13[128];
  uint64_t v14;

  v14 = *MEMORY[0x1E0C80C00];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  if ((*(_BYTE *)(a1 + 60) & 0x38) != 0)
    return 1;
  if ((*(_BYTE *)(a1 + 60) & 0x10) == 0)
    return 0;
  v11 = 0u;
  v12 = 0u;
  v9 = 0u;
  v10 = 0u;
  v3 = *(id *)(a1 + 32);
  v2 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v9, v13, 16);
  if (v2)
  {
    v4 = *(_QWORD *)v10;
    while (2)
    {
      for (i = 0; i != v2; ++i)
      {
        if (*(_QWORD *)v10 != v4)
          objc_enumerationMutation(v3);
        v6 = *(os_unfair_lock_s **)(*((_QWORD *)&v9 + 1) + 8 * i);
        if (v6)
        {
          os_unfair_lock_lock_with_options();
          IsDirty = _GEOPDSInferredInfoIsDirty(v6);
          os_unfair_lock_unlock(v6 + 12);
          if ((IsDirty & 1) != 0)
          {
            v2 = 1;
            goto LABEL_16;
          }
        }
      }
      v2 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v9, v13, 16);
      if (v2)
        continue;
      break;
    }
  }
LABEL_16:

  return v2;
}

void sub_188C60ABC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSInferredSignalsReadAllFrom(uint64_t a1, void *a2, int a3)
{
  char *v5;
  int *v6;
  int *v7;
  int *v8;
  int *v9;
  char v10;
  unsigned int v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  int v18;
  GEOPDSInferredInfo *v20;
  void *v21;
  id v22;
  void *v23;
  _BOOL8 v24;

  v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    v6 = (int *)MEMORY[0x1E0D82BF0];
    v7 = (int *)MEMORY[0x1E0D82BD8];
    v8 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v5[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v5[*MEMORY[0x1E0D82BD8]])
    {
      v9 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v5[*v8])
          break;
        v10 = 0;
        v11 = 0;
        v12 = 0;
        while (1)
        {
          v13 = *v6;
          v14 = *(_QWORD *)&v5[v13];
          v15 = v14 + 1;
          if (v14 == -1 || v15 > *(_QWORD *)&v5[*v7])
            break;
          v16 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v14);
          *(_QWORD *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0)
            goto LABEL_13;
          v10 += 7;
          if (v11++ >= 9)
          {
            v12 = 0;
            v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        v18 = v5[*v8];
        if (v5[*v8])
          v12 = 0;
LABEL_15:
        if (v18 || (v12 & 7) == 4)
          break;
        if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_29;
          v20 = objc_alloc_init(GEOPDSInferredInfo);
          if (!GEOPDSInferredInfoReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          v21 = *(void **)(a1 + 16);
          *(_QWORD *)(a1 + 16) = v20;

        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v22 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v23 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v22;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_29;
        }
      }
      while (*(_QWORD *)&v5[*v6] < *(_QWORD *)&v5[*v7]);
    }
    v24 = v5[*v8] == 0;
  }
  else
  {
LABEL_29:
    v24 = 0;
  }
  objc_sync_exit(v5);

  return v24;
}

void sub_188C61794(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSInferredSignalsIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  _BOOL8 v17;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDSInferredInfoIsValid(a1))
        {
LABEL_27:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_27;
      }
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

BOOL GEOPDSInferredValueReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  id v25;
  void *v26;
  char v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  GEOPDSRawAttribute *v33;
  void *v34;
  char v35;
  unsigned int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  char v41;
  uint64_t v42;
  _BOOL8 v43;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      while (!v3[*v6])
      {
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        switch((v10 >> 3))
        {
          case 1u:
            v18 = 0;
            v19 = 0;
            v20 = 0;
            *(_BYTE *)(a1 + 36) |= 1u;
            while (1)
            {
              v21 = *v4;
              v22 = *(_QWORD *)&v3[v21];
              v23 = v22 + 1;
              if (v22 == -1 || v23 > *(_QWORD *)&v3[*v5])
                break;
              v24 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v22);
              *(_QWORD *)&v3[v21] = v23;
              v20 |= (unint64_t)(v24 & 0x7F) << v18;
              if ((v24 & 0x80) == 0)
                goto LABEL_49;
              v18 += 7;
              v15 = v19++ >= 9;
              if (v15)
              {
                LODWORD(v20) = 0;
                goto LABEL_51;
              }
            }
            v3[*v6] = 1;
LABEL_49:
            if (v3[*v6])
              LODWORD(v20) = 0;
LABEL_51:
            v42 = 24;
            goto LABEL_56;
          case 2u:
            v27 = 0;
            v28 = 0;
            v20 = 0;
            *(_BYTE *)(a1 + 36) |= 2u;
            while (2)
            {
              v29 = *v4;
              v30 = *(_QWORD *)&v3[v29];
              v31 = v30 + 1;
              if (v30 == -1 || v31 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v32 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v30);
                *(_QWORD *)&v3[v29] = v31;
                v20 |= (unint64_t)(v32 & 0x7F) << v27;
                if (v32 < 0)
                {
                  v27 += 7;
                  v15 = v28++ >= 9;
                  if (v15)
                  {
                    LODWORD(v20) = 0;
                    goto LABEL_55;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              LODWORD(v20) = 0;
LABEL_55:
            v42 = 28;
LABEL_56:
            *(_DWORD *)(a1 + v42) = v20;
            goto LABEL_61;
          case 3u:
            if ((PBReaderPlaceMark() & 1) == 0)
              goto LABEL_64;
            v33 = objc_alloc_init(GEOPDSRawAttribute);
            if (!GEOPDSRawAttributeReadAllFrom((uint64_t)v33, v3))
            {

              goto LABEL_64;
            }
            PBReaderRecallMark();
            v34 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v33;

LABEL_61:
            if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
              goto LABEL_62;
            break;
          case 4u:
            v35 = 0;
            v36 = 0;
            v37 = 0;
            *(_BYTE *)(a1 + 36) |= 4u;
            while (2)
            {
              v38 = *v4;
              v39 = *(_QWORD *)&v3[v38];
              v40 = v39 + 1;
              if (v39 == -1 || v40 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v41 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v39);
                *(_QWORD *)&v3[v38] = v40;
                v37 |= (unint64_t)(v41 & 0x7F) << v35;
                if (v41 < 0)
                {
                  v35 += 7;
                  v15 = v36++ >= 9;
                  if (v15)
                  {
                    v37 = 0;
                    goto LABEL_60;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              v37 = 0;
LABEL_60:
            *(_BYTE *)(a1 + 32) = v37 != 0;
            goto LABEL_61;
          default:
            if (!*(_QWORD *)(a1 + 8))
            {
              v25 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
              v26 = *(void **)(a1 + 8);
              *(_QWORD *)(a1 + 8) = v25;

            }
            if (!PBUnknownFieldAdd())
              goto LABEL_64;
            goto LABEL_61;
        }
      }
    }
LABEL_62:
    v43 = v3[*v6] == 0;
  }
  else
  {
LABEL_64:
    v43 = 0;
  }
  objc_sync_exit(v3);

  return v43;
}

void sub_188C62474(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSPunchInHintsReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  char v17;
  unsigned __int8 v18;
  char v19;
  int *v20;
  int *v21;
  int *v22;
  int *v23;
  char v24;
  unsigned int v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  int v32;
  unint64_t v34;
  BOOL v35;
  int *v36;
  int v37;
  int v38;
  BOOL v39;
  uint64_t v40;
  void *v41;
  id v42;
  void *v43;
  int v44;
  GEOPDSPunchInQueryHints *v45;
  uint64_t v46;
  char v47;
  char v48;
  int v49;
  char v50;
  void *v51;
  int v53;
  int *v54;
  char v55;
  char v56;
  char v57;
  BOOL v58;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 60);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 56));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = (vaddv_s16((int16x4_t)(*(_QWORD *)&vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int8 *)(a1 + 68)), (uint16x4_t)0xFFFCFFFDFFFFFFFELL) & 0xFF01FF01FF01FF01))+ (*(_BYTE *)(a1 + 68) & 1));
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 > 2;
        v17 = v16 & ~(_BYTE)v11 | v9;
        v18 = v16 | v11;
        v55 = v17;
        v19 = v18 | v17;
        if (((v18 | v8) & 1) != 0)
          v20 = 0;
        else
          v20 = a3;
        v58 = v18;
        v56 = v19;
        v57 = (v20 == 0) | v18;
        v21 = (int *)MEMORY[0x1E0D82BF0];
        v22 = (int *)MEMORY[0x1E0D82BC8];
        v23 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v7;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v21) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v22))
      goto LABEL_76;
    v24 = 0;
    v25 = 0;
    v26 = 0;
    while (1)
    {
      v27 = *v21;
      v28 = *(_QWORD *)(v3 + v27);
      v29 = v28 + 1;
      if (v28 == -1 || v29 > *(_QWORD *)(v3 + *v6))
        break;
      v30 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v28);
      *(_QWORD *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0)
        goto LABEL_25;
      v24 += 7;
      if (v25++ >= 9)
      {
        v26 = 0;
        v32 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v22) = 1;
LABEL_25:
    v32 = *(unsigned __int8 *)(v3 + *v22);
    if (*(_BYTE *)(v3 + *v22))
      v26 = 0;
LABEL_27:
    if (v32 || (v26 & 7) == 4)
    {
LABEL_76:
      v53 = 1;
      goto LABEL_77;
    }
    v34 = v26 >> 3;
    v35 = v58;
    if ((v57 & 1) == 0)
    {
      v36 = v20;
      do
      {
        v38 = *v36++;
        v37 = v38;
        v35 = v38 != 0;
        if (v38)
          v39 = v37 == (_DWORD)v34;
        else
          v39 = 1;
      }
      while (!v39);
    }
    switch((int)v34)
    {
      case 1:
        if (!v35)
          goto LABEL_65;
        if ((*(_BYTE *)(a1 + 68) & 2) == 0)
        {
          PBReaderReadString();
          v40 = objc_claimAutoreleasedReturnValue();
          v41 = *(void **)(a1 + 24);
          *(_QWORD *)(a1 + 24) = v40;
          goto LABEL_64;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_95;
        v48 = *(_BYTE *)(a1 + 68) << 6;
        goto LABEL_73;
      case 2:
        if (!v35)
          goto LABEL_65;
        if ((*(_BYTE *)(a1 + 68) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_95;
          v48 = 32 * *(_BYTE *)(a1 + 68);
          goto LABEL_73;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_95;
        v45 = objc_alloc_init(GEOPDSPunchInQueryHints);
        if (!GEOPDSPunchInQueryHintsReadAllFrom((uint64_t)v45, (void *)v3, v10 & 1))
          goto LABEL_94;
        PBReaderRecallMark();
        v46 = 32;
        goto LABEL_63;
      case 3:
        if (!v35 || (*(_BYTE *)(a1 + 68) & 8) != 0)
          goto LABEL_65;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_95;
        v45 = objc_alloc_init(GEOPDSPunchInResultHints);
        if (!GEOPDSPunchInResultHintsReadAllFrom((uint64_t)v45, (void *)v3, v10 & 1))
          goto LABEL_94;
        PBReaderRecallMark();
        -[GEOPDSPunchInHints _addNoFlagsResultHints:](a1, v45);

        goto LABEL_74;
      case 4:
        if (!v35)
          goto LABEL_65;
        if ((*(_BYTE *)(a1 + 68) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_95;
          v48 = 8 * *(_BYTE *)(a1 + 68);
LABEL_73:
          v7 += v48 >> 7;
LABEL_74:
          v22 = (int *)MEMORY[0x1E0D82BC8];
          goto LABEL_75;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_95;
        v45 = objc_alloc_init(GEOPDSPunchInResultHints);
        if (GEOPDSPunchInResultHintsReadAllFrom((uint64_t)v45, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          v46 = 48;
LABEL_63:
          v41 = *(void **)(a1 + v46);
          *(_QWORD *)(a1 + v46) = v45;
LABEL_64:

          --v7;
          goto LABEL_74;
        }
LABEL_94:

LABEL_95:
        v53 = 0;
        v54 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
        v22 = (int *)MEMORY[0x1E0D82BC8];
LABEL_78:
        if ((v55 & 1) != 0)
LABEL_79:
          *(_BYTE *)(a1 + v54[856]) |= 1u;
        if (v58 || (v53 & 1) == 0)
        {
          *(_BYTE *)(a1 + v54[856]) |= 2u;
          *(_BYTE *)(a1 + v54[856]) |= 4u;
          *(_BYTE *)(a1 + v54[856]) |= 8u;
          *(_BYTE *)(a1 + v54[856]) |= 0x10u;
        }
        else if (v20)
        {
          while (1)
          {
            v49 = *v20++;
            v50 = 2;
            switch(v49)
            {
              case 0:
                goto LABEL_88;
              case 1:
                goto LABEL_87;
              case 2:
                v50 = 4;
                goto LABEL_87;
              case 3:
                v50 = 8;
                goto LABEL_87;
              case 4:
                v50 = 16;
LABEL_87:
                *(_BYTE *)(a1 + v54[856]) |= v50;
                break;
              default:
                continue;
            }
          }
        }
LABEL_88:
        if (v53)
          v3 = *(_BYTE *)(v3 + *v22) == 0;
        else
          v3 = 0;
        if (v58)
        {
          v51 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      default:
        if ((v55 & 1) == 0 || (*(_BYTE *)(a1 + 68) & 1) != 0)
        {
LABEL_65:
          v47 = PBReaderSkipValueWithTag();
          v22 = (int *)MEMORY[0x1E0D82BC8];
          if ((v47 & 1) == 0)
          {
            v53 = 0;
LABEL_77:
            v54 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
            goto LABEL_78;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v42 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v43 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v42;

          }
          v44 = PBUnknownFieldAdd();
          v22 = (int *)MEMORY[0x1E0D82BC8];
          if (!v44)
          {
            v53 = 0;
            v54 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
            goto LABEL_79;
          }
        }
LABEL_75:
        if (!(v56 & 1 | (v7 != 0)))
          goto LABEL_76;
        continue;
    }
  }
}

void sub_188C630B4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188C6320C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188C633C0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188C638D4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188C639B4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDSPunchInHintsCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _BYTE v11[128];
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  -[GEOPDSPunchInQueryHints readAll:](*(_QWORD *)(a1 + 32), 1);
  v9 = 0u;
  v10 = 0u;
  v7 = 0u;
  v8 = 0u;
  v2 = *(id *)(a1 + 40);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v8;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v8 != v5)
          objc_enumerationMutation(v2);
        -[GEOPDSPunchInResultHints readAll:](*(_QWORD *)(*((_QWORD *)&v7 + 1) + 8 * v6++), 1);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
    }
    while (v4);
  }

  -[GEOPDSPunchInResultHints readAll:](*(_QWORD *)(a1 + 48), 1);
}

unint64_t GEOPDSPunchInHintsReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 60))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDSPunchInHintsReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 60) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDSPunchInHintsReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDSPunchInHintsReadAllFrom_initialTag;
  Specified = GEOPDSPunchInHintsReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDSPunchInHintsCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_188C64118(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSPunchInHintsIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  BOOL v13;
  int v14;
  int v15;
  BOOL v16;
  char v17;
  unsigned int v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  int v24;
  int v25;
  int v27;
  _BOOL8 v28;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] >= *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
    goto LABEL_57;
  v5 = (int *)MEMORY[0x1E0D82BB8];
  do
  {
    if (a1[*v4])
      break;
    v6 = 0;
    v7 = 0;
    v8 = 0;
    while (1)
    {
      v9 = *v2;
      v10 = *(_QWORD *)&a1[v9];
      v11 = v10 + 1;
      if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
        break;
      v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
      *(_QWORD *)&a1[v9] = v11;
      v8 |= (unint64_t)(v12 & 0x7F) << v6;
      if ((v12 & 0x80) == 0)
        goto LABEL_12;
      v6 += 7;
      v13 = v7++ >= 9;
      if (v13)
      {
        v8 = 0;
        v14 = a1[*v4];
        goto LABEL_14;
      }
    }
    a1[*v4] = 1;
LABEL_12:
    v14 = a1[*v4];
    if (a1[*v4])
      v8 = 0;
LABEL_14:
    v15 = v8 & 7;
    if (v14)
      v16 = 1;
    else
      v16 = v15 == 4;
    if (v16)
      break;
    switch((v8 >> 3))
    {
      case 1u:
        if (v15 != 2)
          goto LABEL_59;
        goto LABEL_24;
      case 2u:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_59;
        objc_msgSend(a1, "position", 0, 0);
        objc_msgSend(a1, "length");
        break;
      case 3u:
      case 4u:
        if (v15 == 2 && PBReaderPlaceMark() && GEOPDSPunchInResultHintsIsValid(a1))
          goto LABEL_55;
        goto LABEL_59;
      default:
LABEL_24:
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_59;
        continue;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3] && !a1[*v4])
    {
      v17 = 0;
      v18 = 0;
      v19 = 0;
      while (1)
      {
        v20 = *v2;
        v21 = *(_QWORD *)&a1[v20];
        v22 = v21 + 1;
        if (v21 == -1 || v22 > *(_QWORD *)&a1[*v3])
          break;
        v23 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v21);
        *(_QWORD *)&a1[v20] = v22;
        v19 |= (unint64_t)(v23 & 0x7F) << v17;
        if ((v23 & 0x80) == 0)
          goto LABEL_39;
        v17 += 7;
        v13 = v18++ >= 9;
        if (v13)
        {
          v19 = 0;
          v24 = a1[*v4];
          goto LABEL_41;
        }
      }
      a1[*v4] = 1;
LABEL_39:
      v24 = a1[*v4];
      if (a1[*v4])
        v19 = 0;
LABEL_41:
      v25 = v19 & 7;
      if (v24 || v25 == 4)
        break;
      if ((v19 >> 3) == 2)
      {
        if (v25 != 2)
          goto LABEL_58;
        goto LABEL_50;
      }
      if ((v19 >> 3) == 1)
      {
        if (v25 != 2)
          goto LABEL_58;
LABEL_50:
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_58;
      }
      else if (!PBReaderSkipValueWithTag())
      {
LABEL_58:
        PBReaderRecallMark();
        goto LABEL_59;
      }
    }
    v27 = a1[*v4];
    PBReaderRecallMark();
    if (v27)
    {
LABEL_59:
      PBReaderRecallMark();
      return 0;
    }
LABEL_55:
    PBReaderRecallMark();
  }
  while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
LABEL_57:
  v28 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v28;
}

BOOL GEOPDSPunchInResultHintsIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  _BOOL8 v28;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0)
            goto LABEL_48;
          v17 = 0;
          while (1)
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
              goto LABEL_44;
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if (v21 < 0)
            {
              v22 = v17++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_45;
          }
        case 2u:
          if (v15 == 2)
            goto LABEL_30;
          goto LABEL_48;
        case 3u:
          if (v15 == 2)
            goto LABEL_30;
          goto LABEL_48;
        case 4u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOLatLngIsValid(a1))
            goto LABEL_48;
          PBReaderRecallMark();
          continue;
        case 5u:
          if ((v8 & 7) != 0)
            goto LABEL_48;
          v23 = 0;
          break;
        default:
LABEL_30:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_48:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v24 = *v2;
        v25 = *(_QWORD *)&a1[v24];
        v26 = v25 + 1;
        if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
          break;
        v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
        *(_QWORD *)&a1[v24] = v26;
        if (v27 < 0)
        {
          v22 = v23++ > 8;
          if (!v22)
            continue;
        }
        goto LABEL_45;
      }
LABEL_44:
      a1[*v4] = 1;
LABEL_45:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v28 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v28;
}

void sub_188C649A4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDSPunchInHintsIsDirty(uint64_t a1)
{
  int v2;
  uint64_t v3;
  uint64_t v5;
  int v6;
  id v7;
  uint64_t v8;
  uint64_t i;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  _BYTE v14[128];
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  v2 = *(unsigned __int8 *)(a1 + 68);
  if ((v2 & 0x22222222) != 0)
    return 1;
  if ((v2 & 4) != 0)
  {
    v5 = *(_QWORD *)(a1 + 32);
    if (v5)
    {
      os_unfair_lock_lock_with_options();
      os_unfair_lock_assert_owner((const os_unfair_lock *)(v5 + 48));
      v6 = *(_BYTE *)(v5 + 52) & 0xE;
      os_unfair_lock_unlock((os_unfair_lock_t)(v5 + 48));
      if (v6)
        return 1;
      LOBYTE(v2) = *(_BYTE *)(a1 + 68);
    }
  }
  if ((v2 & 8) != 0)
    return 1;
  if ((v2 & 0x10) == 0)
    return 0;
  if (GEOPDSPunchInResultHintsIsDirty(*(_QWORD *)(a1 + 48)))
    return 1;
  if ((*(_BYTE *)(a1 + 68) & 8) == 0)
    return 0;
  v12 = 0u;
  v13 = 0u;
  v10 = 0u;
  v11 = 0u;
  v7 = *(id *)(a1 + 40);
  v3 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v10, v14, 16);
  if (v3)
  {
    v8 = *(_QWORD *)v11;
    while (2)
    {
      for (i = 0; i != v3; ++i)
      {
        if (*(_QWORD *)v11 != v8)
          objc_enumerationMutation(v7);
        if (GEOPDSPunchInResultHintsIsDirty(*(_QWORD *)(*((_QWORD *)&v10 + 1) + 8 * i)))
        {
          v3 = 1;
          goto LABEL_23;
        }
      }
      v3 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v10, v14, 16);
      if (v3)
        continue;
      break;
    }
  }
LABEL_23:

  return v3;
}

os_unfair_lock_s *GEOPDSPunchInHintsIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOPDSPunchInHintsIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 16);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_188C64FB4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188C65918(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSPunchInQueryHintsReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  unsigned __int8 v15;
  int *v16;
  int *v17;
  int *v18;
  int *v19;
  char v20;
  unsigned int v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  int v28;
  unint64_t v30;
  BOOL v31;
  int *v32;
  int v33;
  int v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  id v39;
  void *v40;
  int v41;
  char v42;
  char v43;
  int v44;
  int v45;
  void *v46;
  int v48;
  int *v49;
  unsigned __int8 v50;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1)
      + (*(_BYTE *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v11;
        v12 = v7;
        goto LABEL_8;
      case -3:
        v9 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v11 != 0;
        v15 = v14 | v7;
        v50 = v14 & ~(_BYTE)v7 | v8;
        if ((((v14 | v7) | v9) & 1) != 0)
          v16 = 0;
        else
          v16 = a3;
        v17 = (int *)MEMORY[0x1E0D82BF0];
        v18 = (int *)MEMORY[0x1E0D82BC8];
        v19 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_7:
        v12 = v7;
        v13 = v8;
LABEL_8:
        ++v10;
        v7 = v12;
        v8 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v17) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v18))
      goto LABEL_59;
    v20 = 0;
    v21 = 0;
    v22 = 0;
    while (1)
    {
      v23 = *v17;
      v24 = *(_QWORD *)(v3 + v23);
      v25 = v24 + 1;
      if (v24 == -1 || v25 > *(_QWORD *)(v3 + *v6))
        break;
      v26 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v24);
      *(_QWORD *)(v3 + v23) = v25;
      v22 |= (unint64_t)(v26 & 0x7F) << v20;
      if ((v26 & 0x80) == 0)
        goto LABEL_23;
      v20 += 7;
      if (v21++ >= 9)
      {
        v22 = 0;
        v28 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(_BYTE *)(v3 + *v18) = 1;
LABEL_23:
    v28 = *(unsigned __int8 *)(v3 + *v18);
    if (*(_BYTE *)(v3 + *v18))
      v22 = 0;
LABEL_25:
    if (v28 || (v22 & 7) == 4)
    {
LABEL_59:
      v48 = 1;
      goto LABEL_60;
    }
    v30 = v22 >> 3;
    v31 = v15;
    if (!((v16 == 0) | v15 & 1))
    {
      v32 = v16;
      do
      {
        v34 = *v32++;
        v33 = v34;
        v31 = v34 != 0;
        if (v34)
          v35 = v33 == (_DWORD)v30;
        else
          v35 = 1;
      }
      while (!v35);
    }
    if ((_DWORD)v30 == 2)
      break;
    if ((_DWORD)v30 == 1)
    {
      if (v31)
      {
        if ((*(_BYTE *)(a1 + 52) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_78;
          v43 = 32 * *(_BYTE *)(a1 + 52);
          goto LABEL_57;
        }
        PBReaderReadString();
        v36 = objc_claimAutoreleasedReturnValue();
        v37 = 32;
        goto LABEL_44;
      }
    }
    else if ((v50 & 1) != 0 && (*(_BYTE *)(a1 + 52) & 1) == 0)
    {
      if (!*(_QWORD *)(a1 + 16))
      {
        v39 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v40 = *(void **)(a1 + 16);
        *(_QWORD *)(a1 + 16) = v39;

      }
      v41 = PBUnknownFieldAdd();
      v18 = (int *)MEMORY[0x1E0D82BC8];
      if (!v41)
      {
        v48 = 0;
        v49 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
        goto LABEL_62;
      }
      goto LABEL_58;
    }
LABEL_51:
    v42 = PBReaderSkipValueWithTag();
    v18 = (int *)MEMORY[0x1E0D82BC8];
    if ((v42 & 1) == 0)
    {
      v48 = 0;
LABEL_60:
      v49 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
      goto LABEL_61;
    }
LABEL_58:
    if (!((v15 | v50) & 1 | (v10 != 0)))
      goto LABEL_59;
  }
  if (!v31)
    goto LABEL_51;
  if ((*(_BYTE *)(a1 + 52) & 2) == 0)
  {
    PBReaderReadString();
    v36 = objc_claimAutoreleasedReturnValue();
    v37 = 24;
LABEL_44:
    v38 = *(void **)(a1 + v37);
    *(_QWORD *)(a1 + v37) = v36;

    v18 = (int *)MEMORY[0x1E0D82BC8];
    --v10;
    goto LABEL_58;
  }
  if ((PBReaderSkipValueWithTag() & 1) != 0)
  {
    v43 = *(_BYTE *)(a1 + 52) << 6;
LABEL_57:
    v10 += v43 >> 7;
    v18 = (int *)MEMORY[0x1E0D82BC8];
    goto LABEL_58;
  }
LABEL_78:
  v48 = 0;
  v49 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
  v18 = (int *)MEMORY[0x1E0D82BC8];
LABEL_61:
  if ((v50 & 1) == 0)
    goto LABEL_63;
LABEL_62:
  *(_BYTE *)(a1 + v49[864]) |= 1u;
LABEL_63:
  if (v15 & 1 | ((v48 & 1) == 0))
  {
    *(_BYTE *)(a1 + v49[864]) |= 4u;
    *(_BYTE *)(a1 + v49[864]) |= 2u;
    goto LABEL_72;
  }
  if (v16)
  {
    while (1)
    {
      v45 = *v16++;
      v44 = v45;
      if (v45 == 1)
        break;
      if (v44 == 2)
      {
LABEL_68:
        *(_BYTE *)(a1 + v49[864]) |= v44;
      }
      else if (!v44)
      {
        goto LABEL_72;
      }
    }
    LOBYTE(v44) = 4;
    goto LABEL_68;
  }
LABEL_72:
  if (v48)
  {
    v3 = *(_BYTE *)(v3 + *v18) == 0;
    if ((v15 & 1) == 0)
      return v3;
LABEL_76:
    v46 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  else
  {
    v3 = 0;
    if ((v15 & 1) != 0)
      goto LABEL_76;
  }
  return v3;
}

void sub_188C65F48(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188C662E0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSPunchInQueryHintsReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDSPunchInQueryHintsReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDSPunchInQueryHintsReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDSPunchInQueryHintsReadAllFrom_initialTag;
  Specified = GEOPDSPunchInQueryHintsReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_188C66530(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188C666BC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188C6682C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSPunchInResultHintsReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  int *v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  BOOL v28;
  int v29;
  unint64_t v31;
  BOOL v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  char v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  id v44;
  void *v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  GEOLatLng *v50;
  char v51;
  unsigned int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  char v57;
  char v58;
  char v59;
  int v60;
  char v61;
  void *v62;
  int v64;
  int *v65;
  char v66;
  char v67;
  char v68;
  char v69;
  char v70;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 60);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 56));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = vaddv_s16((int16x4_t)(*(_QWORD *)&vshl_u16((uint16x4_t)(*(_QWORD *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 72)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFEFFFDFFFBFFFCLL) & 0xFF01FF01FF01FF01));
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v9])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 > 1;
        v66 = v16 & ~(_BYTE)v11 | v7;
        v67 = v8;
        v68 = v16 | v11 | v66;
        if ((((v16 | v11) | v8) & 1) != 0)
          v17 = 0;
        else
          v17 = a3;
        v69 = (v17 == 0) | v16 | v11;
        v70 = v16 | v11;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v7;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v9;
        v7 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v19))
      goto LABEL_93;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0)
        goto LABEL_25;
      v21 += 7;
      v28 = v22++ >= 9;
      if (v28)
      {
        v23 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_25:
    v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_27:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_93:
      v64 = 1;
      goto LABEL_94;
    }
    v31 = v23 >> 3;
    v32 = v70;
    if ((v69 & 1) == 0)
    {
      v33 = v17;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if ((v67 & 1) == 0)
          goto LABEL_74;
        v37 = 0;
        v38 = 0;
        v39 = 0;
        *(_BYTE *)(a1 + 72) |= 1u;
        while (1)
        {
          v40 = *v18;
          v41 = *(_QWORD *)(v3 + v40);
          v42 = v41 + 1;
          if (v41 == -1 || v42 > *(_QWORD *)(v3 + *v6))
            break;
          v43 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v41);
          *(_QWORD *)(v3 + v40) = v42;
          v39 |= (unint64_t)(v43 & 0x7F) << v37;
          if ((v43 & 0x80) == 0)
            goto LABEL_77;
          v37 += 7;
          v28 = v38++ >= 9;
          if (v28)
          {
            v39 = 0;
            goto LABEL_79;
          }
        }
        *(_BYTE *)(v3 + *v19) = 1;
LABEL_77:
        if (*(_BYTE *)(v3 + *v19))
          v39 = 0;
LABEL_79:
        *(_QWORD *)(a1 + 40) = v39;
        goto LABEL_92;
      case 2:
        if (!v32)
          goto LABEL_74;
        if ((*(_BYTE *)(a1 + 72) & 0x20) == 0)
        {
          PBReaderReadString();
          v47 = objc_claimAutoreleasedReturnValue();
          v48 = 48;
          goto LABEL_59;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_111;
        v59 = 4 * *(_BYTE *)(a1 + 72);
        goto LABEL_90;
      case 3:
        if (!v32)
          goto LABEL_74;
        if ((*(_BYTE *)(a1 + 72) & 0x10) == 0)
        {
          PBReaderReadString();
          v47 = objc_claimAutoreleasedReturnValue();
          v48 = 32;
LABEL_59:
          v49 = *(void **)(a1 + v48);
          *(_QWORD *)(a1 + v48) = v47;
          goto LABEL_65;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_111;
        v59 = 8 * *(_BYTE *)(a1 + 72);
        goto LABEL_90;
      case 4:
        if (!v32)
          goto LABEL_74;
        if ((*(_BYTE *)(a1 + 72) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_111;
          v59 = 16 * *(_BYTE *)(a1 + 72);
LABEL_90:
          v9 += v59 >> 7;
          goto LABEL_91;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_111;
        v50 = objc_alloc_init(GEOLatLng);
        if (GEOLatLngReadAllFrom((uint64_t)v50, (void *)v3))
        {
          PBReaderRecallMark();
          v49 = *(void **)(a1 + 24);
          *(_QWORD *)(a1 + 24) = v50;
LABEL_65:

          --v9;
LABEL_91:
          v19 = (int *)MEMORY[0x1E0D82BC8];
          goto LABEL_92;
        }

LABEL_111:
        v64 = 0;
        v65 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
        v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_95:
        if ((v66 & 1) != 0)
LABEL_96:
          *(_BYTE *)(a1 + v65[870]) |= 4u;
        if (v70 & 1 | ((v64 & 1) == 0))
        {
          *(_BYTE *)(a1 + v65[870]) |= 0x20u;
          *(_BYTE *)(a1 + v65[870]) |= 0x10u;
          *(_BYTE *)(a1 + v65[870]) |= 8u;
        }
        else if (v17)
        {
          while (1)
          {
            v60 = *v17++;
            v61 = 32;
            switch(v60)
            {
              case 0:
                goto LABEL_104;
              case 2:
                goto LABEL_103;
              case 3:
                v61 = 16;
                goto LABEL_103;
              case 4:
                v61 = 8;
LABEL_103:
                *(_BYTE *)(a1 + v65[870]) |= v61;
                break;
              default:
                continue;
            }
          }
        }
LABEL_104:
        if (v64)
          v3 = *(_BYTE *)(v3 + *v19) == 0;
        else
          v3 = 0;
        if ((v70 & 1) != 0)
        {
          v62 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      case 5:
        if ((v67 & 1) == 0)
          goto LABEL_74;
        v51 = 0;
        v52 = 0;
        v53 = 0;
        *(_BYTE *)(a1 + 72) |= 2u;
        while (2)
        {
          v54 = *v18;
          v55 = *(_QWORD *)(v3 + v54);
          v56 = v55 + 1;
          if (v55 == -1 || v56 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v19) = 1;
          }
          else
          {
            v57 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v55);
            *(_QWORD *)(v3 + v54) = v56;
            v53 |= (unint64_t)(v57 & 0x7F) << v51;
            if (v57 < 0)
            {
              v51 += 7;
              v28 = v52++ >= 9;
              if (v28)
              {
                LODWORD(v53) = 0;
                goto LABEL_83;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v19))
          LODWORD(v53) = 0;
LABEL_83:
        *(_DWORD *)(a1 + 68) = v53;
        goto LABEL_92;
      default:
        if ((v66 & 1) == 0 || (*(_BYTE *)(a1 + 72) & 4) != 0)
        {
LABEL_74:
          v58 = PBReaderSkipValueWithTag();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if ((v58 & 1) == 0)
          {
            v64 = 0;
LABEL_94:
            v65 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
            goto LABEL_95;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v44 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v45 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v44;

          }
          v46 = PBUnknownFieldAdd();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if (!v46)
          {
            v64 = 0;
            v65 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
            goto LABEL_96;
          }
        }
LABEL_92:
        if (!(v68 & 1 | (v9 != 0)))
          goto LABEL_93;
        continue;
    }
  }
}

void sub_188C67324(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188C678EC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188C679D4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSPunchInResultHintsReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 60))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDSPunchInResultHintsReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 60) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDSPunchInResultHintsReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDSPunchInResultHintsReadAllFrom_initialTag;
  Specified = GEOPDSPunchInResultHintsReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    objc_msgSend(*(id *)(a1 + 24), "readAll:", 1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_188C6812C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188C68324(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSPunchInResultHintsIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  v2 = (*(_BYTE *)(a1 + 72) & 0x78) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return v2;
}

void sub_188C6858C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSRawAttributeReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  BOOL v25;
  int *v26;
  char v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  id v33;
  void *v34;
  _BOOL8 v35;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      while (1)
      {
        if (v3[*v6])
          goto LABEL_49;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          goto LABEL_49;
        if ((v10 >> 3) == 2)
          break;
        if ((v10 >> 3) == 1)
        {
          v18 = 0;
          v19 = 0;
          v20 = 0;
          *(_BYTE *)(a1 + 24) |= 1u;
          while (1)
          {
            v21 = *v4;
            v22 = *(_QWORD *)&v3[v21];
            v23 = v22 + 1;
            if (v22 == -1 || v23 > *(_QWORD *)&v3[*v5])
            {
              v26 = &OBJC_IVAR___GEOPDSRawAttribute__beginIndex;
              goto LABEL_41;
            }
            v24 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v22);
            *(_QWORD *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0)
              break;
            v18 += 7;
            v25 = v19++ > 8;
            if (v25)
            {
              LODWORD(v20) = 0;
              v26 = &OBJC_IVAR___GEOPDSRawAttribute__beginIndex;
              goto LABEL_44;
            }
          }
          v26 = &OBJC_IVAR___GEOPDSRawAttribute__beginIndex;
LABEL_42:
          if (v3[*v6])
            LODWORD(v20) = 0;
LABEL_44:
          *(_DWORD *)(a1 + *v26) = v20;
          goto LABEL_45;
        }
        if (!*(_QWORD *)(a1 + 8))
        {
          v33 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
          v34 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = v33;

        }
        if ((PBUnknownFieldAdd() & 1) == 0)
          goto LABEL_50;
LABEL_45:
        if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
          goto LABEL_49;
      }
      v27 = 0;
      v28 = 0;
      v20 = 0;
      *(_BYTE *)(a1 + 24) |= 2u;
      while (1)
      {
        v29 = *v4;
        v30 = *(_QWORD *)&v3[v29];
        v31 = v30 + 1;
        if (v30 == -1 || v31 > *(_QWORD *)&v3[*v5])
          break;
        v32 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v30);
        *(_QWORD *)&v3[v29] = v31;
        v20 |= (unint64_t)(v32 & 0x7F) << v27;
        if ((v32 & 0x80) == 0)
        {
          v26 = &OBJC_IVAR___GEOPDSRawAttribute__endIndex;
          goto LABEL_42;
        }
        v27 += 7;
        v25 = v28++ > 8;
        if (v25)
        {
          LODWORD(v20) = 0;
          v26 = &OBJC_IVAR___GEOPDSRawAttribute__endIndex;
          goto LABEL_44;
        }
      }
      v26 = &OBJC_IVAR___GEOPDSRawAttribute__endIndex;
LABEL_41:
      v3[*v6] = 1;
      goto LABEL_42;
    }
LABEL_49:
    v35 = v3[*v6] == 0;
  }
  else
  {
LABEL_50:
    v35 = 0;
  }
  objc_sync_exit(v3);

  return v35;
}

void sub_188C68E78(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSSearchAutoRedoThresholdReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  id v25;
  void *v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  _BOOL8 v35;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        switch((v10 >> 3))
        {
          case 1u:
            v18 = 0;
            v19 = 0;
            v20 = 0;
            *(_BYTE *)(a1 + 44) |= 8u;
            break;
          case 2u:
            *(_BYTE *)(a1 + 44) |= 4u;
            v27 = *v4;
            v28 = *(_QWORD *)&v3[v27];
            if (v28 <= 0xFFFFFFFFFFFFFFF7 && v28 + 8 <= *(_QWORD *)&v3[*v5])
            {
              v29 = *(_QWORD *)(*(_QWORD *)&v3[*v7] + v28);
              *(_QWORD *)&v3[v27] = v28 + 8;
            }
            else
            {
              v3[*v6] = 1;
              v29 = 0;
            }
            v34 = 32;
            goto LABEL_50;
          case 3u:
            *(_BYTE *)(a1 + 44) |= 2u;
            v30 = *v4;
            v31 = *(_QWORD *)&v3[v30];
            if (v31 <= 0xFFFFFFFFFFFFFFF7 && v31 + 8 <= *(_QWORD *)&v3[*v5])
            {
              v29 = *(_QWORD *)(*(_QWORD *)&v3[*v7] + v31);
              *(_QWORD *)&v3[v30] = v31 + 8;
            }
            else
            {
              v3[*v6] = 1;
              v29 = 0;
            }
            v34 = 24;
            goto LABEL_50;
          case 4u:
            *(_BYTE *)(a1 + 44) |= 1u;
            v32 = *v4;
            v33 = *(_QWORD *)&v3[v32];
            if (v33 <= 0xFFFFFFFFFFFFFFF7 && v33 + 8 <= *(_QWORD *)&v3[*v5])
            {
              v29 = *(_QWORD *)(*(_QWORD *)&v3[*v7] + v33);
              *(_QWORD *)&v3[v32] = v33 + 8;
            }
            else
            {
              v3[*v6] = 1;
              v29 = 0;
            }
            v34 = 16;
LABEL_50:
            *(_QWORD *)(a1 + v34) = v29;
            continue;
          default:
            if (!*(_QWORD *)(a1 + 8))
            {
              v25 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
              v26 = *(void **)(a1 + 8);
              *(_QWORD *)(a1 + 8) = v25;

            }
            if (!PBUnknownFieldAdd())
              goto LABEL_53;
            continue;
        }
        while (1)
        {
          v21 = *v4;
          v22 = *(_QWORD *)&v3[v21];
          v23 = v22 + 1;
          if (v22 == -1 || v23 > *(_QWORD *)&v3[*v5])
            break;
          v24 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v22);
          *(_QWORD *)&v3[v21] = v23;
          v20 |= (unint64_t)(v24 & 0x7F) << v18;
          if ((v24 & 0x80) == 0)
            goto LABEL_41;
          v18 += 7;
          v15 = v19++ >= 9;
          if (v15)
          {
            LODWORD(v20) = 0;
            goto LABEL_43;
          }
        }
        v3[*v6] = 1;
LABEL_41:
        if (v3[*v6])
          LODWORD(v20) = 0;
LABEL_43:
        *(_DWORD *)(a1 + 40) = v20;
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v35 = v3[*v6] == 0;
  }
  else
  {
LABEL_53:
    v35 = 0;
  }
  objc_sync_exit(v3);

  return v35;
}

void sub_188C69A74(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSSearchAutoRedoThresholdIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v14;
  int v15;
  int v16;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  int v25;
  _BOOL8 v27;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (!a1[*v4])
    {
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = *v4;
          v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = *v4;
      v15 = a1[v14];
      if (a1[v14])
        v8 = 0;
LABEL_14:
      v16 = v8 & 7;
      if (v15 || v16 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0)
            goto LABEL_38;
          v21 = 0;
          do
          {
            v22 = *v2;
            v23 = *(_QWORD *)&a1[v22];
            v24 = v23 + 1;
            if (v23 == -1 || v24 > *(_QWORD *)&a1[*v3])
            {
              v14 = *v4;
              goto LABEL_34;
            }
            v25 = *(char *)(*(_QWORD *)&a1[*v5] + v23);
            *(_QWORD *)&a1[v22] = v24;
            if ((v25 & 0x80000000) == 0)
              break;
          }
          while (v21++ <= 8);
          goto LABEL_35;
        case 2u:
        case 3u:
        case 4u:
          if (v16 != 1)
            goto LABEL_38;
          v18 = *v2;
          v19 = *(_QWORD *)&a1[v18];
          if (v19 > 0xFFFFFFFFFFFFFFF7 || (v20 = v19 + 8, v20 > *(_QWORD *)&a1[*v3]))
LABEL_34:
            a1[v14] = 1;
          else
            *(_QWORD *)&a1[v18] = v20;
          goto LABEL_35;
        default:
          if (!PBReaderSkipValueWithTag())
          {
LABEL_38:
            v27 = 0;
            goto LABEL_37;
          }
LABEL_35:
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_36;
          break;
      }
    }
  }
LABEL_36:
  v27 = a1[*v4] == 0;
LABEL_37:
  PBReaderRecallMark();
  return v27;
}

void sub_188C6A400(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSSearchEvChargingParametersReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BOOL4 v17;
  int v18;
  int *v19;
  int *v20;
  int v21;
  int *v22;
  int *v23;
  char v24;
  unsigned int v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  BOOL v31;
  int v32;
  int v33;
  unint64_t v35;
  BOOL v36;
  int *v37;
  int v38;
  int v39;
  BOOL v40;
  GEOPDEvChargingPort *v41;
  char v42;
  unsigned int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  char v48;
  id v49;
  void *v50;
  int v51;
  char v52;
  unsigned int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  char v58;
  int v59;
  char v60;
  void *v61;
  char v63;
  int v64;
  int v65;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 68);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 64));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
  v13 = ((*(unsigned __int8 *)(a1 + 76) >> 2) & 1)
      + (*(_BYTE *)(a1 + 76) & 1)
      + ((*(unsigned __int8 *)(a1 + 76) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 76) >> 1) & 1);
  while (2)
  {
    v14 = 1;
    v15 = 1;
    v16 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v13;
        goto LABEL_8;
      case -3:
        v7 = 1;
        goto LABEL_7;
      case -2:
        v15 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v17 = v13 > 1;
        v18 = v17 & ~(_DWORD)v11 | v9;
        v65 = v17 | v11;
        if ((((v17 | v11) | v7) & 1) != 0)
          v19 = 0;
        else
          v19 = a3;
        v20 = (int *)MEMORY[0x1E0D82BF0];
        v21 = 1;
        v22 = (int *)MEMORY[0x1E0D82BC8];
        if (*(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(v3 + *v6))
          goto LABEL_88;
        v63 = v18;
        v64 = (v8 != 0) | v65 | v18;
        v23 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v13;
LABEL_7:
        v14 = v9;
LABEL_8:
        v15 = v10;
        v16 = v11;
LABEL_10:
        ++v8;
        v9 = v14;
        v10 = v15;
        v11 = v16;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_BYTE *)(v3 + *v22))
      goto LABEL_86;
    v24 = 0;
    v25 = 0;
    v26 = 0;
    while (1)
    {
      v27 = *v20;
      v28 = *(_QWORD *)(v3 + v27);
      v29 = v28 + 1;
      if (v28 == -1 || v29 > *(_QWORD *)(v3 + *v6))
        break;
      v30 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v28);
      *(_QWORD *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0)
        goto LABEL_25;
      v24 += 7;
      v31 = v25++ >= 9;
      if (v31)
      {
        v26 = 0;
        v32 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v22) = 1;
LABEL_25:
    v32 = *(unsigned __int8 *)(v3 + *v22);
    if (*(_BYTE *)(v3 + *v22))
      v26 = 0;
LABEL_27:
    v33 = v26 & 7;
    if (v32 || v33 == 4)
    {
LABEL_86:
      v21 = 1;
      goto LABEL_87;
    }
    v35 = v26 >> 3;
    v36 = v65;
    if (!((v19 == 0) | v65 & 1))
    {
      v37 = v19;
      do
      {
        v39 = *v37++;
        v38 = v39;
        v36 = v39 != 0;
        if (v39)
          v40 = v38 == (_DWORD)v35;
        else
          v40 = 1;
      }
      while (!v40);
    }
    if ((_DWORD)v35 == 3)
    {
      if (v36 && (*(_BYTE *)(a1 + 76) & 2) == 0)
      {
        if (v33 == 2)
        {
          if (!PBReaderPlaceMark())
            goto LABEL_104;
          while (*(_QWORD *)(v3 + *v20) < *(_QWORD *)(v3 + *v6) && !*(_BYTE *)(v3 + *v22))
          {
            v42 = 0;
            v43 = 0;
            v44 = 0;
            while (1)
            {
              v45 = *v20;
              v46 = *(_QWORD *)(v3 + v45);
              v47 = v46 + 1;
              if (v46 == -1 || v47 > *(_QWORD *)(v3 + *v6))
                break;
              v48 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v46);
              *(_QWORD *)(v3 + v45) = v47;
              v44 |= (unint64_t)(v48 & 0x7F) << v42;
              if (v48 < 0)
              {
                v42 += 7;
                v31 = v43++ >= 9;
                if (!v31)
                  continue;
              }
              goto LABEL_60;
            }
            *(_BYTE *)(v3 + *v22) = 1;
LABEL_60:
            PBRepeatedUInt64Add();
          }
          PBReaderRecallMark();
        }
        else
        {
          v52 = 0;
          v53 = 0;
          v54 = 0;
          while (1)
          {
            v55 = *v20;
            v56 = *(_QWORD *)(v3 + v55);
            v57 = v56 + 1;
            if (v56 == -1 || v57 > *(_QWORD *)(v3 + *v6))
              break;
            v58 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v56);
            *(_QWORD *)(v3 + v55) = v57;
            v54 |= (unint64_t)(v58 & 0x7F) << v52;
            if (v58 < 0)
            {
              v52 += 7;
              v31 = v53++ >= 9;
              if (!v31)
                continue;
            }
            goto LABEL_83;
          }
          *(_BYTE *)(v3 + *v22) = 1;
LABEL_83:
          PBRepeatedUInt64Add();
        }
LABEL_84:
        if ((v64 & 1) == 0)
          goto LABEL_86;
        goto LABEL_85;
      }
      goto LABEL_72;
    }
    if ((_DWORD)v35 != 2)
      break;
    if (v36 && (*(_BYTE *)(a1 + 76) & 4) == 0)
    {
      PBReaderReadString();
      v41 = (GEOPDEvChargingPort *)objc_claimAutoreleasedReturnValue();
      if (v41)
        -[GEOPDSSearchEvChargingParameters _addNoFlagsNetwork:](a1, v41);
      goto LABEL_65;
    }
LABEL_72:
    v51 = PBReaderSkipValueWithTag();
    if ((v51 & v64 & 1) == 0)
    {
      v21 = v51;
      goto LABEL_87;
    }
LABEL_85:
    if (*(_QWORD *)(v3 + *v20) >= *(_QWORD *)(v3 + *v6))
      goto LABEL_86;
  }
  if ((_DWORD)v35 != 1)
  {
    if ((v63 & 1) != 0 && (*(_BYTE *)(a1 + 76) & 1) == 0)
    {
      if (!*(_QWORD *)(a1 + 16))
      {
        v49 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v50 = *(void **)(a1 + 16);
        *(_QWORD *)(a1 + 16) = v49;

      }
      if (!PBUnknownFieldAdd())
      {
        v21 = 0;
        v12 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
        goto LABEL_89;
      }
      goto LABEL_84;
    }
    goto LABEL_72;
  }
  if (!v36 || (*(_BYTE *)(a1 + 76) & 8) != 0)
    goto LABEL_72;
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_104;
  v41 = objc_alloc_init(GEOPDEvChargingPort);
  if (GEOPDEvChargingPortReadAllFrom((uint64_t)v41, (void *)v3))
  {
    PBReaderRecallMark();
    -[GEOPDSSearchEvChargingParameters _addNoFlagsPort:](a1, v41);
LABEL_65:

    goto LABEL_84;
  }

LABEL_104:
  v21 = 0;
LABEL_87:
  v12 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
  LOBYTE(v18) = v63;
LABEL_88:
  if ((v18 & 1) != 0)
LABEL_89:
    *(_BYTE *)(a1 + v12[882]) |= 1u;
  if (v65 & 1 | ((v21 & 1) == 0))
  {
    *(_BYTE *)(a1 + v12[882]) |= 8u;
    *(_BYTE *)(a1 + v12[882]) |= 4u;
    *(_BYTE *)(a1 + v12[882]) |= 2u;
  }
  else if (v19)
  {
    while (1)
    {
      v59 = *v19++;
      v60 = 8;
      switch(v59)
      {
        case 0:
          goto LABEL_97;
        case 1:
          goto LABEL_96;
        case 2:
          v60 = 4;
          goto LABEL_96;
        case 3:
          v60 = 2;
LABEL_96:
          *(_BYTE *)(a1 + v12[882]) |= v60;
          break;
        default:
          continue;
      }
    }
  }
LABEL_97:
  if (v21)
    v3 = *(_BYTE *)(v3 + *v22) == 0;
  else
    v3 = 0;
  if ((v65 & 1) != 0)
  {
    v61 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_188C6ACF4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188C6AEA8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188C6B4E0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDSSearchEvChargingParametersCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _BYTE v10[128];
  uint64_t v11;

  v11 = *MEMORY[0x1E0C80C00];
  v6 = 0u;
  v7 = 0u;
  v8 = 0u;
  v9 = 0u;
  v1 = *(id *)(a1 + 56);
  v2 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
  if (v2)
  {
    v3 = v2;
    v4 = *(_QWORD *)v7;
    do
    {
      v5 = 0;
      do
      {
        if (*(_QWORD *)v7 != v4)
          objc_enumerationMutation(v1);
        objc_msgSend(*(id *)(*((_QWORD *)&v6 + 1) + 8 * v5++), "readAll:", 1, (_QWORD)v6);
      }
      while (v3 != v5);
      v3 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
    }
    while (v3);
  }

}

unint64_t GEOPDSSearchEvChargingParametersReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 68))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDSSearchEvChargingParametersReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 72));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 64) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 68) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDSSearchEvChargingParametersReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDSSearchEvChargingParametersReadAllFrom_initialTag;
  Specified = GEOPDSSearchEvChargingParametersReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDSSearchEvChargingParametersCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return Specified;
}

void sub_188C6BBCC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSSearchEvChargingParametersIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  BOOL v13;
  int v14;
  int v15;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  unsigned int v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  _BOOL8 v28;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        v13 = v7++ >= 9;
        if (v13)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      v17 = v8 >> 3;
      if ((v8 >> 3) == 3)
      {
        if (v15 == 2)
        {
          if (!PBReaderPlaceMark())
            goto LABEL_49;
LABEL_37:
          while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
          {
            v23 = a1[*v4];
            if (a1[*v4])
              break;
            while (1)
            {
              v24 = *v2;
              v25 = *(_QWORD *)&a1[v24];
              v26 = v25 + 1;
              if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
                break;
              v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
              *(_QWORD *)&a1[v24] = v26;
              if (v27 < 0)
              {
                v13 = v23++ >= 9;
                if (!v13)
                  continue;
              }
              goto LABEL_37;
            }
            a1[*v4] = 1;
          }
          goto LABEL_24;
        }
        if ((v8 & 7) != 0)
          goto LABEL_49;
        while (1)
        {
          v18 = *v2;
          v19 = *(_QWORD *)&a1[v18];
          v20 = v19 + 1;
          if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
            break;
          v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
          *(_QWORD *)&a1[v18] = v20;
          if (v21 < 0)
          {
            v22 = v15++;
            if (v22 <= 8)
              continue;
          }
          goto LABEL_34;
        }
        a1[*v4] = 1;
      }
      else
      {
        if ((_DWORD)v17 == 2)
        {
          if (v15 != 2)
            goto LABEL_49;
        }
        else if ((_DWORD)v17 == 1)
        {
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDEvChargingPortIsValid(a1))
          {
LABEL_49:
            PBReaderRecallMark();
            return 0;
          }
LABEL_24:
          PBReaderRecallMark();
          continue;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_49;
      }
LABEL_34:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v28 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v28;
}

void sub_188C6C19C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSSearchEvChargingParametersIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  v2 = (*(_BYTE *)(a1 + 76) & 0x1E) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return v2;
}

void sub_188C6C4F8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSSearchFilterReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  char v17;
  char v18;
  int *v19;
  int *v20;
  char v21;
  int *v22;
  int *v23;
  char v24;
  unsigned int v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  BOOL v31;
  int v32;
  int v33;
  unint64_t v35;
  BOOL v36;
  int *v37;
  int v38;
  int v39;
  BOOL v40;
  GEOPDSSearchVenueFilter *v41;
  uint64_t v42;
  id v43;
  void *v44;
  int v45;
  char v46;
  unsigned int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  char v52;
  char v53;
  unsigned int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  char v59;
  unint64_t v60;
  int *v61;
  char v62;
  unsigned int v63;
  uint64_t v64;
  int *v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  char v69;
  void *v70;
  char v71;
  __int16 v72;
  char v73;
  unsigned int v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  char v79;
  int v80;
  __int16 v81;
  void *v82;
  char v84;
  char v85;
  int v86;
  char v87;
  char v88;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 104));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 100);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 96));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = ((*(unsigned __int16 *)(a1 + 116) >> 2) & 1)
      + (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 116)), (uint16x4_t)0xFFF8FFFBFFF7FFFALL), (int8x8_t)0x1000100010001))+ ((*(_WORD *)(a1 + 116) >> 7) & 1)+ ((*(_WORD *)(a1 + 116) >> 3) & 1)+ ((*(_WORD *)(a1 + 116) >> 4) & 1));
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 > 4;
        v17 = v16 & ~(_BYTE)v11 | v9;
        v18 = v16 | v11;
        v19 = (int *)MEMORY[0x1E0D82BF0];
        if ((((v16 | v11) | v8) & 1) != 0)
          v20 = 0;
        else
          v20 = a3;
        v86 = 1;
        v21 = v16 & ~(_BYTE)v11 | v9;
        if (*(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(v3 + *v6))
          goto LABEL_149;
        v84 = v17;
        v87 = v18 | v17;
        v88 = (v20 == 0) | v18;
        v22 = (int *)MEMORY[0x1E0D82BC8];
        v23 = (int *)MEMORY[0x1E0D82BB8];
        v85 = v18;
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v7;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_BYTE *)(v3 + *v22))
      goto LABEL_147;
    v24 = 0;
    v25 = 0;
    v26 = 0;
    while (1)
    {
      v27 = *v19;
      v28 = *(_QWORD *)(v3 + v27);
      v29 = v28 + 1;
      if (v28 == -1 || v29 > *(_QWORD *)(v3 + *v6))
        break;
      v30 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v28);
      *(_QWORD *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0)
        goto LABEL_25;
      v24 += 7;
      v31 = v25++ >= 9;
      if (v31)
      {
        v26 = 0;
        v32 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v22) = 1;
LABEL_25:
    v32 = *(unsigned __int8 *)(v3 + *v22);
    if (*(_BYTE *)(v3 + *v22))
      v26 = 0;
LABEL_27:
    v33 = v26 & 7;
    if (v32 || v33 == 4)
    {
LABEL_147:
      v86 = 1;
      goto LABEL_148;
    }
    v35 = v26 >> 3;
    v36 = v18;
    if ((v88 & 1) == 0)
    {
      v37 = v20;
      do
      {
        v39 = *v37++;
        v38 = v39;
        v36 = v39 != 0;
        if (v39)
          v40 = v38 == (_DWORD)v35;
        else
          v40 = 1;
      }
      while (!v40);
    }
    switch((int)v35)
    {
      case 1:
        if (!v36)
          goto LABEL_108;
        if ((*(_WORD *)(a1 + 116) & 0x200) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_169;
          v41 = objc_alloc_init(GEOPDSSearchVenueFilter);
          if (GEOPDSSearchVenueFilterReadAllFrom((uint64_t)v41, (void *)v3, v10 & 1))
          {
            PBReaderRecallMark();
            v42 = 88;
            goto LABEL_107;
          }
          goto LABEL_168;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_169;
        v72 = *(_WORD *)(a1 + 116) << 6;
        goto LABEL_130;
      case 2:
        if (!v36)
          goto LABEL_108;
        if ((*(_WORD *)(a1 + 116) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_169;
          v72 = *(_WORD *)(a1 + 116) << 9;
          goto LABEL_130;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_169;
        v41 = objc_alloc_init(GEOPDSCategoryFilter);
        if (!GEOPDSCategoryFilterReadAllFrom((uint64_t)v41, (void *)v3))
          goto LABEL_168;
        PBReaderRecallMark();
        v42 = 64;
        goto LABEL_107;
      case 3:
        if (!v36)
          goto LABEL_108;
        if ((*(_WORD *)(a1 + 116) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_169;
          v72 = *(_WORD *)(a1 + 116) << 10;
          goto LABEL_130;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_169;
        v41 = objc_alloc_init(GEOPDSBrandFilter);
        if (!GEOPDSBrandFilterReadAllFrom((uint64_t)v41, (void *)v3))
          goto LABEL_168;
        PBReaderRecallMark();
        v42 = 56;
        goto LABEL_107;
      case 4:
        if ((v8 & 1) == 0)
          goto LABEL_108;
        v46 = 0;
        v47 = 0;
        v48 = 0;
        *(_WORD *)(a1 + 116) |= 1u;
        v6 = (int *)MEMORY[0x1E0D82BD8];
        while (2)
        {
          v49 = *v19;
          v50 = *(_QWORD *)(v3 + v49);
          v51 = v50 + 1;
          if (v50 == -1 || v51 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v22) = 1;
          }
          else
          {
            v52 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v50);
            *(_QWORD *)(v3 + v49) = v51;
            v48 |= (unint64_t)(v52 & 0x7F) << v46;
            if (v52 < 0)
            {
              v46 += 7;
              v31 = v47++ >= 9;
              if (v31)
              {
                LODWORD(v48) = 0;
                goto LABEL_113;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v22))
          LODWORD(v48) = 0;
LABEL_113:
        *(_DWORD *)(a1 + 108) = v48;
        goto LABEL_134;
      case 5:
        if (!v36)
          goto LABEL_108;
        if ((*(_WORD *)(a1 + 116) & 0x100) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_169;
          v72 = *(_WORD *)(a1 + 116) << 7;
          goto LABEL_130;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_169;
        v41 = objc_alloc_init(GEOPDPoiIconCategoryFilter);
        if (!GEOPDPoiIconCategoryFilterReadAllFrom((uint64_t)v41, (void *)v3, v10 & 1))
          goto LABEL_168;
        PBReaderRecallMark();
        v42 = 80;
        goto LABEL_107;
      case 6:
        if (!v36)
          goto LABEL_108;
        if ((*(_WORD *)(a1 + 116) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_169;
          v72 = *(_WORD *)(a1 + 116) << 8;
          goto LABEL_130;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_169;
        v41 = objc_alloc_init(GEOPDSImplicitQueryCategoryFilter);
        if (!GEOPDSImplicitQueryCategoryFilterReadAllFrom((uint64_t)v41, (void *)v3, v10 & 1))
          goto LABEL_168;
        PBReaderRecallMark();
        v42 = 72;
        goto LABEL_107;
      case 7:
        if ((v8 & 1) == 0)
          goto LABEL_108;
        v53 = 0;
        v54 = 0;
        v55 = 0;
        *(_WORD *)(a1 + 116) |= 2u;
        v6 = (int *)MEMORY[0x1E0D82BD8];
        while (2)
        {
          v56 = *v19;
          v57 = *(_QWORD *)(v3 + v56);
          v58 = v57 + 1;
          if (v57 == -1 || v58 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v22) = 1;
          }
          else
          {
            v59 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v57);
            *(_QWORD *)(v3 + v56) = v58;
            v55 |= (unint64_t)(v59 & 0x7F) << v53;
            if (v59 < 0)
            {
              v53 += 7;
              v31 = v54++ >= 9;
              if (v31)
              {
                v55 = 0;
                goto LABEL_117;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v22))
          v55 = 0;
LABEL_117:
        *(_BYTE *)(a1 + 112) = v55 != 0;
        goto LABEL_134;
      case 8:
        if (!v36 || (*(_WORD *)(a1 + 116) & 8) != 0)
          goto LABEL_108;
        if (v33 != 2)
        {
          v73 = 0;
          v74 = 0;
          v75 = 0;
          v6 = (int *)MEMORY[0x1E0D82BD8];
          while (1)
          {
            v76 = *v19;
            v77 = *(_QWORD *)(v3 + v76);
            v78 = v77 + 1;
            if (v77 == -1 || v78 > *(_QWORD *)(v3 + *v6))
              break;
            v79 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v77);
            *(_QWORD *)(v3 + v76) = v78;
            v75 |= (unint64_t)(v79 & 0x7F) << v73;
            if (v79 < 0)
            {
              v73 += 7;
              v31 = v74++ >= 9;
              if (!v31)
                continue;
            }
            goto LABEL_146;
          }
          *(_BYTE *)(v3 + *v22) = 1;
LABEL_146:
          PBRepeatedInt32Add();
          v18 = v85;
          goto LABEL_132;
        }
        if (!PBReaderPlaceMark())
          goto LABEL_169;
        v60 = *(_QWORD *)(v3 + *v19);
        v6 = (int *)MEMORY[0x1E0D82BD8];
        while (1)
        {
          v61 = (int *)MEMORY[0x1E0D82BC8];
          if (v60 >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + (int)*MEMORY[0x1E0D82BC8]))
            break;
          v62 = 0;
          v63 = 0;
          v64 = 0;
          v65 = (int *)MEMORY[0x1E0D82BB8];
          while (1)
          {
            v66 = *v19;
            v67 = *(_QWORD *)(v3 + v66);
            v68 = v67 + 1;
            if (v67 == -1 || v68 > *(_QWORD *)(v3 + *v6))
              break;
            v69 = *(_BYTE *)(*(_QWORD *)(v3 + *v65) + v67);
            *(_QWORD *)(v3 + v66) = v68;
            v64 |= (unint64_t)(v69 & 0x7F) << v62;
            if (v69 < 0)
            {
              v62 += 7;
              v31 = v63++ >= 9;
              if (!v31)
                continue;
            }
            goto LABEL_101;
          }
          *(_BYTE *)(v3 + *v61) = 1;
LABEL_101:
          PBRepeatedInt32Add();
          v60 = *(_QWORD *)(v3 + *v19);
        }
        PBReaderRecallMark();
        v22 = (int *)MEMORY[0x1E0D82BC8];
        v18 = v85;
        goto LABEL_133;
      case 9:
        if (!v36)
          goto LABEL_108;
        if ((*(_WORD *)(a1 + 116) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_169;
          v72 = *(_WORD *)(a1 + 116) << 11;
LABEL_130:
          v7 += v72 >> 15;
LABEL_131:
          v18 = v85;
          v6 = (int *)MEMORY[0x1E0D82BD8];
LABEL_132:
          v22 = (int *)MEMORY[0x1E0D82BC8];
LABEL_133:
          v23 = (int *)MEMORY[0x1E0D82BB8];
LABEL_134:
          if (!(v87 & 1 | (v7 != 0)) || *(_QWORD *)(v3 + *v19) >= *(_QWORD *)(v3 + *v6))
            goto LABEL_147;
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_169;
        v41 = objc_alloc_init(GEOPDAddressResultSubTypeFilter);
        if (GEOPDAddressResultSubTypeFilterReadAllFrom((uint64_t)v41, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          v42 = 48;
LABEL_107:
          v70 = *(void **)(a1 + v42);
          *(_QWORD *)(a1 + v42) = v41;

          --v7;
          goto LABEL_131;
        }
LABEL_168:

LABEL_169:
        v86 = 0;
        v18 = v85;
LABEL_148:
        v21 = v84;
LABEL_149:
        if ((v21 & 1) != 0)
LABEL_150:
          *(_WORD *)(a1 + 116) |= 4u;
        if (v18 & 1 | ((v86 & 1) == 0))
        {
          *(_WORD *)(a1 + 116) |= 0x200u;
          *(_WORD *)(a1 + 116) |= 0x40u;
          *(_WORD *)(a1 + 116) |= 0x20u;
          *(_WORD *)(a1 + 116) |= 0x100u;
          *(_WORD *)(a1 + 116) |= 0x80u;
          *(_WORD *)(a1 + 116) |= 8u;
          *(_WORD *)(a1 + 116) |= 0x10u;
        }
        else if (v20)
        {
          while (1)
          {
            v80 = *v20++;
            v81 = 512;
            switch(v80)
            {
              case 0:
                goto LABEL_162;
              case 1:
                goto LABEL_161;
              case 2:
                v81 = 64;
                goto LABEL_161;
              case 3:
                v81 = 32;
                goto LABEL_161;
              case 5:
                v81 = 256;
                goto LABEL_161;
              case 6:
                v81 = 128;
                goto LABEL_161;
              case 8:
                v81 = 8;
                goto LABEL_161;
              case 9:
                v81 = 16;
LABEL_161:
                *(_WORD *)(a1 + 116) |= v81;
                break;
              default:
                continue;
            }
          }
        }
LABEL_162:
        if (v86)
        {
          v3 = *(_BYTE *)(v3 + (int)*MEMORY[0x1E0D82BC8]) == 0;
          if ((v18 & 1) == 0)
            return v3;
LABEL_166:
          v82 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        else
        {
          v3 = 0;
          if ((v18 & 1) != 0)
            goto LABEL_166;
        }
        return v3;
      default:
        if ((v84 & 1) == 0 || (*(_WORD *)(a1 + 116) & 4) != 0)
        {
LABEL_108:
          v71 = PBReaderSkipValueWithTag();
          v23 = (int *)MEMORY[0x1E0D82BB8];
          v22 = (int *)MEMORY[0x1E0D82BC8];
          v18 = v85;
          v6 = (int *)MEMORY[0x1E0D82BD8];
          if ((v71 & 1) == 0)
          {
            v86 = 0;
            goto LABEL_148;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v43 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v44 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v43;

          }
          v45 = PBUnknownFieldAdd();
          v18 = v85;
          v6 = (int *)MEMORY[0x1E0D82BD8];
          v22 = (int *)MEMORY[0x1E0D82BC8];
          v23 = (int *)MEMORY[0x1E0D82BB8];
          if (!v45)
          {
            v86 = 0;
            goto LABEL_150;
          }
        }
        goto LABEL_134;
    }
  }
}

void sub_188C6D9D0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188C6DB28(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188C6DC64(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188C6E44C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188C6E530(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDSSearchFilterCallReadAllRecursiveWithoutSynchronized(uint64_t *a1)
{
  -[GEOPDPoiIconCategoryFilter readAll:](a1[10], 1);
  -[GEOPDSImplicitQueryCategoryFilter readAll:](a1[9], 1);
  -[GEOPDAddressResultSubTypeFilter readAll:](a1[6], 1);
}

unint64_t GEOPDSSearchFilterReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 100))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDSSearchFilterReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 104));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 96) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 100) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDSSearchFilterReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDSSearchFilterReadAllFrom_initialTag;
  Specified = GEOPDSSearchFilterReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDSSearchFilterCallReadAllRecursiveWithoutSynchronized((uint64_t *)a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 104));
  return Specified;
}

void sub_188C6F71C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSSearchFilterIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  BOOL v13;
  int v14;
  int v15;
  char v17;
  unsigned int v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  int v24;
  int v25;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  int v31;
  BOOL v32;
  char v33;
  unsigned int v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  int v40;
  int v41;
  char v43;
  unsigned int v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  int v50;
  unsigned int v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  int v56;
  int v57;
  unsigned int v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  int v62;
  char v63;
  unsigned int v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  char v69;
  int v70;
  int v71;
  BOOL v72;
  unsigned int v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  int v77;
  char v78;
  unsigned int v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  char v84;
  int v85;
  unsigned int v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  int v91;
  char v92;
  unsigned int v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  char v98;
  int v99;
  int v100;
  unint64_t v102;
  unsigned int v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  int v107;
  char v108;
  unsigned int v109;
  unint64_t v110;
  uint64_t v111;
  uint64_t v112;
  unint64_t v113;
  char v114;
  int v115;
  int v116;
  unsigned int v118;
  uint64_t v119;
  uint64_t v120;
  unint64_t v121;
  int v122;
  int v123;
  int v124;
  unsigned int v125;
  uint64_t v126;
  uint64_t v127;
  unint64_t v128;
  int v129;
  uint64_t v130;
  uint64_t v131;
  unint64_t v132;
  int v133;
  unsigned int v134;
  int v135;
  int v136;
  unsigned int v137;
  uint64_t v138;
  uint64_t v139;
  unint64_t v140;
  int v141;
  _BOOL8 v142;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] >= *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
LABEL_304:
    v142 = a1[*v4] == 0;
    PBReaderRecallMark();
    return v142;
  }
  v5 = (int *)MEMORY[0x1E0D82BB8];
  while (2)
  {
    if (a1[*v4])
      goto LABEL_304;
    v6 = 0;
    v7 = 0;
    v8 = 0;
    while (1)
    {
      v9 = *v2;
      v10 = *(_QWORD *)&a1[v9];
      v11 = v10 + 1;
      if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
        break;
      v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
      *(_QWORD *)&a1[v9] = v11;
      v8 |= (unint64_t)(v12 & 0x7F) << v6;
      if ((v12 & 0x80) == 0)
        goto LABEL_12;
      v6 += 7;
      v13 = v7++ >= 9;
      if (v13)
      {
        v8 = 0;
        v14 = a1[*v4];
        goto LABEL_14;
      }
    }
    a1[*v4] = 1;
LABEL_12:
    v14 = a1[*v4];
    if (a1[*v4])
      v8 = 0;
LABEL_14:
    v15 = v8 & 7;
    if (v14 || v15 == 4)
      goto LABEL_304;
    switch((v8 >> 3))
    {
      case 1u:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_308;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
LABEL_22:
        while (2)
        {
          if (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3] && !a1[*v4])
          {
            v17 = 0;
            v18 = 0;
            v19 = 0;
            while (1)
            {
              v20 = *v2;
              v21 = *(_QWORD *)&a1[v20];
              v22 = v21 + 1;
              if (v21 == -1 || v22 > *(_QWORD *)&a1[*v3])
                break;
              v23 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v21);
              *(_QWORD *)&a1[v20] = v22;
              v19 |= (unint64_t)(v23 & 0x7F) << v17;
              if ((v23 & 0x80) == 0)
                goto LABEL_32;
              v17 += 7;
              v13 = v18++ >= 9;
              if (v13)
              {
                v19 = 0;
                v24 = a1[*v4];
                goto LABEL_34;
              }
            }
            a1[*v4] = 1;
LABEL_32:
            v24 = a1[*v4];
            if (a1[*v4])
              v19 = 0;
LABEL_34:
            v25 = v19 & 7;
            if (!v24 && v25 != 4)
            {
              if ((v19 >> 3) == 2)
              {
                if ((v19 & 7) == 0)
                {
                  v27 = 0;
                  do
                  {
                    v28 = *v2;
                    v29 = *(_QWORD *)&a1[v28];
                    v30 = v29 + 1;
                    if (v29 == -1 || v30 > *(_QWORD *)&a1[*v3])
                    {
                      a1[*v4] = 1;
                      goto LABEL_22;
                    }
                    v31 = *(char *)(*(_QWORD *)&a1[*v5] + v29);
                    *(_QWORD *)&a1[v28] = v30;
                    if ((v31 & 0x80000000) == 0)
                      break;
                    v32 = v27++ > 8;
                  }
                  while (!v32);
                  continue;
                }
              }
              else
              {
                if ((v19 >> 3) != 1)
                {
                  if ((PBReaderSkipValueWithTag() & 1) == 0)
                    goto LABEL_307;
                  continue;
                }
                if (v25 == 2 && PBReaderPlaceMark() && GEOPDVenueIdentifierIsValid(a1))
                {
                  PBReaderRecallMark();
                  continue;
                }
              }
              goto LABEL_307;
            }
          }
          break;
        }
        v135 = a1[*v4];
        PBReaderRecallMark();
        if (v135)
          goto LABEL_308;
        goto LABEL_291;
      case 2u:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_308;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
        while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3] && !a1[*v4])
        {
          v33 = 0;
          v34 = 0;
          v35 = 0;
          while (1)
          {
            v36 = *v2;
            v37 = *(_QWORD *)&a1[v36];
            v38 = v37 + 1;
            if (v37 == -1 || v38 > *(_QWORD *)&a1[*v3])
              break;
            v39 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v37);
            *(_QWORD *)&a1[v36] = v38;
            v35 |= (unint64_t)(v39 & 0x7F) << v33;
            if ((v39 & 0x80) == 0)
              goto LABEL_70;
            v33 += 7;
            v13 = v34++ >= 9;
            if (v13)
            {
              v35 = 0;
              v40 = a1[*v4];
              goto LABEL_72;
            }
          }
          a1[*v4] = 1;
LABEL_70:
          v40 = a1[*v4];
          if (a1[*v4])
            v35 = 0;
LABEL_72:
          v41 = v35 & 7;
          if (v40 || v41 == 4)
            break;
          if ((v35 >> 3) != 1)
          {
            if (!PBReaderSkipValueWithTag())
              goto LABEL_307;
            continue;
          }
          if (v41 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_307;
        }
        goto LABEL_113;
      case 3u:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_308;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
LABEL_85:
        if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3] || a1[*v4])
          goto LABEL_113;
        v43 = 0;
        v44 = 0;
        v45 = 0;
        while (1)
        {
          v46 = *v2;
          v47 = *(_QWORD *)&a1[v46];
          v48 = v47 + 1;
          if (v47 == -1 || v48 > *(_QWORD *)&a1[*v3])
            break;
          v49 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v47);
          *(_QWORD *)&a1[v46] = v48;
          v45 |= (unint64_t)(v49 & 0x7F) << v43;
          if ((v49 & 0x80) == 0)
            goto LABEL_95;
          v43 += 7;
          v13 = v44++ >= 9;
          if (v13)
          {
            v45 = 0;
            v50 = a1[*v4];
            goto LABEL_97;
          }
        }
        a1[*v4] = 1;
LABEL_95:
        v50 = a1[*v4];
        if (a1[*v4])
          v45 = 0;
LABEL_97:
        if (v50 || (v45 & 7) == 4)
        {
LABEL_113:
          v57 = a1[*v4];
          PBReaderRecallMark();
          if (v57)
            goto LABEL_308;
LABEL_291:
          PBReaderRecallMark();
LABEL_292:
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_304;
          continue;
        }
        if ((v45 >> 3) != 1)
        {
          if (!PBReaderSkipValueWithTag())
            goto LABEL_307;
          goto LABEL_85;
        }
        if ((v45 & 7) == 0)
        {
          v52 = 0;
          do
          {
            v53 = *v2;
            v54 = *(_QWORD *)&a1[v53];
            v55 = v54 + 1;
            if (v54 == -1 || v55 > *(_QWORD *)&a1[*v3])
            {
              a1[*v4] = 1;
              goto LABEL_85;
            }
            v56 = *(char *)(*(_QWORD *)&a1[*v5] + v54);
            *(_QWORD *)&a1[v53] = v55;
            if ((v56 & 0x80000000) == 0)
              break;
            v32 = v52++ > 8;
          }
          while (!v32);
          goto LABEL_85;
        }
LABEL_307:
        PBReaderRecallMark();
LABEL_308:
        PBReaderRecallMark();
        return 0;
      case 4u:
        if ((v8 & 7) != 0)
          goto LABEL_308;
        v58 = 0;
        while (1)
        {
          v59 = *v2;
          v60 = *(_QWORD *)&a1[v59];
          v61 = v60 + 1;
          if (v60 == -1 || v61 > *(_QWORD *)&a1[*v3])
            goto LABEL_283;
          v62 = *(char *)(*(_QWORD *)&a1[*v5] + v60);
          *(_QWORD *)&a1[v59] = v61;
          if (v62 < 0)
          {
            v32 = v58++ > 8;
            if (!v32)
              continue;
          }
          goto LABEL_292;
        }
      case 5u:
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDAddressResultSubTypeFilterIsValid(a1))
          goto LABEL_308;
        goto LABEL_291;
      case 6u:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_308;
        objc_msgSend(a1, "position", 0, 0);
        objc_msgSend(a1, "length");
LABEL_130:
        while (2)
        {
          while (2)
          {
            if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3] || a1[*v4])
              goto LABEL_290;
            v63 = 0;
            v64 = 0;
            v65 = 0;
            while (2)
            {
              v66 = *v2;
              v67 = *(_QWORD *)&a1[v66];
              v68 = v67 + 1;
              if (v67 == -1 || v68 > *(_QWORD *)&a1[*v3])
              {
                a1[*v4] = 1;
              }
              else
              {
                v69 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v67);
                *(_QWORD *)&a1[v66] = v68;
                v65 |= (unint64_t)(v69 & 0x7F) << v63;
                if (v69 < 0)
                {
                  v63 += 7;
                  v13 = v64++ >= 9;
                  if (v13)
                  {
                    v65 = 0;
                    v70 = a1[*v4];
                    goto LABEL_142;
                  }
                  continue;
                }
              }
              break;
            }
            v70 = a1[*v4];
            if (a1[*v4])
              v65 = 0;
LABEL_142:
            v71 = v65 & 7;
            if (v70)
              v72 = 1;
            else
              v72 = v71 == 4;
            if (v72)
            {
LABEL_290:
              v136 = a1[*v4];
              PBReaderRecallMark();
              if (v136)
                goto LABEL_308;
              goto LABEL_291;
            }
            switch((v65 >> 3))
            {
              case 1u:
                if ((v65 & 7) != 0)
                  goto LABEL_307;
                v73 = 0;
                do
                {
                  v74 = *v2;
                  v75 = *(_QWORD *)&a1[v74];
                  v76 = v75 + 1;
                  if (v75 == -1 || v76 > *(_QWORD *)&a1[*v3])
                  {
                    a1[*v4] = 1;
                    goto LABEL_130;
                  }
                  v77 = *(char *)(*(_QWORD *)&a1[*v5] + v75);
                  *(_QWORD *)&a1[v74] = v76;
                  if ((v77 & 0x80000000) == 0)
                    break;
                  v32 = v73++ > 8;
                }
                while (!v32);
                continue;
              case 2u:
                if (v71 != 2 || !PBReaderPlaceMark())
                  goto LABEL_307;
                objc_msgSend(a1, "position");
                objc_msgSend(a1, "length");
LABEL_160:
                while (2)
                {
                  if (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3] && !a1[*v4])
                  {
                    v78 = 0;
                    v79 = 0;
                    v80 = 0;
                    while (1)
                    {
                      v81 = *v2;
                      v82 = *(_QWORD *)&a1[v81];
                      v83 = v82 + 1;
                      if (v82 == -1 || v83 > *(_QWORD *)&a1[*v3])
                        break;
                      v84 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v82);
                      *(_QWORD *)&a1[v81] = v83;
                      v80 |= (unint64_t)(v84 & 0x7F) << v78;
                      if ((v84 & 0x80) == 0)
                        goto LABEL_170;
                      v78 += 7;
                      v13 = v79++ >= 9;
                      if (v13)
                      {
                        v80 = 0;
                        v85 = a1[*v4];
                        goto LABEL_172;
                      }
                    }
                    a1[*v4] = 1;
LABEL_170:
                    v85 = a1[*v4];
                    if (a1[*v4])
                      v80 = 0;
LABEL_172:
                    if (!v85 && (v80 & 7) != 4)
                    {
                      if ((v80 >> 3) != 1)
                      {
                        if (!PBReaderSkipValueWithTag())
                          goto LABEL_306;
                        continue;
                      }
                      if ((v80 & 7) == 0)
                      {
                        v87 = 0;
                        do
                        {
                          v88 = *v2;
                          v89 = *(_QWORD *)&a1[v88];
                          v90 = v89 + 1;
                          if (v89 == -1 || v90 > *(_QWORD *)&a1[*v3])
                          {
                            a1[*v4] = 1;
                            goto LABEL_160;
                          }
                          v91 = *(char *)(*(_QWORD *)&a1[*v5] + v89);
                          *(_QWORD *)&a1[v88] = v90;
                          if ((v91 & 0x80000000) == 0)
                            break;
                          v32 = v87++ > 8;
                        }
                        while (!v32);
                        continue;
                      }
LABEL_306:
                      PBReaderRecallMark();
                      goto LABEL_307;
                    }
                  }
                  break;
                }
                v124 = a1[*v4];
                PBReaderRecallMark();
                if (v124)
                  goto LABEL_307;
                break;
              case 3u:
                if (v71 != 2 || !PBReaderPlaceMark())
                  goto LABEL_307;
                objc_msgSend(a1, "position");
                objc_msgSend(a1, "length");
LABEL_191:
                while (2)
                {
                  if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3] || a1[*v4])
                    goto LABEL_263;
                  v92 = 0;
                  v93 = 0;
                  v94 = 0;
                  while (1)
                  {
                    v95 = *v2;
                    v96 = *(_QWORD *)&a1[v95];
                    v97 = v96 + 1;
                    if (v96 == -1 || v97 > *(_QWORD *)&a1[*v3])
                      break;
                    v98 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v96);
                    *(_QWORD *)&a1[v95] = v97;
                    v94 |= (unint64_t)(v98 & 0x7F) << v92;
                    if ((v98 & 0x80) == 0)
                      goto LABEL_201;
                    v92 += 7;
                    v13 = v93++ >= 9;
                    if (v13)
                    {
                      v94 = 0;
                      v99 = a1[*v4];
                      goto LABEL_203;
                    }
                  }
                  a1[*v4] = 1;
LABEL_201:
                  v99 = a1[*v4];
                  if (a1[*v4])
                    v94 = 0;
LABEL_203:
                  v100 = v94 & 7;
                  if (v99 || v100 == 4)
                    goto LABEL_263;
                  v102 = v94 >> 3;
                  if ((v94 >> 3) == 3)
                  {
                    if ((v94 & 7) == 0)
                    {
                      v103 = 0;
                      do
                      {
                        v104 = *v2;
                        v105 = *(_QWORD *)&a1[v104];
                        v106 = v105 + 1;
                        if (v105 == -1 || v106 > *(_QWORD *)&a1[*v3])
                        {
                          a1[*v4] = 1;
                          goto LABEL_191;
                        }
                        v107 = *(char *)(*(_QWORD *)&a1[*v5] + v105);
                        *(_QWORD *)&a1[v104] = v106;
                        if ((v107 & 0x80000000) == 0)
                          break;
                        v32 = v103++ > 8;
                      }
                      while (!v32);
                      continue;
                    }
                  }
                  else
                  {
                    if ((_DWORD)v102 != 2)
                    {
                      if ((_DWORD)v102 == 1 && v100 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
                        goto LABEL_306;
                      continue;
                    }
                    if (v100 == 2 && PBReaderPlaceMark() && GEOLatLngIsValid(a1))
                    {
                      PBReaderRecallMark();
                      continue;
                    }
                  }
                  goto LABEL_306;
                }
              case 4u:
                if (v71 != 2 || !PBReaderPlaceMark())
                  goto LABEL_307;
                objc_msgSend(a1, "position");
                objc_msgSend(a1, "length");
LABEL_230:
                while (2)
                {
                  if (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3] && !a1[*v4])
                  {
                    v108 = 0;
                    v109 = 0;
                    v110 = 0;
                    while (1)
                    {
                      v111 = *v2;
                      v112 = *(_QWORD *)&a1[v111];
                      v113 = v112 + 1;
                      if (v112 == -1 || v113 > *(_QWORD *)&a1[*v3])
                        break;
                      v114 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v112);
                      *(_QWORD *)&a1[v111] = v113;
                      v110 |= (unint64_t)(v114 & 0x7F) << v108;
                      if ((v114 & 0x80) == 0)
                        goto LABEL_240;
                      v108 += 7;
                      v13 = v109++ >= 9;
                      if (v13)
                      {
                        v110 = 0;
                        v115 = a1[*v4];
                        goto LABEL_242;
                      }
                    }
                    a1[*v4] = 1;
LABEL_240:
                    v115 = a1[*v4];
                    if (a1[*v4])
                      v110 = 0;
LABEL_242:
                    v116 = v110 & 7;
                    if (!v115 && v116 != 4)
                    {
                      if ((v110 >> 3) == 2)
                      {
                        if ((v110 & 7) == 0)
                        {
                          v118 = 0;
                          do
                          {
                            v119 = *v2;
                            v120 = *(_QWORD *)&a1[v119];
                            v121 = v120 + 1;
                            if (v120 == -1 || v121 > *(_QWORD *)&a1[*v3])
                            {
                              a1[*v4] = 1;
                              goto LABEL_230;
                            }
                            v122 = *(char *)(*(_QWORD *)&a1[*v5] + v120);
                            *(_QWORD *)&a1[v119] = v121;
                            if ((v122 & 0x80000000) == 0)
                              break;
                            v32 = v118++ > 8;
                          }
                          while (!v32);
                          continue;
                        }
                      }
                      else
                      {
                        if ((v110 >> 3) != 1)
                        {
                          if ((PBReaderSkipValueWithTag() & 1) == 0)
                            goto LABEL_306;
                          continue;
                        }
                        if (v116 == 2 && PBReaderPlaceMark() && GEOLatLngIsValid(a1))
                        {
                          PBReaderRecallMark();
                          continue;
                        }
                      }
                      goto LABEL_306;
                    }
                  }
                  break;
                }
LABEL_263:
                v123 = a1[*v4];
                PBReaderRecallMark();
                if (v123)
                  goto LABEL_307;
                break;
              default:
                if ((PBReaderSkipValueWithTag() & 1) == 0)
                  goto LABEL_307;
                continue;
            }
            break;
          }
          PBReaderRecallMark();
          continue;
        }
      case 7u:
        if ((v8 & 7) != 0)
          goto LABEL_308;
        v125 = 0;
        while (1)
        {
          v126 = *v2;
          v127 = *(_QWORD *)&a1[v126];
          v128 = v127 + 1;
          if (v127 == -1 || v128 > *(_QWORD *)&a1[*v3])
            goto LABEL_283;
          v129 = *(char *)(*(_QWORD *)&a1[*v5] + v127);
          *(_QWORD *)&a1[v126] = v128;
          if (v129 < 0)
          {
            v32 = v125++ > 8;
            if (!v32)
              continue;
          }
          goto LABEL_292;
        }
      case 8u:
        if (v15 != 2)
        {
          if ((v8 & 7) != 0)
            goto LABEL_308;
          while (1)
          {
            v130 = *v2;
            v131 = *(_QWORD *)&a1[v130];
            v132 = v131 + 1;
            if (v131 == -1 || v132 > *(_QWORD *)&a1[*v3])
              break;
            v133 = *(char *)(*(_QWORD *)&a1[*v5] + v131);
            *(_QWORD *)&a1[v130] = v132;
            if (v133 < 0)
            {
              v134 = v15++;
              if (v134 <= 8)
                continue;
            }
            goto LABEL_292;
          }
LABEL_283:
          a1[*v4] = 1;
          goto LABEL_292;
        }
        if (!PBReaderPlaceMark())
          goto LABEL_308;
LABEL_295:
        while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
        {
          v137 = a1[*v4];
          if (a1[*v4])
            break;
          while (1)
          {
            v138 = *v2;
            v139 = *(_QWORD *)&a1[v138];
            v140 = v139 + 1;
            if (v139 == -1 || v140 > *(_QWORD *)&a1[*v3])
              break;
            v141 = *(char *)(*(_QWORD *)&a1[*v5] + v139);
            *(_QWORD *)&a1[v138] = v140;
            if (v141 < 0)
            {
              v13 = v137++ >= 9;
              if (!v13)
                continue;
            }
            goto LABEL_295;
          }
          a1[*v4] = 1;
        }
        goto LABEL_291;
      case 9u:
        if (v15 == 2 && PBReaderPlaceMark() && GEOPDAddressResultSubTypeFilterIsValid(a1))
          goto LABEL_291;
        goto LABEL_308;
      default:
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_308;
        goto LABEL_292;
    }
  }
}

void sub_188C708AC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL _GEOPDSSearchFilterIsDirty(uint64_t a1)
{
  __int16 v2;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 104));
  v2 = *(_WORD *)(a1 + 116);
  if ((v2 & 0x660) != 0)
    return 1;
  if ((*(_WORD *)(a1 + 116) & 0x100) != 0)
  {
    if (GEOPDPoiIconCategoryFilterIsDirty(*(_QWORD *)(a1 + 80)))
      return 1;
    v2 = *(_WORD *)(a1 + 116);
  }
  if ((v2 & 0x80) == 0)
    goto LABEL_9;
  if ((GEOPDSImplicitQueryCategoryFilterIsDirty(*(os_unfair_lock_s **)(a1 + 72)) & 1) != 0)
    return 1;
  v2 = *(_WORD *)(a1 + 116);
LABEL_9:
  if ((v2 & 8) != 0)
    return 1;
  return (v2 & 0x10) != 0 && GEOPDAddressResultSubTypeFilterIsDirty(*(_QWORD *)(a1 + 48));
}

os_unfair_lock_s *GEOPDSSearchFilterIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  _BOOL8 IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOPDSSearchFilterIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 26);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_188C70C58(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSSearchLocationParametersReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  GEOPDSTransportHint *v25;
  void *v26;
  id v27;
  void *v28;
  _BOOL8 v29;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 2)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_42;
          v25 = objc_alloc_init(GEOPDSTransportHint);
          if (!GEOPDSTransportHintReadAllFrom((uint64_t)v25, v3))
          {

            goto LABEL_42;
          }
          PBReaderRecallMark();
          v26 = *(void **)(a1 + 16);
          *(_QWORD *)(a1 + 16) = v25;

        }
        else if ((v10 >> 3) == 1)
        {
          v18 = 0;
          v19 = 0;
          v20 = 0;
          *(_BYTE *)(a1 + 28) |= 1u;
          while (1)
          {
            v21 = *v4;
            v22 = *(_QWORD *)&v3[v21];
            v23 = v22 + 1;
            if (v22 == -1 || v23 > *(_QWORD *)&v3[*v5])
              break;
            v24 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v22);
            *(_QWORD *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0)
              goto LABEL_36;
            v18 += 7;
            v15 = v19++ >= 9;
            if (v15)
            {
              LODWORD(v20) = 0;
              goto LABEL_38;
            }
          }
          v3[*v6] = 1;
LABEL_36:
          if (v3[*v6])
            LODWORD(v20) = 0;
LABEL_38:
          *(_DWORD *)(a1 + 24) = v20;
        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v27 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v28 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v27;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_42;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v29 = v3[*v6] == 0;
  }
  else
  {
LABEL_42:
    v29 = 0;
  }
  objc_sync_exit(v3);

  return v29;
}

void sub_188C72054(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSSearchLocationParametersIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  BOOL v13;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  char v23;
  unsigned int v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  int v30;
  unsigned int v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  int v36;
  int v37;
  _BOOL8 v38;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        v13 = v7++ >= 9;
        if (v13)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      if ((v8 >> 3) == 2)
      {
        if (v15 != 2 || !PBReaderPlaceMark())
        {
LABEL_67:
          PBReaderRecallMark();
          return 0;
        }
        objc_msgSend(a1, "position", 0, 0);
        objc_msgSend(a1, "length");
LABEL_31:
        while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3] && !a1[*v4])
        {
          v23 = 0;
          v24 = 0;
          v25 = 0;
          while (1)
          {
            v26 = *v2;
            v27 = *(_QWORD *)&a1[v26];
            v28 = v27 + 1;
            if (v27 == -1 || v28 > *(_QWORD *)&a1[*v3])
              break;
            v29 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v27);
            *(_QWORD *)&a1[v26] = v28;
            v25 |= (unint64_t)(v29 & 0x7F) << v23;
            if ((v29 & 0x80) == 0)
              goto LABEL_41;
            v23 += 7;
            v13 = v24++ >= 9;
            if (v13)
            {
              v25 = 0;
              v30 = a1[*v4];
              goto LABEL_43;
            }
          }
          a1[*v4] = 1;
LABEL_41:
          v30 = a1[*v4];
          if (a1[*v4])
            v25 = 0;
LABEL_43:
          if (v30 || (v25 & 7) == 4)
            break;
          if ((v25 >> 3) == 1)
          {
            if ((v25 & 7) != 0)
              goto LABEL_66;
            v32 = 0;
            while (1)
            {
              v33 = *v2;
              v34 = *(_QWORD *)&a1[v33];
              v35 = v34 + 1;
              if (v34 == -1 || v35 > *(_QWORD *)&a1[*v3])
                break;
              v36 = *(char *)(*(_QWORD *)&a1[*v5] + v34);
              *(_QWORD *)&a1[v33] = v35;
              if (v36 < 0)
              {
                v22 = v32++ > 8;
                if (!v22)
                  continue;
              }
              goto LABEL_31;
            }
            a1[*v4] = 1;
          }
          else if (!PBReaderSkipValueWithTag())
          {
LABEL_66:
            PBReaderRecallMark();
            goto LABEL_67;
          }
        }
        v37 = a1[*v4];
        PBReaderRecallMark();
        if (v37)
          goto LABEL_67;
        PBReaderRecallMark();
      }
      else if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0)
          goto LABEL_67;
        v17 = 0;
        while (1)
        {
          v18 = *v2;
          v19 = *(_QWORD *)&a1[v18];
          v20 = v19 + 1;
          if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
            break;
          v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
          *(_QWORD *)&a1[v18] = v20;
          if (v21 < 0)
          {
            v22 = v17++ > 8;
            if (!v22)
              continue;
          }
          goto LABEL_64;
        }
        a1[*v4] = 1;
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_67;
      }
LABEL_64:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v38 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v38;
}

BOOL GEOPDSSearchRedoButtonThresholdReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  id v25;
  void *v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  _BOOL8 v35;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        switch((v10 >> 3))
        {
          case 1u:
            v18 = 0;
            v19 = 0;
            v20 = 0;
            *(_BYTE *)(a1 + 44) |= 8u;
            break;
          case 2u:
            *(_BYTE *)(a1 + 44) |= 4u;
            v27 = *v4;
            v28 = *(_QWORD *)&v3[v27];
            if (v28 <= 0xFFFFFFFFFFFFFFF7 && v28 + 8 <= *(_QWORD *)&v3[*v5])
            {
              v29 = *(_QWORD *)(*(_QWORD *)&v3[*v7] + v28);
              *(_QWORD *)&v3[v27] = v28 + 8;
            }
            else
            {
              v3[*v6] = 1;
              v29 = 0;
            }
            v34 = 32;
            goto LABEL_50;
          case 3u:
            *(_BYTE *)(a1 + 44) |= 2u;
            v30 = *v4;
            v31 = *(_QWORD *)&v3[v30];
            if (v31 <= 0xFFFFFFFFFFFFFFF7 && v31 + 8 <= *(_QWORD *)&v3[*v5])
            {
              v29 = *(_QWORD *)(*(_QWORD *)&v3[*v7] + v31);
              *(_QWORD *)&v3[v30] = v31 + 8;
            }
            else
            {
              v3[*v6] = 1;
              v29 = 0;
            }
            v34 = 24;
            goto LABEL_50;
          case 4u:
            *(_BYTE *)(a1 + 44) |= 1u;
            v32 = *v4;
            v33 = *(_QWORD *)&v3[v32];
            if (v33 <= 0xFFFFFFFFFFFFFFF7 && v33 + 8 <= *(_QWORD *)&v3[*v5])
            {
              v29 = *(_QWORD *)(*(_QWORD *)&v3[*v7] + v33);
              *(_QWORD *)&v3[v32] = v33 + 8;
            }
            else
            {
              v3[*v6] = 1;
              v29 = 0;
            }
            v34 = 16;
LABEL_50:
            *(_QWORD *)(a1 + v34) = v29;
            continue;
          default:
            if (!*(_QWORD *)(a1 + 8))
            {
              v25 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
              v26 = *(void **)(a1 + 8);
              *(_QWORD *)(a1 + 8) = v25;

            }
            if (!PBUnknownFieldAdd())
              goto LABEL_53;
            continue;
        }
        while (1)
        {
          v21 = *v4;
          v22 = *(_QWORD *)&v3[v21];
          v23 = v22 + 1;
          if (v22 == -1 || v23 > *(_QWORD *)&v3[*v5])
            break;
          v24 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v22);
          *(_QWORD *)&v3[v21] = v23;
          v20 |= (unint64_t)(v24 & 0x7F) << v18;
          if ((v24 & 0x80) == 0)
            goto LABEL_41;
          v18 += 7;
          v15 = v19++ >= 9;
          if (v15)
          {
            LODWORD(v20) = 0;
            goto LABEL_43;
          }
        }
        v3[*v6] = 1;
LABEL_41:
        if (v3[*v6])
          LODWORD(v20) = 0;
LABEL_43:
        *(_DWORD *)(a1 + 40) = v20;
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v35 = v3[*v6] == 0;
  }
  else
  {
LABEL_53:
    v35 = 0;
  }
  objc_sync_exit(v3);

  return v35;
}

void sub_188C7316C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSSearchRedoButtonThresholdIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v14;
  int v15;
  int v16;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  int v25;
  _BOOL8 v27;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (!a1[*v4])
    {
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = *v4;
          v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = *v4;
      v15 = a1[v14];
      if (a1[v14])
        v8 = 0;
LABEL_14:
      v16 = v8 & 7;
      if (v15 || v16 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0)
            goto LABEL_38;
          v21 = 0;
          do
          {
            v22 = *v2;
            v23 = *(_QWORD *)&a1[v22];
            v24 = v23 + 1;
            if (v23 == -1 || v24 > *(_QWORD *)&a1[*v3])
            {
              v14 = *v4;
              goto LABEL_34;
            }
            v25 = *(char *)(*(_QWORD *)&a1[*v5] + v23);
            *(_QWORD *)&a1[v22] = v24;
            if ((v25 & 0x80000000) == 0)
              break;
          }
          while (v21++ <= 8);
          goto LABEL_35;
        case 2u:
        case 3u:
        case 4u:
          if (v16 != 1)
            goto LABEL_38;
          v18 = *v2;
          v19 = *(_QWORD *)&a1[v18];
          if (v19 > 0xFFFFFFFFFFFFFFF7 || (v20 = v19 + 8, v20 > *(_QWORD *)&a1[*v3]))
LABEL_34:
            a1[v14] = 1;
          else
            *(_QWORD *)&a1[v18] = v20;
          goto LABEL_35;
        default:
          if (!PBReaderSkipValueWithTag())
          {
LABEL_38:
            v27 = 0;
            goto LABEL_37;
          }
LABEL_35:
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_36;
          break;
      }
    }
  }
LABEL_36:
  v27 = a1[*v4] == 0;
LABEL_37:
  PBReaderRecallMark();
  return v27;
}

void sub_188C73AA8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSSearchResultSectionReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  int *v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  BOOL v28;
  int v29;
  unint64_t v31;
  BOOL v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  void *v40;
  int v41;
  GEOPDResolvedItem *v42;
  char v43;
  unsigned int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  char v50;
  unsigned int v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  char v55;
  void *v56;
  char v57;
  uint64_t v58;
  __int16 v59;
  int v60;
  __int16 v61;
  void *v62;
  int v64;
  int *v65;
  char v66;
  char v67;
  char v68;
  char v69;
  char v70;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 68);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 64));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 84)), (uint16x4_t)0xFFF9FFFAFFFCFFFDLL), (int8x8_t)0x1000100010001))+ ((*(_WORD *)(a1 + 84) >> 5) & 1)+ ((*(_WORD *)(a1 + 84) >> 2) & 1));
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 > 3;
        v67 = v16 & ~(_BYTE)v11 | v9;
        v68 = v16 | v11 | v67;
        v66 = v8;
        if ((((v16 | v11) | v8) & 1) != 0)
          v17 = 0;
        else
          v17 = a3;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v69 = (v17 == 0) | v16 | v11;
        v70 = v16 | v11;
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v7;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v19))
      goto LABEL_104;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0)
        goto LABEL_25;
      v21 += 7;
      v28 = v22++ >= 9;
      if (v28)
      {
        v23 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_25:
    v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_27:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_104:
      v64 = 1;
      goto LABEL_105;
    }
    v31 = v23 >> 3;
    v32 = v70;
    if ((v69 & 1) == 0)
    {
      v33 = v17;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if (!v32)
          goto LABEL_82;
        if ((*(_WORD *)(a1 + 84) & 0x10) == 0)
        {
          PBReaderReadString();
          v37 = objc_claimAutoreleasedReturnValue();
          v38 = 32;
          goto LABEL_80;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_124;
        v59 = *(_WORD *)(a1 + 84) << 11;
        goto LABEL_101;
      case 2:
        if (!v32 || (*(_WORD *)(a1 + 84) & 8) != 0)
          goto LABEL_82;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_124;
        v42 = objc_alloc_init(GEOPDResolvedItem);
        if (!GEOPDResolvedItemReadAllFrom((uint64_t)v42, (void *)v3))
          goto LABEL_123;
        PBReaderRecallMark();
        -[GEOPDSSearchResultSection _addNoFlagsResolvedItem:](a1, v42);

        goto LABEL_102;
      case 3:
        if ((v66 & 1) == 0)
          goto LABEL_82;
        v43 = 0;
        v44 = 0;
        v45 = 0;
        *(_WORD *)(a1 + 84) |= 2u;
        while (2)
        {
          v46 = *v18;
          v47 = *(_QWORD *)(v3 + v46);
          v48 = v47 + 1;
          if (v47 == -1 || v48 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v19) = 1;
          }
          else
          {
            v49 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v47);
            *(_QWORD *)(v3 + v46) = v48;
            v45 |= (unint64_t)(v49 & 0x7F) << v43;
            if (v49 < 0)
            {
              v43 += 7;
              v28 = v44++ >= 9;
              if (v28)
              {
                LODWORD(v45) = 0;
                goto LABEL_87;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v19))
          LODWORD(v45) = 0;
LABEL_87:
        v58 = 80;
        goto LABEL_92;
      case 4:
        if (!v32)
          goto LABEL_82;
        if ((*(_WORD *)(a1 + 84) & 0x40) == 0)
        {
          PBReaderReadString();
          v37 = objc_claimAutoreleasedReturnValue();
          v38 = 48;
          goto LABEL_80;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_124;
        v59 = *(_WORD *)(a1 + 84) << 9;
        goto LABEL_101;
      case 5:
        if ((v66 & 1) == 0)
          goto LABEL_82;
        v50 = 0;
        v51 = 0;
        v45 = 0;
        *(_WORD *)(a1 + 84) |= 1u;
        while (2)
        {
          v52 = *v18;
          v53 = *(_QWORD *)(v3 + v52);
          v54 = v53 + 1;
          if (v53 == -1 || v54 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v19) = 1;
          }
          else
          {
            v55 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v53);
            *(_QWORD *)(v3 + v52) = v54;
            v45 |= (unint64_t)(v55 & 0x7F) << v50;
            if (v55 < 0)
            {
              v50 += 7;
              v28 = v51++ >= 9;
              if (v28)
              {
                LODWORD(v45) = 0;
                goto LABEL_91;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v19))
          LODWORD(v45) = 0;
LABEL_91:
        v58 = 76;
LABEL_92:
        *(_DWORD *)(a1 + v58) = v45;
        goto LABEL_103;
      case 6:
        if (!v32)
          goto LABEL_82;
        if ((*(_WORD *)(a1 + 84) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_124;
          v59 = *(_WORD *)(a1 + 84) << 8;
LABEL_101:
          v7 += v59 >> 15;
          goto LABEL_102;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_124;
        v42 = objc_alloc_init(GEOStyleAttributes);
        if (GEOStyleAttributesReadAllFrom((uint64_t)v42, (void *)v3))
        {
          PBReaderRecallMark();
          v56 = *(void **)(a1 + 56);
          *(_QWORD *)(a1 + 56) = v42;
LABEL_81:

          --v7;
LABEL_102:
          v19 = (int *)MEMORY[0x1E0D82BC8];
          goto LABEL_103;
        }
LABEL_123:

LABEL_124:
        v64 = 0;
        v65 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
        v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_106:
        if ((v67 & 1) != 0)
LABEL_107:
          *(_WORD *)(a1 + v65[911]) |= 4u;
        if (v70 & 1 | ((v64 & 1) == 0))
        {
          *(_WORD *)(a1 + v65[911]) |= 0x10u;
          *(_WORD *)(a1 + v65[911]) |= 8u;
          *(_WORD *)(a1 + v65[911]) |= 0x40u;
          *(_WORD *)(a1 + v65[911]) |= 0x80u;
          *(_WORD *)(a1 + v65[911]) |= 0x20u;
        }
        else if (v17)
        {
          while (1)
          {
            v60 = *v17++;
            v61 = 16;
            switch(v60)
            {
              case 0:
                goto LABEL_117;
              case 1:
                goto LABEL_116;
              case 2:
                v61 = 8;
                goto LABEL_116;
              case 4:
                v61 = 64;
                goto LABEL_116;
              case 6:
                v61 = 128;
                goto LABEL_116;
              case 7:
                v61 = 32;
LABEL_116:
                *(_WORD *)(a1 + v65[911]) |= v61;
                break;
              default:
                continue;
            }
          }
        }
LABEL_117:
        if (v64)
          v3 = *(_BYTE *)(v3 + *v19) == 0;
        else
          v3 = 0;
        if ((v70 & 1) != 0)
        {
          v62 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      case 7:
        if (!v32)
          goto LABEL_82;
        if ((*(_WORD *)(a1 + 84) & 0x20) == 0)
        {
          PBReaderReadString();
          v37 = objc_claimAutoreleasedReturnValue();
          v38 = 40;
LABEL_80:
          v56 = *(void **)(a1 + v38);
          *(_QWORD *)(a1 + v38) = v37;
          goto LABEL_81;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_124;
        v59 = *(_WORD *)(a1 + 84) << 10;
        goto LABEL_101;
      default:
        if ((v67 & 1) == 0 || (*(_WORD *)(a1 + 84) & 4) != 0)
        {
LABEL_82:
          v57 = PBReaderSkipValueWithTag();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if ((v57 & 1) == 0)
          {
            v64 = 0;
LABEL_105:
            v65 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
            goto LABEL_106;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v39 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v40 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v39;

          }
          v41 = PBUnknownFieldAdd();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if (!v41)
          {
            v64 = 0;
            v65 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
            goto LABEL_107;
          }
        }
LABEL_103:
        if (!(v68 & 1 | (v7 != 0)))
          goto LABEL_104;
        continue;
    }
  }
}

void sub_188C7443C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188C74564(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188C746B8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188C74C98(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188C74D78(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDSSearchResultSectionCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _BYTE v11[128];
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  v7 = 0u;
  v8 = 0u;
  v9 = 0u;
  v10 = 0u;
  v2 = *(id *)(a1 + 24);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v8;
    while (1)
    {
      if (*(_QWORD *)v8 != v5)
        objc_enumerationMutation(v2);
      if (!--v4)
      {
        v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
        if (!v4)
          break;
      }
    }
  }

  return objc_msgSend(*(id *)(a1 + 56), "readAll:", 1, v7);
}

unint64_t GEOPDSSearchResultSectionReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 68))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDSSearchResultSectionReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 72));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 64) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 68) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDSSearchResultSectionReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDSSearchResultSectionReadAllFrom_initialTag;
  Specified = GEOPDSSearchResultSectionReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDSSearchResultSectionCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return Specified;
}

void sub_188C75768(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSSearchResultSectionIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  _BOOL8 v28;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2)
            goto LABEL_52;
          goto LABEL_49;
        case 2u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDSearchRelatedCategoryIsValid(a1))
            goto LABEL_52;
          goto LABEL_47;
        case 3u:
          if ((v8 & 7) != 0)
            goto LABEL_52;
          v17 = 0;
          while (1)
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
              goto LABEL_43;
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if (v21 < 0)
            {
              v22 = v17++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_50;
          }
        case 4u:
          if (v15 == 2)
            goto LABEL_49;
          goto LABEL_52;
        case 5u:
          if ((v8 & 7) != 0)
            goto LABEL_52;
          v23 = 0;
          break;
        case 6u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOStyleAttributesIsValid(a1))
            goto LABEL_52;
LABEL_47:
          PBReaderRecallMark();
          continue;
        case 7u:
          if (v15 == 2)
            goto LABEL_49;
          goto LABEL_52;
        default:
LABEL_49:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_52:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v24 = *v2;
        v25 = *(_QWORD *)&a1[v24];
        v26 = v25 + 1;
        if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
          break;
        v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
        *(_QWORD *)&a1[v24] = v26;
        if (v27 < 0)
        {
          v22 = v23++ > 8;
          if (!v22)
            continue;
        }
        goto LABEL_50;
      }
LABEL_43:
      a1[*v4] = 1;
LABEL_50:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v28 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v28;
}

void sub_188C75D38(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSSearchResultSectionIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  v2 = (*(_WORD *)(a1 + 84) & 0x1F8) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return v2;
}

void sub_188C760B0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSSearchSessionDataReadAllFrom(uint64_t a1, void *a2)
{
  unsigned __int8 *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  int v8;
  char v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  char v17;
  BOOL v18;
  id v19;
  void *v20;
  _BOOL8 v21;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    v7 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      v8 = v3[*v6];
      if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
        break;
      if (v3[*v6])
      {
        v8 = 1;
        break;
      }
      v9 = 0;
      v10 = 0;
      v11 = 0;
      while (1)
      {
        v12 = *v4;
        v13 = *(_QWORD *)&v3[v12];
        v14 = v13 + 1;
        if (v13 == -1 || v14 > *(_QWORD *)&v3[*v5])
          break;
        v15 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v13);
        *(_QWORD *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0)
          goto LABEL_13;
        v9 += 7;
        if (v10++ >= 9)
        {
          v17 = 0;
          v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      v8 = v3[*v6];
      if (v3[*v6])
        v17 = 0;
      else
        v17 = v11;
LABEL_16:
      if (v8)
        v18 = 1;
      else
        v18 = (v17 & 7) == 4;
      if (v18)
        break;
      if (!*(_QWORD *)(a1 + 8))
      {
        v19 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v20 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = v19;

      }
      if ((PBUnknownFieldAdd() & 1) == 0)
        goto LABEL_23;
    }
    v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_188C76984(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSSearchSessionDataIsValid(unsigned __int8 *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  int v6;
  char v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v15;
  _BOOL8 v16;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  v5 = (int *)MEMORY[0x1E0D82BB8];
  while (1)
  {
    v6 = a1[*v4];
    if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
      break;
    if (a1[*v4])
    {
      v6 = 1;
      break;
    }
    v7 = 0;
    v8 = 0;
    v9 = 0;
    while (1)
    {
      v10 = *v2;
      v11 = *(_QWORD *)&a1[v10];
      v12 = v11 + 1;
      if (v11 == -1 || v12 > *(_QWORD *)&a1[*v3])
        break;
      v13 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v11);
      *(_QWORD *)&a1[v10] = v12;
      v9 |= (unint64_t)(v13 & 0x7F) << v7;
      if ((v13 & 0x80) == 0)
        goto LABEL_12;
      v7 += 7;
      if (v8++ >= 9)
      {
        LOBYTE(v9) = 0;
        v6 = a1[*v4];
        goto LABEL_14;
      }
    }
    a1[*v4] = 1;
LABEL_12:
    v6 = a1[*v4];
    if (a1[*v4])
      LOBYTE(v9) = 0;
LABEL_14:
    if (v6)
      v15 = 1;
    else
      v15 = (v9 & 7) == 4;
    if (v15)
      break;
    if ((PBReaderSkipValueWithTag() & 1) == 0)
    {
      v16 = 0;
      goto LABEL_22;
    }
  }
  v16 = v6 == 0;
LABEL_22:
  PBReaderRecallMark();
  return v16;
}

BOOL GEOPDSSearchStructureIntentRequestTypeReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  BOOL v25;
  int *v26;
  char v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  id v33;
  void *v34;
  _BOOL8 v35;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      while (1)
      {
        if (v3[*v6])
          goto LABEL_49;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          goto LABEL_49;
        if ((v10 >> 3) == 2)
          break;
        if ((v10 >> 3) == 1)
        {
          v18 = 0;
          v19 = 0;
          v20 = 0;
          *(_BYTE *)(a1 + 24) |= 2u;
          while (1)
          {
            v21 = *v4;
            v22 = *(_QWORD *)&v3[v21];
            v23 = v22 + 1;
            if (v22 == -1 || v23 > *(_QWORD *)&v3[*v5])
            {
              v26 = &OBJC_IVAR___GEOPDSSearchStructureIntentRequestType__structureType;
              goto LABEL_41;
            }
            v24 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v22);
            *(_QWORD *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0)
              break;
            v18 += 7;
            v25 = v19++ > 8;
            if (v25)
            {
              LODWORD(v20) = 0;
              v26 = &OBJC_IVAR___GEOPDSSearchStructureIntentRequestType__structureType;
              goto LABEL_44;
            }
          }
          v26 = &OBJC_IVAR___GEOPDSSearchStructureIntentRequestType__structureType;
LABEL_42:
          if (v3[*v6])
            LODWORD(v20) = 0;
LABEL_44:
          *(_DWORD *)(a1 + *v26) = v20;
          goto LABEL_45;
        }
        if (!*(_QWORD *)(a1 + 8))
        {
          v33 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
          v34 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = v33;

        }
        if ((PBUnknownFieldAdd() & 1) == 0)
          goto LABEL_50;
LABEL_45:
        if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
          goto LABEL_49;
      }
      v27 = 0;
      v28 = 0;
      v20 = 0;
      *(_BYTE *)(a1 + 24) |= 1u;
      while (1)
      {
        v29 = *v4;
        v30 = *(_QWORD *)&v3[v29];
        v31 = v30 + 1;
        if (v30 == -1 || v31 > *(_QWORD *)&v3[*v5])
          break;
        v32 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v30);
        *(_QWORD *)&v3[v29] = v31;
        v20 |= (unint64_t)(v32 & 0x7F) << v27;
        if ((v32 & 0x80) == 0)
        {
          v26 = &OBJC_IVAR___GEOPDSSearchStructureIntentRequestType__intentType;
          goto LABEL_42;
        }
        v27 += 7;
        v25 = v28++ > 8;
        if (v25)
        {
          LODWORD(v20) = 0;
          v26 = &OBJC_IVAR___GEOPDSSearchStructureIntentRequestType__intentType;
          goto LABEL_44;
        }
      }
      v26 = &OBJC_IVAR___GEOPDSSearchStructureIntentRequestType__intentType;
LABEL_41:
      v3[*v6] = 1;
      goto LABEL_42;
    }
LABEL_49:
    v35 = v3[*v6] == 0;
  }
  else
  {
LABEL_50:
    v35 = 0;
  }
  objc_sync_exit(v3);

  return v35;
}

void sub_188C77488(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSSearchTierMetadataReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  unint64_t v18;
  char v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  BOOL v26;
  int *v27;
  char v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  char v34;
  unsigned int v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  id v40;
  void *v41;
  _BOOL8 v42;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      while (1)
      {
        if (v3[*v6])
          goto LABEL_59;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          goto LABEL_59;
        v18 = v10 >> 3;
        if ((v10 >> 3) == 3)
        {
          v28 = 0;
          v29 = 0;
          v21 = 0;
          *(_BYTE *)(a1 + 28) |= 1u;
          while (1)
          {
            v30 = *v4;
            v31 = *(_QWORD *)&v3[v30];
            v32 = v31 + 1;
            if (v31 == -1 || v32 > *(_QWORD *)&v3[*v5])
              break;
            v33 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v31);
            *(_QWORD *)&v3[v30] = v32;
            v21 |= (unint64_t)(v33 & 0x7F) << v28;
            if ((v33 & 0x80) == 0)
            {
              v27 = &OBJC_IVAR___GEOPDSSearchTierMetadata__endIndex;
              goto LABEL_51;
            }
            v28 += 7;
            v26 = v29++ > 8;
            if (v26)
            {
              LODWORD(v21) = 0;
              v27 = &OBJC_IVAR___GEOPDSSearchTierMetadata__endIndex;
              goto LABEL_53;
            }
          }
          v27 = &OBJC_IVAR___GEOPDSSearchTierMetadata__endIndex;
LABEL_50:
          v3[*v6] = 1;
          goto LABEL_51;
        }
        if ((_DWORD)v18 == 2)
          break;
        if ((_DWORD)v18 == 1)
        {
          v19 = 0;
          v20 = 0;
          v21 = 0;
          *(_BYTE *)(a1 + 28) |= 4u;
          while (1)
          {
            v22 = *v4;
            v23 = *(_QWORD *)&v3[v22];
            v24 = v23 + 1;
            if (v23 == -1 || v24 > *(_QWORD *)&v3[*v5])
            {
              v27 = &OBJC_IVAR___GEOPDSSearchTierMetadata__tierType;
              goto LABEL_50;
            }
            v25 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v23);
            *(_QWORD *)&v3[v22] = v24;
            v21 |= (unint64_t)(v25 & 0x7F) << v19;
            if ((v25 & 0x80) == 0)
              break;
            v19 += 7;
            v26 = v20++ > 8;
            if (v26)
            {
              LODWORD(v21) = 0;
              v27 = &OBJC_IVAR___GEOPDSSearchTierMetadata__tierType;
              goto LABEL_53;
            }
          }
          v27 = &OBJC_IVAR___GEOPDSSearchTierMetadata__tierType;
          goto LABEL_51;
        }
        if (!*(_QWORD *)(a1 + 8))
        {
          v40 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
          v41 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = v40;

        }
        if ((PBUnknownFieldAdd() & 1) == 0)
          goto LABEL_60;
LABEL_54:
        if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
          goto LABEL_59;
      }
      v34 = 0;
      v35 = 0;
      v21 = 0;
      *(_BYTE *)(a1 + 28) |= 2u;
      while (1)
      {
        v36 = *v4;
        v37 = *(_QWORD *)&v3[v36];
        v38 = v37 + 1;
        if (v37 == -1 || v38 > *(_QWORD *)&v3[*v5])
        {
          v27 = &OBJC_IVAR___GEOPDSSearchTierMetadata__startIndex;
          goto LABEL_50;
        }
        v39 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v37);
        *(_QWORD *)&v3[v36] = v38;
        v21 |= (unint64_t)(v39 & 0x7F) << v34;
        if ((v39 & 0x80) == 0)
          break;
        v34 += 7;
        v26 = v35++ > 8;
        if (v26)
        {
          LODWORD(v21) = 0;
          v27 = &OBJC_IVAR___GEOPDSSearchTierMetadata__startIndex;
          goto LABEL_53;
        }
      }
      v27 = &OBJC_IVAR___GEOPDSSearchTierMetadata__startIndex;
LABEL_51:
      if (v3[*v6])
        LODWORD(v21) = 0;
LABEL_53:
      *(_DWORD *)(a1 + *v27) = v21;
      goto LABEL_54;
    }
LABEL_59:
    v42 = v3[*v6] == 0;
  }
  else
  {
LABEL_60:
    v42 = 0;
  }
  objc_sync_exit(v3);

  return v42;
}

void sub_188C780F8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSSearchTierMetadataIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  unint64_t v16;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  int v32;
  _BOOL8 v33;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_48;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      if (v14 || (v8 & 7) == 4)
        goto LABEL_48;
      v16 = v8 >> 3;
      if ((v8 >> 3) == 3)
        break;
      if ((_DWORD)v16 == 2)
      {
        if ((v8 & 7) != 0)
          goto LABEL_50;
        v28 = 0;
        while (1)
        {
          v29 = *v2;
          v30 = *(_QWORD *)&a1[v29];
          v31 = v30 + 1;
          if (v30 == -1 || v31 > *(_QWORD *)&a1[*v3])
            goto LABEL_45;
          v32 = *(char *)(*(_QWORD *)&a1[*v5] + v30);
          *(_QWORD *)&a1[v29] = v31;
          if (v32 < 0)
          {
            v22 = v28++ > 8;
            if (!v22)
              continue;
          }
          goto LABEL_47;
        }
      }
      if ((_DWORD)v16 == 1)
      {
        if ((v8 & 7) != 0)
          goto LABEL_50;
        v17 = 0;
        while (1)
        {
          v18 = *v2;
          v19 = *(_QWORD *)&a1[v18];
          v20 = v19 + 1;
          if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
            break;
          v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
          *(_QWORD *)&a1[v18] = v20;
          if (v21 < 0)
          {
            v22 = v17++ > 8;
            if (!v22)
              continue;
          }
          goto LABEL_47;
        }
LABEL_45:
        a1[*v4] = 1;
        goto LABEL_47;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_50:
        v33 = 0;
        goto LABEL_49;
      }
LABEL_47:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_48;
    }
    if ((v8 & 7) != 0)
      goto LABEL_50;
    v23 = 0;
    while (1)
    {
      v24 = *v2;
      v25 = *(_QWORD *)&a1[v24];
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
        goto LABEL_45;
      v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
      *(_QWORD *)&a1[v24] = v26;
      if (v27 < 0)
      {
        v22 = v23++ > 8;
        if (!v22)
          continue;
      }
      goto LABEL_47;
    }
  }
LABEL_48:
  v33 = a1[*v4] == 0;
LABEL_49:
  PBReaderRecallMark();
  return v33;
}

BOOL GEOPDSSearchVenueFilterReadAllFrom(uint64_t a1, void *a2, int a3)
{
  char *v5;
  int *v6;
  int *v7;
  int *v8;
  int *v9;
  char v10;
  unsigned int v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  BOOL v17;
  int v18;
  GEOPDVenueIdentifier *v20;
  void *v21;
  char v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  id v29;
  void *v30;
  _BOOL8 v31;

  v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    v6 = (int *)MEMORY[0x1E0D82BF0];
    v7 = (int *)MEMORY[0x1E0D82BD8];
    v8 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v5[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v5[*MEMORY[0x1E0D82BD8]])
    {
      v9 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v5[*v8])
          break;
        v10 = 0;
        v11 = 0;
        v12 = 0;
        while (1)
        {
          v13 = *v6;
          v14 = *(_QWORD *)&v5[v13];
          v15 = v14 + 1;
          if (v14 == -1 || v15 > *(_QWORD *)&v5[*v7])
            break;
          v16 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v14);
          *(_QWORD *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0)
            goto LABEL_13;
          v10 += 7;
          v17 = v11++ >= 9;
          if (v17)
          {
            v12 = 0;
            v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        v18 = v5[*v8];
        if (v5[*v8])
          v12 = 0;
LABEL_15:
        if (v18 || (v12 & 7) == 4)
          break;
        if ((v12 >> 3) == 2)
        {
          v22 = 0;
          v23 = 0;
          v24 = 0;
          *(_BYTE *)(a1 + 28) |= 1u;
          while (1)
          {
            v25 = *v6;
            v26 = *(_QWORD *)&v5[v25];
            v27 = v26 + 1;
            if (v26 == -1 || v27 > *(_QWORD *)&v5[*v7])
              break;
            v28 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v26);
            *(_QWORD *)&v5[v25] = v27;
            v24 |= (unint64_t)(v28 & 0x7F) << v22;
            if ((v28 & 0x80) == 0)
              goto LABEL_36;
            v22 += 7;
            v17 = v23++ >= 9;
            if (v17)
            {
              LODWORD(v24) = 0;
              goto LABEL_38;
            }
          }
          v5[*v8] = 1;
LABEL_36:
          if (v5[*v8])
            LODWORD(v24) = 0;
LABEL_38:
          *(_DWORD *)(a1 + 24) = v24;
        }
        else if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_42;
          v20 = objc_alloc_init(GEOPDVenueIdentifier);
          if (!GEOPDVenueIdentifierReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_42;
          }
          PBReaderRecallMark();
          v21 = *(void **)(a1 + 16);
          *(_QWORD *)(a1 + 16) = v20;

        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v29 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v30 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v29;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_42;
        }
      }
      while (*(_QWORD *)&v5[*v6] < *(_QWORD *)&v5[*v7]);
    }
    v31 = v5[*v8] == 0;
  }
  else
  {
LABEL_42:
    v31 = 0;
  }
  objc_sync_exit(v5);

  return v31;
}

void sub_188C78D14(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSSessionUserActionMetadataReadAllFrom(_QWORD *a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  GEOPDSUserActionMetadataElement *v18;
  id v19;
  void *v20;
  _BOOL8 v21;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_29;
          v18 = objc_alloc_init(GEOPDSUserActionMetadataElement);
          if (!GEOPDSUserActionMetadataElementReadAllFrom((uint64_t)v18, v3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          objc_msgSend(a1, "addUserActionMetadataElement:", v18, 0, 0);

        }
        else
        {
          if (!a1[1])
          {
            v19 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v20 = (void *)a1[1];
            a1[1] = v19;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_29;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v21 = v3[*v6] == 0;
  }
  else
  {
LABEL_29:
    v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_188C79860(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSSessionUserActionMetadataReadFrom(_QWORD *a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOPDSSessionUserActionMetadataReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188C798C0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSSessionUserActionMetadataIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  BOOL v13;
  int v14;
  int v15;
  BOOL v16;
  char v17;
  unsigned int v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  int v24;
  unsigned int v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  int v30;
  BOOL v31;
  unsigned int v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  int v36;
  int v37;
  _BOOL8 v38;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] >= *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
    goto LABEL_64;
  v5 = (int *)MEMORY[0x1E0D82BB8];
  do
  {
    if (a1[*v4])
      break;
    v6 = 0;
    v7 = 0;
    v8 = 0;
    while (1)
    {
      v9 = *v2;
      v10 = *(_QWORD *)&a1[v9];
      v11 = v10 + 1;
      if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
        break;
      v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
      *(_QWORD *)&a1[v9] = v11;
      v8 |= (unint64_t)(v12 & 0x7F) << v6;
      if ((v12 & 0x80) == 0)
        goto LABEL_12;
      v6 += 7;
      v13 = v7++ >= 9;
      if (v13)
      {
        v8 = 0;
        v14 = a1[*v4];
        goto LABEL_14;
      }
    }
    a1[*v4] = 1;
LABEL_12:
    v14 = a1[*v4];
    if (a1[*v4])
      v8 = 0;
LABEL_14:
    v15 = v8 & 7;
    if (v14)
      v16 = 1;
    else
      v16 = v15 == 4;
    if (v16)
      break;
    if ((v8 >> 3) != 1)
    {
      if ((PBReaderSkipValueWithTag() & 1) != 0)
        continue;
LABEL_66:
      PBReaderRecallMark();
      return 0;
    }
    if (v15 != 2 || !PBReaderPlaceMark())
      goto LABEL_66;
    objc_msgSend(a1, "position", 0, 0);
    objc_msgSend(a1, "length");
LABEL_22:
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3] && !a1[*v4])
    {
      v17 = 0;
      v18 = 0;
      v19 = 0;
      while (1)
      {
        v20 = *v2;
        v21 = *(_QWORD *)&a1[v20];
        v22 = v21 + 1;
        if (v21 == -1 || v22 > *(_QWORD *)&a1[*v3])
          break;
        v23 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v21);
        *(_QWORD *)&a1[v20] = v22;
        v19 |= (unint64_t)(v23 & 0x7F) << v17;
        if ((v23 & 0x80) == 0)
          goto LABEL_32;
        v17 += 7;
        v13 = v18++ >= 9;
        if (v13)
        {
          v19 = 0;
          v24 = a1[*v4];
          goto LABEL_34;
        }
      }
      a1[*v4] = 1;
LABEL_32:
      v24 = a1[*v4];
      if (a1[*v4])
        v19 = 0;
LABEL_34:
      if (v24 || (v19 & 7) == 4)
        break;
      if ((v19 >> 3) == 2)
      {
        if ((v19 & 7) != 0)
          goto LABEL_65;
        v32 = 0;
        while (1)
        {
          v33 = *v2;
          v34 = *(_QWORD *)&a1[v33];
          v35 = v34 + 1;
          if (v34 == -1 || v35 > *(_QWORD *)&a1[*v3])
            break;
          v36 = *(char *)(*(_QWORD *)&a1[*v5] + v34);
          *(_QWORD *)&a1[v33] = v35;
          if (v36 < 0)
          {
            v31 = v32++ > 8;
            if (!v31)
              continue;
          }
          goto LABEL_22;
        }
LABEL_56:
        a1[*v4] = 1;
      }
      else
      {
        if ((v19 >> 3) == 1)
        {
          if ((v19 & 7) != 0)
            goto LABEL_65;
          v26 = 0;
          while (1)
          {
            v27 = *v2;
            v28 = *(_QWORD *)&a1[v27];
            v29 = v28 + 1;
            if (v28 == -1 || v29 > *(_QWORD *)&a1[*v3])
              goto LABEL_56;
            v30 = *(char *)(*(_QWORD *)&a1[*v5] + v28);
            *(_QWORD *)&a1[v27] = v29;
            if (v30 < 0)
            {
              v31 = v26++ > 8;
              if (!v31)
                continue;
            }
            goto LABEL_22;
          }
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_65:
          PBReaderRecallMark();
          goto LABEL_66;
        }
      }
    }
    v37 = a1[*v4];
    PBReaderRecallMark();
    if (v37)
      goto LABEL_66;
    PBReaderRecallMark();
  }
  while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
LABEL_64:
  v38 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v38;
}

BOOL GEOPDSTransportHintReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  id v25;
  void *v26;
  _BOOL8 v27;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 1)
        {
          v18 = 0;
          v19 = 0;
          v20 = 0;
          *(_BYTE *)(a1 + 20) |= 1u;
          while (1)
          {
            v21 = *v4;
            v22 = *(_QWORD *)&v3[v21];
            v23 = v22 + 1;
            if (v22 == -1 || v23 > *(_QWORD *)&v3[*v5])
              break;
            v24 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v22);
            *(_QWORD *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0)
              goto LABEL_32;
            v18 += 7;
            v15 = v19++ >= 9;
            if (v15)
            {
              LODWORD(v20) = 0;
              goto LABEL_34;
            }
          }
          v3[*v6] = 1;
LABEL_32:
          if (v3[*v6])
            LODWORD(v20) = 0;
LABEL_34:
          *(_DWORD *)(a1 + 16) = v20;
        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v25 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v26 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v25;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_37;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v27 = v3[*v6] == 0;
  }
  else
  {
LABEL_37:
    v27 = 0;
  }
  objc_sync_exit(v3);

  return v27;
}

void sub_188C7A830(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

#error "188C8057C: too complex function (funcsize=10908)"

BOOL GEOPDSUserActionMetadataElementReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  BOOL v25;
  int *v26;
  char v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  id v33;
  void *v34;
  _BOOL8 v35;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      while (1)
      {
        if (v3[*v6])
          goto LABEL_49;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          goto LABEL_49;
        if ((v10 >> 3) == 2)
          break;
        if ((v10 >> 3) == 1)
        {
          v18 = 0;
          v19 = 0;
          v20 = 0;
          *(_BYTE *)(a1 + 24) |= 1u;
          while (1)
          {
            v21 = *v4;
            v22 = *(_QWORD *)&v3[v21];
            v23 = v22 + 1;
            if (v22 == -1 || v23 > *(_QWORD *)&v3[*v5])
            {
              v26 = &OBJC_IVAR___GEOPDSUserActionMetadataElement__uiAction;
              goto LABEL_41;
            }
            v24 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v22);
            *(_QWORD *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0)
              break;
            v18 += 7;
            v25 = v19++ > 8;
            if (v25)
            {
              LODWORD(v20) = 0;
              v26 = &OBJC_IVAR___GEOPDSUserActionMetadataElement__uiAction;
              goto LABEL_44;
            }
          }
          v26 = &OBJC_IVAR___GEOPDSUserActionMetadataElement__uiAction;
LABEL_42:
          if (v3[*v6])
            LODWORD(v20) = 0;
LABEL_44:
          *(_DWORD *)(a1 + *v26) = v20;
          goto LABEL_45;
        }
        if (!*(_QWORD *)(a1 + 8))
        {
          v33 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
          v34 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = v33;

        }
        if ((PBUnknownFieldAdd() & 1) == 0)
          goto LABEL_50;
LABEL_45:
        if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
          goto LABEL_49;
      }
      v27 = 0;
      v28 = 0;
      v20 = 0;
      *(_BYTE *)(a1 + 24) |= 2u;
      while (1)
      {
        v29 = *v4;
        v30 = *(_QWORD *)&v3[v29];
        v31 = v30 + 1;
        if (v30 == -1 || v31 > *(_QWORD *)&v3[*v5])
          break;
        v32 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v30);
        *(_QWORD *)&v3[v29] = v31;
        v20 |= (unint64_t)(v32 & 0x7F) << v27;
        if ((v32 & 0x80) == 0)
        {
          v26 = &OBJC_IVAR___GEOPDSUserActionMetadataElement__uiTarget;
          goto LABEL_42;
        }
        v27 += 7;
        v25 = v28++ > 8;
        if (v25)
        {
          LODWORD(v20) = 0;
          v26 = &OBJC_IVAR___GEOPDSUserActionMetadataElement__uiTarget;
          goto LABEL_44;
        }
      }
      v26 = &OBJC_IVAR___GEOPDSUserActionMetadataElement__uiTarget;
LABEL_41:
      v3[*v6] = 1;
      goto LABEL_42;
    }
LABEL_49:
    v35 = v3[*v6] == 0;
  }
  else
  {
LABEL_50:
    v35 = 0;
  }
  objc_sync_exit(v3);

  return v35;
}

void sub_188C8CF50(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188C8D318(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLPRDefinedPlateConditionReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  char v7;
  uint64_t v8;
  int v9;
  unsigned int v10;
  unsigned int v11;
  _BOOL4 v12;
  int v13;
  int *v14;
  int v15;
  int *v16;
  int *v17;
  int *v18;
  char v19;
  unsigned int v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  int v26;
  unint64_t v28;
  BOOL v29;
  int *v30;
  int v31;
  int v32;
  BOOL v33;
  int *v34;
  void *v35;
  GEOLPRPlateMatchCondition *v36;
  char v37;
  int v38;
  char v39;
  void *v40;
  int v42;
  char v43;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1)
      + (*(_BYTE *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1);
  while (1)
  {
    v11 = a3[v8];
    if (v11 >= 0xFFFFFFFE)
    {
      v9 = 1;
      goto LABEL_9;
    }
    if (v11 != -3)
      break;
    v7 = 1;
LABEL_9:
    ++v8;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  v12 = v10 > 1;
  v13 = v9 | v12;
  if ((((v9 | v12) | v7) & 1) != 0)
    v14 = 0;
  else
    v14 = a3;
  v15 = (v14 == 0) | v13;
  v16 = (int *)MEMORY[0x1E0D82BF0];
  v17 = (int *)MEMORY[0x1E0D82BC8];
  v43 = (v8 != 0) | v13;
  v18 = (int *)MEMORY[0x1E0D82BB8];
  while (2)
  {
    if (*(_QWORD *)(v3 + *v16) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v17))
      goto LABEL_58;
    v19 = 0;
    v20 = 0;
    v21 = 0;
    while (1)
    {
      v22 = *v16;
      v23 = *(_QWORD *)(v3 + v22);
      if (v23 == -1 || v23 >= *(_QWORD *)(v3 + *v6))
        break;
      v24 = *(_BYTE *)(*(_QWORD *)(v3 + *v18) + v23);
      *(_QWORD *)(v3 + v22) = v23 + 1;
      v21 |= (unint64_t)(v24 & 0x7F) << v19;
      if ((v24 & 0x80) == 0)
        goto LABEL_24;
      v19 += 7;
      if (v20++ >= 9)
      {
        v21 = 0;
        v26 = *(unsigned __int8 *)(v3 + *v17);
        goto LABEL_26;
      }
    }
    *(_BYTE *)(v3 + *v17) = 1;
LABEL_24:
    v26 = *(unsigned __int8 *)(v3 + *v17);
    if (*(_BYTE *)(v3 + *v17))
      v21 = 0;
LABEL_26:
    if (v26 || (v21 & 7) == 4)
    {
LABEL_58:
      if ((v13 & 1) != 0)
      {
        v37 = 1;
        goto LABEL_66;
      }
      if (v14)
      {
        while (1)
        {
          v38 = *v14++;
          v39 = 4;
          switch(v38)
          {
            case 0:
              goto LABEL_67;
            case 1:
              goto LABEL_64;
            case 2:
              v39 = 2;
              goto LABEL_64;
            case 3:
              v39 = 1;
LABEL_64:
              *(_BYTE *)(a1 + 52) |= v39;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_67;
    }
    v28 = v21 >> 3;
    v29 = v13;
    if ((v15 & 1) == 0)
    {
      v30 = v14;
      do
      {
        v32 = *v30++;
        v31 = v32;
        v29 = v32 != 0;
        if (v32)
          v33 = v31 == (_DWORD)v28;
        else
          v33 = 1;
      }
      while (!v33);
    }
    if ((_DWORD)v28 != 3)
    {
      if ((_DWORD)v28 == 2)
      {
        if (!v29 || (*(_BYTE *)(a1 + 52) & 2) != 0)
          goto LABEL_56;
        v42 = v15;
        v34 = v17;
        PBReaderReadString();
        v35 = (void *)objc_claimAutoreleasedReturnValue();
        if (v35)
          -[GEOLPRDefinedPlateCondition _addNoFlagsPowerTypeKey:](a1, v35);
LABEL_53:

        v17 = v34;
        v15 = v42;
      }
      else if ((_DWORD)v28 == 1)
      {
        if (v29 && (*(_BYTE *)(a1 + 52) & 4) == 0)
        {
          v42 = v15;
          v34 = v17;
          PBReaderReadString();
          v35 = (void *)objc_claimAutoreleasedReturnValue();
          if (v35)
            -[GEOLPRDefinedPlateCondition _addNoFlagsVehicleTypeKey:](a1, v35);
          goto LABEL_53;
        }
LABEL_56:
        if ((PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_65:
          v37 = 0;
          goto LABEL_66;
        }
      }
      else if (!PBReaderSkipValueWithTag())
      {
        goto LABEL_65;
      }
LABEL_57:
      if ((v43 & 1) == 0)
        goto LABEL_58;
      continue;
    }
    break;
  }
  if (!v29 || (*(_BYTE *)(a1 + 52) & 1) != 0)
    goto LABEL_56;
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_65;
  v36 = objc_alloc_init(GEOLPRPlateMatchCondition);
  if (GEOLPRPlateMatchConditionReadAllFrom(v36, (void *)v3))
  {
    PBReaderRecallMark();
    -[GEOLPRDefinedPlateCondition _addNoFlagsPlateMatchCondition:](a1, v36);

    v17 = (int *)MEMORY[0x1E0D82BC8];
    goto LABEL_57;
  }

  v37 = 0;
  v17 = (int *)MEMORY[0x1E0D82BC8];
LABEL_66:
  *(_BYTE *)(a1 + 52) |= 4u;
  *(_BYTE *)(a1 + 52) |= 2u;
  *(_BYTE *)(a1 + 52) |= 1u;
  if ((v37 & 1) != 0)
  {
LABEL_67:
    v3 = *(_BYTE *)(v3 + *v17) == 0;
    if ((v13 & 1) == 0)
      return v3;
    goto LABEL_68;
  }
  v3 = 0;
  if ((v13 & 1) != 0)
  {
LABEL_68:
    v40 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_188C8DA94(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188C8DDC8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188C8E7C4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOLPRDefinedPlateConditionCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _BYTE v10[128];
  uint64_t v11;

  v11 = *MEMORY[0x1E0C80C00];
  v6 = 0u;
  v7 = 0u;
  v8 = 0u;
  v9 = 0u;
  v1 = *(id *)(a1 + 16);
  v2 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
  if (v2)
  {
    v3 = v2;
    v4 = *(_QWORD *)v7;
    do
    {
      v5 = 0;
      do
      {
        if (*(_QWORD *)v7 != v4)
          objc_enumerationMutation(v1);
        objc_msgSend(*(id *)(*((_QWORD *)&v6 + 1) + 8 * v5++), "readAll:", 1, (_QWORD)v6);
      }
      while (v3 != v5);
      v3 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
    }
    while (v3);
  }

}

unint64_t GEOLPRDefinedPlateConditionReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOLPRDefinedPlateConditionReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOLPRDefinedPlateConditionReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOLPRDefinedPlateConditionReadAllFrom_initialTag;
  Specified = GEOLPRDefinedPlateConditionReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOLPRDefinedPlateConditionCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_188C8EA50(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLPRDefinedPlateConditionReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOLPRDefinedPlateConditionReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188C8EAB0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLPRDefinedPlateConditionIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  int v13;
  int v14;
  unint64_t v16;
  _BOOL8 v17;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        if (v10 == -1 || v10 >= *(_QWORD *)&a1[*v3])
          break;
        v11 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v13 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v14 = v8 & 7;
      if (v13 || v14 == 4)
        break;
      v16 = v8 >> 3;
      if ((v8 >> 3) == 3)
      {
        if (v14 != 2 || !PBReaderPlaceMark() || !GEOLPRPlateMatchConditionIsValid(a1))
        {
LABEL_31:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else
      {
        if ((_DWORD)v16 == 2)
        {
          if (v14 != 2)
            goto LABEL_31;
        }
        else if ((_DWORD)v16 == 1 && v14 != 2)
        {
          goto LABEL_31;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_31;
      }
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

BOOL GEOLPRPlateMatchConditionIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  int v13;
  int v14;
  _BOOL8 v16;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        if (v10 == -1 || v10 >= *(_QWORD *)&a1[*v3])
          break;
        v11 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v13 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v14 = v8 & 7;
      if (v13 || v14 == 4)
        break;
      if ((v8 >> 3) == 1)
      {
        if (v14 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_26:
          v16 = 0;
          goto LABEL_25;
        }
      }
      else if (!PBReaderSkipValueWithTag())
      {
        goto LABEL_26;
      }
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v16 = a1[*v4] == 0;
LABEL_25:
  PBReaderRecallMark();
  return v16;
}

void sub_188C8F19C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLPRDefinedPlateConditionIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v2 = (*(_BYTE *)(a1 + 52) & 0xF) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return v2;
}

void sub_188C8F710(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188C8FC64(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLPRDefinedPlateTypeReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  _BOOL4 v15;
  int *v16;
  BOOL v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  int v28;
  unint64_t v30;
  _BOOL4 v31;
  int *v32;
  int v33;
  int v34;
  BOOL v35;
  GEOLPRDefinedPlateCondition *v36;
  uint64_t v37;
  void *v38;
  char v39;
  char v40;
  int v41;
  int v42;
  void *v43;
  BOOL v45;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 36);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 32));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int8 *)(a1 + 44) >> 1) & 1) + (*(_BYTE *)(a1 + 44) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v9])
    {
      case -3:
        v8 = 1;
        goto LABEL_6;
      case -2:
        v12 = v7;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v10 & 1 | v11;
        v15 = v14 != 0;
        if ((v14 != 0) | v8 & 1)
          v16 = 0;
        else
          v16 = a3;
        v17 = v16 == 0;
        if (v14)
          v17 = 1;
        v45 = v17;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_6:
        v12 = v7;
        v13 = v10;
LABEL_8:
        ++v9;
        v7 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v19))
      goto LABEL_58;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      if (v25 == -1 || v25 >= *(_QWORD *)(v3 + *v6))
        break;
      v26 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v25 + 1;
      v23 |= (unint64_t)(v26 & 0x7F) << v21;
      if ((v26 & 0x80) == 0)
        goto LABEL_25;
      v21 += 7;
      if (v22++ >= 9)
      {
        v23 = 0;
        v28 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_25:
    v28 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_27:
    if (v28 || (v23 & 7) == 4)
    {
LABEL_58:
      if (v15)
      {
        v40 = 1;
        goto LABEL_68;
      }
      if (v16)
      {
        do
        {
          while (1)
          {
            v42 = *v16++;
            v41 = v42;
            if (v42 != 1 && v41 != 2)
              break;
            *(_BYTE *)(a1 + 44) |= v41;
          }
        }
        while (v41);
      }
      goto LABEL_69;
    }
    v30 = v23 >> 3;
    v31 = v15;
    if (!v45)
    {
      v32 = v16;
      do
      {
        v34 = *v32++;
        v33 = v34;
        v31 = v34 != 0;
        if (v34)
          v35 = v33 == (_DWORD)v30;
        else
          v35 = 1;
      }
      while (!v35);
    }
    if ((_DWORD)v30 != 2)
      break;
    if (!v31)
      goto LABEL_50;
    if ((*(_BYTE *)(a1 + 44) & 2) != 0)
    {
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_67:
        v40 = 0;
        goto LABEL_68;
      }
      v9 += *(unsigned __int8 *)(a1 + 44) << 30 >> 31;
    }
    else
    {
      PBReaderReadString();
      v37 = objc_claimAutoreleasedReturnValue();
      v38 = *(void **)(a1 + 24);
      *(_QWORD *)(a1 + 24) = v37;

      --v9;
    }
LABEL_51:
    if (v9)
      v39 = 1;
    else
      v39 = v15;
    if ((v39 & 1) == 0)
      goto LABEL_58;
  }
  if ((_DWORD)v30 != 1)
  {
    if (!PBReaderSkipValueWithTag())
      goto LABEL_67;
    goto LABEL_51;
  }
  if (!v31 || (*(_BYTE *)(a1 + 44) & 1) != 0)
  {
LABEL_50:
    if ((PBReaderSkipValueWithTag() & 1) == 0)
      goto LABEL_67;
    goto LABEL_51;
  }
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_67;
  v36 = objc_alloc_init(GEOLPRDefinedPlateCondition);
  if (GEOLPRDefinedPlateConditionReadAllFrom((uint64_t)v36, (void *)v3, v7 & 1))
  {
    PBReaderRecallMark();
    -[GEOLPRDefinedPlateType _addNoFlagsConditions:](a1, v36);

    v19 = (int *)MEMORY[0x1E0D82BC8];
    goto LABEL_51;
  }

  v40 = 0;
  v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_68:
  *(_BYTE *)(a1 + 44) |= 1u;
  *(_BYTE *)(a1 + 44) |= 2u;
  if ((v40 & 1) != 0)
  {
LABEL_69:
    v3 = *(_BYTE *)(v3 + *v19) == 0;
    if (!v15)
      return v3;
    goto LABEL_70;
  }
  v3 = 0;
  if (v15)
  {
LABEL_70:
    v43 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_188C903B8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188C90988(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOLPRDefinedPlateTypeCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _BYTE v10[128];
  uint64_t v11;

  v11 = *MEMORY[0x1E0C80C00];
  v6 = 0u;
  v7 = 0u;
  v8 = 0u;
  v9 = 0u;
  v1 = *(id *)(a1 + 16);
  v2 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
  if (v2)
  {
    v3 = v2;
    v4 = *(_QWORD *)v7;
    do
    {
      v5 = 0;
      do
      {
        if (*(_QWORD *)v7 != v4)
          objc_enumerationMutation(v1);
        objc_msgSend(*(id *)(*((_QWORD *)&v6 + 1) + 8 * v5++), "readAll:", 1, (_QWORD)v6);
      }
      while (v3 != v5);
      v3 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
    }
    while (v3);
  }

}

unint64_t GEOLPRDefinedPlateTypeReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 36))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOLPRDefinedPlateTypeReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 40));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 32) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 36) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOLPRDefinedPlateTypeReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOLPRDefinedPlateTypeReadAllFrom_initialTag;
  Specified = GEOLPRDefinedPlateTypeReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOLPRDefinedPlateTypeCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return Specified;
}

void sub_188C90C14(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLPRDefinedPlateTypeReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOLPRDefinedPlateTypeReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188C90C74(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLPRDefinedPlateTypeIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  int v13;
  int v14;
  _BOOL8 v16;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_27;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        if (v10 == -1 || v10 >= *(_QWORD *)&a1[*v3])
          break;
        v11 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v13 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v14 = v8 & 7;
      if (v13 || v14 == 4)
        goto LABEL_27;
      if ((v8 >> 3) == 2)
        break;
      if ((v8 >> 3) != 1)
        goto LABEL_25;
      if (v14 != 2 || !PBReaderPlaceMark() || !GEOLPRDefinedPlateConditionIsValid(a1))
      {
LABEL_28:
        PBReaderRecallMark();
        return 0;
      }
      PBReaderRecallMark();
LABEL_26:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_27;
    }
    if (v14 != 2)
      goto LABEL_28;
LABEL_25:
    if ((PBReaderSkipValueWithTag() & 1) == 0)
      goto LABEL_28;
    goto LABEL_26;
  }
LABEL_27:
  v16 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v16;
}

void sub_188C91088(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLPRDefinedPlateTypeIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  v2 = (*(_BYTE *)(a1 + 44) & 7) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return v2;
}

void sub_188C9142C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188C91828(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLPRLPRConvertRuleReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  _BOOL4 v14;
  char v15;
  int *v16;
  GEOLPRLPRMapRule *v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  BOOL v27;
  int v28;
  unint64_t v30;
  BOOL v31;
  int *v32;
  int v33;
  int v34;
  BOOL v35;
  int v36;
  char v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  char v43;
  unsigned int v44;
  uint64_t v45;
  unint64_t v46;
  char v47;
  char v48;
  uint64_t v49;
  char v50;
  int v51;
  char v52;
  void *v53;
  int v55;
  char v56;
  char v57;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int8 *)(a1 + 60) >> 4) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 2) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v7])
    {
      case -3:
        v8 = 1;
        goto LABEL_6;
      case -2:
        v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v11 > 1;
        v15 = v10 | v14;
        if ((((v10 | v14) | v8) & 1) != 0)
          v16 = 0;
        else
          v16 = a3;
        LODWORD(v17) = v10 | v14;
        v57 = (v16 == 0) | v15;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v56 = (v7 != 0) | v15;
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_6:
        v12 = v9;
        v13 = v10;
LABEL_8:
        ++v7;
        v9 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v19))
      goto LABEL_83;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      if (v25 == -1 || v25 >= *(_QWORD *)(v3 + *v6))
        break;
      v26 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v25 + 1;
      v23 |= (unint64_t)(v26 & 0x7F) << v21;
      if ((v26 & 0x80) == 0)
        goto LABEL_23;
      v21 += 7;
      v27 = v22++ >= 9;
      if (v27)
      {
        v23 = 0;
        v28 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_25;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_23:
    v28 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_25:
    if (v28 || (v23 & 7) == 4)
    {
LABEL_83:
      if ((v17 & 1) != 0)
      {
        v50 = 1;
        goto LABEL_94;
      }
      if (v16)
      {
        while (1)
        {
          v51 = *v16++;
          v52 = 16;
          switch(v51)
          {
            case 0:
              goto LABEL_95;
            case 1:
              goto LABEL_89;
            case 2:
              v52 = 8;
              goto LABEL_89;
            case 3:
              v52 = 4;
LABEL_89:
              *(_BYTE *)(a1 + 60) |= v52;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_95;
    }
    v30 = v23 >> 3;
    v31 = (char)v17;
    if ((v57 & 1) == 0)
    {
      v32 = v16;
      do
      {
        v34 = *v32++;
        v33 = v34;
        v31 = v34 != 0;
        if (v34)
          v35 = v33 == (_DWORD)v30;
        else
          v35 = 1;
      }
      while (!v35);
    }
    switch((int)v30)
    {
      case 1:
        if (!v31 || (*(_BYTE *)(a1 + 60) & 0x10) != 0)
          goto LABEL_71;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_91;
        v55 = (int)v17;
        v17 = objc_alloc_init(GEOLPRLPRPickupRule);
        if (!GEOLPRLPRPickupRuleReadAllFrom((uint64_t)v17, (void *)v3, v9 & 1))
          goto LABEL_92;
        PBReaderRecallMark();
        -[GEOLPRLPRConvertRule _addNoFlagsPickupRule:](a1, v17);
        goto LABEL_54;
      case 2:
        if (!v31 || (*(_BYTE *)(a1 + 60) & 8) != 0)
          goto LABEL_71;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_91;
        v55 = (int)v17;
        v17 = objc_alloc_init(GEOLPRLPRMapRule);
        if (!GEOLPRLPRMapRuleReadAllFrom((uint64_t)v17, (void *)v3, v9 & 1))
          goto LABEL_92;
        PBReaderRecallMark();
        -[GEOLPRLPRConvertRule _addNoFlagsMapRule:](a1, v17);
        goto LABEL_54;
      case 3:
        if (!v31 || (*(_BYTE *)(a1 + 60) & 4) != 0)
          goto LABEL_71;
        if ((PBReaderPlaceMark() & 1) == 0)
        {
LABEL_91:
          v50 = 0;
          goto LABEL_93;
        }
        v55 = (int)v17;
        v17 = objc_alloc_init(GEOLPRLPRFillRule);
        if (GEOLPRLPRFillRuleReadAllFrom((uint64_t)v17, (void *)v3, v9 & 1))
        {
          PBReaderRecallMark();
          -[GEOLPRLPRConvertRule _addNoFlagsFillRule:](a1, v17);
LABEL_54:

          LODWORD(v17) = v55;
          v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_82:
          if ((v56 & 1) == 0)
            goto LABEL_83;
          continue;
        }
LABEL_92:

        v50 = 0;
        LOBYTE(v17) = v55;
LABEL_93:
        v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_94:
        *(_BYTE *)(a1 + 60) |= 0x10u;
        *(_BYTE *)(a1 + 60) |= 8u;
        *(_BYTE *)(a1 + 60) |= 4u;
        if ((v50 & 1) != 0)
        {
LABEL_95:
          v3 = *(_BYTE *)(v3 + *v19) == 0;
          if ((v17 & 1) != 0)
            goto LABEL_96;
        }
        else
        {
          v3 = 0;
          if ((v17 & 1) != 0)
          {
LABEL_96:
            v53 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = 0;

          }
        }
        return v3;
      case 4:
        if ((v8 & 1) == 0)
          goto LABEL_71;
        v37 = 0;
        v38 = 0;
        v39 = 0;
        *(_BYTE *)(a1 + 60) |= 2u;
        while (2)
        {
          v40 = *v18;
          v41 = *(_QWORD *)(v3 + v40);
          if (v41 == -1 || v41 >= *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v19) = 1;
          }
          else
          {
            v42 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v41);
            *(_QWORD *)(v3 + v40) = v41 + 1;
            v39 |= (unint64_t)(v42 & 0x7F) << v37;
            if (v42 < 0)
            {
              v37 += 7;
              v27 = v38++ >= 9;
              if (v27)
              {
                LODWORD(v39) = 0;
                goto LABEL_76;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v19))
          LODWORD(v39) = 0;
LABEL_76:
        v49 = 56;
        goto LABEL_81;
      case 5:
        if ((v8 & 1) != 0)
        {
          v43 = 0;
          v44 = 0;
          v39 = 0;
          *(_BYTE *)(a1 + 60) |= 1u;
          while (1)
          {
            v45 = *v18;
            v46 = *(_QWORD *)(v3 + v45);
            if (v46 == -1 || v46 >= *(_QWORD *)(v3 + *v6))
              break;
            v47 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v46);
            *(_QWORD *)(v3 + v45) = v46 + 1;
            v39 |= (unint64_t)(v47 & 0x7F) << v43;
            if ((v47 & 0x80) == 0)
              goto LABEL_78;
            v43 += 7;
            v27 = v44++ >= 9;
            if (v27)
            {
              LODWORD(v39) = 0;
              goto LABEL_80;
            }
          }
          *(_BYTE *)(v3 + *v19) = 1;
LABEL_78:
          if (*(_BYTE *)(v3 + *v19))
            LODWORD(v39) = 0;
LABEL_80:
          v49 = 52;
LABEL_81:
          *(_DWORD *)(a1 + v49) = v39;
        }
        else
        {
LABEL_71:
          v48 = PBReaderSkipValueWithTag();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if ((v48 & 1) == 0)
          {
LABEL_90:
            v50 = 0;
            goto LABEL_94;
          }
        }
        goto LABEL_82;
      default:
        v36 = PBReaderSkipValueWithTag();
        v19 = (int *)MEMORY[0x1E0D82BC8];
        if (!v36)
          goto LABEL_90;
        goto LABEL_82;
    }
  }
}

void sub_188C921B8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188C924EC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188C93308(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOLPRLPRConvertRuleCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  _BYTE v29[128];
  _BYTE v30[128];
  _BYTE v31[128];
  uint64_t v32;

  v32 = *MEMORY[0x1E0C80C00];
  v25 = 0u;
  v26 = 0u;
  v27 = 0u;
  v28 = 0u;
  v2 = a1[4];
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v25, v31, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v26;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v26 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v25 + 1) + 8 * v6++), "readAll:", 1);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v25, v31, 16);
    }
    while (v4);
  }

  v23 = 0u;
  v24 = 0u;
  v21 = 0u;
  v22 = 0u;
  v7 = a1[3];
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v21, v30, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v22;
    do
    {
      v11 = 0;
      do
      {
        if (*(_QWORD *)v22 != v10)
          objc_enumerationMutation(v7);
        objc_msgSend(*(id *)(*((_QWORD *)&v21 + 1) + 8 * v11++), "readAll:", 1);
      }
      while (v9 != v11);
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v21, v30, 16);
    }
    while (v9);
  }

  v19 = 0u;
  v20 = 0u;
  v17 = 0u;
  v18 = 0u;
  v12 = a1[2];
  v13 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v17, v29, 16);
  if (v13)
  {
    v14 = v13;
    v15 = *(_QWORD *)v18;
    do
    {
      v16 = 0;
      do
      {
        if (*(_QWORD *)v18 != v15)
          objc_enumerationMutation(v12);
        objc_msgSend(*(id *)(*((_QWORD *)&v17 + 1) + 8 * v16++), "readAll:", 1, (_QWORD)v17);
      }
      while (v14 != v16);
      v14 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v17, v29, 16);
    }
    while (v14);
  }

}

unint64_t GEOLPRLPRConvertRuleReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOLPRLPRConvertRuleReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOLPRLPRConvertRuleReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOLPRLPRConvertRuleReadAllFrom_initialTag;
  Specified = GEOLPRLPRConvertRuleReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOLPRLPRConvertRuleCallReadAllRecursiveWithoutSynchronized((id *)a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_188C936C8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLPRLPRConvertRuleReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOLPRLPRConvertRuleReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188C93728(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLPRLPRConvertRuleIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  int v13;
  int v14;
  unsigned int v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int v20;
  BOOL v21;
  unsigned int v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  int v26;
  _BOOL8 v27;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        if (v10 == -1 || v10 >= *(_QWORD *)&a1[*v3])
          break;
        v11 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v13 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v14 = v8 & 7;
      if (v13 || v14 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v14 == 2 && PBReaderPlaceMark() && GEOLPRLPRPickupRuleIsValid(a1))
            goto LABEL_32;
          goto LABEL_53;
        case 2u:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEOLPRLPRMapRuleIsValid(a1))
            goto LABEL_53;
          goto LABEL_32;
        case 3u:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEOLPRLPRFillRuleIsValid(a1))
            goto LABEL_53;
LABEL_32:
          PBReaderRecallMark();
          continue;
        case 4u:
          if ((v8 & 7) != 0)
            goto LABEL_53;
          v16 = 0;
          while (1)
          {
            v17 = *v2;
            v18 = *(_QWORD *)&a1[v17];
            if (v18 == -1 || v18 >= *(_QWORD *)&a1[*v3])
              goto LABEL_49;
            v19 = v18 + 1;
            v20 = *(char *)(*(_QWORD *)&a1[*v5] + v18);
            *(_QWORD *)&a1[v17] = v19;
            if (v20 < 0)
            {
              v21 = v16++ > 8;
              if (!v21)
                continue;
            }
            goto LABEL_50;
          }
        case 5u:
          if ((v8 & 7) != 0)
            goto LABEL_53;
          v22 = 0;
          break;
        default:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_53:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v23 = *v2;
        v24 = *(_QWORD *)&a1[v23];
        if (v24 == -1 || v24 >= *(_QWORD *)&a1[*v3])
          break;
        v25 = v24 + 1;
        v26 = *(char *)(*(_QWORD *)&a1[*v5] + v24);
        *(_QWORD *)&a1[v23] = v25;
        if (v26 < 0)
        {
          v21 = v22++ > 8;
          if (!v21)
            continue;
        }
        goto LABEL_50;
      }
LABEL_49:
      a1[*v4] = 1;
LABEL_50:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v27 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v27;
}

BOOL GEOLPRLPRPickupRuleIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  BOOL v12;
  int v13;
  int v14;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int v20;
  unsigned int v21;
  unsigned int v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  int v26;
  _BOOL8 v27;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_50;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        if (v10 == -1 || v10 >= *(_QWORD *)&a1[*v3])
          break;
        v11 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        v12 = v7++ >= 9;
        if (v12)
        {
          v8 = 0;
          v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v13 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v14 = v8 & 7;
      if (v13 || v14 == 4)
        goto LABEL_50;
      v16 = v8 >> 3;
      if ((v8 >> 3) == 200)
      {
        if (v14 != 2 || !PBReaderPlaceMark() || !GEOLPRLicensePlateStructureIsValid(a1))
        {
LABEL_52:
          PBReaderRecallMark();
          return 0;
        }
        goto LABEL_35;
      }
      if ((_DWORD)v16 == 2)
        break;
      if ((_DWORD)v16 == 1)
      {
        if (v14 == 2)
        {
          if (!PBReaderPlaceMark())
            goto LABEL_52;
LABEL_39:
          while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
          {
            v22 = a1[*v4];
            if (a1[*v4])
              break;
            while (1)
            {
              v23 = *v2;
              v24 = *(_QWORD *)&a1[v23];
              if (v24 == -1 || v24 >= *(_QWORD *)&a1[*v3])
                break;
              v25 = v24 + 1;
              v26 = *(char *)(*(_QWORD *)&a1[*v5] + v24);
              *(_QWORD *)&a1[v23] = v25;
              if (v26 < 0)
              {
                v12 = v22++ >= 9;
                if (!v12)
                  continue;
              }
              goto LABEL_39;
            }
            a1[*v4] = 1;
          }
LABEL_35:
          PBReaderRecallMark();
          goto LABEL_49;
        }
        if ((v8 & 7) != 0)
          goto LABEL_52;
        while (1)
        {
          v17 = *v2;
          v18 = *(_QWORD *)&a1[v17];
          if (v18 == -1 || v18 >= *(_QWORD *)&a1[*v3])
            break;
          v19 = v18 + 1;
          v20 = *(char *)(*(_QWORD *)&a1[*v5] + v18);
          *(_QWORD *)&a1[v17] = v19;
          if (v20 < 0)
          {
            v21 = v14++;
            if (v21 <= 8)
              continue;
          }
          goto LABEL_49;
        }
        a1[*v4] = 1;
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_52;
      }
LABEL_49:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_50;
    }
    if (v14 != 2 || !PBReaderPlaceMark() || !GEOLPRTargetCharIsValid(a1))
      goto LABEL_52;
    goto LABEL_35;
  }
LABEL_50:
  v27 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v27;
}

BOOL GEOLPRLPRMapRuleIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  BOOL v12;
  int v13;
  int v14;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int v20;
  unsigned int v21;
  unsigned int v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  int v26;
  _BOOL8 v27;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_56;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        if (v10 == -1 || v10 >= *(_QWORD *)&a1[*v3])
          break;
        v11 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        v12 = v7++ >= 9;
        if (v12)
        {
          v8 = 0;
          v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v13 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v14 = v8 & 7;
      if (v13 || v14 == 4)
        goto LABEL_56;
      v16 = v8 >> 3;
      if ((int)(v8 >> 3) > 2)
        break;
      if ((_DWORD)v16 != 1)
      {
        if ((_DWORD)v16 == 2)
        {
          if (v14 != 2 || !PBReaderPlaceMark() || !GEOLPRTargetCharIsValid(a1))
            goto LABEL_57;
          goto LABEL_41;
        }
        goto LABEL_42;
      }
      if (v14 == 2)
      {
        if (!PBReaderPlaceMark())
          goto LABEL_57;
LABEL_45:
        while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
        {
          v22 = a1[*v4];
          if (a1[*v4])
            break;
          while (1)
          {
            v23 = *v2;
            v24 = *(_QWORD *)&a1[v23];
            if (v24 == -1 || v24 >= *(_QWORD *)&a1[*v3])
              break;
            v25 = v24 + 1;
            v26 = *(char *)(*(_QWORD *)&a1[*v5] + v24);
            *(_QWORD *)&a1[v23] = v25;
            if (v26 < 0)
            {
              v12 = v22++ >= 9;
              if (!v12)
                continue;
            }
            goto LABEL_45;
          }
          a1[*v4] = 1;
        }
LABEL_41:
        PBReaderRecallMark();
        goto LABEL_55;
      }
      if ((v8 & 7) != 0)
        goto LABEL_57;
      while (1)
      {
        v17 = *v2;
        v18 = *(_QWORD *)&a1[v17];
        if (v18 == -1 || v18 >= *(_QWORD *)&a1[*v3])
          break;
        v19 = v18 + 1;
        v20 = *(char *)(*(_QWORD *)&a1[*v5] + v18);
        *(_QWORD *)&a1[v17] = v19;
        if (v20 < 0)
        {
          v21 = v14++;
          if (v21 <= 8)
            continue;
        }
        goto LABEL_55;
      }
      a1[*v4] = 1;
LABEL_55:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_56;
    }
    if ((_DWORD)v16 == 3)
    {
      if (v14 != 2 || !PBReaderPlaceMark() || !GEOLPRValueMappingIsValid(a1))
      {
LABEL_57:
        PBReaderRecallMark();
        return 0;
      }
      goto LABEL_41;
    }
    if ((_DWORD)v16 == 200)
    {
      if (v14 != 2 || !PBReaderPlaceMark() || !GEOLPRLicensePlateStructureIsValid(a1))
        goto LABEL_57;
      goto LABEL_41;
    }
LABEL_42:
    if ((PBReaderSkipValueWithTag() & 1) == 0)
      goto LABEL_57;
    goto LABEL_55;
  }
LABEL_56:
  v27 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v27;
}

BOOL GEOLPRLPRFillRuleIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  BOOL v12;
  int v13;
  int v14;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int v19;
  unsigned int v20;
  unsigned int v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  int v25;
  unsigned int v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  int v31;
  _BOOL8 v32;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (!a1[*v4])
    {
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        if (v10 == -1 || v10 >= *(_QWORD *)&a1[*v3])
          break;
        v11 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        v12 = v7++ >= 9;
        if (v12)
        {
          v8 = 0;
          v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v13 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v14 = v8 & 7;
      if (v13 || v14 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v14 == 2)
          {
            if (!PBReaderPlaceMark())
              goto LABEL_59;
            while (1)
            {
LABEL_49:
              if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
                goto LABEL_27;
              v27 = a1[*v4];
              if (a1[*v4])
                goto LABEL_27;
              while (1)
              {
                v28 = *v2;
                v29 = *(_QWORD *)&a1[v28];
                if (v29 == -1 || v29 >= *(_QWORD *)&a1[*v3])
                  break;
                v30 = v29 + 1;
                v31 = *(char *)(*(_QWORD *)&a1[*v5] + v29);
                *(_QWORD *)&a1[v28] = v30;
                if (v31 < 0)
                {
                  v12 = v27++ >= 9;
                  if (!v12)
                    continue;
                }
                goto LABEL_49;
              }
              a1[*v4] = 1;
            }
          }
          if ((v8 & 7) != 0)
            goto LABEL_59;
          while (1)
          {
            v16 = *v2;
            v17 = *(_QWORD *)&a1[v16];
            if (v17 == -1 || v17 >= *(_QWORD *)&a1[*v3])
              goto LABEL_45;
            v18 = v17 + 1;
            v19 = *(char *)(*(_QWORD *)&a1[*v5] + v17);
            *(_QWORD *)&a1[v16] = v18;
            if (v19 < 0)
            {
              v20 = v14++;
              if (v20 <= 8)
                continue;
            }
            goto LABEL_46;
          }
        case 2u:
        case 3u:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEOLPRTargetCharIsValid(a1))
            goto LABEL_59;
          goto LABEL_27;
        case 4u:
          if ((v8 & 7) != 0)
            goto LABEL_59;
          v21 = 0;
          while (1)
          {
            v22 = *v2;
            v23 = *(_QWORD *)&a1[v22];
            if (v23 == -1 || v23 >= *(_QWORD *)&a1[*v3])
              break;
            v24 = v23 + 1;
            v25 = *(char *)(*(_QWORD *)&a1[*v5] + v23);
            *(_QWORD *)&a1[v22] = v24;
            if (v25 < 0 && v21++ <= 8)
              continue;
            goto LABEL_46;
          }
LABEL_45:
          a1[*v4] = 1;
          goto LABEL_46;
        default:
          if ((v8 >> 3) == 200)
          {
            if (v14 != 2 || !PBReaderPlaceMark() || !GEOLPRLicensePlateStructureIsValid(a1))
            {
LABEL_59:
              PBReaderRecallMark();
              return 0;
            }
LABEL_27:
            PBReaderRecallMark();
          }
          else if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
            goto LABEL_59;
          }
LABEL_46:
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_58;
          break;
      }
    }
  }
LABEL_58:
  v32 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v32;
}

void sub_188C9473C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOLPRLPRConvertRuleIsDirty(uint64_t a1)
{
  char v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  _BYTE v20[128];
  _BYTE v21[128];
  uint64_t v22;

  v22 = *MEMORY[0x1E0C80C00];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v2 = *(_BYTE *)(a1 + 60);
  if ((v2 & 0x3C) == 0)
  {
    if ((*(_BYTE *)(a1 + 60) & 8) != 0)
    {
      v18 = 0u;
      v19 = 0u;
      v16 = 0u;
      v17 = 0u;
      v4 = *(id *)(a1 + 24);
      v5 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v16, v21, 16);
      if (v5)
      {
        v6 = v5;
        v7 = *(_QWORD *)v17;
LABEL_6:
        v8 = 0;
        while (1)
        {
          if (*(_QWORD *)v17 != v7)
            objc_enumerationMutation(v4);
          if ((GEOLPRLPRMapRuleIsDirty(*(os_unfair_lock_s **)(*((_QWORD *)&v16 + 1) + 8 * v8)) & 1) != 0)
            goto LABEL_24;
          if (v6 == ++v8)
          {
            v6 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v16, v21, 16);
            if (v6)
              goto LABEL_6;
            break;
          }
        }
      }

      v2 = *(_BYTE *)(a1 + 60);
    }
    if ((v2 & 4) == 0)
      return 0;
    v14 = 0u;
    v15 = 0u;
    v12 = 0u;
    v13 = 0u;
    v4 = *(id *)(a1 + 16);
    v3 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v12, v20, 16);
    if (!v3)
    {
LABEL_25:

      return v3;
    }
    v9 = *(_QWORD *)v13;
LABEL_17:
    v10 = 0;
    while (1)
    {
      if (*(_QWORD *)v13 != v9)
        objc_enumerationMutation(v4);
      if ((GEOLPRLPRFillRuleIsDirty(*(os_unfair_lock_s **)(*((_QWORD *)&v12 + 1) + 8 * v10)) & 1) != 0)
        break;
      if (v3 == ++v10)
      {
        v3 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v12, v20, 16);
        if (v3)
          goto LABEL_17;
        goto LABEL_25;
      }
    }
LABEL_24:
    v3 = 1;
    goto LABEL_25;
  }
  return 1;
}

os_unfair_lock_s *GEOLPRLPRConvertRuleIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOLPRLPRConvertRuleIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 12);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_188C94F2C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188C955E0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLPRLPRFillRuleReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  char v15;
  int *v16;
  int *v17;
  int *v18;
  int *v19;
  char v20;
  unsigned int v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  BOOL v26;
  int v27;
  int v28;
  unint64_t v30;
  BOOL v31;
  int *v32;
  int v33;
  int v34;
  BOOL v35;
  int *v36;
  char v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  uint64_t v43;
  void *v44;
  char v45;
  unsigned int v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  char v50;
  int v51;
  char v52;
  char v53;
  char v54;
  unsigned int v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  char v59;
  char v60;
  int v61;
  int v62;
  char v63;
  void *v64;
  GEOLPRTargetChar *v66;
  char v67;
  char v68;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 68);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 64));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = vaddv_s16((int16x4_t)(*(_QWORD *)&vshl_u16((uint16x4_t)(*(_QWORD *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 80)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFEFFFCFFFFFFFDLL) & 0xFF01FF01FF01FF01));
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v7])
    {
      case -3:
        v8 = 1;
        goto LABEL_6;
      case -2:
        v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v11 > 2;
        v15 = v10 | v14;
        if ((((v10 | v14) | v8) & 1) != 0)
          v16 = 0;
        else
          v16 = a3;
        v17 = (int *)MEMORY[0x1E0D82BF0];
        v18 = (int *)MEMORY[0x1E0D82BC8];
        if (*(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(v3 + *v6))
          goto LABEL_106;
        v68 = (v16 == 0) | v15;
        v19 = (int *)MEMORY[0x1E0D82BB8];
        v67 = v10 | v14;
        break;
      default:
        ++v11;
LABEL_6:
        v12 = v9;
        v13 = v10;
LABEL_8:
        ++v7;
        v9 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_BYTE *)(v3 + *v18))
      goto LABEL_106;
    v20 = 0;
    v21 = 0;
    v22 = 0;
    while (1)
    {
      v23 = *v17;
      v24 = *(_QWORD *)(v3 + v23);
      if (v24 == -1 || v24 >= *(_QWORD *)(v3 + *v6))
        break;
      v25 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v24);
      *(_QWORD *)(v3 + v23) = v24 + 1;
      v22 |= (unint64_t)(v25 & 0x7F) << v20;
      if ((v25 & 0x80) == 0)
        goto LABEL_23;
      v20 += 7;
      v26 = v21++ >= 9;
      if (v26)
      {
        v22 = 0;
        v27 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(_BYTE *)(v3 + *v18) = 1;
LABEL_23:
    v27 = *(unsigned __int8 *)(v3 + *v18);
    if (*(_BYTE *)(v3 + *v18))
      v22 = 0;
LABEL_25:
    v28 = v22 & 7;
    if (v27 || v28 == 4)
    {
LABEL_106:
      if ((v15 & 1) != 0)
      {
        v60 = 1;
        goto LABEL_108;
      }
      if (v16)
      {
        while (1)
        {
          v62 = *v16++;
          v61 = v62;
          v63 = 2;
          switch(v62)
          {
            case 0:
              goto LABEL_118;
            case 1:
              goto LABEL_117;
            case 2:
              v63 = 8;
              goto LABEL_117;
            case 3:
              v63 = 16;
              goto LABEL_117;
            default:
              if (v61 != 200)
                continue;
              v63 = 4;
LABEL_117:
              *(_BYTE *)(a1 + 80) |= v63;
              break;
          }
        }
      }
      goto LABEL_118;
    }
    v30 = v22 >> 3;
    v31 = v15;
    if ((v68 & 1) == 0)
    {
      v32 = v16;
      do
      {
        v34 = *v32++;
        v33 = v34;
        v31 = v34 != 0;
        if (v34)
          v35 = v33 == (_DWORD)v30;
        else
          v35 = 1;
      }
      while (!v35);
    }
    switch((int)v30)
    {
      case 1:
        if (!v31 || (*(_BYTE *)(a1 + 80) & 2) != 0)
          goto LABEL_79;
        if (v28 == 2)
        {
          if (!PBReaderPlaceMark())
            goto LABEL_123;
          while (1)
          {
            v36 = (int *)MEMORY[0x1E0D82BC8];
            if (*(_QWORD *)(v3 + *v17) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + (int)*MEMORY[0x1E0D82BC8]))
            {
              PBReaderRecallMark();
              v18 = (int *)MEMORY[0x1E0D82BC8];
              v15 = v67;
              goto LABEL_93;
            }
            v37 = 0;
            v38 = 0;
            v39 = 0;
            while (1)
            {
              v40 = *v17;
              v41 = *(_QWORD *)(v3 + v40);
              if (v41 == -1 || v41 >= *(_QWORD *)(v3 + *v6))
                break;
              v42 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v41);
              *(_QWORD *)(v3 + v40) = v41 + 1;
              v39 |= (unint64_t)(v42 & 0x7F) << v37;
              if (v42 < 0)
              {
                v37 += 7;
                v26 = v38++ >= 9;
                if (!v26)
                  continue;
              }
              goto LABEL_51;
            }
            *(_BYTE *)(v3 + *v36) = 1;
LABEL_51:
            PBRepeatedUInt32Add();
          }
        }
        v54 = 0;
        v55 = 0;
        v56 = 0;
        while (1)
        {
          v57 = *v17;
          v58 = *(_QWORD *)(v3 + v57);
          if (v58 == -1 || v58 >= *(_QWORD *)(v3 + *v6))
            break;
          v59 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v58);
          *(_QWORD *)(v3 + v57) = v58 + 1;
          v56 |= (unint64_t)(v59 & 0x7F) << v54;
          if (v59 < 0)
          {
            v54 += 7;
            v26 = v55++ >= 9;
            if (!v26)
              continue;
          }
          goto LABEL_105;
        }
        *(_BYTE *)(v3 + *v18) = 1;
LABEL_105:
        PBRepeatedUInt32Add();
        goto LABEL_92;
      case 2:
        if (!v31)
          goto LABEL_79;
        if ((*(_BYTE *)(a1 + 80) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_123;
          v53 = 16 * *(_BYTE *)(a1 + 80);
          goto LABEL_91;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_123;
        v66 = objc_alloc_init(GEOLPRTargetChar);
        if (!GEOLPRTargetCharReadAllFrom((uint64_t)v66, (void *)v3))
          goto LABEL_122;
        PBReaderRecallMark();
        v43 = 48;
        goto LABEL_68;
      case 3:
        if (!v31)
          goto LABEL_79;
        if ((*(_BYTE *)(a1 + 80) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_123;
          v53 = 8 * *(_BYTE *)(a1 + 80);
LABEL_91:
          v7 += v53 >> 7;
          goto LABEL_92;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_123;
        v66 = objc_alloc_init(GEOLPRTargetChar);
        if (GEOLPRTargetCharReadAllFrom((uint64_t)v66, (void *)v3))
        {
          PBReaderRecallMark();
          v43 = 56;
LABEL_68:
          v44 = *(void **)(a1 + v43);
          *(_QWORD *)(a1 + v43) = v66;

          --v7;
LABEL_92:
          v15 = v67;
          v18 = (int *)MEMORY[0x1E0D82BC8];
LABEL_93:
          if (!(v15 & 1 | (v7 != 0)) || *(_QWORD *)(v3 + *v17) >= *(_QWORD *)(v3 + *v6))
            goto LABEL_106;
          continue;
        }
LABEL_122:

LABEL_123:
        v60 = 0;
        v15 = v67;
        v18 = (int *)MEMORY[0x1E0D82BC8];
LABEL_108:
        *(_BYTE *)(a1 + 80) |= 2u;
        *(_BYTE *)(a1 + 80) |= 8u;
        *(_BYTE *)(a1 + 80) |= 0x10u;
        *(_BYTE *)(a1 + 80) |= 4u;
        if ((v60 & 1) != 0)
        {
LABEL_118:
          v3 = *(_BYTE *)(v3 + *v18) == 0;
          if ((v15 & 1) != 0)
            goto LABEL_119;
          return v3;
        }
        v3 = 0;
        if ((v15 & 1) == 0)
          return v3;
LABEL_119:
        v64 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = 0;

        return v3;
      case 4:
        if ((v8 & 1) == 0)
          goto LABEL_79;
        v45 = 0;
        v46 = 0;
        v47 = 0;
        *(_BYTE *)(a1 + 80) |= 1u;
        while (2)
        {
          v48 = *v17;
          v49 = *(_QWORD *)(v3 + v48);
          if (v49 == -1 || v49 >= *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v50 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v49);
            *(_QWORD *)(v3 + v48) = v49 + 1;
            v47 |= (unint64_t)(v50 & 0x7F) << v45;
            if (v50 < 0)
            {
              v45 += 7;
              v26 = v46++ >= 9;
              if (v26)
              {
                LODWORD(v47) = 0;
                goto LABEL_84;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          LODWORD(v47) = 0;
LABEL_84:
        *(_DWORD *)(a1 + 76) = v47;
        goto LABEL_93;
      default:
        if ((_DWORD)v30 != 200)
        {
          v51 = PBReaderSkipValueWithTag();
          v18 = (int *)MEMORY[0x1E0D82BC8];
          v15 = v67;
          if (!v51)
            goto LABEL_121;
          goto LABEL_93;
        }
        if (!v31)
        {
LABEL_79:
          v52 = PBReaderSkipValueWithTag();
          v18 = (int *)MEMORY[0x1E0D82BC8];
          v15 = v67;
          if ((v52 & 1) == 0)
          {
LABEL_121:
            v60 = 0;
            goto LABEL_108;
          }
          goto LABEL_93;
        }
        if ((*(_BYTE *)(a1 + 80) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_123;
          v53 = 32 * *(_BYTE *)(a1 + 80);
          goto LABEL_91;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_123;
        v66 = objc_alloc_init(GEOLPRLicensePlateStructure);
        if (!GEOLPRLicensePlateStructureReadAllFrom((uint64_t)v66, (void *)v3, v9 & 1))
          goto LABEL_122;
        PBReaderRecallMark();
        v43 = 40;
        goto LABEL_68;
    }
  }
}

void sub_188C96130(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188C96274(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188C96C48(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLPRLPRFillRuleReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 68))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOLPRLPRFillRuleReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 72));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 64) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 68) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOLPRLPRFillRuleReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOLPRLPRFillRuleReadAllFrom_initialTag;
  Specified = GEOLPRLPRFillRuleReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    objc_msgSend(*(id *)(a1 + 48), "readAll:", 1);
    objc_msgSend(*(id *)(a1 + 56), "readAll:", 1);
    objc_msgSend(*(id *)(a1 + 40), "readAll:", 1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return Specified;
}

void sub_188C96E10(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLPRLPRFillRuleReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOLPRLPRFillRuleReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188C96E70(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLPRTargetCharIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  int v13;
  unsigned int v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int v19;
  BOOL v20;
  unsigned int v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  int v25;
  _BOOL8 v26;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_39;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        if (v10 == -1 || v10 >= *(_QWORD *)&a1[*v3])
          break;
        v11 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v13 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      if (v13 || (v8 & 7) == 4)
        goto LABEL_39;
      if ((v8 >> 3) == 2)
        break;
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0)
          goto LABEL_41;
        v15 = 0;
        while (1)
        {
          v16 = *v2;
          v17 = *(_QWORD *)&a1[v16];
          if (v17 == -1 || v17 >= *(_QWORD *)&a1[*v3])
            break;
          v18 = v17 + 1;
          v19 = *(char *)(*(_QWORD *)&a1[*v5] + v17);
          *(_QWORD *)&a1[v16] = v18;
          if (v19 < 0)
          {
            v20 = v15++ > 8;
            if (!v20)
              continue;
          }
          goto LABEL_38;
        }
LABEL_36:
        a1[*v4] = 1;
        goto LABEL_38;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_41:
        v26 = 0;
        goto LABEL_40;
      }
LABEL_38:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_39;
    }
    if ((v8 & 7) != 0)
      goto LABEL_41;
    v21 = 0;
    while (1)
    {
      v22 = *v2;
      v23 = *(_QWORD *)&a1[v22];
      if (v23 == -1 || v23 >= *(_QWORD *)&a1[*v3])
        goto LABEL_36;
      v24 = v23 + 1;
      v25 = *(char *)(*(_QWORD *)&a1[*v5] + v23);
      *(_QWORD *)&a1[v22] = v24;
      if (v25 < 0)
      {
        v20 = v21++ > 8;
        if (!v20)
          continue;
      }
      goto LABEL_38;
    }
  }
LABEL_39:
  v26 = a1[*v4] == 0;
LABEL_40:
  PBReaderRecallMark();
  return v26;
}

BOOL GEOLPRLicensePlateStructureIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  int v13;
  int v14;
  _BOOL8 v16;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_27;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        if (v10 == -1 || v10 >= *(_QWORD *)&a1[*v3])
          break;
        v11 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v13 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v14 = v8 & 7;
      if (v13 || v14 == 4)
        goto LABEL_27;
      if ((v8 >> 3) == 2)
        break;
      if ((v8 >> 3) == 1)
      {
        if (v14 != 2)
          goto LABEL_29;
        goto LABEL_23;
      }
      if (!PBReaderSkipValueWithTag())
      {
LABEL_29:
        v16 = 0;
        goto LABEL_28;
      }
LABEL_26:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_27;
    }
    if (v14 != 2)
      goto LABEL_29;
LABEL_23:
    if ((PBReaderSkipValueWithTag() & 1) == 0)
      goto LABEL_29;
    goto LABEL_26;
  }
LABEL_27:
  v16 = a1[*v4] == 0;
LABEL_28:
  PBReaderRecallMark();
  return v16;
}

void sub_188C9746C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL _GEOLPRLPRFillRuleIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  if ((*(_BYTE *)(a1 + 80) & 0x3A) != 0)
    return 1;
  if ((*(_BYTE *)(a1 + 80) & 4) != 0)
    return GEOLPRLicensePlateStructureIsDirty(*(_QWORD *)(a1 + 40));
  return 0;
}

os_unfair_lock_s *GEOLPRLPRFillRuleIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  _BOOL8 IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOLPRLPRFillRuleIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 18);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_188C9784C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188C97C08(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188C97EB4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLPRLPRMapRuleReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 v14;
  int *v15;
  BOOL v16;
  int *v17;
  int *v18;
  int *v19;
  char v20;
  unsigned int v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  BOOL v26;
  int v27;
  int v28;
  unint64_t v30;
  BOOL v31;
  int *v32;
  int v33;
  int v34;
  BOOL v35;
  GEOLPRTargetChar *v36;
  void *v37;
  int *v38;
  char v39;
  unsigned int v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  int v45;
  char v46;
  char v47;
  unsigned int v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  char v52;
  char v53;
  int v54;
  int v55;
  char v56;
  void *v57;
  BOOL v59;
  char v60;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 68);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 64));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int8 *)(a1 + 76) >> 2) & 1)
      + (*(_BYTE *)(a1 + 76) & 1)
      + ((*(unsigned __int8 *)(a1 + 76) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 76) >> 1) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v7])
    {
      case -3:
        v8 = 1;
        goto LABEL_6;
      case -2:
        v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v10 | (v11 > 2);
        if (((v14 | v8) & 1) != 0)
          v15 = 0;
        else
          v15 = a3;
        v16 = v14;
        v17 = (int *)MEMORY[0x1E0D82BF0];
        v18 = (int *)MEMORY[0x1E0D82BC8];
        if (*(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(v3 + *v6))
          goto LABEL_92;
        v60 = (v15 == 0) | v14;
        v19 = (int *)MEMORY[0x1E0D82BB8];
        v59 = v14;
        break;
      default:
        ++v11;
LABEL_6:
        v12 = v9;
        v13 = v10;
LABEL_8:
        ++v7;
        v9 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  do
  {
    if (*(_BYTE *)(v3 + *v18))
      break;
    v20 = 0;
    v21 = 0;
    v22 = 0;
    while (1)
    {
      v23 = *v17;
      v24 = *(_QWORD *)(v3 + v23);
      if (v24 == -1 || v24 >= *(_QWORD *)(v3 + *v6))
        break;
      v25 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v24);
      *(_QWORD *)(v3 + v23) = v24 + 1;
      v22 |= (unint64_t)(v25 & 0x7F) << v20;
      if ((v25 & 0x80) == 0)
        goto LABEL_23;
      v20 += 7;
      v26 = v21++ >= 9;
      if (v26)
      {
        v22 = 0;
        v27 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(_BYTE *)(v3 + *v18) = 1;
LABEL_23:
    v27 = *(unsigned __int8 *)(v3 + *v18);
    if (*(_BYTE *)(v3 + *v18))
      v22 = 0;
LABEL_25:
    v28 = v22 & 7;
    if (v27 || v28 == 4)
      break;
    v30 = v22 >> 3;
    v31 = v16;
    if ((v60 & 1) == 0)
    {
      v32 = v15;
      do
      {
        v34 = *v32++;
        v33 = v34;
        v31 = v34 != 0;
        if (v34)
          v35 = v33 == (_DWORD)v30;
        else
          v35 = 1;
      }
      while (!v35);
    }
    if ((int)v30 <= 2)
    {
      if ((_DWORD)v30 == 1)
      {
        if (!v31 || (*(_BYTE *)(a1 + 76) & 1) != 0)
          goto LABEL_75;
        if (v28 == 2)
        {
          if (!PBReaderPlaceMark())
            goto LABEL_108;
          while (1)
          {
            v38 = (int *)MEMORY[0x1E0D82BC8];
            if (*(_QWORD *)(v3 + *v17) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + (int)*MEMORY[0x1E0D82BC8]))
              break;
            v39 = 0;
            v40 = 0;
            v41 = 0;
            while (1)
            {
              v42 = *v17;
              v43 = *(_QWORD *)(v3 + v42);
              if (v43 == -1 || v43 >= *(_QWORD *)(v3 + *v6))
                break;
              v44 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v43);
              *(_QWORD *)(v3 + v42) = v43 + 1;
              v41 |= (unint64_t)(v44 & 0x7F) << v39;
              if (v44 < 0)
              {
                v39 += 7;
                v26 = v40++ >= 9;
                if (!v26)
                  continue;
              }
              goto LABEL_65;
            }
            *(_BYTE *)(v3 + *v38) = 1;
LABEL_65:
            PBRepeatedUInt32Add();
          }
          PBReaderRecallMark();
        }
        else
        {
          v47 = 0;
          v48 = 0;
          v49 = 0;
          while (1)
          {
            v50 = *v17;
            v51 = *(_QWORD *)(v3 + v50);
            if (v51 == -1 || v51 >= *(_QWORD *)(v3 + *v6))
              break;
            v52 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v51);
            *(_QWORD *)(v3 + v50) = v51 + 1;
            v49 |= (unint64_t)(v52 & 0x7F) << v47;
            if (v52 < 0)
            {
              v47 += 7;
              v26 = v48++ >= 9;
              if (!v26)
                continue;
            }
            goto LABEL_88;
          }
          *(_BYTE *)(v3 + *v18) = 1;
LABEL_88:
          PBRepeatedUInt32Add();
        }
        goto LABEL_89;
      }
      if ((_DWORD)v30 != 2)
        goto LABEL_73;
      if (!v31 || (*(_BYTE *)(a1 + 76) & 4) != 0)
        goto LABEL_75;
      if ((PBReaderPlaceMark() & 1) == 0)
        goto LABEL_108;
      v36 = objc_alloc_init(GEOLPRTargetChar);
      if (!GEOLPRTargetCharReadAllFrom((uint64_t)v36, (void *)v3))
        goto LABEL_109;
      PBReaderRecallMark();
      -[GEOLPRLPRMapRule _addNoFlagsTargetChar:](a1, v36);
      goto LABEL_71;
    }
    if ((_DWORD)v30 == 3)
    {
      if (!v31 || (*(_BYTE *)(a1 + 76) & 8) != 0)
      {
LABEL_75:
        v46 = PBReaderSkipValueWithTag();
        v18 = (int *)MEMORY[0x1E0D82BC8];
        if ((v46 & 1) == 0)
        {
LABEL_107:
          v53 = 0;
          goto LABEL_94;
        }
        continue;
      }
      if ((PBReaderPlaceMark() & 1) == 0)
        goto LABEL_108;
      v36 = objc_alloc_init(GEOLPRValueMapping);
      if (!GEOLPRValueMappingReadAllFrom((uint64_t)v36, (void *)v3, v9 & 1))
      {
LABEL_109:

        v53 = 0;
        v16 = v59;
        goto LABEL_110;
      }
      PBReaderRecallMark();
      -[GEOLPRLPRMapRule _addNoFlagsValueMapping:](a1, v36);
LABEL_71:

      goto LABEL_72;
    }
    if ((_DWORD)v30 != 200)
    {
LABEL_73:
      v45 = PBReaderSkipValueWithTag();
      v18 = (int *)MEMORY[0x1E0D82BC8];
      if (!v45)
        goto LABEL_107;
      continue;
    }
    if (!v31)
      goto LABEL_75;
    if ((*(_BYTE *)(a1 + 76) & 2) != 0)
    {
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_108:
        v53 = 0;
LABEL_110:
        v18 = (int *)MEMORY[0x1E0D82BC8];
        goto LABEL_94;
      }
      v7 += *(unsigned __int8 *)(a1 + 76) << 30 >> 31;
      goto LABEL_89;
    }
    if ((PBReaderPlaceMark() & 1) == 0)
      goto LABEL_108;
    v36 = objc_alloc_init(GEOLPRLicensePlateStructure);
    if (!GEOLPRLicensePlateStructureReadAllFrom((uint64_t)v36, (void *)v3, v9 & 1))
      goto LABEL_109;
    PBReaderRecallMark();
    v37 = *(void **)(a1 + 40);
    *(_QWORD *)(a1 + 40) = v36;

    --v7;
LABEL_72:
    v16 = v59;
LABEL_89:
    v18 = (int *)MEMORY[0x1E0D82BC8];
  }
  while ((v16 || v7 != 0) && *(_QWORD *)(v3 + *v17) < *(_QWORD *)(v3 + *v6));
LABEL_92:
  if (!v16)
  {
    if (v15)
    {
      while (1)
      {
        v55 = *v15++;
        v54 = v55;
        v56 = 1;
        switch(v55)
        {
          case 0:
            goto LABEL_104;
          case 1:
            goto LABEL_103;
          case 2:
            v56 = 4;
            goto LABEL_103;
          case 3:
            v56 = 8;
            goto LABEL_103;
          default:
            if (v54 != 200)
              continue;
            v56 = 2;
LABEL_103:
            *(_BYTE *)(a1 + 76) |= v56;
            break;
        }
      }
    }
    goto LABEL_104;
  }
  v53 = 1;
LABEL_94:
  *(_BYTE *)(a1 + 76) |= 1u;
  *(_BYTE *)(a1 + 76) |= 4u;
  *(_BYTE *)(a1 + 76) |= 8u;
  *(_BYTE *)(a1 + 76) |= 2u;
  if ((v53 & 1) == 0)
  {
    v3 = 0;
    if (!v16)
      return v3;
    goto LABEL_105;
  }
LABEL_104:
  v3 = *(_BYTE *)(v3 + *v18) == 0;
  if (!v16)
    return v3;
LABEL_105:
  v57 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = 0;

  return v3;
}

void sub_188C988F8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188C98C2C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188C997E0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOLPRLPRMapRuleCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  _BYTE v21[128];
  _BYTE v22[128];
  uint64_t v23;

  v23 = *MEMORY[0x1E0C80C00];
  v17 = 0u;
  v18 = 0u;
  v19 = 0u;
  v20 = 0u;
  v2 = a1[6];
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v17, v22, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v18;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v18 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v17 + 1) + 8 * v6++), "readAll:", 1);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v17, v22, 16);
    }
    while (v4);
  }

  v15 = 0u;
  v16 = 0u;
  v13 = 0u;
  v14 = 0u;
  v7 = a1[7];
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v13, v21, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v14;
    do
    {
      v11 = 0;
      do
      {
        if (*(_QWORD *)v14 != v10)
          objc_enumerationMutation(v7);
        objc_msgSend(*(id *)(*((_QWORD *)&v13 + 1) + 8 * v11++), "readAll:", 1, (_QWORD)v13);
      }
      while (v9 != v11);
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v13, v21, 16);
    }
    while (v9);
  }

  return objc_msgSend(a1[5], "readAll:", 1);
}

unint64_t GEOLPRLPRMapRuleReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 68))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOLPRLPRMapRuleReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 72));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 64) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 68) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOLPRLPRMapRuleReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOLPRLPRMapRuleReadAllFrom_initialTag;
  Specified = GEOLPRLPRMapRuleReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOLPRLPRMapRuleCallReadAllRecursiveWithoutSynchronized((id *)a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return Specified;
}

void sub_188C99B1C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLPRLPRMapRuleReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOLPRLPRMapRuleReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188C99B7C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLPRValueMappingIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  int v13;
  int v14;
  unint64_t v16;
  _BOOL8 v17;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        if (v10 == -1 || v10 >= *(_QWORD *)&a1[*v3])
          break;
        v11 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v13 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v14 = v8 & 7;
      if (v13 || v14 == 4)
        break;
      v16 = v8 >> 3;
      if ((v8 >> 3) == 3)
      {
        if (v14 != 2 || !PBReaderPlaceMark() || !GEOLPRTimeConditionIsValid(a1))
        {
LABEL_31:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else
      {
        if ((_DWORD)v16 == 2)
        {
          if (v14 != 2)
            goto LABEL_31;
        }
        else if ((_DWORD)v16 == 1 && v14 != 2)
        {
          goto LABEL_31;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_31;
      }
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

void sub_188C9A074(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOLPRLPRMapRuleIsDirty(uint64_t a1)
{
  char v2;
  uint64_t v3;
  id v5;
  uint64_t v6;
  uint64_t i;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _BYTE v12[128];
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  v2 = *(_BYTE *)(a1 + 76);
  if ((v2 & 0x1D) != 0)
    return 1;
  if ((*(_BYTE *)(a1 + 76) & 2) != 0)
  {
    if (GEOLPRLicensePlateStructureIsDirty(*(_QWORD *)(a1 + 40)))
      return 1;
    v2 = *(_BYTE *)(a1 + 76);
  }
  if ((v2 & 8) == 0)
    return 0;
  v10 = 0u;
  v11 = 0u;
  v8 = 0u;
  v9 = 0u;
  v5 = *(id *)(a1 + 56);
  v3 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
  if (v3)
  {
    v6 = *(_QWORD *)v9;
    while (2)
    {
      for (i = 0; i != v3; ++i)
      {
        if (*(_QWORD *)v9 != v6)
          objc_enumerationMutation(v5);
        if ((GEOLPRValueMappingIsDirty(*(os_unfair_lock_s **)(*((_QWORD *)&v8 + 1) + 8 * i)) & 1) != 0)
        {
          v3 = 1;
          goto LABEL_19;
        }
      }
      v3 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
      if (v3)
        continue;
      break;
    }
  }
LABEL_19:

  return v3;
}

os_unfair_lock_s *GEOLPRLPRMapRuleIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOLPRLPRMapRuleIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 18);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_188C9A6D0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188C9AB04(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188C9ADB0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLPRLPRPickupRuleReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  int *v15;
  GEOLPRTargetChar *v16;
  int *v17;
  int *v18;
  int *v19;
  char v20;
  unsigned int v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  BOOL v26;
  int v27;
  int v28;
  unint64_t v30;
  BOOL v31;
  int *v32;
  int v33;
  int v34;
  BOOL v35;
  int *v36;
  char v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  void *v43;
  int v44;
  char v45;
  char v46;
  unsigned int v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  char v51;
  char v52;
  int v53;
  int v54;
  BOOL v55;
  void *v56;
  int v58;
  char v59;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 60);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 56));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int8 *)(a1 + 68) >> 1) & 1)
      + (*(_BYTE *)(a1 + 68) & 1)
      + ((*(unsigned __int8 *)(a1 + 68) >> 2) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v7])
    {
      case -3:
        v8 = 1;
        goto LABEL_6;
      case -2:
        v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v10 | (v11 > 1);
        if (((v14 | v8) & 1) != 0)
          v15 = 0;
        else
          v15 = a3;
        LODWORD(v16) = v14;
        v17 = (int *)MEMORY[0x1E0D82BF0];
        v18 = (int *)MEMORY[0x1E0D82BC8];
        if (*(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(v3 + *v6))
          goto LABEL_84;
        v59 = (v15 == 0) | v14;
        v19 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_6:
        v12 = v9;
        v13 = v10;
LABEL_8:
        ++v7;
        v9 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_BYTE *)(v3 + *v18))
      goto LABEL_84;
    v20 = 0;
    v21 = 0;
    v22 = 0;
    while (1)
    {
      v23 = *v17;
      v24 = *(_QWORD *)(v3 + v23);
      if (v24 == -1 || v24 >= *(_QWORD *)(v3 + *v6))
        break;
      v25 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v24);
      *(_QWORD *)(v3 + v23) = v24 + 1;
      v22 |= (unint64_t)(v25 & 0x7F) << v20;
      if ((v25 & 0x80) == 0)
        goto LABEL_23;
      v20 += 7;
      v26 = v21++ >= 9;
      if (v26)
      {
        v22 = 0;
        v27 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(_BYTE *)(v3 + *v18) = 1;
LABEL_23:
    v27 = *(unsigned __int8 *)(v3 + *v18);
    if (*(_BYTE *)(v3 + *v18))
      v22 = 0;
LABEL_25:
    v28 = v22 & 7;
    if (v27 || v28 == 4)
    {
LABEL_84:
      if ((v16 & 1) != 0)
      {
        v52 = 1;
        goto LABEL_86;
      }
      if (!v15)
        goto LABEL_100;
      while (1)
      {
        while (1)
        {
          v54 = *v15++;
          v53 = v54;
          v55 = v54 == 1;
          if (v54 <= 1)
            break;
          if (v53 == 200)
          {
            LOBYTE(v53) = 4;
LABEL_98:
            *(_BYTE *)(a1 + 68) |= v53;
          }
          else if (v53 == 2)
          {
            goto LABEL_98;
          }
        }
        if (v55)
        {
          LOBYTE(v53) = 1;
          goto LABEL_98;
        }
        if (!v53)
          goto LABEL_100;
      }
    }
    v30 = v22 >> 3;
    v31 = (char)v16;
    if ((v59 & 1) == 0)
    {
      v32 = v15;
      do
      {
        v34 = *v32++;
        v33 = v34;
        v31 = v34 != 0;
        if (v34)
          v35 = v33 == (_DWORD)v30;
        else
          v35 = 1;
      }
      while (!v35);
    }
    if ((_DWORD)v30 != 200)
      break;
    if (v31)
    {
      if ((*(_BYTE *)(a1 + 68) & 4) != 0)
      {
        if ((PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_104:
          v52 = 0;
          goto LABEL_106;
        }
        v7 += *(unsigned __int8 *)(a1 + 68) << 29 >> 31;
        goto LABEL_81;
      }
      if ((PBReaderPlaceMark() & 1) == 0)
        goto LABEL_104;
      v58 = (int)v16;
      v16 = objc_alloc_init(GEOLPRLicensePlateStructure);
      if (!GEOLPRLicensePlateStructureReadAllFrom((uint64_t)v16, (void *)v3, v9 & 1))
        goto LABEL_105;
      PBReaderRecallMark();
      v43 = *(void **)(a1 + 48);
      *(_QWORD *)(a1 + 48) = v16;

      --v7;
      goto LABEL_64;
    }
LABEL_67:
    v45 = PBReaderSkipValueWithTag();
    v18 = (int *)MEMORY[0x1E0D82BC8];
    if ((v45 & 1) == 0)
    {
LABEL_103:
      v52 = 0;
      goto LABEL_86;
    }
LABEL_82:
    if (!(v16 & 1 | (v7 != 0)) || *(_QWORD *)(v3 + *v17) >= *(_QWORD *)(v3 + *v6))
      goto LABEL_84;
  }
  if ((_DWORD)v30 != 2)
  {
    if ((_DWORD)v30 != 1)
    {
      v44 = PBReaderSkipValueWithTag();
      v18 = (int *)MEMORY[0x1E0D82BC8];
      if (!v44)
        goto LABEL_103;
      goto LABEL_82;
    }
    if (v31 && (*(_BYTE *)(a1 + 68) & 1) == 0)
    {
      if (v28 == 2)
      {
        if (!PBReaderPlaceMark())
          goto LABEL_104;
        while (1)
        {
          v36 = (int *)MEMORY[0x1E0D82BC8];
          if (*(_QWORD *)(v3 + *v17) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + (int)*MEMORY[0x1E0D82BC8]))
            break;
          v37 = 0;
          v38 = 0;
          v39 = 0;
          while (1)
          {
            v40 = *v17;
            v41 = *(_QWORD *)(v3 + v40);
            if (v41 == -1 || v41 >= *(_QWORD *)(v3 + *v6))
              break;
            v42 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v41);
            *(_QWORD *)(v3 + v40) = v41 + 1;
            v39 |= (unint64_t)(v42 & 0x7F) << v37;
            if (v42 < 0)
            {
              v37 += 7;
              v26 = v38++ >= 9;
              if (!v26)
                continue;
            }
            goto LABEL_53;
          }
          *(_BYTE *)(v3 + *v36) = 1;
LABEL_53:
          PBRepeatedUInt32Add();
        }
        PBReaderRecallMark();
      }
      else
      {
        v46 = 0;
        v47 = 0;
        v48 = 0;
        while (1)
        {
          v49 = *v17;
          v50 = *(_QWORD *)(v3 + v49);
          if (v50 == -1 || v50 >= *(_QWORD *)(v3 + *v6))
            break;
          v51 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v50);
          *(_QWORD *)(v3 + v49) = v50 + 1;
          v48 |= (unint64_t)(v51 & 0x7F) << v46;
          if (v51 < 0)
          {
            v46 += 7;
            v26 = v47++ >= 9;
            if (!v26)
              continue;
          }
          goto LABEL_80;
        }
        *(_BYTE *)(v3 + *v18) = 1;
LABEL_80:
        PBRepeatedUInt32Add();
      }
      goto LABEL_81;
    }
    goto LABEL_67;
  }
  if (!v31 || (*(_BYTE *)(a1 + 68) & 2) != 0)
    goto LABEL_67;
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_104;
  v58 = (int)v16;
  v16 = objc_alloc_init(GEOLPRTargetChar);
  if (GEOLPRTargetCharReadAllFrom((uint64_t)v16, (void *)v3))
  {
    PBReaderRecallMark();
    -[GEOLPRLPRPickupRule _addNoFlagsPickupChar:](a1, v16);

LABEL_64:
    LODWORD(v16) = v58;
LABEL_81:
    v18 = (int *)MEMORY[0x1E0D82BC8];
    goto LABEL_82;
  }
LABEL_105:

  v52 = 0;
  LOBYTE(v16) = v58;
LABEL_106:
  v18 = (int *)MEMORY[0x1E0D82BC8];
LABEL_86:
  *(_BYTE *)(a1 + 68) |= 1u;
  *(_BYTE *)(a1 + 68) |= 2u;
  *(_BYTE *)(a1 + 68) |= 4u;
  if ((v52 & 1) != 0)
  {
LABEL_100:
    v3 = *(_BYTE *)(v3 + *v18) == 0;
    if ((v16 & 1) != 0)
      goto LABEL_101;
    return v3;
  }
  v3 = 0;
  if ((v16 & 1) == 0)
    return v3;
LABEL_101:
  v56 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = 0;

  return v3;
}

void sub_188C9B754(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188C9C0D0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOLPRLPRPickupRuleCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _BYTE v12[128];
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  v8 = 0u;
  v9 = 0u;
  v10 = 0u;
  v11 = 0u;
  v2 = *(id *)(a1 + 40);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v9;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v9 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v8 + 1) + 8 * v6++), "readAll:", 1, (_QWORD)v8);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
    }
    while (v4);
  }

  return objc_msgSend(*(id *)(a1 + 48), "readAll:", 1);
}

unint64_t GEOLPRLPRPickupRuleReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 60))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOLPRLPRPickupRuleReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 60) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOLPRLPRPickupRuleReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOLPRLPRPickupRuleReadAllFrom_initialTag;
  Specified = GEOLPRLPRPickupRuleReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOLPRLPRPickupRuleCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_188C9C374(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLPRLPRPickupRuleReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOLPRLPRPickupRuleReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188C9C3D4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188C9C630(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL _GEOLPRLPRPickupRuleIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  if ((*(_BYTE *)(a1 + 68) & 0xB) != 0)
    return 1;
  if ((*(_BYTE *)(a1 + 68) & 4) != 0)
    return GEOLPRLicensePlateStructureIsDirty(*(_QWORD *)(a1 + 48));
  return 0;
}

os_unfair_lock_s *GEOLPRLPRPickupRuleIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  _BOOL8 IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOLPRLPRPickupRuleIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 16);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_188C9CA90(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188C9CDF8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188C9D040(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLPRLicensePlateInfoReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  int *v15;
  int *v16;
  int *v17;
  int *v18;
  char v19;
  unsigned int v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  int v26;
  unint64_t v28;
  BOOL v29;
  int *v30;
  int v31;
  int v32;
  BOOL v33;
  void *v34;
  GEOLPRLicensePlateStructure *v35;
  void *v36;
  char v37;
  int v38;
  char v39;
  void *v40;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1)
      + (*(_BYTE *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v8])
    {
      case -3:
        v7 = 1;
        goto LABEL_6;
      case -2:
        v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v10 | (v11 > 1);
        if (v10 & 1 | (v11 > 1) | v7 & 1)
          v15 = 0;
        else
          v15 = a3;
        v16 = (int *)MEMORY[0x1E0D82BF0];
        v17 = (int *)MEMORY[0x1E0D82BC8];
        v18 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_6:
        v12 = v9;
        v13 = v10;
LABEL_8:
        ++v8;
        v9 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v16) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v17))
      goto LABEL_61;
    v19 = 0;
    v20 = 0;
    v21 = 0;
    while (1)
    {
      v22 = *v16;
      v23 = *(_QWORD *)(v3 + v22);
      if (v23 == -1 || v23 >= *(_QWORD *)(v3 + *v6))
        break;
      v24 = *(_BYTE *)(*(_QWORD *)(v3 + *v18) + v23);
      *(_QWORD *)(v3 + v22) = v23 + 1;
      v21 |= (unint64_t)(v24 & 0x7F) << v19;
      if ((v24 & 0x80) == 0)
        goto LABEL_23;
      v19 += 7;
      if (v20++ >= 9)
      {
        v21 = 0;
        v26 = *(unsigned __int8 *)(v3 + *v17);
        goto LABEL_25;
      }
    }
    *(_BYTE *)(v3 + *v17) = 1;
LABEL_23:
    v26 = *(unsigned __int8 *)(v3 + *v17);
    if (*(_BYTE *)(v3 + *v17))
      v21 = 0;
LABEL_25:
    if (v26 || (v21 & 7) == 4)
    {
LABEL_61:
      if ((v14 & 1) != 0)
      {
        v37 = 1;
        goto LABEL_69;
      }
      if (v15)
      {
        while (1)
        {
          v38 = *v15++;
          v39 = 4;
          switch(v38)
          {
            case 0:
              goto LABEL_70;
            case 1:
              goto LABEL_67;
            case 2:
              v39 = 2;
              goto LABEL_67;
            case 3:
              v39 = 1;
LABEL_67:
              *(_BYTE *)(a1 + 52) |= v39;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_70;
    }
    v28 = v21 >> 3;
    v29 = v14;
    if (!((v15 == 0) | v14 & 1))
    {
      v30 = v15;
      do
      {
        v32 = *v30++;
        v31 = v32;
        v29 = v32 != 0;
        if (v32)
          v33 = v31 == (_DWORD)v28;
        else
          v33 = 1;
      }
      while (!v33);
    }
    if ((_DWORD)v28 != 3)
    {
      if ((_DWORD)v28 == 2)
      {
        if (!v29 || (*(_BYTE *)(a1 + 52) & 2) != 0)
        {
LABEL_56:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_68;
          goto LABEL_57;
        }
        PBReaderReadString();
        v34 = (void *)objc_claimAutoreleasedReturnValue();
        if (v34)
          -[GEOLPRLicensePlateInfo _addNoFlagsPowerTypeKeys:](a1, v34);
      }
      else
      {
        if ((_DWORD)v28 != 1)
        {
          if (!PBReaderSkipValueWithTag())
            goto LABEL_68;
          goto LABEL_57;
        }
        if (!v29 || (*(_BYTE *)(a1 + 52) & 4) != 0)
          goto LABEL_56;
        PBReaderReadString();
        v34 = (void *)objc_claimAutoreleasedReturnValue();
        if (v34)
          -[GEOLPRLicensePlateInfo _addNoFlagsVehicleTypeKeys:](a1, v34);
      }

      goto LABEL_53;
    }
    if (!v29)
      goto LABEL_56;
    if ((*(_BYTE *)(a1 + 52) & 1) == 0)
      break;
    if ((PBReaderSkipValueWithTag() & 1) == 0)
    {
LABEL_68:
      v37 = 0;
      goto LABEL_69;
    }
    v8 -= *(_BYTE *)(a1 + 52) & 1;
LABEL_57:
    if (!(v14 & 1 | (v8 != 0)))
      goto LABEL_61;
  }
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_68;
  v35 = objc_alloc_init(GEOLPRLicensePlateStructure);
  if (GEOLPRLicensePlateStructureReadAllFrom((uint64_t)v35, (void *)v3, v9 & 1))
  {
    PBReaderRecallMark();
    v36 = *(void **)(a1 + 16);
    *(_QWORD *)(a1 + 16) = v35;

    --v8;
LABEL_53:
    v17 = (int *)MEMORY[0x1E0D82BC8];
    goto LABEL_57;
  }

  v37 = 0;
  v17 = (int *)MEMORY[0x1E0D82BC8];
LABEL_69:
  *(_BYTE *)(a1 + 52) |= 4u;
  *(_BYTE *)(a1 + 52) |= 2u;
  *(_BYTE *)(a1 + 52) |= 1u;
  if ((v37 & 1) != 0)
  {
LABEL_70:
    v3 = *(_BYTE *)(v3 + *v17) == 0;
    if ((v14 & 1) == 0)
      return v3;
    goto LABEL_71;
  }
  v3 = 0;
  if ((v14 & 1) != 0)
  {
LABEL_71:
    v40 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_188C9D810(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188C9DB44(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188C9E1A4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLPRLicensePlateInfoReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOLPRLicensePlateInfoReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOLPRLicensePlateInfoReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOLPRLicensePlateInfoReadAllFrom_initialTag;
  Specified = GEOLPRLicensePlateInfoReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    objc_msgSend(*(id *)(a1 + 16), "readAll:", 1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_188C9E348(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLPRLicensePlateInfoReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOLPRLicensePlateInfoReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188C9E3A8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLPRLicensePlateInfoIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  int v13;
  int v14;
  unint64_t v16;
  _BOOL8 v17;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        if (v10 == -1 || v10 >= *(_QWORD *)&a1[*v3])
          break;
        v11 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v13 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v14 = v8 & 7;
      if (v13 || v14 == 4)
        break;
      v16 = v8 >> 3;
      if ((v8 >> 3) == 3)
      {
        if (v14 != 2 || !PBReaderPlaceMark() || !GEOLPRLicensePlateStructureIsValid(a1))
        {
LABEL_31:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else
      {
        if ((_DWORD)v16 == 2)
        {
          if (v14 != 2)
            goto LABEL_31;
        }
        else if ((_DWORD)v16 == 1 && v14 != 2)
        {
          goto LABEL_31;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_31;
      }
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

void sub_188C9E864(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL _GEOLPRLicensePlateInfoIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  if ((*(_BYTE *)(a1 + 52) & 0xE) != 0)
    return 1;
  if ((*(_BYTE *)(a1 + 52) & 1) != 0)
    return GEOLPRLicensePlateStructureIsDirty(*(_QWORD *)(a1 + 16));
  return 0;
}

os_unfair_lock_s *GEOLPRLicensePlateInfoIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  _BOOL8 IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOLPRLicensePlateInfoIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 12);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_188C9ED64(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLPRLicensePlateRegionReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  int *v15;
  GEOLPRLicensePlateInfo *v16;
  int *v17;
  int *v18;
  int *v19;
  char v20;
  unsigned int v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  int v27;
  unint64_t v29;
  BOOL v30;
  int *v31;
  int v32;
  int v33;
  BOOL v34;
  uint64_t v35;
  void *v36;
  int v37;
  void *v38;
  char v39;
  char v40;
  int v41;
  char v42;
  void *v43;
  int v45;
  char v46;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 52);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 48));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int8 *)(a1 + 60) >> 2) & 1)
      + (*(_BYTE *)(a1 + 60) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 1) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 3) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v7])
    {
      case -3:
        v8 = 1;
        goto LABEL_6;
      case -2:
        v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v10 | (v11 > 2);
        if (((v14 | v8) & 1) != 0)
          v15 = 0;
        else
          v15 = a3;
        LODWORD(v16) = v14;
        v17 = (int *)MEMORY[0x1E0D82BF0];
        v18 = (int *)MEMORY[0x1E0D82BC8];
        v46 = (v15 == 0) | v14;
        v19 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_6:
        v12 = v9;
        v13 = v10;
LABEL_8:
        ++v7;
        v9 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v17) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v18))
      goto LABEL_67;
    v20 = 0;
    v21 = 0;
    v22 = 0;
    while (1)
    {
      v23 = *v17;
      v24 = *(_QWORD *)(v3 + v23);
      if (v24 == -1 || v24 >= *(_QWORD *)(v3 + *v6))
        break;
      v25 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v24);
      *(_QWORD *)(v3 + v23) = v24 + 1;
      v22 |= (unint64_t)(v25 & 0x7F) << v20;
      if ((v25 & 0x80) == 0)
        goto LABEL_23;
      v20 += 7;
      if (v21++ >= 9)
      {
        v22 = 0;
        v27 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(_BYTE *)(v3 + *v18) = 1;
LABEL_23:
    v27 = *(unsigned __int8 *)(v3 + *v18);
    if (*(_BYTE *)(v3 + *v18))
      v22 = 0;
LABEL_25:
    if (v27 || (v22 & 7) == 4)
    {
LABEL_67:
      if ((v16 & 1) != 0)
      {
        v40 = 1;
        goto LABEL_79;
      }
      if (v15)
      {
        while (1)
        {
          v41 = *v15++;
          v42 = 1;
          switch(v41)
          {
            case 0:
              goto LABEL_80;
            case 1:
              goto LABEL_74;
            case 2:
              v42 = 4;
              goto LABEL_74;
            case 3:
              v42 = 2;
              goto LABEL_74;
            case 4:
              v42 = 8;
LABEL_74:
              *(_BYTE *)(a1 + 60) |= v42;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_80;
    }
    v29 = v22 >> 3;
    v30 = (char)v16;
    if ((v46 & 1) == 0)
    {
      v31 = v15;
      do
      {
        v33 = *v31++;
        v32 = v33;
        v30 = v33 != 0;
        if (v33)
          v34 = v32 == (_DWORD)v29;
        else
          v34 = 1;
      }
      while (!v34);
    }
    switch((int)v29)
    {
      case 1:
        if (!v30)
          goto LABEL_59;
        if ((*(_BYTE *)(a1 + 60) & 1) == 0)
        {
          PBReaderReadString();
          v35 = objc_claimAutoreleasedReturnValue();
          v36 = *(void **)(a1 + 16);
          *(_QWORD *)(a1 + 16) = v35;

          --v7;
          goto LABEL_65;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_76;
        v7 -= *(_BYTE *)(a1 + 60) & 1;
        goto LABEL_65;
      case 2:
        if (!v30)
          goto LABEL_59;
        if ((*(_BYTE *)(a1 + 60) & 4) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_76;
          v45 = (int)v16;
          v16 = objc_alloc_init(GEOMapRegionE7);
          if (!GEOMapRegionE7ReadAllFrom((uint64_t)v16, (void *)v3))
            goto LABEL_77;
          PBReaderRecallMark();
          v38 = *(void **)(a1 + 32);
          *(_QWORD *)(a1 + 32) = v16;

          --v7;
          goto LABEL_58;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_76:
          v40 = 0;
          goto LABEL_78;
        }
        v7 += *(unsigned __int8 *)(a1 + 60) << 29 >> 31;
        goto LABEL_65;
      case 3:
        if (!v30 || (*(_BYTE *)(a1 + 60) & 2) != 0)
          goto LABEL_59;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_76;
        v45 = (int)v16;
        v16 = objc_alloc_init(GEOLPRLicensePlateInfo);
        if (!GEOLPRLicensePlateInfoReadAllFrom((uint64_t)v16, (void *)v3, v9 & 1))
          goto LABEL_77;
        PBReaderRecallMark();
        -[GEOLPRLicensePlateRegion _addNoFlagsLicensePlateInfo:](a1, v16);
        goto LABEL_57;
      case 4:
        if (!v30 || (*(_BYTE *)(a1 + 60) & 8) != 0)
        {
LABEL_59:
          v39 = PBReaderSkipValueWithTag();
          v18 = (int *)MEMORY[0x1E0D82BC8];
          if ((v39 & 1) == 0)
          {
LABEL_75:
            v40 = 0;
            goto LABEL_79;
          }
LABEL_66:
          if (!(v16 & 1 | (v7 != 0)))
            goto LABEL_67;
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_76;
        v45 = (int)v16;
        v16 = objc_alloc_init(GEOLPRRestrictionRegion);
        if (GEOLPRRestrictionRegionReadAllFrom((uint64_t)v16, (void *)v3, v9 & 1))
        {
          PBReaderRecallMark();
          -[GEOLPRLicensePlateRegion _addNoFlagsRegion:](a1, v16);
LABEL_57:

LABEL_58:
          LODWORD(v16) = v45;
LABEL_65:
          v18 = (int *)MEMORY[0x1E0D82BC8];
          goto LABEL_66;
        }
LABEL_77:

        v40 = 0;
        LOBYTE(v16) = v45;
LABEL_78:
        v18 = (int *)MEMORY[0x1E0D82BC8];
LABEL_79:
        *(_BYTE *)(a1 + 60) |= 1u;
        *(_BYTE *)(a1 + 60) |= 4u;
        *(_BYTE *)(a1 + 60) |= 2u;
        *(_BYTE *)(a1 + 60) |= 8u;
        if ((v40 & 1) != 0)
        {
LABEL_80:
          v3 = *(_BYTE *)(v3 + *v18) == 0;
          if ((v16 & 1) != 0)
            goto LABEL_81;
        }
        else
        {
          v3 = 0;
          if ((v16 & 1) != 0)
          {
LABEL_81:
            v43 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = 0;

          }
        }
        return v3;
      default:
        v37 = PBReaderSkipValueWithTag();
        v18 = (int *)MEMORY[0x1E0D82BC8];
        if (!v37)
          goto LABEL_75;
        goto LABEL_66;
    }
  }
}

void sub_188C9F7F0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188C9F8D0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188C9FA14(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188C9FD48(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CA0818(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOLPRLicensePlateRegionCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  _BYTE v20[128];
  _BYTE v21[128];
  uint64_t v22;

  v22 = *MEMORY[0x1E0C80C00];
  objc_msgSend(a1[4], "readAll:", 1);
  v18 = 0u;
  v19 = 0u;
  v16 = 0u;
  v17 = 0u;
  v2 = a1[3];
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v16, v21, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v17;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v17 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v16 + 1) + 8 * v6++), "readAll:", 1);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v16, v21, 16);
    }
    while (v4);
  }

  v14 = 0u;
  v15 = 0u;
  v12 = 0u;
  v13 = 0u;
  v7 = a1[5];
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v12, v20, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v13;
    do
    {
      v11 = 0;
      do
      {
        if (*(_QWORD *)v13 != v10)
          objc_enumerationMutation(v7);
        objc_msgSend(*(id *)(*((_QWORD *)&v12 + 1) + 8 * v11++), "readAll:", 1, (_QWORD)v12);
      }
      while (v9 != v11);
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v12, v20, 16);
    }
    while (v9);
  }

}

unint64_t GEOLPRLicensePlateRegionReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 52))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOLPRLicensePlateRegionReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 52) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOLPRLicensePlateRegionReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOLPRLicensePlateRegionReadAllFrom_initialTag;
  Specified = GEOLPRLicensePlateRegionReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOLPRLicensePlateRegionCallReadAllRecursiveWithoutSynchronized((id *)a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_188CA0B54(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLPRLicensePlateRegionReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOLPRLicensePlateRegionReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188CA0BB4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEOLPRLicensePlateRegionIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int v5;
  int *v6;
  char v7;
  unsigned int v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  BOOL v17;
  uint64_t v18;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = 0;
    v6 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_39;
      v7 = 0;
      v8 = 0;
      v9 = 0;
      while (1)
      {
        v10 = *v2;
        v11 = *(_QWORD *)&a1[v10];
        if (v11 == -1 || v11 >= *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v6] + v11);
        *(_QWORD *)&a1[v10] = v11 + 1;
        v9 |= (unint64_t)(v12 & 0x7F) << v7;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v7 += 7;
        if (v8++ >= 9)
        {
          v9 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v9 = 0;
LABEL_14:
      v15 = v9 & 7;
      if (v14 || v15 == 4)
        goto LABEL_39;
      switch((v9 >> 3))
      {
        case 1u:
          if (v5 || v15 != 2)
            goto LABEL_46;
          v5 = 1;
          goto LABEL_22;
        case 2u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOMapRegionE7IsValid(a1))
            goto LABEL_46;
          goto LABEL_35;
        case 3u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOLPRLicensePlateInfoIsValid(a1))
            goto LABEL_46;
          goto LABEL_35;
        case 4u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOLPRRestrictionRegionIsValid(a1))
            goto LABEL_46;
LABEL_35:
          PBReaderRecallMark();
          goto LABEL_36;
        default:
LABEL_22:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_46:
            PBReaderRecallMark();
            return 0;
          }
LABEL_36:
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_39;
          break;
      }
    }
  }
  v5 = 0;
LABEL_39:
  if (a1[*v4])
    v17 = 1;
  else
    v17 = v5 == 0;
  v18 = !v17;
  PBReaderRecallMark();
  return v18;
}

uint64_t GEOLPRRestrictionRegionIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int v5;
  int *v6;
  char v7;
  unsigned int v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  BOOL v17;
  uint64_t v18;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = 0;
    v6 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_40;
      v7 = 0;
      v8 = 0;
      v9 = 0;
      while (1)
      {
        v10 = *v2;
        v11 = *(_QWORD *)&a1[v10];
        if (v11 == -1 || v11 >= *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v6] + v11);
        *(_QWORD *)&a1[v10] = v11 + 1;
        v9 |= (unint64_t)(v12 & 0x7F) << v7;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v7 += 7;
        if (v8++ >= 9)
        {
          v9 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v9 = 0;
LABEL_14:
      v15 = v9 & 7;
      if (v14 || v15 == 4)
        goto LABEL_40;
      switch((v9 >> 3))
      {
        case 1u:
          if (v5 || v15 != 2)
            goto LABEL_47;
          v5 = 1;
          goto LABEL_23;
        case 2u:
          if (v15 == 2)
            goto LABEL_23;
          goto LABEL_47;
        case 3u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOMapRegionE7IsValid(a1))
            goto LABEL_47;
          goto LABEL_36;
        case 4u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOLPRDefinedPlateTypeIsValid(a1))
            goto LABEL_47;
          goto LABEL_36;
        case 5u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOLPRLPRConvertRuleIsValid(a1))
            goto LABEL_47;
LABEL_36:
          PBReaderRecallMark();
          goto LABEL_37;
        default:
LABEL_23:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_47:
            PBReaderRecallMark();
            return 0;
          }
LABEL_37:
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_40;
          break;
      }
    }
  }
  v5 = 0;
LABEL_40:
  if (a1[*v4])
    v17 = 1;
  else
    v17 = v5 == 0;
  v18 = !v17;
  PBReaderRecallMark();
  return v18;
}

void sub_188CA137C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOLPRLicensePlateRegionIsDirty(uint64_t a1)
{
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t i;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _BYTE v11[128];
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  if ((*(_BYTE *)(a1 + 60) & 0x1F) != 0)
    return 1;
  if ((*(_BYTE *)(a1 + 60) & 8) == 0)
    return 0;
  v9 = 0u;
  v10 = 0u;
  v7 = 0u;
  v8 = 0u;
  v3 = *(id *)(a1 + 40);
  v2 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
  if (v2)
  {
    v4 = *(_QWORD *)v8;
    while (2)
    {
      for (i = 0; i != v2; ++i)
      {
        if (*(_QWORD *)v8 != v4)
          objc_enumerationMutation(v3);
        if ((GEOLPRRestrictionRegionIsDirty(*(os_unfair_lock_s **)(*((_QWORD *)&v7 + 1) + 8 * i)) & 1) != 0)
        {
          v2 = 1;
          goto LABEL_15;
        }
      }
      v2 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
      if (v2)
        continue;
      break;
    }
  }
LABEL_15:

  return v2;
}

os_unfair_lock_s *GEOLPRLicensePlateRegionIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOLPRLicensePlateRegionIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 14);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_188CA1978(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLPRLicensePlateRestrictionRulesReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  int *v15;
  _BOOL4 v16;
  BOOL v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  BOOL v27;
  int v28;
  unint64_t v30;
  _BOOL4 v31;
  int *v32;
  int v33;
  int v34;
  BOOL v35;
  uint64_t v36;
  void *v37;
  GEOLPRLicensePlateRegion *v38;
  char v39;
  unsigned int v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  int v45;
  char v46;
  char v47;
  char v48;
  char v49;
  int v50;
  int v51;
  void *v52;
  _BOOL4 v54;
  BOOL v55;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 36);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 32));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int8 *)(a1 + 48) >> 1) & 1) + (*(_BYTE *)(a1 + 48) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v9])
    {
      case -3:
        v8 = 1;
        goto LABEL_6;
      case -2:
        v12 = v7;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v10 & 1 | v11;
        if ((v14 != 0) | v8 & 1)
          v15 = 0;
        else
          v15 = a3;
        v16 = v14 != 0;
        if (v14)
          v17 = 1;
        else
          v17 = v15 == 0;
        v55 = v17;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_6:
        v12 = v7;
        v13 = v10;
LABEL_8:
        ++v9;
        v7 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v19))
      goto LABEL_73;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      if (v25 == -1 || v25 >= *(_QWORD *)(v3 + *v6))
        break;
      v26 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v25 + 1;
      v23 |= (unint64_t)(v26 & 0x7F) << v21;
      if ((v26 & 0x80) == 0)
        goto LABEL_26;
      v21 += 7;
      v27 = v22++ >= 9;
      if (v27)
      {
        v23 = 0;
        v28 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_28;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_26:
    v28 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_28:
    if (v28 || (v23 & 7) == 4)
    {
LABEL_73:
      if (v16)
      {
        v48 = 1;
        goto LABEL_88;
      }
      if (!v15)
        goto LABEL_89;
      while (1)
      {
        v51 = *v15++;
        v50 = v51;
        if (v51 == 1)
          break;
        if (v50 == 3)
        {
          v49 = 1;
LABEL_79:
          *(_BYTE *)(a1 + 48) |= v49;
        }
        else if (!v50)
        {
          goto LABEL_89;
        }
      }
      v49 = 2;
      goto LABEL_79;
    }
    v30 = v23 >> 3;
    v31 = v16;
    if (!v55)
    {
      v32 = v15;
      do
      {
        v34 = *v32++;
        v33 = v34;
        v31 = v34 != 0;
        if (v34)
          v35 = v33 == (_DWORD)v30;
        else
          v35 = 1;
      }
      while (!v35);
    }
    if ((_DWORD)v30 == 3)
      break;
    if ((_DWORD)v30 == 2)
    {
      if ((v8 & 1) != 0)
      {
        v39 = 0;
        v40 = 0;
        v41 = 0;
        while (1)
        {
          v42 = *v18;
          v43 = *(_QWORD *)(v3 + v42);
          if (v43 == -1 || v43 >= *(_QWORD *)(v3 + *v6))
            break;
          v44 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v43);
          *(_QWORD *)(v3 + v42) = v43 + 1;
          v41 |= (unint64_t)(v44 & 0x7F) << v39;
          if ((v44 & 0x80) == 0)
            goto LABEL_63;
          v39 += 7;
          v27 = v40++ >= 9;
          if (v27)
          {
            LODWORD(v41) = 0;
            goto LABEL_65;
          }
        }
        *(_BYTE *)(v3 + *v19) = 1;
LABEL_63:
        if (*(_BYTE *)(v3 + *v19))
          LODWORD(v41) = 0;
LABEL_65:
        *(_DWORD *)(a1 + 44) = v41;
        goto LABEL_69;
      }
    }
    else
    {
      if ((_DWORD)v30 != 1)
      {
        v45 = PBReaderSkipValueWithTag();
        v19 = (int *)MEMORY[0x1E0D82BC8];
        if (!v45)
          goto LABEL_84;
        goto LABEL_69;
      }
      if (v31)
      {
        if ((*(_BYTE *)(a1 + 48) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_85:
            v48 = 0;
            goto LABEL_87;
          }
          v9 += *(unsigned __int8 *)(a1 + 48) << 30 >> 31;
        }
        else
        {
          PBReaderReadData();
          v36 = objc_claimAutoreleasedReturnValue();
          v37 = *(void **)(a1 + 24);
          *(_QWORD *)(a1 + 24) = v36;

          --v9;
        }
        goto LABEL_68;
      }
    }
LABEL_60:
    v46 = PBReaderSkipValueWithTag();
    v19 = (int *)MEMORY[0x1E0D82BC8];
    if ((v46 & 1) == 0)
    {
LABEL_84:
      v48 = 0;
      goto LABEL_88;
    }
LABEL_69:
    if (v9)
      v47 = 1;
    else
      v47 = v16;
    if ((v47 & 1) == 0)
      goto LABEL_73;
  }
  if (!v31 || (*(_BYTE *)(a1 + 48) & 1) != 0)
    goto LABEL_60;
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_85;
  v54 = v16;
  v38 = objc_alloc_init(GEOLPRLicensePlateRegion);
  if (GEOLPRLicensePlateRegionReadAllFrom((uint64_t)v38, (void *)v3, v7 & 1))
  {
    PBReaderRecallMark();
    -[GEOLPRLicensePlateRestrictionRules _addNoFlagsLicensePlateRegion:](a1, v38);

    v16 = v54;
LABEL_68:
    v19 = (int *)MEMORY[0x1E0D82BC8];
    goto LABEL_69;
  }

  v48 = 0;
  v16 = v54;
LABEL_87:
  v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_88:
  *(_BYTE *)(a1 + 48) |= 2u;
  *(_BYTE *)(a1 + 48) |= 1u;
  if ((v48 & 1) != 0)
  {
LABEL_89:
    v3 = *(_BYTE *)(v3 + *v19) == 0;
    if (v16)
      goto LABEL_90;
  }
  else
  {
    v3 = 0;
    if (v16)
    {
LABEL_90:
      v52 = *(void **)(a1 + 8);
      *(_QWORD *)(a1 + 8) = 0;

    }
  }
  return v3;
}

void sub_188CA23BC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CA24D0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CA2DA0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOLPRLicensePlateRestrictionRulesCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _BYTE v10[128];
  uint64_t v11;

  v11 = *MEMORY[0x1E0C80C00];
  v6 = 0u;
  v7 = 0u;
  v8 = 0u;
  v9 = 0u;
  v1 = *(id *)(a1 + 16);
  v2 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
  if (v2)
  {
    v3 = v2;
    v4 = *(_QWORD *)v7;
    do
    {
      v5 = 0;
      do
      {
        if (*(_QWORD *)v7 != v4)
          objc_enumerationMutation(v1);
        objc_msgSend(*(id *)(*((_QWORD *)&v6 + 1) + 8 * v5++), "readAll:", 1, (_QWORD)v6);
      }
      while (v3 != v5);
      v3 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
    }
    while (v3);
  }

}

unint64_t GEOLPRLicensePlateRestrictionRulesReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 36))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOLPRLicensePlateRestrictionRulesReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 40));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 32) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 36) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOLPRLicensePlateRestrictionRulesReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOLPRLicensePlateRestrictionRulesReadAllFrom_initialTag;
  Specified = GEOLPRLicensePlateRestrictionRulesReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOLPRLicensePlateRestrictionRulesCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return Specified;
}

void sub_188CA302C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLPRLicensePlateRestrictionRulesReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOLPRLicensePlateRestrictionRulesReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188CA308C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLPRLicensePlateRestrictionRulesIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  int v13;
  int v14;
  unint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  int v20;
  uint64_t v21;
  char v22;
  char v23;
  int v24;
  unsigned int v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  int v29;
  _BOOL4 v31;
  _BOOL8 v32;
  _QWORD v34[2];

  v34[1] = *MEMORY[0x1E0C80C00];
  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v34[0] = 0;
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_56;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        if (v10 == -1 || v10 >= *(_QWORD *)&a1[*v3])
          break;
        v11 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v13 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v14 = v8 & 7;
      if (v13 || v14 == 4)
      {
LABEL_56:
        v31 = HIDWORD(v34[0]) != 0;
        goto LABEL_50;
      }
      v16 = v8 >> 3;
      if ((v8 >> 3) == 1)
        break;
      if ((_DWORD)v16 == 3)
      {
        if (v14 != 2 || !PBReaderPlaceMark() || !GEOLPRLicensePlateRegionIsValid(a1))
          goto LABEL_54;
        PBReaderRecallMark();
      }
      else
      {
        if ((_DWORD)v16 != 2)
          goto LABEL_45;
        v17 = 0;
        v18 = 1;
        while (1)
        {
          v19 = v18;
          v20 = *((_DWORD *)v34 + v17);
          if (!v20)
            break;
          if (v20 != 2)
          {
            v18 = 0;
            v17 = 1;
            if ((v19 & 1) != 0)
              continue;
          }
          goto LABEL_54;
        }
        *((_DWORD *)v34 + v17) = 2;
        if (v14)
          goto LABEL_54;
        v25 = 0;
        while (1)
        {
          v26 = *v2;
          v27 = *(_QWORD *)&a1[v26];
          if (v27 == -1 || v27 >= *(_QWORD *)&a1[*v3])
            break;
          v28 = v27 + 1;
          v29 = *(char *)(*(_QWORD *)&a1[*v5] + v27);
          *(_QWORD *)&a1[v26] = v28;
          if (v29 < 0 && v25++ <= 8)
            continue;
          goto LABEL_46;
        }
        a1[*v4] = 1;
      }
LABEL_46:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_56;
    }
    v21 = 0;
    v22 = 1;
    while (1)
    {
      v23 = v22;
      v24 = *((_DWORD *)v34 + v21);
      if (!v24)
        break;
      if (v24 != 1)
      {
        v22 = 0;
        v21 = 1;
        if ((v23 & 1) != 0)
          continue;
      }
      goto LABEL_54;
    }
    *((_DWORD *)v34 + v21) = 1;
    if (v14 != 2)
    {
LABEL_54:
      PBReaderRecallMark();
      return 0;
    }
LABEL_45:
    if ((PBReaderSkipValueWithTag() & 1) == 0)
      goto LABEL_54;
    goto LABEL_46;
  }
  v31 = 0;
LABEL_50:
  if (a1[*v4])
    v32 = 0;
  else
    v32 = v31;
  PBReaderRecallMark();
  return v32;
}

void sub_188CA35C0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOLPRLicensePlateRestrictionRulesIsDirty(uint64_t a1)
{
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t i;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _BYTE v11[128];
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  if ((*(_BYTE *)(a1 + 48) & 7) != 0)
    return 1;
  if ((*(_BYTE *)(a1 + 48) & 1) == 0)
    return 0;
  v9 = 0u;
  v10 = 0u;
  v7 = 0u;
  v8 = 0u;
  v3 = *(id *)(a1 + 16);
  v2 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
  if (v2)
  {
    v4 = *(_QWORD *)v8;
    while (2)
    {
      for (i = 0; i != v2; ++i)
      {
        if (*(_QWORD *)v8 != v4)
          objc_enumerationMutation(v3);
        if ((GEOLPRLicensePlateRegionIsDirty(*(os_unfair_lock_s **)(*((_QWORD *)&v7 + 1) + 8 * i)) & 1) != 0)
        {
          v2 = 1;
          goto LABEL_15;
        }
      }
      v2 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
      if (v2)
        continue;
      break;
    }
  }
LABEL_15:

  return v2;
}

os_unfair_lock_s *GEOLPRLicensePlateRestrictionRulesIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOLPRLicensePlateRestrictionRulesIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 10);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_188CA3A9C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CA3ED4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLPRLicensePlateStructureReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  char v7;
  char v8;
  uint64_t v9;
  int v10;
  unsigned int v11;
  int v12;
  _BOOL4 v13;
  int *v14;
  BOOL v15;
  int *v16;
  int *v17;
  int *v18;
  char v19;
  unsigned int v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  int v26;
  unint64_t v28;
  _BOOL4 v29;
  int *v30;
  int v31;
  int v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  int v37;
  char v38;
  char v39;
  char v40;
  int v41;
  int v42;
  void *v43;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 36);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 32));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = ((*(unsigned __int8 *)(a1 + 44) >> 1) & 1) + (*(_BYTE *)(a1 + 44) & 1);
  while (1)
  {
    v11 = a3[v9];
    if (v11 >= 0xFFFFFFFE)
    {
      v7 = 1;
      goto LABEL_9;
    }
    if (v11 != -3)
      break;
    v8 = 1;
LABEL_9:
    ++v9;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  v12 = v7 & 1 | v10;
  v13 = v12 != 0;
  if ((v12 != 0) | v8 & 1)
    v14 = 0;
  else
    v14 = a3;
  if (v12)
    v15 = 1;
  else
    v15 = v14 == 0;
  v16 = (int *)MEMORY[0x1E0D82BF0];
  v17 = (int *)MEMORY[0x1E0D82BC8];
  v18 = (int *)MEMORY[0x1E0D82BB8];
  while (2)
  {
    if (*(_QWORD *)(v3 + *v16) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v17))
      goto LABEL_62;
    v19 = 0;
    v20 = 0;
    v21 = 0;
    while (1)
    {
      v22 = *v16;
      v23 = *(_QWORD *)(v3 + v22);
      if (v23 == -1 || v23 >= *(_QWORD *)(v3 + *v6))
        break;
      v24 = *(_BYTE *)(*(_QWORD *)(v3 + *v18) + v23);
      *(_QWORD *)(v3 + v22) = v23 + 1;
      v21 |= (unint64_t)(v24 & 0x7F) << v19;
      if ((v24 & 0x80) == 0)
        goto LABEL_27;
      v19 += 7;
      if (v20++ >= 9)
      {
        v21 = 0;
        v26 = *(unsigned __int8 *)(v3 + *v17);
        goto LABEL_29;
      }
    }
    *(_BYTE *)(v3 + *v17) = 1;
LABEL_27:
    v26 = *(unsigned __int8 *)(v3 + *v17);
    if (*(_BYTE *)(v3 + *v17))
      v21 = 0;
LABEL_29:
    if (v26 || (v21 & 7) == 4)
    {
LABEL_62:
      if (v13)
      {
        v40 = 1;
        goto LABEL_72;
      }
      if (v14)
      {
        do
        {
          while (1)
          {
            v42 = *v14++;
            v41 = v42;
            if (v42 != 1 && v41 != 2)
              break;
            *(_BYTE *)(a1 + 44) |= v41;
          }
        }
        while (v41);
      }
      goto LABEL_73;
    }
    v28 = v21 >> 3;
    v29 = v13;
    if (!v15)
    {
      v30 = v14;
      do
      {
        v32 = *v30++;
        v31 = v32;
        v29 = v32 != 0;
        if (v32)
          v33 = v31 == (_DWORD)v28;
        else
          v33 = 1;
      }
      while (!v33);
    }
    if ((_DWORD)v28 != 2)
    {
      if ((_DWORD)v28 != 1)
      {
        v37 = PBReaderSkipValueWithTag();
        v17 = (int *)MEMORY[0x1E0D82BC8];
        if (!v37)
          goto LABEL_70;
        goto LABEL_58;
      }
      if (v29)
      {
        if ((*(_BYTE *)(a1 + 44) & 1) == 0)
        {
          PBReaderReadString();
          v34 = objc_claimAutoreleasedReturnValue();
          v35 = 16;
          goto LABEL_48;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_71;
        v9 -= *(_BYTE *)(a1 + 44) & 1;
LABEL_57:
        v17 = (int *)MEMORY[0x1E0D82BC8];
LABEL_58:
        if (v9)
          v39 = 1;
        else
          v39 = v13;
        if ((v39 & 1) == 0)
          goto LABEL_62;
        continue;
      }
LABEL_51:
      v38 = PBReaderSkipValueWithTag();
      v17 = (int *)MEMORY[0x1E0D82BC8];
      if ((v38 & 1) == 0)
      {
LABEL_70:
        v40 = 0;
        goto LABEL_72;
      }
      goto LABEL_58;
    }
    break;
  }
  if (!v29)
    goto LABEL_51;
  if ((*(_BYTE *)(a1 + 44) & 2) == 0)
  {
    PBReaderReadString();
    v34 = objc_claimAutoreleasedReturnValue();
    v35 = 24;
LABEL_48:
    v36 = *(void **)(a1 + v35);
    *(_QWORD *)(a1 + v35) = v34;

    v17 = (int *)MEMORY[0x1E0D82BC8];
    --v9;
    goto LABEL_58;
  }
  if ((PBReaderSkipValueWithTag() & 1) != 0)
  {
    v9 += *(unsigned __int8 *)(a1 + 44) << 30 >> 31;
    goto LABEL_57;
  }
LABEL_71:
  v40 = 0;
  v17 = (int *)MEMORY[0x1E0D82BC8];
LABEL_72:
  *(_BYTE *)(a1 + 44) |= 1u;
  *(_BYTE *)(a1 + 44) |= 2u;
  if ((v40 & 1) != 0)
  {
LABEL_73:
    v3 = *(_BYTE *)(v3 + *v17) == 0;
    if (!v13)
      return v3;
    goto LABEL_74;
  }
  v3 = 0;
  if (v13)
  {
LABEL_74:
    v43 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_188CA43E8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CA47B4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLPRLicensePlateStructureReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 36))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOLPRLicensePlateStructureReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 40));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 32) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 36) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOLPRLicensePlateStructureReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOLPRLicensePlateStructureReadAllFrom_initialTag;
  Specified = GEOLPRLicensePlateStructureReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return Specified;
}

void sub_188CA4940(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLPRLicensePlateStructureReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOLPRLicensePlateStructureReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188CA49A0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CA4B1C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLPRLicensePlateStructureIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  v2 = (*(_BYTE *)(a1 + 44) & 7) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return v2;
}

void sub_188CA4DA0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLPRPlateMatchConditionReadAllFrom(void *a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  void *v17;
  _BOOL8 v18;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          if (v12 == -1 || v12 >= *(_QWORD *)&v3[*v5])
            break;
          v13 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v12 + 1;
          v10 |= (unint64_t)(v13 & 0x7F) << v8;
          if ((v13 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v15 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v15 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v15 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 1)
        {
          PBReaderReadString();
          v17 = (void *)objc_claimAutoreleasedReturnValue();
          if (v17)
            objc_msgSend(a1, "addPatterns:", v17);

        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_26;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v18 = v3[*v6] == 0;
  }
  else
  {
LABEL_26:
    v18 = 0;
  }
  objc_sync_exit(v3);

  return v18;
}

void sub_188CA54A4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLPRPlateMatchConditionReadFrom(void *a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOLPRPlateMatchConditionReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188CA5504(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLPRRestrictionRegionReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  int *v15;
  GEOLPRDefinedPlateType *v16;
  int *v17;
  int *v18;
  int *v19;
  char v20;
  unsigned int v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  int v27;
  unint64_t v29;
  BOOL v30;
  int *v31;
  int v32;
  int v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  void *v38;
  void *v39;
  char v40;
  char v41;
  char v42;
  int v43;
  char v44;
  void *v45;
  int v47;
  char v48;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 60);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 56));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = (vaddv_s16((int16x4_t)(*(_QWORD *)&vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int8 *)(a1 + 68)), (uint16x4_t)0xFFFFFFFDFFFEFFFCLL) & 0xFF01FF01FF01FF01))+ (*(_BYTE *)(a1 + 68) & 1));
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v7])
    {
      case -3:
        v8 = 1;
        goto LABEL_6;
      case -2:
        v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v10 | (v11 > 3);
        if (((v14 | v8) & 1) != 0)
          v15 = 0;
        else
          v15 = a3;
        LODWORD(v16) = v14;
        v48 = (v15 == 0) | v14;
        v17 = (int *)MEMORY[0x1E0D82BF0];
        v18 = (int *)MEMORY[0x1E0D82BC8];
        v19 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_6:
        v12 = v9;
        v13 = v10;
LABEL_8:
        ++v7;
        v9 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v17) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v18))
      goto LABEL_74;
    v20 = 0;
    v21 = 0;
    v22 = 0;
    while (1)
    {
      v23 = *v17;
      v24 = *(_QWORD *)(v3 + v23);
      if (v24 == -1 || v24 >= *(_QWORD *)(v3 + *v6))
        break;
      v25 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v24);
      *(_QWORD *)(v3 + v23) = v24 + 1;
      v22 |= (unint64_t)(v25 & 0x7F) << v20;
      if ((v25 & 0x80) == 0)
        goto LABEL_23;
      v20 += 7;
      if (v21++ >= 9)
      {
        v22 = 0;
        v27 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(_BYTE *)(v3 + *v18) = 1;
LABEL_23:
    v27 = *(unsigned __int8 *)(v3 + *v18);
    if (*(_BYTE *)(v3 + *v18))
      v22 = 0;
LABEL_25:
    if (v27 || (v22 & 7) == 4)
    {
LABEL_74:
      if ((v16 & 1) != 0)
      {
        v42 = 1;
        goto LABEL_87;
      }
      if (v15)
      {
        while (1)
        {
          v43 = *v15++;
          v44 = 4;
          switch(v43)
          {
            case 0:
              goto LABEL_88;
            case 1:
              goto LABEL_82;
            case 2:
              v44 = 16;
              goto LABEL_82;
            case 3:
              v44 = 8;
              goto LABEL_82;
            case 4:
              v44 = 2;
              goto LABEL_82;
            case 5:
              v44 = 1;
LABEL_82:
              *(_BYTE *)(a1 + 68) |= v44;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_88;
    }
    v29 = v22 >> 3;
    v30 = (char)v16;
    if ((v48 & 1) == 0)
    {
      v31 = v15;
      do
      {
        v33 = *v31++;
        v32 = v33;
        v30 = v33 != 0;
        if (v33)
          v34 = v32 == (_DWORD)v29;
        else
          v34 = 1;
      }
      while (!v34);
    }
    switch((int)v29)
    {
      case 1:
        if (!v30)
          goto LABEL_63;
        if ((*(_BYTE *)(a1 + 68) & 4) == 0)
        {
          PBReaderReadString();
          v35 = objc_claimAutoreleasedReturnValue();
          v36 = 32;
          goto LABEL_45;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_84;
        v41 = 32 * *(_BYTE *)(a1 + 68);
        goto LABEL_71;
      case 2:
        if (!v30)
          goto LABEL_63;
        if ((*(_BYTE *)(a1 + 68) & 0x10) == 0)
        {
          PBReaderReadString();
          v35 = objc_claimAutoreleasedReturnValue();
          v36 = 48;
LABEL_45:
          v38 = *(void **)(a1 + v36);
          *(_QWORD *)(a1 + v36) = v35;

          --v7;
          goto LABEL_72;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_84;
        v41 = 8 * *(_BYTE *)(a1 + 68);
        goto LABEL_71;
      case 3:
        if (!v30)
          goto LABEL_63;
        if ((*(_BYTE *)(a1 + 68) & 8) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_84;
          v47 = (int)v16;
          v16 = objc_alloc_init(GEOMapRegionE7);
          if (!GEOMapRegionE7ReadAllFrom((uint64_t)v16, (void *)v3))
            goto LABEL_85;
          PBReaderRecallMark();
          v39 = *(void **)(a1 + 40);
          *(_QWORD *)(a1 + 40) = v16;

          --v7;
          goto LABEL_62;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_84:
          v42 = 0;
          goto LABEL_86;
        }
        v41 = 16 * *(_BYTE *)(a1 + 68);
LABEL_71:
        v7 += v41 >> 7;
        goto LABEL_72;
      case 4:
        if (!v30 || (*(_BYTE *)(a1 + 68) & 2) != 0)
          goto LABEL_63;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_84;
        v47 = (int)v16;
        v16 = objc_alloc_init(GEOLPRDefinedPlateType);
        if (!GEOLPRDefinedPlateTypeReadAllFrom((uint64_t)v16, (void *)v3, v9 & 1))
          goto LABEL_85;
        PBReaderRecallMark();
        -[GEOLPRRestrictionRegion _addNoFlagsDefinedPlateTypes:](a1, v16);
        goto LABEL_61;
      case 5:
        if (!v30 || (*(_BYTE *)(a1 + 68) & 1) != 0)
        {
LABEL_63:
          v40 = PBReaderSkipValueWithTag();
          v18 = (int *)MEMORY[0x1E0D82BC8];
          if ((v40 & 1) == 0)
          {
LABEL_83:
            v42 = 0;
            goto LABEL_87;
          }
LABEL_73:
          if (!(v16 & 1 | (v7 != 0)))
            goto LABEL_74;
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_84;
        v47 = (int)v16;
        v16 = objc_alloc_init(GEOLPRLPRConvertRule);
        if (GEOLPRLPRConvertRuleReadAllFrom((uint64_t)v16, (void *)v3, v9 & 1))
        {
          PBReaderRecallMark();
          -[GEOLPRRestrictionRegion _addNoFlagsConvertRule:](a1, v16);
LABEL_61:

LABEL_62:
          LODWORD(v16) = v47;
LABEL_72:
          v18 = (int *)MEMORY[0x1E0D82BC8];
          goto LABEL_73;
        }
LABEL_85:

        v42 = 0;
        LOBYTE(v16) = v47;
LABEL_86:
        v18 = (int *)MEMORY[0x1E0D82BC8];
LABEL_87:
        *(_BYTE *)(a1 + 68) |= 4u;
        *(_BYTE *)(a1 + 68) |= 0x10u;
        *(_BYTE *)(a1 + 68) |= 8u;
        *(_BYTE *)(a1 + 68) |= 2u;
        *(_BYTE *)(a1 + 68) |= 1u;
        if ((v42 & 1) != 0)
        {
LABEL_88:
          v3 = *(_BYTE *)(v3 + *v18) == 0;
          if ((v16 & 1) != 0)
            goto LABEL_89;
        }
        else
        {
          v3 = 0;
          if ((v16 & 1) != 0)
          {
LABEL_89:
            v45 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = 0;

          }
        }
        return v3;
      default:
        v37 = PBReaderSkipValueWithTag();
        v18 = (int *)MEMORY[0x1E0D82BC8];
        if (!v37)
          goto LABEL_83;
        goto LABEL_73;
    }
  }
}

void sub_188CA6164(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CA6248(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CA6388(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CA64CC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CA6800(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CA736C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOLPRRestrictionRegionCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  _BYTE v20[128];
  _BYTE v21[128];
  uint64_t v22;

  v22 = *MEMORY[0x1E0C80C00];
  objc_msgSend(a1[5], "readAll:", 1);
  v18 = 0u;
  v19 = 0u;
  v16 = 0u;
  v17 = 0u;
  v2 = a1[3];
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v16, v21, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v17;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v17 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v16 + 1) + 8 * v6++), "readAll:", 1);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v16, v21, 16);
    }
    while (v4);
  }

  v14 = 0u;
  v15 = 0u;
  v12 = 0u;
  v13 = 0u;
  v7 = a1[2];
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v12, v20, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v13;
    do
    {
      v11 = 0;
      do
      {
        if (*(_QWORD *)v13 != v10)
          objc_enumerationMutation(v7);
        objc_msgSend(*(id *)(*((_QWORD *)&v12 + 1) + 8 * v11++), "readAll:", 1, (_QWORD)v12);
      }
      while (v9 != v11);
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v12, v20, 16);
    }
    while (v9);
  }

}

unint64_t GEOLPRRestrictionRegionReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 60))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOLPRRestrictionRegionReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 60) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOLPRRestrictionRegionReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOLPRRestrictionRegionReadAllFrom_initialTag;
  Specified = GEOLPRRestrictionRegionReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOLPRRestrictionRegionCallReadAllRecursiveWithoutSynchronized((id *)a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_188CA76A8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLPRRestrictionRegionReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOLPRRestrictionRegionReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188CA7708(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CA79F8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOLPRRestrictionRegionIsDirty(uint64_t a1)
{
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t i;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _BYTE v11[128];
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  if ((*(_BYTE *)(a1 + 68) & 0x3F) != 0)
    return 1;
  if ((*(_BYTE *)(a1 + 68) & 1) == 0)
    return 0;
  v9 = 0u;
  v10 = 0u;
  v7 = 0u;
  v8 = 0u;
  v3 = *(id *)(a1 + 16);
  v2 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
  if (v2)
  {
    v4 = *(_QWORD *)v8;
    while (2)
    {
      for (i = 0; i != v2; ++i)
      {
        if (*(_QWORD *)v8 != v4)
          objc_enumerationMutation(v3);
        if ((GEOLPRLPRConvertRuleIsDirty(*(os_unfair_lock_s **)(*((_QWORD *)&v7 + 1) + 8 * i)) & 1) != 0)
        {
          v2 = 1;
          goto LABEL_15;
        }
      }
      v2 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
      if (v2)
        continue;
      break;
    }
  }
LABEL_15:

  return v2;
}

os_unfair_lock_s *GEOLPRRestrictionRegionIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOLPRRestrictionRegionIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 16);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_188CA8028(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLPRTargetCharReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  char v23;
  unsigned int v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  int *v28;
  _BOOL8 v29;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          if (v12 == -1 || v12 >= *(_QWORD *)&v3[*v5])
            break;
          v13 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v12 + 1;
          v10 |= (unint64_t)(v13 & 0x7F) << v8;
          if ((v13 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v14 = v9++ >= 9;
          if (v14)
          {
            v10 = 0;
            v15 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v15 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v15 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 2)
        {
          v23 = 0;
          v24 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 16) |= 1u;
          while (1)
          {
            v25 = *v4;
            v26 = *(_QWORD *)&v3[v25];
            if (v26 == -1 || v26 >= *(_QWORD *)&v3[*v5])
              break;
            v27 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v26);
            *(_QWORD *)&v3[v25] = v26 + 1;
            v19 |= (unint64_t)(v27 & 0x7F) << v23;
            if ((v27 & 0x80) == 0)
              goto LABEL_42;
            v23 += 7;
            v14 = v24++ >= 9;
            if (v14)
            {
              LODWORD(v19) = 0;
              goto LABEL_44;
            }
          }
          v3[*v6] = 1;
LABEL_42:
          if (v3[*v6])
            LODWORD(v19) = 0;
LABEL_44:
          LODWORD(v19) = -(v19 & 1) ^ ((int)v19 >> 1);
          v28 = &OBJC_IVAR___GEOLPRTargetChar__charIndex;
        }
        else
        {
          if ((v10 >> 3) != 1)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0)
              goto LABEL_48;
            continue;
          }
          v17 = 0;
          v18 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 16) |= 2u;
          while (1)
          {
            v20 = *v4;
            v21 = *(_QWORD *)&v3[v20];
            if (v21 == -1 || v21 >= *(_QWORD *)&v3[*v5])
              break;
            v22 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v21);
            *(_QWORD *)&v3[v20] = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              goto LABEL_38;
            v17 += 7;
            v14 = v18++ >= 9;
            if (v14)
            {
              LODWORD(v19) = 0;
              goto LABEL_40;
            }
          }
          v3[*v6] = 1;
LABEL_38:
          if (v3[*v6])
            LODWORD(v19) = 0;
LABEL_40:
          v28 = &OBJC_IVAR___GEOLPRTargetChar__type;
        }
        *(_DWORD *)(a1 + *v28) = v19;
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v29 = v3[*v6] == 0;
  }
  else
  {
LABEL_48:
    v29 = 0;
  }
  objc_sync_exit(v3);

  return v29;
}

void sub_188CA8C78(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLPRTargetCharReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOLPRTargetCharReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188CA8CD8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CA9218(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLPRTimeConditionReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  char v7;
  uint64_t v8;
  char v9;
  int v10;
  unsigned int v11;
  _BOOL4 v12;
  int *v13;
  int *v14;
  int *v15;
  BOOL v16;
  _BOOL4 v17;
  int *v18;
  char v19;
  unsigned int v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  BOOL v25;
  int v26;
  int v27;
  unint64_t v29;
  _BOOL4 v30;
  int *v31;
  int v32;
  int v33;
  BOOL v34;
  char v35;
  unsigned int v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  char v41;
  unsigned int v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  char v46;
  char v47;
  unsigned int v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  char v52;
  char v53;
  unsigned int v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  char v58;
  char v59;
  int v60;
  int v61;
  char v62;
  void *v63;
  _BOOL4 v65;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 68);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 64));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = ((*(unsigned __int8 *)(a1 + 76) >> 1) & 1) + (*(_BYTE *)(a1 + 76) & 1);
  while (1)
  {
    v11 = a3[v8];
    if (v11 >= 0xFFFFFFFE)
    {
      v9 = 1;
      goto LABEL_9;
    }
    if (v11 != -3)
      break;
    v7 = 1;
LABEL_9:
    ++v8;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  v12 = (v9 & 1 | v10) != 0;
  if (((v9 & 1 | v10) != 0) | v7 & 1)
    v13 = 0;
  else
    v13 = a3;
  v14 = (int *)MEMORY[0x1E0D82BF0];
  v15 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(v3 + *v6))
  {
LABEL_101:
    if (v12)
    {
      v59 = 1;
      goto LABEL_103;
    }
    if (!v13)
      goto LABEL_114;
    while (1)
    {
      v61 = *v13++;
      v60 = v61;
      if (v61 == 1)
        break;
      if (v60 == 2)
      {
        v62 = 1;
LABEL_113:
        *(_BYTE *)(a1 + 76) |= v62;
      }
      else if (!v60)
      {
        goto LABEL_114;
      }
    }
    v62 = 2;
    goto LABEL_113;
  }
  if (v13)
    v16 = (v9 & 1 | v10) != 0;
  else
    v16 = 1;
  if (v8)
    v17 = 1;
  else
    v17 = (v9 & 1 | v10) != 0;
  v65 = v17;
  v18 = (int *)MEMORY[0x1E0D82BB8];
  while (1)
  {
    if (*(_BYTE *)(v3 + *v15))
      goto LABEL_101;
    v19 = 0;
    v20 = 0;
    v21 = 0;
    while (1)
    {
      v22 = *v14;
      v23 = *(_QWORD *)(v3 + v22);
      if (v23 == -1 || v23 >= *(_QWORD *)(v3 + *v6))
        break;
      v24 = *(_BYTE *)(*(_QWORD *)(v3 + *v18) + v23);
      *(_QWORD *)(v3 + v22) = v23 + 1;
      v21 |= (unint64_t)(v24 & 0x7F) << v19;
      if ((v24 & 0x80) == 0)
        goto LABEL_30;
      v19 += 7;
      v25 = v20++ >= 9;
      if (v25)
      {
        v21 = 0;
        v26 = *(unsigned __int8 *)(v3 + *v15);
        goto LABEL_32;
      }
    }
    *(_BYTE *)(v3 + *v15) = 1;
LABEL_30:
    v26 = *(unsigned __int8 *)(v3 + *v15);
    if (*(_BYTE *)(v3 + *v15))
      v21 = 0;
LABEL_32:
    v27 = v21 & 7;
    if (v26 || v27 == 4)
      goto LABEL_101;
    v29 = v21 >> 3;
    v30 = v12;
    if (!v16)
    {
      v31 = v13;
      do
      {
        v33 = *v31++;
        v32 = v33;
        v30 = v33 != 0;
        if (v33)
          v34 = v32 == (_DWORD)v29;
        else
          v34 = 1;
      }
      while (!v34);
    }
    if ((_DWORD)v29 == 2)
      break;
    if ((_DWORD)v29 != 1)
    {
      if (!PBReaderSkipValueWithTag())
        goto LABEL_117;
      goto LABEL_78;
    }
    if (!v30 || (*(_BYTE *)(a1 + 76) & 2) != 0)
      goto LABEL_77;
    if (v27 != 2)
    {
      v47 = 0;
      v48 = 0;
      v49 = 0;
      while (1)
      {
        v50 = *v14;
        v51 = *(_QWORD *)(v3 + v50);
        if (v51 == -1 || v51 >= *(_QWORD *)(v3 + *v6))
          break;
        v52 = *(_BYTE *)(*(_QWORD *)(v3 + *v18) + v51);
        *(_QWORD *)(v3 + v50) = v51 + 1;
        v49 |= (unint64_t)(v52 & 0x7F) << v47;
        if (v52 < 0)
        {
          v47 += 7;
          v25 = v48++ >= 9;
          if (!v25)
            continue;
        }
        goto LABEL_98;
      }
      *(_BYTE *)(v3 + *v15) = 1;
LABEL_98:
      PBRepeatedInt32Add();
      goto LABEL_78;
    }
    if (!PBReaderPlaceMark())
      goto LABEL_117;
    while (*(_QWORD *)(v3 + *v14) < *(_QWORD *)(v3 + *v6) && !*(_BYTE *)(v3 + *v15))
    {
      v35 = 0;
      v36 = 0;
      v37 = 0;
      while (1)
      {
        v38 = *v14;
        v39 = *(_QWORD *)(v3 + v38);
        if (v39 == -1 || v39 >= *(_QWORD *)(v3 + *v6))
          break;
        v40 = *(_BYTE *)(*(_QWORD *)(v3 + *v18) + v39);
        *(_QWORD *)(v3 + v38) = v39 + 1;
        v37 |= (unint64_t)(v40 & 0x7F) << v35;
        if (v40 < 0)
        {
          v35 += 7;
          v25 = v36++ >= 9;
          if (!v25)
            continue;
        }
        goto LABEL_59;
      }
      *(_BYTE *)(v3 + *v15) = 1;
LABEL_59:
      PBRepeatedInt32Add();
    }
LABEL_81:
    PBReaderRecallMark();
    if (!v65)
      goto LABEL_101;
LABEL_79:
    if (*(_QWORD *)(v3 + *v14) >= *(_QWORD *)(v3 + *v6))
      goto LABEL_101;
  }
  if (v30 && (*(_BYTE *)(a1 + 76) & 1) == 0)
  {
    if (v27 == 2)
    {
      if (!PBReaderPlaceMark())
        goto LABEL_117;
      while (*(_QWORD *)(v3 + *v14) < *(_QWORD *)(v3 + *v6) && !*(_BYTE *)(v3 + *v15))
      {
        v41 = 0;
        v42 = 0;
        v43 = 0;
        while (1)
        {
          v44 = *v14;
          v45 = *(_QWORD *)(v3 + v44);
          if (v45 == -1 || v45 >= *(_QWORD *)(v3 + *v6))
            break;
          v46 = *(_BYTE *)(*(_QWORD *)(v3 + *v18) + v45);
          *(_QWORD *)(v3 + v44) = v45 + 1;
          v43 |= (unint64_t)(v46 & 0x7F) << v41;
          if (v46 < 0)
          {
            v41 += 7;
            v25 = v42++ >= 9;
            if (!v25)
              continue;
          }
          goto LABEL_74;
        }
        *(_BYTE *)(v3 + *v15) = 1;
LABEL_74:
        PBRepeatedUInt32Add();
      }
      goto LABEL_81;
    }
    v53 = 0;
    v54 = 0;
    v55 = 0;
    while (1)
    {
      v56 = *v14;
      v57 = *(_QWORD *)(v3 + v56);
      if (v57 == -1 || v57 >= *(_QWORD *)(v3 + *v6))
        break;
      v58 = *(_BYTE *)(*(_QWORD *)(v3 + *v18) + v57);
      *(_QWORD *)(v3 + v56) = v57 + 1;
      v55 |= (unint64_t)(v58 & 0x7F) << v53;
      if (v58 < 0)
      {
        v53 += 7;
        v25 = v54++ >= 9;
        if (!v25)
          continue;
      }
      goto LABEL_100;
    }
    *(_BYTE *)(v3 + *v15) = 1;
LABEL_100:
    PBRepeatedUInt32Add();
LABEL_78:
    if (!v65)
      goto LABEL_101;
    goto LABEL_79;
  }
LABEL_77:
  if ((PBReaderSkipValueWithTag() & 1) != 0)
    goto LABEL_78;
LABEL_117:
  v59 = 0;
LABEL_103:
  *(_BYTE *)(a1 + 76) |= 2u;
  *(_BYTE *)(a1 + 76) |= 1u;
  if ((v59 & 1) != 0)
  {
LABEL_114:
    v3 = *(_BYTE *)(v3 + *v15) == 0;
    if (v12)
      goto LABEL_115;
    return v3;
  }
  v3 = 0;
  if (!v12)
    return v3;
LABEL_115:
  v63 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = 0;

  return v3;
}

void sub_188CA9CE4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CAA600(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLPRTimeConditionReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 68))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOLPRTimeConditionReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 72));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 64) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 68) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOLPRTimeConditionReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOLPRTimeConditionReadAllFrom_initialTag;
  Specified = GEOLPRTimeConditionReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return Specified;
}

void sub_188CAA78C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLPRTimeConditionReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOLPRTimeConditionReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188CAA7EC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLPRTimeConditionIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  BOOL v12;
  int v13;
  int v14;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int v19;
  unsigned int v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  int v24;
  unsigned int v25;
  unsigned int v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  int v30;
  unsigned int v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  int v35;
  _BOOL8 v36;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_59;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        if (v10 == -1 || v10 >= *(_QWORD *)&a1[*v3])
          break;
        v11 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        v12 = v7++ >= 9;
        if (v12)
        {
          v8 = 0;
          v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v13 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v14 = v8 & 7;
      if (v13 || v14 == 4)
        goto LABEL_59;
      if ((v8 >> 3) == 2)
        break;
      if ((v8 >> 3) == 1)
      {
        if (v14 == 2)
        {
          if (!PBReaderPlaceMark())
            goto LABEL_61;
LABEL_38:
          while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
          {
            v26 = a1[*v4];
            if (a1[*v4])
              break;
            while (1)
            {
              v27 = *v2;
              v28 = *(_QWORD *)&a1[v27];
              if (v28 == -1 || v28 >= *(_QWORD *)&a1[*v3])
                break;
              v29 = v28 + 1;
              v30 = *(char *)(*(_QWORD *)&a1[*v5] + v28);
              *(_QWORD *)&a1[v27] = v29;
              if (v30 < 0)
              {
                v12 = v26++ >= 9;
                if (!v12)
                  continue;
              }
              goto LABEL_38;
            }
            a1[*v4] = 1;
          }
LABEL_57:
          PBReaderRecallMark();
          goto LABEL_58;
        }
        if ((v8 & 7) != 0)
          goto LABEL_61;
        while (1)
        {
          v16 = *v2;
          v17 = *(_QWORD *)&a1[v16];
          if (v17 == -1 || v17 >= *(_QWORD *)&a1[*v3])
            break;
          v18 = v17 + 1;
          v19 = *(char *)(*(_QWORD *)&a1[*v5] + v17);
          *(_QWORD *)&a1[v16] = v18;
          if (v19 < 0)
          {
            v20 = v14++;
            if (v20 <= 8)
              continue;
          }
          goto LABEL_58;
        }
LABEL_36:
        a1[*v4] = 1;
        goto LABEL_58;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        goto LABEL_61;
LABEL_58:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_59;
    }
    if (v14 == 2)
    {
      if (!PBReaderPlaceMark())
      {
LABEL_61:
        PBReaderRecallMark();
        return 0;
      }
LABEL_48:
      while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
      {
        v31 = a1[*v4];
        if (a1[*v4])
          break;
        while (1)
        {
          v32 = *v2;
          v33 = *(_QWORD *)&a1[v32];
          if (v33 == -1 || v33 >= *(_QWORD *)&a1[*v3])
            break;
          v34 = v33 + 1;
          v35 = *(char *)(*(_QWORD *)&a1[*v5] + v33);
          *(_QWORD *)&a1[v32] = v34;
          if (v35 < 0)
          {
            v12 = v31++ >= 9;
            if (!v12)
              continue;
          }
          goto LABEL_48;
        }
        a1[*v4] = 1;
      }
      goto LABEL_57;
    }
    if ((v8 & 7) != 0)
      goto LABEL_61;
    while (1)
    {
      v21 = *v2;
      v22 = *(_QWORD *)&a1[v21];
      if (v22 == -1 || v22 >= *(_QWORD *)&a1[*v3])
        goto LABEL_36;
      v23 = v22 + 1;
      v24 = *(char *)(*(_QWORD *)&a1[*v5] + v22);
      *(_QWORD *)&a1[v21] = v23;
      if (v24 < 0)
      {
        v25 = v14++;
        if (v25 <= 8)
          continue;
      }
      goto LABEL_58;
    }
  }
LABEL_59:
  v36 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v36;
}

void sub_188CAAD38(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLPRTimeConditionIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  v2 = (*(_BYTE *)(a1 + 76) & 7) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return v2;
}

void sub_188CAB020(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CAB344(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLPRValueMappingReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  int *v15;
  int *v16;
  int *v17;
  int *v18;
  char v19;
  unsigned int v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  int v26;
  unint64_t v28;
  BOOL v29;
  int *v30;
  int v31;
  int v32;
  BOOL v33;
  GEOLPRTimeCondition *v34;
  char v35;
  int v36;
  char v37;
  void *v38;
  char v40;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1)
      + (*(_BYTE *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v8])
    {
      case -3:
        v7 = 1;
        goto LABEL_6;
      case -2:
        v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v10 | (v11 > 1);
        if (v10 & 1 | (v11 > 1) | v7 & 1)
          v15 = 0;
        else
          v15 = a3;
        v16 = (int *)MEMORY[0x1E0D82BF0];
        v17 = (int *)MEMORY[0x1E0D82BC8];
        v40 = (v8 != 0) | v14;
        v18 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_6:
        v12 = v9;
        v13 = v10;
LABEL_8:
        ++v8;
        v9 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v16) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v17))
      goto LABEL_57;
    v19 = 0;
    v20 = 0;
    v21 = 0;
    while (1)
    {
      v22 = *v16;
      v23 = *(_QWORD *)(v3 + v22);
      if (v23 == -1 || v23 >= *(_QWORD *)(v3 + *v6))
        break;
      v24 = *(_BYTE *)(*(_QWORD *)(v3 + *v18) + v23);
      *(_QWORD *)(v3 + v22) = v23 + 1;
      v21 |= (unint64_t)(v24 & 0x7F) << v19;
      if ((v24 & 0x80) == 0)
        goto LABEL_23;
      v19 += 7;
      if (v20++ >= 9)
      {
        v21 = 0;
        v26 = *(unsigned __int8 *)(v3 + *v17);
        goto LABEL_25;
      }
    }
    *(_BYTE *)(v3 + *v17) = 1;
LABEL_23:
    v26 = *(unsigned __int8 *)(v3 + *v17);
    if (*(_BYTE *)(v3 + *v17))
      v21 = 0;
LABEL_25:
    if (v26 || (v21 & 7) == 4)
    {
LABEL_57:
      if ((v14 & 1) != 0)
      {
        v35 = 1;
        goto LABEL_65;
      }
      if (v15)
      {
        while (1)
        {
          v36 = *v15++;
          v37 = 4;
          switch(v36)
          {
            case 0:
              goto LABEL_66;
            case 1:
              goto LABEL_63;
            case 2:
              v37 = 1;
              goto LABEL_63;
            case 3:
              v37 = 2;
LABEL_63:
              *(_BYTE *)(a1 + 52) |= v37;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_66;
    }
    v28 = v21 >> 3;
    v29 = v14;
    if (!((v15 == 0) | v14 & 1))
    {
      v30 = v15;
      do
      {
        v32 = *v30++;
        v31 = v32;
        v29 = v32 != 0;
        if (v32)
          v33 = v31 == (_DWORD)v28;
        else
          v33 = 1;
      }
      while (!v33);
    }
    if ((_DWORD)v28 == 3)
      break;
    if ((_DWORD)v28 == 2)
    {
      if (v29 && (*(_BYTE *)(a1 + 52) & 1) == 0)
      {
        PBReaderReadString();
        v34 = (GEOLPRTimeCondition *)objc_claimAutoreleasedReturnValue();
        if (v34)
          -[GEOLPRValueMapping _addNoFlagsMappedValue:](a1, v34);
        goto LABEL_52;
      }
    }
    else
    {
      if ((_DWORD)v28 != 1)
      {
        if (!PBReaderSkipValueWithTag())
          goto LABEL_64;
        goto LABEL_56;
      }
      if (v29 && (*(_BYTE *)(a1 + 52) & 4) == 0)
      {
        PBReaderReadString();
        v34 = (GEOLPRTimeCondition *)objc_claimAutoreleasedReturnValue();
        if (v34)
          -[GEOLPRValueMapping _addNoFlagsValue:](a1, v34);
        goto LABEL_52;
      }
    }
LABEL_55:
    if ((PBReaderSkipValueWithTag() & 1) == 0)
    {
LABEL_64:
      v35 = 0;
      goto LABEL_65;
    }
LABEL_56:
    if ((v40 & 1) == 0)
      goto LABEL_57;
  }
  if (!v29 || (*(_BYTE *)(a1 + 52) & 2) != 0)
    goto LABEL_55;
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_64;
  v34 = objc_alloc_init(GEOLPRTimeCondition);
  if (GEOLPRTimeConditionReadAllFrom((uint64_t)v34, (void *)v3, v9 & 1))
  {
    PBReaderRecallMark();
    -[GEOLPRValueMapping _addNoFlagsTimeConditions:](a1, v34);
LABEL_52:

    v17 = (int *)MEMORY[0x1E0D82BC8];
    goto LABEL_56;
  }

  v35 = 0;
  v17 = (int *)MEMORY[0x1E0D82BC8];
LABEL_65:
  *(_BYTE *)(a1 + 52) |= 4u;
  *(_BYTE *)(a1 + 52) |= 1u;
  *(_BYTE *)(a1 + 52) |= 2u;
  if ((v35 & 1) != 0)
  {
LABEL_66:
    v3 = *(_BYTE *)(v3 + *v17) == 0;
    if ((v14 & 1) == 0)
      return v3;
    goto LABEL_67;
  }
  v3 = 0;
  if ((v14 & 1) != 0)
  {
LABEL_67:
    v38 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_188CABAD4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CABE08(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CAC7E4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOLPRValueMappingCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _BYTE v10[128];
  uint64_t v11;

  v11 = *MEMORY[0x1E0C80C00];
  v6 = 0u;
  v7 = 0u;
  v8 = 0u;
  v9 = 0u;
  v1 = *(id *)(a1 + 24);
  v2 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
  if (v2)
  {
    v3 = v2;
    v4 = *(_QWORD *)v7;
    do
    {
      v5 = 0;
      do
      {
        if (*(_QWORD *)v7 != v4)
          objc_enumerationMutation(v1);
        objc_msgSend(*(id *)(*((_QWORD *)&v6 + 1) + 8 * v5++), "readAll:", 1, (_QWORD)v6);
      }
      while (v3 != v5);
      v3 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
    }
    while (v3);
  }

}

unint64_t GEOLPRValueMappingReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOLPRValueMappingReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOLPRValueMappingReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOLPRValueMappingReadAllFrom_initialTag;
  Specified = GEOLPRValueMappingReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOLPRValueMappingCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_188CACA70(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLPRValueMappingReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOLPRValueMappingReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188CACAD0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CACE0C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOLPRValueMappingIsDirty(uint64_t a1)
{
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t i;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _BYTE v11[128];
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  if ((*(_BYTE *)(a1 + 52) & 0xF) != 0)
    return 1;
  if ((*(_BYTE *)(a1 + 52) & 2) == 0)
    return 0;
  v9 = 0u;
  v10 = 0u;
  v7 = 0u;
  v8 = 0u;
  v3 = *(id *)(a1 + 24);
  v2 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
  if (v2)
  {
    v4 = *(_QWORD *)v8;
    while (2)
    {
      for (i = 0; i != v2; ++i)
      {
        if (*(_QWORD *)v8 != v4)
          objc_enumerationMutation(v3);
        if (GEOLPRTimeConditionIsDirty(*(_QWORD *)(*((_QWORD *)&v7 + 1) + 8 * i)))
        {
          v2 = 1;
          goto LABEL_15;
        }
      }
      v2 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
      if (v2)
        continue;
      break;
    }
  }
LABEL_15:

  return v2;
}

os_unfair_lock_s *GEOLPRValueMappingIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOLPRValueMappingIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 12);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_188CAD4AC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

__CFString *GEOMapDataSubscriptionDataTypeAsString(__int16 a1)
{
  void *v2;
  void *v3;
  __CFString *v4;

  objc_msgSend(MEMORY[0x1E0C99DE8], "array");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = v2;
  if ((a1 & 1) != 0)
  {
    objc_msgSend(v2, "addObject:", CFSTR("mapMatchingRoads"));
    if ((a1 & 2) == 0)
    {
LABEL_3:
      if ((a1 & 4) == 0)
        goto LABEL_4;
      goto LABEL_12;
    }
  }
  else if ((a1 & 2) == 0)
  {
    goto LABEL_3;
  }
  objc_msgSend(v3, "addObject:", CFSTR("mapMatchingBuildings"));
  if ((a1 & 4) == 0)
  {
LABEL_4:
    if ((a1 & 8) == 0)
      goto LABEL_5;
    goto LABEL_13;
  }
LABEL_12:
  objc_msgSend(v3, "addObject:", CFSTR("mapMatchingRunningTracks"));
  if ((a1 & 8) == 0)
  {
LABEL_5:
    if ((a1 & 0x400) == 0)
      goto LABEL_6;
    goto LABEL_14;
  }
LABEL_13:
  objc_msgSend(v3, "addObject:", CFSTR("mapMatchingRayTracing"));
  if ((a1 & 0x400) == 0)
  {
LABEL_6:
    if ((a1 & 0x800) == 0)
      goto LABEL_8;
    goto LABEL_7;
  }
LABEL_14:
  objc_msgSend(v3, "addObject:", CFSTR("offline"));
  if ((a1 & 0x800) != 0)
LABEL_7:
    objc_msgSend(v3, "addObject:", CFSTR("resources"));
LABEL_8:
  if (objc_msgSend(v3, "count"))
  {
    objc_msgSend(v3, "componentsJoinedByString:", CFSTR("|"));
    v4 = (__CFString *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v4 = CFSTR("<unknown>");
  }

  return v4;
}

const __CFString *GEOMapDataSubscriptionPolicyAsString(uint64_t a1)
{
  const __CFString *v1;

  v1 = CFSTR("<unknown>");
  if (a1 == 1)
    v1 = CFSTR("user-initiated");
  if (a1)
    return v1;
  else
    return CFSTR("opportunistic");
}

void _GEOEnumerateTileSetsForSubscriptionDataTypes(void *a1, char a2, void *a3)
{
  id v5;
  void (**v6)(id, uint64_t, void *, uint64_t, _BYTE *);
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  char v12;

  v5 = a1;
  v6 = a3;
  v12 = 0;
  if ((a2 & 1) != 0)
  {
    objc_msgSend(v5, "activeTileGroup");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "activeTileSetForStyle:", 53);
    v8 = (void *)objc_claimAutoreleasedReturnValue();

    if (v8)
    {
      v6[2](v6, 1, v8, ((objc_msgSend(v8, "style") & 0x3FFF | ((objc_msgSend(v8, "size") & 0xF) << 14) & 0xFFC3FFFF | ((objc_msgSend(v8, "scale") & 0xF) << 18)) << 8) | 1, &v12);
      if (v12)
        goto LABEL_16;
    }

  }
  if ((a2 & 2) != 0)
  {
    objc_msgSend(v5, "activeTileGroup");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "activeTileSetForStyle:", 11);
    v8 = (void *)objc_claimAutoreleasedReturnValue();

    if (v8)
    {
      v6[2](v6, 2, v8, ((objc_msgSend(v8, "style") & 0x3FFF | ((objc_msgSend(v8, "size") & 0xF) << 14) & 0xFFC3FFFF | ((objc_msgSend(v8, "scale") & 0xF) << 18)) << 8) | 1, &v12);
      if (v12)
        goto LABEL_16;
    }

  }
  if ((a2 & 4) == 0)
    goto LABEL_13;
  objc_msgSend(v5, "activeTileGroup");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "activeTileSetForStyle:", 62);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  if (v8)
  {
    v6[2](v6, 4, v8, ((objc_msgSend(v8, "style") & 0x3FFF | ((objc_msgSend(v8, "size") & 0xF) << 14) & 0xFFC3FFFF | ((objc_msgSend(v8, "scale") & 0xF) << 18)) << 8) | 1, &v12);
    if (v12)
    {
LABEL_16:

      goto LABEL_17;
    }
  }

LABEL_13:
  if ((a2 & 8) != 0)
  {
    objc_msgSend(v5, "activeTileGroup");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "activeTileSetForStyle:", 89);
    v8 = (void *)objc_claimAutoreleasedReturnValue();

    if (v8)
      v6[2](v6, 8, v8, ((objc_msgSend(v8, "style") & 0x3FFF | ((objc_msgSend(v8, "size") & 0xF) << 14) & 0xFFC3FFFF | ((objc_msgSend(v8, "scale") & 0xF) << 18)) << 8) | 1, &v12);
    goto LABEL_16;
  }
LABEL_17:

}

void _GEOEnumerateMapDataSubscriptionTileDataTypes(void *a1)
{
  void (**v1)(id, uint64_t, _BYTE *);
  char v2;

  v1 = a1;
  v2 = 0;
  v1[2](v1, 1, &v2);
  if (!v2)
  {
    v1[2](v1, 2, &v2);
    if (!v2)
    {
      v1[2](v1, 4, &v2);
      if (!v2)
        v1[2](v1, 8, &v2);
    }
  }

}

void sub_188CAEB44(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_188CAEE54(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

void sub_188CAF314(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_188CAF3A0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_188CAF534(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  v3 = v2;

  _Unwind_Resume(a1);
}

void sub_188CAF6C0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDGroundMetadataTileReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  char v15;
  int *v16;
  int *v17;
  int *v18;
  int *v19;
  char v20;
  unsigned int v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  BOOL v26;
  int v27;
  unint64_t v29;
  BOOL v30;
  int *v31;
  int v32;
  int v33;
  BOOL v34;
  int v35;
  void *v36;
  char v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  char v43;
  char v44;
  int v45;
  char v46;
  void *v47;
  GEOPDPhotoPosition *v49;
  char v50;
  char v51;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 60);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 56));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = (vaddv_s16((int16x4_t)(*(_QWORD *)&vshl_u16((uint16x4_t)(*(_QWORD *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 72)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFEFFFFFFFCFFFBLL) & 0xFF01FF01FF01FF01))+ ((*(_BYTE *)(a1 + 72) & 8) != 0));
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v7])
    {
      case -3:
        v8 = 1;
        goto LABEL_6;
      case -2:
        v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v11 > 3;
        v15 = v10 | v14;
        if ((((v10 | v14) | v8) & 1) != 0)
          v16 = 0;
        else
          v16 = a3;
        v51 = (v16 == 0) | v15;
        v17 = (int *)MEMORY[0x1E0D82BF0];
        v18 = (int *)MEMORY[0x1E0D82BC8];
        v19 = (int *)MEMORY[0x1E0D82BB8];
        v50 = v10 | v14;
        break;
      default:
        ++v11;
LABEL_6:
        v12 = v9;
        v13 = v10;
LABEL_8:
        ++v7;
        v9 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v17) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v18))
      goto LABEL_83;
    v20 = 0;
    v21 = 0;
    v22 = 0;
    while (1)
    {
      v23 = *v17;
      v24 = *(_QWORD *)(v3 + v23);
      if (v24 == -1 || v24 >= *(_QWORD *)(v3 + *v6))
        break;
      v25 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v24);
      *(_QWORD *)(v3 + v23) = v24 + 1;
      v22 |= (unint64_t)(v25 & 0x7F) << v20;
      if ((v25 & 0x80) == 0)
        goto LABEL_23;
      v20 += 7;
      v26 = v21++ >= 9;
      if (v26)
      {
        v22 = 0;
        v27 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(_BYTE *)(v3 + *v18) = 1;
LABEL_23:
    v27 = *(unsigned __int8 *)(v3 + *v18);
    if (*(_BYTE *)(v3 + *v18))
      v22 = 0;
LABEL_25:
    if (v27 || (v22 & 7) == 4)
    {
LABEL_83:
      if ((v15 & 1) != 0)
      {
        v44 = 1;
        goto LABEL_95;
      }
      if (v16)
      {
        while (1)
        {
          v45 = *v16++;
          v46 = 16;
          switch(v45)
          {
            case 0:
              goto LABEL_96;
            case 1:
              goto LABEL_91;
            case 3:
              v46 = 32;
              goto LABEL_91;
            case 4:
              v46 = 2;
              goto LABEL_91;
            case 5:
              v46 = 4;
              goto LABEL_91;
            case 6:
              v46 = 8;
LABEL_91:
              *(_BYTE *)(a1 + 72) |= v46;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_96;
    }
    v29 = v22 >> 3;
    v30 = v15;
    if ((v51 & 1) == 0)
    {
      v31 = v16;
      do
      {
        v33 = *v31++;
        v32 = v33;
        v30 = v33 != 0;
        if (v33)
          v34 = v32 == (_DWORD)v29;
        else
          v34 = 1;
      }
      while (!v34);
    }
    switch((int)v29)
    {
      case 1:
        if (!v30 || (*(_BYTE *)(a1 + 72) & 0x10) != 0)
          goto LABEL_73;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_94;
        v49 = objc_alloc_init(GEOPDPhotoPosition);
        if (!GEOPDPhotoPositionReadAllFrom((uint64_t)v49, (void *)v3, v9 & 1))
          goto LABEL_93;
        PBReaderRecallMark();
        -[GEOPDGroundMetadataTile _addNoFlagsPhotoPosition:](a1, v49);
        goto LABEL_59;
      case 3:
        if (!v30 || (*(_BYTE *)(a1 + 72) & 0x20) != 0)
          goto LABEL_73;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_94;
        v49 = objc_alloc_init(GEOPDStorefrontBundle);
        if (!GEOPDStorefrontBundleReadAllFrom((uint64_t)v49, (void *)v3, v9 & 1))
          goto LABEL_93;
        PBReaderRecallMark();
        -[GEOPDGroundMetadataTile _addNoFlagsStorefront:](a1, v49);
        goto LABEL_59;
      case 4:
        if (!v30 || (*(_BYTE *)(a1 + 72) & 2) != 0)
          goto LABEL_73;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_94;
        v49 = objc_alloc_init(GEOPDGroundDataBuild);
        if (!GEOPDGroundDataBuildReadAllFrom((uint64_t)v49, (void *)v3, v9 & 1))
          goto LABEL_93;
        PBReaderRecallMark();
        -[GEOPDGroundMetadataTile _addNoFlagsBuildTable:](a1, v49);
        goto LABEL_59;
      case 5:
        if (!v30 || (*(_BYTE *)(a1 + 72) & 4) != 0)
          goto LABEL_73;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_94;
        v49 = objc_alloc_init(GEOPDCameraMetadata);
        if (!GEOPDCameraMetadataReadAllFrom((uint64_t)v49, (void *)v3, v9 & 1))
          goto LABEL_93;
        PBReaderRecallMark();
        -[GEOPDGroundMetadataTile _addNoFlagsCameraMetadataTable:](a1, v49);
LABEL_59:

        goto LABEL_81;
      case 6:
        if (!v30)
          goto LABEL_73;
        if ((*(_BYTE *)(a1 + 72) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_94;
          v7 += *(unsigned __int8 *)(a1 + 72) << 28 >> 31;
          goto LABEL_81;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_94;
        v49 = objc_alloc_init(GEOTileCoordinate);
        if (GEOTileCoordinateReadAllFrom((uint64_t)v49, (void *)v3))
        {
          PBReaderRecallMark();
          v36 = *(void **)(a1 + 32);
          *(_QWORD *)(a1 + 32) = v49;

          --v7;
LABEL_81:
          v15 = v50;
          v18 = (int *)MEMORY[0x1E0D82BC8];
LABEL_82:
          if (!(v15 & 1 | (v7 != 0)))
            goto LABEL_83;
          continue;
        }
LABEL_93:

LABEL_94:
        v44 = 0;
        v15 = v50;
        v18 = (int *)MEMORY[0x1E0D82BC8];
LABEL_95:
        *(_BYTE *)(a1 + 72) |= 0x10u;
        *(_BYTE *)(a1 + 72) |= 0x20u;
        *(_BYTE *)(a1 + 72) |= 2u;
        *(_BYTE *)(a1 + 72) |= 4u;
        *(_BYTE *)(a1 + 72) |= 8u;
        if ((v44 & 1) != 0)
        {
LABEL_96:
          v3 = *(_BYTE *)(v3 + *v18) == 0;
          if ((v15 & 1) != 0)
            goto LABEL_97;
        }
        else
        {
          v3 = 0;
          if ((v15 & 1) != 0)
          {
LABEL_97:
            v47 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = 0;

          }
        }
        return v3;
      case 7:
        if ((v8 & 1) != 0)
        {
          v37 = 0;
          v38 = 0;
          v39 = 0;
          *(_BYTE *)(a1 + 72) |= 1u;
          while (1)
          {
            v40 = *v17;
            v41 = *(_QWORD *)(v3 + v40);
            if (v41 == -1 || v41 >= *(_QWORD *)(v3 + *v6))
              break;
            v42 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v41);
            *(_QWORD *)(v3 + v40) = v41 + 1;
            v39 |= (unint64_t)(v42 & 0x7F) << v37;
            if ((v42 & 0x80) == 0)
              goto LABEL_76;
            v37 += 7;
            v26 = v38++ >= 9;
            if (v26)
            {
              LODWORD(v39) = 0;
              goto LABEL_78;
            }
          }
          *(_BYTE *)(v3 + *v18) = 1;
LABEL_76:
          if (*(_BYTE *)(v3 + *v18))
            LODWORD(v39) = 0;
LABEL_78:
          *(_DWORD *)(a1 + 68) = v39;
        }
        else
        {
LABEL_73:
          v43 = PBReaderSkipValueWithTag();
          v18 = (int *)MEMORY[0x1E0D82BC8];
          v15 = v50;
          if ((v43 & 1) == 0)
          {
LABEL_92:
            v44 = 0;
            goto LABEL_95;
          }
        }
        goto LABEL_82;
      default:
        v35 = PBReaderSkipValueWithTag();
        v18 = (int *)MEMORY[0x1E0D82BC8];
        v15 = v50;
        if (!v35)
          goto LABEL_92;
        goto LABEL_82;
    }
  }
}

void sub_188CAFF14(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CB0070(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CB01D8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CB0334(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CB0D4C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDGroundMetadataTileReadAllFrom(uint64_t a1, void *a2)
{
  unint64_t Specified;
  id v6;
  uint8_t v7[16];

  if (*(_DWORD *)(a1 + 60))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDGroundMetadataTileReadAllFrom can only be called once per object"));
  }
  else
  {
    if (!((unint64_t)objc_msgSend(a2, "position") >> 32)
      && !((unint64_t)objc_msgSend(a2, "length") >> 32))
    {
      os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
      v6 = a2;
      objc_sync_enter(v6);
      objc_storeStrong((id *)(a1 + 8), a2);
      *(_DWORD *)(a1 + 56) = objc_msgSend(v6, "position");
      *(_DWORD *)(a1 + 60) = objc_msgSend(v6, "length");
      Specified = GEOPDGroundMetadataTileReadSpecified(a1, (unint64_t)v6, GEOPDGroundMetadataTileReadAllFrom_initialTag);
      objc_sync_exit(v6);

      os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
      return Specified;
    }
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v7 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v7, 2u);
    }
  }
  return 0;
}

void sub_188CB0EC8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CB14D8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CB1AD4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CB224C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CB26B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  void *v10;
  void *v11;
  void *v12;

  _Unwind_Resume(a1);
}

void sub_188CB30D0(_Unwind_Exception *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t i;

  for (i = 168; i != -32; i -= 40)

  MEMORY[0x18D76437C](v2, 0x20C40960023A9);
  __cxa_guard_abort(&qword_1ECDBBB98);

  _Unwind_Resume(a1);
}

_QWORD *std::vector<_RoundingInfo>::vector[abi:ne180100](_QWORD *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;

  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  if (a3)
  {
    if (a3 >= 0x666666666666667)
      std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
    v5 = 5 * a3;
    v6 = (char *)operator new(40 * a3);
    v7 = 0;
    *a1 = v6;
    a1[1] = v6;
    a1[2] = &v6[8 * v5];
    v8 = a2 + 8 * v5;
    do
    {
      v9 = a2 + v7;
      v10 = &v6[v7];
      *(_QWORD *)&v6[v7] = *(_QWORD *)(a2 + v7);
      *((_QWORD *)v10 + 1) = *(id *)(a2 + v7 + 8);
      v11 = *(_QWORD *)(a2 + v7 + 32);
      *((_OWORD *)v10 + 1) = *(_OWORD *)(a2 + v7 + 16);
      *((_QWORD *)v10 + 4) = v11;
      v7 += 40;
    }
    while (v9 + 40 != v8);
    a1[1] = &v6[v7];
  }
  return a1;
}

void sub_188CB3450(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  std::vector<_RoundingInfo>::__destroy_vector::operator()[abi:ne180100](&a9);
  _Unwind_Resume(a1);
}

void sub_188CB3570(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void std::vector<_RoundingInfo>::__destroy_vector::operator()[abi:ne180100](void ***a1)
{
  void **v1;
  id *v2;
  id *v4;
  void *v5;
  id *v6;

  v1 = *a1;
  v2 = (id *)**a1;
  if (v2)
  {
    v4 = (id *)v1[1];
    v5 = **a1;
    if (v4 != v2)
    {
      do
      {
        v6 = v4 - 5;

        v4 = v6;
      }
      while (v6 != v2);
      v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

void sub_188CB370C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_188CB4028(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, void *a12)
{
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;

  _Unwind_Resume(a1);
}

id GEOGetGEOComposedRouteLog(void)
{
  if (qword_1ECDBBBA8 != -1)
    dispatch_once(&qword_1ECDBBBA8, &__block_literal_global_1068);
  return (id)_MergedGlobals_202;
}

{
  if (qword_1ECDBC198 != -1)
    dispatch_once(&qword_1ECDBC198, &__block_literal_global_285_0);
  return (id)_MergedGlobals_252;
}

{
  if (qword_1ECDBC3F0 != -1)
    dispatch_once(&qword_1ECDBC3F0, &__block_literal_global_135);
  return (id)_MergedGlobals_274;
}

{
  if (qword_1ECDBC7D0 != -1)
    dispatch_once(&qword_1ECDBC7D0, &__block_literal_global_170);
  return (id)_MergedGlobals_307;
}

void sub_188CB46D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, void *a12, void *a13, void *a14, uint64_t a15, void *a16)
{
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;

  _Unwind_Resume(a1);
}

void sub_188CB527C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, void *a12, void *a13, void *a14)
{
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;

  _Unwind_Resume(a1);
}

void sub_188CB5554(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_188CB55E8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_188CB58A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_188CB5AEC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_188CB5DB0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_188CB6000(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_188CB6600(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, void *a12, uint64_t a13, uint64_t a14, void *a15)
{
  void *v15;

  _Unwind_Resume(a1);
}

void sub_188CB69D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  void *v9;

  _Unwind_Resume(a1);
}

void sub_188CB6B0C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_188CB6CBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, objc_super a9)
{
  void *v9;

  a9.super_class = (Class)GEOComposedRoute;
  -[_Unwind_Exception dealloc](&a9, sel_dealloc);
  _Unwind_Resume(a1);
}

void sub_188CB6D7C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_188CB6E0C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_188CB6F54(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_188CB6FE4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_188CB7038(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_188CB708C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_188CB7100(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_188CB7154(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_188CB72F0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_188CB7428(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_188CB7574(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_188CB765C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_188CB76C8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_188CB7714(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_188CB7888(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_188CB7A34(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_188CB7BEC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_188CB7C8C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_188CB7D50(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_188CB7DA4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_188CB7EB4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_188CB8070(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_188CB8194(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id a20)
{
  _Block_object_dispose(&a15, 8);

  _Unwind_Resume(a1);
}

void sub_188CB8244(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16)
{

  _Unwind_Resume(a1);
}

void sub_188CB8430(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_188CB85DC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_188CB8C68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_list va;

  va_start(va, a10);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_188CB8D28(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_188CB8F54(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_188CB9120(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_188CB92E0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_188CB9418(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_188CB94F0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_188CB95A4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_188CB99EC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  _Unwind_Resume(a1);
}

void sub_188CB9C84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,id a22)
{
  _Block_object_dispose(&a17, 8);

  _Unwind_Resume(a1);
}

void sub_188CB9D64(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_188CB9F18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;
  void *v15;
  void *v16;

  _Unwind_Resume(a1);
}

void sub_188CB9FBC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_188CBA044(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_188CBA178(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_188CBA30C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_188CBA5E4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_188CBA734(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_188CBA828(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_188CBA90C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_188CBA9A4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_188CBAA94(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_188CBAD28(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_188CBAF54(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_188CBAFE8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_188CBB5B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,char a37,uint64_t a38,uint64_t a39,uint64_t a40,char a41)
{
  void *v41;
  void *v42;
  uint64_t v43;

  _Block_object_dispose(&a30, 8);
  _Block_object_dispose(&a37, 8);
  _Block_object_dispose(&a41, 8);
  _Block_object_dispose((const void *)(v43 - 256), 8);
  _Block_object_dispose((const void *)(v43 - 224), 8);
  _Block_object_dispose((const void *)(v43 - 192), 8);

  _Unwind_Resume(a1);
}

void sub_188CBB9A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *a17)
{
  void *v17;

  _Unwind_Resume(a1);
}

void sub_188CBBF38(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_188CBC2CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,id a32)
{
  void *v32;
  void **v33;

  _Block_object_dispose(&a18, 8);
  std::vector<-[GEOComposedRoute roadFeaturesForRouteCoordinate:distanceAhead:handler:]::FeatureWithEndPoints>::~vector[abi:ne180100](v33);
  _Block_object_dispose(&a27, 8);

  _Unwind_Resume(a1);
}

__n128 __Block_byref_object_copy__98(__n128 *a1, __n128 *a2)
{
  __n128 result;

  a1[3].n128_u64[0] = 0;
  a1[3].n128_u64[1] = 0;
  a1[4].n128_u64[0] = 0;
  result = a2[3];
  a1[3] = result;
  a1[4].n128_u64[0] = a2[4].n128_u64[0];
  a2[3].n128_u64[0] = 0;
  a2[3].n128_u64[1] = 0;
  a2[4].n128_u64[0] = 0;
  return result;
}

void **__Block_byref_object_dispose__99(uint64_t a1)
{
  return std::vector<-[GEOComposedRoute roadFeaturesForRouteCoordinate:distanceAhead:handler:]::FeatureWithEndPoints>::~vector[abi:ne180100]((void **)(a1 + 48));
}

void sub_188CBC4AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_188CBC7D8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_188CBC9A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, void *a16)
{
  void *v16;

  _Unwind_Resume(a1);
}

void sub_188CBD048(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  if (v1)
    operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_188CBD344(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11)
{
  void *v11;

  _Unwind_Resume(a1);
}

void sub_188CBD498(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, void *a16)
{
  void *v16;

  _Unwind_Resume(a1);
}

void sub_188CBD67C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_188CBD89C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  void *v10;
  void *v11;
  void *v12;

  _Unwind_Resume(a1);
}

void sub_188CBDAD0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_188CBDB8C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16)
{

  _Unwind_Resume(a1);
}

void sub_188CBDCD8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_188CBDD78(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16)
{

  _Unwind_Resume(a1);
}

void sub_188CBDE8C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_188CBDF3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_188CBE05C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_188CBE130(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id a20)
{
  _Block_object_dispose(&a15, 8);

  _Unwind_Resume(a1);
}

void sub_188CBE254(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id a20)
{
  _Block_object_dispose(&a15, 8);

  _Unwind_Resume(a1);
}

void sub_188CBE694(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  void *v9;
  void *v10;

  _Unwind_Resume(a1);
}

void sub_188CBE82C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_188CBE8D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_188CBE988(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_188CBEA18(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_188CBEA78(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_188CBEAF8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_188CBED5C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_188CBEE8C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_188CBEF8C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_188CBF0EC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_188CBF1C0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_188CBF2A0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_188CBF4F8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_188CBF5E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_188CBF788(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_188CBFAE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_188CBFDF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16)
{

  _Unwind_Resume(a1);
}

void sub_188CC14D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void *a21,void *a22)
{
  void *v22;
  void *v23;
  void *v24;
  void *v25;

  _Unwind_Resume(a1);
}

void sub_188CC1E70(_Unwind_Exception *a1)
{
  void *v1;
  uint64_t v2;

  _Unwind_Resume(a1);
}

void sub_188CC2118(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_188CC2440(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

void sub_188CC2A98(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void ___ZL25GEOGetGEOComposedRouteLogv_block_invoke()
{
  os_log_t v0;
  void *v1;

  v0 = os_log_create("com.apple.GeoServices", "GEOComposedRoute");
  v1 = (void *)_MergedGlobals_202;
  _MergedGlobals_202 = (uint64_t)v0;

}

void sub_188CC3ECC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  uint64_t v13;
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v13 - 144), 8);
  _Unwind_Resume(a1);
}

void sub_188CC4274(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  _Block_object_dispose(&a23, 8);
  _Block_object_dispose(&a29, 8);
  _Unwind_Resume(a1);
}

void sub_188CC440C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_188CC47C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,char a33)
{
  uint64_t v33;

  _Block_object_dispose(&a27, 8);
  _Block_object_dispose(&a33, 8);
  _Block_object_dispose((const void *)(v33 - 176), 8);
  _Unwind_Resume(a1);
}

void sub_188CC4C1C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_188CC512C(_Unwind_Exception *a1)
{
  _geo_isolate_unlock();
  _Unwind_Resume(a1);
}

void sub_188CC52EC(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 144), 8);
  _Block_object_dispose((const void *)(v1 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_188CC54B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_188CC609C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_188CC61B0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_188CC6218(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_188CC63F8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_188CC66F4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_188CC6858(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_188CC6A6C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_188CC6BD8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_188CC6D8C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_188CC6F08(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_188CC7144(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_188CC73D4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_188CC7710(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_188CC7A5C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, _Unwind_Exception *exception_object, void *a10)
{
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;

  _Unwind_Resume(a1);
}

void sub_188CC7D64(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_188CC7E1C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_188CC7FAC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_188CC829C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_188CC84A4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void ___ZL24GEOGetGEORouteMatcherLogv_block_invoke()
{
  os_log_t v0;
  void *v1;

  v0 = os_log_create("com.apple.GeoServices", "GEORouteMatcher");
  v1 = (void *)_MergedGlobals_65;
  _MergedGlobals_65 = (uint64_t)v0;

}

void sub_188CC94E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,char a45)
{
  _Block_object_dispose(&a45, 8);
  _Unwind_Resume(a1);
}

void sub_188CCA104(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_188CCA2D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  void *v15;
  void *v16;
  void *v17;
  void *v18;

  _Unwind_Resume(a1);
}

void sub_188CCA548(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12)
{
  void *v12;

  _Unwind_Resume(a1);
}

void sub_188CCA728(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CCA864(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CCA9A4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CCAB40(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CCAC80(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CCB2BC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CCB3FC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOAttributionCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _BYTE v10[128];
  uint64_t v11;

  v11 = *MEMORY[0x1E0C80C00];
  v6 = 0u;
  v7 = 0u;
  v8 = 0u;
  v9 = 0u;
  v1 = *(id *)(a1 + 104);
  v2 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
  if (v2)
  {
    v3 = v2;
    v4 = *(_QWORD *)v7;
    do
    {
      v5 = 0;
      do
      {
        if (*(_QWORD *)v7 != v4)
          objc_enumerationMutation(v1);
        objc_msgSend(*(id *)(*((_QWORD *)&v6 + 1) + 8 * v5++), "readAll:", 1, (_QWORD)v6);
      }
      while (v3 != v5);
      v3 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
    }
    while (v3);
  }

}

uint64_t GEOAttributionReadFrom(uint64_t a1, void *a2)
{
  id v3;
  uint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOAttributionReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188CCC25C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOAttributionIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  int v13;
  int v14;
  unsigned int v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int v20;
  BOOL v21;
  unsigned int v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  int v26;
  _BOOL8 v27;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        if (v10 == -1 || v10 >= *(_QWORD *)&a1[*v3])
          break;
        v11 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v13 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v14 = v8 & 7;
      if (v13 || v14 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v14 != 2)
            goto LABEL_62;
          goto LABEL_59;
        case 2u:
          if (v14 == 2)
            goto LABEL_59;
          goto LABEL_62;
        case 3u:
          if (v14 == 2)
            goto LABEL_59;
          goto LABEL_62;
        case 4u:
          if (v14 == 2)
            goto LABEL_59;
          goto LABEL_62;
        case 5u:
          if (v14 == 2)
            goto LABEL_59;
          goto LABEL_62;
        case 6u:
          if (v14 == 2)
            goto LABEL_59;
          goto LABEL_62;
        case 7u:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEOResourceIsValid(a1))
            goto LABEL_62;
          goto LABEL_38;
        case 8u:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEOTileSetRegionIsValid(a1))
            goto LABEL_62;
LABEL_38:
          PBReaderRecallMark();
          continue;
        case 9u:
          if ((v8 & 7) != 0)
            goto LABEL_62;
          v16 = 0;
          while (1)
          {
            v17 = *v2;
            v18 = *(_QWORD *)&a1[v17];
            if (v18 == -1 || v18 >= *(_QWORD *)&a1[*v3])
              goto LABEL_55;
            v19 = v18 + 1;
            v20 = *(char *)(*(_QWORD *)&a1[*v5] + v18);
            *(_QWORD *)&a1[v17] = v19;
            if (v20 < 0)
            {
              v21 = v16++ > 8;
              if (!v21)
                continue;
            }
            goto LABEL_60;
          }
        case 0xAu:
          if ((v8 & 7) != 0)
            goto LABEL_62;
          v22 = 0;
          break;
        case 0xBu:
          if (v14 == 2)
            goto LABEL_59;
          goto LABEL_62;
        case 0xCu:
          if (v14 == 2)
            goto LABEL_59;
          goto LABEL_62;
        default:
LABEL_59:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_62:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v23 = *v2;
        v24 = *(_QWORD *)&a1[v23];
        if (v24 == -1 || v24 >= *(_QWORD *)&a1[*v3])
          break;
        v25 = v24 + 1;
        v26 = *(char *)(*(_QWORD *)&a1[*v5] + v24);
        *(_QWORD *)&a1[v23] = v25;
        if (v26 < 0)
        {
          v21 = v22++ > 8;
          if (!v21)
            continue;
        }
        goto LABEL_60;
      }
LABEL_55:
      a1[*v4] = 1;
LABEL_60:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v27 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v27;
}

BOOL GEOResourceIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  int v13;
  int v14;
  unsigned int v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int v20;
  BOOL v21;
  unsigned int v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  int v26;
  unsigned int v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  int v31;
  unsigned int v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  int v36;
  unsigned int v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  int v41;
  unsigned int v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  int v46;
  unsigned int v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  int v51;
  _BOOL8 v52;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        if (v10 == -1 || v10 >= *(_QWORD *)&a1[*v3])
          break;
        v11 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v13 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v14 = v8 & 7;
      if (v13 || v14 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0)
            goto LABEL_92;
          v16 = 0;
          while (1)
          {
            v17 = *v2;
            v18 = *(_QWORD *)&a1[v17];
            if (v18 == -1 || v18 >= *(_QWORD *)&a1[*v3])
              goto LABEL_88;
            v19 = v18 + 1;
            v20 = *(char *)(*(_QWORD *)&a1[*v5] + v18);
            *(_QWORD *)&a1[v17] = v19;
            if (v20 < 0)
            {
              v21 = v16++ > 8;
              if (!v21)
                continue;
            }
            goto LABEL_89;
          }
        case 2u:
          if (v14 == 2)
            goto LABEL_30;
          goto LABEL_92;
        case 3u:
          if (v14 == 2)
            goto LABEL_30;
          goto LABEL_92;
        case 4u:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEOTileSetRegionIsValid(a1))
            goto LABEL_92;
          goto LABEL_39;
        case 5u:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEOResourceFilterIsValid(a1))
            goto LABEL_92;
LABEL_39:
          PBReaderRecallMark();
          continue;
        case 6u:
          if ((v8 & 7) != 0)
            goto LABEL_92;
          v22 = 0;
          while (1)
          {
            v23 = *v2;
            v24 = *(_QWORD *)&a1[v23];
            if (v24 == -1 || v24 >= *(_QWORD *)&a1[*v3])
              goto LABEL_88;
            v25 = v24 + 1;
            v26 = *(char *)(*(_QWORD *)&a1[*v5] + v24);
            *(_QWORD *)&a1[v23] = v25;
            if (v26 < 0)
            {
              v21 = v22++ > 8;
              if (!v21)
                continue;
            }
            goto LABEL_89;
          }
        case 7u:
          if ((v8 & 7) != 0)
            goto LABEL_92;
          v27 = 0;
          while (1)
          {
            v28 = *v2;
            v29 = *(_QWORD *)&a1[v28];
            if (v29 == -1 || v29 >= *(_QWORD *)&a1[*v3])
              goto LABEL_88;
            v30 = v29 + 1;
            v31 = *(char *)(*(_QWORD *)&a1[*v5] + v29);
            *(_QWORD *)&a1[v28] = v30;
            if (v31 < 0)
            {
              v21 = v27++ > 8;
              if (!v21)
                continue;
            }
            goto LABEL_89;
          }
        case 8u:
          if ((v8 & 7) != 0)
            goto LABEL_92;
          v32 = 0;
          while (1)
          {
            v33 = *v2;
            v34 = *(_QWORD *)&a1[v33];
            if (v34 == -1 || v34 >= *(_QWORD *)&a1[*v3])
              goto LABEL_88;
            v35 = v34 + 1;
            v36 = *(char *)(*(_QWORD *)&a1[*v5] + v34);
            *(_QWORD *)&a1[v33] = v35;
            if (v36 < 0)
            {
              v21 = v32++ > 8;
              if (!v21)
                continue;
            }
            goto LABEL_89;
          }
        case 9u:
          if ((v8 & 7) != 0)
            goto LABEL_92;
          v37 = 0;
          while (1)
          {
            v38 = *v2;
            v39 = *(_QWORD *)&a1[v38];
            if (v39 == -1 || v39 >= *(_QWORD *)&a1[*v3])
              goto LABEL_88;
            v40 = v39 + 1;
            v41 = *(char *)(*(_QWORD *)&a1[*v5] + v39);
            *(_QWORD *)&a1[v38] = v40;
            if (v41 < 0)
            {
              v21 = v37++ > 8;
              if (!v21)
                continue;
            }
            goto LABEL_89;
          }
        case 0xAu:
          if ((v8 & 7) != 0)
            goto LABEL_92;
          v42 = 0;
          while (1)
          {
            v43 = *v2;
            v44 = *(_QWORD *)&a1[v43];
            if (v44 == -1 || v44 >= *(_QWORD *)&a1[*v3])
              goto LABEL_88;
            v45 = v44 + 1;
            v46 = *(char *)(*(_QWORD *)&a1[*v5] + v44);
            *(_QWORD *)&a1[v43] = v45;
            if (v46 < 0)
            {
              v21 = v42++ > 8;
              if (!v21)
                continue;
            }
            goto LABEL_89;
          }
        case 0xBu:
          if ((v8 & 7) != 0)
            goto LABEL_92;
          v47 = 0;
          break;
        default:
LABEL_30:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_92:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v48 = *v2;
        v49 = *(_QWORD *)&a1[v48];
        if (v49 == -1 || v49 >= *(_QWORD *)&a1[*v3])
          break;
        v50 = v49 + 1;
        v51 = *(char *)(*(_QWORD *)&a1[*v5] + v49);
        *(_QWORD *)&a1[v48] = v50;
        if (v51 < 0)
        {
          v21 = v47++ > 8;
          if (!v21)
            continue;
        }
        goto LABEL_89;
      }
LABEL_88:
      a1[*v4] = 1;
LABEL_89:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v52 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v52;
}

void sub_188CCCE10(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOAttributionIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 128));
  v2 = (*(_WORD *)(a1 + 140) & 0x3FF8) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 128));
  return v2;
}

void sub_188CCD484(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CCDB40(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id GEOCoverageExceptionDescription(unsigned int *a1)
{
  void *v2;
  void *v3;
  void *v4;

  v2 = (void *)MEMORY[0x1E0CB3940];
  _GEOCoverageExceptionDictionaryRepresentation(a1);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "stringWithFormat:", CFSTR("GEOCoverageException<%p> %@"), a1, v3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  return v4;
}

id _GEOCoverageExceptionDictionaryRepresentation(unsigned int *a1)
{
  void *v2;
  char v3;
  void *v4;
  void *v6;
  void *v7;
  void *v8;
  void *v9;

  objc_msgSend(MEMORY[0x1E0C99E08], "dictionary");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = *((_BYTE *)a1 + 20);
  if ((v3 & 1) != 0)
  {
    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInt:", *a1);
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "setObject:forKey:", v6, CFSTR("maxX"));

    v3 = *((_BYTE *)a1 + 20);
    if ((v3 & 2) == 0)
    {
LABEL_3:
      if ((v3 & 4) == 0)
        goto LABEL_4;
      goto LABEL_10;
    }
  }
  else if ((a1[5] & 2) == 0)
  {
    goto LABEL_3;
  }
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInt:", a1[1]);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setObject:forKey:", v7, CFSTR("maxY"));

  v3 = *((_BYTE *)a1 + 20);
  if ((v3 & 4) == 0)
  {
LABEL_4:
    if ((v3 & 8) == 0)
      goto LABEL_5;
LABEL_11:
    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInt:", a1[3]);
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "setObject:forKey:", v9, CFSTR("minY"));

    if ((a1[5] & 0x10) == 0)
      return v2;
    goto LABEL_6;
  }
LABEL_10:
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInt:", a1[2]);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setObject:forKey:", v8, CFSTR("minX"));

  v3 = *((_BYTE *)a1 + 20);
  if ((v3 & 8) != 0)
    goto LABEL_11;
LABEL_5:
  if ((v3 & 0x10) != 0)
  {
LABEL_6:
    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInt:", a1[4]);
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "setObject:forKey:", v4, CFSTR("zoom"));

  }
  return v2;
}

void _GEOCoverageExceptionFromDictionaryRepresentation(void *a1, uint64_t a2)
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;

  v8 = a1;
  objc_msgSend(v8, "objectForKeyedSubscript:", CFSTR("minX"));
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    *(_BYTE *)(a2 + 20) |= 4u;
    *(_DWORD *)(a2 + 8) = objc_msgSend(v3, "unsignedIntValue");
  }

  objc_msgSend(v8, "objectForKeyedSubscript:", CFSTR("minY"));
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    *(_BYTE *)(a2 + 20) |= 8u;
    *(_DWORD *)(a2 + 12) = objc_msgSend(v4, "unsignedIntValue");
  }

  objc_msgSend(v8, "objectForKeyedSubscript:", CFSTR("maxX"));
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    *(_BYTE *)(a2 + 20) |= 1u;
    *(_DWORD *)a2 = objc_msgSend(v5, "unsignedIntValue");
  }

  objc_msgSend(v8, "objectForKeyedSubscript:", CFSTR("maxY"));
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    *(_BYTE *)(a2 + 20) |= 2u;
    *(_DWORD *)(a2 + 4) = objc_msgSend(v6, "unsignedIntValue");
  }

  objc_msgSend(v8, "objectForKeyedSubscript:", CFSTR("zoom"));
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    *(_BYTE *)(a2 + 20) |= 0x10u;
    *(_DWORD *)(a2 + 16) = objc_msgSend(v7, "unsignedIntValue");
  }

}

BOOL GEOCoverageExceptionReadFrom(uint64_t a1, uint64_t a2)
{
  return GEOCoverageExceptionReadAllFrom(a1, a2);
}

BOOL GEOCoverageExceptionReadAllFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  _DWORD *v7;
  _DWORD *v8;
  int *v9;
  char v10;
  unsigned int v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  int v17;
  char v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  BOOL v25;
  _DWORD *v26;
  char v27;
  unsigned int v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  char v32;
  unsigned int v33;
  uint64_t v34;
  unint64_t v35;
  char v36;
  char v37;
  unsigned int v38;
  uint64_t v39;
  unint64_t v40;
  char v41;
  char v42;
  unsigned int v43;
  uint64_t v44;
  unint64_t v45;
  char v46;
  _DWORD *v48;
  _DWORD *v49;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v48 = (_DWORD *)(a1 + 4);
    v49 = (_DWORD *)(a1 + 16);
    v7 = (_DWORD *)(a1 + 12);
    v8 = (_DWORD *)(a1 + 8);
    v9 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v10 = 0;
      v11 = 0;
      v12 = 0;
      while (1)
      {
        v13 = *v3;
        v14 = *(_QWORD *)(a2 + v13);
        if (v14 == -1 || v14 >= *(_QWORD *)(a2 + *v4))
          break;
        v15 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v14);
        *(_QWORD *)(a2 + v13) = v14 + 1;
        v12 |= (unint64_t)(v15 & 0x7F) << v10;
        if ((v15 & 0x80) == 0)
          goto LABEL_12;
        v10 += 7;
        if (v11++ >= 9)
        {
          v12 = 0;
          v17 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v17 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v12 = 0;
LABEL_14:
      if (v17 || (v12 & 7) == 4)
        break;
      switch((v12 >> 3))
      {
        case 1u:
          v19 = 0;
          v20 = 0;
          v21 = 0;
          *(_BYTE *)(a1 + 20) |= 4u;
          while (1)
          {
            v22 = *v3;
            v23 = *(_QWORD *)(a2 + v22);
            if (v23 == -1 || v23 >= *(_QWORD *)(a2 + *v4))
            {
              v26 = v8;
              goto LABEL_61;
            }
            v24 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v23);
            *(_QWORD *)(a2 + v22) = v23 + 1;
            v21 |= (unint64_t)(v24 & 0x7F) << v19;
            if ((v24 & 0x80) == 0)
              break;
            v19 += 7;
            v25 = v20++ > 8;
            if (v25)
            {
              LODWORD(v21) = 0;
              v26 = v8;
              goto LABEL_64;
            }
          }
          v26 = v8;
          goto LABEL_62;
        case 2u:
          v27 = 0;
          v28 = 0;
          v21 = 0;
          *(_BYTE *)(a1 + 20) |= 8u;
          while (2)
          {
            v29 = *v3;
            v30 = *(_QWORD *)(a2 + v29);
            if (v30 == -1 || v30 >= *(_QWORD *)(a2 + *v4))
            {
              v26 = v7;
              goto LABEL_61;
            }
            v31 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v30);
            *(_QWORD *)(a2 + v29) = v30 + 1;
            v21 |= (unint64_t)(v31 & 0x7F) << v27;
            if (v31 < 0)
            {
              v27 += 7;
              v25 = v28++ > 8;
              if (v25)
              {
                LODWORD(v21) = 0;
                v26 = v7;
                goto LABEL_64;
              }
              continue;
            }
            break;
          }
          v26 = v7;
          goto LABEL_62;
        case 3u:
          v32 = 0;
          v33 = 0;
          v21 = 0;
          *(_BYTE *)(a1 + 20) |= 1u;
          while (2)
          {
            v34 = *v3;
            v35 = *(_QWORD *)(a2 + v34);
            if (v35 == -1 || v35 >= *(_QWORD *)(a2 + *v4))
            {
              v26 = (_DWORD *)a1;
              goto LABEL_61;
            }
            v36 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v35);
            *(_QWORD *)(a2 + v34) = v35 + 1;
            v21 |= (unint64_t)(v36 & 0x7F) << v32;
            if (v36 < 0)
            {
              v32 += 7;
              v25 = v33++ > 8;
              if (v25)
              {
                LODWORD(v21) = 0;
                v26 = (_DWORD *)a1;
                goto LABEL_64;
              }
              continue;
            }
            break;
          }
          v26 = (_DWORD *)a1;
          goto LABEL_62;
        case 4u:
          v37 = 0;
          v38 = 0;
          v21 = 0;
          *(_BYTE *)(a1 + 20) |= 2u;
          while (2)
          {
            v39 = *v3;
            v40 = *(_QWORD *)(a2 + v39);
            if (v40 == -1 || v40 >= *(_QWORD *)(a2 + *v4))
            {
              v26 = v48;
              goto LABEL_61;
            }
            v41 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v40);
            *(_QWORD *)(a2 + v39) = v40 + 1;
            v21 |= (unint64_t)(v41 & 0x7F) << v37;
            if (v41 < 0)
            {
              v37 += 7;
              v25 = v38++ > 8;
              if (v25)
              {
                LODWORD(v21) = 0;
                v26 = v48;
                goto LABEL_64;
              }
              continue;
            }
            break;
          }
          v26 = v48;
          goto LABEL_62;
        case 5u:
          v42 = 0;
          v43 = 0;
          v21 = 0;
          *(_BYTE *)(a1 + 20) |= 0x10u;
          break;
        default:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
          return 0;
      }
      while (1)
      {
        v44 = *v3;
        v45 = *(_QWORD *)(a2 + v44);
        if (v45 == -1 || v45 >= *(_QWORD *)(a2 + *v4))
          break;
        v46 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v45);
        *(_QWORD *)(a2 + v44) = v45 + 1;
        v21 |= (unint64_t)(v46 & 0x7F) << v42;
        if ((v46 & 0x80) == 0)
        {
          v26 = v49;
          goto LABEL_62;
        }
        v42 += 7;
        v25 = v43++ > 8;
        if (v25)
        {
          LODWORD(v21) = 0;
          v26 = v49;
          goto LABEL_64;
        }
      }
      v26 = v49;
LABEL_61:
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_62:
      if (*(_BYTE *)(a2 + *v5))
        LODWORD(v21) = 0;
LABEL_64:
      *v26 = v21;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t GEOCoverageExceptionWriteTo(uint64_t result)
{
  uint64_t v1;
  char v2;

  v1 = result;
  v2 = *(_BYTE *)(result + 20);
  if ((v2 & 4) != 0)
  {
    result = PBDataWriterWriteUint32Field();
    v2 = *(_BYTE *)(v1 + 20);
    if ((v2 & 8) == 0)
    {
LABEL_3:
      if ((v2 & 1) == 0)
        goto LABEL_4;
      goto LABEL_9;
    }
  }
  else if ((*(_BYTE *)(result + 20) & 8) == 0)
  {
    goto LABEL_3;
  }
  result = PBDataWriterWriteUint32Field();
  v2 = *(_BYTE *)(v1 + 20);
  if ((v2 & 1) == 0)
  {
LABEL_4:
    if ((v2 & 2) == 0)
      goto LABEL_5;
    goto LABEL_10;
  }
LABEL_9:
  result = PBDataWriterWriteUint32Field();
  v2 = *(_BYTE *)(v1 + 20);
  if ((v2 & 2) == 0)
  {
LABEL_5:
    if ((v2 & 0x10) == 0)
      return result;
    return PBDataWriterWriteUint32Field();
  }
LABEL_10:
  result = PBDataWriterWriteUint32Field();
  if ((*(_BYTE *)(v1 + 20) & 0x10) != 0)
    return PBDataWriterWriteUint32Field();
  return result;
}

BOOL GEOCoverageExceptionEquals(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2 && a1[1] == a2[1] && a1[2] == a2[2];
}

uint64_t GEOCoverageExceptionHash()
{
  return PBHashBytes();
}

BOOL GEOCoverageExceptionIsValid(void *a1)
{
  _BOOL8 AllFrom;
  _QWORD v4[5];

  v4[3] = objc_msgSend(a1, "position");
  v4[4] = objc_msgSend(a1, "length");
  memset(v4, 0, 24);
  AllFrom = GEOCoverageExceptionReadAllFrom((uint64_t)v4, (uint64_t)a1);
  PBReaderRecallMark();
  return AllFrom;
}

BOOL GEOCoverageExtentReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  id v23;
  void *v24;
  char v25;
  unsigned int v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  char v30;
  unsigned int v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  char v35;
  unsigned int v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  char v40;
  unsigned int v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  uint64_t v45;
  _BOOL8 v46;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          if (v12 == -1 || v12 >= *(_QWORD *)&v3[*v5])
            break;
          v13 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v12 + 1;
          v10 |= (unint64_t)(v13 & 0x7F) << v8;
          if ((v13 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v14 = v9++ >= 9;
          if (v14)
          {
            v10 = 0;
            v15 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v15 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v15 || (v10 & 7) == 4)
          break;
        switch((v10 >> 3))
        {
          case 1u:
            v17 = 0;
            v18 = 0;
            v19 = 0;
            *(_BYTE *)(a1 + 60) |= 4u;
            while (1)
            {
              v20 = *v4;
              v21 = *(_QWORD *)&v3[v20];
              if (v21 == -1 || v21 >= *(_QWORD *)&v3[*v5])
                break;
              v22 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v21);
              *(_QWORD *)&v3[v20] = v21 + 1;
              v19 |= (unint64_t)(v22 & 0x7F) << v17;
              if ((v22 & 0x80) == 0)
                goto LABEL_63;
              v17 += 7;
              v14 = v18++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_65;
              }
            }
            v3[*v6] = 1;
LABEL_63:
            if (v3[*v6])
              LODWORD(v19) = 0;
LABEL_65:
            v45 = 48;
            goto LABEL_82;
          case 2u:
            v25 = 0;
            v26 = 0;
            v19 = 0;
            *(_BYTE *)(a1 + 60) |= 8u;
            while (2)
            {
              v27 = *v4;
              v28 = *(_QWORD *)&v3[v27];
              if (v28 == -1 || v28 >= *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v29 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v28);
                *(_QWORD *)&v3[v27] = v28 + 1;
                v19 |= (unint64_t)(v29 & 0x7F) << v25;
                if (v29 < 0)
                {
                  v25 += 7;
                  v14 = v26++ >= 9;
                  if (v14)
                  {
                    LODWORD(v19) = 0;
                    goto LABEL_69;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              LODWORD(v19) = 0;
LABEL_69:
            v45 = 52;
            goto LABEL_82;
          case 3u:
            v30 = 0;
            v31 = 0;
            v19 = 0;
            *(_BYTE *)(a1 + 60) |= 1u;
            while (2)
            {
              v32 = *v4;
              v33 = *(_QWORD *)&v3[v32];
              if (v33 == -1 || v33 >= *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v34 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v33);
                *(_QWORD *)&v3[v32] = v33 + 1;
                v19 |= (unint64_t)(v34 & 0x7F) << v30;
                if (v34 < 0)
                {
                  v30 += 7;
                  v14 = v31++ >= 9;
                  if (v14)
                  {
                    LODWORD(v19) = 0;
                    goto LABEL_73;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              LODWORD(v19) = 0;
LABEL_73:
            v45 = 40;
            goto LABEL_82;
          case 4u:
            v35 = 0;
            v36 = 0;
            v19 = 0;
            *(_BYTE *)(a1 + 60) |= 2u;
            while (2)
            {
              v37 = *v4;
              v38 = *(_QWORD *)&v3[v37];
              if (v38 == -1 || v38 >= *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v39 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v38);
                *(_QWORD *)&v3[v37] = v38 + 1;
                v19 |= (unint64_t)(v39 & 0x7F) << v35;
                if (v39 < 0)
                {
                  v35 += 7;
                  v14 = v36++ >= 9;
                  if (v14)
                  {
                    LODWORD(v19) = 0;
                    goto LABEL_77;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              LODWORD(v19) = 0;
LABEL_77:
            v45 = 44;
            goto LABEL_82;
          case 5u:
            v40 = 0;
            v41 = 0;
            v19 = 0;
            *(_BYTE *)(a1 + 60) |= 0x10u;
            break;
          case 6u:
            if (!PBReaderPlaceMark())
              goto LABEL_85;
            -[GEOCoverageExtent _reserveCoverageExceptions:](a1, 1uLL);
            if (!GEOCoverageExceptionReadAllFrom(*(_QWORD *)(a1 + 16) + 24 * *(_QWORD *)(a1 + 24), (uint64_t)v3))
              goto LABEL_85;
            PBReaderRecallMark();
            ++*(_QWORD *)(a1 + 24);
            continue;
          default:
            if (!*(_QWORD *)(a1 + 8))
            {
              v23 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
              v24 = *(void **)(a1 + 8);
              *(_QWORD *)(a1 + 8) = v23;

            }
            if (!PBUnknownFieldAdd())
              goto LABEL_85;
            continue;
        }
        while (1)
        {
          v42 = *v4;
          v43 = *(_QWORD *)&v3[v42];
          if (v43 == -1 || v43 >= *(_QWORD *)&v3[*v5])
            break;
          v44 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v43);
          *(_QWORD *)&v3[v42] = v43 + 1;
          v19 |= (unint64_t)(v44 & 0x7F) << v40;
          if ((v44 & 0x80) == 0)
            goto LABEL_79;
          v40 += 7;
          v14 = v41++ >= 9;
          if (v14)
          {
            LODWORD(v19) = 0;
            goto LABEL_81;
          }
        }
        v3[*v6] = 1;
LABEL_79:
        if (v3[*v6])
          LODWORD(v19) = 0;
LABEL_81:
        v45 = 56;
LABEL_82:
        *(_DWORD *)(a1 + v45) = v19;
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v46 = v3[*v6] == 0;
  }
  else
  {
LABEL_85:
    v46 = 0;
  }
  objc_sync_exit(v3);

  return v46;
}

void sub_188CCF984(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOCoverageExtentReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOCoverageExtentReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188CCF9E4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOCoverageExtentIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  int v13;
  int v14;
  unsigned int v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int v20;
  BOOL v21;
  unsigned int v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  int v26;
  unsigned int v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  int v31;
  unsigned int v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  int v36;
  unsigned int v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  int v41;
  _BOOL8 v42;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        if (v10 == -1 || v10 >= *(_QWORD *)&a1[*v3])
          break;
        v11 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v13 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v14 = v8 & 7;
      if (v13 || v14 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0)
            goto LABEL_69;
          v16 = 0;
          while (1)
          {
            v17 = *v2;
            v18 = *(_QWORD *)&a1[v17];
            if (v18 == -1 || v18 >= *(_QWORD *)&a1[*v3])
              goto LABEL_61;
            v19 = v18 + 1;
            v20 = *(char *)(*(_QWORD *)&a1[*v5] + v18);
            *(_QWORD *)&a1[v17] = v19;
            if (v20 < 0)
            {
              v21 = v16++ > 8;
              if (!v21)
                continue;
            }
            goto LABEL_66;
          }
        case 2u:
          if ((v8 & 7) != 0)
            goto LABEL_69;
          v22 = 0;
          while (1)
          {
            v23 = *v2;
            v24 = *(_QWORD *)&a1[v23];
            if (v24 == -1 || v24 >= *(_QWORD *)&a1[*v3])
              goto LABEL_61;
            v25 = v24 + 1;
            v26 = *(char *)(*(_QWORD *)&a1[*v5] + v24);
            *(_QWORD *)&a1[v23] = v25;
            if (v26 < 0)
            {
              v21 = v22++ > 8;
              if (!v21)
                continue;
            }
            goto LABEL_66;
          }
        case 3u:
          if ((v8 & 7) != 0)
            goto LABEL_69;
          v27 = 0;
          while (1)
          {
            v28 = *v2;
            v29 = *(_QWORD *)&a1[v28];
            if (v29 == -1 || v29 >= *(_QWORD *)&a1[*v3])
              goto LABEL_61;
            v30 = v29 + 1;
            v31 = *(char *)(*(_QWORD *)&a1[*v5] + v29);
            *(_QWORD *)&a1[v28] = v30;
            if (v31 < 0)
            {
              v21 = v27++ > 8;
              if (!v21)
                continue;
            }
            goto LABEL_66;
          }
        case 4u:
          if ((v8 & 7) != 0)
            goto LABEL_69;
          v32 = 0;
          while (1)
          {
            v33 = *v2;
            v34 = *(_QWORD *)&a1[v33];
            if (v34 == -1 || v34 >= *(_QWORD *)&a1[*v3])
              goto LABEL_61;
            v35 = v34 + 1;
            v36 = *(char *)(*(_QWORD *)&a1[*v5] + v34);
            *(_QWORD *)&a1[v33] = v35;
            if (v36 < 0)
            {
              v21 = v32++ > 8;
              if (!v21)
                continue;
            }
            goto LABEL_66;
          }
        case 5u:
          if ((v8 & 7) != 0)
            goto LABEL_69;
          v37 = 0;
          break;
        case 6u:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEOCoverageExceptionIsValid(a1))
            goto LABEL_69;
          PBReaderRecallMark();
          continue;
        default:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_69:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v38 = *v2;
        v39 = *(_QWORD *)&a1[v38];
        if (v39 == -1 || v39 >= *(_QWORD *)&a1[*v3])
          break;
        v40 = v39 + 1;
        v41 = *(char *)(*(_QWORD *)&a1[*v5] + v39);
        *(_QWORD *)&a1[v38] = v40;
        if (v41 < 0)
        {
          v21 = v37++ > 8;
          if (!v21)
            continue;
        }
        goto LABEL_66;
      }
LABEL_61:
      a1[*v4] = 1;
LABEL_66:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v42 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v42;
}

BOOL GEODataSetDescriptionReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEODataSetDescriptionReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188CD0AE0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEODataSetDescriptionIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  int v13;
  int v14;
  unsigned int v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int v20;
  _BOOL8 v22;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        if (v10 == -1 || v10 >= *(_QWORD *)&a1[*v3])
          break;
        v11 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v13 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v14 = v8 & 7;
      if (v13 || v14 == 4)
        break;
      if ((v8 >> 3) == 2)
      {
        if (v14 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_37:
          v22 = 0;
          goto LABEL_36;
        }
      }
      else if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0)
          goto LABEL_37;
        v16 = 0;
        while (1)
        {
          v17 = *v2;
          v18 = *(_QWORD *)&a1[v17];
          if (v18 == -1 || v18 >= *(_QWORD *)&a1[*v3])
            break;
          v19 = v18 + 1;
          v20 = *(char *)(*(_QWORD *)&a1[*v5] + v18);
          *(_QWORD *)&a1[v17] = v19;
          if (v20 < 0 && v16++ <= 8)
            continue;
          goto LABEL_34;
        }
        a1[*v4] = 1;
      }
      else if (!PBReaderSkipValueWithTag())
      {
        goto LABEL_37;
      }
LABEL_34:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v22 = a1[*v4] == 0;
LABEL_36:
  PBReaderRecallMark();
  return v22;
}

unint64_t GEODataSetURLOverrideReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  const float *v11;
  uint32x4_t v12;
  int8x16_t v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  int *v18;
  int *v19;
  int *v20;
  int *v21;
  char v22;
  unsigned int v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  BOOL v28;
  int v29;
  unint64_t v31;
  BOOL v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  char v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  id v43;
  void *v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  char v49;
  int v50;
  int v51;
  int v52;
  void *v53;
  int v55;
  char v56;
  char v57;
  char v58;
  char v59;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 152));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 148);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 144));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = (const float *)(a1 + 160);
  v12 = (uint32x4_t)vld1q_dup_f32(v11);
  v13.i64[0] = 0x100000001;
  v13.i64[1] = 0x100000001;
  v14 = vaddvq_s32(vaddq_s32(vaddq_s32((int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v12, (uint32x4_t)xmmword_189CCD080), v13), (int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v12, (uint32x4_t)xmmword_189CCD090), v13)), vaddq_s32((int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v12, (uint32x4_t)xmmword_189CCD060), v13), (int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v12, (uint32x4_t)xmmword_189CCD070), v13))));
  while (2)
  {
    v15 = 1;
    v16 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v14;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_9;
      case 0:
        v17 = v14 > 0xB;
        v56 = v17 & ~(_BYTE)v10 | v9;
        v57 = v17 | v10 | v56;
        if ((((v17 | v10) | v8) & 1) != 0)
          v18 = 0;
        else
          v18 = a3;
        v58 = (v18 == 0) | v17 | v10;
        v59 = v17 | v10;
        v19 = (int *)MEMORY[0x1E0D82BF0];
        v20 = (int *)MEMORY[0x1E0D82BC8];
        v21 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v14;
LABEL_7:
        v15 = v9;
LABEL_8:
        v16 = v10;
LABEL_9:
        ++v7;
        v9 = v15;
        v10 = v16;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v19) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v20))
      goto LABEL_137;
    v22 = 0;
    v23 = 0;
    v24 = 0;
    while (1)
    {
      v25 = *v19;
      v26 = *(_QWORD *)(v3 + v25);
      if (v26 == -1 || v26 >= *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v26);
      *(_QWORD *)(v3 + v25) = v26 + 1;
      v24 |= (unint64_t)(v27 & 0x7F) << v22;
      if ((v27 & 0x80) == 0)
        goto LABEL_24;
      v22 += 7;
      v28 = v23++ >= 9;
      if (v28)
      {
        v24 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v20);
        goto LABEL_26;
      }
    }
    *(_BYTE *)(v3 + *v20) = 1;
LABEL_24:
    v29 = *(unsigned __int8 *)(v3 + *v20);
    if (*(_BYTE *)(v3 + *v20))
      v24 = 0;
LABEL_26:
    if (v29 || (v24 & 7) == 4)
    {
LABEL_137:
      v55 = 1;
      goto LABEL_138;
    }
    v31 = v24 >> 3;
    v32 = v59;
    if ((v58 & 1) == 0)
    {
      v33 = v18;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if ((v8 & 1) == 0)
          goto LABEL_98;
        v37 = 0;
        v38 = 0;
        v39 = 0;
        *(_DWORD *)(a1 + 160) |= 1u;
        while (1)
        {
          v40 = *v19;
          v41 = *(_QWORD *)(v3 + v40);
          if (v41 == -1 || v41 >= *(_QWORD *)(v3 + *v6))
            break;
          v42 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v41);
          *(_QWORD *)(v3 + v40) = v41 + 1;
          v39 |= (unint64_t)(v42 & 0x7F) << v37;
          if ((v42 & 0x80) == 0)
            goto LABEL_101;
          v37 += 7;
          v28 = v38++ >= 9;
          if (v28)
          {
            LODWORD(v39) = 0;
            goto LABEL_103;
          }
        }
        *(_BYTE *)(v3 + *v20) = 1;
LABEL_101:
        if (*(_BYTE *)(v3 + *v20))
          LODWORD(v39) = 0;
LABEL_103:
        *(_DWORD *)(a1 + 156) = v39;
        goto LABEL_136;
      case 2:
        if (!v32)
          goto LABEL_98;
        if ((*(_BYTE *)(a1 + 160) & 0x80) == 0)
        {
          PBReaderReadString();
          v46 = objc_claimAutoreleasedReturnValue();
          v47 = 64;
          goto LABEL_97;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_165;
        v50 = (int)(*(_DWORD *)(a1 + 160) << 24) >> 31;
        goto LABEL_134;
      case 3:
        if (!v32)
          goto LABEL_98;
        if ((*(_BYTE *)(a1 + 161) & 2) == 0)
        {
          PBReaderReadString();
          v46 = objc_claimAutoreleasedReturnValue();
          v47 = 80;
          goto LABEL_97;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_165;
        v50 = (int)(*(_DWORD *)(a1 + 160) << 22) >> 31;
        goto LABEL_134;
      case 4:
        if (!v32)
          goto LABEL_98;
        if ((*(_BYTE *)(a1 + 160) & 0x20) == 0)
        {
          PBReaderReadString();
          v46 = objc_claimAutoreleasedReturnValue();
          v47 = 48;
          goto LABEL_97;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_165;
        v50 = (int)(*(_DWORD *)(a1 + 160) << 26) >> 31;
        goto LABEL_134;
      case 5:
        if (!v32)
          goto LABEL_98;
        if ((*(_BYTE *)(a1 + 161) & 0x80) == 0)
        {
          PBReaderReadString();
          v46 = objc_claimAutoreleasedReturnValue();
          v47 = 128;
          goto LABEL_97;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_165;
        v50 = (int)(*(_DWORD *)(a1 + 160) << 16) >> 31;
        goto LABEL_134;
      case 6:
        if (!v32)
          goto LABEL_98;
        if ((*(_BYTE *)(a1 + 160) & 4) == 0)
        {
          PBReaderReadString();
          v46 = objc_claimAutoreleasedReturnValue();
          v47 = 24;
          goto LABEL_97;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_165;
        v50 = (int)(*(_DWORD *)(a1 + 160) << 29) >> 31;
        goto LABEL_134;
      case 7:
        if (!v32)
          goto LABEL_98;
        if ((*(_BYTE *)(a1 + 160) & 8) == 0)
        {
          PBReaderReadString();
          v46 = objc_claimAutoreleasedReturnValue();
          v47 = 32;
          goto LABEL_97;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_165;
        v50 = (int)(*(_DWORD *)(a1 + 160) << 28) >> 31;
        goto LABEL_134;
      case 8:
        if (!v32)
          goto LABEL_98;
        if ((*(_BYTE *)(a1 + 161) & 0x40) == 0)
        {
          PBReaderReadString();
          v46 = objc_claimAutoreleasedReturnValue();
          v47 = 120;
          goto LABEL_97;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_165;
        v50 = (int)(*(_DWORD *)(a1 + 160) << 17) >> 31;
        goto LABEL_134;
      case 9:
        if (!v32)
          goto LABEL_98;
        if ((*(_BYTE *)(a1 + 161) & 0x20) == 0)
        {
          PBReaderReadString();
          v46 = objc_claimAutoreleasedReturnValue();
          v47 = 112;
          goto LABEL_97;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_165;
        v50 = (int)(*(_DWORD *)(a1 + 160) << 18) >> 31;
        goto LABEL_134;
      case 10:
        if (!v32)
          goto LABEL_98;
        if ((*(_BYTE *)(a1 + 161) & 8) == 0)
        {
          PBReaderReadString();
          v46 = objc_claimAutoreleasedReturnValue();
          v47 = 96;
          goto LABEL_97;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_165;
        v50 = (int)(*(_DWORD *)(a1 + 160) << 20) >> 31;
        goto LABEL_134;
      case 11:
        if (!v32)
          goto LABEL_98;
        if ((*(_BYTE *)(a1 + 160) & 0x10) == 0)
        {
          PBReaderReadString();
          v46 = objc_claimAutoreleasedReturnValue();
          v47 = 40;
          goto LABEL_97;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_165;
        v50 = (int)(*(_DWORD *)(a1 + 160) << 27) >> 31;
        goto LABEL_134;
      case 12:
        if (!v32)
          goto LABEL_98;
        if ((*(_BYTE *)(a1 + 161) & 1) == 0)
        {
          PBReaderReadString();
          v46 = objc_claimAutoreleasedReturnValue();
          v47 = 72;
          goto LABEL_97;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_165;
        v50 = (int)(*(_DWORD *)(a1 + 160) << 23) >> 31;
        goto LABEL_134;
      case 13:
        if (!v32)
          goto LABEL_98;
        if ((*(_BYTE *)(a1 + 161) & 0x10) == 0)
        {
          PBReaderReadString();
          v46 = objc_claimAutoreleasedReturnValue();
          v47 = 104;
          goto LABEL_97;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_165;
        v50 = (int)(*(_DWORD *)(a1 + 160) << 19) >> 31;
        goto LABEL_134;
      case 14:
        if (!v32)
          goto LABEL_98;
        if ((*(_BYTE *)(a1 + 160) & 0x40) == 0)
        {
          PBReaderReadString();
          v46 = objc_claimAutoreleasedReturnValue();
          v47 = 56;
          goto LABEL_97;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_165;
        v50 = (int)(*(_DWORD *)(a1 + 160) << 25) >> 31;
        goto LABEL_134;
      case 15:
        if (!v32)
          goto LABEL_98;
        if ((*(_BYTE *)(a1 + 161) & 4) == 0)
        {
          PBReaderReadString();
          v46 = objc_claimAutoreleasedReturnValue();
          v47 = 88;
          goto LABEL_97;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_165;
        v50 = (int)(*(_DWORD *)(a1 + 160) << 21) >> 31;
        goto LABEL_134;
      case 16:
        if (!v32)
          goto LABEL_98;
        if ((*(_BYTE *)(a1 + 162) & 1) == 0)
        {
          PBReaderReadString();
          v46 = objc_claimAutoreleasedReturnValue();
          v47 = 136;
LABEL_97:
          v48 = *(void **)(a1 + v47);
          *(_QWORD *)(a1 + v47) = v46;

          --v7;
LABEL_135:
          v20 = (int *)MEMORY[0x1E0D82BC8];
          v21 = (int *)MEMORY[0x1E0D82BB8];
LABEL_136:
          if (!(v57 & 1 | (v7 != 0)))
            goto LABEL_137;
          continue;
        }
        if ((PBReaderSkipValueWithTag() & 1) != 0)
        {
          v50 = (int)(*(_DWORD *)(a1 + 160) << 15) >> 31;
LABEL_134:
          v7 += v50;
          goto LABEL_135;
        }
LABEL_165:
        v55 = 0;
        v20 = (int *)MEMORY[0x1E0D82BC8];
LABEL_138:
        if ((v56 & 1) != 0)
LABEL_139:
          *(_DWORD *)(a1 + 160) |= 2u;
        if (v59 & 1 | ((v55 & 1) == 0))
        {
          *(_DWORD *)(a1 + 160) |= 0x80u;
          *(_DWORD *)(a1 + 160) |= 0x200u;
          *(_DWORD *)(a1 + 160) |= 0x20u;
          *(_DWORD *)(a1 + 160) |= 0x8000u;
          *(_DWORD *)(a1 + 160) |= 4u;
          *(_DWORD *)(a1 + 160) |= 8u;
          *(_DWORD *)(a1 + 160) |= 0x4000u;
          *(_DWORD *)(a1 + 160) |= 0x2000u;
          *(_DWORD *)(a1 + 160) |= 0x800u;
          *(_DWORD *)(a1 + 160) |= 0x10u;
          *(_DWORD *)(a1 + 160) |= 0x100u;
          *(_DWORD *)(a1 + 160) |= 0x1000u;
          *(_DWORD *)(a1 + 160) |= 0x40u;
          *(_DWORD *)(a1 + 160) |= 0x400u;
          *(_DWORD *)(a1 + 160) |= 0x10000u;
        }
        else if (v18)
        {
          while (1)
          {
            v51 = *v18++;
            v52 = 128;
            switch(v51)
            {
              case 0:
                goto LABEL_159;
              case 2:
                goto LABEL_158;
              case 3:
                v52 = 512;
                goto LABEL_158;
              case 4:
                v52 = 32;
                goto LABEL_158;
              case 5:
                v52 = 0x8000;
                goto LABEL_158;
              case 6:
                v52 = 4;
                goto LABEL_158;
              case 7:
                v52 = 8;
                goto LABEL_158;
              case 8:
                v52 = 0x4000;
                goto LABEL_158;
              case 9:
                v52 = 0x2000;
                goto LABEL_158;
              case 10:
                v52 = 2048;
                goto LABEL_158;
              case 11:
                v52 = 16;
                goto LABEL_158;
              case 12:
                v52 = 256;
                goto LABEL_158;
              case 13:
                v52 = 4096;
                goto LABEL_158;
              case 14:
                v52 = 64;
                goto LABEL_158;
              case 15:
                v52 = 1024;
                goto LABEL_158;
              case 16:
                v52 = 0x10000;
LABEL_158:
                *(_DWORD *)(a1 + 160) |= v52;
                break;
              default:
                continue;
            }
          }
        }
LABEL_159:
        if (v55)
          v3 = *(_BYTE *)(v3 + *v20) == 0;
        else
          v3 = 0;
        if ((v59 & 1) != 0)
        {
          v53 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      default:
        if ((v56 & 1) == 0 || (*(_BYTE *)(a1 + 160) & 2) != 0)
        {
LABEL_98:
          v49 = PBReaderSkipValueWithTag();
          v21 = (int *)MEMORY[0x1E0D82BB8];
          v20 = (int *)MEMORY[0x1E0D82BC8];
          if ((v49 & 1) == 0)
          {
            v55 = 0;
            goto LABEL_138;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v43 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v44 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v43;

          }
          v45 = PBUnknownFieldAdd();
          v20 = (int *)MEMORY[0x1E0D82BC8];
          v21 = (int *)MEMORY[0x1E0D82BB8];
          if (!v45)
          {
            v55 = 0;
            goto LABEL_139;
          }
        }
        goto LABEL_136;
    }
  }
}

