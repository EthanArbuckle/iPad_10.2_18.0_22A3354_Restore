void sub_1892699F0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189269A98(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189269BE0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18926A2F8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18926A3FC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEOMapQueryReadAllFrom(uint64_t a1, void *a2)
{
  uint64_t Specified;
  id v6;
  uint8_t v7[16];

  if (*(_DWORD *)(a1 + 68))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOMapQueryReadAllFrom can only be called once per object"));
  }
  else
  {
    if (!((unint64_t)objc_msgSend(a2, "position") >> 32)
      && !((unint64_t)objc_msgSend(a2, "length") >> 32))
    {
      os_unfair_lock_lock((os_unfair_lock_t)(a1 + 72));
      v6 = a2;
      objc_sync_enter(v6);
      objc_storeStrong((id *)(a1 + 8), a2);
      *(_DWORD *)(a1 + 64) = objc_msgSend(v6, "position");
      *(_DWORD *)(a1 + 68) = objc_msgSend(v6, "length");
      Specified = GEOMapQueryReadSpecified(a1, (uint64_t)v6, GEOMapQueryReadAllFrom_initialTag);
      objc_sync_exit(v6);

      os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
      return Specified;
    }
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v7 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v7, 2u);
    }
  }
  return 0;
}

void sub_18926A574(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18926A948(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void GEOMapQueryClearSensitiveFields(uint64_t a1, uint64_t a2, int a3)
{
  void *v5;
  int HasSensitiveFields;
  void *v7;
  _DWORD *v8;
  void *v9;
  void *v10;
  unsigned int v11;
  void *v12;
  void *v13;
  id v14;

  if (!a1 || !a3)
  {
    -[GEOMapQuery userLocation]((id *)a1);
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "clearSensitiveFields:", a2);

LABEL_11:
    -[GEOMapQuery placeSearchRequest]((id *)a1);
    v14 = (id)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v14, "clearSensitiveFields:", a2);
    goto LABEL_12;
  }
  -[GEOMapQuery _readUserLocation](a1);
  if (*(_QWORD *)(a1 + 56)
    && (-[GEOMapQuery userLocation]((id *)a1),
        v5 = (void *)objc_claimAutoreleasedReturnValue(),
        HasSensitiveFields = GEOLocationHasSensitiveFields((uint64_t)v5),
        v5,
        HasSensitiveFields))
  {
    -[GEOMapQuery userLocation]((id *)a1);
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = (_DWORD *)objc_msgSend(v7, "copy");

    GEOLocationClearSensitiveFields(v8);
    -[GEOMapQuery setUserLocation:](a1, v8);
  }
  else
  {
    -[GEOMapQuery userLocation]((id *)a1);
    v8 = (_DWORD *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "clearSensitiveFields:", a2);
  }

  -[GEOMapQuery _readPlaceSearchRequest](a1);
  if (!*(_QWORD *)(a1 + 40))
    goto LABEL_11;
  -[GEOMapQuery placeSearchRequest]((id *)a1);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v11 = GEOPlaceSearchRequestHasSensitiveFields(v10);

  if (!v11)
    goto LABEL_11;
  -[GEOMapQuery placeSearchRequest]((id *)a1);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v14 = (id)objc_msgSend(v12, "copy");

  objc_msgSend(v14, "location");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v13, "clearSensitiveFields:", a2);

  -[GEOMapQuery setPlaceSearchRequest:](a1, v14);
LABEL_12:

}

void sub_18926AE5C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18926CA70(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18926D550(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18926D7CC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18926D868(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18926D900(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18926D998(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18926DA2C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18926DAD4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18926DD78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  void *v15;
  va_list va;

  va_start(va, a15);

  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18926DF2C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;

  _Unwind_Resume(a1);
}

void sub_18926E068(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  uint64_t v8;
  va_list va;

  va_start(va, a8);
  _Block_object_dispose(va, 8);
  std::__hash_table<std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>>>::~__hash_table(v8);
  _Unwind_Resume(a1);
}

void GEOTileKeysForCoordinate(char a1, unsigned int a2, char a3, uint64_t a4, void *a5, double a6, double a7, double a8)
{
  void (**v15)(id, _QWORD *);
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unsigned int v24;
  uint64_t v25;
  unsigned int v26;
  uint64_t v27;
  NSObject *v29;
  unint64_t v30;
  uint64_t v31;
  unsigned int v32;
  unint64_t v33;
  __int128 v34;
  unsigned int v35;
  unsigned int v36;
  unsigned int v37;
  unint64_t v38;
  _QWORD v39[2];
  _QWORD buf[4];

  buf[3] = *MEMORY[0x1E0C80C00];
  v15 = a5;
  v16 = GEOMapRectMakeWithRadialDistance(a6, a7, a8);
  v20 = (double)(1 << a1) * 0.0000000037252903;
  v21 = llround(floor(v20 * v16));
  if (v21 >= 4294967294)
    v21 = 4294967294;
  v22 = v21 & ~(v21 >> 63);
  v23 = llround(floor(v20 * v17));
  if (v23 >= 4294967294)
    v23 = 4294967294;
  v24 = v23 & ~(v23 >> 63);
  v25 = llround(floor(v20 * (v16 + v18)));
  if (v25 >= 4294967294)
    v25 = 4294967294;
  v26 = v25 & ~(v25 >> 63);
  v27 = llround(floor(v20 * (v17 + v19)));
  if (v27 >= 4294967294)
    v27 = 4294967294;
  v36 = v27 & ~(v27 >> 63);
  v37 = v24;
  if (v26 - v22 > 0x13880 || v36 - v24 > 0x13880)
  {
    GEOFindOrCreateLog("com.apple.GeoServices", "GEOMapTileFinder");
    v29 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v29, OS_LOG_TYPE_ERROR))
    {
      LOWORD(buf[0]) = 0;
      _os_log_impl(&dword_1885A9000, v29, OS_LOG_TYPE_ERROR, "GEOMapRect is too large.", (uint8_t *)buf, 2u);
    }

  }
  else if (v26 >= v22)
  {
    v30 = (unint64_t)(a1 & 0x3F) << 40;
    v31 = a4 << 52;
    v35 = v26;
    do
    {
      v38 = v22;
      if (v36 >= v37)
      {
        v32 = v37;
        do
        {
          *(_QWORD *)((char *)buf + 1) = (v38 << 46) | v30;
          LOBYTE(buf[0]) = 2;
          if (a2 <= 0x19 && ((1 << a2) & 0x200101C) != 0)
            v33 = 128;
          else
            v33 = (unint64_t)(a2 == 26) << 7;
          *((_QWORD *)&v34 + 1) = (v38 >> 18) | ((unint64_t)(v32 & 0x3FFFFFF) << 8) | ((unint64_t)(a2 & 0x3FFF) << 34) | ((unint64_t)(a3 & 0xF) << 48) | v31;
          *(_QWORD *)&v34 = v38 << 46;
          v39[0] = v33 | buf[0] & 0xFFFFFFFFFFFFFF7FLL;
          v39[1] = v34 >> 56;
          v15[2](v15, v39);
          ++v32;
        }
        while (v36 + 1 != v32);
      }
      v22 = (v38 + 1);
    }
    while ((_DWORD)v38 != v35);
  }

}

void sub_18926E348(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18926E554(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  std::__hash_table<std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>>>::~__hash_table((uint64_t)&a9);
  _Unwind_Resume(a1);
}

_QWORD *std::__hash_table<_GEOTileKey,std::hash<_GEOTileKey>,std::equal_to<_GEOTileKey>,std::allocator<_GEOTileKey>>::__emplace_unique_key_args<_GEOTileKey,_GEOTileKey const&>(uint64_t a1, _QWORD *a2, _OWORD *a3)
{
  unint64_t v3;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint8x8_t v10;
  _QWORD **v11;
  _QWORD *i;
  unint64_t v13;
  float v15;
  float v16;
  _BOOL8 v17;
  unint64_t v18;
  unint64_t v19;
  size_t v20;
  uint64_t v21;
  _QWORD *v22;
  unint64_t v23;

  v7 = GEOTileKeyHash(a2);
  v8 = v7;
  v9 = *(_QWORD *)(a1 + 8);
  if (v9)
  {
    v10 = (uint8x8_t)vcnt_s8((int8x8_t)v9);
    v10.i16[0] = vaddlv_u8(v10);
    if (v10.u32[0] > 1uLL)
    {
      v3 = v7;
      if (v7 >= v9)
        v3 = v7 % v9;
    }
    else
    {
      v3 = (v9 - 1) & v7;
    }
    v11 = *(_QWORD ***)(*(_QWORD *)a1 + 8 * v3);
    if (v11)
    {
      for (i = *v11; i; i = (_QWORD *)*i)
      {
        v13 = i[1];
        if (v13 == v7)
        {
          if (i[2] == *a2 && i[3] == a2[1])
            return i;
        }
        else
        {
          if (v10.u32[0] > 1uLL)
          {
            if (v13 >= v9)
              v13 %= v9;
          }
          else
          {
            v13 &= v9 - 1;
          }
          if (v13 != v3)
            break;
        }
      }
    }
  }
  i = operator new(0x20uLL);
  *i = 0;
  i[1] = v8;
  *((_OWORD *)i + 1) = *a3;
  v15 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v16 = *(float *)(a1 + 32);
  if (!v9 || (float)(v16 * (float)v9) < v15)
  {
    v17 = 1;
    if (v9 >= 3)
      v17 = (v9 & (v9 - 1)) != 0;
    v18 = v17 | (2 * v9);
    v19 = vcvtps_u32_f32(v15 / v16);
    if (v18 <= v19)
      v20 = v19;
    else
      v20 = v18;
    std::__hash_table<std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>>>::__rehash<true>(a1, v20);
    v9 = *(_QWORD *)(a1 + 8);
    if ((v9 & (v9 - 1)) != 0)
    {
      if (v8 >= v9)
        v3 = v8 % v9;
      else
        v3 = v8;
    }
    else
    {
      v3 = (v9 - 1) & v8;
    }
  }
  v21 = *(_QWORD *)a1;
  v22 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v3);
  if (v22)
  {
    *i = *v22;
LABEL_42:
    *v22 = i;
    goto LABEL_43;
  }
  *i = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = i;
  *(_QWORD *)(v21 + 8 * v3) = a1 + 16;
  if (*i)
  {
    v23 = *(_QWORD *)(*i + 8);
    if ((v9 & (v9 - 1)) != 0)
    {
      if (v23 >= v9)
        v23 %= v9;
    }
    else
    {
      v23 &= v9 - 1;
    }
    v22 = (_QWORD *)(*(_QWORD *)a1 + 8 * v23);
    goto LABEL_42;
  }
LABEL_43:
  ++*(_QWORD *)(a1 + 24);
  return i;
}

void sub_18926E95C(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_18926EB3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18926EC4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18926F05C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18926F3B4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOTerritoryDataPolygonCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  _BYTE v9[128];
  uint64_t v10;

  v10 = *MEMORY[0x1E0C80C00];
  v5 = 0u;
  v6 = 0u;
  v7 = 0u;
  v8 = 0u;
  v1 = *(id *)(a1 + 40);
  v2 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v5, v9, 16);
  if (v2)
  {
    v3 = v2;
    v4 = *(_QWORD *)v6;
    while (1)
    {
      if (*(_QWORD *)v6 != v4)
        objc_enumerationMutation(v1);
      if (!--v3)
      {
        v3 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v5, v9, 16);
        if (!v3)
          break;
      }
    }
  }

}

void sub_18926F6F8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18926F978(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18926FDFC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18927032C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189270414(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892706FC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892708F8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDSpatialLookupCategoryForCategory(unint64_t a1)
{
  if (a1 < 0x16)
    return (a1 + 1);
  else
    return 0;
}

uint64_t _GEOSpatialLookupCategoryForGEOPDCategory(int a1)
{
  if ((a1 - 1) >= 0x16)
    return -1;
  else
    return (a1 - 1);
}

void _loadAttributions(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  void *v6;
  _QWORD v7[4];
  id v8;

  v3 = a1;
  v4 = a2;
  if (v4)
  {
    if (+[GEOMapService shouldResolveAttribution](GEOMapService, "shouldResolveAttribution"))
    {
      +[GEOSearchAttributionManifestManager sharedManager](GEOSearchAttributionManifestManager, "sharedManager");
      v5 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v3, "allObjects");
      v6 = (void *)objc_claimAutoreleasedReturnValue();
      v7[0] = MEMORY[0x1E0C809B0];
      v7[1] = 3221225472;
      v7[2] = ___loadAttributions_block_invoke;
      v7[3] = &unk_1E1C0CF10;
      v8 = v4;
      objc_msgSend(v5, "loadAttributionInfoForIdentifiers:completionHandler:", v6, v7);

    }
    else
    {
      (*((void (**)(id, _QWORD))v4 + 2))(v4, 0);
    }
  }

}

void ___loadAttributions_block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t i;
  uint64_t v10;
  void *v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  _BYTE v16[128];
  uint64_t v17;

  v17 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  v4 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0CB3748]), "initWithKeyOptions:valueOptions:capacity:", 0, 0, objc_msgSend(v3, "count"));
  v12 = 0u;
  v13 = 0u;
  v14 = 0u;
  v15 = 0u;
  v5 = v3;
  v6 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v12, v16, 16);
  if (v6)
  {
    v7 = v6;
    v8 = *(_QWORD *)v13;
    do
    {
      for (i = 0; i != v7; ++i)
      {
        if (*(_QWORD *)v13 != v8)
          objc_enumerationMutation(v5);
        v10 = *(_QWORD *)(*((_QWORD *)&v12 + 1) + 8 * i);
        objc_msgSend(v5, "objectForKeyedSubscript:", v10, (_QWORD)v12);
        v11 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v4, "setObject:forKey:", v11, v10);

      }
      v7 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v12, v16, 16);
    }
    while (v7);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void ___attributedGeoMapItemsForPlaceDatasWithHandler_block_invoke(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;

  _attributedGeoMapItemsForPlaceDatas(*(void **)(a1 + 32), *(void **)(a1 + 40), *(void **)(a1 + 48), *(void **)(a1 + 56), a2);
  v6 = (id)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v6, "count");
  v4 = *(_QWORD *)(a1 + 64);
  if (v3)
  {
    (*(void (**)(uint64_t, id, _QWORD))(v4 + 16))(v4, v6, 0);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB35C8], "GEOErrorWithCode:reason:", -8, CFSTR("No Results"));
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    (*(void (**)(uint64_t, _QWORD, void *))(v4 + 16))(v4, 0, v5);

  }
}

void sub_189271664(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1892720CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_189272218(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1892729D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_189272E70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_189273000(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_189273180(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1892733C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18927357C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1892736C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_189274BB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_189276D14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28)
{
  _Block_object_dispose(&a28, 8);
  _Unwind_Resume(a1);
}

void sub_189276EF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_189277F50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_189279EFC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18927A0A4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18927A110(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18927A2A0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18927A340(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

id GEOGetMapMatchingLog()
{
  if (qword_1ECDBC120 != -1)
    dispatch_once(&qword_1ECDBC120, &__block_literal_global_103);
  return (id)_MergedGlobals_247;
}

void sub_18927AEA8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOSpatialLookupBatchRequestReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  int *v15;
  int *v16;
  int *v17;
  int *v18;
  char v19;
  unsigned int v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  int v26;
  unint64_t v28;
  BOOL v29;
  int *v30;
  int v31;
  int v32;
  BOOL v33;
  GEOSpatialLookupRequest *v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  char v38;
  int v39;
  char v40;
  void *v41;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1)
      + (*(_BYTE *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v8])
    {
      case -3:
        v7 = 1;
        goto LABEL_6;
      case -2:
        v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v10 | (v11 > 1);
        if (v10 & 1 | (v11 > 1) | v7 & 1)
          v15 = 0;
        else
          v15 = a3;
        v16 = (int *)MEMORY[0x1E0D82BF0];
        v17 = (int *)MEMORY[0x1E0D82BC8];
        v18 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_6:
        v12 = v9;
        v13 = v10;
LABEL_8:
        ++v8;
        v9 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v16) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v17))
      goto LABEL_60;
    v19 = 0;
    v20 = 0;
    v21 = 0;
    while (1)
    {
      v22 = *v16;
      v23 = *(_QWORD *)(v3 + v22);
      if (v23 == -1 || v23 >= *(_QWORD *)(v3 + *v6))
        break;
      v24 = *(_BYTE *)(*(_QWORD *)(v3 + *v18) + v23);
      *(_QWORD *)(v3 + v22) = v23 + 1;
      v21 |= (unint64_t)(v24 & 0x7F) << v19;
      if ((v24 & 0x80) == 0)
        goto LABEL_23;
      v19 += 7;
      if (v20++ >= 9)
      {
        v21 = 0;
        v26 = *(unsigned __int8 *)(v3 + *v17);
        goto LABEL_25;
      }
    }
    *(_BYTE *)(v3 + *v17) = 1;
LABEL_23:
    v26 = *(unsigned __int8 *)(v3 + *v17);
    if (*(_BYTE *)(v3 + *v17))
      v21 = 0;
LABEL_25:
    if (v26 || (v21 & 7) == 4)
    {
LABEL_60:
      if ((v14 & 1) != 0)
      {
        v38 = 1;
        goto LABEL_68;
      }
      if (v15)
      {
        while (1)
        {
          v39 = *v15++;
          v40 = 4;
          switch(v39)
          {
            case 0:
              goto LABEL_69;
            case 1:
              goto LABEL_66;
            case 2:
              v40 = 1;
              goto LABEL_66;
            case 3:
              v40 = 2;
LABEL_66:
              *(_BYTE *)(a1 + 52) |= v40;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_69;
    }
    v28 = v21 >> 3;
    v29 = v14;
    if (!((v15 == 0) | v14 & 1))
    {
      v30 = v15;
      do
      {
        v32 = *v30++;
        v31 = v32;
        v29 = v32 != 0;
        if (v32)
          v33 = v31 == (_DWORD)v28;
        else
          v33 = 1;
      }
      while (!v33);
    }
    if ((_DWORD)v28 != 3)
      break;
    if (!v29)
      goto LABEL_53;
    if ((*(_BYTE *)(a1 + 52) & 2) == 0)
    {
      PBReaderReadString();
      v35 = objc_claimAutoreleasedReturnValue();
      v36 = 24;
LABEL_50:
      v37 = *(void **)(a1 + v36);
      *(_QWORD *)(a1 + v36) = v35;

      --v8;
      goto LABEL_54;
    }
    if ((PBReaderSkipValueWithTag() & 1) == 0)
      goto LABEL_67;
    v8 += *(unsigned __int8 *)(a1 + 52) << 30 >> 31;
LABEL_54:
    if (!(v14 & 1 | (v8 != 0)))
      goto LABEL_60;
  }
  if ((_DWORD)v28 == 2)
  {
    if (!v29)
      goto LABEL_53;
    if ((*(_BYTE *)(a1 + 52) & 1) == 0)
    {
      PBReaderReadString();
      v35 = objc_claimAutoreleasedReturnValue();
      v36 = 16;
      goto LABEL_50;
    }
    if ((PBReaderSkipValueWithTag() & 1) == 0)
    {
LABEL_67:
      v38 = 0;
      goto LABEL_68;
    }
    v8 -= *(_BYTE *)(a1 + 52) & 1;
    goto LABEL_54;
  }
  if ((_DWORD)v28 != 1)
  {
    if (!PBReaderSkipValueWithTag())
      goto LABEL_67;
    goto LABEL_54;
  }
  if (!v29 || (*(_BYTE *)(a1 + 52) & 4) != 0)
  {
LABEL_53:
    if ((PBReaderSkipValueWithTag() & 1) == 0)
      goto LABEL_67;
    goto LABEL_54;
  }
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_67;
  v34 = objc_alloc_init(GEOSpatialLookupRequest);
  if (GEOSpatialLookupRequestReadAllFrom((uint64_t)v34, (void *)v3, v9 & 1))
  {
    PBReaderRecallMark();
    -[GEOSpatialLookupBatchRequest _addNoFlagsRequest:](a1, v34);

    v17 = (int *)MEMORY[0x1E0D82BC8];
    goto LABEL_54;
  }

  v38 = 0;
  v17 = (int *)MEMORY[0x1E0D82BC8];
LABEL_68:
  *(_BYTE *)(a1 + 52) |= 4u;
  *(_BYTE *)(a1 + 52) |= 1u;
  *(_BYTE *)(a1 + 52) |= 2u;
  if ((v38 & 1) != 0)
  {
LABEL_69:
    v3 = *(_BYTE *)(v3 + *v17) == 0;
    if ((v14 & 1) == 0)
      return v3;
    goto LABEL_70;
  }
  v3 = 0;
  if ((v14 & 1) != 0)
  {
LABEL_70:
    v41 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_18927B690(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18927B7D4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18927BF28(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOSpatialLookupBatchRequestReadAllFrom(uint64_t a1, void *a2)
{
  unint64_t Specified;
  id v6;
  uint8_t v7[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOSpatialLookupBatchRequestReadAllFrom can only be called once per object"));
  }
  else
  {
    if (!((unint64_t)objc_msgSend(a2, "position") >> 32)
      && !((unint64_t)objc_msgSend(a2, "length") >> 32))
    {
      os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
      v6 = a2;
      objc_sync_enter(v6);
      objc_storeStrong((id *)(a1 + 8), a2);
      *(_DWORD *)(a1 + 40) = objc_msgSend(v6, "position");
      *(_DWORD *)(a1 + 44) = objc_msgSend(v6, "length");
      Specified = GEOSpatialLookupBatchRequestReadSpecified(a1, (unint64_t)v6, (int *)&GEOSpatialLookupBatchRequestReadAllFrom_initialTag);
      objc_sync_exit(v6);

      os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
      return Specified;
    }
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v7 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v7, 2u);
    }
  }
  return 0;
}

void sub_18927C0A8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEOSpatialLookupRequestIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int v5;
  int *v6;
  char v7;
  unsigned int v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  BOOL v13;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  int v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  int v31;
  unsigned int v32;
  unsigned int v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  int v37;
  BOOL v38;
  uint64_t v39;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = 0;
    v6 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_64;
      v7 = 0;
      v8 = 0;
      v9 = 0;
      while (1)
      {
        v10 = *v2;
        v11 = *(_QWORD *)&a1[v10];
        if (v11 == -1 || v11 >= *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v6] + v11);
        *(_QWORD *)&a1[v10] = v11 + 1;
        v9 |= (unint64_t)(v12 & 0x7F) << v7;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v7 += 7;
        v13 = v8++ >= 9;
        if (v13)
        {
          v9 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v9 = 0;
LABEL_14:
      v15 = v9 & 7;
      if (v14 || v15 == 4)
        goto LABEL_64;
      switch((v9 >> 3))
      {
        case 1u:
          if (v5 || v15 != 2 || !PBReaderPlaceMark() || !GEOLatLngIsValid(a1))
            goto LABEL_72;
          PBReaderRecallMark();
          v5 = 1;
          goto LABEL_61;
        case 2u:
          if ((v9 & 7) != 0)
            goto LABEL_72;
          v17 = 0;
          while (1)
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            if (v19 == -1 || v19 >= *(_QWORD *)&a1[*v3])
              goto LABEL_49;
            v20 = v19 + 1;
            v21 = *(char *)(*(_QWORD *)&a1[*v6] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if (v21 < 0)
            {
              v22 = v17++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_61;
          }
        case 3u:
          if ((v9 & 7) != 0)
            goto LABEL_72;
          v23 = 0;
          while (1)
          {
            v24 = *v2;
            v25 = *(_QWORD *)&a1[v24];
            if (v25 == -1 || v25 >= *(_QWORD *)&a1[*v3])
              goto LABEL_49;
            v26 = v25 + 1;
            v27 = *(char *)(*(_QWORD *)&a1[*v6] + v25);
            *(_QWORD *)&a1[v24] = v26;
            if (v27 < 0)
            {
              v22 = v23++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_61;
          }
        case 4u:
          if (v15 == 2)
          {
            if (!PBReaderPlaceMark())
            {
LABEL_72:
              PBReaderRecallMark();
              return 0;
            }
LABEL_51:
            while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
            {
              v33 = a1[*v4];
              if (a1[*v4])
                break;
              while (1)
              {
                v34 = *v2;
                v35 = *(_QWORD *)&a1[v34];
                if (v35 == -1 || v35 >= *(_QWORD *)&a1[*v3])
                  break;
                v36 = v35 + 1;
                v37 = *(char *)(*(_QWORD *)&a1[*v6] + v35);
                *(_QWORD *)&a1[v34] = v36;
                if (v37 < 0)
                {
                  v13 = v33++ >= 9;
                  if (!v13)
                    continue;
                }
                goto LABEL_51;
              }
              a1[*v4] = 1;
            }
            PBReaderRecallMark();
          }
          else
          {
            if ((v9 & 7) != 0)
              goto LABEL_72;
            while (1)
            {
              v28 = *v2;
              v29 = *(_QWORD *)&a1[v28];
              if (v29 == -1 || v29 >= *(_QWORD *)&a1[*v3])
                break;
              v30 = v29 + 1;
              v31 = *(char *)(*(_QWORD *)&a1[*v6] + v29);
              *(_QWORD *)&a1[v28] = v30;
              if (v31 < 0)
              {
                v32 = v15++;
                if (v32 <= 8)
                  continue;
              }
              goto LABEL_61;
            }
LABEL_49:
            a1[*v4] = 1;
          }
LABEL_61:
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_64;
          break;
        default:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_72;
          goto LABEL_61;
      }
    }
  }
  v5 = 0;
LABEL_64:
  if (a1[*v4])
    v38 = 1;
  else
    v38 = v5 == 0;
  v39 = !v38;
  PBReaderRecallMark();
  return v39;
}

void sub_18927C89C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18927CD38(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOSpatialLookupResponseIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  int v13;
  int v14;
  unsigned int v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int v20;
  _BOOL8 v22;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        if (v10 == -1 || v10 >= *(_QWORD *)&a1[*v3])
          break;
        v11 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v13 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v14 = v8 & 7;
      if (v13 || v14 == 4)
        break;
      if ((v8 >> 3) == 2)
      {
        if (v14 != 2 || !PBReaderPlaceMark() || !GEOPDPlaceIsValid(a1))
        {
LABEL_38:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0)
          goto LABEL_38;
        v16 = 0;
        while (1)
        {
          v17 = *v2;
          v18 = *(_QWORD *)&a1[v17];
          if (v18 == -1 || v18 >= *(_QWORD *)&a1[*v3])
            break;
          v19 = v18 + 1;
          v20 = *(char *)(*(_QWORD *)&a1[*v5] + v18);
          *(_QWORD *)&a1[v17] = v19;
          if (v20 < 0 && v16++ <= 8)
            continue;
          goto LABEL_35;
        }
        a1[*v4] = 1;
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_38;
      }
LABEL_35:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v22 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v22;
}

void sub_18927E150(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOSpatialLookupResponseClearSensitiveFields(uint64_t a1, uint64_t a2, int a3)
{
  unint64_t result;
  unint64_t i;
  void *v8;
  void *v9;
  void *v10;
  void *v11;

  result = objc_msgSend(*(id *)(a1 + 8), "count");
  if (result)
  {
    for (i = 0; i < result; ++i)
    {
      objc_msgSend(*(id *)(a1 + 8), "objectAtIndexedSubscript:", i);
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      v9 = v8;
      if (a3 && GEOPDPlaceHasSensitiveFields(v8, a2))
      {
        v10 = (void *)objc_msgSend(v9, "copy");
        objc_msgSend(v10, "requestData");
        v11 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v11, "clearSensitiveFields:", a2);

        objc_msgSend(*(id *)(a1 + 8), "replaceObjectAtIndex:withObject:", i, v10);
      }
      else
      {
        objc_msgSend(v9, "clearSensitiveFields:", a2);
      }

      result = objc_msgSend(*(id *)(a1 + 8), "count");
    }
  }
  return result;
}

void sub_18927EC84(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOSpatialLookupRequestReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  int *v14;
  _BOOL4 v15;
  int *v16;
  int *v17;
  BOOL v18;
  int *v19;
  char v20;
  unsigned int v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  BOOL v26;
  int v27;
  int v28;
  unint64_t v30;
  _BOOL4 v31;
  int *v32;
  int v33;
  int v34;
  BOOL v35;
  GEOLatLng *v36;
  void *v37;
  int v38;
  char v39;
  unsigned int v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  char v45;
  unsigned int v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  int *v50;
  char v51;
  unsigned int v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  char v56;
  char v57;
  uint64_t v58;
  char v59;
  unsigned int v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  char v64;
  int v65;
  char v66;
  int v67;
  int v68;
  void *v69;
  _BOOL4 v71;
  BOOL v72;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 52);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 48));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int8 *)(a1 + 68) >> 3) & 1) + ((*(unsigned __int8 *)(a1 + 68) >> 2) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v8])
    {
      case -3:
        v7 = 1;
        goto LABEL_6;
      case -2:
        v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        if (((v10 & 1 | v11) != 0) | v7 & 1)
          v14 = 0;
        else
          v14 = a3;
        v15 = (v10 & 1 | v11) != 0;
        v16 = (int *)MEMORY[0x1E0D82BF0];
        v17 = (int *)MEMORY[0x1E0D82BC8];
        if (*(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(v3 + *v6))
          goto LABEL_107;
        if (v14)
          v18 = (v10 & 1 | v11) != 0;
        else
          v18 = 1;
        v72 = v18;
        v19 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_6:
        v12 = v9;
        v13 = v10;
LABEL_8:
        ++v8;
        v9 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_BYTE *)(v3 + *v17))
      goto LABEL_107;
    v20 = 0;
    v21 = 0;
    v22 = 0;
    while (1)
    {
      v23 = *v16;
      v24 = *(_QWORD *)(v3 + v23);
      if (v24 == -1 || v24 >= *(_QWORD *)(v3 + *v6))
        break;
      v25 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v24);
      *(_QWORD *)(v3 + v23) = v24 + 1;
      v22 |= (unint64_t)(v25 & 0x7F) << v20;
      if ((v25 & 0x80) == 0)
        goto LABEL_26;
      v20 += 7;
      v26 = v21++ >= 9;
      if (v26)
      {
        v22 = 0;
        v27 = *(unsigned __int8 *)(v3 + *v17);
        goto LABEL_28;
      }
    }
    *(_BYTE *)(v3 + *v17) = 1;
LABEL_26:
    v27 = *(unsigned __int8 *)(v3 + *v17);
    if (*(_BYTE *)(v3 + *v17))
      v22 = 0;
LABEL_28:
    v28 = v22 & 7;
    if (v27 || v28 == 4)
    {
LABEL_107:
      if (v15)
      {
        v66 = 1;
        goto LABEL_109;
      }
      if (!v14)
        goto LABEL_119;
      while (1)
      {
        while (1)
        {
          v68 = *v14++;
          v67 = v68;
          if (v68 != 1)
            break;
          LOBYTE(v67) = 8;
LABEL_118:
          *(_BYTE *)(a1 + 68) |= v67;
        }
        if (v67 == 4)
          goto LABEL_118;
        if (!v67)
          goto LABEL_119;
      }
    }
    v30 = v22 >> 3;
    v31 = v15;
    if (!v72)
    {
      v32 = v14;
      do
      {
        v34 = *v32++;
        v33 = v34;
        v31 = v34 != 0;
        if (v34)
          v35 = v33 == (_DWORD)v30;
        else
          v35 = 1;
      }
      while (!v35);
    }
    switch((int)v30)
    {
      case 1:
        if (!v31)
          goto LABEL_78;
        if ((*(_BYTE *)(a1 + 68) & 8) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_123;
          v71 = v15;
          v36 = objc_alloc_init(GEOLatLng);
          if (GEOLatLngReadAllFrom((uint64_t)v36, (void *)v3))
          {
            PBReaderRecallMark();
            v37 = *(void **)(a1 + 40);
            *(_QWORD *)(a1 + 40) = v36;

            --v8;
            v15 = v71;
            goto LABEL_101;
          }

          v66 = 0;
          v15 = v71;
          goto LABEL_125;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_123;
        v8 += *(unsigned __int8 *)(a1 + 68) << 28 >> 31;
        goto LABEL_101;
      case 2:
        if ((v7 & 1) == 0)
          goto LABEL_78;
        v39 = 0;
        v40 = 0;
        v41 = 0;
        *(_BYTE *)(a1 + 68) |= 2u;
        while (2)
        {
          v42 = *v16;
          v43 = *(_QWORD *)(v3 + v42);
          if (v43 == -1 || v43 >= *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v17) = 1;
          }
          else
          {
            v44 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v43);
            *(_QWORD *)(v3 + v42) = v43 + 1;
            v41 |= (unint64_t)(v44 & 0x7F) << v39;
            if (v44 < 0)
            {
              v39 += 7;
              v26 = v40++ >= 9;
              if (v26)
              {
                LODWORD(v41) = 0;
                goto LABEL_83;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v17))
          LODWORD(v41) = 0;
LABEL_83:
        v58 = 64;
        goto LABEL_88;
      case 3:
        if ((v7 & 1) == 0)
          goto LABEL_78;
        v45 = 0;
        v46 = 0;
        v41 = 0;
        *(_BYTE *)(a1 + 68) |= 1u;
        while (2)
        {
          v47 = *v16;
          v48 = *(_QWORD *)(v3 + v47);
          if (v48 == -1 || v48 >= *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v17) = 1;
          }
          else
          {
            v49 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v48);
            *(_QWORD *)(v3 + v47) = v48 + 1;
            v41 |= (unint64_t)(v49 & 0x7F) << v45;
            if (v49 < 0)
            {
              v45 += 7;
              v26 = v46++ >= 9;
              if (v26)
              {
                LODWORD(v41) = 0;
                goto LABEL_87;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v17))
          LODWORD(v41) = 0;
LABEL_87:
        v58 = 60;
LABEL_88:
        *(_DWORD *)(a1 + v58) = v41;
        goto LABEL_102;
      case 4:
        if (!v31 || (*(_BYTE *)(a1 + 68) & 4) != 0)
        {
LABEL_78:
          v57 = PBReaderSkipValueWithTag();
          v17 = (int *)MEMORY[0x1E0D82BC8];
          if ((v57 & 1) == 0)
          {
LABEL_122:
            v66 = 0;
            goto LABEL_109;
          }
LABEL_102:
          if (v8)
            v65 = 1;
          else
            v65 = v15;
          if (v65 != 1 || *(_QWORD *)(v3 + *v16) >= *(_QWORD *)(v3 + *v6))
            goto LABEL_107;
          continue;
        }
        if (v28 != 2)
        {
          v59 = 0;
          v60 = 0;
          v61 = 0;
          while (1)
          {
            v62 = *v16;
            v63 = *(_QWORD *)(v3 + v62);
            if (v63 == -1 || v63 >= *(_QWORD *)(v3 + *v6))
              break;
            v64 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v63);
            *(_QWORD *)(v3 + v62) = v63 + 1;
            v61 |= (unint64_t)(v64 & 0x7F) << v59;
            if (v64 < 0)
            {
              v59 += 7;
              v26 = v60++ >= 9;
              if (!v26)
                continue;
            }
            goto LABEL_100;
          }
          *(_BYTE *)(v3 + *v17) = 1;
LABEL_100:
          PBRepeatedInt32Add();
          goto LABEL_101;
        }
        if (PBReaderPlaceMark())
        {
          while (1)
          {
            v50 = (int *)MEMORY[0x1E0D82BC8];
            if (*(_QWORD *)(v3 + *v16) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + (int)*MEMORY[0x1E0D82BC8]))
              break;
            v51 = 0;
            v52 = 0;
            v53 = 0;
            while (1)
            {
              v54 = *v16;
              v55 = *(_QWORD *)(v3 + v54);
              if (v55 == -1 || v55 >= *(_QWORD *)(v3 + *v6))
                break;
              v56 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v55);
              *(_QWORD *)(v3 + v54) = v55 + 1;
              v53 |= (unint64_t)(v56 & 0x7F) << v51;
              if (v56 < 0)
              {
                v51 += 7;
                v26 = v52++ >= 9;
                if (!v26)
                  continue;
              }
              goto LABEL_77;
            }
            *(_BYTE *)(v3 + *v50) = 1;
LABEL_77:
            PBRepeatedInt32Add();
          }
          PBReaderRecallMark();
LABEL_101:
          v17 = (int *)MEMORY[0x1E0D82BC8];
          goto LABEL_102;
        }
LABEL_123:
        v66 = 0;
LABEL_125:
        v17 = (int *)MEMORY[0x1E0D82BC8];
LABEL_109:
        *(_BYTE *)(a1 + 68) |= 8u;
        *(_BYTE *)(a1 + 68) |= 4u;
        if ((v66 & 1) != 0)
        {
LABEL_119:
          v3 = *(_BYTE *)(v3 + *v17) == 0;
          if (v15)
            goto LABEL_120;
          return v3;
        }
        v3 = 0;
        if (!v15)
          return v3;
LABEL_120:
        v69 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = 0;

        return v3;
      default:
        v38 = PBReaderSkipValueWithTag();
        v17 = (int *)MEMORY[0x1E0D82BC8];
        if (!v38)
          goto LABEL_122;
        goto LABEL_102;
    }
  }
}

void sub_18927F674(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892804E8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOSpatialLookupRequestReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 52))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOSpatialLookupRequestReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 52) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOSpatialLookupRequestReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOSpatialLookupRequestReadAllFrom_initialTag;
  Specified = GEOSpatialLookupRequestReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    objc_msgSend(*(id *)(a1 + 40), "readAll:", 1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_18928068C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189280874(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189280B9C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOSpatialLookupResponseReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  GEOPDPlace *v23;
  _BOOL8 v24;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          if (v12 == -1 || v12 >= *(_QWORD *)&v3[*v5])
            break;
          v13 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v12 + 1;
          v10 |= (unint64_t)(v13 & 0x7F) << v8;
          if ((v13 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v14 = v9++ >= 9;
          if (v14)
          {
            v10 = 0;
            v15 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v15 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v15 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 2)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_40;
          v23 = objc_alloc_init(GEOPDPlace);
          if (!GEOPDPlaceReadAllFrom((uint64_t)v23, v3, 0))
          {

            goto LABEL_40;
          }
          PBReaderRecallMark();
          objc_msgSend((id)a1, "addPlace:", v23, 0, 0);

        }
        else if ((v10 >> 3) == 1)
        {
          v17 = 0;
          v18 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 20) |= 1u;
          while (1)
          {
            v20 = *v4;
            v21 = *(_QWORD *)&v3[v20];
            if (v21 == -1 || v21 >= *(_QWORD *)&v3[*v5])
              break;
            v22 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v21);
            *(_QWORD *)&v3[v20] = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              goto LABEL_34;
            v17 += 7;
            v14 = v18++ >= 9;
            if (v14)
            {
              LODWORD(v19) = 0;
              goto LABEL_36;
            }
          }
          v3[*v6] = 1;
LABEL_34:
          if (v3[*v6])
            LODWORD(v19) = 0;
LABEL_36:
          *(_DWORD *)(a1 + 16) = v19;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_40;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v24 = v3[*v6] == 0;
  }
  else
  {
LABEL_40:
    v24 = 0;
  }
  objc_sync_exit(v3);

  return v24;
}

void sub_189281B50(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189282474(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1892825E0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_189282700(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_189282894(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,id location,char a25)
{
  id *v25;

  objc_destroyWeak(v25);
  objc_destroyWeak(&location);
  _Block_object_dispose(&a25, 8);
  _Unwind_Resume(a1);
}

void sub_189282978(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_189282AE8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_189282E54(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_189282EE8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18928305C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_189283194(_Unwind_Exception *a1)
{
  void *v1;
  id *v2;
  uint64_t v3;

  objc_destroyWeak(v2);
  objc_destroyWeak((id *)(v3 - 72));

  _Unwind_Resume(a1);
}

void sub_18928322C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1892833A8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_189283490(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_189283518(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1892835DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  std::shared_ptr<std::vector<zilch::GeoCoordinates> const>::~shared_ptr[abi:ne180100]((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_189283B18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, void *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,id location,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,char a50,uint64_t a51,uint64_t a52,uint64_t a53,char a54,uint64_t a55,uint64_t a56,uint64_t a57,char a58,uint64_t a59,uint64_t a60,uint64_t a61,char a62,uint64_t a63)
{
  char a66;
  char a70;
  void *v70;
  id *v71;
  uint64_t v72;

  objc_destroyWeak(v71);
  objc_destroyWeak(&location);

  _Block_object_dispose(&a50, 8);
  _Block_object_dispose(&a54, 8);
  _Block_object_dispose(&a58, 8);
  _Block_object_dispose(&a62, 8);
  _Block_object_dispose(&a66, 8);
  _Block_object_dispose(&a70, 8);
  _Block_object_dispose(&STACK[0x208], 8);
  _Block_object_dispose(&STACK[0x228], 8);
  _Block_object_dispose((const void *)(v72 - 232), 8);
  _Block_object_dispose((const void *)(v72 - 200), 8);
  _Block_object_dispose((const void *)(v72 - 168), 8);

  _Unwind_Resume(a1);
}

void sub_189283E24(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_189283FE8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_189284560(_Unwind_Exception *a1, uint64_t a2, ...)
{
  void *v2;
  uint64_t v4;
  va_list va;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  v7 = va_arg(va1, _QWORD);
  v8 = va_arg(va1, _QWORD);
  v9 = va_arg(va1, _QWORD);
  v10 = va_arg(va1, _QWORD);
  std::shared_ptr<std::vector<zilch::GeoCoordinates> const>::~shared_ptr[abi:ne180100]((uint64_t)va);
  std::shared_ptr<std::vector<zilch::GeoCoordinates> const>::~shared_ptr[abi:ne180100]((uint64_t)va1);

  _Unwind_Resume(a1);
}

void std::__shared_ptr_emplace<geo::MapPickedRoadFeature>::~__shared_ptr_emplace(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_1E1BFB410;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void std::__shared_ptr_emplace<geo::MapPickedRoadFeature>::~__shared_ptr_emplace(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_1E1BFB410;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x18D76437CLL);
}

uint64_t std::__shared_ptr_emplace<geo::MapPickedRoadFeature>::__on_zero_shared(uint64_t a1)
{
  return (**(uint64_t (***)(uint64_t))(a1 + 24))(a1 + 24);
}

void std::__shared_ptr_emplace<geo::MapPickedPointFeature>::~__shared_ptr_emplace(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_1E1BFB480;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void std::__shared_ptr_emplace<geo::MapPickedPointFeature>::~__shared_ptr_emplace(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_1E1BFB480;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x18D76437CLL);
}

uint64_t std::__shared_ptr_emplace<geo::MapPickedPointFeature>::__on_zero_shared(uint64_t a1)
{
  return (**(uint64_t (***)(uint64_t))(a1 + 24))(a1 + 24);
}

void geo::MapPickedPointFeature::~MapPickedPointFeature(geo::MapPickedPointFeature *this)
{
  JUMPOUT(0x18D76437CLL);
}

uint64_t geo::MapPickedPointFeature::type(geo::MapPickedPointFeature *this)
{
  return 2;
}

void std::__shared_ptr_emplace<geo::MapPickedPolygonFeature>::~__shared_ptr_emplace(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_1E1BFB4B8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void std::__shared_ptr_emplace<geo::MapPickedPolygonFeature>::~__shared_ptr_emplace(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_1E1BFB4B8;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x18D76437CLL);
}

uint64_t std::__shared_ptr_emplace<geo::MapPickedPolygonFeature>::__on_zero_shared(uint64_t a1)
{
  return (**(uint64_t (***)(uint64_t))(a1 + 24))(a1 + 24);
}

void geo::MapPickedPolygonFeature::~MapPickedPolygonFeature(geo::MapPickedPolygonFeature *this)
{
  JUMPOUT(0x18D76437CLL);
}

uint64_t geo::MapPickedPolygonFeature::type(geo::MapPickedPolygonFeature *this)
{
  return 3;
}

BOOL GEOPublisherAttributionManifestReadAllFrom(void *a1, void *a2, int a3)
{
  char *v4;
  int *v5;
  int *v6;
  int *v7;
  int *v8;
  char v9;
  unsigned int v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  char v18;
  char v19;
  GEOPublisherAttributionSource *v20;
  void *v21;
  char v22;
  unsigned int v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  uint64_t v29;
  GEOPublisherAttributionSource *v30;
  _BOOL8 v31;
  void *v33;

  v4 = a2;
  objc_sync_enter(v4);
  if (v4)
  {
    v5 = (int *)MEMORY[0x1E0D82BF0];
    v6 = (int *)MEMORY[0x1E0D82BD8];
    v7 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v4[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v4[*MEMORY[0x1E0D82BD8]])
    {
      v8 = (int *)MEMORY[0x1E0D82BB8];
      v33 = a1;
      do
      {
        if (v4[*v7])
          break;
        v9 = 0;
        v10 = 0;
        v11 = 0;
        while (1)
        {
          v12 = *v5;
          v13 = *(_QWORD *)&v4[v12];
          if (v13 == -1 || v13 >= *(_QWORD *)&v4[*v6])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v4[*v8] + v13);
          *(_QWORD *)&v4[v12] = v13 + 1;
          v11 |= (unint64_t)(v14 & 0x7F) << v9;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v9 += 7;
          if (v10++ >= 9)
          {
            v11 = 0;
            v16 = v4[*v7];
            goto LABEL_15;
          }
        }
        v4[*v7] = 1;
LABEL_13:
        v16 = v4[*v7];
        if (v4[*v7])
          v11 = 0;
LABEL_15:
        if (v16 || (v11 & 7) == 4)
          break;
        if ((v11 >> 3) == 1)
        {
          if (!PBReaderPlaceMark())
            goto LABEL_51;
          if (*(_QWORD *)&v4[*v5] >= *(_QWORD *)&v4[*v6])
          {
            v21 = 0;
            v20 = 0;
LABEL_50:

            goto LABEL_51;
          }
          v18 = 0;
          v19 = 0;
          v20 = 0;
          v21 = 0;
          while (2)
          {
            if (!v4[*v7])
            {
              v22 = 0;
              v23 = 0;
              v24 = 0;
              while (1)
              {
                v25 = *v5;
                v26 = *(_QWORD *)&v4[v25];
                if (v26 == -1 || v26 >= *(_QWORD *)&v4[*v6])
                  break;
                v27 = *(_BYTE *)(*(_QWORD *)&v4[*v8] + v26);
                *(_QWORD *)&v4[v25] = v26 + 1;
                v24 |= (unint64_t)(v27 & 0x7F) << v22;
                if ((v27 & 0x80) == 0)
                  goto LABEL_32;
                v22 += 7;
                if (v23++ > 8)
                  goto LABEL_40;
              }
              v4[*v7] = 1;
LABEL_32:
              if (v4[*v7])
                v24 = 0;
              if ((v24 >> 3) != 2)
              {
                if ((v24 >> 3) == 1)
                {
                  PBReaderReadString();
                  v29 = objc_claimAutoreleasedReturnValue();

                  v19 = 1;
                  v21 = (void *)v29;
                  goto LABEL_41;
                }
LABEL_40:
                if (!PBReaderSkipValueWithTag())
                  goto LABEL_50;
                goto LABEL_41;
              }
              if (!PBReaderPlaceMark())
                goto LABEL_50;
              v30 = objc_alloc_init(GEOPublisherAttributionSource);

              if ((GEOPublisherAttributionSourceReadAllFrom((uint64_t)v30, v4, a3) & 1) == 0)
              {
                v20 = v30;
                goto LABEL_50;
              }
              PBReaderRecallMark();
              v18 = 1;
              v20 = v30;
LABEL_41:
              if (*(_QWORD *)&v4[*v5] < *(_QWORD *)&v4[*v6])
                continue;
            }
            break;
          }
          if ((v19 & 1) == 0 || (v18 & 1) == 0)
            goto LABEL_50;
          objc_msgSend(v33, "setPublisherAttributionSourcesValue:forKey:", v20, v21);
          PBReaderRecallMark();

        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_51;
        }
      }
      while (*(_QWORD *)&v4[*v5] < *(_QWORD *)&v4[*v6]);
    }
    v31 = v4[*v7] == 0;
  }
  else
  {
LABEL_51:
    v31 = 0;
  }
  objc_sync_exit(v4);

  return v31;
}

void sub_189285028(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPublisherAttributionManifestReadFrom(void *a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOPublisherAttributionManifestReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18928508C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPublisherAttributionManifestIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  BOOL v12;
  int v13;
  int v14;
  char v16;
  char v17;
  char v18;
  unsigned int v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  int v24;
  int v25;
  _BOOL8 v26;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        if (v10 == -1 || v10 >= *(_QWORD *)&a1[*v3])
          break;
        v11 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        v12 = v7++ >= 9;
        if (v12)
        {
          v8 = 0;
          v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v13 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v14 = v8 & 7;
      if (v13 || v14 == 4)
        break;
      if ((v8 >> 3) == 1)
      {
        if (v14 != 2 || !PBReaderPlaceMark() || *(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
          goto LABEL_51;
        v16 = 0;
        v17 = 0;
        do
        {
          if (a1[*v4])
            break;
          v18 = 0;
          v19 = 0;
          v20 = 0;
          while (1)
          {
            v21 = *v2;
            v22 = *(_QWORD *)&a1[v21];
            if (v22 == -1 || v22 >= *(_QWORD *)&a1[*v3])
              break;
            v23 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v22);
            *(_QWORD *)&a1[v21] = v22 + 1;
            v20 |= (unint64_t)(v23 & 0x7F) << v18;
            if ((v23 & 0x80) == 0)
              goto LABEL_32;
            v18 += 7;
            v12 = v19++ >= 9;
            if (v12)
            {
              v20 = 0;
              v24 = a1[*v4];
              goto LABEL_34;
            }
          }
          a1[*v4] = 1;
LABEL_32:
          v24 = a1[*v4];
          if (a1[*v4])
            v20 = 0;
LABEL_34:
          if (v24)
            break;
          v25 = v20 & 7;
          if ((v20 >> 3) == 2)
          {
            if (v25 != 2 || !GEOPublisherAttributionSourceIsValid(a1))
              goto LABEL_51;
            v17 = 1;
          }
          else if ((v20 >> 3) == 1)
          {
            if (v25 != 2)
              goto LABEL_51;
            v16 = 1;
            if ((PBReaderSkipValueWithTag() & 1) == 0)
              goto LABEL_51;
          }
          else if (!PBReaderSkipValueWithTag())
          {
            goto LABEL_51;
          }
        }
        while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
        if ((v16 & 1) == 0 || (v17 & 1) == 0)
        {
LABEL_51:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_51;
      }
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v26 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v26;
}

void sub_1892859F4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPublisherAttributionManifestIndexReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  char v7;
  char v8;
  uint64_t v9;
  int v10;
  unsigned int v11;
  int v12;
  BOOL v13;
  _BOOL8 v14;
  BOOL v15;
  int *v16;
  BOOL v17;
  BOOL v18;
  int *v19;
  int *v20;
  int *v21;
  int *v22;
  char v23;
  unsigned int v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  BOOL v29;
  int v30;
  unint64_t v32;
  _BOOL4 v33;
  int *v34;
  int v35;
  int v36;
  BOOL v37;
  void *v38;
  char v39;
  unsigned int v40;
  unint64_t v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  char v46;
  unsigned int v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  char v51;
  _BOOL8 v52;
  uint64_t v53;
  char v54;
  int v55;
  int v56;
  void *v57;
  uint64_t v59;
  char v60;
  char v61;
  BOOL v62;
  void *v63;
  BOOL v64;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 36);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 32));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = ((*(unsigned __int8 *)(a1 + 44) >> 1) & 1) + (*(_BYTE *)(a1 + 44) & 1);
  while (1)
  {
    v11 = a3[v9];
    if (v11 >= 0xFFFFFFFE)
    {
      v7 = 1;
      goto LABEL_9;
    }
    if (v11 != -3)
      break;
    v8 = 1;
LABEL_9:
    ++v9;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  v12 = v7 & 1 | v10;
  v13 = v9 != 0;
  v14 = v12 != 0;
  v15 = v14 | v8;
  if (v12)
    v13 = 1;
  if (v15)
    v16 = 0;
  else
    v16 = a3;
  v17 = v13;
  v18 = v16 == 0;
  if (v12)
    v18 = 1;
  v64 = v18;
  v19 = (int *)MEMORY[0x1E0D82BF0];
  v20 = (int *)MEMORY[0x1E0D82BC8];
  v21 = &OBJC_IVAR___GEORouteDetails__isNearCurrentlyDisplayedStep;
  v22 = (int *)MEMORY[0x1E0D82BB8];
  v62 = v13;
  while (2)
  {
    if (*(_QWORD *)(v3 + *v19) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v20))
      goto LABEL_89;
    v23 = 0;
    v24 = 0;
    v25 = 0;
    while (1)
    {
      v26 = *v19;
      v27 = *(_QWORD *)(v3 + v26);
      if (v27 == -1 || v27 >= *(_QWORD *)(v3 + *v6))
        break;
      v28 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v27);
      *(_QWORD *)(v3 + v26) = v27 + 1;
      v25 |= (unint64_t)(v28 & 0x7F) << v23;
      if ((v28 & 0x80) == 0)
        goto LABEL_28;
      v23 += 7;
      v29 = v24++ >= 9;
      if (v29)
      {
        v25 = 0;
        v30 = *(unsigned __int8 *)(v3 + *v20);
        goto LABEL_30;
      }
    }
    *(_BYTE *)(v3 + *v20) = 1;
LABEL_28:
    v30 = *(unsigned __int8 *)(v3 + *v20);
    if (*(_BYTE *)(v3 + *v20))
      v25 = 0;
LABEL_30:
    if (v30 || (v25 & 7) == 4)
    {
LABEL_89:
      if (v14)
      {
        v54 = 1;
        goto LABEL_100;
      }
      if (v16)
      {
        do
        {
          while (1)
          {
            v56 = *v16++;
            v55 = v56;
            if (v56 != 1 && v55 != 2)
              break;
            *(_BYTE *)(a1 + v21[148]) |= v55;
          }
        }
        while (v55);
      }
LABEL_101:
      v3 = *(_BYTE *)(v3 + *v20) == 0;
      if (!v14)
        return v3;
      goto LABEL_102;
    }
    v32 = v25 >> 3;
    v33 = v14;
    if (!v64)
    {
      v34 = v16;
      do
      {
        v36 = *v34++;
        v35 = v36;
        v33 = v36 != 0;
        if (v36)
          v37 = v35 == (_DWORD)v32;
        else
          v37 = 1;
      }
      while (!v37);
    }
    if ((_DWORD)v32 != 2)
    {
      if ((_DWORD)v32 == 1)
      {
        if (v33 && (*(_BYTE *)(a1 + v21[148]) & 1) == 0)
        {
          PBReaderReadString();
          v38 = (void *)objc_claimAutoreleasedReturnValue();
          if (v38)
            -[GEOPublisherAttributionManifestIndex _addNoFlagsPublisherAttributionFiles:](a1, v38);

          v17 = v62;
          goto LABEL_88;
        }
LABEL_87:
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_99;
      }
      else if (!PBReaderSkipValueWithTag())
      {
        goto LABEL_99;
      }
LABEL_88:
      if (!v17)
        goto LABEL_89;
      continue;
    }
    break;
  }
  if (!v33 || (*(_BYTE *)(a1 + v21[148]) & 2) != 0)
    goto LABEL_87;
  if (!PBReaderPlaceMark())
    goto LABEL_99;
  if (*(_QWORD *)(v3 + *v19) < *(_QWORD *)(v3 + *v6))
  {
    v60 = 0;
    v61 = 0;
    v59 = 0;
    v63 = 0;
    do
    {
      if (*(_BYTE *)(v3 + *v20))
        break;
      v39 = 0;
      v40 = 0;
      v41 = 0;
      while (1)
      {
        v42 = *v19;
        v43 = *(_QWORD *)(v3 + v42);
        if (v43 == -1 || v43 >= *(_QWORD *)(v3 + *v6))
          break;
        v44 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v43);
        *(_QWORD *)(v3 + v42) = v43 + 1;
        v41 |= (unint64_t)(v44 & 0x7F) << v39;
        if ((v44 & 0x80) == 0)
          goto LABEL_62;
        v39 += 7;
        if (v40++ > 8)
          goto LABEL_74;
      }
      *(_BYTE *)(v3 + *v20) = 1;
LABEL_62:
      if (*(_BYTE *)(v3 + *v20))
        v41 = 0;
      if ((v41 >> 3) == 1)
      {
        PBReaderReadString();
        v52 = v14;
        v53 = objc_claimAutoreleasedReturnValue();

        v61 = 1;
        v63 = (void *)v53;
        v14 = v52;
        v17 = v62;
        continue;
      }
      if ((v41 >> 3) == 2)
      {
        v46 = 0;
        v47 = 0;
        v48 = 0;
        while (1)
        {
          v49 = *v19;
          v50 = *(_QWORD *)(v3 + v49);
          if (v50 == -1 || v50 >= *(_QWORD *)(v3 + *v6))
            break;
          v51 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v50);
          *(_QWORD *)(v3 + v49) = v50 + 1;
          v48 |= (unint64_t)(v51 & 0x7F) << v46;
          if ((v51 & 0x80) == 0)
            goto LABEL_77;
          v46 += 7;
          v29 = v47++ >= 9;
          if (v29)
          {
            v59 = 0;
            goto LABEL_80;
          }
        }
        *(_BYTE *)(v3 + *v20) = 1;
LABEL_77:
        if (*(_BYTE *)(v3 + *v20))
          v48 = 0;
        v59 = v48;
LABEL_80:
        v60 = 1;
        continue;
      }
LABEL_74:
      if (!PBReaderSkipValueWithTag())
        goto LABEL_98;
    }
    while (*(_QWORD *)(v3 + *v19) < *(_QWORD *)(v3 + *v6));
    if ((v61 & 1) == 0 || (v60 & 1) == 0)
      goto LABEL_98;
    -[GEOPublisherAttributionManifestIndex _setNoFlagsPublisherToFileIndexValue:forKey:](a1, v59, v63);
    PBReaderRecallMark();

    v21 = &OBJC_IVAR___GEORouteDetails__isNearCurrentlyDisplayedStep;
    goto LABEL_88;
  }
  v63 = 0;
LABEL_98:

LABEL_99:
  v54 = 0;
LABEL_100:
  *(_BYTE *)(a1 + v21[148]) |= 1u;
  *(_BYTE *)(a1 + v21[148]) |= 2u;
  if ((v54 & 1) != 0)
    goto LABEL_101;
  v3 = 0;
  if (v14)
  {
LABEL_102:
    v57 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_1892862A4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189286B9C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPublisherAttributionManifestIndexReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 36))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPublisherAttributionManifestIndexReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 40));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 32) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 36) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPublisherAttributionManifestIndexReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPublisherAttributionManifestIndexReadAllFrom_initialTag;
  Specified = GEOPublisherAttributionManifestIndexReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return Specified;
}

void sub_189286D28(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPublisherAttributionManifestIndexReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOPublisherAttributionManifestIndexReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189286D88(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPublisherAttributionManifestIndexIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  BOOL v12;
  int v13;
  int v14;
  char v16;
  char v17;
  char v18;
  unsigned int v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  unsigned int v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  int v28;
  _BOOL8 v30;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        if (v10 == -1 || v10 >= *(_QWORD *)&a1[*v3])
          break;
        v11 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        v12 = v7++ >= 9;
        if (v12)
        {
          v8 = 0;
          v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v13 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v14 = v8 & 7;
      if (v13 || v14 == 4)
        break;
      if ((v8 >> 3) == 2)
      {
        if (v14 != 2 || !PBReaderPlaceMark() || *(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
          goto LABEL_60;
        v16 = 0;
        v17 = 0;
        do
        {
          if (a1[*v4])
            break;
          v18 = 0;
          v19 = 0;
          v20 = 0;
          while (1)
          {
            v21 = *v2;
            v22 = *(_QWORD *)&a1[v21];
            if (v22 == -1 || v22 >= *(_QWORD *)&a1[*v3])
              break;
            v23 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v22);
            *(_QWORD *)&a1[v21] = v22 + 1;
            v20 |= (unint64_t)(v23 & 0x7F) << v18;
            if ((v23 & 0x80) == 0)
              goto LABEL_36;
            v18 += 7;
            v12 = v19++ >= 9;
            if (v12)
            {
              v20 = 0;
              if (a1[*v4])
                goto LABEL_54;
              goto LABEL_37;
            }
          }
          a1[*v4] = 1;
LABEL_36:
          if (a1[*v4])
            break;
LABEL_37:
          if ((v20 >> 3) == 2)
          {
            if ((v20 & 7) != 0)
              goto LABEL_60;
            v24 = 0;
            while (1)
            {
              v25 = *v2;
              v26 = *(_QWORD *)&a1[v25];
              if (v26 == -1 || v26 >= *(_QWORD *)&a1[*v3])
                break;
              v27 = v26 + 1;
              v28 = *(char *)(*(_QWORD *)&a1[*v5] + v26);
              *(_QWORD *)&a1[v25] = v27;
              v17 = 1;
              if (v28 < 0 && v24++ <= 8)
                continue;
              goto LABEL_53;
            }
            v17 = 1;
            a1[*v4] = 1;
          }
          else if ((v20 >> 3) == 1)
          {
            if ((v20 & 7) != 2)
              goto LABEL_60;
            v16 = 1;
            if ((PBReaderSkipValueWithTag() & 1) == 0)
              goto LABEL_60;
          }
          else if (!PBReaderSkipValueWithTag())
          {
            goto LABEL_60;
          }
LABEL_53:
          ;
        }
        while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
LABEL_54:
        if ((v16 & 1) == 0 || (v17 & 1) == 0)
        {
LABEL_60:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((v8 >> 3) == 1 && v14 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_60;
      }
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v30 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v30;
}

void sub_189287364(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPublisherAttributionManifestIndexIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  v2 = (*(_BYTE *)(a1 + 44) & 7) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return v2;
}

void sub_189287900(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void GEOMigrateDefaults()
{
  const __CFString *v0;
  void *v1;
  CFStringRef *v2;
  CFStringRef *v3;
  const __CFString *v4;
  CFArrayRef v5;
  const __CFArray *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t i;
  __CFString *v11;
  const __CFString *v12;
  const __CFString *v13;
  id v14;
  const __CFString *v15;
  void *v16;
  void *v17;
  const __CFString *v18;
  const __CFString *v19;
  const __CFString *v20;
  CFArrayRef v21;
  void *v22;
  const __CFArray *v23;
  const __CFString *v24;
  CFDictionaryRef v25;
  const __CFString *v26;
  const __CFString *v27;
  const __CFString *v28;
  void *v29;
  void *v30;
  int v31;
  void *v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  _QWORD v37[4];
  id v38;
  uint64_t v39;

  v39 = *MEMORY[0x1E0C80C00];
  if (!_GEODefaultsUseServer)
  {
    v0 = (const __CFString *)_GEOFullDefaultsDomain();
    v1 = (void *)CFPreferencesCopyAppValue(CFSTR("DefaultsSanitizedVersion"), v0);
    v2 = (CFStringRef *)MEMORY[0x1E0C9B260];
    v3 = (CFStringRef *)MEMORY[0x1E0C9B230];
    if (!v1)
    {
      v4 = (const __CFString *)_GEOFullDefaultsDomain();
      v5 = CFPreferencesCopyKeyList(v4, *v2, *v3);
      v33 = 0u;
      v34 = 0u;
      v35 = 0u;
      v36 = 0u;
      v6 = v5;
      v7 = -[__CFArray countByEnumeratingWithState:objects:count:](v6, "countByEnumeratingWithState:objects:count:", &v33, v37, 16);
      if (v7)
      {
        v8 = v7;
        v9 = *(_QWORD *)v34;
        do
        {
          for (i = 0; i != v8; ++i)
          {
            if (*(_QWORD *)v34 != v9)
              objc_enumerationMutation(v6);
            v11 = *(__CFString **)(*((_QWORD *)&v33 + 1) + 8 * i);
            if ((-[__CFString hasPrefix:](v11, "hasPrefix:", CFSTR("LogLevel")) & 1) == 0
              && (-[__CFString hasPrefix:](v11, "hasPrefix:", CFSTR("ConsoleLogLevel")) & 1) == 0
              && (-[__CFString isEqualToString:](v11, "isEqualToString:", CFSTR("DeviceCountryCode")) & 1) == 0
              && (-[__CFString isEqualToString:](v11, "isEqualToString:", CFSTR("GEOUseProductionURLs")) & 1) == 0
              && (-[__CFString isEqualToString:](v11, "isEqualToString:", CFSTR("GEOLastNetworkDefaultsURL")) & 1) == 0
              && (-[__CFString isEqualToString:](v11, "isEqualToString:", CFSTR("HelpImproveMapsAddressCorrectionAuthStatus")) & 1) == 0&& (-[__CFString isEqualToString:](v11, "isEqualToString:", CFSTR("GEOMapLocalizeLabels")) & 1) == 0)
            {
              v12 = (const __CFString *)_GEOFullDefaultsDomain();
              CFPreferencesSetAppValue(v11, 0, v12);
            }
          }
          v8 = -[__CFArray countByEnumeratingWithState:objects:count:](v6, "countByEnumeratingWithState:objects:count:", &v33, v37, 16);
        }
        while (v8);
      }

      v2 = (CFStringRef *)MEMORY[0x1E0C9B260];
      v3 = (CFStringRef *)MEMORY[0x1E0C9B230];
      v1 = 0;
    }
    v13 = (const __CFString *)_GEOFullDefaultsDomain();
    CFPreferencesAppSynchronize(v13);

    _GEOConfigStorageUser();
    v14 = (id)objc_claimAutoreleasedReturnValue();
    v15 = (const __CFString *)_GEOFullDefaultsDomain();
    v16 = (void *)CFPreferencesCopyAppValue(CFSTR("DefaultsSanitizedVersion"), v15);
    if (!v16
      || (objc_opt_class(), (objc_opt_isKindOfClass() & 1) == 0)
      || objc_msgSend(v16, "integerValue") != 20190107)
    {
      objc_msgSend(MEMORY[0x1E0C99E60], "setWithArray:", &unk_1E1E85660);
      v17 = (void *)objc_claimAutoreleasedReturnValue();
      v18 = (const __CFString *)_GEOFullDefaultsDomain();
      v19 = *v2;
      v20 = *v3;
      v21 = CFPreferencesCopyKeyList(v18, *v2, *v3);
      objc_msgSend(MEMORY[0x1E0C99E20], "setWithArray:", v21);
      v22 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v22, "minusSet:", v17);
      objc_msgSend(v22, "allObjects");
      v23 = (const __CFArray *)objc_claimAutoreleasedReturnValue();
      v24 = (const __CFString *)_GEOFullDefaultsDomain();
      v25 = CFPreferencesCopyMultiple(v23, v24, v19, v20);
      v37[0] = MEMORY[0x1E0C809B0];
      v37[1] = 3221225472;
      v37[2] = ___migrateUserDefaults_block_invoke;
      v37[3] = &unk_1E1C0D9E8;
      v38 = v14;
      -[__CFDictionary enumerateKeysAndObjectsUsingBlock:](v25, "enumerateKeysAndObjectsUsingBlock:", v37);
      v26 = (const __CFString *)_GEOFullDefaultsDomain();
      CFPreferencesSetMultiple(0, v23, v26, v19, v20);
      v27 = (const __CFString *)_GEOFullDefaultsDomain();
      CFPreferencesSetAppValue(CFSTR("DefaultsSanitizedVersion"), &unk_1E1E81310, v27);
      v28 = (const __CFString *)_GEOFullDefaultsDomain();
      CFPreferencesAppSynchronize(v28);

    }
    GEOMigrateCountryConfig(v14);
    _migrateKeys((void (*)(void))_deletedKeysUserStore, v14, 0);
    _cleanupSundanceBackup(v14);
    _GEOConfigStorageXPC();
    v29 = (void *)objc_claimAutoreleasedReturnValue();
    _migrateKeys((void (*)(void))GeoServicesConfig_GetConfigStoreStringKeysForXPCMigration, v14, v29);
    +[GEOPlatform sharedPlatform](GEOPlatform, "sharedPlatform");
    v30 = (void *)objc_claimAutoreleasedReturnValue();
    v31 = objc_msgSend(v30, "supportsMultiUser");

    if (v31)
    {
      _GEOConfigStorageSystem();
      v32 = (void *)objc_claimAutoreleasedReturnValue();
      _migrateKeys((void (*)(void))GeoServicesConfig_GetConfigStoreStringKeysForSystemMigration, v14, v32);
      _cleanupSundanceBackup(v32);

    }
  }
}

void _migrateKeys(void (*a1)(void), void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t i;
  uint64_t v16;
  void *v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  _BYTE v22[128];
  uint64_t v23;

  v23 = *MEMORY[0x1E0C80C00];
  v5 = a2;
  v6 = a3;
  v7 = v6;
  if (v6)
    v8 = v6;
  else
    v8 = v5;
  v9 = v8;
  objc_msgSend(v9, "getConfigValueForKey:countryCode:options:source:", CFSTR("GEODefaultsRevision"), 0, 0, 0);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_msgSend(v10, "isEqual:", &unk_1E1E812F8) & 1) == 0)
  {
    a1();
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    v18 = 0u;
    v19 = 0u;
    v20 = 0u;
    v21 = 0u;
    v12 = objc_msgSend(v11, "countByEnumeratingWithState:objects:count:", &v18, v22, 16);
    if (v12)
    {
      v13 = v12;
      v14 = *(_QWORD *)v19;
      do
      {
        for (i = 0; i != v13; ++i)
        {
          if (*(_QWORD *)v19 != v14)
            objc_enumerationMutation(v11);
          v16 = *(_QWORD *)(*((_QWORD *)&v18 + 1) + 8 * i);
          objc_msgSend(v5, "getConfigValueForKey:countryCode:options:source:", v16, 0, 0, 0);
          v17 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v7, "setConfigValue:forKey:options:synchronous:", v17, v16, 0, 1);
          objc_msgSend(v5, "setConfigValue:forKey:options:synchronous:", 0, v16, 0, 1);

        }
        v13 = objc_msgSend(v11, "countByEnumeratingWithState:objects:count:", &v18, v22, 16);
      }
      while (v13);
    }
    objc_msgSend(v9, "setConfigValue:forKey:options:synchronous:", &unk_1E1E812F8, CFSTR("GEODefaultsRevision"), 0, 1);

  }
}

void *_deletedKeysUserStore()
{
  return &unk_1E1E85678;
}

void _cleanupSundanceBackup(void *a1)
{
  id v1;
  void *v2;
  NSObject *v3;
  const char *v4;
  NSObject *v5;
  uint32_t v6;
  void *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t i;
  void *v14;
  NSObject *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t j;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  uint8_t v28[128];
  uint8_t buf[4];
  int v30;
  __int16 v31;
  int v32;
  _BYTE v33[128];
  uint64_t v34;

  v34 = *MEMORY[0x1E0C80C00];
  v1 = a1;
  objc_msgSend(v1, "getConfigValueForKey:countryCode:options:source:", CFSTR("DisableSundanceCleanup"), 0, 0, 0);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  if (v2)
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      if (objc_msgSend(v2, "BOOLValue"))
      {
        j__GEOGetUserDefaultsLog();
        v3 = objc_claimAutoreleasedReturnValue();
        if (!os_log_type_enabled(v3, OS_LOG_TYPE_DEBUG))
        {
LABEL_7:

          goto LABEL_33;
        }
        *(_WORD *)buf = 0;
        v4 = "Sundance cleanup disabled, not running";
        v5 = v3;
        v6 = 2;
LABEL_6:
        _os_log_impl(&dword_1885A9000, v5, OS_LOG_TYPE_DEBUG, v4, buf, v6);
        goto LABEL_7;
      }
    }
  }
  +[GEOPlatform sharedPlatform](GEOPlatform, "sharedPlatform");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v7, "isInternalInstall"))
    v8 = 6;
  else
    v8 = 2;

  v26 = 0u;
  v27 = 0u;
  v24 = 0u;
  v25 = 0u;
  v9 = objc_msgSend(&unk_1E1E85690, "countByEnumeratingWithState:objects:count:", &v24, v33, 16);
  if (v9)
  {
    v10 = v9;
    v11 = 0;
    v12 = *(_QWORD *)v25;
    while (2)
    {
      for (i = 0; i != v10; ++i)
      {
        if (*(_QWORD *)v25 != v12)
          objc_enumerationMutation(&unk_1E1E85690);
        objc_msgSend(v1, "getConfigValueForKey:countryCode:options:source:", *(_QWORD *)(*((_QWORD *)&v24 + 1) + 8 * i), 0, 0, 0);
        v14 = (void *)objc_claimAutoreleasedReturnValue();

        if (v14)
          ++v11;
        if (v11 >= v8)
        {
          j__GEOGetUserDefaultsLog();
          v15 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)buf = 67109376;
            v30 = v11;
            v31 = 1024;
            v32 = v8;
            _os_log_impl(&dword_1885A9000, v15, OS_LOG_TYPE_DEFAULT, "Found %d keys (met threshold %d) running Sundance cleanup", buf, 0xEu);
          }

          v22 = 0u;
          v23 = 0u;
          v20 = 0u;
          v21 = 0u;
          v16 = objc_msgSend(&unk_1E1E85690, "countByEnumeratingWithState:objects:count:", &v20, v28, 16);
          if (v16)
          {
            v17 = v16;
            v18 = *(_QWORD *)v21;
            do
            {
              for (j = 0; j != v17; ++j)
              {
                if (*(_QWORD *)v21 != v18)
                  objc_enumerationMutation(&unk_1E1E85690);
                objc_msgSend(v1, "setConfigValue:forKey:options:synchronous:", 0, *(_QWORD *)(*((_QWORD *)&v20 + 1) + 8 * j), 0, 1);
              }
              v17 = objc_msgSend(&unk_1E1E85690, "countByEnumeratingWithState:objects:count:", &v20, v28, 16);
            }
            while (v17);
          }
          goto LABEL_33;
        }
      }
      v10 = objc_msgSend(&unk_1E1E85690, "countByEnumeratingWithState:objects:count:", &v24, v33, 16);
      if (v10)
        continue;
      break;
    }
    if (v11)
    {
      j__GEOGetUserDefaultsLog();
      v3 = objc_claimAutoreleasedReturnValue();
      if (!os_log_type_enabled(v3, OS_LOG_TYPE_DEBUG))
        goto LABEL_7;
      *(_DWORD *)buf = 67109376;
      v30 = v11;
      v31 = 1024;
      v32 = v8;
      v4 = "Found %d keys (under threshold %d) NOT running Sundance cleanup";
      v5 = v3;
      v6 = 14;
      goto LABEL_6;
    }
  }
LABEL_33:

}

uint64_t ___migrateUserDefaults_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return objc_msgSend(*(id *)(a1 + 32), "setConfigValue:forKey:options:synchronous:", a3, a2, 0, 1);
}

id GEOUsageSearchFoundationFeedbackDataForMapsData(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  v1 = a1;
  if (objc_msgSend(v1, "length"))
  {
    +[GEOMapItemStorage mapItemStorageForSerializedPlaceData:](GEOMapItemStorage, "mapItemStorageForSerializedPlaceData:", v1);
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    v3 = v2;
    if (v2
      && objc_msgSend(v2, "conformsToProtocol:", &unk_1EDF9CF08)
      && objc_msgSend(v3, "isValid"))
    {
      +[GEOPlaceActionDetails actionDetailsWithMapItem:timestamp:resultIndex:](GEOPlaceActionDetails, "actionDetailsWithMapItem:timestamp:resultIndex:", v3, 0xFFFFFFFFLL, 0.0);
      v4 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v4, "data");
      v5 = (void *)objc_claimAutoreleasedReturnValue();

    }
    else
    {
      v5 = 0;
    }

  }
  else
  {
    v5 = 0;
  }

  return v5;
}

void sub_189289948(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, _Unwind_Exception *exception_object, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16)
{
  void *v16;
  void *v17;
  void *v18;
  void *v19;

  _Unwind_Resume(a1);
}

id GEOGetCyclingMapMatcherLog(void)
{
  if (qword_1ECDBC168 != -1)
    dispatch_once(&qword_1ECDBC168, &__block_literal_global_105);
  return (id)_MergedGlobals_249;
}

void sub_189289CA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{

  _Unwind_Resume(a1);
}

void sub_189289E44(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_189289EB4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_189289F4C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_189289FCC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18928A05C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void ___ZL26GEOGetCyclingMapMatcherLogv_block_invoke()
{
  os_log_t v0;
  void *v1;

  v0 = os_log_create("com.apple.GeoServices", "CyclingMapMatcher");
  v1 = (void *)_MergedGlobals_249;
  _MergedGlobals_249 = (uint64_t)v0;

}

uint64_t GEOPDPlaceRequestType_SupportsOffline(unsigned int a1)
{
  return (a1 < 0x3D) & (0x1004108000881E86uLL >> a1);
}

void migrateTransitSteps(void *a1, unint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  void *v8;
  id *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  id *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  uint64_t v33;
  id obj;
  uint64_t v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  uint8_t buf[16];
  _BYTE v41[128];
  uint64_t v42;

  v42 = *MEMORY[0x1E0C80C00];
  v36 = 0u;
  v37 = 0u;
  v38 = 0u;
  v39 = 0u;
  obj = a1;
  v3 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v36, v41, 16);
  if (v3)
  {
    v4 = v3;
    v35 = *(_QWORD *)v37;
    do
    {
      v5 = 0;
      do
      {
        if (*(_QWORD *)v37 != v35)
          objc_enumerationMutation(obj);
        objc_msgSend(*(id *)(*((_QWORD *)&v36 + 1) + 8 * v5), "instructions");
        v6 = (id)objc_claimAutoreleasedReturnValue();
        if (v6 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) == 0))
        {
          if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
          {
            *(_WORD *)buf = 0;
            _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Assertion failed: !instructionSet || [instructionSet isKindOfClass:GEOInstructionSet.class]", buf, 2u);
          }
        }
        else
        {
          objc_msgSend(v6, "countStopsText");
          v7 = (void *)objc_claimAutoreleasedReturnValue();
          migrateFormattedString(v7, a2);

          objc_msgSend(v6, "departureBar");
          v8 = (void *)objc_claimAutoreleasedReturnValue();
          migrateFormattedString(v8, a2);

          objc_msgSend(v6, "drivingWalkingListInstruction");
          v9 = (id *)objc_claimAutoreleasedReturnValue();
          -[GEODrivingWalkingInstruction title](v9);
          v10 = (void *)objc_claimAutoreleasedReturnValue();
          migrateFormattedString(v10, a2);

          -[GEODrivingWalkingInstruction continueCommands](v9);
          v11 = (void *)objc_claimAutoreleasedReturnValue();
          migrateFormattedStrings(v11, a2);

          -[GEODrivingWalkingInstruction mergeCommands](v9);
          v12 = (void *)objc_claimAutoreleasedReturnValue();
          migrateFormattedStrings(v12, a2);

          -[GEODrivingWalkingInstruction normalCommands](v9);
          v13 = (void *)objc_claimAutoreleasedReturnValue();
          migrateFormattedStrings(v13, a2);

          objc_msgSend(v6, "drivingWalkingSignInstruction");
          v14 = (id *)objc_claimAutoreleasedReturnValue();
          -[GEODrivingWalkingInstruction title](v14);
          v15 = (void *)objc_claimAutoreleasedReturnValue();
          migrateFormattedString(v15, a2);

          -[GEODrivingWalkingInstruction continueCommands](v14);
          v16 = (void *)objc_claimAutoreleasedReturnValue();
          migrateFormattedStrings(v16, a2);

          -[GEODrivingWalkingInstruction mergeCommands](v14);
          v17 = (void *)objc_claimAutoreleasedReturnValue();
          migrateFormattedStrings(v17, a2);

          -[GEODrivingWalkingInstruction normalCommands](v14);
          v18 = (void *)objc_claimAutoreleasedReturnValue();
          migrateFormattedStrings(v18, a2);

          objc_msgSend(v6, "transitListInstruction");
          v19 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v19, "commandFormatteds");
          v20 = (void *)objc_claimAutoreleasedReturnValue();
          migrateFormattedStrings(v20, a2);

          objc_msgSend(v19, "detailFormatteds");
          v21 = (void *)objc_claimAutoreleasedReturnValue();
          migrateFormattedStrings(v21, a2);

          objc_msgSend(v19, "noticeFormatteds");
          v22 = (void *)objc_claimAutoreleasedReturnValue();
          migrateFormattedStrings(v22, a2);

          objc_msgSend(v19, "priceFormatteds");
          v23 = (void *)objc_claimAutoreleasedReturnValue();
          migrateFormattedStrings(v23, a2);

          objc_msgSend(v19, "expandableListFormatted");
          v24 = (void *)objc_claimAutoreleasedReturnValue();
          migrateFormattedString(v24, a2);

          objc_msgSend(v19, "timeInstructions");
          v25 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v25, "primaryText");
          v26 = (void *)objc_claimAutoreleasedReturnValue();
          migrateFormattedString(v26, a2);

          objc_msgSend(v25, "secondaryText");
          v27 = (void *)objc_claimAutoreleasedReturnValue();
          migrateFormattedString(v27, a2);

          objc_msgSend(v6, "transitSignInstruction");
          v28 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v28, "commandFormatteds");
          v29 = (void *)objc_claimAutoreleasedReturnValue();
          migrateFormattedStrings(v29, a2);

          objc_msgSend(v28, "detailFormatteds");
          v30 = (void *)objc_claimAutoreleasedReturnValue();
          migrateFormattedStrings(v30, a2);

          objc_msgSend(v28, "noticeFormatteds");
          v31 = (void *)objc_claimAutoreleasedReturnValue();
          migrateFormattedStrings(v31, a2);

          objc_msgSend(v28, "priceFormatteds");
          v32 = (void *)objc_claimAutoreleasedReturnValue();
          migrateFormattedStrings(v32, a2);

        }
        ++v5;
      }
      while (v4 != v5);
      v33 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v36, v41, 16);
      v4 = v33;
    }
    while (v33);
  }

}

void migrateFormattedString(void *a1, unint64_t a2)
{
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t i;
  void *v9;
  id v10;
  NSObject *v11;
  objc_class *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  unint64_t v17;
  GEOTimestampData *v18;
  void *v19;
  void *v20;
  uint64_t v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  unint64_t v27;
  uint64_t v28;
  void *v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  uint8_t v34[128];
  uint8_t buf[4];
  void *v36;
  __int16 v37;
  id v38;
  __int16 v39;
  void *v40;
  uint64_t v41;

  v41 = *MEMORY[0x1E0C80C00];
  v3 = a1;
  if (v3 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) == 0))
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Assertion failed: !formattedString || [formattedString isKindOfClass:GEOFormattedString.class]", buf, 2u);
    }
  }
  else if (a2 <= 2)
  {
    v27 = a2;
    v32 = 0u;
    v33 = 0u;
    v30 = 0u;
    v31 = 0u;
    objc_msgSend(v3, "formatArguments");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    v5 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v30, v34, 16);
    if (v5)
    {
      v6 = v5;
      v7 = *(_QWORD *)v31;
      v28 = *(_QWORD *)v31;
      v29 = v4;
      do
      {
        for (i = 0; i != v6; ++i)
        {
          if (*(_QWORD *)v31 != v7)
            objc_enumerationMutation(v4);
          v9 = *(void **)(*((_QWORD *)&v30 + 1) + 8 * i);
          if (objc_msgSend(v9, "format") == 12)
          {
            v10 = v9;
            if (objc_msgSend(v10, "format") == 12)
            {
              GEOFindOrCreateLog("com.apple.GeoServices", "CompanionCompatibility");
              v11 = objc_claimAutoreleasedReturnValue();
              if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
              {
                v12 = (objc_class *)objc_opt_class();
                NSStringFromClass(v12);
                v13 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v10, "token");
                v14 = (void *)objc_claimAutoreleasedReturnValue();
                *(_DWORD *)buf = 138412802;
                v36 = v13;
                v37 = 2048;
                v38 = v10;
                v39 = 2112;
                v40 = v14;
                _os_log_impl(&dword_1885A9000, v11, OS_LOG_TYPE_INFO, "%@<%p> | Countdown list '%@' is now a timestamp list", buf, 0x20u);

              }
              objc_msgSend(v10, "setFormat:", 9);
              objc_msgSend(v10, "countdownData");
              v15 = (void *)objc_claimAutoreleasedReturnValue();
              v16 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0C99DE8]), "initWithCapacity:", objc_msgSend(v15, "timestampValuesCount"));
              if (objc_msgSend(v15, "timestampValuesCount"))
              {
                v17 = 0;
                do
                {
                  v18 = objc_alloc_init(GEOTimestampData);
                  -[GEOTimestampData setTimestampVal:](v18, "setTimestampVal:", objc_msgSend(v15, "timestampValueAtIndex:", v17));
                  objc_msgSend(v15, "timezone");
                  v19 = (void *)objc_claimAutoreleasedReturnValue();
                  -[GEOTimestampData setTimezone:](v18, "setTimezone:", v19);

                  -[GEOTimestampData setFormatPattern:](v18, "setFormatPattern:", CFSTR("jjmm"));
                  objc_msgSend(v16, "addObject:", v18);

                  ++v17;
                }
                while (v17 < objc_msgSend(v15, "timestampValuesCount"));
              }
              objc_msgSend(v10, "setTimestampDatas:", v16);

              v7 = v28;
              v4 = v29;
            }

          }
        }
        v6 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v30, v34, 16);
      }
      while (v6);
    }

    objc_msgSend(v3, "formatStyles");
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    v21 = objc_msgSend(v20, "count");

    if (v21)
    {
      objc_msgSend(v3, "formatStyles");
      v22 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v22, "removeAllObjects");

      objc_msgSend(v3, "formatStrings");
      v23 = (void *)objc_claimAutoreleasedReturnValue();
      removeStyleTokensFromStrings(v23);

      objc_msgSend(v3, "separators");
      v24 = (void *)objc_claimAutoreleasedReturnValue();
      removeStyleTokensFromStrings(v24);

    }
    if (objc_msgSend(v3, "hasAlternativeString"))
    {
      objc_msgSend(v3, "alternativeString");
      v25 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v25, "formattedString");
      v26 = (void *)objc_claimAutoreleasedReturnValue();
      migrateFormattedString(v26, v27);

    }
  }

}

void migrateFormattedStrings(void *a1, unint64_t a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _BYTE v12[128];
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  v3 = a1;
  v8 = 0u;
  v9 = 0u;
  v10 = 0u;
  v11 = 0u;
  v4 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
  if (v4)
  {
    v5 = v4;
    v6 = *(_QWORD *)v9;
    do
    {
      v7 = 0;
      do
      {
        if (*(_QWORD *)v9 != v6)
          objc_enumerationMutation(v3);
        migrateFormattedString(*(void **)(*((_QWORD *)&v8 + 1) + 8 * v7++), a2);
      }
      while (v5 != v7);
      v5 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
    }
    while (v5);
  }

}

void removeStyleTokensFromStrings(void *a1)
{
  id v1;
  __int128 v2;
  unint64_t v3;
  uint64_t v4;
  id v5;
  GEOServerFormatStyleParser *v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  NSObject *v11;
  __int128 v12;
  _QWORD v13[4];
  id v14;
  _BYTE *v15;
  _BYTE buf[24];
  uint64_t (*v17)(uint64_t, uint64_t);
  void (*v18)(uint64_t);
  id v19;
  uint64_t v20;

  v20 = *MEMORY[0x1E0C80C00];
  v1 = a1;
  if (objc_msgSend(v1, "count"))
  {
    v3 = 0;
    v4 = MEMORY[0x1E0C809B0];
    *(_QWORD *)&v2 = 138412546;
    v12 = v2;
    do
    {
      objc_msgSend(v1, "objectAtIndexedSubscript:", v3, v12);
      v5 = (id)objc_claimAutoreleasedReturnValue();
      *(_QWORD *)buf = 0;
      *(_QWORD *)&buf[8] = buf;
      *(_QWORD *)&buf[16] = 0x3032000000;
      v17 = __Block_byref_object_copy__55;
      v18 = __Block_byref_object_dispose__55;
      v19 = 0;
      v6 = -[GEOServerFormatStyleParser initWithString:]([GEOServerFormatStyleParser alloc], "initWithString:", v5);
      v13[0] = v4;
      v13[1] = 3221225472;
      v13[2] = __stringByRemovingStyleTokens_block_invoke;
      v13[3] = &unk_1E1C0DA38;
      v15 = buf;
      v7 = v5;
      v14 = v7;
      -[GEOServerFormatStyleParser enumerateTokenRangesForRemoval:](v6, "enumerateTokenRangesForRemoval:", v13);
      v8 = *(void **)(*(_QWORD *)&buf[8] + 40);
      if (v8)
        v9 = (id)objc_msgSend(v8, "copy");
      else
        v9 = v7;
      v10 = v9;

      _Block_object_dispose(buf, 8);
      if (v10 != v7)
      {
        GEOFindOrCreateLog("com.apple.GeoServices", "CompanionCompatibility");
        v11 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v11, OS_LOG_TYPE_DEBUG))
        {
          *(_DWORD *)buf = v12;
          *(_QWORD *)&buf[4] = v7;
          *(_WORD *)&buf[12] = 2112;
          *(_QWORD *)&buf[14] = v10;
          _os_log_impl(&dword_1885A9000, v11, OS_LOG_TYPE_DEBUG, " | '%@' -> '%@'", buf, 0x16u);
        }

        objc_msgSend(v1, "replaceObjectAtIndex:withObject:", v3, v10);
      }

      ++v3;
    }
    while (v3 < objc_msgSend(v1, "count"));
  }

}

void sub_18928C700(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __stringByRemovingStyleTokens_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;

  v6 = *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40);
  if (!v6)
  {
    v7 = objc_msgSend(*(id *)(a1 + 32), "mutableCopy");
    v8 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
    v9 = *(void **)(v8 + 40);
    *(_QWORD *)(v8 + 40) = v7;

    v6 = *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40);
  }
  return objc_msgSend(v6, "replaceCharactersInRange:withString:", a2, a3, &stru_1E1C241D0);
}

id GEOGetCompanionExtrasLog()
{
  if (qword_1ECDBC178 != -1)
    dispatch_once(&qword_1ECDBC178, &__block_literal_global_106);
  return (id)_MergedGlobals_250;
}

uint64_t GEOTrafficDensityForRouteTravelTime(long double a1, long double a2)
{
  double v4;

  v4 = pow(a2, 1.7) * 0.000167 + 300.0;
  if (v4 + a2 > a1)
    return 0;
  if (a2 + v4 * 2.0 > a1)
    return 1;
  if (a2 + v4 * 3.0 <= a1)
    return 3;
  return 2;
}

uint64_t GEORelativeTrafficDensityForRouteTravelTime(long double a1, long double a2)
{
  double v4;
  uint64_t v5;

  v4 = pow(a2, 1.7) * 0.000167 + 300.0;
  v5 = 2;
  if (v4 + a2 >= a1)
    v5 = 1;
  if (a2 - v4 <= a1)
    return v5;
  else
    return 0;
}

void sub_189298698(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_189298738(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1892987A8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_189298894(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_189298934(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1892989D0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_189298B28(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_189298BE4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_189298CF4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_189298E3C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_189299B44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18, void *a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23,uint64_t a24,void *a25,void *a26,uint64_t a27,void *a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,char a57)
{
  void *v57;
  void *v58;

  zilch::Message::~Message((zilch::Message *)&a57);
  _Unwind_Resume(a1);
}

void sub_18929A05C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  void *v10;
  void *v11;
  void *v12;
  void *v13;

  zilch::WriteBitstream::~WriteBitstream((zilch::WriteBitstream *)&a9);
  zilch::Message::~Message((zilch::Message *)&a10);

  _Unwind_Resume(a1);
}

void sub_18929A328(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, void *a12)
{

  _Unwind_Resume(a1);
}

void sub_18929A458(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18929A570(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18929A6C8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18929A7FC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18929A890(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18929BBB0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_18929C510(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_18929C5B4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18929C73C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

uint64_t GEOVoltaireTileRequesterHandleStaleManifestForErrors(void *a1, void *a2)
{
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t i;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  uint64_t v15;
  NSObject *v16;
  id v19;
  uint8_t buf[16];
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  _BYTE v25[128];
  uint64_t v26;

  v26 = *MEMORY[0x1E0C80C00];
  v3 = a1;
  v19 = a2;
  v21 = 0u;
  v22 = 0u;
  v23 = 0u;
  v24 = 0u;
  v4 = v3;
  v5 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v21, v25, 16);
  if (v5)
  {
    v6 = v5;
    v7 = *(_QWORD *)v22;
    while (2)
    {
      for (i = 0; i != v6; ++i)
      {
        if (*(_QWORD *)v22 != v7)
          objc_enumerationMutation(v4);
        v9 = *(void **)(*((_QWORD *)&v21 + 1) + 8 * i);
        objc_msgSend(v9, "userInfo");
        v10 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v10, "objectForKey:", CFSTR("HTTPStatus"));
        v11 = (void *)objc_claimAutoreleasedReturnValue();
        v12 = v11;
        if (v11)
        {
          if (objc_msgSend(v11, "isEqualToNumber:", &unk_1E1E81328))
          {
            GEOGetTileLoadingLog();
            v16 = objc_claimAutoreleasedReturnValue();
            if (os_log_type_enabled(v16, OS_LOG_TYPE_INFO))
            {
              *(_WORD *)buf = 0;
              _os_log_impl(&dword_1885A9000, v16, OS_LOG_TYPE_INFO, "Encountered HTTP 410 response. Forcing manifest update.", buf, 2u);
            }

            objc_msgSend(v19, "updateManifest:completionHandler:", 1, 0);
            goto LABEL_19;
          }
        }
        else
        {
          objc_msgSend(v9, "userInfo");
          v13 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v13, "objectForKeyedSubscript:", CFSTR("SimpleTileRequesterUnderlyingErrors"));
          v14 = (void *)objc_claimAutoreleasedReturnValue();

          if (objc_msgSend(v14, "count") && (GEOVoltaireTileRequesterHandleStaleManifestForErrors(v14, v19) & 1) != 0)
          {

LABEL_19:
            v15 = 1;
            goto LABEL_20;
          }

        }
      }
      v6 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v21, v25, 16);
      if (v6)
        continue;
      break;
    }
  }
  v15 = 0;
LABEL_20:

  return v15;
}

void sub_18929CFB4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAddressResultSubTypeFilterReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  _BOOL4 v14;
  int v15;
  int *v16;
  int *v17;
  int *v18;
  int *v19;
  char v20;
  unsigned int v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  BOOL v27;
  int v28;
  int v29;
  unint64_t v31;
  BOOL v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  char v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  char v44;
  unsigned int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  char v50;
  id v51;
  void *v52;
  int v53;
  char v54;
  unsigned int v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  char v60;
  BOOL v61;
  char v62;
  unsigned int v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  char v68;
  int v69;
  int v70;
  void *v71;
  char v73;
  int v74;
  int v75;
  int v76;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 76);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 72));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int8 *)(a1 + 84) >> 1) & 1)
      + (*(_BYTE *)(a1 + 84) & 1)
      + ((*(unsigned __int8 *)(a1 + 84) >> 2) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v9])
    {
      case -4:
        ++v11;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_9;
      case 0:
        v14 = v11 != 0;
        v15 = v14 & ~(_DWORD)v10 | v7;
        v76 = v14 | v10;
        v16 = (int *)MEMORY[0x1E0D82BF0];
        if ((((v14 | v10) | v8) & 1) != 0)
          v17 = 0;
        else
          v17 = a3;
        v74 = 1;
        if (*(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(v3 + *v6))
          goto LABEL_98;
        v73 = v14 & ~(_BYTE)v10 | v7;
        v75 = (v9 != 0) | v76 | v15;
        v18 = (int *)MEMORY[0x1E0D82BC8];
        v19 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_7:
        v12 = v7;
LABEL_8:
        v13 = v10;
LABEL_9:
        ++v9;
        v7 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_BYTE *)(v3 + *v18))
      goto LABEL_96;
    v20 = 0;
    v21 = 0;
    v22 = 0;
    while (1)
    {
      v23 = *v16;
      v24 = *(_QWORD *)(v3 + v23);
      v25 = v24 + 1;
      if (v24 == -1 || v25 > *(_QWORD *)(v3 + *v6))
        break;
      v26 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v24);
      *(_QWORD *)(v3 + v23) = v25;
      v22 |= (unint64_t)(v26 & 0x7F) << v20;
      if ((v26 & 0x80) == 0)
        goto LABEL_24;
      v20 += 7;
      v27 = v21++ >= 9;
      if (v27)
      {
        v22 = 0;
        v28 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_26;
      }
    }
    *(_BYTE *)(v3 + *v18) = 1;
LABEL_24:
    v28 = *(unsigned __int8 *)(v3 + *v18);
    if (*(_BYTE *)(v3 + *v18))
      v22 = 0;
LABEL_26:
    v29 = v22 & 7;
    if (v28 || v29 == 4)
    {
LABEL_96:
      v74 = 1;
      goto LABEL_97;
    }
    v31 = v22 >> 3;
    v32 = v76;
    if (!((v17 == 0) | v76 & 1))
    {
      v33 = v17;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    if ((_DWORD)v31 == 2)
      break;
    if ((_DWORD)v31 == 1)
    {
      if (v32 && (*(_BYTE *)(a1 + 84) & 4) == 0)
      {
        if (v29 == 2)
        {
          if (!PBReaderPlaceMark())
            goto LABEL_115;
          while (*(_QWORD *)(v3 + *v16) < *(_QWORD *)(v3 + *v6) && !*(_BYTE *)(v3 + *v18))
          {
            v37 = 0;
            v38 = 0;
            v39 = 0;
            while (1)
            {
              v40 = *v16;
              v41 = *(_QWORD *)(v3 + v40);
              v42 = v41 + 1;
              if (v41 == -1 || v42 > *(_QWORD *)(v3 + *v6))
                break;
              v43 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v41);
              *(_QWORD *)(v3 + v40) = v42;
              v39 |= (unint64_t)(v43 & 0x7F) << v37;
              if (v43 < 0)
              {
                v37 += 7;
                v27 = v38++ >= 9;
                if (!v27)
                  continue;
              }
              goto LABEL_53;
            }
            *(_BYTE *)(v3 + *v18) = 1;
LABEL_53:
            PBRepeatedInt32Add();
          }
LABEL_77:
          PBReaderRecallMark();
LABEL_94:
          if ((v75 & 1) == 0)
            goto LABEL_96;
          goto LABEL_95;
        }
        v54 = 0;
        v55 = 0;
        v56 = 0;
        while (1)
        {
          v57 = *v16;
          v58 = *(_QWORD *)(v3 + v57);
          v59 = v58 + 1;
          if (v58 == -1 || v59 > *(_QWORD *)(v3 + *v6))
            break;
          v60 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v58);
          *(_QWORD *)(v3 + v57) = v59;
          v56 |= (unint64_t)(v60 & 0x7F) << v54;
          if (v60 < 0)
          {
            v54 += 7;
            v61 = v55++ > 8;
            if (!v61)
              continue;
          }
          goto LABEL_93;
        }
LABEL_92:
        *(_BYTE *)(v3 + *v18) = 1;
LABEL_93:
        PBRepeatedInt32Add();
        goto LABEL_94;
      }
    }
    else if ((v73 & 1) != 0 && (*(_BYTE *)(a1 + 84) & 1) == 0)
    {
      if (!*(_QWORD *)(a1 + 16))
      {
        v51 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v52 = *(void **)(a1 + 16);
        *(_QWORD *)(a1 + 16) = v51;

      }
      if ((PBUnknownFieldAdd() & 1) == 0)
      {
        v74 = 0;
LABEL_99:
        *(_BYTE *)(a1 + 84) |= 1u;
        goto LABEL_100;
      }
      goto LABEL_94;
    }
LABEL_75:
    v53 = PBReaderSkipValueWithTag();
    if ((v53 & v75 & 1) == 0)
    {
      v74 = v53;
      goto LABEL_97;
    }
LABEL_95:
    if (*(_QWORD *)(v3 + *v16) >= *(_QWORD *)(v3 + *v6))
      goto LABEL_96;
  }
  if (!v32 || (*(_BYTE *)(a1 + 84) & 2) != 0)
    goto LABEL_75;
  if (v29 != 2)
  {
    v62 = 0;
    v63 = 0;
    v64 = 0;
    while (1)
    {
      v65 = *v16;
      v66 = *(_QWORD *)(v3 + v65);
      v67 = v66 + 1;
      if (v66 == -1 || v67 > *(_QWORD *)(v3 + *v6))
        goto LABEL_92;
      v68 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v66);
      *(_QWORD *)(v3 + v65) = v67;
      v64 |= (unint64_t)(v68 & 0x7F) << v62;
      if (v68 < 0)
      {
        v62 += 7;
        v61 = v63++ > 8;
        if (!v61)
          continue;
      }
      goto LABEL_93;
    }
  }
  if (PBReaderPlaceMark())
  {
    while (*(_QWORD *)(v3 + *v16) < *(_QWORD *)(v3 + *v6) && !*(_BYTE *)(v3 + *v18))
    {
      v44 = 0;
      v45 = 0;
      v46 = 0;
      while (1)
      {
        v47 = *v16;
        v48 = *(_QWORD *)(v3 + v47);
        v49 = v48 + 1;
        if (v48 == -1 || v49 > *(_QWORD *)(v3 + *v6))
          break;
        v50 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v48);
        *(_QWORD *)(v3 + v47) = v49;
        v46 |= (unint64_t)(v50 & 0x7F) << v44;
        if (v50 < 0)
        {
          v44 += 7;
          v27 = v45++ >= 9;
          if (!v27)
            continue;
        }
        goto LABEL_68;
      }
      *(_BYTE *)(v3 + *v18) = 1;
LABEL_68:
      PBRepeatedInt32Add();
    }
    goto LABEL_77;
  }
LABEL_115:
  v74 = 0;
LABEL_97:
  LOBYTE(v15) = v73;
LABEL_98:
  if ((v15 & 1) != 0)
    goto LABEL_99;
LABEL_100:
  if (v76 & 1 | ((v74 & 1) == 0))
  {
    *(_BYTE *)(a1 + 84) |= 4u;
    *(_BYTE *)(a1 + 84) |= 2u;
    goto LABEL_109;
  }
  if (v17)
  {
    while (1)
    {
      v70 = *v17++;
      v69 = v70;
      if (v70 == 1)
        break;
      if (v69 == 2)
      {
LABEL_105:
        *(_BYTE *)(a1 + 84) |= v69;
      }
      else if (!v69)
      {
        goto LABEL_109;
      }
    }
    LOBYTE(v69) = 4;
    goto LABEL_105;
  }
LABEL_109:
  if (v74)
    v3 = *(_BYTE *)(v3 + (int)*MEMORY[0x1E0D82BC8]) == 0;
  else
    v3 = 0;
  if ((v76 & 1) != 0)
  {
    v71 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_18929D8B8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18929DE30(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAddressResultSubTypeFilterReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 76))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDAddressResultSubTypeFilterReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 80));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 72) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 76) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDAddressResultSubTypeFilterReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDAddressResultSubTypeFilterReadAllFrom_initialTag;
  Specified = GEOPDAddressResultSubTypeFilterReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 80));
  return Specified;
}

void sub_18929E520(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDAddressResultSubTypeFilterIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  BOOL v13;
  int v14;
  int v15;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  int v25;
  unsigned int v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  int v31;
  unsigned int v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  int v36;
  _BOOL8 v37;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_59;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        v13 = v7++ >= 9;
        if (v13)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        goto LABEL_59;
      if ((v8 >> 3) == 2)
        break;
      if ((v8 >> 3) == 1)
      {
        if (v15 == 2)
        {
          if (!PBReaderPlaceMark())
            goto LABEL_61;
LABEL_38:
          while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
          {
            v27 = a1[*v4];
            if (a1[*v4])
              break;
            while (1)
            {
              v28 = *v2;
              v29 = *(_QWORD *)&a1[v28];
              v30 = v29 + 1;
              if (v29 == -1 || v30 > *(_QWORD *)&a1[*v3])
                break;
              v31 = *(char *)(*(_QWORD *)&a1[*v5] + v29);
              *(_QWORD *)&a1[v28] = v30;
              if (v31 < 0)
              {
                v13 = v27++ >= 9;
                if (!v13)
                  continue;
              }
              goto LABEL_38;
            }
            a1[*v4] = 1;
          }
LABEL_57:
          PBReaderRecallMark();
          goto LABEL_58;
        }
        if ((v8 & 7) != 0)
          goto LABEL_61;
        while (1)
        {
          v17 = *v2;
          v18 = *(_QWORD *)&a1[v17];
          v19 = v18 + 1;
          if (v18 == -1 || v19 > *(_QWORD *)&a1[*v3])
            break;
          v20 = *(char *)(*(_QWORD *)&a1[*v5] + v18);
          *(_QWORD *)&a1[v17] = v19;
          if (v20 < 0)
          {
            v21 = v15++;
            if (v21 <= 8)
              continue;
          }
          goto LABEL_58;
        }
LABEL_36:
        a1[*v4] = 1;
        goto LABEL_58;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        goto LABEL_61;
LABEL_58:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_59;
    }
    if (v15 == 2)
    {
      if (!PBReaderPlaceMark())
      {
LABEL_61:
        PBReaderRecallMark();
        return 0;
      }
LABEL_48:
      while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
      {
        v32 = a1[*v4];
        if (a1[*v4])
          break;
        while (1)
        {
          v33 = *v2;
          v34 = *(_QWORD *)&a1[v33];
          v35 = v34 + 1;
          if (v34 == -1 || v35 > *(_QWORD *)&a1[*v3])
            break;
          v36 = *(char *)(*(_QWORD *)&a1[*v5] + v34);
          *(_QWORD *)&a1[v33] = v35;
          if (v36 < 0)
          {
            v13 = v32++ >= 9;
            if (!v13)
              continue;
          }
          goto LABEL_48;
        }
        a1[*v4] = 1;
      }
      goto LABEL_57;
    }
    if ((v8 & 7) != 0)
      goto LABEL_61;
    while (1)
    {
      v22 = *v2;
      v23 = *(_QWORD *)&a1[v22];
      v24 = v23 + 1;
      if (v23 == -1 || v24 > *(_QWORD *)&a1[*v3])
        goto LABEL_36;
      v25 = *(char *)(*(_QWORD *)&a1[*v5] + v23);
      *(_QWORD *)&a1[v22] = v24;
      if (v25 < 0)
      {
        v26 = v15++;
        if (v26 <= 8)
          continue;
      }
      goto LABEL_58;
    }
  }
LABEL_59:
  v37 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v37;
}

void sub_18929EA60(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDAddressResultSubTypeFilterIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  v2 = (*(_BYTE *)(a1 + 84) & 0xE) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 80));
  return v2;
}

void sub_18929EC2C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDBrowseCategoriesReadAllFrom(uint64_t a1, void *a2, int a3)
{
  char *v5;
  int *v6;
  int *v7;
  int *v8;
  int *v9;
  char v10;
  unsigned int v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  int v18;
  GEOPDBrowseCategory *v20;
  id v21;
  void *v22;
  _BOOL8 v23;

  v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    v6 = (int *)MEMORY[0x1E0D82BF0];
    v7 = (int *)MEMORY[0x1E0D82BD8];
    v8 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v5[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v5[*MEMORY[0x1E0D82BD8]])
    {
      v9 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v5[*v8])
          break;
        v10 = 0;
        v11 = 0;
        v12 = 0;
        while (1)
        {
          v13 = *v6;
          v14 = *(_QWORD *)&v5[v13];
          v15 = v14 + 1;
          if (v14 == -1 || v15 > *(_QWORD *)&v5[*v7])
            break;
          v16 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v14);
          *(_QWORD *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0)
            goto LABEL_13;
          v10 += 7;
          if (v11++ >= 9)
          {
            v12 = 0;
            v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        v18 = v5[*v8];
        if (v5[*v8])
          v12 = 0;
LABEL_15:
        if (v18 || (v12 & 7) == 4)
          break;
        if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_29;
          v20 = objc_alloc_init(GEOPDBrowseCategory);
          if (!GEOPDBrowseCategoryReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          -[GEOPDBrowseCategories addBrowseCategory:](a1, v20);

        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v21 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v22 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v21;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_29;
        }
      }
      while (*(_QWORD *)&v5[*v6] < *(_QWORD *)&v5[*v7]);
    }
    v23 = v5[*v8] == 0;
  }
  else
  {
LABEL_29:
    v23 = 0;
  }
  objc_sync_exit(v5);

  return v23;
}

void sub_18929F738(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDBrowseCategoryIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  int v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  int v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  int v42;
  unsigned int v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  int v47;
  _BOOL8 v48;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2)
            goto LABEL_88;
          goto LABEL_34;
        case 2u:
          if (v15 == 2)
            goto LABEL_34;
          goto LABEL_88;
        case 3u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOStyleAttributesIsValid(a1))
            goto LABEL_88;
          goto LABEL_30;
        case 4u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDBrowseCategoryIsValid(a1))
            goto LABEL_88;
LABEL_30:
          PBReaderRecallMark();
          continue;
        case 5u:
          if (v15 == 2)
            goto LABEL_34;
          goto LABEL_88;
        case 6u:
          if (v15 == 2)
            goto LABEL_34;
          goto LABEL_88;
        case 7u:
          if ((v8 & 7) != 0)
            goto LABEL_88;
          v17 = 0;
          while (1)
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
              goto LABEL_84;
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if (v21 < 0)
            {
              v22 = v17++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_85;
          }
        case 8u:
          if ((v8 & 7) != 0)
            goto LABEL_88;
          v23 = 0;
          while (1)
          {
            v24 = *v2;
            v25 = *(_QWORD *)&a1[v24];
            v26 = v25 + 1;
            if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
              goto LABEL_84;
            v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
            *(_QWORD *)&a1[v24] = v26;
            if (v27 < 0)
            {
              v22 = v23++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_85;
          }
        case 9u:
          if ((v8 & 7) != 0)
            goto LABEL_88;
          v28 = 0;
          while (1)
          {
            v29 = *v2;
            v30 = *(_QWORD *)&a1[v29];
            v31 = v30 + 1;
            if (v30 == -1 || v31 > *(_QWORD *)&a1[*v3])
              goto LABEL_84;
            v32 = *(char *)(*(_QWORD *)&a1[*v5] + v30);
            *(_QWORD *)&a1[v29] = v31;
            if (v32 < 0)
            {
              v22 = v28++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_85;
          }
        case 0xAu:
          if ((v8 & 7) != 0)
            goto LABEL_88;
          v33 = 0;
          while (1)
          {
            v34 = *v2;
            v35 = *(_QWORD *)&a1[v34];
            v36 = v35 + 1;
            if (v35 == -1 || v36 > *(_QWORD *)&a1[*v3])
              goto LABEL_84;
            v37 = *(char *)(*(_QWORD *)&a1[*v5] + v35);
            *(_QWORD *)&a1[v34] = v36;
            if (v37 < 0)
            {
              v22 = v33++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_85;
          }
        case 0xBu:
          if ((v8 & 7) != 0)
            goto LABEL_88;
          v38 = 0;
          while (1)
          {
            v39 = *v2;
            v40 = *(_QWORD *)&a1[v39];
            v41 = v40 + 1;
            if (v40 == -1 || v41 > *(_QWORD *)&a1[*v3])
              goto LABEL_84;
            v42 = *(char *)(*(_QWORD *)&a1[*v5] + v40);
            *(_QWORD *)&a1[v39] = v41;
            if (v42 < 0)
            {
              v22 = v38++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_85;
          }
        case 0xCu:
          if ((v8 & 7) != 0)
            goto LABEL_88;
          v43 = 0;
          break;
        default:
LABEL_34:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_88:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v44 = *v2;
        v45 = *(_QWORD *)&a1[v44];
        v46 = v45 + 1;
        if (v45 == -1 || v46 > *(_QWORD *)&a1[*v3])
          break;
        v47 = *(char *)(*(_QWORD *)&a1[*v5] + v45);
        *(_QWORD *)&a1[v44] = v46;
        if (v47 < 0)
        {
          v22 = v43++ > 8;
          if (!v22)
            continue;
        }
        goto LABEL_85;
      }
LABEL_84:
      a1[*v4] = 1;
LABEL_85:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v48 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v48;
}

BOOL GEOPDBrowseCategoriesFilterReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  id v25;
  void *v26;
  _BOOL8 v27;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 1)
        {
          v18 = 0;
          v19 = 0;
          v20 = 0;
          *(_BYTE *)(a1 + 20) |= 1u;
          while (1)
          {
            v21 = *v4;
            v22 = *(_QWORD *)&v3[v21];
            v23 = v22 + 1;
            if (v22 == -1 || v23 > *(_QWORD *)&v3[*v5])
              break;
            v24 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v22);
            *(_QWORD *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0)
              goto LABEL_32;
            v18 += 7;
            v15 = v19++ >= 9;
            if (v15)
            {
              v20 = 0;
              goto LABEL_34;
            }
          }
          v3[*v6] = 1;
LABEL_32:
          if (v3[*v6])
            v20 = 0;
LABEL_34:
          *(_BYTE *)(a1 + 16) = v20 != 0;
        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v25 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v26 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v25;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_37;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v27 = v3[*v6] == 0;
  }
  else
  {
LABEL_37:
    v27 = 0;
  }
  objc_sync_exit(v3);

  return v27;
}

void sub_1892A0770(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892A0AB8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDBrowseCategoryReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  char v17;
  unsigned __int8 v18;
  int *v19;
  int *v20;
  int *v21;
  int *v22;
  char v23;
  unsigned int v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  BOOL v30;
  int v31;
  unint64_t v33;
  BOOL v34;
  int *v35;
  int v36;
  int v37;
  BOOL v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  void *v42;
  int v43;
  GEOStyleAttributes *v44;
  void *v45;
  char v46;
  unsigned int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  char v52;
  char v53;
  unsigned int v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  char v58;
  char v59;
  unsigned int v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  char v64;
  char v65;
  unsigned int v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  char v71;
  char v72;
  unsigned int v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  char v78;
  char v79;
  unsigned int v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  char v85;
  char v86;
  uint64_t v87;
  BOOL v88;
  uint64_t v89;
  __int16 v90;
  int v91;
  __int16 v92;
  void *v93;
  int v95;
  int *v96;
  char v97;
  char v98;
  char v99;
  char v100;
  BOOL v101;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 76);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 72));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 100)), (uint16x4_t)0xFFF5FFF6FFF4FFF9), (int8x8_t)0x1000100010001))+ ((*(_WORD *)(a1 + 100) >> 9) & 1)+ (HIBYTE(*(_WORD *)(a1 + 100)) & 1)+ ((*(_WORD *)(a1 + 100) >> 6) & 1));
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 > 3;
        v17 = v16 & ~(_BYTE)v11 | v9;
        v18 = v16 | v11;
        v97 = v17;
        v98 = v8;
        v99 = v18 | v17;
        if (((v18 | v8) & 1) != 0)
          v19 = 0;
        else
          v19 = a3;
        v100 = (v19 == 0) | v18;
        v101 = v18;
        v20 = (int *)MEMORY[0x1E0D82BF0];
        v21 = (int *)MEMORY[0x1E0D82BC8];
        v22 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v7;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v20) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v21))
      goto LABEL_158;
    v23 = 0;
    v24 = 0;
    v25 = 0;
    while (1)
    {
      v26 = *v20;
      v27 = *(_QWORD *)(v3 + v26);
      v28 = v27 + 1;
      if (v27 == -1 || v28 > *(_QWORD *)(v3 + *v6))
        break;
      v29 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v27);
      *(_QWORD *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0)
        goto LABEL_25;
      v23 += 7;
      v30 = v24++ >= 9;
      if (v30)
      {
        v25 = 0;
        v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v21) = 1;
LABEL_25:
    v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(_BYTE *)(v3 + *v21))
      v25 = 0;
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_158:
      v95 = 1;
      goto LABEL_159;
    }
    v33 = v25 >> 3;
    v34 = v101;
    if ((v100 & 1) == 0)
    {
      v35 = v19;
      do
      {
        v37 = *v35++;
        v36 = v37;
        v34 = v37 != 0;
        if (v37)
          v38 = v36 == (_DWORD)v33;
        else
          v38 = 1;
      }
      while (!v38);
    }
    switch((int)v33)
    {
      case 1:
        if (!v34)
          goto LABEL_117;
        if ((*(_WORD *)(a1 + 100) & 0x1000) == 0)
        {
          PBReaderReadData();
          v39 = objc_claimAutoreleasedReturnValue();
          v40 = 64;
          goto LABEL_67;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_179;
        v90 = 8 * *(_WORD *)(a1 + 100);
        goto LABEL_155;
      case 2:
        if (!v34)
          goto LABEL_117;
        if ((*(_WORD *)(a1 + 100) & 0x80) == 0)
        {
          PBReaderReadString();
          v39 = objc_claimAutoreleasedReturnValue();
          v40 = 24;
          goto LABEL_67;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_179;
        v90 = *(_WORD *)(a1 + 100) << 8;
        goto LABEL_155;
      case 3:
        if (!v34)
          goto LABEL_117;
        if ((*(_WORD *)(a1 + 100) & 0x400) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_179;
          v90 = 32 * *(_WORD *)(a1 + 100);
LABEL_155:
          v7 += v90 >> 15;
          goto LABEL_156;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_179;
        v44 = objc_alloc_init(GEOStyleAttributes);
        if (GEOStyleAttributesReadAllFrom((uint64_t)v44, (void *)v3))
        {
          PBReaderRecallMark();
          v45 = *(void **)(a1 + 48);
          *(_QWORD *)(a1 + 48) = v44;
LABEL_68:

          --v7;
LABEL_156:
          v21 = (int *)MEMORY[0x1E0D82BC8];
          goto LABEL_157;
        }
LABEL_178:

LABEL_179:
        v95 = 0;
        v96 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
        v21 = (int *)MEMORY[0x1E0D82BC8];
LABEL_160:
        if ((v97 & 1) != 0)
LABEL_161:
          *(_WORD *)(a1 + v96[999]) |= 0x40u;
        if (v101 || (v95 & 1) == 0)
        {
          *(_WORD *)(a1 + v96[999]) |= 0x1000u;
          *(_WORD *)(a1 + v96[999]) |= 0x80u;
          *(_WORD *)(a1 + v96[999]) |= 0x400u;
          *(_WORD *)(a1 + v96[999]) |= 0x800u;
          *(_WORD *)(a1 + v96[999]) |= 0x200u;
          *(_WORD *)(a1 + v96[999]) |= 0x100u;
        }
        else if (v19)
        {
          while (1)
          {
            v91 = *v19++;
            v92 = 4096;
            switch(v91)
            {
              case 0:
                goto LABEL_172;
              case 1:
                goto LABEL_171;
              case 2:
                v92 = 128;
                goto LABEL_171;
              case 3:
                v92 = 1024;
                goto LABEL_171;
              case 4:
                v92 = 2048;
                goto LABEL_171;
              case 5:
                v92 = 512;
                goto LABEL_171;
              case 6:
                v92 = 256;
LABEL_171:
                *(_WORD *)(a1 + v96[999]) |= v92;
                break;
              default:
                continue;
            }
          }
        }
LABEL_172:
        if (v95)
          v3 = *(_BYTE *)(v3 + *v21) == 0;
        else
          v3 = 0;
        if (v101)
        {
          v93 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      case 4:
        if (!v34 || (*(_WORD *)(a1 + 100) & 0x800) != 0)
          goto LABEL_117;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_179;
        v44 = objc_alloc_init(GEOPDBrowseCategory);
        if (!GEOPDBrowseCategoryReadAllFrom())
          goto LABEL_178;
        PBReaderRecallMark();
        -[GEOPDBrowseCategory _addNoFlagsSubCategory:](a1, v44);

        goto LABEL_156;
      case 5:
        if (!v34)
          goto LABEL_117;
        if ((*(_WORD *)(a1 + 100) & 0x200) == 0)
        {
          PBReaderReadString();
          v39 = objc_claimAutoreleasedReturnValue();
          v40 = 40;
          goto LABEL_67;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_179;
        v90 = *(_WORD *)(a1 + 100) << 6;
        goto LABEL_155;
      case 6:
        if (!v34)
          goto LABEL_117;
        if ((*(_WORD *)(a1 + 100) & 0x100) == 0)
        {
          PBReaderReadString();
          v39 = objc_claimAutoreleasedReturnValue();
          v40 = 32;
LABEL_67:
          v45 = *(void **)(a1 + v40);
          *(_QWORD *)(a1 + v40) = v39;
          goto LABEL_68;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_179;
        v90 = *(_WORD *)(a1 + 100) << 7;
        goto LABEL_155;
      case 7:
        if ((v98 & 1) == 0)
          goto LABEL_117;
        v46 = 0;
        v47 = 0;
        v48 = 0;
        *(_WORD *)(a1 + 100) |= 2u;
        while (2)
        {
          v49 = *v20;
          v50 = *(_QWORD *)(v3 + v49);
          v51 = v50 + 1;
          if (v50 == -1 || v51 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v52 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v50);
            *(_QWORD *)(v3 + v49) = v51;
            v48 |= (unint64_t)(v52 & 0x7F) << v46;
            if (v52 < 0)
            {
              v46 += 7;
              v30 = v47++ >= 9;
              if (v30)
              {
                LODWORD(v48) = 0;
                goto LABEL_122;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          LODWORD(v48) = 0;
LABEL_122:
        v87 = 88;
        goto LABEL_131;
      case 8:
        if ((v98 & 1) == 0)
          goto LABEL_117;
        v53 = 0;
        v54 = 0;
        v48 = 0;
        *(_WORD *)(a1 + 100) |= 1u;
        while (2)
        {
          v55 = *v20;
          v56 = *(_QWORD *)(v3 + v55);
          v57 = v56 + 1;
          if (v56 == -1 || v57 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v58 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v56);
            *(_QWORD *)(v3 + v55) = v57;
            v48 |= (unint64_t)(v58 & 0x7F) << v53;
            if (v58 < 0)
            {
              v53 += 7;
              v30 = v54++ >= 9;
              if (v30)
              {
                LODWORD(v48) = 0;
                goto LABEL_126;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          LODWORD(v48) = 0;
LABEL_126:
        v87 = 84;
        goto LABEL_131;
      case 9:
        if ((v98 & 1) == 0)
          goto LABEL_117;
        v59 = 0;
        v60 = 0;
        v48 = 0;
        *(_WORD *)(a1 + 100) |= 4u;
        while (2)
        {
          v61 = *v20;
          v62 = *(_QWORD *)(v3 + v61);
          v63 = v62 + 1;
          if (v62 == -1 || v63 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v64 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v62);
            *(_QWORD *)(v3 + v61) = v63;
            v48 |= (unint64_t)(v64 & 0x7F) << v59;
            if (v64 < 0)
            {
              v59 += 7;
              v30 = v60++ >= 9;
              if (v30)
              {
                LODWORD(v48) = 0;
                goto LABEL_130;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          LODWORD(v48) = 0;
LABEL_130:
        v87 = 92;
LABEL_131:
        *(_DWORD *)(a1 + v87) = v48;
        goto LABEL_157;
      case 10:
        if ((v98 & 1) == 0)
          goto LABEL_117;
        v65 = 0;
        v66 = 0;
        v67 = 0;
        *(_WORD *)(a1 + 100) |= 0x20u;
        while (2)
        {
          v68 = *v20;
          v69 = *(_QWORD *)(v3 + v68);
          v70 = v69 + 1;
          if (v69 == -1 || v70 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v71 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v69);
            *(_QWORD *)(v3 + v68) = v70;
            v67 |= (unint64_t)(v71 & 0x7F) << v65;
            if (v71 < 0)
            {
              v65 += 7;
              v30 = v66++ >= 9;
              if (v30)
              {
                v67 = 0;
                goto LABEL_135;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          v67 = 0;
LABEL_135:
        v88 = v67 != 0;
        v89 = 98;
        goto LABEL_144;
      case 11:
        if ((v98 & 1) == 0)
          goto LABEL_117;
        v72 = 0;
        v73 = 0;
        v74 = 0;
        *(_WORD *)(a1 + 100) |= 8u;
        while (2)
        {
          v75 = *v20;
          v76 = *(_QWORD *)(v3 + v75);
          v77 = v76 + 1;
          if (v76 == -1 || v77 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v78 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v76);
            *(_QWORD *)(v3 + v75) = v77;
            v74 |= (unint64_t)(v78 & 0x7F) << v72;
            if (v78 < 0)
            {
              v72 += 7;
              v30 = v73++ >= 9;
              if (v30)
              {
                v74 = 0;
                goto LABEL_139;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          v74 = 0;
LABEL_139:
        v88 = v74 != 0;
        v89 = 96;
        goto LABEL_144;
      case 12:
        if ((v98 & 1) == 0)
          goto LABEL_117;
        v79 = 0;
        v80 = 0;
        v81 = 0;
        *(_WORD *)(a1 + 100) |= 0x10u;
        while (2)
        {
          v82 = *v20;
          v83 = *(_QWORD *)(v3 + v82);
          v84 = v83 + 1;
          if (v83 == -1 || v84 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v85 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v83);
            *(_QWORD *)(v3 + v82) = v84;
            v81 |= (unint64_t)(v85 & 0x7F) << v79;
            if (v85 < 0)
            {
              v79 += 7;
              v30 = v80++ >= 9;
              if (v30)
              {
                v81 = 0;
                goto LABEL_143;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          v81 = 0;
LABEL_143:
        v88 = v81 != 0;
        v89 = 97;
LABEL_144:
        *(_BYTE *)(a1 + v89) = v88;
        goto LABEL_157;
      default:
        if ((v97 & 1) == 0 || (*(_WORD *)(a1 + 100) & 0x40) != 0)
        {
LABEL_117:
          v86 = PBReaderSkipValueWithTag();
          v21 = (int *)MEMORY[0x1E0D82BC8];
          if ((v86 & 1) == 0)
          {
            v95 = 0;
LABEL_159:
            v96 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
            goto LABEL_160;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v41 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v42 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v41;

          }
          v43 = PBUnknownFieldAdd();
          v21 = (int *)MEMORY[0x1E0D82BC8];
          if (!v43)
          {
            v95 = 0;
            v96 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
            goto LABEL_161;
          }
        }
LABEL_157:
        if (!(v99 & 1 | (v7 != 0)))
          goto LABEL_158;
        continue;
    }
  }
}

void sub_1892A17E4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892A1938(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892A1A8C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892A1C74(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892A1DC8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892A2778(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDBrowseCategoryCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _BYTE v11[128];
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  objc_msgSend(*(id *)(a1 + 48), "readAll:", 1);
  v9 = 0u;
  v10 = 0u;
  v7 = 0u;
  v8 = 0u;
  v2 = *(id *)(a1 + 56);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v8;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v8 != v5)
          objc_enumerationMutation(v2);
        -[GEOPDBrowseCategory readAll:](*(_QWORD *)(*((_QWORD *)&v7 + 1) + 8 * v6++), 1);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
    }
    while (v4);
  }

}

unint64_t GEOPDBrowseCategoryReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 76))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDBrowseCategoryReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 80));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 72) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 76) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDBrowseCategoryReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDBrowseCategoryReadAllFrom_initialTag;
  Specified = GEOPDBrowseCategoryReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDBrowseCategoryCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 80));
  return Specified;
}

void sub_1892A3300(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892A3670(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDBrowseCategoryIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  v2 = (*(_WORD *)(a1 + 100) & 0x3F80) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 80));
  return v2;
}

void sub_1892A3AB0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDResultRefinementMetadataIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unint64_t v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int v22;
  _BOOL8 v24;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_41;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        goto LABEL_41;
      v17 = v8 >> 3;
      if ((v8 >> 3) == 3)
        break;
      if ((_DWORD)v17 == 2)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDResultRefinementMetadataDefaultIsValid(a1))
          goto LABEL_43;
LABEL_36:
        PBReaderRecallMark();
        goto LABEL_40;
      }
      if ((_DWORD)v17 == 1)
      {
        if ((v8 & 7) != 0)
          goto LABEL_43;
        v18 = 0;
        while (1)
        {
          v19 = *v2;
          v20 = *(_QWORD *)&a1[v19];
          v21 = v20 + 1;
          if (v20 == -1 || v21 > *(_QWORD *)&a1[*v3])
            break;
          v22 = *(char *)(*(_QWORD *)&a1[*v5] + v20);
          *(_QWORD *)&a1[v19] = v21;
          if (v22 < 0 && v18++ <= 8)
            continue;
          goto LABEL_40;
        }
        a1[*v4] = 1;
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_43;
      }
LABEL_40:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_41;
    }
    if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDResultRefinementMetadataSortIsValid(a1))
    {
LABEL_43:
      PBReaderRecallMark();
      return 0;
    }
    goto LABEL_36;
  }
LABEL_41:
  v24 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v24;
}

void sub_1892A4B8C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892A559C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892A59B8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDPoiIconCategoryFilterReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  _BOOL4 v14;
  int v15;
  int *v16;
  int *v17;
  int *v18;
  int *v19;
  char v20;
  unsigned int v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  BOOL v27;
  int v28;
  int v29;
  unint64_t v31;
  BOOL v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  char v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  char v44;
  unsigned int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  char v50;
  id v51;
  void *v52;
  int v53;
  char v54;
  unsigned int v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  char v60;
  BOOL v61;
  char v62;
  unsigned int v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  char v68;
  int v69;
  int v70;
  void *v71;
  char v73;
  int v74;
  int v75;
  int v76;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 76);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 72));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int8 *)(a1 + 84) >> 1) & 1)
      + (*(_BYTE *)(a1 + 84) & 1)
      + ((*(unsigned __int8 *)(a1 + 84) >> 2) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v9])
    {
      case -4:
        ++v11;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_9;
      case 0:
        v14 = v11 != 0;
        v15 = v14 & ~(_DWORD)v10 | v7;
        v76 = v14 | v10;
        v16 = (int *)MEMORY[0x1E0D82BF0];
        if ((((v14 | v10) | v8) & 1) != 0)
          v17 = 0;
        else
          v17 = a3;
        v74 = 1;
        if (*(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(v3 + *v6))
          goto LABEL_98;
        v73 = v14 & ~(_BYTE)v10 | v7;
        v75 = (v9 != 0) | v76 | v15;
        v18 = (int *)MEMORY[0x1E0D82BC8];
        v19 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_7:
        v12 = v7;
LABEL_8:
        v13 = v10;
LABEL_9:
        ++v9;
        v7 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_BYTE *)(v3 + *v18))
      goto LABEL_96;
    v20 = 0;
    v21 = 0;
    v22 = 0;
    while (1)
    {
      v23 = *v16;
      v24 = *(_QWORD *)(v3 + v23);
      v25 = v24 + 1;
      if (v24 == -1 || v25 > *(_QWORD *)(v3 + *v6))
        break;
      v26 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v24);
      *(_QWORD *)(v3 + v23) = v25;
      v22 |= (unint64_t)(v26 & 0x7F) << v20;
      if ((v26 & 0x80) == 0)
        goto LABEL_24;
      v20 += 7;
      v27 = v21++ >= 9;
      if (v27)
      {
        v22 = 0;
        v28 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_26;
      }
    }
    *(_BYTE *)(v3 + *v18) = 1;
LABEL_24:
    v28 = *(unsigned __int8 *)(v3 + *v18);
    if (*(_BYTE *)(v3 + *v18))
      v22 = 0;
LABEL_26:
    v29 = v22 & 7;
    if (v28 || v29 == 4)
    {
LABEL_96:
      v74 = 1;
      goto LABEL_97;
    }
    v31 = v22 >> 3;
    v32 = v76;
    if (!((v17 == 0) | v76 & 1))
    {
      v33 = v17;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    if ((_DWORD)v31 == 2)
      break;
    if ((_DWORD)v31 == 1)
    {
      if (v32 && (*(_BYTE *)(a1 + 84) & 4) == 0)
      {
        if (v29 == 2)
        {
          if (!PBReaderPlaceMark())
            goto LABEL_115;
          while (*(_QWORD *)(v3 + *v16) < *(_QWORD *)(v3 + *v6) && !*(_BYTE *)(v3 + *v18))
          {
            v37 = 0;
            v38 = 0;
            v39 = 0;
            while (1)
            {
              v40 = *v16;
              v41 = *(_QWORD *)(v3 + v40);
              v42 = v41 + 1;
              if (v41 == -1 || v42 > *(_QWORD *)(v3 + *v6))
                break;
              v43 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v41);
              *(_QWORD *)(v3 + v40) = v42;
              v39 |= (unint64_t)(v43 & 0x7F) << v37;
              if (v43 < 0)
              {
                v37 += 7;
                v27 = v38++ >= 9;
                if (!v27)
                  continue;
              }
              goto LABEL_53;
            }
            *(_BYTE *)(v3 + *v18) = 1;
LABEL_53:
            PBRepeatedUInt32Add();
          }
LABEL_77:
          PBReaderRecallMark();
LABEL_94:
          if ((v75 & 1) == 0)
            goto LABEL_96;
          goto LABEL_95;
        }
        v54 = 0;
        v55 = 0;
        v56 = 0;
        while (1)
        {
          v57 = *v16;
          v58 = *(_QWORD *)(v3 + v57);
          v59 = v58 + 1;
          if (v58 == -1 || v59 > *(_QWORD *)(v3 + *v6))
            break;
          v60 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v58);
          *(_QWORD *)(v3 + v57) = v59;
          v56 |= (unint64_t)(v60 & 0x7F) << v54;
          if (v60 < 0)
          {
            v54 += 7;
            v61 = v55++ > 8;
            if (!v61)
              continue;
          }
          goto LABEL_93;
        }
LABEL_92:
        *(_BYTE *)(v3 + *v18) = 1;
LABEL_93:
        PBRepeatedUInt32Add();
        goto LABEL_94;
      }
    }
    else if ((v73 & 1) != 0 && (*(_BYTE *)(a1 + 84) & 1) == 0)
    {
      if (!*(_QWORD *)(a1 + 16))
      {
        v51 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v52 = *(void **)(a1 + 16);
        *(_QWORD *)(a1 + 16) = v51;

      }
      if ((PBUnknownFieldAdd() & 1) == 0)
      {
        v74 = 0;
LABEL_99:
        *(_BYTE *)(a1 + 84) |= 1u;
        goto LABEL_100;
      }
      goto LABEL_94;
    }
LABEL_75:
    v53 = PBReaderSkipValueWithTag();
    if ((v53 & v75 & 1) == 0)
    {
      v74 = v53;
      goto LABEL_97;
    }
LABEL_95:
    if (*(_QWORD *)(v3 + *v16) >= *(_QWORD *)(v3 + *v6))
      goto LABEL_96;
  }
  if (!v32 || (*(_BYTE *)(a1 + 84) & 2) != 0)
    goto LABEL_75;
  if (v29 != 2)
  {
    v62 = 0;
    v63 = 0;
    v64 = 0;
    while (1)
    {
      v65 = *v16;
      v66 = *(_QWORD *)(v3 + v65);
      v67 = v66 + 1;
      if (v66 == -1 || v67 > *(_QWORD *)(v3 + *v6))
        goto LABEL_92;
      v68 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v66);
      *(_QWORD *)(v3 + v65) = v67;
      v64 |= (unint64_t)(v68 & 0x7F) << v62;
      if (v68 < 0)
      {
        v62 += 7;
        v61 = v63++ > 8;
        if (!v61)
          continue;
      }
      goto LABEL_93;
    }
  }
  if (PBReaderPlaceMark())
  {
    while (*(_QWORD *)(v3 + *v16) < *(_QWORD *)(v3 + *v6) && !*(_BYTE *)(v3 + *v18))
    {
      v44 = 0;
      v45 = 0;
      v46 = 0;
      while (1)
      {
        v47 = *v16;
        v48 = *(_QWORD *)(v3 + v47);
        v49 = v48 + 1;
        if (v48 == -1 || v49 > *(_QWORD *)(v3 + *v6))
          break;
        v50 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v48);
        *(_QWORD *)(v3 + v47) = v49;
        v46 |= (unint64_t)(v50 & 0x7F) << v44;
        if (v50 < 0)
        {
          v44 += 7;
          v27 = v45++ >= 9;
          if (!v27)
            continue;
        }
        goto LABEL_68;
      }
      *(_BYTE *)(v3 + *v18) = 1;
LABEL_68:
      PBRepeatedUInt32Add();
    }
    goto LABEL_77;
  }
LABEL_115:
  v74 = 0;
LABEL_97:
  LOBYTE(v15) = v73;
LABEL_98:
  if ((v15 & 1) != 0)
    goto LABEL_99;
LABEL_100:
  if (v76 & 1 | ((v74 & 1) == 0))
  {
    *(_BYTE *)(a1 + 84) |= 4u;
    *(_BYTE *)(a1 + 84) |= 2u;
    goto LABEL_109;
  }
  if (v17)
  {
    while (1)
    {
      v70 = *v17++;
      v69 = v70;
      if (v70 == 1)
        break;
      if (v69 == 2)
      {
LABEL_105:
        *(_BYTE *)(a1 + 84) |= v69;
      }
      else if (!v69)
      {
        goto LABEL_109;
      }
    }
    LOBYTE(v69) = 4;
    goto LABEL_105;
  }
LABEL_109:
  if (v74)
    v3 = *(_BYTE *)(v3 + (int)*MEMORY[0x1E0D82BC8]) == 0;
  else
    v3 = 0;
  if ((v76 & 1) != 0)
  {
    v71 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_1892A62BC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892A6710(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDPoiIconCategoryFilterReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 76))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDPoiIconCategoryFilterReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 80));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 72) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 76) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDPoiIconCategoryFilterReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDPoiIconCategoryFilterReadAllFrom_initialTag;
  Specified = GEOPDPoiIconCategoryFilterReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 80));
  return Specified;
}

void sub_1892A6BF0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892A6DC0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPoiIconCategoryFilterIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  v2 = (*(_BYTE *)(a1 + 84) & 0xE) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 80));
  return v2;
}

void sub_1892A6F8C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892A739C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDRefinementSessionStateReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  char v17;
  unsigned __int8 v18;
  char v19;
  int *v20;
  int *v21;
  int *v22;
  int *v23;
  char v24;
  unsigned int v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  int v32;
  unint64_t v34;
  BOOL v35;
  int *v36;
  int v37;
  int v38;
  BOOL v39;
  GEOPDRelatedEntitySection *v40;
  void *v41;
  id v42;
  void *v43;
  int v44;
  char v45;
  char v46;
  int v47;
  int v48;
  void *v49;
  int v51;
  int *v52;
  char v53;
  char v54;
  char v55;
  BOOL v56;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1)
      + (*(_BYTE *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1);
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v7 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 != 0;
        v17 = v16 & ~(_BYTE)v11 | v9;
        v18 = v16 | v11;
        v53 = v17;
        v19 = v18 | v17;
        if (((v18 | v7) & 1) != 0)
          v20 = 0;
        else
          v20 = a3;
        v56 = v18;
        v54 = v19;
        v55 = (v20 == 0) | v18;
        v21 = (int *)MEMORY[0x1E0D82BF0];
        v22 = (int *)MEMORY[0x1E0D82BC8];
        v23 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v8;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v21) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v22))
      goto LABEL_62;
    v24 = 0;
    v25 = 0;
    v26 = 0;
    while (1)
    {
      v27 = *v21;
      v28 = *(_QWORD *)(v3 + v27);
      v29 = v28 + 1;
      if (v28 == -1 || v29 > *(_QWORD *)(v3 + *v6))
        break;
      v30 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v28);
      *(_QWORD *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0)
        goto LABEL_25;
      v24 += 7;
      if (v25++ >= 9)
      {
        v26 = 0;
        v32 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v22) = 1;
LABEL_25:
    v32 = *(unsigned __int8 *)(v3 + *v22);
    if (*(_BYTE *)(v3 + *v22))
      v26 = 0;
LABEL_27:
    if (v32 || (v26 & 7) == 4)
    {
LABEL_62:
      v51 = 1;
      goto LABEL_63;
    }
    v34 = v26 >> 3;
    v35 = v56;
    if ((v55 & 1) == 0)
    {
      v36 = v20;
      do
      {
        v38 = *v36++;
        v37 = v38;
        v35 = v38 != 0;
        if (v38)
          v39 = v37 == (_DWORD)v34;
        else
          v39 = 1;
      }
      while (!v39);
    }
    if ((_DWORD)v34 == 2)
      break;
    if ((_DWORD)v34 == 1)
    {
      if (v35 && (*(_BYTE *)(a1 + 52) & 2) == 0)
      {
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_83;
        v40 = objc_alloc_init(GEOPDRelatedEntitySection);
        if (!GEOPDRelatedEntitySectionReadAllFrom((uint64_t)v40, (void *)v3, v10 & 1))
          goto LABEL_82;
        PBReaderRecallMark();
        -[GEOPDRefinementSessionState _addNoFlagsRelatedEntitySection:](a1, v40);

        goto LABEL_60;
      }
    }
    else if ((v53 & 1) != 0 && (*(_BYTE *)(a1 + 52) & 1) == 0)
    {
      if (!*(_QWORD *)(a1 + 16))
      {
        v42 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v43 = *(void **)(a1 + 16);
        *(_QWORD *)(a1 + 16) = v42;

      }
      v44 = PBUnknownFieldAdd();
      v22 = (int *)MEMORY[0x1E0D82BC8];
      if (!v44)
      {
        v51 = 0;
        v52 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
        goto LABEL_65;
      }
      goto LABEL_61;
    }
LABEL_56:
    v45 = PBReaderSkipValueWithTag();
    v22 = (int *)MEMORY[0x1E0D82BC8];
    if ((v45 & 1) == 0)
    {
      v51 = 0;
LABEL_63:
      v52 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
      goto LABEL_64;
    }
LABEL_61:
    if (!(v54 & 1 | (v8 != 0)))
      goto LABEL_62;
  }
  if (!v35)
    goto LABEL_56;
  if ((*(_BYTE *)(a1 + 52) & 4) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0)
      goto LABEL_83;
    v8 += *(unsigned __int8 *)(a1 + 52) << 29 >> 31;
    goto LABEL_60;
  }
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_83;
  v40 = objc_alloc_init(GEOPDSearchSectionList);
  if (GEOPDSearchSectionListReadAllFrom((uint64_t)v40, (void *)v3, v10 & 1))
  {
    PBReaderRecallMark();
    v41 = *(void **)(a1 + 32);
    *(_QWORD *)(a1 + 32) = v40;

    --v8;
LABEL_60:
    v22 = (int *)MEMORY[0x1E0D82BC8];
    goto LABEL_61;
  }
LABEL_82:

LABEL_83:
  v51 = 0;
  v52 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
  v22 = (int *)MEMORY[0x1E0D82BC8];
LABEL_64:
  if ((v53 & 1) == 0)
    goto LABEL_66;
LABEL_65:
  *(_BYTE *)(a1 + v52[1019]) |= 1u;
LABEL_66:
  if (v56 || (v51 & 1) == 0)
  {
    *(_BYTE *)(a1 + v52[1019]) |= 2u;
    *(_BYTE *)(a1 + v52[1019]) |= 4u;
    goto LABEL_76;
  }
  if (v20)
  {
    while (1)
    {
      v48 = *v20++;
      v47 = v48;
      if (v48 == 1)
        break;
      if (v47 == 2)
      {
        v46 = 4;
LABEL_72:
        *(_BYTE *)(a1 + v52[1019]) |= v46;
      }
      else if (!v47)
      {
        goto LABEL_76;
      }
    }
    v46 = 2;
    goto LABEL_72;
  }
LABEL_76:
  if (v51)
    v3 = *(_BYTE *)(v3 + *v22) == 0;
  else
    v3 = 0;
  if (v56)
  {
    v49 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_1892A7C08(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892A83D4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDRefinementSessionStateCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _BYTE v10[128];
  uint64_t v11;

  v11 = *MEMORY[0x1E0C80C00];
  v6 = 0u;
  v7 = 0u;
  v8 = 0u;
  v9 = 0u;
  v1 = *(id *)(a1 + 24);
  v2 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
  if (v2)
  {
    v3 = v2;
    v4 = *(_QWORD *)v7;
    do
    {
      v5 = 0;
      do
      {
        if (*(_QWORD *)v7 != v4)
          objc_enumerationMutation(v1);
        -[GEOPDRelatedEntitySection readAll:](*(_QWORD *)(*((_QWORD *)&v6 + 1) + 8 * v5++), 1);
      }
      while (v3 != v5);
      v3 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
    }
    while (v3);
  }

}

unint64_t GEOPDRefinementSessionStateReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDRefinementSessionStateReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDRefinementSessionStateReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDRefinementSessionStateReadAllFrom_initialTag;
  Specified = GEOPDRefinementSessionStateReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDRefinementSessionStateCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_1892A865C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDRefinementSessionStateReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOPDRefinementSessionStateReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1892A86BC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDRefinementSessionStateIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  _BOOL8 v17;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_30;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        goto LABEL_30;
      if ((v8 >> 3) == 2)
        break;
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDRelatedEntitySectionIsValid(a1))
          goto LABEL_31;
LABEL_27:
        PBReaderRecallMark();
        goto LABEL_29;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        goto LABEL_31;
LABEL_29:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_30;
    }
    if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDSearchSectionListIsValid(a1))
    {
LABEL_31:
      PBReaderRecallMark();
      return 0;
    }
    goto LABEL_27;
  }
LABEL_30:
  v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

BOOL GEOPDRelatedEntitySectionIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  BOOL v13;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  char v28;
  unsigned int v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  int v35;
  int v36;
  int v38;
  _BOOL8 v39;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        v13 = v7++ >= 9;
        if (v13)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2)
            goto LABEL_70;
          goto LABEL_20;
        case 2u:
          if ((v8 & 7) != 0)
            goto LABEL_70;
          v17 = 0;
          while (1)
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
              goto LABEL_38;
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if (v21 < 0)
            {
              v22 = v17++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_67;
          }
        case 3u:
          if ((v8 & 7) != 0)
            goto LABEL_70;
          v23 = 0;
          while (1)
          {
            v24 = *v2;
            v25 = *(_QWORD *)&a1[v24];
            v26 = v25 + 1;
            if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
              break;
            v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
            *(_QWORD *)&a1[v24] = v26;
            if (v27 < 0)
            {
              v22 = v23++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_67;
          }
LABEL_38:
          a1[*v4] = 1;
          continue;
        case 4u:
          if (v15 != 2 || !PBReaderPlaceMark())
            goto LABEL_70;
          objc_msgSend(a1, "position", 0, 0);
          objc_msgSend(a1, "length");
          break;
        default:
LABEL_20:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_70;
          continue;
      }
      while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3] && !a1[*v4])
      {
        v28 = 0;
        v29 = 0;
        v30 = 0;
        while (1)
        {
          v31 = *v2;
          v32 = *(_QWORD *)&a1[v31];
          v33 = v32 + 1;
          if (v32 == -1 || v33 > *(_QWORD *)&a1[*v3])
            break;
          v34 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v32);
          *(_QWORD *)&a1[v31] = v33;
          v30 |= (unint64_t)(v34 & 0x7F) << v28;
          if ((v34 & 0x80) == 0)
            goto LABEL_52;
          v28 += 7;
          v13 = v29++ >= 9;
          if (v13)
          {
            v30 = 0;
            v35 = a1[*v4];
            goto LABEL_54;
          }
        }
        a1[*v4] = 1;
LABEL_52:
        v35 = a1[*v4];
        if (a1[*v4])
          v30 = 0;
LABEL_54:
        v36 = v30 & 7;
        if (v35 || v36 == 4)
          break;
        if ((v30 >> 3) == 2)
        {
          if (v36 == 2 && PBReaderPlaceMark() && GEOPDMapsIdentifierIsValid(a1))
          {
            PBReaderRecallMark();
            continue;
          }
LABEL_69:
          PBReaderRecallMark();
LABEL_70:
          PBReaderRecallMark();
          return 0;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_69;
      }
      v38 = a1[*v4];
      PBReaderRecallMark();
      if (v38)
        goto LABEL_70;
      PBReaderRecallMark();
LABEL_67:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v39 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v39;
}

BOOL GEOPDSearchSectionListIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  BOOL v13;
  int v14;
  int v15;
  char v17;
  unsigned int v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  int v24;
  int v25;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  int v31;
  BOOL v32;
  char v33;
  unsigned int v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  int v40;
  int v41;
  char v43;
  unsigned int v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  int v50;
  int v51;
  int v53;
  unsigned int v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  int v58;
  unsigned int v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  int v63;
  unsigned int v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  int v68;
  int v69;
  _BOOL8 v70;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] >= *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
LABEL_134:
    v70 = a1[*v4] == 0;
    PBReaderRecallMark();
    return v70;
  }
  v5 = (int *)MEMORY[0x1E0D82BB8];
  while (1)
  {
    if (a1[*v4])
      goto LABEL_134;
    v6 = 0;
    v7 = 0;
    v8 = 0;
    while (1)
    {
      v9 = *v2;
      v10 = *(_QWORD *)&a1[v9];
      v11 = v10 + 1;
      if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
        break;
      v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
      *(_QWORD *)&a1[v9] = v11;
      v8 |= (unint64_t)(v12 & 0x7F) << v6;
      if ((v12 & 0x80) == 0)
        goto LABEL_12;
      v6 += 7;
      v13 = v7++ >= 9;
      if (v13)
      {
        v8 = 0;
        v14 = a1[*v4];
        goto LABEL_14;
      }
    }
    a1[*v4] = 1;
LABEL_12:
    v14 = a1[*v4];
    if (a1[*v4])
      v8 = 0;
LABEL_14:
    v15 = v8 & 7;
    if (v14 || v15 == 4)
      goto LABEL_134;
    if ((v8 >> 3) != 1)
    {
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        goto LABEL_137;
      goto LABEL_133;
    }
    if (v15 != 2 || !PBReaderPlaceMark())
      goto LABEL_137;
    objc_msgSend(a1, "position", 0, 0);
    objc_msgSend(a1, "length");
LABEL_22:
    if (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3] && !a1[*v4])
    {
      v17 = 0;
      v18 = 0;
      v19 = 0;
      while (1)
      {
        v20 = *v2;
        v21 = *(_QWORD *)&a1[v20];
        v22 = v21 + 1;
        if (v21 == -1 || v22 > *(_QWORD *)&a1[*v3])
          break;
        v23 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v21);
        *(_QWORD *)&a1[v20] = v22;
        v19 |= (unint64_t)(v23 & 0x7F) << v17;
        if ((v23 & 0x80) == 0)
          goto LABEL_32;
        v17 += 7;
        v13 = v18++ >= 9;
        if (v13)
        {
          v19 = 0;
          v24 = a1[*v4];
          goto LABEL_34;
        }
      }
      a1[*v4] = 1;
LABEL_32:
      v24 = a1[*v4];
      if (a1[*v4])
        v19 = 0;
LABEL_34:
      v25 = v19 & 7;
      if (!v24 && v25 != 4)
        break;
    }
    v69 = a1[*v4];
    PBReaderRecallMark();
    if (v69)
      goto LABEL_137;
    PBReaderRecallMark();
LABEL_133:
    if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
      goto LABEL_134;
  }
  switch((v19 >> 3))
  {
    case 1u:
      if (v25 != 2)
        goto LABEL_136;
      goto LABEL_40;
    case 2u:
      if ((v19 & 7) != 0)
        goto LABEL_136;
      v27 = 0;
      while (1)
      {
        v28 = *v2;
        v29 = *(_QWORD *)&a1[v28];
        v30 = v29 + 1;
        if (v29 == -1 || v30 > *(_QWORD *)&a1[*v3])
          goto LABEL_128;
        v31 = *(char *)(*(_QWORD *)&a1[*v5] + v29);
        *(_QWORD *)&a1[v28] = v30;
        if (v31 < 0)
        {
          v32 = v27++ > 8;
          if (!v32)
            continue;
        }
        goto LABEL_22;
      }
    case 3u:
      if (v25 != 2 || !PBReaderPlaceMark())
        goto LABEL_136;
      objc_msgSend(a1, "position");
      objc_msgSend(a1, "length");
      while (2)
      {
        while (2)
        {
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3] || a1[*v4])
            goto LABEL_102;
          v33 = 0;
          v34 = 0;
          v35 = 0;
          while (1)
          {
            v36 = *v2;
            v37 = *(_QWORD *)&a1[v36];
            v38 = v37 + 1;
            if (v37 == -1 || v38 > *(_QWORD *)&a1[*v3])
              break;
            v39 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v37);
            *(_QWORD *)&a1[v36] = v38;
            v35 |= (unint64_t)(v39 & 0x7F) << v33;
            if ((v39 & 0x80) == 0)
              goto LABEL_63;
            v33 += 7;
            v13 = v34++ >= 9;
            if (v13)
            {
              v35 = 0;
              v40 = a1[*v4];
              goto LABEL_65;
            }
          }
          a1[*v4] = 1;
LABEL_63:
          v40 = a1[*v4];
          if (a1[*v4])
            v35 = 0;
LABEL_65:
          v41 = v35 & 7;
          if (v40 || v41 == 4)
            goto LABEL_102;
          if ((v35 >> 3) != 1)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0)
              goto LABEL_135;
            continue;
          }
          break;
        }
        if (v41 == 2 && PBReaderPlaceMark() && GEOPDMapsIdentifierIsValid(a1))
        {
          PBReaderRecallMark();
          continue;
        }
        goto LABEL_135;
      }
    case 4u:
      if (v25 != 2 || !PBReaderPlaceMark())
        goto LABEL_136;
      objc_msgSend(a1, "position");
      objc_msgSend(a1, "length");
      while (2)
      {
        while (2)
        {
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3] || a1[*v4])
            goto LABEL_102;
          v43 = 0;
          v44 = 0;
          v45 = 0;
          while (1)
          {
            v46 = *v2;
            v47 = *(_QWORD *)&a1[v46];
            v48 = v47 + 1;
            if (v47 == -1 || v48 > *(_QWORD *)&a1[*v3])
              break;
            v49 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v47);
            *(_QWORD *)&a1[v46] = v48;
            v45 |= (unint64_t)(v49 & 0x7F) << v43;
            if ((v49 & 0x80) == 0)
              goto LABEL_89;
            v43 += 7;
            v13 = v44++ >= 9;
            if (v13)
            {
              v45 = 0;
              v50 = a1[*v4];
              goto LABEL_91;
            }
          }
          a1[*v4] = 1;
LABEL_89:
          v50 = a1[*v4];
          if (a1[*v4])
            v45 = 0;
LABEL_91:
          v51 = v45 & 7;
          if (v50 || v51 == 4)
          {
LABEL_102:
            v53 = a1[*v4];
            PBReaderRecallMark();
            if (v53)
              goto LABEL_136;
            PBReaderRecallMark();
            goto LABEL_22;
          }
          if ((v45 >> 3) != 1)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0)
              goto LABEL_135;
            continue;
          }
          break;
        }
        if (v51 == 2 && PBReaderPlaceMark() && GEOPDMapsIdentifierIsValid(a1))
        {
          PBReaderRecallMark();
          continue;
        }
        break;
      }
LABEL_135:
      PBReaderRecallMark();
LABEL_136:
      PBReaderRecallMark();
LABEL_137:
      PBReaderRecallMark();
      return 0;
    case 5u:
      if ((v19 & 7) != 0)
        goto LABEL_136;
      v54 = 0;
      while (1)
      {
        v55 = *v2;
        v56 = *(_QWORD *)&a1[v55];
        v57 = v56 + 1;
        if (v56 == -1 || v57 > *(_QWORD *)&a1[*v3])
          goto LABEL_128;
        v58 = *(char *)(*(_QWORD *)&a1[*v5] + v56);
        *(_QWORD *)&a1[v55] = v57;
        if (v58 < 0)
        {
          v32 = v54++ > 8;
          if (!v32)
            continue;
        }
        goto LABEL_22;
      }
    case 6u:
      if ((v19 & 7) != 0)
        goto LABEL_136;
      v59 = 0;
      while (1)
      {
        v60 = *v2;
        v61 = *(_QWORD *)&a1[v60];
        v62 = v61 + 1;
        if (v61 == -1 || v62 > *(_QWORD *)&a1[*v3])
          goto LABEL_128;
        v63 = *(char *)(*(_QWORD *)&a1[*v5] + v61);
        *(_QWORD *)&a1[v60] = v62;
        if (v63 < 0)
        {
          v32 = v59++ > 8;
          if (!v32)
            continue;
        }
        goto LABEL_22;
      }
    case 7u:
      if ((v19 & 7) != 0)
        goto LABEL_136;
      v64 = 0;
      while (1)
      {
        v65 = *v2;
        v66 = *(_QWORD *)&a1[v65];
        v67 = v66 + 1;
        if (v66 == -1 || v67 > *(_QWORD *)&a1[*v3])
          break;
        v68 = *(char *)(*(_QWORD *)&a1[*v5] + v66);
        *(_QWORD *)&a1[v65] = v67;
        if (v68 < 0)
        {
          v32 = v64++ > 8;
          if (!v32)
            continue;
        }
        goto LABEL_22;
      }
LABEL_128:
      a1[*v4] = 1;
      goto LABEL_22;
    default:
LABEL_40:
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        goto LABEL_136;
      goto LABEL_22;
  }
}

void sub_1892A95EC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDRefinementSessionStateIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v2 = (*(_BYTE *)(a1 + 52) & 0xE) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return v2;
}

void sub_1892A9C3C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892AA038(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDRelatedCollectionSectionReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  GEOPDMapsIdentifier *v18;
  id v19;
  void *v20;
  _BOOL8 v21;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 2)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_29;
          v18 = objc_alloc_init(GEOPDMapsIdentifier);
          if (!GEOPDMapsIdentifierReadAllFrom((uint64_t)v18, v3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          -[GEOPDRelatedCollectionSection addCollectionId:](a1, v18);

        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v19 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v20 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v19;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_29;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v21 = v3[*v6] == 0;
  }
  else
  {
LABEL_29:
    v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_1892AAA74(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892AB158(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDRelatedEntitySectionReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  int *v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  BOOL v28;
  int v29;
  unint64_t v31;
  BOOL v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  uint64_t v37;
  void *v38;
  id v39;
  void *v40;
  int v41;
  char v42;
  unsigned int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  char v48;
  char v49;
  unsigned int v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  GEOPDRelatedCollectionSection *v55;
  char v56;
  uint64_t v57;
  char v58;
  int v59;
  int v60;
  char v61;
  void *v62;
  int v64;
  int *v65;
  char v66;
  char v67;
  char v68;
  char v69;
  char v70;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = ((*(unsigned __int8 *)(a1 + 60) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 4) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 2) & 1);
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v12;
        v13 = v7;
        goto LABEL_8;
      case -3:
        v9 = 1;
        goto LABEL_7;
      case -2:
        v13 = v7;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 != 0;
        v66 = v16 & ~(_BYTE)v11 | v8;
        v67 = v9;
        v68 = v16 | v11 | v66;
        if ((((v16 | v11) | v9) & 1) != 0)
          v17 = 0;
        else
          v17 = a3;
        v69 = (v17 == 0) | v16 | v11;
        v70 = v16 | v11;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v7;
        v14 = v8;
LABEL_8:
        v15 = v11;
LABEL_10:
        ++v10;
        v7 = v13;
        v8 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v19))
      goto LABEL_88;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0)
        goto LABEL_25;
      v21 += 7;
      v28 = v22++ >= 9;
      if (v28)
      {
        v23 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_25:
    v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_27:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_88:
      v64 = 1;
      goto LABEL_89;
    }
    v31 = v23 >> 3;
    v32 = v70;
    if ((v69 & 1) == 0)
    {
      v33 = v17;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if (!v32)
          goto LABEL_70;
        if ((*(_BYTE *)(a1 + 60) & 8) == 0)
        {
          PBReaderReadString();
          v37 = objc_claimAutoreleasedReturnValue();
          v38 = *(void **)(a1 + 24);
          *(_QWORD *)(a1 + 24) = v37;
          goto LABEL_69;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_109;
        v58 = 16 * *(_BYTE *)(a1 + 60);
        goto LABEL_85;
      case 2:
        if ((v67 & 1) == 0)
          goto LABEL_70;
        v42 = 0;
        v43 = 0;
        v44 = 0;
        *(_BYTE *)(a1 + 60) |= 1u;
        while (2)
        {
          v45 = *v18;
          v46 = *(_QWORD *)(v3 + v45);
          v47 = v46 + 1;
          if (v46 == -1 || v47 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v19) = 1;
          }
          else
          {
            v48 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v46);
            *(_QWORD *)(v3 + v45) = v47;
            v44 |= (unint64_t)(v48 & 0x7F) << v42;
            if (v48 < 0)
            {
              v42 += 7;
              v28 = v43++ >= 9;
              if (v28)
              {
                LODWORD(v44) = 0;
                goto LABEL_75;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v19))
          LODWORD(v44) = 0;
LABEL_75:
        v57 = 52;
        goto LABEL_80;
      case 3:
        if ((v67 & 1) == 0)
          goto LABEL_70;
        v49 = 0;
        v50 = 0;
        v44 = 0;
        *(_BYTE *)(a1 + 60) |= 2u;
        while (2)
        {
          v51 = *v18;
          v52 = *(_QWORD *)(v3 + v51);
          v53 = v52 + 1;
          if (v52 == -1 || v53 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v19) = 1;
          }
          else
          {
            v54 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v52);
            *(_QWORD *)(v3 + v51) = v53;
            v44 |= (unint64_t)(v54 & 0x7F) << v49;
            if (v54 < 0)
            {
              v49 += 7;
              v28 = v50++ >= 9;
              if (v28)
              {
                LODWORD(v44) = 0;
                goto LABEL_79;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v19))
          LODWORD(v44) = 0;
LABEL_79:
        v57 = 56;
LABEL_80:
        *(_DWORD *)(a1 + v57) = v44;
        goto LABEL_87;
      case 4:
        if (!v32)
          goto LABEL_70;
        if ((*(_BYTE *)(a1 + 60) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_109;
          v58 = 8 * *(_BYTE *)(a1 + 60);
LABEL_85:
          v10 += v58 >> 7;
          goto LABEL_86;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_109;
        v55 = objc_alloc_init(GEOPDRelatedCollectionSection);
        if (GEOPDRelatedCollectionSectionReadAllFrom((uint64_t)v55, (void *)v3))
        {
          PBReaderRecallMark();
          v38 = *(void **)(a1 + 32);
          *(_QWORD *)(a1 + 32) = v55;
LABEL_69:

          --v10;
LABEL_86:
          v19 = (int *)MEMORY[0x1E0D82BC8];
          goto LABEL_87;
        }

LABEL_109:
        v64 = 0;
        v65 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
        v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_90:
        if ((v66 & 1) != 0)
LABEL_91:
          *(_BYTE *)(a1 + v65[1023]) |= 4u;
        if (v70 & 1 | ((v64 & 1) == 0))
        {
          *(_BYTE *)(a1 + v65[1023]) |= 8u;
          *(_BYTE *)(a1 + v65[1023]) |= 0x10u;
          goto LABEL_102;
        }
        if (v17)
        {
          while (2)
          {
            while (1)
            {
              v60 = *v17++;
              v59 = v60;
              if (v60 == 1)
                break;
              if (v59 == 4)
              {
                v61 = 16;
                goto LABEL_101;
              }
              if (!v59)
                goto LABEL_102;
            }
            v61 = 8;
LABEL_101:
            *(_BYTE *)(a1 + v65[1023]) |= v61;
            continue;
          }
        }
LABEL_102:
        if (v64)
          v3 = *(_BYTE *)(v3 + *v19) == 0;
        else
          v3 = 0;
        if ((v70 & 1) != 0)
        {
          v62 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      default:
        if ((v66 & 1) == 0 || (*(_BYTE *)(a1 + 60) & 4) != 0)
        {
LABEL_70:
          v56 = PBReaderSkipValueWithTag();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if ((v56 & 1) == 0)
          {
            v64 = 0;
LABEL_89:
            v65 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
            goto LABEL_90;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v39 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v40 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v39;

          }
          v41 = PBUnknownFieldAdd();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if (!v41)
          {
            v64 = 0;
            v65 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
            goto LABEL_91;
          }
        }
LABEL_87:
        if (!(v68 & 1 | (v10 != 0)))
          goto LABEL_88;
        continue;
    }
  }
}

void sub_1892AB96C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892ABD70(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDRelatedEntitySectionReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDRelatedEntitySectionReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDRelatedEntitySectionReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDRelatedEntitySectionReadAllFrom_initialTag;
  Specified = GEOPDRelatedEntitySectionReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_1892AC410(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892AC5E8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDRelatedEntitySectionIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v2 = (*(_BYTE *)(a1 + 60) & 0x38) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return v2;
}

void sub_1892AC830(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892ACBBC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDRelatedSearchSuggestionReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  char v15;
  unsigned __int8 v16;
  char v17;
  int *v18;
  int *v19;
  int *v20;
  int *v21;
  char v22;
  unsigned int v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  int v30;
  unint64_t v32;
  BOOL v33;
  int *v34;
  int v35;
  int v36;
  BOOL v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  id v41;
  void *v42;
  char v43;
  int v44;
  char v45;
  void *v46;
  int v48;
  char v49;
  char v50;
  char v51;
  BOOL v52;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 52);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 48));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int8 *)(a1 + 60) >> 3) & 1)
      + (*(_BYTE *)(a1 + 60) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 1) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 2) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v11;
        v12 = v7;
        goto LABEL_8;
      case -3:
        v9 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v11 > 1;
        v15 = v14 & ~(_BYTE)v7;
        v16 = v14 | v7;
        v49 = v15 | v8;
        v17 = v16 | v15 | v8;
        if (((v16 | v9) & 1) != 0)
          v18 = 0;
        else
          v18 = a3;
        v52 = v16;
        v50 = v17;
        v51 = (v18 == 0) | v16;
        v19 = (int *)MEMORY[0x1E0D82BF0];
        v20 = (int *)MEMORY[0x1E0D82BC8];
        v21 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_7:
        v12 = v7;
        v13 = v8;
LABEL_8:
        ++v10;
        v7 = v12;
        v8 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v19) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v20))
      goto LABEL_65;
    v22 = 0;
    v23 = 0;
    v24 = 0;
    while (1)
    {
      v25 = *v19;
      v26 = *(_QWORD *)(v3 + v25);
      v27 = v26 + 1;
      if (v26 == -1 || v27 > *(_QWORD *)(v3 + *v6))
        break;
      v28 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v26);
      *(_QWORD *)(v3 + v25) = v27;
      v24 |= (unint64_t)(v28 & 0x7F) << v22;
      if ((v28 & 0x80) == 0)
        goto LABEL_23;
      v22 += 7;
      if (v23++ >= 9)
      {
        v24 = 0;
        v30 = *(unsigned __int8 *)(v3 + *v20);
        goto LABEL_25;
      }
    }
    *(_BYTE *)(v3 + *v20) = 1;
LABEL_23:
    v30 = *(unsigned __int8 *)(v3 + *v20);
    if (*(_BYTE *)(v3 + *v20))
      v24 = 0;
LABEL_25:
    if (v30 || (v24 & 7) == 4)
    {
LABEL_65:
      v48 = 1;
      goto LABEL_66;
    }
    v32 = v24 >> 3;
    v33 = v52;
    if ((v51 & 1) == 0)
    {
      v34 = v18;
      do
      {
        v36 = *v34++;
        v35 = v36;
        v33 = v36 != 0;
        if (v36)
          v37 = v35 == (_DWORD)v32;
        else
          v37 = 1;
      }
      while (!v37);
    }
    if ((_DWORD)v32 == 3)
    {
      if (!v33)
        goto LABEL_55;
      if ((*(_BYTE *)(a1 + 60) & 4) != 0)
      {
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_81;
        v43 = 32 * *(_BYTE *)(a1 + 60);
        goto LABEL_63;
      }
      PBReaderReadString();
      v38 = objc_claimAutoreleasedReturnValue();
      v39 = 32;
      goto LABEL_48;
    }
    if ((_DWORD)v32 == 2)
      break;
    if ((_DWORD)v32 == 1)
    {
      if (!v33)
        goto LABEL_55;
      if ((*(_BYTE *)(a1 + 60) & 2) != 0)
      {
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_81;
        v43 = *(_BYTE *)(a1 + 60) << 6;
        goto LABEL_63;
      }
      PBReaderReadString();
      v38 = objc_claimAutoreleasedReturnValue();
      v39 = 24;
      goto LABEL_48;
    }
    if ((v49 & 1) == 0 || (*(_BYTE *)(a1 + 60) & 1) != 0)
    {
LABEL_55:
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        goto LABEL_81;
      goto LABEL_64;
    }
    if (!*(_QWORD *)(a1 + 16))
    {
      v41 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
      v42 = *(void **)(a1 + 16);
      *(_QWORD *)(a1 + 16) = v41;

    }
    if (!PBUnknownFieldAdd())
    {
      v48 = 0;
      v20 = (int *)MEMORY[0x1E0D82BC8];
      goto LABEL_67;
    }
LABEL_64:
    v20 = (int *)MEMORY[0x1E0D82BC8];
    if (!(v50 & 1 | (v10 != 0)))
      goto LABEL_65;
  }
  if (!v33)
    goto LABEL_55;
  if ((*(_BYTE *)(a1 + 60) & 8) == 0)
  {
    PBReaderReadData();
    v38 = objc_claimAutoreleasedReturnValue();
    v39 = 40;
LABEL_48:
    v40 = *(void **)(a1 + v39);
    *(_QWORD *)(a1 + v39) = v38;

    --v10;
    goto LABEL_64;
  }
  if ((PBReaderSkipValueWithTag() & 1) != 0)
  {
    v43 = 16 * *(_BYTE *)(a1 + 60);
LABEL_63:
    v10 += v43 >> 7;
    goto LABEL_64;
  }
LABEL_81:
  v48 = 0;
  v20 = (int *)MEMORY[0x1E0D82BC8];
LABEL_66:
  if ((v49 & 1) == 0)
    goto LABEL_68;
LABEL_67:
  *(_BYTE *)(a1 + 60) |= 1u;
LABEL_68:
  if (v52 || (v48 & 1) == 0)
  {
    *(_BYTE *)(a1 + 60) |= 2u;
    *(_BYTE *)(a1 + 60) |= 8u;
    *(_BYTE *)(a1 + 60) |= 4u;
  }
  else if (v18)
  {
    while (1)
    {
      v44 = *v18++;
      v45 = 2;
      switch(v44)
      {
        case 0:
          goto LABEL_75;
        case 1:
          goto LABEL_74;
        case 2:
          v45 = 8;
          goto LABEL_74;
        case 3:
          v45 = 4;
LABEL_74:
          *(_BYTE *)(a1 + 60) |= v45;
          break;
        default:
          continue;
      }
    }
  }
LABEL_75:
  if (v48)
    v3 = *(_BYTE *)(v3 + *v20) == 0;
  else
    v3 = 0;
  if (v52)
  {
    v46 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_1892AD248(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892AD3A0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892AD798(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDRelatedSearchSuggestionReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 52))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDRelatedSearchSuggestionReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 52) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDRelatedSearchSuggestionReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDRelatedSearchSuggestionReadAllFrom_initialTag;
  Specified = GEOPDRelatedSearchSuggestionReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_1892ADB70(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892ADD1C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDRelatedSearchSuggestionIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v2 = (*(_BYTE *)(a1 + 60) & 0x1E) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return v2;
}

void sub_1892ADF20(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892AE3D8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDResultRefinementReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  char v17;
  unsigned __int8 v18;
  int *v19;
  int *v20;
  int *v21;
  int *v22;
  char v23;
  unsigned int v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  BOOL v30;
  int v31;
  unint64_t v33;
  BOOL v34;
  int *v35;
  int v36;
  int v37;
  BOOL v38;
  char v39;
  unsigned int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  id v46;
  void *v47;
  int v48;
  GEOPDResultRefinementToggle *v49;
  uint64_t v50;
  void *v51;
  char v52;
  __int16 v53;
  int v54;
  __int16 v55;
  void *v56;
  int v58;
  int *v59;
  char v60;
  char v61;
  char v62;
  BOOL v63;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 76);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 72));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 88)), (uint16x4_t)0xFFFAFFFDFFF9FFFBLL), (int8x8_t)0x1000100010001))+ ((*(_WORD *)(a1 + 88) >> 2) & 1)+ ((*(_WORD *)(a1 + 88) >> 4) & 1)+ ((*(_WORD *)(a1 + 88) >> 1) & 1));
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 > 3;
        v17 = v16 & ~(_BYTE)v11 | v9;
        v18 = v16 | v11;
        v60 = v17;
        v61 = v18 | v17;
        if (((v18 | v8) & 1) != 0)
          v19 = 0;
        else
          v19 = a3;
        v62 = (v19 == 0) | v18;
        v63 = v18;
        v20 = (int *)MEMORY[0x1E0D82BF0];
        v21 = (int *)MEMORY[0x1E0D82BC8];
        v22 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v7;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v20) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v21))
      goto LABEL_105;
    v23 = 0;
    v24 = 0;
    v25 = 0;
    while (1)
    {
      v26 = *v20;
      v27 = *(_QWORD *)(v3 + v26);
      v28 = v27 + 1;
      if (v27 == -1 || v28 > *(_QWORD *)(v3 + *v6))
        break;
      v29 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v27);
      *(_QWORD *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0)
        goto LABEL_25;
      v23 += 7;
      v30 = v24++ >= 9;
      if (v30)
      {
        v25 = 0;
        v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v21) = 1;
LABEL_25:
    v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(_BYTE *)(v3 + *v21))
      v25 = 0;
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_105:
      v58 = 1;
      goto LABEL_106;
    }
    v33 = v25 >> 3;
    v34 = v63;
    if ((v62 & 1) == 0)
    {
      v35 = v19;
      do
      {
        v37 = *v35++;
        v36 = v37;
        v34 = v37 != 0;
        if (v37)
          v38 = v36 == (_DWORD)v33;
        else
          v38 = 1;
      }
      while (!v38);
    }
    switch((int)v33)
    {
      case 1:
        if ((v8 & 1) == 0)
          goto LABEL_84;
        v39 = 0;
        v40 = 0;
        v41 = 0;
        *(_WORD *)(a1 + 88) |= 1u;
        while (1)
        {
          v42 = *v20;
          v43 = *(_QWORD *)(v3 + v42);
          v44 = v43 + 1;
          if (v43 == -1 || v44 > *(_QWORD *)(v3 + *v6))
            break;
          v45 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v43);
          *(_QWORD *)(v3 + v42) = v44;
          v41 |= (unint64_t)(v45 & 0x7F) << v39;
          if ((v45 & 0x80) == 0)
            goto LABEL_87;
          v39 += 7;
          v30 = v40++ >= 9;
          if (v30)
          {
            LODWORD(v41) = 0;
            goto LABEL_89;
          }
        }
        *(_BYTE *)(v3 + *v21) = 1;
LABEL_87:
        if (*(_BYTE *)(v3 + *v21))
          LODWORD(v41) = 0;
LABEL_89:
        *(_DWORD *)(a1 + 84) = v41;
        goto LABEL_104;
      case 2:
        if (!v34)
          goto LABEL_84;
        if ((*(_WORD *)(a1 + 88) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_126;
          v53 = *(_WORD *)(a1 + 88) << 8;
          goto LABEL_102;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_126;
        v49 = objc_alloc_init(GEOPDResultRefinementToggle);
        if (!GEOPDResultRefinementToggleReadAllFrom((uint64_t)v49, (void *)v3, v10 & 1))
          goto LABEL_125;
        PBReaderRecallMark();
        v50 = 64;
        goto LABEL_83;
      case 3:
        if (!v34)
          goto LABEL_84;
        if ((*(_WORD *)(a1 + 88) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_126;
          v53 = *(_WORD *)(a1 + 88) << 10;
          goto LABEL_102;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_126;
        v49 = objc_alloc_init(GEOPDResultRefinementRange);
        if (!GEOPDResultRefinementRangeReadAllFrom((uint64_t)v49, (void *)v3, v10 & 1))
          goto LABEL_125;
        PBReaderRecallMark();
        v50 = 48;
        goto LABEL_83;
      case 4:
        if (!v34)
          goto LABEL_84;
        if ((*(_WORD *)(a1 + 88) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_126;
          v53 = *(_WORD *)(a1 + 88) << 12;
          goto LABEL_102;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_126;
        v49 = objc_alloc_init(GEOPDResultRefinementMultiSelect);
        if (!GEOPDResultRefinementMultiSelectReadAllFrom((uint64_t)v49, (void *)v3, v10 & 1))
          goto LABEL_125;
        PBReaderRecallMark();
        v50 = 32;
        goto LABEL_83;
      case 5:
        if (!v34)
          goto LABEL_84;
        if ((*(_WORD *)(a1 + 88) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_126;
          v53 = *(_WORD *)(a1 + 88) << 9;
          goto LABEL_102;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_126;
        v49 = objc_alloc_init(GEOPDResultRefinementSort);
        if (!GEOPDResultRefinementSortReadAllFrom((uint64_t)v49, (void *)v3, v10 & 1))
          goto LABEL_125;
        PBReaderRecallMark();
        v50 = 56;
        goto LABEL_83;
      case 6:
        if (!v34)
          goto LABEL_84;
        if ((*(_WORD *)(a1 + 88) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_126;
          v53 = *(_WORD *)(a1 + 88) << 13;
          goto LABEL_102;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_126;
        v49 = objc_alloc_init(GEOPDResultRefinementGuidesHome);
        if (!GEOPDResultRefinementGuidesHomeReadAllFrom((uint64_t)v49, (void *)v3, v10 & 1))
          goto LABEL_125;
        PBReaderRecallMark();
        v50 = 24;
        goto LABEL_83;
      case 7:
        if (!v34)
          goto LABEL_84;
        if ((*(_WORD *)(a1 + 88) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_126;
          v53 = *(_WORD *)(a1 + 88) << 11;
LABEL_102:
          v7 += v53 >> 15;
LABEL_103:
          v21 = (int *)MEMORY[0x1E0D82BC8];
          v22 = (int *)MEMORY[0x1E0D82BB8];
          goto LABEL_104;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_126;
        v49 = objc_alloc_init(GEOPDResultRefinementOpenOptions);
        if (GEOPDResultRefinementOpenOptionsReadAllFrom((uint64_t)v49, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          v50 = 40;
LABEL_83:
          v51 = *(void **)(a1 + v50);
          *(_QWORD *)(a1 + v50) = v49;

          --v7;
          goto LABEL_103;
        }
LABEL_125:

LABEL_126:
        v58 = 0;
        v59 = &OBJC_IVAR___GEOPDRelatedEntitySection__reader;
        v21 = (int *)MEMORY[0x1E0D82BC8];
LABEL_107:
        if ((v60 & 1) != 0)
LABEL_108:
          *(_WORD *)(a1 + v59[14]) |= 2u;
        if (v63 || (v58 & 1) == 0)
        {
          *(_WORD *)(a1 + v59[14]) |= 0x80u;
          *(_WORD *)(a1 + v59[14]) |= 0x20u;
          *(_WORD *)(a1 + v59[14]) |= 8u;
          *(_WORD *)(a1 + v59[14]) |= 0x40u;
          *(_WORD *)(a1 + v59[14]) |= 4u;
          *(_WORD *)(a1 + v59[14]) |= 0x10u;
        }
        else if (v19)
        {
          while (1)
          {
            v54 = *v19++;
            v55 = 128;
            switch(v54)
            {
              case 0:
                goto LABEL_119;
              case 2:
                goto LABEL_118;
              case 3:
                v55 = 32;
                goto LABEL_118;
              case 4:
                v55 = 8;
                goto LABEL_118;
              case 5:
                v55 = 64;
                goto LABEL_118;
              case 6:
                v55 = 4;
                goto LABEL_118;
              case 7:
                v55 = 16;
LABEL_118:
                *(_WORD *)(a1 + v59[14]) |= v55;
                break;
              default:
                continue;
            }
          }
        }
LABEL_119:
        if (v58)
          v3 = *(_BYTE *)(v3 + *v21) == 0;
        else
          v3 = 0;
        if (v63)
        {
          v56 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      default:
        if ((v60 & 1) == 0 || (*(_WORD *)(a1 + 88) & 2) != 0)
        {
LABEL_84:
          v52 = PBReaderSkipValueWithTag();
          v22 = (int *)MEMORY[0x1E0D82BB8];
          v21 = (int *)MEMORY[0x1E0D82BC8];
          if ((v52 & 1) == 0)
          {
            v58 = 0;
LABEL_106:
            v59 = &OBJC_IVAR___GEOPDRelatedEntitySection__reader;
            goto LABEL_107;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v46 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v47 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v46;

          }
          v48 = PBUnknownFieldAdd();
          v21 = (int *)MEMORY[0x1E0D82BC8];
          v22 = (int *)MEMORY[0x1E0D82BB8];
          if (!v48)
          {
            v58 = 0;
            v59 = &OBJC_IVAR___GEOPDRelatedEntitySection__reader;
            goto LABEL_108;
          }
        }
LABEL_104:
        if (!(v61 & 1 | (v7 != 0)))
          goto LABEL_105;
        continue;
    }
  }
}

void sub_1892AEE4C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892AEFA4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892AF0FC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892AF1B0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892AF718(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892AF7F0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDResultRefinementCallReadAllRecursiveWithoutSynchronized(uint64_t *a1)
{
  -[GEOPDResultRefinementToggle readAll:](a1[8], 1);
  -[GEOPDResultRefinementRange readAll:](a1[6], 1);
  -[GEOPDResultRefinementMultiSelect readAll:](a1[4], 1);
  -[GEOPDResultRefinementSort readAll:](a1[7], 1);
  -[GEOPDResultRefinementGuidesHome readAll:](a1[3], 1);
  -[GEOPDResultRefinementOpenOptions readAll:](a1[5], 1);
}

unint64_t GEOPDResultRefinementReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 76))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDResultRefinementReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 80));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 72) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 76) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDResultRefinementReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDResultRefinementReadAllFrom_initialTag;
  Specified = GEOPDResultRefinementReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDResultRefinementCallReadAllRecursiveWithoutSynchronized((uint64_t *)a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 80));
  return Specified;
}

void sub_1892B1AD0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDResultRefinementIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  BOOL v13;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  char v23;
  unsigned int v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  int v30;
  int v31;
  BOOL v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  int v37;
  char v38;
  unsigned int v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  uint64_t v45;
  int v46;
  int v47;
  BOOL v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  char v52;
  unsigned int v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  char v58;
  int v59;
  int v60;
  unint64_t v62;
  unsigned int v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  int v67;
  unsigned int v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  int v72;
  int v73;
  char v74;
  unsigned int v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  char v80;
  int v81;
  int v82;
  BOOL v83;
  char v84;
  unsigned int v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  char v90;
  int v91;
  int v92;
  unsigned int v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  int v98;
  unsigned int v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  int v103;
  unsigned int v104;
  uint64_t v105;
  uint64_t v106;
  unint64_t v107;
  int v108;
  unsigned int v109;
  uint64_t v110;
  uint64_t v111;
  unint64_t v112;
  int v113;
  unsigned int v114;
  uint64_t v115;
  uint64_t v116;
  unint64_t v117;
  int v118;
  unsigned int v119;
  uint64_t v120;
  uint64_t v121;
  unint64_t v122;
  int v123;
  unsigned int v124;
  uint64_t v125;
  uint64_t v126;
  unint64_t v127;
  int v128;
  int v129;
  char v130;
  unsigned int v131;
  unint64_t v132;
  uint64_t v133;
  uint64_t v134;
  unint64_t v135;
  char v136;
  int v137;
  int v138;
  BOOL v139;
  char v140;
  unsigned int v141;
  unint64_t v142;
  uint64_t v143;
  uint64_t v144;
  unint64_t v145;
  char v146;
  int v147;
  int v148;
  BOOL v149;
  unsigned int v150;
  uint64_t v151;
  uint64_t v152;
  unint64_t v153;
  int v154;
  unsigned int v155;
  uint64_t v156;
  uint64_t v157;
  unint64_t v158;
  int v159;
  int v160;
  char v161;
  unsigned int v162;
  unint64_t v163;
  uint64_t v164;
  uint64_t v165;
  unint64_t v166;
  char v167;
  int v168;
  int v169;
  BOOL v170;
  unint64_t v171;
  char v172;
  unsigned int v173;
  unint64_t v174;
  uint64_t v175;
  uint64_t v176;
  unint64_t v177;
  char v178;
  uint64_t v179;
  int v180;
  int v181;
  uint64_t v183;
  unint64_t v184;
  unint64_t v185;
  unsigned int v186;
  uint64_t v187;
  uint64_t v188;
  unint64_t v189;
  int v190;
  unsigned int v191;
  uint64_t v192;
  uint64_t v193;
  unint64_t v194;
  int v195;
  int v196;
  int v197;
  _BOOL8 v198;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] >= *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
    goto LABEL_426;
  v5 = (int *)MEMORY[0x1E0D82BB8];
  while (2)
  {
    if (a1[*v4])
      goto LABEL_426;
    v6 = 0;
    v7 = 0;
    v8 = 0;
    while (1)
    {
      v9 = *v2;
      v10 = *(_QWORD *)&a1[v9];
      v11 = v10 + 1;
      if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
        break;
      v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
      *(_QWORD *)&a1[v9] = v11;
      v8 |= (unint64_t)(v12 & 0x7F) << v6;
      if ((v12 & 0x80) == 0)
        goto LABEL_12;
      v6 += 7;
      v13 = v7++ >= 9;
      if (v13)
      {
        v8 = 0;
        v14 = a1[*v4];
        goto LABEL_14;
      }
    }
    a1[*v4] = 1;
LABEL_12:
    v14 = a1[*v4];
    if (a1[*v4])
      v8 = 0;
LABEL_14:
    v15 = v8 & 7;
    if (v14 || v15 == 4)
    {
LABEL_426:
      v198 = a1[*v4] == 0;
      PBReaderRecallMark();
      return v198;
    }
    switch((v8 >> 3))
    {
      case 1u:
        if ((v8 & 7) != 0)
          goto LABEL_429;
        v17 = 0;
        while (1)
        {
          v18 = *v2;
          v19 = *(_QWORD *)&a1[v18];
          v20 = v19 + 1;
          if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
            break;
          v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
          *(_QWORD *)&a1[v18] = v20;
          if (v21 < 0)
          {
            v22 = v17++ > 8;
            if (!v22)
              continue;
          }
          goto LABEL_423;
        }
        a1[*v4] = 1;
        goto LABEL_423;
      case 2u:
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDResultRefinementToggleIsValid(a1))
          goto LABEL_429;
        goto LABEL_422;
      case 3u:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_429;
        objc_msgSend(a1, "position", 0, 0);
        objc_msgSend(a1, "length");
LABEL_36:
        while (2)
        {
          while (2)
          {
            if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3] || a1[*v4])
              goto LABEL_421;
            v23 = 0;
            v24 = 0;
            v25 = 0;
            while (2)
            {
              v26 = *v2;
              v27 = *(_QWORD *)&a1[v26];
              v28 = v27 + 1;
              if (v27 == -1 || v28 > *(_QWORD *)&a1[*v3])
              {
                a1[*v4] = 1;
              }
              else
              {
                v29 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v27);
                *(_QWORD *)&a1[v26] = v28;
                v25 |= (unint64_t)(v29 & 0x7F) << v23;
                if (v29 < 0)
                {
                  v23 += 7;
                  v13 = v24++ >= 9;
                  if (v13)
                  {
                    v25 = 0;
                    v30 = a1[*v4];
                    goto LABEL_48;
                  }
                  continue;
                }
              }
              break;
            }
            v30 = a1[*v4];
            if (a1[*v4])
              v25 = 0;
LABEL_48:
            v31 = v25 & 7;
            if (v30)
              v32 = 1;
            else
              v32 = v31 == 4;
            if (v32)
              goto LABEL_421;
            switch((v25 >> 3))
            {
              case 1u:
                if ((v25 & 7) != 0)
                  goto LABEL_428;
                v33 = 0;
                do
                {
                  v34 = *v2;
                  v35 = *(_QWORD *)&a1[v34];
                  v36 = v35 + 1;
                  if (v35 == -1 || v36 > *(_QWORD *)&a1[*v3])
                  {
                    a1[*v4] = 1;
                    goto LABEL_36;
                  }
                  v37 = *(char *)(*(_QWORD *)&a1[*v5] + v35);
                  *(_QWORD *)&a1[v34] = v36;
                  if ((v37 & 0x80000000) == 0)
                    break;
                  v22 = v33++ > 8;
                }
                while (!v22);
                continue;
              case 2u:
                if (v31 != 2)
                  goto LABEL_428;
                goto LABEL_62;
              case 3u:
                if (v31 != 2 || !PBReaderPlaceMark())
                  goto LABEL_428;
                objc_msgSend(a1, "position");
                objc_msgSend(a1, "length");
                while (2)
                {
                  if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3] || a1[*v4])
                    goto LABEL_140;
                  v38 = 0;
                  v39 = 0;
                  v40 = 0;
                  while (2)
                  {
                    v41 = *v2;
                    v42 = *(_QWORD *)&a1[v41];
                    v43 = v42 + 1;
                    if (v42 == -1 || v43 > *(_QWORD *)&a1[*v3])
                    {
                      a1[*v4] = 1;
                    }
                    else
                    {
                      v44 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v42);
                      *(_QWORD *)&a1[v41] = v43;
                      v40 |= (unint64_t)(v44 & 0x7F) << v38;
                      if (v44 < 0)
                      {
                        v38 += 7;
                        v13 = v39++ >= 9;
                        if (v13)
                        {
                          v40 = 0;
                          v45 = *v4;
                          v46 = a1[v45];
                          goto LABEL_79;
                        }
                        continue;
                      }
                    }
                    break;
                  }
                  v45 = *v4;
                  v46 = a1[v45];
                  if (a1[v45])
                    v40 = 0;
LABEL_79:
                  v47 = v40 & 7;
                  if (v46)
                    v48 = 1;
                  else
                    v48 = v47 == 4;
                  if (!v48)
                  {
                    switch((v40 >> 3))
                    {
                      case 1u:
                      case 2u:
                        if (v47 != 2
                          || !PBReaderPlaceMark()
                          || !GEOPDResultRefinementRangeElementIsValid(a1))
                        {
                          goto LABEL_427;
                        }
                        PBReaderRecallMark();
                        break;
                      case 3u:
                      case 4u:
                      case 5u:
                        if (v47 != 1)
                          goto LABEL_427;
                        v49 = *v2;
                        v50 = *(_QWORD *)&a1[v49];
                        if (v50 <= 0xFFFFFFFFFFFFFFF7 && (v51 = v50 + 8, v51 <= *(_QWORD *)&a1[*v3]))
                          *(_QWORD *)&a1[v49] = v51;
                        else
                          a1[v45] = 1;
                        break;
                      default:
                        if ((PBReaderSkipValueWithTag() & 1) == 0)
                          goto LABEL_427;
                        continue;
                    }
                    continue;
                  }
                  goto LABEL_140;
                }
              case 4u:
                if (v31 != 2 || !PBReaderPlaceMark())
                  goto LABEL_428;
                objc_msgSend(a1, "position");
                objc_msgSend(a1, "length");
                break;
              default:
LABEL_62:
                if ((PBReaderSkipValueWithTag() & 1) == 0)
                  goto LABEL_428;
                continue;
            }
            break;
          }
LABEL_98:
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3] || a1[*v4])
            goto LABEL_140;
          v52 = 0;
          v53 = 0;
          v54 = 0;
          while (1)
          {
            v55 = *v2;
            v56 = *(_QWORD *)&a1[v55];
            v57 = v56 + 1;
            if (v56 == -1 || v57 > *(_QWORD *)&a1[*v3])
              break;
            v58 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v56);
            *(_QWORD *)&a1[v55] = v57;
            v54 |= (unint64_t)(v58 & 0x7F) << v52;
            if ((v58 & 0x80) == 0)
              goto LABEL_108;
            v52 += 7;
            v13 = v53++ >= 9;
            if (v13)
            {
              v54 = 0;
              v59 = a1[*v4];
              goto LABEL_110;
            }
          }
          a1[*v4] = 1;
LABEL_108:
          v59 = a1[*v4];
          if (a1[*v4])
            v54 = 0;
LABEL_110:
          v60 = v54 & 7;
          if (v59 || v60 == 4)
          {
LABEL_140:
            v73 = a1[*v4];
            PBReaderRecallMark();
            if (!v73)
            {
              PBReaderRecallMark();
              continue;
            }
            goto LABEL_428;
          }
          break;
        }
        v62 = v54 >> 3;
        if ((v54 >> 3) == 3)
        {
          if ((v54 & 7) != 0)
            goto LABEL_427;
          v63 = 0;
          while (1)
          {
            v64 = *v2;
            v65 = *(_QWORD *)&a1[v64];
            v66 = v65 + 1;
            if (v65 == -1 || v66 > *(_QWORD *)&a1[*v3])
              goto LABEL_137;
            v67 = *(char *)(*(_QWORD *)&a1[*v5] + v65);
            *(_QWORD *)&a1[v64] = v66;
            if (v67 < 0)
            {
              v22 = v63++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_98;
          }
        }
        if ((_DWORD)v62 == 2)
        {
          if ((v54 & 7) != 0)
            goto LABEL_427;
          v68 = 0;
          while (1)
          {
            v69 = *v2;
            v70 = *(_QWORD *)&a1[v69];
            v71 = v70 + 1;
            if (v70 == -1 || v71 > *(_QWORD *)&a1[*v3])
              break;
            v72 = *(char *)(*(_QWORD *)&a1[*v5] + v70);
            *(_QWORD *)&a1[v69] = v71;
            if (v72 < 0)
            {
              v22 = v68++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_98;
          }
LABEL_137:
          a1[*v4] = 1;
          goto LABEL_98;
        }
        if ((_DWORD)v62 != 1)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_427;
          goto LABEL_98;
        }
        if (v60 == 2 && PBReaderPlaceMark() && GEOPDResultRefinementRangeElementIsValid(a1))
        {
          PBReaderRecallMark();
          goto LABEL_98;
        }
LABEL_427:
        PBReaderRecallMark();
LABEL_428:
        PBReaderRecallMark();
LABEL_429:
        PBReaderRecallMark();
        return 0;
      case 4u:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_429;
        objc_msgSend(a1, "position", 0, 0);
        objc_msgSend(a1, "length");
LABEL_146:
        while (2)
        {
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3] || a1[*v4])
            goto LABEL_421;
          v74 = 0;
          v75 = 0;
          v76 = 0;
          while (2)
          {
            v77 = *v2;
            v78 = *(_QWORD *)&a1[v77];
            v79 = v78 + 1;
            if (v78 == -1 || v79 > *(_QWORD *)&a1[*v3])
            {
              a1[*v4] = 1;
            }
            else
            {
              v80 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v78);
              *(_QWORD *)&a1[v77] = v79;
              v76 |= (unint64_t)(v80 & 0x7F) << v74;
              if (v80 < 0)
              {
                v74 += 7;
                v13 = v75++ >= 9;
                if (v13)
                {
                  v76 = 0;
                  v81 = a1[*v4];
                  goto LABEL_158;
                }
                continue;
              }
            }
            break;
          }
          v81 = a1[*v4];
          if (a1[*v4])
            v76 = 0;
LABEL_158:
          v82 = v76 & 7;
          if (v81)
            v83 = 1;
          else
            v83 = v82 == 4;
          if (!v83)
          {
            switch((v76 >> 3))
            {
              case 1u:
                if (v82 == 2)
                  goto LABEL_257;
                goto LABEL_428;
              case 2u:
                if (v82 != 2 || !PBReaderPlaceMark())
                  goto LABEL_428;
                objc_msgSend(a1, "position");
                objc_msgSend(a1, "length");
LABEL_168:
                while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3] && !a1[*v4])
                {
                  v84 = 0;
                  v85 = 0;
                  v86 = 0;
                  while (1)
                  {
                    v87 = *v2;
                    v88 = *(_QWORD *)&a1[v87];
                    v89 = v88 + 1;
                    if (v88 == -1 || v89 > *(_QWORD *)&a1[*v3])
                      break;
                    v90 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v88);
                    *(_QWORD *)&a1[v87] = v89;
                    v86 |= (unint64_t)(v90 & 0x7F) << v84;
                    if ((v90 & 0x80) == 0)
                      goto LABEL_178;
                    v84 += 7;
                    v13 = v85++ >= 9;
                    if (v13)
                    {
                      v86 = 0;
                      v91 = a1[*v4];
                      goto LABEL_180;
                    }
                  }
                  a1[*v4] = 1;
LABEL_178:
                  v91 = a1[*v4];
                  if (a1[*v4])
                    v86 = 0;
LABEL_180:
                  v92 = v86 & 7;
                  if (v91 || v92 == 4)
                    break;
                  switch((v86 >> 3))
                  {
                    case 1u:
                      if (v92 == 2)
                        goto LABEL_186;
                      goto LABEL_427;
                    case 2u:
                      if ((v86 & 7) != 0)
                        goto LABEL_427;
                      v94 = 0;
                      while (1)
                      {
                        v95 = *v2;
                        v96 = *(_QWORD *)&a1[v95];
                        v97 = v96 + 1;
                        if (v96 == -1 || v97 > *(_QWORD *)&a1[*v3])
                          goto LABEL_228;
                        v98 = *(char *)(*(_QWORD *)&a1[*v5] + v96);
                        *(_QWORD *)&a1[v95] = v97;
                        if (v98 < 0)
                        {
                          v22 = v94++ > 8;
                          if (!v22)
                            continue;
                        }
                        goto LABEL_168;
                      }
                    case 3u:
                      if (v92 != 2 || !PBReaderPlaceMark() || !GEOStyleAttributesIsValid(a1))
                        goto LABEL_427;
                      goto LABEL_203;
                    case 4u:
                      if (v92 != 2 || !PBReaderPlaceMark() || !GEOPDResultRefinementMetadataIsValid(a1))
                        goto LABEL_427;
LABEL_203:
                      PBReaderRecallMark();
                      continue;
                    case 5u:
                      if ((v86 & 7) != 0)
                        goto LABEL_427;
                      v99 = 0;
                      while (1)
                      {
                        v100 = *v2;
                        v101 = *(_QWORD *)&a1[v100];
                        v102 = v101 + 1;
                        if (v101 == -1 || v102 > *(_QWORD *)&a1[*v3])
                          goto LABEL_228;
                        v103 = *(char *)(*(_QWORD *)&a1[*v5] + v101);
                        *(_QWORD *)&a1[v100] = v102;
                        if (v103 < 0)
                        {
                          v22 = v99++ > 8;
                          if (!v22)
                            continue;
                        }
                        goto LABEL_168;
                      }
                    case 6u:
                      if ((v86 & 7) != 0)
                        goto LABEL_427;
                      v104 = 0;
                      while (1)
                      {
                        v105 = *v2;
                        v106 = *(_QWORD *)&a1[v105];
                        v107 = v106 + 1;
                        if (v106 == -1 || v107 > *(_QWORD *)&a1[*v3])
                          goto LABEL_228;
                        v108 = *(char *)(*(_QWORD *)&a1[*v5] + v106);
                        *(_QWORD *)&a1[v105] = v107;
                        if (v108 < 0)
                        {
                          v22 = v104++ > 8;
                          if (!v22)
                            continue;
                        }
                        goto LABEL_168;
                      }
                    case 7u:
                      if ((v86 & 7) != 0)
                        goto LABEL_427;
                      v109 = 0;
                      do
                      {
                        v110 = *v2;
                        v111 = *(_QWORD *)&a1[v110];
                        v112 = v111 + 1;
                        if (v111 == -1 || v112 > *(_QWORD *)&a1[*v3])
                        {
LABEL_228:
                          a1[*v4] = 1;
                          goto LABEL_168;
                        }
                        v113 = *(char *)(*(_QWORD *)&a1[*v5] + v111);
                        *(_QWORD *)&a1[v110] = v112;
                        if ((v113 & 0x80000000) == 0)
                          break;
                        v22 = v109++ > 8;
                      }
                      while (!v22);
                      break;
                    default:
LABEL_186:
                      if ((PBReaderSkipValueWithTag() & 1) == 0)
                        goto LABEL_427;
                      continue;
                  }
                }
                v129 = a1[*v4];
                PBReaderRecallMark();
                if (!v129)
                {
                  PBReaderRecallMark();
                  continue;
                }
                goto LABEL_428;
              case 3u:
                if ((v76 & 7) != 0)
                  goto LABEL_428;
                v114 = 0;
                while (1)
                {
                  v115 = *v2;
                  v116 = *(_QWORD *)&a1[v115];
                  v117 = v116 + 1;
                  if (v116 == -1 || v117 > *(_QWORD *)&a1[*v3])
                    goto LABEL_253;
                  v118 = *(char *)(*(_QWORD *)&a1[*v5] + v116);
                  *(_QWORD *)&a1[v115] = v117;
                  if (v118 < 0)
                  {
                    v22 = v114++ > 8;
                    if (!v22)
                      continue;
                  }
                  goto LABEL_146;
                }
              case 4u:
                if ((v76 & 7) != 0)
                  goto LABEL_428;
                v119 = 0;
                while (1)
                {
                  v120 = *v2;
                  v121 = *(_QWORD *)&a1[v120];
                  v122 = v121 + 1;
                  if (v121 == -1 || v122 > *(_QWORD *)&a1[*v3])
                    goto LABEL_253;
                  v123 = *(char *)(*(_QWORD *)&a1[*v5] + v121);
                  *(_QWORD *)&a1[v120] = v122;
                  if (v123 < 0)
                  {
                    v22 = v119++ > 8;
                    if (!v22)
                      continue;
                  }
                  goto LABEL_146;
                }
              case 5u:
                if ((v76 & 7) != 0)
                  goto LABEL_428;
                v124 = 0;
                do
                {
                  v125 = *v2;
                  v126 = *(_QWORD *)&a1[v125];
                  v127 = v126 + 1;
                  if (v126 == -1 || v127 > *(_QWORD *)&a1[*v3])
                  {
LABEL_253:
                    a1[*v4] = 1;
                    goto LABEL_146;
                  }
                  v128 = *(char *)(*(_QWORD *)&a1[*v5] + v126);
                  *(_QWORD *)&a1[v125] = v127;
                  if ((v128 & 0x80000000) == 0)
                    break;
                  v22 = v124++ > 8;
                }
                while (!v22);
                break;
              case 6u:
                if (v82 == 2)
                  goto LABEL_257;
                goto LABEL_428;
              case 7u:
                if (v82 == 2)
                  goto LABEL_257;
                goto LABEL_428;
              default:
LABEL_257:
                if ((PBReaderSkipValueWithTag() & 1) == 0)
                  goto LABEL_428;
                continue;
            }
            continue;
          }
          goto LABEL_421;
        }
      case 5u:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_429;
        objc_msgSend(a1, "position", 0, 0);
        objc_msgSend(a1, "length");
LABEL_264:
        while (2)
        {
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3] || a1[*v4])
            goto LABEL_421;
          v130 = 0;
          v131 = 0;
          v132 = 0;
          while (2)
          {
            v133 = *v2;
            v134 = *(_QWORD *)&a1[v133];
            v135 = v134 + 1;
            if (v134 == -1 || v135 > *(_QWORD *)&a1[*v3])
            {
              a1[*v4] = 1;
            }
            else
            {
              v136 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v134);
              *(_QWORD *)&a1[v133] = v135;
              v132 |= (unint64_t)(v136 & 0x7F) << v130;
              if (v136 < 0)
              {
                v130 += 7;
                v13 = v131++ >= 9;
                if (v13)
                {
                  v132 = 0;
                  v137 = a1[*v4];
                  goto LABEL_276;
                }
                continue;
              }
            }
            break;
          }
          v137 = a1[*v4];
          if (a1[*v4])
            v132 = 0;
LABEL_276:
          v138 = v132 & 7;
          if (v137)
            v139 = 1;
          else
            v139 = v138 == 4;
          if (!v139)
          {
            switch((v132 >> 3))
            {
              case 1u:
                if (v138 == 2)
                  goto LABEL_282;
                goto LABEL_428;
              case 2u:
                if (v138 != 2 || !PBReaderPlaceMark())
                  goto LABEL_428;
                objc_msgSend(a1, "position");
                objc_msgSend(a1, "length");
                while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3] && !a1[*v4])
                {
                  v140 = 0;
                  v141 = 0;
                  v142 = 0;
                  while (1)
                  {
                    v143 = *v2;
                    v144 = *(_QWORD *)&a1[v143];
                    v145 = v144 + 1;
                    if (v144 == -1 || v145 > *(_QWORD *)&a1[*v3])
                      break;
                    v146 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v144);
                    *(_QWORD *)&a1[v143] = v145;
                    v142 |= (unint64_t)(v146 & 0x7F) << v140;
                    if ((v146 & 0x80) == 0)
                      goto LABEL_297;
                    v140 += 7;
                    v13 = v141++ >= 9;
                    if (v13)
                    {
                      v142 = 0;
                      v147 = a1[*v4];
                      goto LABEL_299;
                    }
                  }
                  a1[*v4] = 1;
LABEL_297:
                  v147 = a1[*v4];
                  if (a1[*v4])
                    v142 = 0;
LABEL_299:
                  v148 = v142 & 7;
                  if (v147)
                    v149 = 1;
                  else
                    v149 = v148 == 4;
                  if (!v149)
                  {
                    switch((v142 >> 3))
                    {
                      case 1u:
                        if (v148 == 2)
                          goto LABEL_315;
                        goto LABEL_427;
                      case 2u:
                        if (v148 != 2 || !PBReaderPlaceMark() || !GEOStyleAttributesIsValid(a1))
                          goto LABEL_427;
                        goto LABEL_313;
                      case 3u:
                        if (v148 != 2
                          || !PBReaderPlaceMark()
                          || !GEOPDResultRefinementMetadataIsValid(a1))
                        {
                          goto LABEL_427;
                        }
LABEL_313:
                        PBReaderRecallMark();
                        continue;
                      case 4u:
                        if (v148 == 2)
                          goto LABEL_315;
                        goto LABEL_427;
                      default:
LABEL_315:
                        if ((PBReaderSkipValueWithTag() & 1) == 0)
                          goto LABEL_427;
                        continue;
                    }
                  }
                  break;
                }
                v160 = a1[*v4];
                PBReaderRecallMark();
                if (!v160)
                {
                  PBReaderRecallMark();
                  continue;
                }
                goto LABEL_428;
              case 3u:
                if ((v132 & 7) != 0)
                  goto LABEL_428;
                v150 = 0;
                while (1)
                {
                  v151 = *v2;
                  v152 = *(_QWORD *)&a1[v151];
                  v153 = v152 + 1;
                  if (v152 == -1 || v153 > *(_QWORD *)&a1[*v3])
                    goto LABEL_333;
                  v154 = *(char *)(*(_QWORD *)&a1[*v5] + v152);
                  *(_QWORD *)&a1[v151] = v153;
                  if (v154 < 0)
                  {
                    v22 = v150++ > 8;
                    if (!v22)
                      continue;
                  }
                  goto LABEL_264;
                }
              case 4u:
                if ((v132 & 7) != 0)
                  goto LABEL_428;
                v155 = 0;
                do
                {
                  v156 = *v2;
                  v157 = *(_QWORD *)&a1[v156];
                  v158 = v157 + 1;
                  if (v157 == -1 || v158 > *(_QWORD *)&a1[*v3])
                  {
LABEL_333:
                    a1[*v4] = 1;
                    goto LABEL_264;
                  }
                  v159 = *(char *)(*(_QWORD *)&a1[*v5] + v157);
                  *(_QWORD *)&a1[v156] = v158;
                  if ((v159 & 0x80000000) == 0)
                    break;
                  v22 = v155++ > 8;
                }
                while (!v22);
                break;
              default:
LABEL_282:
                if ((PBReaderSkipValueWithTag() & 1) == 0)
                  goto LABEL_428;
                continue;
            }
            continue;
          }
          goto LABEL_421;
        }
      case 6u:
        if (v15 == 2 && PBReaderPlaceMark() && GEOPDResultRefinementGuidesHomeIsValid(a1))
          goto LABEL_422;
        goto LABEL_429;
      case 7u:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_429;
        objc_msgSend(a1, "position", 0, 0);
        objc_msgSend(a1, "length");
        while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3] && !a1[*v4])
        {
          v161 = 0;
          v162 = 0;
          v163 = 0;
          while (2)
          {
            v164 = *v2;
            v165 = *(_QWORD *)&a1[v164];
            v166 = v165 + 1;
            if (v165 == -1 || v166 > *(_QWORD *)&a1[*v3])
            {
              a1[*v4] = 1;
            }
            else
            {
              v167 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v165);
              *(_QWORD *)&a1[v164] = v166;
              v163 |= (unint64_t)(v167 & 0x7F) << v161;
              if (v167 < 0)
              {
                v161 += 7;
                v13 = v162++ >= 9;
                if (v13)
                {
                  v163 = 0;
                  v168 = a1[*v4];
                  goto LABEL_355;
                }
                continue;
              }
            }
            break;
          }
          v168 = a1[*v4];
          if (a1[*v4])
            v163 = 0;
LABEL_355:
          v169 = v163 & 7;
          if (v168)
            v170 = 1;
          else
            v170 = v169 == 4;
          if (!v170)
          {
            v171 = v163 >> 3;
            if ((v163 >> 3) == 3)
            {
              if (v169 != 2 || !PBReaderPlaceMark())
                goto LABEL_428;
              objc_msgSend(a1, "position");
              objc_msgSend(a1, "length");
LABEL_367:
              while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3] && !a1[*v4])
              {
                v172 = 0;
                v173 = 0;
                v174 = 0;
                while (1)
                {
                  v175 = *v2;
                  v176 = *(_QWORD *)&a1[v175];
                  v177 = v176 + 1;
                  if (v176 == -1 || v177 > *(_QWORD *)&a1[*v3])
                    break;
                  v178 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v176);
                  *(_QWORD *)&a1[v175] = v177;
                  v174 |= (unint64_t)(v178 & 0x7F) << v172;
                  if ((v178 & 0x80) == 0)
                    goto LABEL_377;
                  v172 += 7;
                  v13 = v173++ >= 9;
                  if (v13)
                  {
                    v174 = 0;
                    v179 = *v4;
                    v180 = a1[v179];
                    goto LABEL_379;
                  }
                }
                a1[*v4] = 1;
LABEL_377:
                v179 = *v4;
                v180 = a1[v179];
                if (a1[v179])
                  v174 = 0;
LABEL_379:
                v181 = v174 & 7;
                if (v180 || v181 == 4)
                  break;
                switch((v174 >> 3))
                {
                  case 1u:
                    if (v181 == 2)
                      goto LABEL_385;
                    goto LABEL_427;
                  case 2u:
                    if (v181 != 1)
                      goto LABEL_427;
                    v183 = *v2;
                    v184 = *(_QWORD *)&a1[v183];
                    if (v184 > 0xFFFFFFFFFFFFFFF7)
                      goto LABEL_412;
                    v185 = v184 + 8;
                    if (v185 > *(_QWORD *)&a1[*v3])
                      goto LABEL_412;
                    *(_QWORD *)&a1[v183] = v185;
                    continue;
                  case 3u:
                    if ((v174 & 7) != 0)
                      goto LABEL_427;
                    v186 = 0;
                    while (1)
                    {
                      v187 = *v2;
                      v188 = *(_QWORD *)&a1[v187];
                      v189 = v188 + 1;
                      if (v188 == -1 || v189 > *(_QWORD *)&a1[*v3])
                        goto LABEL_411;
                      v190 = *(char *)(*(_QWORD *)&a1[*v5] + v188);
                      *(_QWORD *)&a1[v187] = v189;
                      if (v190 < 0)
                      {
                        v22 = v186++ > 8;
                        if (!v22)
                          continue;
                      }
                      goto LABEL_367;
                    }
                  case 4u:
                    if (v181 != 2 || !PBReaderPlaceMark() || !GEOPDResultRefinementMetadataIsValid(a1))
                      goto LABEL_427;
                    PBReaderRecallMark();
                    continue;
                  case 5u:
                    if ((v174 & 7) != 0)
                      goto LABEL_427;
                    v191 = 0;
                    break;
                  default:
LABEL_385:
                    if ((PBReaderSkipValueWithTag() & 1) == 0)
                      goto LABEL_427;
                    continue;
                }
                while (1)
                {
                  v192 = *v2;
                  v193 = *(_QWORD *)&a1[v192];
                  v194 = v193 + 1;
                  if (v193 == -1 || v194 > *(_QWORD *)&a1[*v3])
                    break;
                  v195 = *(char *)(*(_QWORD *)&a1[*v5] + v193);
                  *(_QWORD *)&a1[v192] = v194;
                  if (v195 < 0)
                  {
                    v22 = v191++ > 8;
                    if (!v22)
                      continue;
                  }
                  goto LABEL_367;
                }
LABEL_411:
                v179 = *v4;
LABEL_412:
                a1[v179] = 1;
              }
              v196 = a1[*v4];
              PBReaderRecallMark();
              if (v196)
                goto LABEL_428;
            }
            else
            {
              if ((_DWORD)v171 != 2)
              {
                if ((_DWORD)v171 == 1 && v169 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
                  goto LABEL_428;
                continue;
              }
              if (v169 != 2 || !PBReaderPlaceMark() || !GEOPDResultRefinementToggleIsValid(a1))
                goto LABEL_428;
            }
            PBReaderRecallMark();
            continue;
          }
          break;
        }
LABEL_421:
        v197 = a1[*v4];
        PBReaderRecallMark();
        if (v197)
          goto LABEL_429;
LABEL_422:
        PBReaderRecallMark();
LABEL_423:
        if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
          goto LABEL_426;
        continue;
      default:
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_429;
        goto LABEL_423;
    }
  }
}

BOOL GEOPDResultRefinementToggleIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  int v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  int v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  int v42;
  unsigned int v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  int v47;
  _BOOL8 v48;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2)
            goto LABEL_78;
          goto LABEL_20;
        case 2u:
          if ((v8 & 7) != 0)
            goto LABEL_78;
          v17 = 0;
          while (1)
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
              goto LABEL_74;
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if (v21 < 0)
            {
              v22 = v17++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_75;
          }
        case 3u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDResultRefinementMetadataIsValid(a1))
            goto LABEL_78;
          PBReaderRecallMark();
          continue;
        case 4u:
          if ((v8 & 7) != 0)
            goto LABEL_78;
          v23 = 0;
          while (1)
          {
            v24 = *v2;
            v25 = *(_QWORD *)&a1[v24];
            v26 = v25 + 1;
            if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
              goto LABEL_74;
            v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
            *(_QWORD *)&a1[v24] = v26;
            if (v27 < 0)
            {
              v22 = v23++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_75;
          }
        case 5u:
          if ((v8 & 7) != 0)
            goto LABEL_78;
          v28 = 0;
          while (1)
          {
            v29 = *v2;
            v30 = *(_QWORD *)&a1[v29];
            v31 = v30 + 1;
            if (v30 == -1 || v31 > *(_QWORD *)&a1[*v3])
              goto LABEL_74;
            v32 = *(char *)(*(_QWORD *)&a1[*v5] + v30);
            *(_QWORD *)&a1[v29] = v31;
            if (v32 < 0)
            {
              v22 = v28++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_75;
          }
        case 6u:
          if ((v8 & 7) != 0)
            goto LABEL_78;
          v33 = 0;
          while (1)
          {
            v34 = *v2;
            v35 = *(_QWORD *)&a1[v34];
            v36 = v35 + 1;
            if (v35 == -1 || v36 > *(_QWORD *)&a1[*v3])
              goto LABEL_74;
            v37 = *(char *)(*(_QWORD *)&a1[*v5] + v35);
            *(_QWORD *)&a1[v34] = v36;
            if (v37 < 0)
            {
              v22 = v33++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_75;
          }
        case 7u:
          if ((v8 & 7) != 0)
            goto LABEL_78;
          v38 = 0;
          while (1)
          {
            v39 = *v2;
            v40 = *(_QWORD *)&a1[v39];
            v41 = v40 + 1;
            if (v40 == -1 || v41 > *(_QWORD *)&a1[*v3])
              goto LABEL_74;
            v42 = *(char *)(*(_QWORD *)&a1[*v5] + v40);
            *(_QWORD *)&a1[v39] = v41;
            if (v42 < 0)
            {
              v22 = v38++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_75;
          }
        case 8u:
          if ((v8 & 7) != 0)
            goto LABEL_78;
          v43 = 0;
          break;
        default:
LABEL_20:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_78:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v44 = *v2;
        v45 = *(_QWORD *)&a1[v44];
        v46 = v45 + 1;
        if (v45 == -1 || v46 > *(_QWORD *)&a1[*v3])
          break;
        v47 = *(char *)(*(_QWORD *)&a1[*v5] + v45);
        *(_QWORD *)&a1[v44] = v46;
        if (v47 < 0)
        {
          v22 = v43++ > 8;
          if (!v22)
            continue;
        }
        goto LABEL_75;
      }
LABEL_74:
      a1[*v4] = 1;
LABEL_75:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v48 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v48;
}

BOOL GEOPDResultRefinementGuidesHomeIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  _BOOL8 v23;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (!a1[*v4])
    {
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0)
            goto LABEL_54;
          v17 = 0;
          do
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
            {
              a1[*v4] = 1;
              goto LABEL_50;
            }
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if ((v21 & 0x80000000) == 0)
              break;
          }
          while (v17++ <= 8);
          goto LABEL_50;
        case 2u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDMapsIdentifierIsValid(a1))
            goto LABEL_54;
          goto LABEL_49;
        case 3u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOMapRegionIsValid(a1))
            goto LABEL_54;
          goto LABEL_49;
        case 4u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOLatLngIsValid(a1))
            goto LABEL_54;
          goto LABEL_49;
        case 5u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDWarsawMerchantIdentifierIsValid(a1))
            goto LABEL_54;
          goto LABEL_49;
        case 6u:
          if (v15 == 2)
            goto LABEL_44;
          goto LABEL_54;
        case 7u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDResultRefinementMetadataIsValid(a1))
            goto LABEL_54;
LABEL_49:
          PBReaderRecallMark();
          goto LABEL_50;
        default:
LABEL_44:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_54:
            PBReaderRecallMark();
            return 0;
          }
LABEL_50:
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_53;
          break;
      }
    }
  }
LABEL_53:
  v23 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v23;
}

void sub_1892B3910(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDResultRefinementIsDirty(uint64_t a1)
{
  __int16 v2;
  os_unfair_lock_s *v3;
  char IsDirty;
  uint64_t v5;
  int v6;
  os_unfair_lock_s *v7;
  char v8;
  os_unfair_lock_s *v10;
  uint64_t v11;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  v2 = *(_WORD *)(a1 + 88);
  if ((v2 & 0x100) != 0)
    return 1;
  if ((v2 & 0x80) != 0)
  {
    if ((GEOPDResultRefinementToggleIsDirty(*(os_unfair_lock_s **)(a1 + 64)) & 1) != 0)
      return 1;
    v2 = *(_WORD *)(a1 + 88);
  }
  if ((v2 & 0x20) != 0)
  {
    v3 = *(os_unfair_lock_s **)(a1 + 48);
    if (v3)
    {
      os_unfair_lock_lock_with_options();
      IsDirty = _GEOPDResultRefinementRangeIsDirty((uint64_t)v3);
      os_unfair_lock_unlock(v3 + 14);
      if ((IsDirty & 1) != 0)
        return 1;
    }
    v2 = *(_WORD *)(a1 + 88);
  }
  if ((v2 & 8) != 0)
  {
    v5 = *(_QWORD *)(a1 + 32);
    if (v5)
    {
      os_unfair_lock_lock_with_options();
      os_unfair_lock_assert_owner((const os_unfair_lock *)(v5 + 64));
      v6 = *(_WORD *)(v5 + 80) & 0x1F0;
      os_unfair_lock_unlock((os_unfair_lock_t)(v5 + 64));
      if (v6)
        return 1;
    }
    v2 = *(_WORD *)(a1 + 88);
  }
  if ((v2 & 0x40) != 0)
  {
    v7 = *(os_unfair_lock_s **)(a1 + 56);
    if (v7)
    {
      os_unfair_lock_lock_with_options();
      v8 = _GEOPDResultRefinementSortIsDirty((uint64_t)v7);
      os_unfair_lock_unlock(v7 + 12);
      if ((v8 & 1) != 0)
        return 1;
    }
    v2 = *(_WORD *)(a1 + 88);
  }
  if ((v2 & 4) != 0)
  {
    if ((GEOPDResultRefinementGuidesHomeIsDirty(*(os_unfair_lock_s **)(a1 + 24)) & 1) != 0)
      return 1;
    v2 = *(_WORD *)(a1 + 88);
  }
  if ((v2 & 0x10) == 0)
    return 0;
  v10 = *(os_unfair_lock_s **)(a1 + 40);
  if (!v10)
    return 0;
  os_unfair_lock_lock_with_options();
  v11 = _GEOPDResultRefinementOpenOptionsIsDirty((uint64_t)v10);
  os_unfair_lock_unlock(v10 + 14);
  return v11;
}

void sub_1892B3DD8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDResultRefinementBarReadAllFrom(uint64_t a1, void *a2, int a3)
{
  char *v5;
  int *v6;
  int *v7;
  int *v8;
  int *v9;
  char v10;
  unsigned int v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  int v18;
  GEOPDResultRefinement *v20;
  id v21;
  void *v22;
  _BOOL8 v23;

  v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    v6 = (int *)MEMORY[0x1E0D82BF0];
    v7 = (int *)MEMORY[0x1E0D82BD8];
    v8 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v5[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v5[*MEMORY[0x1E0D82BD8]])
    {
      v9 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v5[*v8])
          break;
        v10 = 0;
        v11 = 0;
        v12 = 0;
        while (1)
        {
          v13 = *v6;
          v14 = *(_QWORD *)&v5[v13];
          v15 = v14 + 1;
          if (v14 == -1 || v15 > *(_QWORD *)&v5[*v7])
            break;
          v16 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v14);
          *(_QWORD *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0)
            goto LABEL_13;
          v10 += 7;
          if (v11++ >= 9)
          {
            v12 = 0;
            v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        v18 = v5[*v8];
        if (v5[*v8])
          v12 = 0;
LABEL_15:
        if (v18 || (v12 & 7) == 4)
          break;
        if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_29;
          v20 = objc_alloc_init(GEOPDResultRefinement);
          if (!GEOPDResultRefinementReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          -[GEOPDResultRefinementBar addResultRefinement:](a1, v20);

        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v21 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v22 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v21;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_29;
        }
      }
      while (*(_QWORD *)&v5[*v6] < *(_QWORD *)&v5[*v7]);
    }
    v23 = v5[*v8] == 0;
  }
  else
  {
LABEL_29:
    v23 = 0;
  }
  objc_sync_exit(v5);

  return v23;
}

void sub_1892B503C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892B581C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDResultRefinementGroupReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  char v17;
  unsigned __int8 v18;
  int *v19;
  int *v20;
  int *v21;
  int *v22;
  char v23;
  unsigned int v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  int v31;
  unint64_t v33;
  BOOL v34;
  int *v35;
  int v36;
  int v37;
  BOOL v38;
  GEOPDRefinementSessionState *v39;
  uint64_t v40;
  void *v41;
  id v42;
  void *v43;
  int v44;
  char v45;
  char v46;
  int v47;
  char v48;
  void *v49;
  int v51;
  int *v52;
  char v53;
  char v54;
  char v55;
  BOOL v56;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 52);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 48));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = ((*(unsigned __int8 *)(a1 + 60) >> 3) & 1)
      + (*(_BYTE *)(a1 + 60) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 2) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 1) & 1);
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 > 1;
        v17 = v16 & ~(_BYTE)v11 | v9;
        v18 = v16 | v11;
        v53 = v17;
        v54 = v18 | v17;
        if (((v18 | v8) & 1) != 0)
          v19 = 0;
        else
          v19 = a3;
        v20 = (int *)MEMORY[0x1E0D82BF0];
        v21 = (int *)MEMORY[0x1E0D82BC8];
        v55 = (v19 == 0) | v18;
        v56 = v18;
        v22 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v7;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v20) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v21))
      goto LABEL_74;
    v23 = 0;
    v24 = 0;
    v25 = 0;
    while (1)
    {
      v26 = *v20;
      v27 = *(_QWORD *)(v3 + v26);
      v28 = v27 + 1;
      if (v27 == -1 || v28 > *(_QWORD *)(v3 + *v6))
        break;
      v29 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v27);
      *(_QWORD *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0)
        goto LABEL_25;
      v23 += 7;
      if (v24++ >= 9)
      {
        v25 = 0;
        v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v21) = 1;
LABEL_25:
    v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(_BYTE *)(v3 + *v21))
      v25 = 0;
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_74:
      v51 = 1;
      goto LABEL_75;
    }
    v33 = v25 >> 3;
    v34 = v56;
    if ((v55 & 1) == 0)
    {
      v35 = v19;
      do
      {
        v37 = *v35++;
        v36 = v37;
        v34 = v37 != 0;
        if (v37)
          v38 = v36 == (_DWORD)v33;
        else
          v38 = 1;
      }
      while (!v38);
    }
    if ((_DWORD)v33 != 3)
      break;
    if (v34)
    {
      if ((*(_BYTE *)(a1 + 60) & 2) == 0)
      {
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_92;
        v39 = objc_alloc_init(GEOPDRefinementSessionState);
        if (!GEOPDRefinementSessionStateReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1))
          goto LABEL_91;
        PBReaderRecallMark();
        v40 = 24;
        goto LABEL_56;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        goto LABEL_92;
      v46 = *(_BYTE *)(a1 + 60) << 6;
LABEL_71:
      v7 += v46 >> 7;
      goto LABEL_72;
    }
LABEL_63:
    v45 = PBReaderSkipValueWithTag();
    v21 = (int *)MEMORY[0x1E0D82BC8];
    if ((v45 & 1) == 0)
    {
      v51 = 0;
LABEL_75:
      v52 = &OBJC_IVAR___GEOPDRelatedEntitySection__reader;
      goto LABEL_76;
    }
LABEL_73:
    if (!(v54 & 1 | (v7 != 0)))
      goto LABEL_74;
  }
  if ((_DWORD)v33 != 2)
  {
    if ((_DWORD)v33 == 1)
    {
      if (v34)
      {
        if ((*(_BYTE *)(a1 + 60) & 4) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_92;
          v39 = objc_alloc_init(GEOPDResultRefinementBar);
          if (!GEOPDResultRefinementBarReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1))
            goto LABEL_91;
          PBReaderRecallMark();
          v40 = 32;
LABEL_56:
          v41 = *(void **)(a1 + v40);
          *(_QWORD *)(a1 + v40) = v39;

          --v7;
LABEL_72:
          v21 = (int *)MEMORY[0x1E0D82BC8];
          goto LABEL_73;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_92;
        v46 = 32 * *(_BYTE *)(a1 + 60);
        goto LABEL_71;
      }
    }
    else if ((v53 & 1) != 0 && (*(_BYTE *)(a1 + 60) & 1) == 0)
    {
      if (!*(_QWORD *)(a1 + 16))
      {
        v42 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v43 = *(void **)(a1 + 16);
        *(_QWORD *)(a1 + 16) = v42;

      }
      v44 = PBUnknownFieldAdd();
      v21 = (int *)MEMORY[0x1E0D82BC8];
      if (!v44)
      {
        v51 = 0;
        v52 = &OBJC_IVAR___GEOPDRelatedEntitySection__reader;
        goto LABEL_77;
      }
      goto LABEL_73;
    }
    goto LABEL_63;
  }
  if (!v34)
    goto LABEL_63;
  if ((*(_BYTE *)(a1 + 60) & 8) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0)
      goto LABEL_92;
    v46 = 16 * *(_BYTE *)(a1 + 60);
    goto LABEL_71;
  }
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_92;
  v39 = objc_alloc_init(GEOPDResultRefinementView);
  if (GEOPDResultRefinementViewReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1))
  {
    PBReaderRecallMark();
    v40 = 40;
    goto LABEL_56;
  }
LABEL_91:

LABEL_92:
  v51 = 0;
  v52 = &OBJC_IVAR___GEOPDRelatedEntitySection__reader;
  v21 = (int *)MEMORY[0x1E0D82BC8];
LABEL_76:
  if ((v53 & 1) == 0)
    goto LABEL_78;
LABEL_77:
  *(_BYTE *)(a1 + v52[27]) |= 1u;
LABEL_78:
  if (v56 || (v51 & 1) == 0)
  {
    *(_BYTE *)(a1 + v52[27]) |= 4u;
    *(_BYTE *)(a1 + v52[27]) |= 8u;
    *(_BYTE *)(a1 + v52[27]) |= 2u;
  }
  else if (v19)
  {
    while (1)
    {
      v47 = *v19++;
      v48 = 4;
      switch(v47)
      {
        case 0:
          goto LABEL_85;
        case 1:
          goto LABEL_84;
        case 2:
          v48 = 8;
          goto LABEL_84;
        case 3:
          v48 = 2;
LABEL_84:
          *(_BYTE *)(a1 + v52[27]) |= v48;
          break;
        default:
          continue;
      }
    }
  }
LABEL_85:
  if (v51)
    v3 = *(_BYTE *)(v3 + *v21) == 0;
  else
    v3 = 0;
  if (v56)
  {
    v49 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_1892B5F94(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892B60EC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892B6538(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDResultRefinementGroupReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 52))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDResultRefinementGroupReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 52) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDResultRefinementGroupReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDResultRefinementGroupReadAllFrom_initialTag;
  Specified = GEOPDResultRefinementGroupReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    objc_msgSend(*(id *)(a1 + 24), "readAll:", 1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_1892B6C14(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDResultRefinementGroupIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  BOOL v13;
  int v14;
  int v15;
  unint64_t v17;
  char v18;
  unsigned int v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  int v25;
  int v26;
  char v28;
  unsigned int v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  int v35;
  int v36;
  int v38;
  _BOOL8 v39;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_81;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        v13 = v7++ >= 9;
        if (v13)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        goto LABEL_81;
      v17 = v8 >> 3;
      if ((v8 >> 3) == 3)
        break;
      if ((_DWORD)v17 == 2)
      {
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_83;
        objc_msgSend(a1, "position", 0, 0);
        objc_msgSend(a1, "length");
        while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3] && !a1[*v4])
        {
          v28 = 0;
          v29 = 0;
          v30 = 0;
          while (1)
          {
            v31 = *v2;
            v32 = *(_QWORD *)&a1[v31];
            v33 = v32 + 1;
            if (v32 == -1 || v33 > *(_QWORD *)&a1[*v3])
              break;
            v34 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v32);
            *(_QWORD *)&a1[v31] = v33;
            v30 |= (unint64_t)(v34 & 0x7F) << v28;
            if ((v34 & 0x80) == 0)
              goto LABEL_64;
            v28 += 7;
            v13 = v29++ >= 9;
            if (v13)
            {
              v30 = 0;
              v35 = a1[*v4];
              goto LABEL_66;
            }
          }
          a1[*v4] = 1;
LABEL_64:
          v35 = a1[*v4];
          if (a1[*v4])
            v30 = 0;
LABEL_66:
          v36 = v30 & 7;
          if (v35 || v36 == 4)
            break;
          if ((v30 >> 3) == 1)
          {
            if (v36 != 2 || !PBReaderPlaceMark() || !GEOPDResultRefinementSectionIsValid(a1))
            {
LABEL_82:
              PBReaderRecallMark();
              goto LABEL_83;
            }
            PBReaderRecallMark();
          }
          else if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
            goto LABEL_82;
          }
        }
LABEL_77:
        v38 = a1[*v4];
        PBReaderRecallMark();
        if (v38)
          goto LABEL_83;
LABEL_78:
        PBReaderRecallMark();
        goto LABEL_80;
      }
      if ((_DWORD)v17 == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_83;
        objc_msgSend(a1, "position", 0, 0);
        objc_msgSend(a1, "length");
        while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3] && !a1[*v4])
        {
          v18 = 0;
          v19 = 0;
          v20 = 0;
          while (1)
          {
            v21 = *v2;
            v22 = *(_QWORD *)&a1[v21];
            v23 = v22 + 1;
            if (v22 == -1 || v23 > *(_QWORD *)&a1[*v3])
              break;
            v24 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v22);
            *(_QWORD *)&a1[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0)
              goto LABEL_34;
            v18 += 7;
            v13 = v19++ >= 9;
            if (v13)
            {
              v20 = 0;
              v25 = a1[*v4];
              goto LABEL_36;
            }
          }
          a1[*v4] = 1;
LABEL_34:
          v25 = a1[*v4];
          if (a1[*v4])
            v20 = 0;
LABEL_36:
          v26 = v20 & 7;
          if (v25 || v26 == 4)
            break;
          if ((v20 >> 3) == 1)
          {
            if (v26 != 2 || !PBReaderPlaceMark() || !GEOPDResultRefinementIsValid(a1))
              goto LABEL_82;
            PBReaderRecallMark();
          }
          else if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
            goto LABEL_82;
          }
        }
        goto LABEL_77;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        goto LABEL_83;
LABEL_80:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_81;
    }
    if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDRefinementSessionStateIsValid(a1))
    {
LABEL_83:
      PBReaderRecallMark();
      return 0;
    }
    goto LABEL_78;
  }
LABEL_81:
  v39 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v39;
}

void sub_1892B7240(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL _GEOPDResultRefinementGroupIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  if ((*(_BYTE *)(a1 + 60) & 0x1C) != 0)
    return 1;
  if ((*(_BYTE *)(a1 + 60) & 2) != 0)
    return GEOPDRefinementSessionStateIsDirty(*(_QWORD *)(a1 + 24));
  return 0;
}

os_unfair_lock_s *GEOPDResultRefinementGroupIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  _BOOL8 IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOPDResultRefinementGroupIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 14);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_1892B7630(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892B7D10(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDResultRefinementGuidesHomeReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  char v17;
  unsigned __int8 v18;
  int *v19;
  int *v20;
  int *v21;
  int *v22;
  char v23;
  unsigned int v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  BOOL v30;
  int v31;
  unint64_t v33;
  BOOL v34;
  int *v35;
  int v36;
  int v37;
  BOOL v38;
  char v39;
  unsigned int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  id v46;
  void *v47;
  int v48;
  GEOPDMapsIdentifier *v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  char v53;
  __int16 v54;
  int v55;
  __int16 v56;
  void *v57;
  int v59;
  int *v60;
  char v61;
  char v62;
  char v63;
  BOOL v64;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 76);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 72));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 88)), (uint16x4_t)0xFFFCFFFEFFF9FFFBLL), (int8x8_t)0x1000100010001))+ ((*(_WORD *)(a1 + 88) >> 3) & 1)+ ((*(_WORD *)(a1 + 88) >> 6) & 1)+ ((*(_WORD *)(a1 + 88) >> 1) & 1));
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 > 3;
        v17 = v16 & ~(_BYTE)v11 | v9;
        v18 = v16 | v11;
        v61 = v17;
        v62 = v18 | v17;
        if (((v18 | v8) & 1) != 0)
          v19 = 0;
        else
          v19 = a3;
        v63 = (v19 == 0) | v18;
        v64 = v18;
        v20 = (int *)MEMORY[0x1E0D82BF0];
        v21 = (int *)MEMORY[0x1E0D82BC8];
        v22 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v7;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v20) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v21))
      goto LABEL_104;
    v23 = 0;
    v24 = 0;
    v25 = 0;
    while (1)
    {
      v26 = *v20;
      v27 = *(_QWORD *)(v3 + v26);
      v28 = v27 + 1;
      if (v27 == -1 || v28 > *(_QWORD *)(v3 + *v6))
        break;
      v29 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v27);
      *(_QWORD *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0)
        goto LABEL_25;
      v23 += 7;
      v30 = v24++ >= 9;
      if (v30)
      {
        v25 = 0;
        v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v21) = 1;
LABEL_25:
    v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(_BYTE *)(v3 + *v21))
      v25 = 0;
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_104:
      v59 = 1;
      goto LABEL_105;
    }
    v33 = v25 >> 3;
    v34 = v64;
    if ((v63 & 1) == 0)
    {
      v35 = v19;
      do
      {
        v37 = *v35++;
        v36 = v37;
        v34 = v37 != 0;
        if (v37)
          v38 = v36 == (_DWORD)v33;
        else
          v38 = 1;
      }
      while (!v38);
    }
    switch((int)v33)
    {
      case 1:
        if ((v8 & 1) == 0)
          goto LABEL_83;
        v39 = 0;
        v40 = 0;
        v41 = 0;
        *(_WORD *)(a1 + 88) |= 1u;
        while (1)
        {
          v42 = *v20;
          v43 = *(_QWORD *)(v3 + v42);
          v44 = v43 + 1;
          if (v43 == -1 || v44 > *(_QWORD *)(v3 + *v6))
            break;
          v45 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v43);
          *(_QWORD *)(v3 + v42) = v44;
          v41 |= (unint64_t)(v45 & 0x7F) << v39;
          if ((v45 & 0x80) == 0)
            goto LABEL_86;
          v39 += 7;
          v30 = v40++ >= 9;
          if (v30)
          {
            LODWORD(v41) = 0;
            goto LABEL_88;
          }
        }
        *(_BYTE *)(v3 + *v21) = 1;
LABEL_86:
        if (*(_BYTE *)(v3 + *v21))
          LODWORD(v41) = 0;
LABEL_88:
        *(_DWORD *)(a1 + 84) = v41;
        goto LABEL_103;
      case 2:
        if (!v34)
          goto LABEL_83;
        if ((*(_WORD *)(a1 + 88) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_125;
          v54 = *(_WORD *)(a1 + 88) << 8;
          goto LABEL_101;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_125;
        v49 = objc_alloc_init(GEOPDMapsIdentifier);
        if (!GEOPDMapsIdentifierReadAllFrom((uint64_t)v49, (void *)v3))
          goto LABEL_124;
        PBReaderRecallMark();
        v50 = 64;
        goto LABEL_81;
      case 3:
        if (!v34)
          goto LABEL_83;
        if ((*(_WORD *)(a1 + 88) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_125;
          v54 = *(_WORD *)(a1 + 88) << 10;
          goto LABEL_101;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_125;
        v49 = objc_alloc_init(GEOMapRegion);
        if (!GEOMapRegionReadAllFrom((uint64_t)v49, (void *)v3))
          goto LABEL_124;
        PBReaderRecallMark();
        v50 = 48;
        goto LABEL_81;
      case 4:
        if (!v34)
          goto LABEL_83;
        if ((*(_WORD *)(a1 + 88) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_125;
          v54 = *(_WORD *)(a1 + 88) << 13;
          goto LABEL_101;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_125;
        v49 = objc_alloc_init(GEOLatLng);
        if (!GEOLatLngReadAllFrom((uint64_t)v49, (void *)v3))
          goto LABEL_124;
        PBReaderRecallMark();
        v50 = 24;
        goto LABEL_81;
      case 5:
        if (!v34)
          goto LABEL_83;
        if ((*(_WORD *)(a1 + 88) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_125;
          v54 = *(_WORD *)(a1 + 88) << 11;
          goto LABEL_101;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_125;
        v49 = objc_alloc_init(GEOPDRelatedSearchSuggestion);
        if (!GEOPDRelatedSearchSuggestionReadAllFrom((uint64_t)v49, (void *)v3, v10 & 1))
          goto LABEL_124;
        PBReaderRecallMark();
        v50 = 40;
        goto LABEL_81;
      case 6:
        if (!v34)
          goto LABEL_83;
        if ((*(_WORD *)(a1 + 88) & 8) == 0)
        {
          PBReaderReadString();
          v51 = objc_claimAutoreleasedReturnValue();
          v52 = *(void **)(a1 + 32);
          *(_QWORD *)(a1 + 32) = v51;
          goto LABEL_82;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_125;
        v54 = *(_WORD *)(a1 + 88) << 12;
        goto LABEL_101;
      case 7:
        if (!v34)
          goto LABEL_83;
        if ((*(_WORD *)(a1 + 88) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_125;
          v54 = *(_WORD *)(a1 + 88) << 9;
LABEL_101:
          v7 += v54 >> 15;
LABEL_102:
          v21 = (int *)MEMORY[0x1E0D82BC8];
          v22 = (int *)MEMORY[0x1E0D82BB8];
          goto LABEL_103;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_125;
        v49 = objc_alloc_init(GEOPDResultRefinementMetadata);
        if (GEOPDResultRefinementMetadataReadAllFrom((uint64_t)v49, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          v50 = 56;
LABEL_81:
          v52 = *(void **)(a1 + v50);
          *(_QWORD *)(a1 + v50) = v49;
LABEL_82:

          --v7;
          goto LABEL_102;
        }
LABEL_124:

LABEL_125:
        v59 = 0;
        v60 = &OBJC_IVAR___GEOPDRelatedEntitySection__reader;
        v21 = (int *)MEMORY[0x1E0D82BC8];
LABEL_106:
        if ((v61 & 1) != 0)
LABEL_107:
          *(_WORD *)(a1 + v60[34]) |= 2u;
        if (v64 || (v59 & 1) == 0)
        {
          *(_WORD *)(a1 + v60[34]) |= 0x80u;
          *(_WORD *)(a1 + v60[34]) |= 0x20u;
          *(_WORD *)(a1 + v60[34]) |= 4u;
          *(_WORD *)(a1 + v60[34]) |= 0x10u;
          *(_WORD *)(a1 + v60[34]) |= 8u;
          *(_WORD *)(a1 + v60[34]) |= 0x40u;
        }
        else if (v19)
        {
          while (1)
          {
            v55 = *v19++;
            v56 = 128;
            switch(v55)
            {
              case 0:
                goto LABEL_118;
              case 2:
                goto LABEL_117;
              case 3:
                v56 = 32;
                goto LABEL_117;
              case 4:
                v56 = 4;
                goto LABEL_117;
              case 5:
                v56 = 16;
                goto LABEL_117;
              case 6:
                v56 = 8;
                goto LABEL_117;
              case 7:
                v56 = 64;
LABEL_117:
                *(_WORD *)(a1 + v60[34]) |= v56;
                break;
              default:
                continue;
            }
          }
        }
LABEL_118:
        if (v59)
          v3 = *(_BYTE *)(v3 + *v21) == 0;
        else
          v3 = 0;
        if (v64)
        {
          v57 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      default:
        if ((v61 & 1) == 0 || (*(_WORD *)(a1 + 88) & 2) != 0)
        {
LABEL_83:
          v53 = PBReaderSkipValueWithTag();
          v22 = (int *)MEMORY[0x1E0D82BB8];
          v21 = (int *)MEMORY[0x1E0D82BC8];
          if ((v53 & 1) == 0)
          {
            v59 = 0;
LABEL_105:
            v60 = &OBJC_IVAR___GEOPDRelatedEntitySection__reader;
            goto LABEL_106;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v46 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v47 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v46;

          }
          v48 = PBUnknownFieldAdd();
          v21 = (int *)MEMORY[0x1E0D82BC8];
          v22 = (int *)MEMORY[0x1E0D82BB8];
          if (!v48)
          {
            v59 = 0;
            v60 = &OBJC_IVAR___GEOPDRelatedEntitySection__reader;
            goto LABEL_107;
          }
        }
LABEL_103:
        if (!(v62 & 1 | (v7 != 0)))
          goto LABEL_104;
        continue;
    }
  }
}

void sub_1892B8720(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892B8840(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892B8F6C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892B904C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDResultRefinementGuidesHomeCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 64), "readAll:", 1);
  objc_msgSend(*(id *)(a1 + 48), "readAll:", 1);
  objc_msgSend(*(id *)(a1 + 24), "readAll:", 1);
  -[GEOPDRelatedSearchSuggestion readAll:](*(_QWORD *)(a1 + 40), 1);
  return objc_msgSend(*(id *)(a1 + 56), "readAll:", 1);
}

unint64_t GEOPDResultRefinementGuidesHomeReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 76))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDResultRefinementGuidesHomeReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 80));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 72) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 76) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDResultRefinementGuidesHomeReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDResultRefinementGuidesHomeReadAllFrom_initialTag;
  Specified = GEOPDResultRefinementGuidesHomeReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDResultRefinementGuidesHomeCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 80));
  return Specified;
}

void sub_1892B9700(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892B9928(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDResultRefinementGuidesHomeIsDirty(uint64_t a1)
{
  __int16 v2;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  v2 = *(_WORD *)(a1 + 88);
  if ((v2 & 0x1A4) != 0)
    return 1;
  if ((v2 & 0x10) != 0)
  {
    if (GEOPDRelatedSearchSuggestionIsDirty(*(_QWORD *)(a1 + 40)))
      return 1;
    v2 = *(_WORD *)(a1 + 88);
  }
  if ((v2 & 8) != 0)
    return 1;
  if ((v2 & 0x40) != 0)
    return (uint64_t)GEOPDResultRefinementMetadataIsDirty(*(os_unfair_lock_s **)(a1 + 56));
  else
    return 0;
}

os_unfair_lock_s *GEOPDResultRefinementGuidesHomeIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOPDResultRefinementGuidesHomeIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 20);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_1892B9C40(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892BA238(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDResultRefinementMetadataReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  int *v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  BOOL v28;
  int v29;
  unint64_t v31;
  BOOL v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  char v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  GEOPDResultRefinementMetadataSort *v44;
  uint64_t v45;
  void *v46;
  id v47;
  void *v48;
  int v49;
  char v50;
  char v51;
  int v52;
  int v53;
  char v54;
  void *v55;
  int v57;
  int *v58;
  char v59;
  char v60;
  char v61;
  char v62;
  char v63;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = ((*(unsigned __int8 *)(a1 + 56) >> 2) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 1) & 1);
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v7 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 != 0;
        v60 = v16 & ~(_BYTE)v11 | v9;
        v61 = v16 | v11 | v60;
        v59 = v7;
        if ((((v16 | v11) | v7) & 1) != 0)
          v17 = 0;
        else
          v17 = a3;
        v62 = (v17 == 0) | v16 | v11;
        v63 = v16 | v11;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v8;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v19))
      goto LABEL_79;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0)
        goto LABEL_25;
      v21 += 7;
      v28 = v22++ >= 9;
      if (v28)
      {
        v23 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_25:
    v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_27:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_79:
      v57 = 1;
      goto LABEL_80;
    }
    v31 = v23 >> 3;
    v32 = v63;
    if ((v62 & 1) == 0)
    {
      v33 = v17;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    if ((_DWORD)v31 == 3)
    {
      if (!v32)
        goto LABEL_66;
      if ((*(_BYTE *)(a1 + 56) & 8) == 0)
      {
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_100;
        v44 = objc_alloc_init(GEOPDResultRefinementMetadataSort);
        if (!GEOPDResultRefinementMetadataSortReadAllFrom((uint64_t)v44, (void *)v3))
          goto LABEL_99;
        PBReaderRecallMark();
        v45 = 32;
LABEL_59:
        v46 = *(void **)(a1 + v45);
        *(_QWORD *)(a1 + v45) = v44;

        --v8;
LABEL_77:
        v19 = (int *)MEMORY[0x1E0D82BC8];
        goto LABEL_78;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        goto LABEL_100;
      v51 = 16 * *(_BYTE *)(a1 + 56);
LABEL_76:
      v8 += v51 >> 7;
      goto LABEL_77;
    }
    if ((_DWORD)v31 == 2)
      break;
    if ((_DWORD)v31 == 1)
    {
      if ((v59 & 1) != 0)
      {
        v37 = 0;
        v38 = 0;
        v39 = 0;
        *(_BYTE *)(a1 + 56) |= 1u;
        while (1)
        {
          v40 = *v18;
          v41 = *(_QWORD *)(v3 + v40);
          v42 = v41 + 1;
          if (v41 == -1 || v42 > *(_QWORD *)(v3 + *v6))
            break;
          v43 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v41);
          *(_QWORD *)(v3 + v40) = v42;
          v39 |= (unint64_t)(v43 & 0x7F) << v37;
          if ((v43 & 0x80) == 0)
            goto LABEL_69;
          v37 += 7;
          v28 = v38++ >= 9;
          if (v28)
          {
            LODWORD(v39) = 0;
            goto LABEL_71;
          }
        }
        *(_BYTE *)(v3 + *v19) = 1;
LABEL_69:
        if (*(_BYTE *)(v3 + *v19))
          LODWORD(v39) = 0;
LABEL_71:
        *(_DWORD *)(a1 + 52) = v39;
        goto LABEL_78;
      }
    }
    else if ((v60 & 1) != 0 && (*(_BYTE *)(a1 + 56) & 2) == 0)
    {
      if (!*(_QWORD *)(a1 + 16))
      {
        v47 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v48 = *(void **)(a1 + 16);
        *(_QWORD *)(a1 + 16) = v47;

      }
      v49 = PBUnknownFieldAdd();
      v19 = (int *)MEMORY[0x1E0D82BC8];
      if (!v49)
      {
        v57 = 0;
        v58 = &OBJC_IVAR___GEOPDRelatedEntitySection__reader;
        goto LABEL_82;
      }
      goto LABEL_78;
    }
LABEL_66:
    v50 = PBReaderSkipValueWithTag();
    v19 = (int *)MEMORY[0x1E0D82BC8];
    if ((v50 & 1) == 0)
    {
      v57 = 0;
LABEL_80:
      v58 = &OBJC_IVAR___GEOPDRelatedEntitySection__reader;
      goto LABEL_81;
    }
LABEL_78:
    if (!(v61 & 1 | (v8 != 0)))
      goto LABEL_79;
  }
  if (!v32)
    goto LABEL_66;
  if ((*(_BYTE *)(a1 + 56) & 4) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0)
      goto LABEL_100;
    v51 = 32 * *(_BYTE *)(a1 + 56);
    goto LABEL_76;
  }
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_100;
  v44 = objc_alloc_init(GEOPDResultRefinementMetadataDefault);
  if (GEOPDResultRefinementMetadataDefaultReadAllFrom((uint64_t)v44, (void *)v3, v10 & 1))
  {
    PBReaderRecallMark();
    v45 = 24;
    goto LABEL_59;
  }
LABEL_99:

LABEL_100:
  v57 = 0;
  v58 = &OBJC_IVAR___GEOPDRelatedEntitySection__reader;
  v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_81:
  if ((v60 & 1) == 0)
    goto LABEL_83;
LABEL_82:
  *(_BYTE *)(a1 + v58[43]) |= 2u;
LABEL_83:
  if (v63 & 1 | ((v57 & 1) == 0))
  {
    *(_BYTE *)(a1 + v58[43]) |= 4u;
    *(_BYTE *)(a1 + v58[43]) |= 8u;
    goto LABEL_93;
  }
  if (v17)
  {
    while (2)
    {
      while (1)
      {
        v53 = *v17++;
        v52 = v53;
        if (v53 == 2)
          break;
        if (v52 == 3)
        {
          v54 = 8;
          goto LABEL_92;
        }
        if (!v52)
          goto LABEL_93;
      }
      v54 = 4;
LABEL_92:
      *(_BYTE *)(a1 + v58[43]) |= v54;
      continue;
    }
  }
LABEL_93:
  if (v57)
    v3 = *(_BYTE *)(v3 + *v19) == 0;
  else
    v3 = 0;
  if ((v63 & 1) != 0)
  {
    v55 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_1892BA99C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892BB0E8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDResultRefinementMetadataReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDResultRefinementMetadataReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDResultRefinementMetadataReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDResultRefinementMetadataReadAllFrom_initialTag;
  Specified = GEOPDResultRefinementMetadataReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    objc_msgSend(*(id *)(a1 + 24), "readAll:", 1);
    objc_msgSend(*(id *)(a1 + 32), "readAll:", 1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_1892BB29C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDResultRefinementMetadataReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOPDResultRefinementMetadataReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1892BB2FC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDResultRefinementMetadataDefaultIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  int v32;
  _BOOL8 v33;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2)
            goto LABEL_54;
          goto LABEL_32;
        case 2u:
          if ((v8 & 7) != 0)
            goto LABEL_54;
          v17 = 0;
          while (1)
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
              goto LABEL_50;
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if (v21 < 0)
            {
              v22 = v17++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_51;
          }
        case 3u:
          if (v15 == 2)
            goto LABEL_32;
          goto LABEL_54;
        case 4u:
          if (v15 == 2)
            goto LABEL_32;
          goto LABEL_54;
        case 5u:
          if ((v8 & 7) != 0)
            goto LABEL_54;
          v23 = 0;
          while (1)
          {
            v24 = *v2;
            v25 = *(_QWORD *)&a1[v24];
            v26 = v25 + 1;
            if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
              goto LABEL_50;
            v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
            *(_QWORD *)&a1[v24] = v26;
            if (v27 < 0)
            {
              v22 = v23++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_51;
          }
        case 6u:
          if ((v8 & 7) != 0)
            goto LABEL_54;
          v28 = 0;
          break;
        default:
LABEL_32:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_54:
          v33 = 0;
          goto LABEL_53;
      }
      while (1)
      {
        v29 = *v2;
        v30 = *(_QWORD *)&a1[v29];
        v31 = v30 + 1;
        if (v30 == -1 || v31 > *(_QWORD *)&a1[*v3])
          break;
        v32 = *(char *)(*(_QWORD *)&a1[*v5] + v30);
        *(_QWORD *)&a1[v29] = v31;
        if (v32 < 0)
        {
          v22 = v28++ > 8;
          if (!v22)
            continue;
        }
        goto LABEL_51;
      }
LABEL_50:
      a1[*v4] = 1;
LABEL_51:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v33 = a1[*v4] == 0;
LABEL_53:
  PBReaderRecallMark();
  return v33;
}

BOOL GEOPDResultRefinementMetadataSortIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  int v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  int v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  int v42;
  _BOOL8 v43;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0)
            goto LABEL_66;
          v17 = 0;
          while (1)
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
              goto LABEL_62;
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if (v21 < 0)
            {
              v22 = v17++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_63;
          }
        case 2u:
          if (v15 == 2)
            goto LABEL_28;
          goto LABEL_66;
        case 3u:
          if ((v8 & 7) != 0)
            goto LABEL_66;
          v23 = 0;
          while (1)
          {
            v24 = *v2;
            v25 = *(_QWORD *)&a1[v24];
            v26 = v25 + 1;
            if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
              goto LABEL_62;
            v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
            *(_QWORD *)&a1[v24] = v26;
            if (v27 < 0)
            {
              v22 = v23++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_63;
          }
        case 4u:
          if ((v8 & 7) != 0)
            goto LABEL_66;
          v28 = 0;
          while (1)
          {
            v29 = *v2;
            v30 = *(_QWORD *)&a1[v29];
            v31 = v30 + 1;
            if (v30 == -1 || v31 > *(_QWORD *)&a1[*v3])
              goto LABEL_62;
            v32 = *(char *)(*(_QWORD *)&a1[*v5] + v30);
            *(_QWORD *)&a1[v29] = v31;
            if (v32 < 0)
            {
              v22 = v28++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_63;
          }
        case 5u:
          if ((v8 & 7) != 0)
            goto LABEL_66;
          v33 = 0;
          while (1)
          {
            v34 = *v2;
            v35 = *(_QWORD *)&a1[v34];
            v36 = v35 + 1;
            if (v35 == -1 || v36 > *(_QWORD *)&a1[*v3])
              goto LABEL_62;
            v37 = *(char *)(*(_QWORD *)&a1[*v5] + v35);
            *(_QWORD *)&a1[v34] = v36;
            if (v37 < 0)
            {
              v22 = v33++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_63;
          }
        case 6u:
          if ((v8 & 7) != 0)
            goto LABEL_66;
          v38 = 0;
          break;
        default:
LABEL_28:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_66:
          v43 = 0;
          goto LABEL_65;
      }
      while (1)
      {
        v39 = *v2;
        v40 = *(_QWORD *)&a1[v39];
        v41 = v40 + 1;
        if (v40 == -1 || v41 > *(_QWORD *)&a1[*v3])
          break;
        v42 = *(char *)(*(_QWORD *)&a1[*v5] + v40);
        *(_QWORD *)&a1[v39] = v41;
        if (v42 < 0)
        {
          v22 = v38++ > 8;
          if (!v22)
            continue;
        }
        goto LABEL_63;
      }
LABEL_62:
      a1[*v4] = 1;
LABEL_63:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v43 = a1[*v4] == 0;
LABEL_65:
  PBReaderRecallMark();
  return v43;
}

void sub_1892BBADC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDResultRefinementMetadataIsDirty(uint64_t a1)
{
  unsigned int v2;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v2 = *(unsigned __int8 *)(a1 + 56);
  if ((v2 & 0x10) != 0)
    return 1;
  if ((v2 & 4) != 0)
  {
    if (GEOPDResultRefinementMetadataDefaultIsDirty(*(_QWORD *)(a1 + 24)))
      return 1;
    v2 = *(unsigned __int8 *)(a1 + 56);
  }
  return (v2 >> 3) & 1;
}

os_unfair_lock_s *GEOPDResultRefinementMetadataIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOPDResultRefinementMetadataIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 12);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_1892BBE4C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892BC124(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892BC3AC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDResultRefinementMetadataDefaultReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  char v15;
  unsigned __int8 v16;
  int *v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  BOOL v28;
  int v29;
  unint64_t v31;
  BOOL v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  void *v40;
  int v41;
  char v42;
  unsigned int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  char v48;
  void *v49;
  char v50;
  unsigned int v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  char v55;
  char v56;
  unsigned int v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  char v62;
  char v63;
  uint64_t v64;
  char v65;
  int v66;
  char v67;
  void *v68;
  int v70;
  int *v71;
  char v72;
  char v73;
  char v74;
  BOOL v75;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 52);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 48));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = vaddv_s16((int16x4_t)(*(_QWORD *)&vshl_u16((uint16x4_t)(*(_QWORD *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 72)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFDFFFBFFFCFFFALL) & 0xFF01FF01FF01FF01));
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v11;
        v12 = v7;
        goto LABEL_8;
      case -3:
        v9 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v11 > 1;
        v15 = v14 & ~(_BYTE)v7;
        v16 = v14 | v7;
        v72 = v15 | v8;
        v73 = v16 | v15 | v8;
        if (((v16 | v9) & 1) != 0)
          v17 = 0;
        else
          v17 = a3;
        v74 = (v17 == 0) | v16;
        v75 = v16;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_7:
        v12 = v7;
        v13 = v8;
LABEL_8:
        ++v10;
        v7 = v12;
        v8 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v19))
      goto LABEL_101;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0)
        goto LABEL_23;
      v21 += 7;
      v28 = v22++ >= 9;
      if (v28)
      {
        v23 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_25;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_23:
    v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_25:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_101:
      v70 = 1;
      goto LABEL_102;
    }
    v31 = v23 >> 3;
    v32 = v75;
    if ((v74 & 1) == 0)
    {
      v33 = v17;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if (!v32)
          goto LABEL_77;
        if ((*(_BYTE *)(a1 + 72) & 0x10) == 0)
        {
          PBReaderReadString();
          v37 = objc_claimAutoreleasedReturnValue();
          v38 = 24;
          goto LABEL_60;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_118;
        v65 = 8 * *(_BYTE *)(a1 + 72);
        goto LABEL_98;
      case 2:
        if ((v9 & 1) == 0)
          goto LABEL_77;
        v42 = 0;
        v43 = 0;
        v44 = 0;
        *(_BYTE *)(a1 + 72) |= 1u;
        while (2)
        {
          v45 = *v18;
          v46 = *(_QWORD *)(v3 + v45);
          v47 = v46 + 1;
          if (v46 == -1 || v47 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v19) = 1;
          }
          else
          {
            v48 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v46);
            *(_QWORD *)(v3 + v45) = v47;
            v44 |= (unint64_t)(v48 & 0x7F) << v42;
            if (v48 < 0)
            {
              v42 += 7;
              v28 = v43++ >= 9;
              if (v28)
              {
                LODWORD(v44) = 0;
                goto LABEL_82;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v19))
          LODWORD(v44) = 0;
LABEL_82:
        v64 = 60;
        goto LABEL_87;
      case 3:
        if (!v32)
          goto LABEL_77;
        if ((*(_BYTE *)(a1 + 72) & 0x40) == 0)
        {
          PBReaderReadString();
          v37 = objc_claimAutoreleasedReturnValue();
          v38 = 40;
          goto LABEL_60;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_118;
        v65 = 2 * *(_BYTE *)(a1 + 72);
        goto LABEL_98;
      case 4:
        if (!v32)
          goto LABEL_77;
        if ((*(_BYTE *)(a1 + 72) & 0x20) == 0)
        {
          PBReaderReadData();
          v37 = objc_claimAutoreleasedReturnValue();
          v38 = 32;
LABEL_60:
          v49 = *(void **)(a1 + v38);
          *(_QWORD *)(a1 + v38) = v37;

          --v10;
LABEL_99:
          v19 = (int *)MEMORY[0x1E0D82BC8];
          goto LABEL_100;
        }
        if ((PBReaderSkipValueWithTag() & 1) != 0)
        {
          v65 = 4 * *(_BYTE *)(a1 + 72);
LABEL_98:
          v10 += v65 >> 7;
          goto LABEL_99;
        }
LABEL_118:
        v70 = 0;
        v71 = &OBJC_IVAR___GEOPDRelatedEntitySection__reader;
        v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_103:
        if ((v72 & 1) != 0)
LABEL_104:
          *(_BYTE *)(a1 + v71[46]) |= 8u;
        if (v75 || (v70 & 1) == 0)
        {
          *(_BYTE *)(a1 + v71[46]) |= 0x10u;
          *(_BYTE *)(a1 + v71[46]) |= 0x40u;
          *(_BYTE *)(a1 + v71[46]) |= 0x20u;
        }
        else if (v17)
        {
          while (1)
          {
            v66 = *v17++;
            v67 = 16;
            switch(v66)
            {
              case 0:
                goto LABEL_112;
              case 1:
                goto LABEL_111;
              case 3:
                v67 = 64;
                goto LABEL_111;
              case 4:
                v67 = 32;
LABEL_111:
                *(_BYTE *)(a1 + v71[46]) |= v67;
                break;
              default:
                continue;
            }
          }
        }
LABEL_112:
        if (v70)
          v3 = *(_BYTE *)(v3 + *v19) == 0;
        else
          v3 = 0;
        if (v75)
        {
          v68 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      case 5:
        if ((v9 & 1) == 0)
          goto LABEL_77;
        v50 = 0;
        v51 = 0;
        v44 = 0;
        *(_BYTE *)(a1 + 72) |= 2u;
        while (2)
        {
          v52 = *v18;
          v53 = *(_QWORD *)(v3 + v52);
          v54 = v53 + 1;
          if (v53 == -1 || v54 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v19) = 1;
          }
          else
          {
            v55 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v53);
            *(_QWORD *)(v3 + v52) = v54;
            v44 |= (unint64_t)(v55 & 0x7F) << v50;
            if (v55 < 0)
            {
              v50 += 7;
              v28 = v51++ >= 9;
              if (v28)
              {
                LODWORD(v44) = 0;
                goto LABEL_86;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v19))
          LODWORD(v44) = 0;
LABEL_86:
        v64 = 64;
LABEL_87:
        *(_DWORD *)(a1 + v64) = v44;
        goto LABEL_100;
      case 6:
        if ((v9 & 1) == 0)
          goto LABEL_77;
        v56 = 0;
        v57 = 0;
        v58 = 0;
        *(_BYTE *)(a1 + 72) |= 4u;
        while (2)
        {
          v59 = *v18;
          v60 = *(_QWORD *)(v3 + v59);
          v61 = v60 + 1;
          if (v60 == -1 || v61 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v19) = 1;
          }
          else
          {
            v62 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v60);
            *(_QWORD *)(v3 + v59) = v61;
            v58 |= (unint64_t)(v62 & 0x7F) << v56;
            if (v62 < 0)
            {
              v56 += 7;
              v28 = v57++ >= 9;
              if (v28)
              {
                v58 = 0;
                goto LABEL_91;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v19))
          v58 = 0;
LABEL_91:
        *(_BYTE *)(a1 + 68) = v58 != 0;
        goto LABEL_100;
      default:
        if ((v72 & 1) == 0 || (*(_BYTE *)(a1 + 72) & 8) != 0)
        {
LABEL_77:
          v63 = PBReaderSkipValueWithTag();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if ((v63 & 1) == 0)
          {
            v70 = 0;
LABEL_102:
            v71 = &OBJC_IVAR___GEOPDRelatedEntitySection__reader;
            goto LABEL_103;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v39 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v40 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v39;

          }
          v41 = PBUnknownFieldAdd();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if (!v41)
          {
            v70 = 0;
            v71 = &OBJC_IVAR___GEOPDRelatedEntitySection__reader;
            goto LABEL_104;
          }
        }
LABEL_100:
        if (!(v73 & 1 | (v10 != 0)))
          goto LABEL_101;
        continue;
    }
  }
}

void sub_1892BCE24(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892BCF60(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892BD934(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDResultRefinementMetadataDefaultReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 52))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDResultRefinementMetadataDefaultReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 52) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDResultRefinementMetadataDefaultReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDResultRefinementMetadataDefaultReadAllFrom_initialTag;
  Specified = GEOPDResultRefinementMetadataDefaultReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_1892BDABC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDResultRefinementMetadataDefaultReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOPDResultRefinementMetadataDefaultReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1892BDB1C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892BDD40(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDResultRefinementMetadataDefaultIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v2 = *(unsigned __int8 *)(a1 + 72) > 0xFu;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return v2;
}

void sub_1892BE128(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892BE538(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDResultRefinementMetadataSortReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  id v25;
  void *v26;
  uint64_t v27;
  void *v28;
  char v29;
  unsigned int v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  char v35;
  unsigned int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  char v41;
  char v42;
  unsigned int v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  char v47;
  char v48;
  unsigned int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  uint64_t v55;
  BOOL v56;
  uint64_t v57;
  _BOOL8 v58;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        switch((v10 >> 3))
        {
          case 1u:
            v18 = 0;
            v19 = 0;
            v20 = 0;
            *(_BYTE *)(a1 + 40) |= 4u;
            while (1)
            {
              v21 = *v4;
              v22 = *(_QWORD *)&v3[v21];
              v23 = v22 + 1;
              if (v22 == -1 || v23 > *(_QWORD *)&v3[*v5])
                break;
              v24 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v22);
              *(_QWORD *)&v3[v21] = v23;
              v20 |= (unint64_t)(v24 & 0x7F) << v18;
              if ((v24 & 0x80) == 0)
                goto LABEL_61;
              v18 += 7;
              v15 = v19++ >= 9;
              if (v15)
              {
                LODWORD(v20) = 0;
                goto LABEL_63;
              }
            }
            v3[*v6] = 1;
LABEL_61:
            if (v3[*v6])
              LODWORD(v20) = 0;
LABEL_63:
            v55 = 32;
            goto LABEL_76;
          case 2u:
            PBReaderReadString();
            v27 = objc_claimAutoreleasedReturnValue();
            v28 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v27;

            continue;
          case 3u:
            v29 = 0;
            v30 = 0;
            v20 = 0;
            *(_BYTE *)(a1 + 40) |= 1u;
            while (2)
            {
              v31 = *v4;
              v32 = *(_QWORD *)&v3[v31];
              v33 = v32 + 1;
              if (v32 == -1 || v33 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v34 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v32);
                *(_QWORD *)&v3[v31] = v33;
                v20 |= (unint64_t)(v34 & 0x7F) << v29;
                if (v34 < 0)
                {
                  v29 += 7;
                  v15 = v30++ >= 9;
                  if (v15)
                  {
                    LODWORD(v20) = 0;
                    goto LABEL_67;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              LODWORD(v20) = 0;
LABEL_67:
            v55 = 24;
            goto LABEL_76;
          case 4u:
            v35 = 0;
            v36 = 0;
            v37 = 0;
            *(_BYTE *)(a1 + 40) |= 0x10u;
            while (2)
            {
              v38 = *v4;
              v39 = *(_QWORD *)&v3[v38];
              v40 = v39 + 1;
              if (v39 == -1 || v40 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v41 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v39);
                *(_QWORD *)&v3[v38] = v40;
                v37 |= (unint64_t)(v41 & 0x7F) << v35;
                if (v41 < 0)
                {
                  v35 += 7;
                  v15 = v36++ >= 9;
                  if (v15)
                  {
                    v37 = 0;
                    goto LABEL_71;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              v37 = 0;
LABEL_71:
            v56 = v37 != 0;
            v57 = 37;
            goto LABEL_81;
          case 5u:
            v42 = 0;
            v43 = 0;
            v20 = 0;
            *(_BYTE *)(a1 + 40) |= 2u;
            while (2)
            {
              v44 = *v4;
              v45 = *(_QWORD *)&v3[v44];
              v46 = v45 + 1;
              if (v45 == -1 || v46 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v47 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v45);
                *(_QWORD *)&v3[v44] = v46;
                v20 |= (unint64_t)(v47 & 0x7F) << v42;
                if (v47 < 0)
                {
                  v42 += 7;
                  v15 = v43++ >= 9;
                  if (v15)
                  {
                    LODWORD(v20) = 0;
                    goto LABEL_75;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              LODWORD(v20) = 0;
LABEL_75:
            v55 = 28;
LABEL_76:
            *(_DWORD *)(a1 + v55) = v20;
            continue;
          case 6u:
            v48 = 0;
            v49 = 0;
            v50 = 0;
            *(_BYTE *)(a1 + 40) |= 8u;
            break;
          default:
            if (!*(_QWORD *)(a1 + 8))
            {
              v25 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
              v26 = *(void **)(a1 + 8);
              *(_QWORD *)(a1 + 8) = v25;

            }
            if (!PBUnknownFieldAdd())
              goto LABEL_84;
            continue;
        }
        while (1)
        {
          v51 = *v4;
          v52 = *(_QWORD *)&v3[v51];
          v53 = v52 + 1;
          if (v52 == -1 || v53 > *(_QWORD *)&v3[*v5])
            break;
          v54 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v52);
          *(_QWORD *)&v3[v51] = v53;
          v50 |= (unint64_t)(v54 & 0x7F) << v48;
          if ((v54 & 0x80) == 0)
            goto LABEL_78;
          v48 += 7;
          v15 = v49++ >= 9;
          if (v15)
          {
            v50 = 0;
            goto LABEL_80;
          }
        }
        v3[*v6] = 1;
LABEL_78:
        if (v3[*v6])
          v50 = 0;
LABEL_80:
        v56 = v50 != 0;
        v57 = 36;
LABEL_81:
        *(_BYTE *)(a1 + v57) = v56;
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v58 = v3[*v6] == 0;
  }
  else
  {
LABEL_84:
    v58 = 0;
  }
  objc_sync_exit(v3);

  return v58;
}

void sub_1892BF6A8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDResultRefinementMetadataSortReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOPDResultRefinementMetadataSortReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1892BF708(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892C0044(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDResultRefinementMultiSelectReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  int *v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  BOOL v28;
  int v29;
  unint64_t v31;
  BOOL v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  void *v40;
  int v41;
  GEOPDResultRefinementMultiSelectElement *v42;
  char v43;
  unsigned int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  char v50;
  unsigned int v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  char v55;
  char v56;
  unsigned int v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  char v62;
  void *v63;
  char v64;
  uint64_t v65;
  __int16 v66;
  int v67;
  __int16 v68;
  void *v69;
  int v71;
  int *v72;
  char v73;
  char v74;
  char v75;
  char v76;
  char v77;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 60);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 56));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 80)), (uint16x4_t)0xFFFAFFFCFFFBFFF9), (int8x8_t)0x1000100010001))+ ((*(_WORD *)(a1 + 80) >> 3) & 1));
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v7 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 > 2;
        v73 = v16 & ~(_BYTE)v11 | v9;
        v74 = v7;
        v75 = v16 | v11 | v73;
        if ((((v16 | v11) | v7) & 1) != 0)
          v17 = 0;
        else
          v17 = a3;
        v76 = (v17 == 0) | v16 | v11;
        v77 = v16 | v11;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v8;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (*(_QWORD *)(v3 + *v18) < *(_QWORD *)(v3 + *v6) && !*(_BYTE *)(v3 + *v19))
  {
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0)
        goto LABEL_25;
      v21 += 7;
      v28 = v22++ >= 9;
      if (v28)
      {
        v23 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_25:
    v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_27:
    if (v29 || (v23 & 7) == 4)
      break;
    v31 = v23 >> 3;
    v32 = v77;
    if ((v76 & 1) == 0)
    {
      v33 = v17;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if (!v32)
          goto LABEL_84;
        if ((*(_WORD *)(a1 + 80) & 0x20) == 0)
        {
          PBReaderReadString();
          v37 = objc_claimAutoreleasedReturnValue();
          v38 = 32;
          goto LABEL_83;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_127;
        v66 = *(_WORD *)(a1 + 80) << 10;
        goto LABEL_105;
      case 2:
        if (!v32 || (*(_WORD *)(a1 + 80) & 0x80) != 0)
          goto LABEL_84;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_127;
        v42 = objc_alloc_init(GEOPDResultRefinementMultiSelectElement);
        if (GEOPDResultRefinementMultiSelectElementReadAllFrom((uint64_t)v42, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          -[GEOPDResultRefinementMultiSelect _addNoFlagsMultiSelect:](a1, v42);

LABEL_106:
          v19 = (int *)MEMORY[0x1E0D82BC8];
          goto LABEL_107;
        }

LABEL_127:
        v71 = 0;
        v72 = &OBJC_IVAR___GEOPDRelatedEntitySection__reader;
        v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_110:
        if ((v73 & 1) != 0)
LABEL_111:
          *(_WORD *)(a1 + v72[48]) |= 8u;
        if (v77 & 1 | ((v71 & 1) == 0))
        {
          *(_WORD *)(a1 + v72[48]) |= 0x20u;
          *(_WORD *)(a1 + v72[48]) |= 0x80u;
          *(_WORD *)(a1 + v72[48]) |= 0x10u;
          *(_WORD *)(a1 + v72[48]) |= 0x40u;
        }
        else if (v17)
        {
          while (1)
          {
            v67 = *v17++;
            v68 = 32;
            switch(v67)
            {
              case 0:
                goto LABEL_120;
              case 1:
                goto LABEL_119;
              case 2:
                v68 = 128;
                goto LABEL_119;
              case 6:
                v68 = 16;
                goto LABEL_119;
              case 7:
                v68 = 64;
LABEL_119:
                *(_WORD *)(a1 + v72[48]) |= v68;
                break;
              default:
                continue;
            }
          }
        }
LABEL_120:
        if (v71)
          v3 = *(_BYTE *)(v3 + *v19) == 0;
        else
          v3 = 0;
        if ((v77 & 1) != 0)
        {
          v69 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      case 3:
        if ((v74 & 1) == 0)
          goto LABEL_84;
        v43 = 0;
        v44 = 0;
        v45 = 0;
        *(_WORD *)(a1 + 80) |= 2u;
        while (2)
        {
          v46 = *v18;
          v47 = *(_QWORD *)(v3 + v46);
          v48 = v47 + 1;
          if (v47 == -1 || v48 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v19) = 1;
          }
          else
          {
            v49 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v47);
            *(_QWORD *)(v3 + v46) = v48;
            v45 |= (unint64_t)(v49 & 0x7F) << v43;
            if (v49 < 0)
            {
              v43 += 7;
              v28 = v44++ >= 9;
              if (v28)
              {
                LODWORD(v45) = 0;
                goto LABEL_89;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v19))
          LODWORD(v45) = 0;
LABEL_89:
        v65 = 72;
        goto LABEL_94;
      case 4:
        if ((v74 & 1) == 0)
          goto LABEL_84;
        v50 = 0;
        v51 = 0;
        v45 = 0;
        *(_WORD *)(a1 + 80) |= 1u;
        while (2)
        {
          v52 = *v18;
          v53 = *(_QWORD *)(v3 + v52);
          v54 = v53 + 1;
          if (v53 == -1 || v54 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v19) = 1;
          }
          else
          {
            v55 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v53);
            *(_QWORD *)(v3 + v52) = v54;
            v45 |= (unint64_t)(v55 & 0x7F) << v50;
            if (v55 < 0)
            {
              v50 += 7;
              v28 = v51++ >= 9;
              if (v28)
              {
                LODWORD(v45) = 0;
                goto LABEL_93;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v19))
          LODWORD(v45) = 0;
LABEL_93:
        v65 = 68;
LABEL_94:
        *(_DWORD *)(a1 + v65) = v45;
        goto LABEL_107;
      case 5:
        if ((v74 & 1) == 0)
          goto LABEL_84;
        v56 = 0;
        v57 = 0;
        v58 = 0;
        *(_WORD *)(a1 + 80) |= 4u;
        while (2)
        {
          v59 = *v18;
          v60 = *(_QWORD *)(v3 + v59);
          v61 = v60 + 1;
          if (v60 == -1 || v61 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v19) = 1;
          }
          else
          {
            v62 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v60);
            *(_QWORD *)(v3 + v59) = v61;
            v58 |= (unint64_t)(v62 & 0x7F) << v56;
            if (v62 < 0)
            {
              v56 += 7;
              v28 = v57++ >= 9;
              if (v28)
              {
                v58 = 0;
                goto LABEL_98;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v19))
          v58 = 0;
LABEL_98:
        *(_BYTE *)(a1 + 76) = v58 != 0;
        goto LABEL_107;
      case 6:
        if (!v32)
          goto LABEL_84;
        if ((*(_WORD *)(a1 + 80) & 0x10) == 0)
        {
          PBReaderReadString();
          v37 = objc_claimAutoreleasedReturnValue();
          v38 = 24;
          goto LABEL_83;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_127;
        v66 = *(_WORD *)(a1 + 80) << 11;
        goto LABEL_105;
      case 7:
        if (!v32)
          goto LABEL_84;
        if ((*(_WORD *)(a1 + 80) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_127;
          v66 = *(_WORD *)(a1 + 80) << 9;
LABEL_105:
          v8 += v66 >> 15;
        }
        else
        {
          PBReaderReadString();
          v37 = objc_claimAutoreleasedReturnValue();
          v38 = 40;
LABEL_83:
          v63 = *(void **)(a1 + v38);
          *(_QWORD *)(a1 + v38) = v37;

          --v8;
        }
        goto LABEL_106;
      default:
        if ((v73 & 1) == 0 || (*(_WORD *)(a1 + 80) & 8) != 0)
        {
LABEL_84:
          v64 = PBReaderSkipValueWithTag();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if ((v64 & 1) == 0)
          {
            v71 = 0;
LABEL_109:
            v72 = &OBJC_IVAR___GEOPDRelatedEntitySection__reader;
            goto LABEL_110;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v39 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v40 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v39;

          }
          v41 = PBUnknownFieldAdd();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if (!v41)
          {
            v71 = 0;
            v72 = &OBJC_IVAR___GEOPDRelatedEntitySection__reader;
            goto LABEL_111;
          }
        }
LABEL_107:
        if (!(v75 & 1 | (v8 != 0)))
          goto LABEL_108;
        break;
    }
  }
LABEL_108:
  v71 = 1;
  goto LABEL_109;
}

void sub_1892C0A00(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892C0C54(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892C0DAC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892C1420(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDResultRefinementMultiSelectCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _BYTE v10[128];
  uint64_t v11;

  v11 = *MEMORY[0x1E0C80C00];
  v6 = 0u;
  v7 = 0u;
  v8 = 0u;
  v9 = 0u;
  v1 = *(id *)(a1 + 48);
  v2 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
  if (v2)
  {
    v3 = v2;
    v4 = *(_QWORD *)v7;
    do
    {
      v5 = 0;
      do
      {
        if (*(_QWORD *)v7 != v4)
          objc_enumerationMutation(v1);
        -[GEOPDResultRefinementMultiSelectElement readAll:](*(_QWORD *)(*((_QWORD *)&v6 + 1) + 8 * v5++), 1);
      }
      while (v3 != v5);
      v3 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
    }
    while (v3);
  }

}

unint64_t GEOPDResultRefinementMultiSelectReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 60))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDResultRefinementMultiSelectReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 60) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDResultRefinementMultiSelectReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDResultRefinementMultiSelectReadAllFrom_initialTag;
  Specified = GEOPDResultRefinementMultiSelectReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDResultRefinementMultiSelectCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_1892C1770(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892C1A48(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892C1D5C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892C229C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDResultRefinementMultiSelectElementReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  const __int16 *v12;
  uint16x4_t v13;
  int16x4_t v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  int *v20;
  int *v21;
  int *v22;
  int *v23;
  char v24;
  unsigned int v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  BOOL v31;
  int v32;
  unint64_t v34;
  BOOL v35;
  int *v36;
  int v37;
  int v38;
  BOOL v39;
  uint64_t v40;
  void *v41;
  id v42;
  void *v43;
  int v44;
  char v45;
  unsigned int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  char v51;
  GEOStyleAttributes *v52;
  uint64_t v53;
  char v54;
  unsigned int v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  char v60;
  char v61;
  unsigned int v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  char v66;
  char v67;
  unsigned int v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  char v72;
  char v73;
  uint64_t v74;
  __int16 v75;
  int v76;
  __int16 v77;
  void *v78;
  int v80;
  int *v81;
  char v82;
  char v83;
  char v84;
  char v85;
  char v86;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 52);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 48));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = (const __int16 *)(a1 + 76);
  v13 = (uint16x4_t)vld1_dup_s16(v12);
  v14 = (int16x4_t)vand_s8((int8x8_t)vshl_u16(v13, (uint16x4_t)0xFFFCFFFAFFFBFFF9), (int8x8_t)0x1000100010001);
  v14.i16[0] = vaddv_s16(v14);
  v15 = v14.i32[0];
  while (2)
  {
    v16 = 1;
    v17 = 1;
    v18 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v15;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v17 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v19 = v15 > 1;
        v82 = v19 & ~(_BYTE)v11 | v9;
        v83 = v8;
        v84 = v19 | v11 | v82;
        if ((((v19 | v11) | v8) & 1) != 0)
          v20 = 0;
        else
          v20 = a3;
        v85 = (v20 == 0) | v19 | v11;
        v86 = v19 | v11;
        v21 = (int *)MEMORY[0x1E0D82BF0];
        v22 = (int *)MEMORY[0x1E0D82BC8];
        v23 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v15;
LABEL_7:
        v16 = v9;
LABEL_8:
        v17 = v10;
        v18 = v11;
LABEL_10:
        ++v7;
        v9 = v16;
        v10 = v17;
        v11 = v18;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v21) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v22))
      goto LABEL_120;
    v24 = 0;
    v25 = 0;
    v26 = 0;
    while (1)
    {
      v27 = *v21;
      v28 = *(_QWORD *)(v3 + v27);
      v29 = v28 + 1;
      if (v28 == -1 || v29 > *(_QWORD *)(v3 + *v6))
        break;
      v30 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v28);
      *(_QWORD *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0)
        goto LABEL_25;
      v24 += 7;
      v31 = v25++ >= 9;
      if (v31)
      {
        v26 = 0;
        v32 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v22) = 1;
LABEL_25:
    v32 = *(unsigned __int8 *)(v3 + *v22);
    if (*(_BYTE *)(v3 + *v22))
      v26 = 0;
LABEL_27:
    if (v32 || (v26 & 7) == 4)
    {
LABEL_120:
      v80 = 1;
      goto LABEL_121;
    }
    v34 = v26 >> 3;
    v35 = v86;
    if ((v85 & 1) == 0)
    {
      v36 = v20;
      do
      {
        v38 = *v36++;
        v37 = v38;
        v35 = v38 != 0;
        if (v38)
          v39 = v37 == (_DWORD)v34;
        else
          v39 = 1;
      }
      while (!v39);
    }
    switch((int)v34)
    {
      case 1:
        if (!v35)
          goto LABEL_92;
        if ((*(_WORD *)(a1 + 76) & 0x20) == 0)
        {
          PBReaderReadString();
          v40 = objc_claimAutoreleasedReturnValue();
          v41 = *(void **)(a1 + 24);
          *(_QWORD *)(a1 + 24) = v40;
          goto LABEL_67;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_138;
        v75 = *(_WORD *)(a1 + 76) << 10;
        goto LABEL_117;
      case 2:
        if ((v83 & 1) == 0)
          goto LABEL_92;
        v45 = 0;
        v46 = 0;
        v47 = 0;
        *(_WORD *)(a1 + 76) |= 8u;
        while (2)
        {
          v48 = *v21;
          v49 = *(_QWORD *)(v3 + v48);
          v50 = v49 + 1;
          if (v49 == -1 || v50 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v22) = 1;
          }
          else
          {
            v51 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v49);
            *(_QWORD *)(v3 + v48) = v50;
            v47 |= (unint64_t)(v51 & 0x7F) << v45;
            if (v51 < 0)
            {
              v45 += 7;
              v31 = v46++ >= 9;
              if (v31)
              {
                v47 = 0;
                goto LABEL_97;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v22))
          v47 = 0;
LABEL_97:
        *(_BYTE *)(a1 + 72) = v47 != 0;
        goto LABEL_119;
      case 3:
        if (!v35)
          goto LABEL_92;
        if ((*(_WORD *)(a1 + 76) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_138;
          v75 = *(_WORD *)(a1 + 76) << 8;
          goto LABEL_117;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_138;
        v52 = objc_alloc_init(GEOStyleAttributes);
        if (!GEOStyleAttributesReadAllFrom((uint64_t)v52, (void *)v3))
          goto LABEL_137;
        PBReaderRecallMark();
        v53 = 40;
        goto LABEL_66;
      case 4:
        if (!v35)
          goto LABEL_92;
        if ((*(_WORD *)(a1 + 76) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_138;
          v75 = *(_WORD *)(a1 + 76) << 9;
LABEL_117:
          v7 += v75 >> 15;
LABEL_118:
          v22 = (int *)MEMORY[0x1E0D82BC8];
          goto LABEL_119;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_138;
        v52 = objc_alloc_init(GEOPDResultRefinementMetadata);
        if (GEOPDResultRefinementMetadataReadAllFrom((uint64_t)v52, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          v53 = 32;
LABEL_66:
          v41 = *(void **)(a1 + v53);
          *(_QWORD *)(a1 + v53) = v52;
LABEL_67:

          --v7;
          goto LABEL_118;
        }
LABEL_137:

LABEL_138:
        v80 = 0;
        v81 = &OBJC_IVAR___GEOPDRelatedEntitySection__reader;
        v22 = (int *)MEMORY[0x1E0D82BC8];
LABEL_122:
        if ((v82 & 1) != 0)
LABEL_123:
          *(_WORD *)(a1 + v81[59]) |= 0x10u;
        if (v86 & 1 | ((v80 & 1) == 0))
        {
          *(_WORD *)(a1 + v81[59]) |= 0x20u;
          *(_WORD *)(a1 + v81[59]) |= 0x80u;
          *(_WORD *)(a1 + v81[59]) |= 0x40u;
        }
        else if (v20)
        {
          while (1)
          {
            v76 = *v20++;
            v77 = 32;
            switch(v76)
            {
              case 0:
                goto LABEL_131;
              case 1:
                goto LABEL_130;
              case 3:
                v77 = 128;
                goto LABEL_130;
              case 4:
                v77 = 64;
LABEL_130:
                *(_WORD *)(a1 + v81[59]) |= v77;
                break;
              default:
                continue;
            }
          }
        }
LABEL_131:
        if (v80)
          v3 = *(_BYTE *)(v3 + *v22) == 0;
        else
          v3 = 0;
        if ((v86 & 1) != 0)
        {
          v78 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      case 5:
        if ((v83 & 1) == 0)
          goto LABEL_92;
        v54 = 0;
        v55 = 0;
        v56 = 0;
        *(_WORD *)(a1 + 76) |= 1u;
        while (2)
        {
          v57 = *v21;
          v58 = *(_QWORD *)(v3 + v57);
          v59 = v58 + 1;
          if (v58 == -1 || v59 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v22) = 1;
          }
          else
          {
            v60 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v58);
            *(_QWORD *)(v3 + v57) = v59;
            v56 |= (unint64_t)(v60 & 0x7F) << v54;
            if (v60 < 0)
            {
              v54 += 7;
              v31 = v55++ >= 9;
              if (v31)
              {
                LODWORD(v56) = 0;
                goto LABEL_101;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v22))
          LODWORD(v56) = 0;
LABEL_101:
        v74 = 60;
        goto LABEL_110;
      case 6:
        if ((v83 & 1) == 0)
          goto LABEL_92;
        v61 = 0;
        v62 = 0;
        v56 = 0;
        *(_WORD *)(a1 + 76) |= 2u;
        while (2)
        {
          v63 = *v21;
          v64 = *(_QWORD *)(v3 + v63);
          v65 = v64 + 1;
          if (v64 == -1 || v65 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v22) = 1;
          }
          else
          {
            v66 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v64);
            *(_QWORD *)(v3 + v63) = v65;
            v56 |= (unint64_t)(v66 & 0x7F) << v61;
            if (v66 < 0)
            {
              v61 += 7;
              v31 = v62++ >= 9;
              if (v31)
              {
                LODWORD(v56) = 0;
                goto LABEL_105;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v22))
          LODWORD(v56) = 0;
LABEL_105:
        v74 = 64;
        goto LABEL_110;
      case 7:
        if ((v83 & 1) == 0)
          goto LABEL_92;
        v67 = 0;
        v68 = 0;
        v56 = 0;
        *(_WORD *)(a1 + 76) |= 4u;
        while (2)
        {
          v69 = *v21;
          v70 = *(_QWORD *)(v3 + v69);
          v71 = v70 + 1;
          if (v70 == -1 || v71 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v22) = 1;
          }
          else
          {
            v72 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v70);
            *(_QWORD *)(v3 + v69) = v71;
            v56 |= (unint64_t)(v72 & 0x7F) << v67;
            if (v72 < 0)
            {
              v67 += 7;
              v31 = v68++ >= 9;
              if (v31)
              {
                LODWORD(v56) = 0;
                goto LABEL_109;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v22))
          LODWORD(v56) = 0;
LABEL_109:
        v74 = 68;
LABEL_110:
        *(_DWORD *)(a1 + v74) = v56;
        goto LABEL_119;
      default:
        if ((v82 & 1) == 0 || (*(_WORD *)(a1 + 76) & 0x10) != 0)
        {
LABEL_92:
          v73 = PBReaderSkipValueWithTag();
          v22 = (int *)MEMORY[0x1E0D82BC8];
          if ((v73 & 1) == 0)
          {
            v80 = 0;
LABEL_121:
            v81 = &OBJC_IVAR___GEOPDRelatedEntitySection__reader;
            goto LABEL_122;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v42 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v43 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v42;

          }
          v44 = PBUnknownFieldAdd();
          v22 = (int *)MEMORY[0x1E0D82BC8];
          if (!v44)
          {
            v80 = 0;
            v81 = &OBJC_IVAR___GEOPDRelatedEntitySection__reader;
            goto LABEL_123;
          }
        }
LABEL_119:
        if (!(v84 & 1 | (v7 != 0)))
          goto LABEL_120;
        continue;
    }
  }
}

void sub_1892C2CE8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892C3338(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892C3430(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDResultRefinementMultiSelectElementReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 52))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDResultRefinementMultiSelectElementReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 52) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDResultRefinementMultiSelectElementReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDResultRefinementMultiSelectElementReadAllFrom_initialTag;
  Specified = GEOPDResultRefinementMultiSelectElementReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    objc_msgSend(*(id *)(a1 + 40), "readAll:", 1);
    objc_msgSend(*(id *)(a1 + 32), "readAll:", 1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_1892C36AC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892C3914(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892C3B5C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892C3FE8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDResultRefinementOpenOptionsReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  char v17;
  unsigned __int8 v18;
  char v19;
  int *v20;
  int *v21;
  int *v22;
  int *v23;
  char v24;
  unsigned int v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  int v32;
  unint64_t v34;
  BOOL v35;
  int *v36;
  int v37;
  int v38;
  BOOL v39;
  uint64_t v40;
  void *v41;
  GEOPDResultRefinementTime *v42;
  uint64_t v43;
  id v44;
  void *v45;
  int v46;
  char v47;
  char v48;
  int v49;
  char v50;
  void *v51;
  int v53;
  int *v54;
  char v55;
  char v56;
  char v57;
  BOOL v58;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 52);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 48));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = ((*(unsigned __int8 *)(a1 + 60) >> 3) & 1)
      + (*(_BYTE *)(a1 + 60) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 1) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 2) & 1);
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 > 1;
        v17 = v16 & ~(_BYTE)v11 | v9;
        v18 = v16 | v11;
        v55 = v17;
        v19 = v18 | v17;
        if (((v18 | v8) & 1) != 0)
          v20 = 0;
        else
          v20 = a3;
        v58 = v18;
        v56 = v19;
        v57 = (v20 == 0) | v18;
        v21 = (int *)MEMORY[0x1E0D82BF0];
        v22 = (int *)MEMORY[0x1E0D82BC8];
        v23 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v7;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v21) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v22))
      goto LABEL_73;
    v24 = 0;
    v25 = 0;
    v26 = 0;
    while (1)
    {
      v27 = *v21;
      v28 = *(_QWORD *)(v3 + v27);
      v29 = v28 + 1;
      if (v28 == -1 || v29 > *(_QWORD *)(v3 + *v6))
        break;
      v30 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v28);
      *(_QWORD *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0)
        goto LABEL_25;
      v24 += 7;
      if (v25++ >= 9)
      {
        v26 = 0;
        v32 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v22) = 1;
LABEL_25:
    v32 = *(unsigned __int8 *)(v3 + *v22);
    if (*(_BYTE *)(v3 + *v22))
      v26 = 0;
LABEL_27:
    if (v32 || (v26 & 7) == 4)
    {
LABEL_73:
      v53 = 1;
      goto LABEL_74;
    }
    v34 = v26 >> 3;
    v35 = v58;
    if ((v57 & 1) == 0)
    {
      v36 = v20;
      do
      {
        v38 = *v36++;
        v37 = v38;
        v35 = v38 != 0;
        if (v38)
          v39 = v37 == (_DWORD)v34;
        else
          v39 = 1;
      }
      while (!v39);
    }
    if ((_DWORD)v34 != 3)
      break;
    if (v35)
    {
      if ((*(_BYTE *)(a1 + 60) & 4) == 0)
      {
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_91;
        v42 = objc_alloc_init(GEOPDResultRefinementTime);
        if (!GEOPDResultRefinementTimeReadAllFrom((uint64_t)v42, (void *)v3, v10 & 1))
          goto LABEL_90;
        PBReaderRecallMark();
        v43 = 32;
LABEL_54:
        v41 = *(void **)(a1 + v43);
        *(_QWORD *)(a1 + v43) = v42;
        goto LABEL_55;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        goto LABEL_91;
      v48 = 32 * *(_BYTE *)(a1 + 60);
LABEL_70:
      v7 += v48 >> 7;
      goto LABEL_71;
    }
LABEL_62:
    v47 = PBReaderSkipValueWithTag();
    v22 = (int *)MEMORY[0x1E0D82BC8];
    if ((v47 & 1) == 0)
    {
      v53 = 0;
LABEL_74:
      v54 = &OBJC_IVAR___GEOPDRelatedEntitySection__reader;
      goto LABEL_75;
    }
LABEL_72:
    if (!(v56 & 1 | (v7 != 0)))
      goto LABEL_73;
  }
  if ((_DWORD)v34 != 2)
  {
    if ((_DWORD)v34 == 1)
    {
      if (v35)
      {
        if ((*(_BYTE *)(a1 + 60) & 2) == 0)
        {
          PBReaderReadString();
          v40 = objc_claimAutoreleasedReturnValue();
          v41 = *(void **)(a1 + 24);
          *(_QWORD *)(a1 + 24) = v40;
LABEL_55:

          --v7;
LABEL_71:
          v22 = (int *)MEMORY[0x1E0D82BC8];
          goto LABEL_72;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_91;
        v48 = *(_BYTE *)(a1 + 60) << 6;
        goto LABEL_70;
      }
    }
    else if ((v55 & 1) != 0 && (*(_BYTE *)(a1 + 60) & 1) == 0)
    {
      if (!*(_QWORD *)(a1 + 16))
      {
        v44 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v45 = *(void **)(a1 + 16);
        *(_QWORD *)(a1 + 16) = v44;

      }
      v46 = PBUnknownFieldAdd();
      v22 = (int *)MEMORY[0x1E0D82BC8];
      if (!v46)
      {
        v53 = 0;
        v54 = &OBJC_IVAR___GEOPDRelatedEntitySection__reader;
        goto LABEL_76;
      }
      goto LABEL_72;
    }
    goto LABEL_62;
  }
  if (!v35)
    goto LABEL_62;
  if ((*(_BYTE *)(a1 + 60) & 8) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0)
      goto LABEL_91;
    v48 = 16 * *(_BYTE *)(a1 + 60);
    goto LABEL_70;
  }
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_91;
  v42 = objc_alloc_init(GEOPDResultRefinementToggle);
  if (GEOPDResultRefinementToggleReadAllFrom((uint64_t)v42, (void *)v3, v10 & 1))
  {
    PBReaderRecallMark();
    v43 = 40;
    goto LABEL_54;
  }
LABEL_90:

LABEL_91:
  v53 = 0;
  v54 = &OBJC_IVAR___GEOPDRelatedEntitySection__reader;
  v22 = (int *)MEMORY[0x1E0D82BC8];
LABEL_75:
  if ((v55 & 1) == 0)
    goto LABEL_77;
LABEL_76:
  *(_BYTE *)(a1 + v54[70]) |= 1u;
LABEL_77:
  if (v58 || (v53 & 1) == 0)
  {
    *(_BYTE *)(a1 + v54[70]) |= 2u;
    *(_BYTE *)(a1 + v54[70]) |= 8u;
    *(_BYTE *)(a1 + v54[70]) |= 4u;
  }
  else if (v20)
  {
    while (1)
    {
      v49 = *v20++;
      v50 = 2;
      switch(v49)
      {
        case 0:
          goto LABEL_84;
        case 1:
          goto LABEL_83;
        case 2:
          v50 = 8;
          goto LABEL_83;
        case 3:
          v50 = 4;
LABEL_83:
          *(_BYTE *)(a1 + v54[70]) |= v50;
          break;
        default:
          continue;
      }
    }
  }
LABEL_84:
  if (v53)
    v3 = *(_BYTE *)(v3 + *v22) == 0;
  else
    v3 = 0;
  if (v58)
  {
    v51 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_1892C4734(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892C488C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892C4CCC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDResultRefinementOpenOptionsReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 52))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDResultRefinementOpenOptionsReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 52) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDResultRefinementOpenOptionsReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDResultRefinementOpenOptionsReadAllFrom_initialTag;
  Specified = GEOPDResultRefinementOpenOptionsReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    -[GEOPDResultRefinementToggle readAll:](*(_QWORD *)(a1 + 40), 1);
    -[GEOPDResultRefinementTime readAll:](*(_QWORD *)(a1 + 32), 1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_1892C4F48(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892C50E4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDResultRefinementOpenOptionsIsDirty(uint64_t a1)
{
  char v2;
  os_unfair_lock_s *v4;
  os_unfair_lock_s *v5;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v2 = *(_BYTE *)(a1 + 60);
  if ((v2 & 0x12) != 0)
    return 1;
  if ((*(_BYTE *)(a1 + 60) & 8) != 0)
  {
    if ((GEOPDResultRefinementToggleIsDirty(*(os_unfair_lock_s **)(a1 + 40)) & 1) != 0)
      return 1;
    v2 = *(_BYTE *)(a1 + 60);
  }
  if ((v2 & 4) == 0)
    return 0;
  v4 = *(os_unfair_lock_s **)(a1 + 32);
  if (!v4)
    return 0;
  os_unfair_lock_lock_with_options();
  v5 = _GEOPDResultRefinementTimeIsDirty((uint64_t)v4);
  os_unfair_lock_unlock(v4 + 14);
  return (uint64_t)v5;
}

void sub_1892C5334(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892C5704(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDResultRefinementQueryReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  int *v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  int *v18;
  int *v19;
  int *v20;
  int *v21;
  char v22;
  unsigned int v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  BOOL v29;
  int v30;
  unint64_t v32;
  BOOL v33;
  int *v34;
  int v35;
  int v36;
  BOOL v37;
  GEOPDResultRefinement *v38;
  id v39;
  void *v40;
  int v41;
  void *v42;
  char v43;
  unsigned int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  char v50;
  int v51;
  char v52;
  void *v53;
  int v55;
  int *v56;
  char v57;
  char v58;
  char v59;
  char v60;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 52);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 48));
  v7 = v6;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = vaddv_s16((int16x4_t)(*(_QWORD *)&vshl_u16((uint16x4_t)(*(_QWORD *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 64)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFFFFFEFFFCFFFDLL) & 0xFF01FF01FF01FF01));
  while (2)
  {
    v14 = 1;
    v15 = 1;
    v16 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v13;
        goto LABEL_8;
      case -3:
        v9 = 1;
        goto LABEL_7;
      case -2:
        v15 = v11;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v17 = v13 > 1;
        v57 = v17 & ~(_BYTE)v12 | v10;
        v58 = v17 | v12 | v57;
        if ((((v17 | v12) | v9) & 1) != 0)
          v18 = 0;
        else
          v18 = a3;
        v59 = (v18 == 0) | v17 | v12;
        v60 = v17 | v12;
        v19 = (int *)MEMORY[0x1E0D82BF0];
        v20 = (int *)MEMORY[0x1E0D82BC8];
        v21 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v13;
LABEL_7:
        v14 = v10;
LABEL_8:
        v15 = v11;
        v16 = v12;
LABEL_10:
        ++v8;
        v10 = v14;
        v11 = v15;
        v12 = v16;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v19) >= *(_QWORD *)(v3 + *v7) || *(_BYTE *)(v3 + *v20))
      goto LABEL_79;
    v22 = 0;
    v23 = 0;
    v24 = 0;
    while (1)
    {
      v25 = *v19;
      v26 = *(_QWORD *)(v3 + v25);
      v27 = v26 + 1;
      if (v26 == -1 || v27 > *(_QWORD *)(v3 + *v7))
        break;
      v28 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v26);
      *(_QWORD *)(v3 + v25) = v27;
      v24 |= (unint64_t)(v28 & 0x7F) << v22;
      if ((v28 & 0x80) == 0)
        goto LABEL_25;
      v22 += 7;
      v29 = v23++ >= 9;
      if (v29)
      {
        v24 = 0;
        v30 = *(unsigned __int8 *)(v3 + *v20);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v20) = 1;
LABEL_25:
    v30 = *(unsigned __int8 *)(v3 + *v20);
    if (*(_BYTE *)(v3 + *v20))
      v24 = 0;
LABEL_27:
    if (v30 || (v24 & 7) == 4)
    {
LABEL_79:
      v55 = 1;
      goto LABEL_80;
    }
    v32 = v24 >> 3;
    v33 = v60;
    if ((v59 & 1) == 0)
    {
      v34 = v18;
      do
      {
        v36 = *v34++;
        v35 = v36;
        v33 = v36 != 0;
        if (v36)
          v37 = v35 == (_DWORD)v32;
        else
          v37 = 1;
      }
      while (!v37);
    }
    switch((int)v32)
    {
      case 1:
        if (!v33 || (*(_BYTE *)(a1 + 64) & 0x10) != 0)
          goto LABEL_69;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_96;
        v38 = objc_alloc_init(GEOPDResultRefinement);
        if (!GEOPDResultRefinementReadAllFrom((uint64_t)v38, (void *)v3, v11 & 1))
          goto LABEL_95;
        PBReaderRecallMark();
        -[GEOPDResultRefinementQuery _addNoFlagsRefinement:](a1, v38);
        goto LABEL_60;
      case 2:
        if (!v33)
          goto LABEL_69;
        if ((*(_BYTE *)(a1 + 64) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_96;
          v8 += *(unsigned __int8 *)(a1 + 64) << 28 >> 31;
          goto LABEL_77;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_96;
        v38 = objc_alloc_init(GEOPDRefinementSessionState);
        if (GEOPDRefinementSessionStateReadAllFrom((uint64_t)v38, (void *)v3, v11 & 1))
        {
          PBReaderRecallMark();
          v42 = *(void **)(a1 + 32);
          *(_QWORD *)(a1 + 32) = v38;

          --v8;
LABEL_77:
          v20 = (int *)MEMORY[0x1E0D82BC8];
          v7 = (int *)MEMORY[0x1E0D82BD8];
LABEL_78:
          if (!(v58 & 1 | (v8 != 0)))
            goto LABEL_79;
          continue;
        }
LABEL_95:

LABEL_96:
        v55 = 0;
        v20 = (int *)MEMORY[0x1E0D82BC8];
LABEL_80:
        v56 = &OBJC_IVAR___GEORouteDetails__isNearCurrentlyDisplayedStep;
        if ((v57 & 1) != 0)
LABEL_81:
          *(_BYTE *)(a1 + v56[228]) |= 2u;
        if (v60 & 1 | ((v55 & 1) == 0))
        {
          *(_BYTE *)(a1 + v56[228]) |= 0x10u;
          *(_BYTE *)(a1 + v56[228]) |= 8u;
          *(_BYTE *)(a1 + v56[228]) |= 4u;
        }
        else if (v18)
        {
          while (1)
          {
            v51 = *v18++;
            v52 = 16;
            switch(v51)
            {
              case 0:
                goto LABEL_89;
              case 1:
                goto LABEL_88;
              case 2:
                v52 = 8;
                goto LABEL_88;
              case 3:
                v52 = 4;
LABEL_88:
                *(_BYTE *)(a1 + v56[228]) |= v52;
                break;
              default:
                continue;
            }
          }
        }
LABEL_89:
        if (v55)
          v3 = *(_BYTE *)(v3 + *v20) == 0;
        else
          v3 = 0;
        if ((v60 & 1) != 0)
        {
          v53 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      case 3:
        if (!v33 || (*(_BYTE *)(a1 + 64) & 4) != 0)
          goto LABEL_69;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_96;
        v38 = objc_alloc_init(GEOPDResultRefinementSection);
        if (!GEOPDResultRefinementSectionReadAllFrom((uint64_t)v38, (void *)v3, v11 & 1))
          goto LABEL_95;
        PBReaderRecallMark();
        -[GEOPDResultRefinementQuery _addNoFlagsRefinementSection:](a1, v38);
LABEL_60:

        goto LABEL_77;
      case 4:
        if ((v9 & 1) == 0)
          goto LABEL_69;
        v43 = 0;
        v44 = 0;
        v45 = 0;
        *(_BYTE *)(a1 + 64) |= 1u;
        while (2)
        {
          v46 = *v19;
          v47 = *(_QWORD *)(v3 + v46);
          v48 = v47 + 1;
          if (v47 == -1 || v48 > *(_QWORD *)(v3 + *v7))
          {
            *(_BYTE *)(v3 + *v20) = 1;
          }
          else
          {
            v49 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v47);
            *(_QWORD *)(v3 + v46) = v48;
            v45 |= (unint64_t)(v49 & 0x7F) << v43;
            if (v49 < 0)
            {
              v43 += 7;
              v29 = v44++ >= 9;
              if (v29)
              {
                LODWORD(v45) = 0;
                goto LABEL_74;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v20))
          LODWORD(v45) = 0;
LABEL_74:
        *(_DWORD *)(a1 + 60) = v45;
        goto LABEL_78;
      default:
        if ((v57 & 1) == 0 || (*(_BYTE *)(a1 + 64) & 2) != 0)
        {
LABEL_69:
          v50 = PBReaderSkipValueWithTag();
          v7 = (int *)MEMORY[0x1E0D82BD8];
          v20 = (int *)MEMORY[0x1E0D82BC8];
          if ((v50 & 1) == 0)
          {
            v55 = 0;
            goto LABEL_80;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v39 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v40 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v39;

          }
          v41 = PBUnknownFieldAdd();
          v20 = (int *)MEMORY[0x1E0D82BC8];
          v7 = (int *)MEMORY[0x1E0D82BD8];
          if (!v41)
          {
            v55 = 0;
            v56 = &OBJC_IVAR___GEORouteDetails__isNearCurrentlyDisplayedStep;
            goto LABEL_81;
          }
        }
        goto LABEL_78;
    }
  }
}

void sub_1892C60F4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892C6234(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892C7140(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDResultRefinementQueryCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  _BYTE v20[128];
  _BYTE v21[128];
  uint64_t v22;

  v22 = *MEMORY[0x1E0C80C00];
  v16 = 0u;
  v17 = 0u;
  v18 = 0u;
  v19 = 0u;
  v2 = a1[5];
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v16, v21, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v17;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v17 != v5)
          objc_enumerationMutation(v2);
        -[GEOPDResultRefinement readAll:](*(_QWORD *)(*((_QWORD *)&v16 + 1) + 8 * v6++), 1);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v16, v21, 16);
    }
    while (v4);
  }

  objc_msgSend(a1[4], "readAll:", 1);
  v14 = 0u;
  v15 = 0u;
  v12 = 0u;
  v13 = 0u;
  v7 = a1[3];
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v12, v20, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v13;
    do
    {
      v11 = 0;
      do
      {
        if (*(_QWORD *)v13 != v10)
          objc_enumerationMutation(v7);
        -[GEOPDResultRefinementSection readAll:](*(_QWORD *)(*((_QWORD *)&v12 + 1) + 8 * v11++), 1);
      }
      while (v9 != v11);
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v12, v20, 16);
    }
    while (v9);
  }

}

unint64_t GEOPDResultRefinementQueryReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 52))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDResultRefinementQueryReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 52) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDResultRefinementQueryReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDResultRefinementQueryReadAllFrom_initialTag;
  Specified = GEOPDResultRefinementQueryReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDResultRefinementQueryCallReadAllRecursiveWithoutSynchronized((id *)a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_1892C7478(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDResultRefinementQueryReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOPDResultRefinementQueryReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1892C74D8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDResultRefinementQueryIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  _BOOL8 v23;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 == 2 && PBReaderPlaceMark() && GEOPDResultRefinementIsValid(a1))
            goto LABEL_32;
          goto LABEL_46;
        case 2u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDRefinementSessionStateIsValid(a1))
            goto LABEL_46;
          goto LABEL_32;
        case 3u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDResultRefinementSectionIsValid(a1))
            goto LABEL_46;
LABEL_32:
          PBReaderRecallMark();
          continue;
        case 4u:
          if ((v8 & 7) != 0)
            goto LABEL_46;
          v17 = 0;
          break;
        default:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_46:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v18 = *v2;
        v19 = *(_QWORD *)&a1[v18];
        v20 = v19 + 1;
        if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
          break;
        v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
        *(_QWORD *)&a1[v18] = v20;
        if (v21 < 0 && v17++ <= 8)
          continue;
        goto LABEL_33;
      }
      a1[*v4] = 1;
LABEL_33:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v23 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v23;
}

BOOL GEOPDResultRefinementSectionIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unint64_t v17;
  _BOOL8 v18;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_31;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        goto LABEL_31;
      v17 = v8 >> 3;
      if ((v8 >> 3) == 3)
        break;
      if ((_DWORD)v17 != 2)
      {
        if ((_DWORD)v17 == 1 && v15 != 2)
          goto LABEL_32;
        goto LABEL_29;
      }
      if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDResultRefinementIsValid(a1))
      {
LABEL_32:
        PBReaderRecallMark();
        return 0;
      }
      PBReaderRecallMark();
LABEL_30:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_31;
    }
    if (v15 != 2)
      goto LABEL_32;
LABEL_29:
    if ((PBReaderSkipValueWithTag() & 1) == 0)
      goto LABEL_32;
    goto LABEL_30;
  }
LABEL_31:
  v18 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v18;
}

void sub_1892C7C6C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDResultRefinementQueryIsDirty(uint64_t a1)
{
  char v2;
  uint64_t v3;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  os_unfair_lock_s *v10;
  char IsDirty;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  _BYTE v24[128];
  _BYTE v25[128];
  uint64_t v26;

  v26 = *MEMORY[0x1E0C80C00];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v2 = *(_BYTE *)(a1 + 64);
  if ((v2 & 0x30) != 0)
    return 1;
  if ((*(_BYTE *)(a1 + 64) & 8) != 0)
  {
    if (GEOPDRefinementSessionStateIsDirty(*(_QWORD *)(a1 + 32)))
      return 1;
    v2 = *(_BYTE *)(a1 + 64);
  }
  if ((v2 & 4) == 0)
  {
    if ((v2 & 0x10) == 0)
      return 0;
    v22 = 0u;
    v23 = 0u;
    v20 = 0u;
    v21 = 0u;
    v5 = *(id *)(a1 + 40);
    v6 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v20, v25, 16);
    if (v6)
    {
      v7 = v6;
      v8 = *(_QWORD *)v21;
LABEL_12:
      v9 = 0;
      while (1)
      {
        if (*(_QWORD *)v21 != v8)
          objc_enumerationMutation(v5);
        v10 = *(os_unfair_lock_s **)(*((_QWORD *)&v20 + 1) + 8 * v9);
        if (v10)
        {
          os_unfair_lock_lock_with_options();
          IsDirty = _GEOPDResultRefinementIsDirty((uint64_t)v10);
          os_unfair_lock_unlock(v10 + 20);
          if ((IsDirty & 1) != 0)
            break;
        }
        if (v7 == ++v9)
        {
          v7 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v20, v25, 16);
          if (v7)
            goto LABEL_12;
          goto LABEL_19;
        }
      }
    }
    else
    {
LABEL_19:

      if ((*(_BYTE *)(a1 + 64) & 4) == 0)
        return 0;
      v18 = 0u;
      v19 = 0u;
      v16 = 0u;
      v17 = 0u;
      v5 = *(id *)(a1 + 24);
      v3 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v16, v24, 16);
      if (!v3)
      {
LABEL_31:

        return v3;
      }
      v12 = *(_QWORD *)v17;
LABEL_22:
      v13 = 0;
      while (1)
      {
        if (*(_QWORD *)v17 != v12)
          objc_enumerationMutation(v5);
        v14 = *(_QWORD *)(*((_QWORD *)&v16 + 1) + 8 * v13);
        if (v14)
        {
          os_unfair_lock_lock_with_options();
          os_unfair_lock_assert_owner((const os_unfair_lock *)(v14 + 56));
          v15 = *(_BYTE *)(v14 + 60) & 0x1E;
          os_unfair_lock_unlock((os_unfair_lock_t)(v14 + 56));
          if (v15)
            break;
        }
        if (v3 == ++v13)
        {
          v3 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v16, v24, 16);
          if (v3)
            goto LABEL_22;
          goto LABEL_31;
        }
      }
    }
    v3 = 1;
    goto LABEL_31;
  }
  return 1;
}

os_unfair_lock_s *GEOPDResultRefinementQueryIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOPDResultRefinementQueryIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 14);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_1892C86F4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892C8B54(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDResultRefinementRangeReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  int *v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  BOOL v28;
  int v29;
  unint64_t v31;
  BOOL v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  char v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  id v44;
  void *v45;
  int v46;
  uint64_t v47;
  void *v48;
  GEOPDResultRefinementRangeContinuous *v49;
  uint64_t v50;
  char v51;
  char v52;
  int v53;
  char v54;
  void *v55;
  int v57;
  int *v58;
  char v59;
  char v60;
  char v61;
  char v62;
  char v63;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 52);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 48));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = vaddv_s16((int16x4_t)(*(_QWORD *)&vshl_u16((uint16x4_t)(*(_QWORD *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 64)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFFFFFCFFFEFFFDLL) & 0xFF01FF01FF01FF01));
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 > 1;
        v60 = v16 & ~(_BYTE)v11 | v9;
        v61 = v16 | v11 | v60;
        v59 = v8;
        if ((((v16 | v11) | v8) & 1) != 0)
          v17 = 0;
        else
          v17 = a3;
        v62 = (v17 == 0) | v16 | v11;
        v63 = v16 | v11;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v7;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v19))
      goto LABEL_83;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0)
        goto LABEL_25;
      v21 += 7;
      v28 = v22++ >= 9;
      if (v28)
      {
        v23 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_25:
    v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_27:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_83:
      v57 = 1;
      goto LABEL_84;
    }
    v31 = v23 >> 3;
    v32 = v63;
    if ((v62 & 1) == 0)
    {
      v33 = v17;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if ((v59 & 1) == 0)
          goto LABEL_68;
        v37 = 0;
        v38 = 0;
        v39 = 0;
        *(_BYTE *)(a1 + 64) |= 1u;
        while (1)
        {
          v40 = *v18;
          v41 = *(_QWORD *)(v3 + v40);
          v42 = v41 + 1;
          if (v41 == -1 || v42 > *(_QWORD *)(v3 + *v6))
            break;
          v43 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v41);
          *(_QWORD *)(v3 + v40) = v42;
          v39 |= (unint64_t)(v43 & 0x7F) << v37;
          if ((v43 & 0x80) == 0)
            goto LABEL_71;
          v37 += 7;
          v28 = v38++ >= 9;
          if (v28)
          {
            LODWORD(v39) = 0;
            goto LABEL_73;
          }
        }
        *(_BYTE *)(v3 + *v19) = 1;
LABEL_71:
        if (*(_BYTE *)(v3 + *v19))
          LODWORD(v39) = 0;
LABEL_73:
        *(_DWORD *)(a1 + 60) = v39;
        goto LABEL_82;
      case 2:
        if (!v32)
          goto LABEL_68;
        if ((*(_BYTE *)(a1 + 64) & 4) == 0)
        {
          PBReaderReadString();
          v47 = objc_claimAutoreleasedReturnValue();
          v48 = *(void **)(a1 + 24);
          *(_QWORD *)(a1 + 24) = v47;
          goto LABEL_67;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_101;
        v52 = 32 * *(_BYTE *)(a1 + 64);
        goto LABEL_80;
      case 3:
        if (!v32)
          goto LABEL_68;
        if ((*(_BYTE *)(a1 + 64) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_101;
          v52 = 16 * *(_BYTE *)(a1 + 64);
          goto LABEL_80;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_101;
        v49 = objc_alloc_init(GEOPDResultRefinementRangeContinuous);
        if (!GEOPDResultRefinementRangeContinuousReadAllFrom((uint64_t)v49, (void *)v3, v10 & 1))
          goto LABEL_100;
        PBReaderRecallMark();
        v50 = 32;
        goto LABEL_66;
      case 4:
        if (!v32)
          goto LABEL_68;
        if ((*(_BYTE *)(a1 + 64) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_101;
          v52 = 8 * *(_BYTE *)(a1 + 64);
LABEL_80:
          v7 += v52 >> 7;
LABEL_81:
          v19 = (int *)MEMORY[0x1E0D82BC8];
          goto LABEL_82;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_101;
        v49 = objc_alloc_init(GEOPDResultRefinementRangeDiscrete);
        if (GEOPDResultRefinementRangeDiscreteReadAllFrom((uint64_t)v49, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          v50 = 40;
LABEL_66:
          v48 = *(void **)(a1 + v50);
          *(_QWORD *)(a1 + v50) = v49;
LABEL_67:

          --v7;
          goto LABEL_81;
        }
LABEL_100:

LABEL_101:
        v57 = 0;
        v58 = &OBJC_IVAR___GEOPDRelatedEntitySection__reader;
        v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_85:
        if ((v60 & 1) != 0)
LABEL_86:
          *(_BYTE *)(a1 + v58[78]) |= 2u;
        if (v63 & 1 | ((v57 & 1) == 0))
        {
          *(_BYTE *)(a1 + v58[78]) |= 4u;
          *(_BYTE *)(a1 + v58[78]) |= 8u;
          *(_BYTE *)(a1 + v58[78]) |= 0x10u;
        }
        else if (v17)
        {
          while (1)
          {
            v53 = *v17++;
            v54 = 4;
            switch(v53)
            {
              case 0:
                goto LABEL_94;
              case 2:
                goto LABEL_93;
              case 3:
                v54 = 8;
                goto LABEL_93;
              case 4:
                v54 = 16;
LABEL_93:
                *(_BYTE *)(a1 + v58[78]) |= v54;
                break;
              default:
                continue;
            }
          }
        }
LABEL_94:
        if (v57)
          v3 = *(_BYTE *)(v3 + *v19) == 0;
        else
          v3 = 0;
        if ((v63 & 1) != 0)
        {
          v55 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      default:
        if ((v60 & 1) == 0 || (*(_BYTE *)(a1 + 64) & 2) != 0)
        {
LABEL_68:
          v51 = PBReaderSkipValueWithTag();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if ((v51 & 1) == 0)
          {
            v57 = 0;
LABEL_84:
            v58 = &OBJC_IVAR___GEOPDRelatedEntitySection__reader;
            goto LABEL_85;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v44 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v45 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v44;

          }
          v46 = PBUnknownFieldAdd();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if (!v46)
          {
            v57 = 0;
            v58 = &OBJC_IVAR___GEOPDRelatedEntitySection__reader;
            goto LABEL_86;
          }
        }
LABEL_82:
        if (!(v61 & 1 | (v7 != 0)))
          goto LABEL_83;
        continue;
    }
  }
}

void sub_1892C9B20(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892C9C0C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDResultRefinementRangeReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 52))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDResultRefinementRangeReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 52) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDResultRefinementRangeReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDResultRefinementRangeReadAllFrom_initialTag;
  Specified = GEOPDResultRefinementRangeReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    -[GEOPDResultRefinementRangeContinuous readAll:](*(_QWORD *)(a1 + 32), 1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_1892C9E74(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892CA03C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDResultRefinementRangeIsDirty(uint64_t a1)
{
  unsigned int v2;
  os_unfair_lock_s *v4;
  BOOL IsDirty;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v2 = *(unsigned __int8 *)(a1 + 64);
  if ((v2 & 0x24) != 0)
    return 1;
  if ((v2 & 8) != 0)
  {
    v4 = *(os_unfair_lock_s **)(a1 + 32);
    if (v4)
    {
      os_unfair_lock_lock_with_options();
      IsDirty = _GEOPDResultRefinementRangeContinuousIsDirty((uint64_t)v4);
      os_unfair_lock_unlock(v4 + 18);
      if (IsDirty)
        return 1;
      v2 = *(unsigned __int8 *)(a1 + 64);
    }
  }
  return (v2 >> 4) & 1;
}

void sub_1892CA2B8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDResultRefinementRangeContinuousReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  int *v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  int *v18;
  int *v19;
  int *v20;
  int *v21;
  char v22;
  unsigned int v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  int v30;
  unint64_t v32;
  BOOL v33;
  int *v34;
  int v35;
  int v36;
  BOOL v37;
  GEOPDResultRefinementRangeElement *v38;
  uint64_t v39;
  id v40;
  void *v41;
  int v42;
  void *v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  unint64_t v50;
  char v51;
  char v52;
  uint64_t v53;
  char v54;
  int v55;
  int v56;
  void *v57;
  int v59;
  int *v60;
  char v61;
  char v62;
  char v63;
  char v64;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 68);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 64));
  v7 = v6;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = ((*(unsigned __int8 *)(a1 + 76) >> 5) & 1)
      + ((*(unsigned __int8 *)(a1 + 76) >> 4) & 1)
      + ((*(unsigned __int8 *)(a1 + 76) >> 3) & 1);
  while (2)
  {
    v14 = 1;
    v15 = 1;
    v16 = 1;
    switch(a3[v9])
    {
      case -4:
        ++v13;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v15 = v11;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v17 = v13 != 0;
        v61 = v17 & ~(_BYTE)v12 | v10;
        v62 = v17 | v12 | v61;
        if ((((v17 | v12) | v8) & 1) != 0)
          v18 = 0;
        else
          v18 = a3;
        v63 = (v18 == 0) | v17 | v12;
        v64 = v17 | v12;
        v19 = (int *)MEMORY[0x1E0D82BF0];
        v20 = (int *)MEMORY[0x1E0D82BC8];
        v21 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v13;
LABEL_7:
        v14 = v10;
LABEL_8:
        v15 = v11;
        v16 = v12;
LABEL_10:
        ++v9;
        v10 = v14;
        v11 = v15;
        v12 = v16;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v19) >= *(_QWORD *)(v3 + *v7) || *(_BYTE *)(v3 + *v20))
      goto LABEL_84;
    v22 = 0;
    v23 = 0;
    v24 = 0;
    while (1)
    {
      v25 = *v19;
      v26 = *(_QWORD *)(v3 + v25);
      v27 = v26 + 1;
      if (v26 == -1 || v27 > *(_QWORD *)(v3 + *v7))
        break;
      v28 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v26);
      *(_QWORD *)(v3 + v25) = v27;
      v24 |= (unint64_t)(v28 & 0x7F) << v22;
      if ((v28 & 0x80) == 0)
        goto LABEL_25;
      v22 += 7;
      if (v23++ >= 9)
      {
        v24 = 0;
        v30 = *(unsigned __int8 *)(v3 + *v20);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v20) = 1;
LABEL_25:
    v30 = *(unsigned __int8 *)(v3 + *v20);
    if (*(_BYTE *)(v3 + *v20))
      v24 = 0;
LABEL_27:
    if (v30 || (v24 & 7) == 4)
    {
LABEL_84:
      v59 = 1;
      goto LABEL_85;
    }
    v32 = v24 >> 3;
    v33 = v64;
    if ((v63 & 1) == 0)
    {
      v34 = v18;
      do
      {
        v36 = *v34++;
        v35 = v36;
        v33 = v36 != 0;
        if (v36)
          v37 = v35 == (_DWORD)v32;
        else
          v37 = 1;
      }
      while (!v37);
    }
    switch((int)v32)
    {
      case 1:
        if (!v33)
          goto LABEL_68;
        if ((*(_BYTE *)(a1 + 76) & 0x20) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_105;
          v38 = objc_alloc_init(GEOPDResultRefinementRangeElement);
          if (GEOPDResultRefinementRangeElementReadAllFrom((uint64_t)v38, (void *)v3, v11 & 1))
          {
            PBReaderRecallMark();
            v39 = 48;
            goto LABEL_55;
          }
          goto LABEL_104;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_105;
        v52 = 4 * *(_BYTE *)(a1 + 76);
        goto LABEL_74;
      case 2:
        if (!v33)
          goto LABEL_68;
        if ((*(_BYTE *)(a1 + 76) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_105;
          v52 = 8 * *(_BYTE *)(a1 + 76);
LABEL_74:
          v9 += v52 >> 7;
          goto LABEL_75;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_105;
        v38 = objc_alloc_init(GEOPDResultRefinementRangeElement);
        if (GEOPDResultRefinementRangeElementReadAllFrom((uint64_t)v38, (void *)v3, v11 & 1))
        {
          PBReaderRecallMark();
          v39 = 40;
LABEL_55:
          v43 = *(void **)(a1 + v39);
          *(_QWORD *)(a1 + v39) = v38;

          --v9;
LABEL_75:
          v20 = (int *)MEMORY[0x1E0D82BC8];
          v7 = (int *)MEMORY[0x1E0D82BD8];
          goto LABEL_83;
        }
LABEL_104:

LABEL_105:
        v59 = 0;
        v60 = &OBJC_IVAR___GEOPDRelatedEntitySection__reader;
        v20 = (int *)MEMORY[0x1E0D82BC8];
LABEL_86:
        if ((v61 & 1) != 0)
LABEL_87:
          *(_BYTE *)(a1 + v60[84]) |= 8u;
        if (v64 & 1 | ((v59 & 1) == 0))
        {
          *(_BYTE *)(a1 + v60[84]) |= 0x20u;
          *(_BYTE *)(a1 + v60[84]) |= 0x10u;
          goto LABEL_98;
        }
        if (v18)
        {
          while (1)
          {
            v56 = *v18++;
            v55 = v56;
            if (v56 == 1)
              break;
            if (v55 == 2)
            {
              v54 = 16;
LABEL_94:
              *(_BYTE *)(a1 + v60[84]) |= v54;
            }
            else if (!v55)
            {
              goto LABEL_98;
            }
          }
          v54 = 32;
          goto LABEL_94;
        }
LABEL_98:
        if (v59)
          v3 = *(_BYTE *)(v3 + *v20) == 0;
        else
          v3 = 0;
        if ((v64 & 1) != 0)
        {
          v57 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      case 3:
        if ((v8 & 1) == 0)
          goto LABEL_68;
        *(_BYTE *)(a1 + 76) |= 4u;
        v44 = *v19;
        v45 = *(_QWORD *)(v3 + v44);
        if (v45 <= 0xFFFFFFFFFFFFFFF7 && v45 + 8 <= *(_QWORD *)(v3 + *v7))
        {
          v46 = *(_QWORD *)(*(_QWORD *)(v3 + *v21) + v45);
          *(_QWORD *)(v3 + v44) = v45 + 8;
        }
        else
        {
          *(_BYTE *)(v3 + *v20) = 1;
          v46 = 0;
        }
        v53 = 56;
        goto LABEL_82;
      case 4:
        if ((v8 & 1) == 0)
          goto LABEL_68;
        *(_BYTE *)(a1 + 76) |= 2u;
        v47 = *v19;
        v48 = *(_QWORD *)(v3 + v47);
        if (v48 <= 0xFFFFFFFFFFFFFFF7 && v48 + 8 <= *(_QWORD *)(v3 + *v7))
        {
          v46 = *(_QWORD *)(*(_QWORD *)(v3 + *v21) + v48);
          *(_QWORD *)(v3 + v47) = v48 + 8;
        }
        else
        {
          *(_BYTE *)(v3 + *v20) = 1;
          v46 = 0;
        }
        v53 = 32;
        goto LABEL_82;
      case 5:
        if ((v8 & 1) == 0)
          goto LABEL_68;
        *(_BYTE *)(a1 + 76) |= 1u;
        v49 = *v19;
        v50 = *(_QWORD *)(v3 + v49);
        if (v50 <= 0xFFFFFFFFFFFFFFF7 && v50 + 8 <= *(_QWORD *)(v3 + *v7))
        {
          v46 = *(_QWORD *)(*(_QWORD *)(v3 + *v21) + v50);
          *(_QWORD *)(v3 + v49) = v50 + 8;
        }
        else
        {
          *(_BYTE *)(v3 + *v20) = 1;
          v46 = 0;
        }
        v53 = 24;
LABEL_82:
        *(_QWORD *)(a1 + v53) = v46;
        goto LABEL_83;
      default:
        if ((v61 & 1) == 0 || (*(_BYTE *)(a1 + 76) & 8) != 0)
        {
LABEL_68:
          v51 = PBReaderSkipValueWithTag();
          v7 = (int *)MEMORY[0x1E0D82BD8];
          v20 = (int *)MEMORY[0x1E0D82BC8];
          if ((v51 & 1) == 0)
          {
            v59 = 0;
LABEL_85:
            v60 = &OBJC_IVAR___GEOPDRelatedEntitySection__reader;
            goto LABEL_86;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v40 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v41 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v40;

          }
          v42 = PBUnknownFieldAdd();
          v20 = (int *)MEMORY[0x1E0D82BC8];
          v7 = (int *)MEMORY[0x1E0D82BD8];
          if (!v42)
          {
            v59 = 0;
            v60 = &OBJC_IVAR___GEOPDRelatedEntitySection__reader;
            goto LABEL_87;
          }
        }
LABEL_83:
        if (!(v62 & 1 | (v9 != 0)))
          goto LABEL_84;
        continue;
    }
  }
}

void sub_1892CB2BC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892CB3B8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDResultRefinementRangeContinuousReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 68))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDResultRefinementRangeContinuousReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 72));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 64) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 68) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDResultRefinementRangeContinuousReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDResultRefinementRangeContinuousReadAllFrom_initialTag;
  Specified = GEOPDResultRefinementRangeContinuousReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    -[GEOPDResultRefinementRangeElement readAll:](*(_QWORD *)(a1 + 48), 1);
    -[GEOPDResultRefinementRangeElement readAll:](*(_QWORD *)(a1 + 40), 1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return Specified;
}

void sub_1892CB634(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDResultRefinementRangeElementIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v14;
  int v15;
  int v16;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  int v25;
  BOOL v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  int v31;
  _BOOL8 v32;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = *v4;
          v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = *v4;
      v15 = a1[v14];
      if (a1[v14])
        v8 = 0;
LABEL_14:
      v16 = v8 & 7;
      if (v15 || v16 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v16 != 2)
            goto LABEL_53;
          goto LABEL_38;
        case 2u:
          if (v16 != 1)
            goto LABEL_53;
          v18 = *v2;
          v19 = *(_QWORD *)&a1[v18];
          if (v19 > 0xFFFFFFFFFFFFFFF7)
            goto LABEL_49;
          v20 = v19 + 8;
          if (v20 > *(_QWORD *)&a1[*v3])
            goto LABEL_49;
          *(_QWORD *)&a1[v18] = v20;
          continue;
        case 3u:
          if ((v8 & 7) != 0)
            goto LABEL_53;
          v21 = 0;
          while (1)
          {
            v22 = *v2;
            v23 = *(_QWORD *)&a1[v22];
            v24 = v23 + 1;
            if (v23 == -1 || v24 > *(_QWORD *)&a1[*v3])
              goto LABEL_48;
            v25 = *(char *)(*(_QWORD *)&a1[*v5] + v23);
            *(_QWORD *)&a1[v22] = v24;
            if (v25 < 0)
            {
              v26 = v21++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_50;
          }
        case 4u:
          if (v16 == 2)
            goto LABEL_38;
          goto LABEL_53;
        case 5u:
          if (v16 != 2)
            goto LABEL_53;
LABEL_38:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_53:
          v32 = 0;
          goto LABEL_52;
        case 6u:
          if ((v8 & 7) != 0)
            goto LABEL_53;
          v27 = 0;
          break;
        default:
          if (!PBReaderSkipValueWithTag())
            goto LABEL_53;
          continue;
      }
      while (1)
      {
        v28 = *v2;
        v29 = *(_QWORD *)&a1[v28];
        v30 = v29 + 1;
        if (v29 == -1 || v30 > *(_QWORD *)&a1[*v3])
          break;
        v31 = *(char *)(*(_QWORD *)&a1[*v5] + v29);
        *(_QWORD *)&a1[v28] = v30;
        if (v31 < 0)
        {
          v26 = v27++ > 8;
          if (!v26)
            continue;
        }
        goto LABEL_50;
      }
LABEL_48:
      v14 = *v4;
LABEL_49:
      a1[v14] = 1;
LABEL_50:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v32 = a1[*v4] == 0;
LABEL_52:
  PBReaderRecallMark();
  return v32;
}

void sub_1892CBAF8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL _GEOPDResultRefinementRangeContinuousIsDirty(uint64_t a1)
{
  char v2;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  v2 = *(_BYTE *)(a1 + 76);
  if ((v2 & 0x40) != 0)
    return 1;
  if ((*(_BYTE *)(a1 + 76) & 0x20) != 0)
  {
    if (GEOPDResultRefinementRangeElementIsDirty(*(_QWORD *)(a1 + 48)))
      return 1;
    v2 = *(_BYTE *)(a1 + 76);
  }
  return (v2 & 0x10) != 0 && GEOPDResultRefinementRangeElementIsDirty(*(_QWORD *)(a1 + 40));
}

void sub_1892CBD80(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDResultRefinementRangeDiscreteReadAllFrom(uint64_t a1, void *a2, int a3)
{
  char *v5;
  int *v6;
  int *v7;
  int *v8;
  int *v9;
  char v10;
  unsigned int v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  BOOL v17;
  int v18;
  unint64_t v20;
  GEOPDResultRefinementRangeElement *v21;
  char v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  char v29;
  unsigned int v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  id v35;
  void *v36;
  uint64_t v37;
  _BOOL8 v38;

  v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    v6 = (int *)MEMORY[0x1E0D82BF0];
    v7 = (int *)MEMORY[0x1E0D82BD8];
    v8 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v5[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v5[*MEMORY[0x1E0D82BD8]])
    {
      v9 = (int *)MEMORY[0x1E0D82BB8];
      while (1)
      {
        if (v5[*v8])
          goto LABEL_53;
        v10 = 0;
        v11 = 0;
        v12 = 0;
        while (1)
        {
          v13 = *v6;
          v14 = *(_QWORD *)&v5[v13];
          v15 = v14 + 1;
          if (v14 == -1 || v15 > *(_QWORD *)&v5[*v7])
            break;
          v16 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v14);
          *(_QWORD *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0)
            goto LABEL_13;
          v10 += 7;
          v17 = v11++ >= 9;
          if (v17)
          {
            v12 = 0;
            v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        v18 = v5[*v8];
        if (v5[*v8])
          v12 = 0;
LABEL_15:
        if (v18 || (v12 & 7) == 4)
          goto LABEL_53;
        v20 = v12 >> 3;
        if ((v12 >> 3) == 3)
          break;
        if ((_DWORD)v20 == 2)
        {
          v29 = 0;
          v30 = 0;
          v24 = 0;
          *(_BYTE *)(a1 + 32) |= 2u;
          while (1)
          {
            v31 = *v6;
            v32 = *(_QWORD *)&v5[v31];
            v33 = v32 + 1;
            if (v32 == -1 || v33 > *(_QWORD *)&v5[*v7])
              break;
            v34 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v32);
            *(_QWORD *)&v5[v31] = v33;
            v24 |= (unint64_t)(v34 & 0x7F) << v29;
            if ((v34 & 0x80) == 0)
              goto LABEL_48;
            v29 += 7;
            v17 = v30++ >= 9;
            if (v17)
            {
              LODWORD(v24) = 0;
              goto LABEL_50;
            }
          }
          v5[*v8] = 1;
LABEL_48:
          if (v5[*v8])
            LODWORD(v24) = 0;
LABEL_50:
          v37 = 28;
LABEL_51:
          *(_DWORD *)(a1 + v37) = v24;
          goto LABEL_52;
        }
        if ((_DWORD)v20 == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_55;
          v21 = objc_alloc_init(GEOPDResultRefinementRangeElement);
          if (!GEOPDResultRefinementRangeElementReadAllFrom((uint64_t)v21, v5, a3))
          {

            goto LABEL_55;
          }
          PBReaderRecallMark();
          -[GEOPDResultRefinementRangeDiscrete addElement:](a1, v21);

        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v35 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v36 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v35;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_55;
        }
LABEL_52:
        if (*(_QWORD *)&v5[*v6] >= *(_QWORD *)&v5[*v7])
          goto LABEL_53;
      }
      v22 = 0;
      v23 = 0;
      v24 = 0;
      *(_BYTE *)(a1 + 32) |= 1u;
      while (1)
      {
        v25 = *v6;
        v26 = *(_QWORD *)&v5[v25];
        v27 = v26 + 1;
        if (v26 == -1 || v27 > *(_QWORD *)&v5[*v7])
          break;
        v28 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v26);
        *(_QWORD *)&v5[v25] = v27;
        v24 |= (unint64_t)(v28 & 0x7F) << v22;
        if ((v28 & 0x80) == 0)
          goto LABEL_44;
        v22 += 7;
        v17 = v23++ >= 9;
        if (v17)
        {
          LODWORD(v24) = 0;
          goto LABEL_46;
        }
      }
      v5[*v8] = 1;
LABEL_44:
      if (v5[*v8])
        LODWORD(v24) = 0;
LABEL_46:
      v37 = 24;
      goto LABEL_51;
    }
LABEL_53:
    v38 = v5[*v8] == 0;
  }
  else
  {
LABEL_55:
    v38 = 0;
  }
  objc_sync_exit(v5);

  return v38;
}

void sub_1892CCA20(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDResultRefinementRangeElementReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  char v15;
  unsigned __int8 v16;
  int *v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  BOOL v28;
  int v29;
  unint64_t v31;
  BOOL v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  void *v40;
  int v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  char v45;
  unsigned int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  char v51;
  void *v52;
  char v53;
  unsigned int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  char v59;
  char v60;
  char v61;
  int v62;
  char v63;
  void *v64;
  int v66;
  int *v67;
  char v68;
  char v69;
  char v70;
  BOOL v71;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 60);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 56));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = vaddv_s16((int16x4_t)(*(_QWORD *)&vshl_u16((uint16x4_t)(*(_QWORD *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 76)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFDFFFAFFFCFFFBLL) & 0xFF01FF01FF01FF01));
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v11;
        v12 = v7;
        goto LABEL_8;
      case -3:
        v9 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v11 > 1;
        v15 = v14 & ~(_BYTE)v7;
        v16 = v14 | v7;
        v68 = v15 | v8;
        v69 = v16 | v15 | v8;
        if (((v16 | v9) & 1) != 0)
          v17 = 0;
        else
          v17 = a3;
        v70 = (v17 == 0) | v16;
        v71 = v16;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_7:
        v12 = v7;
        v13 = v8;
LABEL_8:
        ++v10;
        v7 = v12;
        v8 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v19))
      goto LABEL_94;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0)
        goto LABEL_23;
      v21 += 7;
      v28 = v22++ >= 9;
      if (v28)
      {
        v23 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_25;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_23:
    v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_25:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_94:
      v66 = 1;
      goto LABEL_95;
    }
    v31 = v23 >> 3;
    v32 = v71;
    if ((v70 & 1) == 0)
    {
      v33 = v17;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if (!v32)
          goto LABEL_73;
        if ((*(_BYTE *)(a1 + 76) & 0x10) == 0)
        {
          PBReaderReadString();
          v37 = objc_claimAutoreleasedReturnValue();
          v38 = 24;
          goto LABEL_64;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_111;
        v61 = 8 * *(_BYTE *)(a1 + 76);
        goto LABEL_89;
      case 2:
        if ((v9 & 1) == 0)
          goto LABEL_73;
        *(_BYTE *)(a1 + 76) |= 1u;
        v42 = *v18;
        v43 = *(_QWORD *)(v3 + v42);
        if (v43 <= 0xFFFFFFFFFFFFFFF7 && v43 + 8 <= *(_QWORD *)(v3 + *v6))
        {
          v44 = *(_QWORD *)(*(_QWORD *)(v3 + *v20) + v43);
          *(_QWORD *)(v3 + v42) = v43 + 8;
        }
        else
        {
          *(_BYTE *)(v3 + *v19) = 1;
          v44 = 0;
        }
        *(_QWORD *)(a1 + 48) = v44;
        goto LABEL_93;
      case 3:
        if ((v9 & 1) == 0)
          goto LABEL_73;
        v45 = 0;
        v46 = 0;
        v47 = 0;
        *(_BYTE *)(a1 + 76) |= 4u;
        while (2)
        {
          v48 = *v18;
          v49 = *(_QWORD *)(v3 + v48);
          v50 = v49 + 1;
          if (v49 == -1 || v50 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v19) = 1;
          }
          else
          {
            v51 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v49);
            *(_QWORD *)(v3 + v48) = v50;
            v47 |= (unint64_t)(v51 & 0x7F) << v45;
            if (v51 < 0)
            {
              v45 += 7;
              v28 = v46++ >= 9;
              if (v28)
              {
                v47 = 0;
                goto LABEL_78;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v19))
          v47 = 0;
LABEL_78:
        *(_BYTE *)(a1 + 72) = v47 != 0;
        goto LABEL_93;
      case 4:
        if (!v32)
          goto LABEL_73;
        if ((*(_BYTE *)(a1 + 76) & 0x20) == 0)
        {
          PBReaderReadString();
          v37 = objc_claimAutoreleasedReturnValue();
          v38 = 32;
          goto LABEL_64;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_111;
        v61 = 4 * *(_BYTE *)(a1 + 76);
        goto LABEL_89;
      case 5:
        if (!v32)
          goto LABEL_73;
        if ((*(_BYTE *)(a1 + 76) & 0x40) == 0)
        {
          PBReaderReadString();
          v37 = objc_claimAutoreleasedReturnValue();
          v38 = 40;
LABEL_64:
          v52 = *(void **)(a1 + v38);
          *(_QWORD *)(a1 + v38) = v37;

          --v10;
LABEL_90:
          v19 = (int *)MEMORY[0x1E0D82BC8];
          goto LABEL_93;
        }
        if ((PBReaderSkipValueWithTag() & 1) != 0)
        {
          v61 = 2 * *(_BYTE *)(a1 + 76);
LABEL_89:
          v10 += v61 >> 7;
          goto LABEL_90;
        }
LABEL_111:
        v66 = 0;
        v67 = &OBJC_IVAR___GEOPDRelatedEntitySection__reader;
        v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_96:
        if ((v68 & 1) != 0)
LABEL_97:
          *(_BYTE *)(a1 + v67[91]) |= 8u;
        if (v71 || (v66 & 1) == 0)
        {
          *(_BYTE *)(a1 + v67[91]) |= 0x10u;
          *(_BYTE *)(a1 + v67[91]) |= 0x20u;
          *(_BYTE *)(a1 + v67[91]) |= 0x40u;
        }
        else if (v17)
        {
          while (1)
          {
            v62 = *v17++;
            v63 = 16;
            switch(v62)
            {
              case 0:
                goto LABEL_105;
              case 1:
                goto LABEL_104;
              case 4:
                v63 = 32;
                goto LABEL_104;
              case 5:
                v63 = 64;
LABEL_104:
                *(_BYTE *)(a1 + v67[91]) |= v63;
                break;
              default:
                continue;
            }
          }
        }
LABEL_105:
        if (v66)
          v3 = *(_BYTE *)(v3 + *v19) == 0;
        else
          v3 = 0;
        if (v71)
        {
          v64 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      case 6:
        if ((v9 & 1) == 0)
          goto LABEL_73;
        v53 = 0;
        v54 = 0;
        v55 = 0;
        *(_BYTE *)(a1 + 76) |= 2u;
        while (2)
        {
          v56 = *v18;
          v57 = *(_QWORD *)(v3 + v56);
          v58 = v57 + 1;
          if (v57 == -1 || v58 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v19) = 1;
          }
          else
          {
            v59 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v57);
            *(_QWORD *)(v3 + v56) = v58;
            v55 |= (unint64_t)(v59 & 0x7F) << v53;
            if (v59 < 0)
            {
              v53 += 7;
              v28 = v54++ >= 9;
              if (v28)
              {
                LODWORD(v55) = 0;
                goto LABEL_82;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v19))
          LODWORD(v55) = 0;
LABEL_82:
        *(_DWORD *)(a1 + 68) = v55;
        goto LABEL_93;
      default:
        if ((v68 & 1) == 0 || (*(_BYTE *)(a1 + 76) & 8) != 0)
        {
LABEL_73:
          v60 = PBReaderSkipValueWithTag();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if ((v60 & 1) == 0)
          {
            v66 = 0;
LABEL_95:
            v67 = &OBJC_IVAR___GEOPDRelatedEntitySection__reader;
            goto LABEL_96;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v39 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v40 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v39;

          }
          v41 = PBUnknownFieldAdd();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if (!v41)
          {
            v66 = 0;
            v67 = &OBJC_IVAR___GEOPDRelatedEntitySection__reader;
            goto LABEL_97;
          }
        }
LABEL_93:
        if (!(v69 & 1 | (v10 != 0)))
          goto LABEL_94;
        continue;
    }
  }
}

void sub_1892CDBDC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892CDCB0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDResultRefinementRangeElementReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 60))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDResultRefinementRangeElementReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 60) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDResultRefinementRangeElementReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDResultRefinementRangeElementReadAllFrom_initialTag;
  Specified = GEOPDResultRefinementRangeElementReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_1892CE2E4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892CE500(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDResultRefinementRangeElementIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  v2 = *(unsigned __int8 *)(a1 + 76) > 0xFu;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return v2;
}

void sub_1892CE78C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892CEC2C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDResultRefinementSectionReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  char v17;
  unsigned __int8 v18;
  char v19;
  int *v20;
  int *v21;
  int *v22;
  int *v23;
  char v24;
  unsigned int v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  int v32;
  unint64_t v34;
  BOOL v35;
  int *v36;
  int v37;
  int v38;
  BOOL v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  GEOPDResultRefinement *v43;
  id v44;
  void *v45;
  int v46;
  char v47;
  char v48;
  int v49;
  char v50;
  void *v51;
  int v53;
  int *v54;
  char v55;
  char v56;
  char v57;
  BOOL v58;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 52);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 48));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = ((*(unsigned __int8 *)(a1 + 60) >> 1) & 1)
      + (*(_BYTE *)(a1 + 60) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 2) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 3) & 1);
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v9])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 > 1;
        v17 = v16 & ~(_BYTE)v11 | v7;
        v18 = v16 | v11;
        v55 = v17;
        v19 = v18 | v17;
        if (((v18 | v8) & 1) != 0)
          v20 = 0;
        else
          v20 = a3;
        v58 = v18;
        v56 = v19;
        v57 = (v20 == 0) | v18;
        v21 = (int *)MEMORY[0x1E0D82BF0];
        v22 = (int *)MEMORY[0x1E0D82BC8];
        v23 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v7;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v9;
        v7 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v21) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v22))
      goto LABEL_68;
    v24 = 0;
    v25 = 0;
    v26 = 0;
    while (1)
    {
      v27 = *v21;
      v28 = *(_QWORD *)(v3 + v27);
      v29 = v28 + 1;
      if (v28 == -1 || v29 > *(_QWORD *)(v3 + *v6))
        break;
      v30 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v28);
      *(_QWORD *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0)
        goto LABEL_25;
      v24 += 7;
      if (v25++ >= 9)
      {
        v26 = 0;
        v32 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v22) = 1;
LABEL_25:
    v32 = *(unsigned __int8 *)(v3 + *v22);
    if (*(_BYTE *)(v3 + *v22))
      v26 = 0;
LABEL_27:
    if (v32 || (v26 & 7) == 4)
    {
LABEL_68:
      v53 = 1;
      goto LABEL_69;
    }
    v34 = v26 >> 3;
    v35 = v58;
    if ((v57 & 1) == 0)
    {
      v36 = v20;
      do
      {
        v38 = *v36++;
        v37 = v38;
        v35 = v38 != 0;
        if (v38)
          v39 = v37 == (_DWORD)v34;
        else
          v39 = 1;
      }
      while (!v39);
    }
    if ((_DWORD)v34 != 3)
      break;
    if (v35)
    {
      if ((*(_BYTE *)(a1 + 60) & 8) == 0)
      {
        PBReaderReadString();
        v40 = objc_claimAutoreleasedReturnValue();
        v41 = 40;
        goto LABEL_47;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        goto LABEL_86;
      v48 = 16 * *(_BYTE *)(a1 + 60);
LABEL_65:
      v9 += v48 >> 7;
      goto LABEL_66;
    }
LABEL_59:
    v47 = PBReaderSkipValueWithTag();
    v22 = (int *)MEMORY[0x1E0D82BC8];
    if ((v47 & 1) == 0)
    {
      v53 = 0;
LABEL_69:
      v54 = &OBJC_IVAR___GEOPDRelatedEntitySection__reader;
      goto LABEL_70;
    }
LABEL_67:
    if (!(v56 & 1 | (v9 != 0)))
      goto LABEL_68;
  }
  if ((_DWORD)v34 != 2)
  {
    if ((_DWORD)v34 == 1)
    {
      if (v35)
      {
        if ((*(_BYTE *)(a1 + 60) & 4) == 0)
        {
          PBReaderReadString();
          v40 = objc_claimAutoreleasedReturnValue();
          v41 = 32;
LABEL_47:
          v42 = *(void **)(a1 + v41);
          *(_QWORD *)(a1 + v41) = v40;

          --v9;
LABEL_66:
          v22 = (int *)MEMORY[0x1E0D82BC8];
          goto LABEL_67;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_86;
        v48 = 32 * *(_BYTE *)(a1 + 60);
        goto LABEL_65;
      }
    }
    else if ((v55 & 1) != 0 && (*(_BYTE *)(a1 + 60) & 1) == 0)
    {
      if (!*(_QWORD *)(a1 + 16))
      {
        v44 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v45 = *(void **)(a1 + 16);
        *(_QWORD *)(a1 + 16) = v44;

      }
      v46 = PBUnknownFieldAdd();
      v22 = (int *)MEMORY[0x1E0D82BC8];
      if (!v46)
      {
        v53 = 0;
        v54 = &OBJC_IVAR___GEOPDRelatedEntitySection__reader;
        goto LABEL_71;
      }
      goto LABEL_67;
    }
    goto LABEL_59;
  }
  if (!v35 || (*(_BYTE *)(a1 + 60) & 2) != 0)
    goto LABEL_59;
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_86;
  v43 = objc_alloc_init(GEOPDResultRefinement);
  if (GEOPDResultRefinementReadAllFrom((uint64_t)v43, (void *)v3, v10 & 1))
  {
    PBReaderRecallMark();
    -[GEOPDResultRefinementSection _addNoFlagsResultRefinement:](a1, v43);

    goto LABEL_66;
  }

LABEL_86:
  v53 = 0;
  v54 = &OBJC_IVAR___GEOPDRelatedEntitySection__reader;
  v22 = (int *)MEMORY[0x1E0D82BC8];
LABEL_70:
  if ((v55 & 1) == 0)
    goto LABEL_72;
LABEL_71:
  *(_BYTE *)(a1 + v54[94]) |= 1u;
LABEL_72:
  if (v58 || (v53 & 1) == 0)
  {
    *(_BYTE *)(a1 + v54[94]) |= 4u;
    *(_BYTE *)(a1 + v54[94]) |= 2u;
    *(_BYTE *)(a1 + v54[94]) |= 8u;
  }
  else if (v20)
  {
    while (1)
    {
      v49 = *v20++;
      v50 = 4;
      switch(v49)
      {
        case 0:
          goto LABEL_79;
        case 1:
          goto LABEL_78;
        case 2:
          v50 = 2;
          goto LABEL_78;
        case 3:
          v50 = 8;
LABEL_78:
          *(_BYTE *)(a1 + v54[94]) |= v50;
          break;
        default:
          continue;
      }
    }
  }
LABEL_79:
  if (v53)
    v3 = *(_BYTE *)(v3 + *v22) == 0;
  else
    v3 = 0;
  if (v58)
  {
    v51 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_1892CF31C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892CF864(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892CF944(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDResultRefinementSectionCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _BYTE v10[128];
  uint64_t v11;

  v11 = *MEMORY[0x1E0C80C00];
  v6 = 0u;
  v7 = 0u;
  v8 = 0u;
  v9 = 0u;
  v1 = *(id *)(a1 + 24);
  v2 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
  if (v2)
  {
    v3 = v2;
    v4 = *(_QWORD *)v7;
    do
    {
      v5 = 0;
      do
      {
        if (*(_QWORD *)v7 != v4)
          objc_enumerationMutation(v1);
        -[GEOPDResultRefinement readAll:](*(_QWORD *)(*((_QWORD *)&v6 + 1) + 8 * v5++), 1);
      }
      while (v3 != v5);
      v3 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
    }
    while (v3);
  }

}

unint64_t GEOPDResultRefinementSectionReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 52))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDResultRefinementSectionReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 52) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDResultRefinementSectionReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDResultRefinementSectionReadAllFrom_initialTag;
  Specified = GEOPDResultRefinementSectionReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDResultRefinementSectionCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_1892CFF58(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892D01B0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892D0418(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892D073C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDResultRefinementSortReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  int *v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  BOOL v28;
  int v29;
  unint64_t v31;
  BOOL v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  uint64_t v37;
  void *v38;
  id v39;
  void *v40;
  int v41;
  GEOPDResultRefinementSortElement *v42;
  char v43;
  unsigned int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  char v50;
  unsigned int v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  char v55;
  char v56;
  uint64_t v57;
  int v58;
  int v59;
  char v60;
  void *v61;
  int v63;
  int *v64;
  char v65;
  char v66;
  char v67;
  char v68;
  char v69;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = ((*(unsigned __int8 *)(a1 + 60) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 4) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 2) & 1);
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v12;
        v13 = v7;
        goto LABEL_8;
      case -3:
        v9 = 1;
        goto LABEL_7;
      case -2:
        v13 = v7;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 != 0;
        v65 = v16 & ~(_BYTE)v11 | v8;
        v66 = v9;
        v67 = v16 | v11 | v65;
        if ((((v16 | v11) | v9) & 1) != 0)
          v17 = 0;
        else
          v17 = a3;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v68 = (v17 == 0) | v16 | v11;
        v69 = v16 | v11;
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v7;
        v14 = v8;
LABEL_8:
        v15 = v11;
LABEL_10:
        ++v10;
        v7 = v13;
        v8 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (*(_QWORD *)(v3 + *v18) < *(_QWORD *)(v3 + *v6) && !*(_BYTE *)(v3 + *v19))
  {
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0)
        goto LABEL_25;
      v21 += 7;
      v28 = v22++ >= 9;
      if (v28)
      {
        v23 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_25:
    v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_27:
    if (v29 || (v23 & 7) == 4)
      break;
    v31 = v23 >> 3;
    v32 = v69;
    if ((v68 & 1) == 0)
    {
      v33 = v17;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if (!v32)
          goto LABEL_69;
        if ((*(_BYTE *)(a1 + 60) & 8) == 0)
        {
          PBReaderReadString();
          v37 = objc_claimAutoreleasedReturnValue();
          v38 = *(void **)(a1 + 24);
          *(_QWORD *)(a1 + 24) = v37;

          --v10;
          goto LABEL_82;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_105;
        v10 += *(unsigned __int8 *)(a1 + 60) << 28 >> 31;
        goto LABEL_82;
      case 2:
        if (!v32 || (*(_BYTE *)(a1 + 60) & 0x10) != 0)
          goto LABEL_69;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_105;
        v42 = objc_alloc_init(GEOPDResultRefinementSortElement);
        if (GEOPDResultRefinementSortElementReadAllFrom((uint64_t)v42, (void *)v3, v7 & 1))
        {
          PBReaderRecallMark();
          -[GEOPDResultRefinementSort _addNoFlagsSort:](a1, v42);

LABEL_82:
          v19 = (int *)MEMORY[0x1E0D82BC8];
          goto LABEL_83;
        }

LABEL_105:
        v63 = 0;
        v64 = &OBJC_IVAR___GEOPDRelatedEntitySection__reader;
        v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_86:
        if ((v65 & 1) != 0)
LABEL_87:
          *(_BYTE *)(a1 + v64[99]) |= 4u;
        if (v69 & 1 | ((v63 & 1) == 0))
        {
          *(_BYTE *)(a1 + v64[99]) |= 8u;
          *(_BYTE *)(a1 + v64[99]) |= 0x10u;
          goto LABEL_98;
        }
        if (v17)
        {
          while (2)
          {
            while (1)
            {
              v59 = *v17++;
              v58 = v59;
              if (v59 == 1)
                break;
              if (v58 == 2)
              {
                v60 = 16;
                goto LABEL_97;
              }
              if (!v58)
                goto LABEL_98;
            }
            v60 = 8;
LABEL_97:
            *(_BYTE *)(a1 + v64[99]) |= v60;
            continue;
          }
        }
LABEL_98:
        if (v63)
          v3 = *(_BYTE *)(v3 + *v19) == 0;
        else
          v3 = 0;
        if ((v69 & 1) != 0)
        {
          v61 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      case 3:
        if ((v66 & 1) == 0)
          goto LABEL_69;
        v43 = 0;
        v44 = 0;
        v45 = 0;
        *(_BYTE *)(a1 + 60) |= 2u;
        while (2)
        {
          v46 = *v18;
          v47 = *(_QWORD *)(v3 + v46);
          v48 = v47 + 1;
          if (v47 == -1 || v48 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v19) = 1;
          }
          else
          {
            v49 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v47);
            *(_QWORD *)(v3 + v46) = v48;
            v45 |= (unint64_t)(v49 & 0x7F) << v43;
            if (v49 < 0)
            {
              v43 += 7;
              v28 = v44++ >= 9;
              if (v28)
              {
                LODWORD(v45) = 0;
                goto LABEL_74;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v19))
          LODWORD(v45) = 0;
LABEL_74:
        v57 = 56;
        goto LABEL_79;
      case 4:
        if ((v66 & 1) == 0)
          goto LABEL_69;
        v50 = 0;
        v51 = 0;
        v45 = 0;
        *(_BYTE *)(a1 + 60) |= 1u;
        while (2)
        {
          v52 = *v18;
          v53 = *(_QWORD *)(v3 + v52);
          v54 = v53 + 1;
          if (v53 == -1 || v54 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v19) = 1;
          }
          else
          {
            v55 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v53);
            *(_QWORD *)(v3 + v52) = v54;
            v45 |= (unint64_t)(v55 & 0x7F) << v50;
            if (v55 < 0)
            {
              v50 += 7;
              v28 = v51++ >= 9;
              if (v28)
              {
                LODWORD(v45) = 0;
                goto LABEL_78;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v19))
          LODWORD(v45) = 0;
LABEL_78:
        v57 = 52;
LABEL_79:
        *(_DWORD *)(a1 + v57) = v45;
        goto LABEL_83;
      default:
        if ((v65 & 1) == 0 || (*(_BYTE *)(a1 + 60) & 4) != 0)
        {
LABEL_69:
          v56 = PBReaderSkipValueWithTag();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if ((v56 & 1) == 0)
          {
            v63 = 0;
LABEL_85:
            v64 = &OBJC_IVAR___GEOPDRelatedEntitySection__reader;
            goto LABEL_86;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v39 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v40 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v39;

          }
          v41 = PBUnknownFieldAdd();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if (!v41)
          {
            v63 = 0;
            v64 = &OBJC_IVAR___GEOPDRelatedEntitySection__reader;
            goto LABEL_87;
          }
        }
LABEL_83:
        if (!(v67 & 1 | (v10 != 0)))
          goto LABEL_84;
        break;
    }
  }
LABEL_84:
  v63 = 1;
  goto LABEL_85;
}

void sub_1892D0F2C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892D1518(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDResultRefinementSortCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _BYTE v10[128];
  uint64_t v11;

  v11 = *MEMORY[0x1E0C80C00];
  v6 = 0u;
  v7 = 0u;
  v8 = 0u;
  v9 = 0u;
  v1 = *(id *)(a1 + 32);
  v2 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
  if (v2)
  {
    v3 = v2;
    v4 = *(_QWORD *)v7;
    do
    {
      v5 = 0;
      do
      {
        if (*(_QWORD *)v7 != v4)
          objc_enumerationMutation(v1);
        -[GEOPDResultRefinementSortElement readAll:](*(_QWORD *)(*((_QWORD *)&v6 + 1) + 8 * v5++), 1);
      }
      while (v3 != v5);
      v3 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
    }
    while (v3);
  }

}

unint64_t GEOPDResultRefinementSortReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDResultRefinementSortReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDResultRefinementSortReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDResultRefinementSortReadAllFrom_initialTag;
  Specified = GEOPDResultRefinementSortReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDResultRefinementSortCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_1892D1868(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892D1ADC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDResultRefinementSortIsDirty(uint64_t a1)
{
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t i;
  os_unfair_lock_s *v6;
  char IsDirty;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  _BYTE v13[128];
  uint64_t v14;

  v14 = *MEMORY[0x1E0C80C00];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  if ((*(_BYTE *)(a1 + 60) & 0x38) != 0)
    return 1;
  if ((*(_BYTE *)(a1 + 60) & 0x10) == 0)
    return 0;
  v11 = 0u;
  v12 = 0u;
  v9 = 0u;
  v10 = 0u;
  v3 = *(id *)(a1 + 32);
  v2 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v9, v13, 16);
  if (v2)
  {
    v4 = *(_QWORD *)v10;
    while (2)
    {
      for (i = 0; i != v2; ++i)
      {
        if (*(_QWORD *)v10 != v4)
          objc_enumerationMutation(v3);
        v6 = *(os_unfair_lock_s **)(*((_QWORD *)&v9 + 1) + 8 * i);
        if (v6)
        {
          os_unfair_lock_lock_with_options();
          IsDirty = _GEOPDResultRefinementSortElementIsDirty((uint64_t)v6);
          os_unfair_lock_unlock(v6 + 16);
          if ((IsDirty & 1) != 0)
          {
            v2 = 1;
            goto LABEL_16;
          }
        }
      }
      v2 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v9, v13, 16);
      if (v2)
        continue;
      break;
    }
  }
LABEL_16:

  return v2;
}

void sub_1892D1EF0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892D2354(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDResultRefinementSortElementReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  char v17;
  unsigned __int8 v18;
  char v19;
  int *v20;
  int *v21;
  int *v22;
  int *v23;
  char v24;
  unsigned int v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  int v32;
  unint64_t v34;
  BOOL v35;
  int *v36;
  int v37;
  int v38;
  BOOL v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  void *v43;
  int v44;
  GEOStyleAttributes *v45;
  uint64_t v46;
  void *v47;
  char v48;
  char v49;
  int v50;
  char v51;
  void *v52;
  int v54;
  int *v55;
  char v56;
  char v57;
  char v58;
  BOOL v59;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 60);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 56));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = (vaddv_s16((int16x4_t)(*(_QWORD *)&vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int8 *)(a1 + 68)), (uint16x4_t)0xFFFFFFFDFFFEFFFCLL) & 0xFF01FF01FF01FF01))+ (*(_BYTE *)(a1 + 68) & 1));
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 > 2;
        v17 = v16 & ~(_BYTE)v11 | v9;
        v18 = v16 | v11;
        v56 = v17;
        v19 = v18 | v17;
        if (((v18 | v8) & 1) != 0)
          v20 = 0;
        else
          v20 = a3;
        v59 = v18;
        v57 = v19;
        v58 = (v20 == 0) | v18;
        v21 = (int *)MEMORY[0x1E0D82BF0];
        v22 = (int *)MEMORY[0x1E0D82BC8];
        v23 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v7;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v21) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v22))
      goto LABEL_77;
    v24 = 0;
    v25 = 0;
    v26 = 0;
    while (1)
    {
      v27 = *v21;
      v28 = *(_QWORD *)(v3 + v27);
      v29 = v28 + 1;
      if (v28 == -1 || v29 > *(_QWORD *)(v3 + *v6))
        break;
      v30 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v28);
      *(_QWORD *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0)
        goto LABEL_25;
      v24 += 7;
      if (v25++ >= 9)
      {
        v26 = 0;
        v32 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v22) = 1;
LABEL_25:
    v32 = *(unsigned __int8 *)(v3 + *v22);
    if (*(_BYTE *)(v3 + *v22))
      v26 = 0;
LABEL_27:
    if (v32 || (v26 & 7) == 4)
    {
LABEL_77:
      v54 = 1;
      goto LABEL_78;
    }
    v34 = v26 >> 3;
    v35 = v59;
    if ((v58 & 1) == 0)
    {
      v36 = v20;
      do
      {
        v38 = *v36++;
        v37 = v38;
        v35 = v38 != 0;
        if (v38)
          v39 = v37 == (_DWORD)v34;
        else
          v39 = 1;
      }
      while (!v39);
    }
    switch((int)v34)
    {
      case 1:
        if (!v35)
          goto LABEL_64;
        if ((*(_BYTE *)(a1 + 68) & 4) == 0)
        {
          PBReaderReadString();
          v40 = objc_claimAutoreleasedReturnValue();
          v41 = 32;
          goto LABEL_62;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_96;
        v49 = 32 * *(_BYTE *)(a1 + 68);
        goto LABEL_74;
      case 2:
        if (!v35)
          goto LABEL_64;
        if ((*(_BYTE *)(a1 + 68) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_96;
          v49 = 8 * *(_BYTE *)(a1 + 68);
          goto LABEL_74;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_96;
        v45 = objc_alloc_init(GEOStyleAttributes);
        if (!GEOStyleAttributesReadAllFrom((uint64_t)v45, (void *)v3))
          goto LABEL_95;
        PBReaderRecallMark();
        v46 = 48;
        goto LABEL_58;
      case 3:
        if (!v35)
          goto LABEL_64;
        if ((*(_BYTE *)(a1 + 68) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_96;
          v49 = 16 * *(_BYTE *)(a1 + 68);
LABEL_74:
          v7 += v49 >> 7;
LABEL_75:
          v22 = (int *)MEMORY[0x1E0D82BC8];
          goto LABEL_76;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_96;
        v45 = objc_alloc_init(GEOPDResultRefinementMetadata);
        if (GEOPDResultRefinementMetadataReadAllFrom((uint64_t)v45, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          v46 = 40;
LABEL_58:
          v47 = *(void **)(a1 + v46);
          *(_QWORD *)(a1 + v46) = v45;
LABEL_63:

          --v7;
          goto LABEL_75;
        }
LABEL_95:

LABEL_96:
        v54 = 0;
        v55 = &OBJC_IVAR___GEOPDRelatedEntitySection__reader;
        v22 = (int *)MEMORY[0x1E0D82BC8];
LABEL_79:
        if ((v56 & 1) != 0)
LABEL_80:
          *(_BYTE *)(a1 + v55[107]) |= 1u;
        if (v59 || (v54 & 1) == 0)
        {
          *(_BYTE *)(a1 + v55[107]) |= 4u;
          *(_BYTE *)(a1 + v55[107]) |= 0x10u;
          *(_BYTE *)(a1 + v55[107]) |= 8u;
          *(_BYTE *)(a1 + v55[107]) |= 2u;
        }
        else if (v20)
        {
          while (1)
          {
            v50 = *v20++;
            v51 = 4;
            switch(v50)
            {
              case 0:
                goto LABEL_89;
              case 1:
                goto LABEL_88;
              case 2:
                v51 = 16;
                goto LABEL_88;
              case 3:
                v51 = 8;
                goto LABEL_88;
              case 4:
                v51 = 2;
LABEL_88:
                *(_BYTE *)(a1 + v55[107]) |= v51;
                break;
              default:
                continue;
            }
          }
        }
LABEL_89:
        if (v54)
          v3 = *(_BYTE *)(v3 + *v22) == 0;
        else
          v3 = 0;
        if (v59)
        {
          v52 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      case 4:
        if (!v35)
          goto LABEL_64;
        if ((*(_BYTE *)(a1 + 68) & 2) == 0)
        {
          PBReaderReadString();
          v40 = objc_claimAutoreleasedReturnValue();
          v41 = 24;
LABEL_62:
          v47 = *(void **)(a1 + v41);
          *(_QWORD *)(a1 + v41) = v40;
          goto LABEL_63;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_96;
        v49 = *(_BYTE *)(a1 + 68) << 6;
        goto LABEL_74;
      default:
        if ((v56 & 1) == 0 || (*(_BYTE *)(a1 + 68) & 1) != 0)
        {
LABEL_64:
          v48 = PBReaderSkipValueWithTag();
          v22 = (int *)MEMORY[0x1E0D82BC8];
          if ((v48 & 1) == 0)
          {
            v54 = 0;
LABEL_78:
            v55 = &OBJC_IVAR___GEOPDRelatedEntitySection__reader;
            goto LABEL_79;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v42 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v43 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v42;

          }
          v44 = PBUnknownFieldAdd();
          v22 = (int *)MEMORY[0x1E0D82BC8];
          if (!v44)
          {
            v54 = 0;
            v55 = &OBJC_IVAR___GEOPDRelatedEntitySection__reader;
            goto LABEL_80;
          }
        }
LABEL_76:
        if (!(v57 & 1 | (v7 != 0)))
          goto LABEL_77;
        continue;
    }
  }
}

void sub_1892D2B30(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892D2F9C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892D3098(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDResultRefinementSortElementReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 60))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDResultRefinementSortElementReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 60) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDResultRefinementSortElementReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDResultRefinementSortElementReadAllFrom_initialTag;
  Specified = GEOPDResultRefinementSortElementReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    objc_msgSend(*(id *)(a1 + 48), "readAll:", 1);
    objc_msgSend(*(id *)(a1 + 40), "readAll:", 1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_1892D3314(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892D34D0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDResultRefinementSortElementIsDirty(uint64_t a1)
{
  unsigned int v2;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  v2 = *(unsigned __int8 *)(a1 + 68);
  if ((v2 & 0x34) != 0)
    return 1;
  if ((v2 & 8) != 0)
  {
    if ((GEOPDResultRefinementMetadataIsDirty(*(os_unfair_lock_s **)(a1 + 40)) & 1) != 0)
      return 1;
    v2 = *(unsigned __int8 *)(a1 + 68);
  }
  return (v2 >> 1) & 1;
}

void sub_1892D36F0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892D3A60(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDResultRefinementTimeReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  int *v18;
  int *v19;
  int *v20;
  int *v21;
  char v22;
  unsigned int v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  BOOL v29;
  int v30;
  unint64_t v32;
  BOOL v33;
  int *v34;
  int v35;
  int v36;
  BOOL v37;
  uint64_t v38;
  void *v39;
  id v40;
  void *v41;
  int v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  char v46;
  unsigned int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  char v52;
  GEOPDResultRefinementMetadata *v53;
  char v54;
  unsigned int v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  char v60;
  char v61;
  BOOL v62;
  uint64_t v63;
  char v64;
  int v65;
  int v66;
  char v67;
  void *v68;
  int v70;
  int *v71;
  char v72;
  char v73;
  char v74;
  char v75;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 52);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 48));
  v7 = v6;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = ((*(unsigned __int8 *)(a1 + 64) >> 4) & 1)
      + ((*(unsigned __int8 *)(a1 + 64) >> 5) & 1)
      + ((*(unsigned __int8 *)(a1 + 64) >> 3) & 1);
  while (2)
  {
    v14 = 1;
    v15 = 1;
    v16 = 1;
    switch(a3[v11])
    {
      case -4:
        ++v13;
        v14 = v8;
        goto LABEL_8;
      case -3:
        v10 = 1;
        goto LABEL_7;
      case -2:
        v14 = v8;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v17 = v13 != 0;
        v72 = v17 & ~(_BYTE)v12 | v9;
        v73 = v17 | v12 | v72;
        if ((((v17 | v12) | v10) & 1) != 0)
          v18 = 0;
        else
          v18 = a3;
        v74 = (v18 == 0) | v17 | v12;
        v75 = v17 | v12;
        v19 = (int *)MEMORY[0x1E0D82BF0];
        v20 = (int *)MEMORY[0x1E0D82BC8];
        v21 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v13;
LABEL_7:
        v14 = v8;
        v15 = v9;
LABEL_8:
        v16 = v12;
LABEL_10:
        ++v11;
        v8 = v14;
        v9 = v15;
        v12 = v16;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v19) >= *(_QWORD *)(v3 + *v7) || *(_BYTE *)(v3 + *v20))
      goto LABEL_94;
    v22 = 0;
    v23 = 0;
    v24 = 0;
    while (1)
    {
      v25 = *v19;
      v26 = *(_QWORD *)(v3 + v25);
      v27 = v26 + 1;
      if (v26 == -1 || v27 > *(_QWORD *)(v3 + *v7))
        break;
      v28 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v26);
      *(_QWORD *)(v3 + v25) = v27;
      v24 |= (unint64_t)(v28 & 0x7F) << v22;
      if ((v28 & 0x80) == 0)
        goto LABEL_25;
      v22 += 7;
      v29 = v23++ >= 9;
      if (v29)
      {
        v24 = 0;
        v30 = *(unsigned __int8 *)(v3 + *v20);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v20) = 1;
LABEL_25:
    v30 = *(unsigned __int8 *)(v3 + *v20);
    if (*(_BYTE *)(v3 + *v20))
      v24 = 0;
LABEL_27:
    if (v30 || (v24 & 7) == 4)
    {
LABEL_94:
      v70 = 1;
      goto LABEL_95;
    }
    v32 = v24 >> 3;
    v33 = v75;
    if ((v74 & 1) == 0)
    {
      v34 = v18;
      do
      {
        v36 = *v34++;
        v35 = v36;
        v33 = v36 != 0;
        if (v36)
          v37 = v35 == (_DWORD)v32;
        else
          v37 = 1;
      }
      while (!v37);
    }
    switch((int)v32)
    {
      case 1:
        if (!v33)
          goto LABEL_74;
        if ((*(_BYTE *)(a1 + 64) & 0x10) == 0)
        {
          PBReaderReadString();
          v38 = objc_claimAutoreleasedReturnValue();
          v39 = *(void **)(a1 + 24);
          *(_QWORD *)(a1 + 24) = v38;
          goto LABEL_65;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_115;
        v64 = 8 * *(_BYTE *)(a1 + 64);
        goto LABEL_89;
      case 2:
        if ((v10 & 1) == 0)
          goto LABEL_74;
        *(_BYTE *)(a1 + 64) |= 1u;
        v43 = *v19;
        v44 = *(_QWORD *)(v3 + v43);
        if (v44 <= 0xFFFFFFFFFFFFFFF7 && v44 + 8 <= *(_QWORD *)(v3 + *v7))
        {
          v45 = *(_QWORD *)(*(_QWORD *)(v3 + *v21) + v44);
          *(_QWORD *)(v3 + v43) = v44 + 8;
        }
        else
        {
          *(_BYTE *)(v3 + *v20) = 1;
          v45 = 0;
        }
        *(_QWORD *)(a1 + 40) = v45;
        goto LABEL_93;
      case 3:
        if ((v10 & 1) == 0)
          goto LABEL_74;
        v46 = 0;
        v47 = 0;
        v48 = 0;
        *(_BYTE *)(a1 + 64) |= 2u;
        while (2)
        {
          v49 = *v19;
          v50 = *(_QWORD *)(v3 + v49);
          v51 = v50 + 1;
          if (v50 == -1 || v51 > *(_QWORD *)(v3 + *v7))
          {
            *(_BYTE *)(v3 + *v20) = 1;
          }
          else
          {
            v52 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v50);
            *(_QWORD *)(v3 + v49) = v51;
            v48 |= (unint64_t)(v52 & 0x7F) << v46;
            if (v52 < 0)
            {
              v46 += 7;
              v29 = v47++ >= 9;
              if (v29)
              {
                v48 = 0;
                goto LABEL_79;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v20))
          v48 = 0;
LABEL_79:
        v62 = v48 != 0;
        v63 = 60;
        goto LABEL_84;
      case 4:
        if (!v33)
          goto LABEL_74;
        if ((*(_BYTE *)(a1 + 64) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_115;
          v64 = 4 * *(_BYTE *)(a1 + 64);
LABEL_89:
          v11 += v64 >> 7;
          goto LABEL_90;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_115;
        v53 = objc_alloc_init(GEOPDResultRefinementMetadata);
        if (GEOPDResultRefinementMetadataReadAllFrom((uint64_t)v53, (void *)v3, v8 & 1))
        {
          PBReaderRecallMark();
          v39 = *(void **)(a1 + 32);
          *(_QWORD *)(a1 + 32) = v53;
LABEL_65:

          --v11;
LABEL_90:
          v20 = (int *)MEMORY[0x1E0D82BC8];
          v7 = (int *)MEMORY[0x1E0D82BD8];
          goto LABEL_93;
        }

LABEL_115:
        v70 = 0;
        v71 = &OBJC_IVAR___GEOPDRelatedEntitySection__reader;
        v20 = (int *)MEMORY[0x1E0D82BC8];
LABEL_96:
        if ((v72 & 1) != 0)
LABEL_97:
          *(_BYTE *)(a1 + v71[114]) |= 8u;
        if (v75 & 1 | ((v70 & 1) == 0))
        {
          *(_BYTE *)(a1 + v71[114]) |= 0x10u;
          *(_BYTE *)(a1 + v71[114]) |= 0x20u;
          goto LABEL_108;
        }
        if (v18)
        {
          while (2)
          {
            while (1)
            {
              v66 = *v18++;
              v65 = v66;
              if (v66 == 1)
                break;
              if (v65 == 4)
              {
                v67 = 32;
                goto LABEL_107;
              }
              if (!v65)
                goto LABEL_108;
            }
            v67 = 16;
LABEL_107:
            *(_BYTE *)(a1 + v71[114]) |= v67;
            continue;
          }
        }
LABEL_108:
        if (v70)
          v3 = *(_BYTE *)(v3 + *v20) == 0;
        else
          v3 = 0;
        if ((v75 & 1) != 0)
        {
          v68 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      case 5:
        if ((v10 & 1) == 0)
          goto LABEL_74;
        v54 = 0;
        v55 = 0;
        v56 = 0;
        *(_BYTE *)(a1 + 64) |= 4u;
        while (2)
        {
          v57 = *v19;
          v58 = *(_QWORD *)(v3 + v57);
          v59 = v58 + 1;
          if (v58 == -1 || v59 > *(_QWORD *)(v3 + *v7))
          {
            *(_BYTE *)(v3 + *v20) = 1;
          }
          else
          {
            v60 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v58);
            *(_QWORD *)(v3 + v57) = v59;
            v56 |= (unint64_t)(v60 & 0x7F) << v54;
            if (v60 < 0)
            {
              v54 += 7;
              v29 = v55++ >= 9;
              if (v29)
              {
                v56 = 0;
                goto LABEL_83;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v20))
          v56 = 0;
LABEL_83:
        v62 = v56 != 0;
        v63 = 61;
LABEL_84:
        *(_BYTE *)(a1 + v63) = v62;
        goto LABEL_93;
      default:
        if ((v72 & 1) == 0 || (*(_BYTE *)(a1 + 64) & 8) != 0)
        {
LABEL_74:
          v61 = PBReaderSkipValueWithTag();
          v7 = (int *)MEMORY[0x1E0D82BD8];
          v20 = (int *)MEMORY[0x1E0D82BC8];
          if ((v61 & 1) == 0)
          {
            v70 = 0;
LABEL_95:
            v71 = &OBJC_IVAR___GEOPDRelatedEntitySection__reader;
            goto LABEL_96;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v40 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v41 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v40;

          }
          v42 = PBUnknownFieldAdd();
          v20 = (int *)MEMORY[0x1E0D82BC8];
          v7 = (int *)MEMORY[0x1E0D82BD8];
          if (!v42)
          {
            v70 = 0;
            v71 = &OBJC_IVAR___GEOPDRelatedEntitySection__reader;
            goto LABEL_97;
          }
        }
LABEL_93:
        if (!(v73 & 1 | (v11 != 0)))
          goto LABEL_94;
        continue;
    }
  }
}

void sub_1892D4314(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892D47D0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDResultRefinementTimeReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 52))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDResultRefinementTimeReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 52) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDResultRefinementTimeReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDResultRefinementTimeReadAllFrom_initialTag;
  Specified = GEOPDResultRefinementTimeReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    objc_msgSend(*(id *)(a1 + 32), "readAll:", 1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_1892D4A38(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892D4C28(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

os_unfair_lock_s *_GEOPDResultRefinementTimeIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  if ((*(_BYTE *)(a1 + 64) & 0x50) != 0)
    return (os_unfair_lock_s *)1;
  if ((*(_BYTE *)(a1 + 64) & 0x20) != 0)
    return GEOPDResultRefinementMetadataIsDirty(*(os_unfair_lock_s **)(a1 + 32));
  return 0;
}

void sub_1892D4E8C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892D52E8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDResultRefinementToggleReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  char v18;
  int *v19;
  int *v20;
  int *v21;
  int *v22;
  char v23;
  unsigned int v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  BOOL v30;
  int v31;
  unint64_t v33;
  BOOL v34;
  int *v35;
  int v36;
  int v37;
  BOOL v38;
  uint64_t v39;
  void *v40;
  id v41;
  void *v42;
  int v43;
  char v44;
  unsigned int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  char v50;
  GEOPDResultRefinementMetadata *v51;
  char v52;
  unsigned int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  char v58;
  char v59;
  unsigned int v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  char v64;
  char v65;
  unsigned int v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  char v70;
  char v71;
  unsigned int v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  char v77;
  char v78;
  unsigned int v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  char v84;
  char v85;
  BOOL v86;
  uint64_t v87;
  uint64_t v88;
  __int16 v89;
  int v90;
  int v91;
  __int16 v92;
  void *v93;
  int v95;
  char v96;
  char v97;
  char v98;
  char v99;
  char v100;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = &OBJC_IVAR___GEOPDRelatedEntitySection__reader;
  v13 = ((*(unsigned __int16 *)(a1 + 68) >> 7) & 1)
      + (HIBYTE(*(unsigned __int16 *)(a1 + 68)) & 1)
      + ((*(unsigned __int16 *)(a1 + 68) >> 6) & 1);
  while (2)
  {
    v14 = 1;
    v15 = 1;
    v16 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v13;
        v14 = v7;
        goto LABEL_8;
      case -3:
        v9 = 1;
        goto LABEL_7;
      case -2:
        v14 = v7;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v17 = v13 != 0;
        v18 = v17 | v11;
        v96 = v17 & ~(_BYTE)v11 | v8;
        v99 = v17 | v11 | v96;
        if ((((v17 | v11) | v9) & 1) != 0)
          v19 = 0;
        else
          v19 = a3;
        v100 = (v19 == 0) | v18;
        v20 = (int *)MEMORY[0x1E0D82BF0];
        v21 = (int *)MEMORY[0x1E0D82BC8];
        v22 = (int *)MEMORY[0x1E0D82BB8];
        v97 = v9;
        v98 = v17 | v11;
        break;
      default:
        ++v13;
LABEL_7:
        v14 = v7;
        v15 = v8;
LABEL_8:
        v16 = v11;
LABEL_10:
        ++v10;
        v7 = v14;
        v8 = v15;
        v11 = v16;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v20) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v21))
      goto LABEL_137;
    v23 = 0;
    v24 = 0;
    v25 = 0;
    while (1)
    {
      v26 = *v20;
      v27 = *(_QWORD *)(v3 + v26);
      v28 = v27 + 1;
      if (v27 == -1 || v28 > *(_QWORD *)(v3 + *v6))
        break;
      v29 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v27);
      *(_QWORD *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0)
        goto LABEL_25;
      v23 += 7;
      v30 = v24++ >= 9;
      if (v30)
      {
        v25 = 0;
        v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v21) = 1;
LABEL_25:
    v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(_BYTE *)(v3 + *v21))
      v25 = 0;
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_137:
      v95 = 1;
      goto LABEL_138;
    }
    v33 = v25 >> 3;
    v34 = v18;
    if ((v100 & 1) == 0)
    {
      v35 = v19;
      do
      {
        v37 = *v35++;
        v36 = v37;
        v34 = v37 != 0;
        if (v37)
          v38 = v36 == (_DWORD)v33;
        else
          v38 = 1;
      }
      while (!v38);
    }
    switch((int)v33)
    {
      case 1:
        if (!v34)
          goto LABEL_102;
        if ((*(_WORD *)(a1 + v12[123]) & 0x80) == 0)
        {
          PBReaderReadString();
          v39 = objc_claimAutoreleasedReturnValue();
          v40 = *(void **)(a1 + 24);
          *(_QWORD *)(a1 + 24) = v39;
          goto LABEL_61;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_157;
        v12 = &OBJC_IVAR___GEOPDRelatedEntitySection__reader;
        v89 = *(_WORD *)(a1 + 68) << 8;
        goto LABEL_134;
      case 2:
        if ((v9 & 1) == 0)
          goto LABEL_102;
        v44 = 0;
        v45 = 0;
        v46 = 0;
        *(_WORD *)(a1 + v12[123]) |= 8u;
        while (2)
        {
          v47 = *v20;
          v48 = *(_QWORD *)(v3 + v47);
          v49 = v48 + 1;
          if (v48 == -1 || v49 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v50 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v48);
            *(_QWORD *)(v3 + v47) = v49;
            v46 |= (unint64_t)(v50 & 0x7F) << v44;
            if (v50 < 0)
            {
              v44 += 7;
              v30 = v45++ >= 9;
              if (v30)
              {
                v46 = 0;
                goto LABEL_107;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          v46 = 0;
LABEL_107:
        v86 = v46 != 0;
        v87 = 64;
        goto LABEL_129;
      case 3:
        if (!v34)
          goto LABEL_102;
        if ((*(_WORD *)(a1 + v12[123]) & 0x100) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_157;
          v12 = &OBJC_IVAR___GEOPDRelatedEntitySection__reader;
          v89 = *(_WORD *)(a1 + 68) << 7;
LABEL_134:
          v10 += v89 >> 15;
          goto LABEL_135;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_157;
        v51 = objc_alloc_init(GEOPDResultRefinementMetadata);
        if (GEOPDResultRefinementMetadataReadAllFrom((uint64_t)v51, (void *)v3, v7 & 1))
        {
          PBReaderRecallMark();
          v40 = *(void **)(a1 + 32);
          *(_QWORD *)(a1 + 32) = v51;
LABEL_61:

          --v10;
          v12 = &OBJC_IVAR___GEOPDRelatedEntitySection__reader;
LABEL_135:
          v9 = v97;
          v18 = v98;
          v21 = (int *)MEMORY[0x1E0D82BC8];
LABEL_136:
          if (!(v99 & 1 | (v10 != 0)))
            goto LABEL_137;
          continue;
        }

LABEL_157:
        v95 = 0;
        v12 = &OBJC_IVAR___GEOPDRelatedEntitySection__reader;
        v18 = v98;
        v21 = (int *)MEMORY[0x1E0D82BC8];
LABEL_138:
        if ((v96 & 1) != 0)
LABEL_139:
          *(_WORD *)(a1 + v12[123]) |= 0x40u;
        if (v18 & 1 | ((v95 & 1) == 0))
        {
          *(_WORD *)(a1 + v12[123]) |= 0x80u;
          *(_WORD *)(a1 + v12[123]) |= 0x100u;
          goto LABEL_150;
        }
        if (v19)
        {
          while (2)
          {
            while (1)
            {
              v91 = *v19++;
              v90 = v91;
              if (v91 == 1)
                break;
              if (v90 == 3)
              {
                v92 = 256;
                goto LABEL_149;
              }
              if (!v90)
                goto LABEL_150;
            }
            v92 = 128;
LABEL_149:
            *(_WORD *)(a1 + v12[123]) |= v92;
            continue;
          }
        }
LABEL_150:
        if (v95)
        {
          v3 = *(_BYTE *)(v3 + *v21) == 0;
          if ((v18 & 1) == 0)
            return v3;
LABEL_154:
          v93 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        else
        {
          v3 = 0;
          if ((v18 & 1) != 0)
            goto LABEL_154;
        }
        return v3;
      case 4:
        if ((v9 & 1) == 0)
          goto LABEL_102;
        v52 = 0;
        v53 = 0;
        v54 = 0;
        *(_WORD *)(a1 + v12[123]) |= 4u;
        while (2)
        {
          v55 = *v20;
          v56 = *(_QWORD *)(v3 + v55);
          v57 = v56 + 1;
          if (v56 == -1 || v57 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v58 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v56);
            *(_QWORD *)(v3 + v55) = v57;
            v54 |= (unint64_t)(v58 & 0x7F) << v52;
            if (v58 < 0)
            {
              v52 += 7;
              v30 = v53++ >= 9;
              if (v30)
              {
                LODWORD(v54) = 0;
                goto LABEL_111;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          LODWORD(v54) = 0;
LABEL_111:
        v88 = 60;
        goto LABEL_120;
      case 5:
        if ((v9 & 1) == 0)
          goto LABEL_102;
        v59 = 0;
        v60 = 0;
        v54 = 0;
        *(_WORD *)(a1 + v12[123]) |= 1u;
        while (2)
        {
          v61 = *v20;
          v62 = *(_QWORD *)(v3 + v61);
          v63 = v62 + 1;
          if (v62 == -1 || v63 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v64 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v62);
            *(_QWORD *)(v3 + v61) = v63;
            v54 |= (unint64_t)(v64 & 0x7F) << v59;
            if (v64 < 0)
            {
              v59 += 7;
              v30 = v60++ >= 9;
              if (v30)
              {
                LODWORD(v54) = 0;
                goto LABEL_115;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          LODWORD(v54) = 0;
LABEL_115:
        v88 = 52;
        goto LABEL_120;
      case 6:
        if ((v9 & 1) == 0)
          goto LABEL_102;
        v65 = 0;
        v66 = 0;
        v54 = 0;
        *(_WORD *)(a1 + v12[123]) |= 2u;
        while (2)
        {
          v67 = *v20;
          v68 = *(_QWORD *)(v3 + v67);
          v69 = v68 + 1;
          if (v68 == -1 || v69 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v70 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v68);
            *(_QWORD *)(v3 + v67) = v69;
            v54 |= (unint64_t)(v70 & 0x7F) << v65;
            if (v70 < 0)
            {
              v65 += 7;
              v30 = v66++ >= 9;
              if (v30)
              {
                LODWORD(v54) = 0;
                goto LABEL_119;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          LODWORD(v54) = 0;
LABEL_119:
        v88 = 56;
LABEL_120:
        *(_DWORD *)(a1 + v88) = v54;
        goto LABEL_136;
      case 7:
        if ((v9 & 1) == 0)
          goto LABEL_102;
        v71 = 0;
        v72 = 0;
        v73 = 0;
        *(_WORD *)(a1 + v12[123]) |= 0x10u;
        while (2)
        {
          v74 = *v20;
          v75 = *(_QWORD *)(v3 + v74);
          v76 = v75 + 1;
          if (v75 == -1 || v76 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v77 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v75);
            *(_QWORD *)(v3 + v74) = v76;
            v73 |= (unint64_t)(v77 & 0x7F) << v71;
            if (v77 < 0)
            {
              v71 += 7;
              v30 = v72++ >= 9;
              if (v30)
              {
                v73 = 0;
                goto LABEL_124;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          v73 = 0;
LABEL_124:
        v86 = v73 != 0;
        v87 = 65;
        goto LABEL_129;
      case 8:
        if ((v9 & 1) == 0)
          goto LABEL_102;
        v78 = 0;
        v79 = 0;
        v80 = 0;
        *(_WORD *)(a1 + v12[123]) |= 0x20u;
        while (2)
        {
          v81 = *v20;
          v82 = *(_QWORD *)(v3 + v81);
          v83 = v82 + 1;
          if (v82 == -1 || v83 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v84 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v82);
            *(_QWORD *)(v3 + v81) = v83;
            v80 |= (unint64_t)(v84 & 0x7F) << v78;
            if (v84 < 0)
            {
              v78 += 7;
              v30 = v79++ >= 9;
              if (v30)
              {
                v80 = 0;
                goto LABEL_128;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          v80 = 0;
LABEL_128:
        v86 = v80 != 0;
        v87 = 66;
LABEL_129:
        *(_BYTE *)(a1 + v87) = v86;
        goto LABEL_136;
      default:
        if ((v96 & 1) == 0 || (*(_WORD *)(a1 + v12[123]) & 0x40) != 0)
        {
LABEL_102:
          v85 = PBReaderSkipValueWithTag();
          v9 = v97;
          v18 = v98;
          v21 = (int *)MEMORY[0x1E0D82BC8];
          v12 = &OBJC_IVAR___GEOPDRelatedEntitySection__reader;
          if ((v85 & 1) == 0)
          {
            v95 = 0;
            goto LABEL_138;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v41 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v42 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v41;

          }
          v43 = PBUnknownFieldAdd();
          v12 = &OBJC_IVAR___GEOPDRelatedEntitySection__reader;
          v9 = v97;
          v18 = v98;
          v21 = (int *)MEMORY[0x1E0D82BC8];
          if (!v43)
          {
            v95 = 0;
            goto LABEL_139;
          }
        }
        goto LABEL_136;
    }
  }
}

void sub_1892D5DD8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892D64C8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDResultRefinementToggleReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDResultRefinementToggleReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDResultRefinementToggleReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDResultRefinementToggleReadAllFrom_initialTag;
  Specified = GEOPDResultRefinementToggleReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    objc_msgSend(*(id *)(a1 + 32), "readAll:", 1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_1892D6D10(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892D6F80(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

os_unfair_lock_s *_GEOPDResultRefinementToggleIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  if ((*(_WORD *)(a1 + 68) & 0x280) != 0)
    return (os_unfair_lock_s *)1;
  if ((*(_WORD *)(a1 + 68) & 0x100) != 0)
    return GEOPDResultRefinementMetadataIsDirty(*(os_unfair_lock_s **)(a1 + 32));
  return 0;
}

os_unfair_lock_s *GEOPDResultRefinementToggleIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  os_unfair_lock_s *v2;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    v2 = _GEOPDResultRefinementToggleIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 12);
    return v2;
  }
  return result;
}

void sub_1892D72BC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDResultRefinementViewReadAllFrom(uint64_t a1, void *a2, int a3)
{
  char *v5;
  int *v6;
  int *v7;
  int *v8;
  int *v9;
  char v10;
  unsigned int v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  int v18;
  GEOPDResultRefinementSection *v20;
  id v21;
  void *v22;
  _BOOL8 v23;

  v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    v6 = (int *)MEMORY[0x1E0D82BF0];
    v7 = (int *)MEMORY[0x1E0D82BD8];
    v8 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v5[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v5[*MEMORY[0x1E0D82BD8]])
    {
      v9 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v5[*v8])
          break;
        v10 = 0;
        v11 = 0;
        v12 = 0;
        while (1)
        {
          v13 = *v6;
          v14 = *(_QWORD *)&v5[v13];
          v15 = v14 + 1;
          if (v14 == -1 || v15 > *(_QWORD *)&v5[*v7])
            break;
          v16 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v14);
          *(_QWORD *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0)
            goto LABEL_13;
          v10 += 7;
          if (v11++ >= 9)
          {
            v12 = 0;
            v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        v18 = v5[*v8];
        if (v5[*v8])
          v12 = 0;
LABEL_15:
        if (v18 || (v12 & 7) == 4)
          break;
        if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_29;
          v20 = objc_alloc_init(GEOPDResultRefinementSection);
          if (!GEOPDResultRefinementSectionReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          -[GEOPDResultRefinementView addSection:](a1, v20);

        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v21 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v22 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v21;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_29;
        }
      }
      while (*(_QWORD *)&v5[*v6] < *(_QWORD *)&v5[*v7]);
    }
    v23 = v5[*v8] == 0;
  }
  else
  {
LABEL_29:
    v23 = 0;
  }
  objc_sync_exit(v5);

  return v23;
}

void sub_1892D7CC4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892D8178(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDRetainedSearchMetadataReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  char v15;
  unsigned __int8 v16;
  int *v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  BOOL v28;
  int v29;
  unint64_t v31;
  BOOL v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  char v40;
  unsigned int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  char v46;
  id v47;
  void *v48;
  int v49;
  char v50;
  char v51;
  int v52;
  int v53;
  char v54;
  void *v55;
  int v57;
  int *v58;
  char v59;
  char v60;
  char v61;
  BOOL v62;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int8 *)(a1 + 56) >> 2) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 1) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v11;
        v12 = v7;
        goto LABEL_8;
      case -3:
        v9 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v11 != 0;
        v15 = v14 & ~(_BYTE)v7;
        v16 = v14 | v7;
        v59 = v15 | v8;
        v60 = v16 | v15 | v8;
        if (((v16 | v9) & 1) != 0)
          v17 = 0;
        else
          v17 = a3;
        v61 = (v17 == 0) | v16;
        v62 = v16;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_7:
        v12 = v7;
        v13 = v8;
LABEL_8:
        ++v10;
        v7 = v12;
        v8 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v19))
      goto LABEL_73;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0)
        goto LABEL_23;
      v21 += 7;
      v28 = v22++ >= 9;
      if (v28)
      {
        v23 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_25;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_23:
    v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_25:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_73:
      v57 = 1;
      goto LABEL_74;
    }
    v31 = v23 >> 3;
    v32 = v62;
    if ((v61 & 1) == 0)
    {
      v33 = v17;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    if ((_DWORD)v31 == 3)
      break;
    if ((_DWORD)v31 == 2)
    {
      if ((v9 & 1) != 0)
      {
        v40 = 0;
        v41 = 0;
        v42 = 0;
        *(_BYTE *)(a1 + 56) |= 1u;
        while (1)
        {
          v43 = *v18;
          v44 = *(_QWORD *)(v3 + v43);
          v45 = v44 + 1;
          if (v44 == -1 || v45 > *(_QWORD *)(v3 + *v6))
            break;
          v46 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v44);
          *(_QWORD *)(v3 + v43) = v45;
          v42 |= (unint64_t)(v46 & 0x7F) << v40;
          if ((v46 & 0x80) == 0)
            goto LABEL_63;
          v40 += 7;
          v28 = v41++ >= 9;
          if (v28)
          {
            LODWORD(v42) = 0;
            goto LABEL_65;
          }
        }
        *(_BYTE *)(v3 + *v19) = 1;
LABEL_63:
        if (*(_BYTE *)(v3 + *v19))
          LODWORD(v42) = 0;
LABEL_65:
        *(_DWORD *)(a1 + 52) = v42;
        goto LABEL_72;
      }
    }
    else if ((_DWORD)v31 == 1)
    {
      if (v32)
      {
        if ((*(_BYTE *)(a1 + 56) & 4) == 0)
        {
          PBReaderReadString();
          v37 = objc_claimAutoreleasedReturnValue();
          v38 = 24;
          goto LABEL_45;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_93;
        v51 = 32 * *(_BYTE *)(a1 + 56);
        goto LABEL_70;
      }
    }
    else if ((v59 & 1) != 0 && (*(_BYTE *)(a1 + 56) & 2) == 0)
    {
      if (!*(_QWORD *)(a1 + 16))
      {
        v47 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v48 = *(void **)(a1 + 16);
        *(_QWORD *)(a1 + 16) = v47;

      }
      v49 = PBUnknownFieldAdd();
      v19 = (int *)MEMORY[0x1E0D82BC8];
      if (!v49)
      {
        v57 = 0;
        v58 = &OBJC_IVAR___GEOPDRelatedEntitySection__reader;
        goto LABEL_76;
      }
      goto LABEL_72;
    }
LABEL_60:
    v50 = PBReaderSkipValueWithTag();
    v19 = (int *)MEMORY[0x1E0D82BC8];
    if ((v50 & 1) == 0)
    {
      v57 = 0;
LABEL_74:
      v58 = &OBJC_IVAR___GEOPDRelatedEntitySection__reader;
      goto LABEL_75;
    }
LABEL_72:
    if (!(v60 & 1 | (v10 != 0)))
      goto LABEL_73;
  }
  if (!v32)
    goto LABEL_60;
  if ((*(_BYTE *)(a1 + 56) & 8) == 0)
  {
    PBReaderReadString();
    v37 = objc_claimAutoreleasedReturnValue();
    v38 = 32;
LABEL_45:
    v39 = *(void **)(a1 + v38);
    *(_QWORD *)(a1 + v38) = v37;

    --v10;
LABEL_71:
    v19 = (int *)MEMORY[0x1E0D82BC8];
    goto LABEL_72;
  }
  if ((PBReaderSkipValueWithTag() & 1) != 0)
  {
    v51 = 16 * *(_BYTE *)(a1 + 56);
LABEL_70:
    v10 += v51 >> 7;
    goto LABEL_71;
  }
LABEL_93:
  v57 = 0;
  v58 = &OBJC_IVAR___GEOPDRelatedEntitySection__reader;
  v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_75:
  if ((v59 & 1) == 0)
    goto LABEL_77;
LABEL_76:
  *(_BYTE *)(a1 + v58[137]) |= 2u;
LABEL_77:
  if (v62 || (v57 & 1) == 0)
  {
    *(_BYTE *)(a1 + v58[137]) |= 4u;
    *(_BYTE *)(a1 + v58[137]) |= 8u;
    goto LABEL_87;
  }
  if (v17)
  {
    while (2)
    {
      while (1)
      {
        v53 = *v17++;
        v52 = v53;
        if (v53 == 1)
          break;
        if (v52 == 3)
        {
          v54 = 8;
          goto LABEL_86;
        }
        if (!v52)
          goto LABEL_87;
      }
      v54 = 4;
LABEL_86:
      *(_BYTE *)(a1 + v58[137]) |= v54;
      continue;
    }
  }
LABEL_87:
  if (v57)
    v3 = *(_BYTE *)(v3 + *v19) == 0;
  else
    v3 = 0;
  if (v62)
  {
    v55 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_1892D8870(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892D8C64(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDRetainedSearchMetadataReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDRetainedSearchMetadataReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDRetainedSearchMetadataReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDRetainedSearchMetadataReadAllFrom_initialTag;
  Specified = GEOPDRetainedSearchMetadataReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_1892D90B0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDRetainedSearchMetadataIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unint64_t v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int v22;
  _BOOL8 v24;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_38;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        goto LABEL_38;
      v17 = v8 >> 3;
      if ((v8 >> 3) == 3)
        break;
      if ((_DWORD)v17 == 2)
      {
        if ((v8 & 7) != 0)
          goto LABEL_40;
        v18 = 0;
        while (1)
        {
          v19 = *v2;
          v20 = *(_QWORD *)&a1[v19];
          v21 = v20 + 1;
          if (v20 == -1 || v21 > *(_QWORD *)&a1[*v3])
            break;
          v22 = *(char *)(*(_QWORD *)&a1[*v5] + v20);
          *(_QWORD *)&a1[v19] = v21;
          if (v22 < 0 && v18++ <= 8)
            continue;
          goto LABEL_37;
        }
        a1[*v4] = 1;
      }
      else
      {
        if ((_DWORD)v17 == 1)
        {
          if (v15 != 2)
            goto LABEL_40;
          goto LABEL_24;
        }
        if (!PBReaderSkipValueWithTag())
        {
LABEL_40:
          v24 = 0;
          goto LABEL_39;
        }
      }
LABEL_37:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_38;
    }
    if (v15 != 2)
      goto LABEL_40;
LABEL_24:
    if ((PBReaderSkipValueWithTag() & 1) == 0)
      goto LABEL_40;
    goto LABEL_37;
  }
LABEL_38:
  v24 = a1[*v4] == 0;
LABEL_39:
  PBReaderRecallMark();
  return v24;
}

void sub_1892D9480(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDRetainedSearchMetadataIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v2 = (*(_BYTE *)(a1 + 56) & 0x1C) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return v2;
}

void sub_1892D96A4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892D9E50(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchEnrichmentRevisionMetadataReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  id v25;
  void *v26;
  _BOOL8 v27;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 1)
        {
          v18 = 0;
          v19 = 0;
          v20 = 0;
          *(_BYTE *)(a1 + 20) |= 1u;
          while (1)
          {
            v21 = *v4;
            v22 = *(_QWORD *)&v3[v21];
            v23 = v22 + 1;
            if (v22 == -1 || v23 > *(_QWORD *)&v3[*v5])
              break;
            v24 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v22);
            *(_QWORD *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0)
              goto LABEL_32;
            v18 += 7;
            v15 = v19++ >= 9;
            if (v15)
            {
              LODWORD(v20) = 0;
              goto LABEL_34;
            }
          }
          v3[*v6] = 1;
LABEL_32:
          if (v3[*v6])
            LODWORD(v20) = 0;
LABEL_34:
          *(_DWORD *)(a1 + 16) = v20;
        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v25 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v26 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v25;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_37;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v27 = v3[*v6] == 0;
  }
  else
  {
LABEL_37:
    v27 = 0;
  }
  objc_sync_exit(v3);

  return v27;
}

void sub_1892DA694(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892DAA90(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchOriginationInfoReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  char v18;
  char v19;
  int *v20;
  int *v21;
  char v22;
  int *v23;
  int *v24;
  char v25;
  unsigned int v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  BOOL v32;
  int v33;
  int v34;
  unint64_t v36;
  BOOL v37;
  int *v38;
  int v39;
  int v40;
  BOOL v41;
  char v42;
  unsigned int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  char v48;
  id v49;
  void *v50;
  int v51;
  GEOPDSearchOriginationRoutePlanningParameters *v52;
  void *v53;
  char v54;
  unsigned int v55;
  uint64_t v56;
  int *v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  char v61;
  char v62;
  unsigned int v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  char v67;
  char v68;
  uint64_t v69;
  char v70;
  unsigned int v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  char v76;
  char v77;
  int v78;
  int v79;
  void *v80;
  char v82;
  char v83;
  int v84;
  char v85;
  char v86;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 60);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 56));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = &OBJC_IVAR___GEOPDRelatedEntitySection__reader;
  v13 = ((*(unsigned __int8 *)(a1 + 76) >> 4) & 1)
      + ((*(unsigned __int8 *)(a1 + 76) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 76) >> 2) & 1);
  while (2)
  {
    v14 = 1;
    v15 = 1;
    v16 = 1;
    switch(a3[v9])
    {
      case -4:
        ++v13;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v15 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v17 = v13 != 0;
        v18 = v17 & ~(_BYTE)v11 | v7;
        v19 = v17 | v11;
        v20 = (int *)MEMORY[0x1E0D82BF0];
        if ((((v17 | v11) | v8) & 1) != 0)
          v21 = 0;
        else
          v21 = a3;
        v84 = 1;
        v22 = v18;
        if (*(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(v3 + *v6))
          goto LABEL_111;
        v82 = v18;
        v85 = v19 | v18;
        v23 = (int *)MEMORY[0x1E0D82BC8];
        v86 = (v21 == 0) | v19;
        v24 = (int *)MEMORY[0x1E0D82BB8];
        v83 = v19;
        break;
      default:
        ++v13;
LABEL_7:
        v14 = v7;
LABEL_8:
        v15 = v10;
        v16 = v11;
LABEL_10:
        ++v9;
        v7 = v14;
        v10 = v15;
        v11 = v16;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_BYTE *)(v3 + *v23))
      goto LABEL_109;
    v25 = 0;
    v26 = 0;
    v27 = 0;
    while (1)
    {
      v28 = *v20;
      v29 = *(_QWORD *)(v3 + v28);
      v30 = v29 + 1;
      if (v29 == -1 || v30 > *(_QWORD *)(v3 + *v6))
        break;
      v31 = *(_BYTE *)(*(_QWORD *)(v3 + *v24) + v29);
      *(_QWORD *)(v3 + v28) = v30;
      v27 |= (unint64_t)(v31 & 0x7F) << v25;
      if ((v31 & 0x80) == 0)
        goto LABEL_25;
      v25 += 7;
      v32 = v26++ >= 9;
      if (v32)
      {
        v27 = 0;
        v33 = *(unsigned __int8 *)(v3 + *v23);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v23) = 1;
LABEL_25:
    v33 = *(unsigned __int8 *)(v3 + *v23);
    if (*(_BYTE *)(v3 + *v23))
      v27 = 0;
LABEL_27:
    v34 = v27 & 7;
    if (v33 || v34 == 4)
    {
LABEL_109:
      v84 = 1;
      goto LABEL_110;
    }
    v36 = v27 >> 3;
    v37 = v19;
    if ((v86 & 1) == 0)
    {
      v38 = v21;
      do
      {
        v40 = *v38++;
        v39 = v40;
        v37 = v40 != 0;
        if (v40)
          v41 = v39 == (_DWORD)v36;
        else
          v41 = 1;
      }
      while (!v41);
    }
    switch((int)v36)
    {
      case 1:
        if ((v8 & 1) == 0)
          goto LABEL_82;
        v42 = 0;
        v43 = 0;
        v44 = 0;
        *(_BYTE *)(a1 + v12[146]) |= 2u;
        v23 = (int *)MEMORY[0x1E0D82BC8];
        while (1)
        {
          v45 = *v20;
          v46 = *(_QWORD *)(v3 + v45);
          v47 = v46 + 1;
          if (v46 == -1 || v47 > *(_QWORD *)(v3 + *v6))
            break;
          v48 = *(_BYTE *)(*(_QWORD *)(v3 + *v24) + v46);
          *(_QWORD *)(v3 + v45) = v47;
          v44 |= (unint64_t)(v48 & 0x7F) << v42;
          if ((v48 & 0x80) == 0)
            goto LABEL_85;
          v42 += 7;
          v32 = v43++ >= 9;
          if (v32)
          {
            LODWORD(v44) = 0;
            goto LABEL_87;
          }
        }
        *(_BYTE *)(v3 + *v23) = 1;
LABEL_85:
        if (*(_BYTE *)(v3 + *v23))
          LODWORD(v44) = 0;
LABEL_87:
        v69 = 72;
        goto LABEL_92;
      case 2:
        if (!v37)
          goto LABEL_82;
        if ((*(_BYTE *)(a1 + v12[146]) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_130;
          v12 = &OBJC_IVAR___GEOPDRelatedEntitySection__reader;
          v9 += *(unsigned __int8 *)(a1 + 76) << 27 >> 31;
          goto LABEL_95;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_130;
        v52 = objc_alloc_init(GEOPDSearchOriginationRoutePlanningParameters);
        if (GEOPDSearchOriginationRoutePlanningParametersReadAllFrom((uint64_t)v52, (void *)v3))
        {
          PBReaderRecallMark();
          v53 = *(void **)(a1 + 48);
          *(_QWORD *)(a1 + 48) = v52;

          --v9;
          v12 = &OBJC_IVAR___GEOPDRelatedEntitySection__reader;
LABEL_95:
          v19 = v83;
          v23 = (int *)MEMORY[0x1E0D82BC8];
LABEL_106:
          v24 = (int *)MEMORY[0x1E0D82BB8];
LABEL_107:
          if (!(v85 & 1 | (v9 != 0)) || *(_QWORD *)(v3 + *v20) >= *(_QWORD *)(v3 + *v6))
            goto LABEL_109;
          continue;
        }

LABEL_130:
        v84 = 0;
        v12 = &OBJC_IVAR___GEOPDRelatedEntitySection__reader;
        v19 = v83;
LABEL_110:
        v22 = v82;
LABEL_111:
        if ((v22 & 1) != 0)
LABEL_112:
          *(_BYTE *)(a1 + v12[146]) |= 4u;
        if (v19 & 1 | ((v84 & 1) == 0))
        {
          *(_BYTE *)(a1 + v12[146]) |= 0x10u;
          *(_BYTE *)(a1 + v12[146]) |= 8u;
          goto LABEL_123;
        }
        if (v21)
        {
          while (1)
          {
            v79 = *v21++;
            v78 = v79;
            if (v79 == 2)
              break;
            if (v78 == 3)
            {
              v77 = 8;
LABEL_119:
              *(_BYTE *)(a1 + v12[146]) |= v77;
            }
            else if (!v78)
            {
              goto LABEL_123;
            }
          }
          v77 = 16;
          goto LABEL_119;
        }
LABEL_123:
        if (v84)
        {
          v3 = *(_BYTE *)(v3 + (int)*MEMORY[0x1E0D82BC8]) == 0;
          if ((v19 & 1) == 0)
            return v3;
LABEL_127:
          v80 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        else
        {
          v3 = 0;
          if ((v19 & 1) != 0)
            goto LABEL_127;
        }
        return v3;
      case 3:
        if (!v37 || (*(_BYTE *)(a1 + v12[146]) & 8) != 0)
          goto LABEL_82;
        if (v34 == 2)
        {
          if (!PBReaderPlaceMark())
            goto LABEL_130;
          v23 = (int *)MEMORY[0x1E0D82BC8];
          while (*(_QWORD *)(v3 + *v20) < *(_QWORD *)(v3 + *v6))
          {
            if (*(_BYTE *)(v3 + *v23))
              break;
            v54 = 0;
            v55 = 0;
            v56 = 0;
            v57 = (int *)MEMORY[0x1E0D82BB8];
            while (1)
            {
              v58 = *v20;
              v59 = *(_QWORD *)(v3 + v58);
              v60 = v59 + 1;
              if (v59 == -1 || v60 > *(_QWORD *)(v3 + *v6))
                break;
              v61 = *(_BYTE *)(*(_QWORD *)(v3 + *v57) + v59);
              *(_QWORD *)(v3 + v58) = v60;
              v56 |= (unint64_t)(v61 & 0x7F) << v54;
              if (v61 < 0)
              {
                v54 += 7;
                v32 = v55++ >= 9;
                if (!v32)
                  continue;
              }
              goto LABEL_72;
            }
            *(_BYTE *)(v3 + *v23) = 1;
LABEL_72:
            PBRepeatedInt32Add();
          }
          PBReaderRecallMark();
        }
        else
        {
          v70 = 0;
          v71 = 0;
          v72 = 0;
          v23 = (int *)MEMORY[0x1E0D82BC8];
          while (1)
          {
            v73 = *v20;
            v74 = *(_QWORD *)(v3 + v73);
            v75 = v74 + 1;
            if (v74 == -1 || v75 > *(_QWORD *)(v3 + *v6))
              break;
            v76 = *(_BYTE *)(*(_QWORD *)(v3 + *v24) + v74);
            *(_QWORD *)(v3 + v73) = v75;
            v72 |= (unint64_t)(v76 & 0x7F) << v70;
            if (v76 < 0)
            {
              v70 += 7;
              v32 = v71++ >= 9;
              if (!v32)
                continue;
            }
            goto LABEL_104;
          }
          *(_BYTE *)(v3 + *v23) = 1;
LABEL_104:
          PBRepeatedInt32Add();
        }
        v12 = &OBJC_IVAR___GEOPDRelatedEntitySection__reader;
        v19 = v83;
        goto LABEL_106;
      case 4:
        if ((v8 & 1) == 0)
          goto LABEL_82;
        v62 = 0;
        v63 = 0;
        v44 = 0;
        *(_BYTE *)(a1 + v12[146]) |= 1u;
        v23 = (int *)MEMORY[0x1E0D82BC8];
        while (2)
        {
          v64 = *v20;
          v65 = *(_QWORD *)(v3 + v64);
          v66 = v65 + 1;
          if (v65 == -1 || v66 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v23) = 1;
          }
          else
          {
            v67 = *(_BYTE *)(*(_QWORD *)(v3 + *v24) + v65);
            *(_QWORD *)(v3 + v64) = v66;
            v44 |= (unint64_t)(v67 & 0x7F) << v62;
            if (v67 < 0)
            {
              v62 += 7;
              v32 = v63++ >= 9;
              if (v32)
              {
                LODWORD(v44) = 0;
                goto LABEL_91;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v23))
          LODWORD(v44) = 0;
LABEL_91:
        v69 = 68;
LABEL_92:
        *(_DWORD *)(a1 + v69) = v44;
        goto LABEL_107;
      default:
        if ((v82 & 1) == 0 || (*(_BYTE *)(a1 + v12[146]) & 4) != 0)
        {
LABEL_82:
          v68 = PBReaderSkipValueWithTag();
          v24 = (int *)MEMORY[0x1E0D82BB8];
          v19 = v83;
          v12 = &OBJC_IVAR___GEOPDRelatedEntitySection__reader;
          v23 = (int *)MEMORY[0x1E0D82BC8];
          if ((v68 & 1) == 0)
          {
            v84 = 0;
            goto LABEL_110;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v49 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v50 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v49;

          }
          v51 = PBUnknownFieldAdd();
          v12 = &OBJC_IVAR___GEOPDRelatedEntitySection__reader;
          v19 = v83;
          v23 = (int *)MEMORY[0x1E0D82BC8];
          v24 = (int *)MEMORY[0x1E0D82BB8];
          if (!v51)
          {
            v84 = 0;
            goto LABEL_112;
          }
        }
        goto LABEL_107;
    }
  }
}

void sub_1892DB42C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892DBA50(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchOriginationInfoReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 60))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDSearchOriginationInfoReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 60) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDSearchOriginationInfoReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDSearchOriginationInfoReadAllFrom_initialTag;
  Specified = GEOPDSearchOriginationInfoReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_1892DC29C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchOriginationInfoIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  BOOL v13;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  char v23;
  unsigned int v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  int v30;
  int v31;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  int v41;
  unsigned int v42;
  unsigned int v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  int v47;
  int v48;
  unsigned int v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  int v53;
  _BOOL8 v54;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] >= *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
LABEL_95:
    v54 = a1[*v4] == 0;
    PBReaderRecallMark();
    return v54;
  }
  v5 = (int *)MEMORY[0x1E0D82BB8];
  while (2)
  {
    if (a1[*v4])
      goto LABEL_95;
    v6 = 0;
    v7 = 0;
    v8 = 0;
    while (1)
    {
      v9 = *v2;
      v10 = *(_QWORD *)&a1[v9];
      v11 = v10 + 1;
      if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
        break;
      v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
      *(_QWORD *)&a1[v9] = v11;
      v8 |= (unint64_t)(v12 & 0x7F) << v6;
      if ((v12 & 0x80) == 0)
        goto LABEL_12;
      v6 += 7;
      v13 = v7++ >= 9;
      if (v13)
      {
        v8 = 0;
        v14 = a1[*v4];
        goto LABEL_14;
      }
    }
    a1[*v4] = 1;
LABEL_12:
    v14 = a1[*v4];
    if (a1[*v4])
      v8 = 0;
LABEL_14:
    v15 = v8 & 7;
    if (v14 || v15 == 4)
      goto LABEL_95;
    switch((v8 >> 3))
    {
      case 1u:
        if ((v8 & 7) != 0)
          goto LABEL_97;
        v17 = 0;
        while (1)
        {
          v18 = *v2;
          v19 = *(_QWORD *)&a1[v18];
          v20 = v19 + 1;
          if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
            goto LABEL_80;
          v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
          *(_QWORD *)&a1[v18] = v20;
          if (v21 < 0)
          {
            v22 = v17++ > 8;
            if (!v22)
              continue;
          }
          goto LABEL_94;
        }
      case 2u:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_97;
        objc_msgSend(a1, "position", 0, 0);
        objc_msgSend(a1, "length");
LABEL_32:
        if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3] || a1[*v4])
          goto LABEL_81;
        v23 = 0;
        v24 = 0;
        v25 = 0;
        while (1)
        {
          v26 = *v2;
          v27 = *(_QWORD *)&a1[v26];
          v28 = v27 + 1;
          if (v27 == -1 || v28 > *(_QWORD *)&a1[*v3])
            break;
          v29 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v27);
          *(_QWORD *)&a1[v26] = v28;
          v25 |= (unint64_t)(v29 & 0x7F) << v23;
          if ((v29 & 0x80) == 0)
            goto LABEL_42;
          v23 += 7;
          v13 = v24++ >= 9;
          if (v13)
          {
            v25 = 0;
            v30 = a1[*v4];
            goto LABEL_44;
          }
        }
        a1[*v4] = 1;
LABEL_42:
        v30 = a1[*v4];
        if (a1[*v4])
          v25 = 0;
LABEL_44:
        v31 = v25 & 7;
        if (v30 || v31 == 4)
        {
LABEL_81:
          v48 = a1[*v4];
          PBReaderRecallMark();
          if (v48)
            goto LABEL_97;
LABEL_93:
          PBReaderRecallMark();
LABEL_94:
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_95;
          continue;
        }
        if ((v25 >> 3) == 2)
        {
          if ((v25 & 7) == 0)
          {
            v33 = 0;
            do
            {
              v34 = *v2;
              v35 = *(_QWORD *)&a1[v34];
              v36 = v35 + 1;
              if (v35 == -1 || v36 > *(_QWORD *)&a1[*v3])
              {
                a1[*v4] = 1;
                goto LABEL_32;
              }
              v37 = *(char *)(*(_QWORD *)&a1[*v5] + v35);
              *(_QWORD *)&a1[v34] = v36;
              if ((v37 & 0x80000000) == 0)
                break;
              v22 = v33++ > 8;
            }
            while (!v22);
            goto LABEL_32;
          }
        }
        else
        {
          if ((v25 >> 3) != 1)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0)
              goto LABEL_96;
            goto LABEL_32;
          }
          if (v31 == 2 && PBReaderPlaceMark() && GEOLatLngIsValid(a1))
          {
            PBReaderRecallMark();
            goto LABEL_32;
          }
        }
LABEL_96:
        PBReaderRecallMark();
LABEL_97:
        PBReaderRecallMark();
        return 0;
      case 3u:
        if (v15 != 2)
        {
          if ((v8 & 7) != 0)
            goto LABEL_97;
          while (1)
          {
            v38 = *v2;
            v39 = *(_QWORD *)&a1[v38];
            v40 = v39 + 1;
            if (v39 == -1 || v40 > *(_QWORD *)&a1[*v3])
              break;
            v41 = *(char *)(*(_QWORD *)&a1[*v5] + v39);
            *(_QWORD *)&a1[v38] = v40;
            if (v41 < 0)
            {
              v42 = v15++;
              if (v42 <= 8)
                continue;
            }
            goto LABEL_94;
          }
LABEL_80:
          a1[*v4] = 1;
          goto LABEL_94;
        }
        if (!PBReaderPlaceMark())
          goto LABEL_97;
LABEL_84:
        while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
        {
          v49 = a1[*v4];
          if (a1[*v4])
            break;
          while (1)
          {
            v50 = *v2;
            v51 = *(_QWORD *)&a1[v50];
            v52 = v51 + 1;
            if (v51 == -1 || v52 > *(_QWORD *)&a1[*v3])
              break;
            v53 = *(char *)(*(_QWORD *)&a1[*v5] + v51);
            *(_QWORD *)&a1[v50] = v52;
            if (v53 < 0)
            {
              v13 = v49++ >= 9;
              if (!v13)
                continue;
            }
            goto LABEL_84;
          }
          a1[*v4] = 1;
        }
        goto LABEL_93;
      case 4u:
        if ((v8 & 7) != 0)
          goto LABEL_97;
        v43 = 0;
        while (1)
        {
          v44 = *v2;
          v45 = *(_QWORD *)&a1[v44];
          v46 = v45 + 1;
          if (v45 == -1 || v46 > *(_QWORD *)&a1[*v3])
            goto LABEL_80;
          v47 = *(char *)(*(_QWORD *)&a1[*v5] + v45);
          *(_QWORD *)&a1[v44] = v46;
          if (v47 < 0)
          {
            v22 = v43++ > 8;
            if (!v22)
              continue;
          }
          goto LABEL_94;
        }
      default:
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_97;
        goto LABEL_94;
    }
  }
}

void sub_1892DC9B4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchOriginationInfoIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  v2 = (*(_BYTE *)(a1 + 76) & 0x38) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return v2;
}

void sub_1892DCC4C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchOriginationRoutePlanningParametersReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  GEOLatLng *v18;
  void *v19;
  char v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  id v27;
  void *v28;
  _BOOL8 v29;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 2)
        {
          v20 = 0;
          v21 = 0;
          v22 = 0;
          *(_BYTE *)(a1 + 28) |= 1u;
          while (1)
          {
            v23 = *v4;
            v24 = *(_QWORD *)&v3[v23];
            v25 = v24 + 1;
            if (v24 == -1 || v25 > *(_QWORD *)&v3[*v5])
              break;
            v26 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v24);
            *(_QWORD *)&v3[v23] = v25;
            v22 |= (unint64_t)(v26 & 0x7F) << v20;
            if ((v26 & 0x80) == 0)
              goto LABEL_36;
            v20 += 7;
            v15 = v21++ >= 9;
            if (v15)
            {
              v22 = 0;
              goto LABEL_38;
            }
          }
          v3[*v6] = 1;
LABEL_36:
          if (v3[*v6])
            v22 = 0;
LABEL_38:
          *(_BYTE *)(a1 + 24) = v22 != 0;
        }
        else if ((v10 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_42;
          v18 = objc_alloc_init(GEOLatLng);
          if (!GEOLatLngReadAllFrom((uint64_t)v18, v3))
          {

            goto LABEL_42;
          }
          PBReaderRecallMark();
          v19 = *(void **)(a1 + 16);
          *(_QWORD *)(a1 + 16) = v18;

        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v27 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v28 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v27;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_42;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v29 = v3[*v6] == 0;
  }
  else
  {
LABEL_42:
    v29 = 0;
  }
  objc_sync_exit(v3);

  return v29;
}

void sub_1892DD7A0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892DDBA8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchSectionReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  const __int16 *v12;
  uint16x4_t v13;
  int16x4_t v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  int *v20;
  int *v21;
  int *v22;
  int *v23;
  char v24;
  unsigned int v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  BOOL v31;
  int v32;
  unint64_t v34;
  BOOL v35;
  int *v36;
  int v37;
  int v38;
  BOOL v39;
  uint64_t v40;
  void *v41;
  id v42;
  void *v43;
  int v44;
  char v45;
  unsigned int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  char v51;
  GEOPDSearchSectionPlace *v52;
  uint64_t v53;
  char v54;
  unsigned int v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  char v59;
  char v60;
  unsigned int v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  char v65;
  char v66;
  unsigned int v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  char v71;
  char v72;
  uint64_t v73;
  __int16 v74;
  int v75;
  __int16 v76;
  void *v77;
  int v79;
  int *v80;
  char v81;
  char v82;
  char v83;
  char v84;
  char v85;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 52);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 48));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = (const __int16 *)(a1 + 76);
  v13 = (uint16x4_t)vld1_dup_s16(v12);
  v14 = (int16x4_t)vand_s8((int8x8_t)vshl_u16(v13, (uint16x4_t)0xFFFCFFFAFFFBFFF9), (int8x8_t)0x1000100010001);
  v14.i16[0] = vaddv_s16(v14);
  v15 = v14.i32[0];
  while (2)
  {
    v16 = 1;
    v17 = 1;
    v18 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v15;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v17 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v19 = v15 > 1;
        v81 = v19 & ~(_BYTE)v11 | v9;
        v82 = v8;
        v83 = v19 | v11 | v81;
        if ((((v19 | v11) | v8) & 1) != 0)
          v20 = 0;
        else
          v20 = a3;
        v84 = (v20 == 0) | v19 | v11;
        v85 = v19 | v11;
        v21 = (int *)MEMORY[0x1E0D82BF0];
        v22 = (int *)MEMORY[0x1E0D82BC8];
        v23 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v15;
LABEL_7:
        v16 = v9;
LABEL_8:
        v17 = v10;
        v18 = v11;
LABEL_10:
        ++v7;
        v9 = v16;
        v10 = v17;
        v11 = v18;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v21) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v22))
      goto LABEL_120;
    v24 = 0;
    v25 = 0;
    v26 = 0;
    while (1)
    {
      v27 = *v21;
      v28 = *(_QWORD *)(v3 + v27);
      v29 = v28 + 1;
      if (v28 == -1 || v29 > *(_QWORD *)(v3 + *v6))
        break;
      v30 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v28);
      *(_QWORD *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0)
        goto LABEL_25;
      v24 += 7;
      v31 = v25++ >= 9;
      if (v31)
      {
        v26 = 0;
        v32 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v22) = 1;
LABEL_25:
    v32 = *(unsigned __int8 *)(v3 + *v22);
    if (*(_BYTE *)(v3 + *v22))
      v26 = 0;
LABEL_27:
    if (v32 || (v26 & 7) == 4)
    {
LABEL_120:
      v79 = 1;
      goto LABEL_121;
    }
    v34 = v26 >> 3;
    v35 = v85;
    if ((v84 & 1) == 0)
    {
      v36 = v20;
      do
      {
        v38 = *v36++;
        v37 = v38;
        v35 = v38 != 0;
        if (v38)
          v39 = v37 == (_DWORD)v34;
        else
          v39 = 1;
      }
      while (!v39);
    }
    switch((int)v34)
    {
      case 1:
        if (!v35)
          goto LABEL_92;
        if ((*(_WORD *)(a1 + 76) & 0x20) == 0)
        {
          PBReaderReadString();
          v40 = objc_claimAutoreleasedReturnValue();
          v41 = *(void **)(a1 + 24);
          *(_QWORD *)(a1 + 24) = v40;
          goto LABEL_67;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_138;
        v74 = *(_WORD *)(a1 + 76) << 10;
        goto LABEL_117;
      case 2:
        if ((v82 & 1) == 0)
          goto LABEL_92;
        v45 = 0;
        v46 = 0;
        v47 = 0;
        *(_WORD *)(a1 + 76) |= 8u;
        while (2)
        {
          v48 = *v21;
          v49 = *(_QWORD *)(v3 + v48);
          v50 = v49 + 1;
          if (v49 == -1 || v50 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v22) = 1;
          }
          else
          {
            v51 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v49);
            *(_QWORD *)(v3 + v48) = v50;
            v47 |= (unint64_t)(v51 & 0x7F) << v45;
            if (v51 < 0)
            {
              v45 += 7;
              v31 = v46++ >= 9;
              if (v31)
              {
                LODWORD(v47) = 0;
                goto LABEL_97;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v22))
          LODWORD(v47) = 0;
LABEL_97:
        v73 = 72;
        goto LABEL_110;
      case 3:
        if (!v35)
          goto LABEL_92;
        if ((*(_WORD *)(a1 + 76) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_138;
          v74 = *(_WORD *)(a1 + 76) << 8;
          goto LABEL_117;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_138;
        v52 = objc_alloc_init(GEOPDSearchSectionPlace);
        if (!GEOPDSearchSectionPlaceReadAllFrom((uint64_t)v52, (void *)v3))
          goto LABEL_137;
        PBReaderRecallMark();
        v53 = 40;
        goto LABEL_66;
      case 4:
        if (!v35)
          goto LABEL_92;
        if ((*(_WORD *)(a1 + 76) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_138;
          v74 = *(_WORD *)(a1 + 76) << 9;
LABEL_117:
          v7 += v74 >> 15;
LABEL_118:
          v22 = (int *)MEMORY[0x1E0D82BC8];
          goto LABEL_119;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_138;
        v52 = objc_alloc_init(GEOPDSearchSectionGuide);
        if (GEOPDSearchSectionGuideReadAllFrom((uint64_t)v52, (void *)v3))
        {
          PBReaderRecallMark();
          v53 = 32;
LABEL_66:
          v41 = *(void **)(a1 + v53);
          *(_QWORD *)(a1 + v53) = v52;
LABEL_67:

          --v7;
          goto LABEL_118;
        }
LABEL_137:

LABEL_138:
        v79 = 0;
        v80 = &OBJC_IVAR___GEOPDRelatedEntitySection__reader;
        v22 = (int *)MEMORY[0x1E0D82BC8];
LABEL_122:
        if ((v81 & 1) != 0)
LABEL_123:
          *(_WORD *)(a1 + v80[157]) |= 0x10u;
        if (v85 & 1 | ((v79 & 1) == 0))
        {
          *(_WORD *)(a1 + v80[157]) |= 0x20u;
          *(_WORD *)(a1 + v80[157]) |= 0x80u;
          *(_WORD *)(a1 + v80[157]) |= 0x40u;
        }
        else if (v20)
        {
          while (1)
          {
            v75 = *v20++;
            v76 = 32;
            switch(v75)
            {
              case 0:
                goto LABEL_131;
              case 1:
                goto LABEL_130;
              case 3:
                v76 = 128;
                goto LABEL_130;
              case 4:
                v76 = 64;
LABEL_130:
                *(_WORD *)(a1 + v80[157]) |= v76;
                break;
              default:
                continue;
            }
          }
        }
LABEL_131:
        if (v79)
          v3 = *(_BYTE *)(v3 + *v22) == 0;
        else
          v3 = 0;
        if ((v85 & 1) != 0)
        {
          v77 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      case 5:
        if ((v82 & 1) == 0)
          goto LABEL_92;
        v54 = 0;
        v55 = 0;
        v47 = 0;
        *(_WORD *)(a1 + 76) |= 2u;
        while (2)
        {
          v56 = *v21;
          v57 = *(_QWORD *)(v3 + v56);
          v58 = v57 + 1;
          if (v57 == -1 || v58 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v22) = 1;
          }
          else
          {
            v59 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v57);
            *(_QWORD *)(v3 + v56) = v58;
            v47 |= (unint64_t)(v59 & 0x7F) << v54;
            if (v59 < 0)
            {
              v54 += 7;
              v31 = v55++ >= 9;
              if (v31)
              {
                LODWORD(v47) = 0;
                goto LABEL_101;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v22))
          LODWORD(v47) = 0;
LABEL_101:
        v73 = 64;
        goto LABEL_110;
      case 6:
        if ((v82 & 1) == 0)
          goto LABEL_92;
        v60 = 0;
        v61 = 0;
        v47 = 0;
        *(_WORD *)(a1 + 76) |= 4u;
        while (2)
        {
          v62 = *v21;
          v63 = *(_QWORD *)(v3 + v62);
          v64 = v63 + 1;
          if (v63 == -1 || v64 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v22) = 1;
          }
          else
          {
            v65 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v63);
            *(_QWORD *)(v3 + v62) = v64;
            v47 |= (unint64_t)(v65 & 0x7F) << v60;
            if (v65 < 0)
            {
              v60 += 7;
              v31 = v61++ >= 9;
              if (v31)
              {
                LODWORD(v47) = 0;
                goto LABEL_105;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v22))
          LODWORD(v47) = 0;
LABEL_105:
        v73 = 68;
        goto LABEL_110;
      case 7:
        if ((v82 & 1) == 0)
          goto LABEL_92;
        v66 = 0;
        v67 = 0;
        v47 = 0;
        *(_WORD *)(a1 + 76) |= 1u;
        while (2)
        {
          v68 = *v21;
          v69 = *(_QWORD *)(v3 + v68);
          v70 = v69 + 1;
          if (v69 == -1 || v70 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v22) = 1;
          }
          else
          {
            v71 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v69);
            *(_QWORD *)(v3 + v68) = v70;
            v47 |= (unint64_t)(v71 & 0x7F) << v66;
            if (v71 < 0)
            {
              v66 += 7;
              v31 = v67++ >= 9;
              if (v31)
              {
                LODWORD(v47) = 0;
                goto LABEL_109;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v22))
          LODWORD(v47) = 0;
LABEL_109:
        v73 = 60;
LABEL_110:
        *(_DWORD *)(a1 + v73) = v47;
        goto LABEL_119;
      default:
        if ((v81 & 1) == 0 || (*(_WORD *)(a1 + 76) & 0x10) != 0)
        {
LABEL_92:
          v72 = PBReaderSkipValueWithTag();
          v22 = (int *)MEMORY[0x1E0D82BC8];
          if ((v72 & 1) == 0)
          {
            v79 = 0;
LABEL_121:
            v80 = &OBJC_IVAR___GEOPDRelatedEntitySection__reader;
            goto LABEL_122;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v42 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v43 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v42;

          }
          v44 = PBUnknownFieldAdd();
          v22 = (int *)MEMORY[0x1E0D82BC8];
          if (!v44)
          {
            v79 = 0;
            v80 = &OBJC_IVAR___GEOPDRelatedEntitySection__reader;
            goto LABEL_123;
          }
        }
LABEL_119:
        if (!(v83 & 1 | (v7 != 0)))
          goto LABEL_120;
        continue;
    }
  }
}

void sub_1892DE5E4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892DE6CC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892DEC0C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchSectionReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 52))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDSearchSectionReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 52) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDSearchSectionReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDSearchSectionReadAllFrom_initialTag;
  Specified = GEOPDSearchSectionReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_1892DEE5C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892DF0A8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892DF588(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchSectionGuideReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  GEOPDMapsIdentifier *v18;
  id v19;
  void *v20;
  _BOOL8 v21;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_29;
          v18 = objc_alloc_init(GEOPDMapsIdentifier);
          if (!GEOPDMapsIdentifierReadAllFrom((uint64_t)v18, v3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          -[GEOPDSearchSectionGuide addGuideId:](a1, v18);

        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v19 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v20 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v19;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_29;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v21 = v3[*v6] == 0;
  }
  else
  {
LABEL_29:
    v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_1892E023C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchSectionListReadAllFrom(uint64_t a1, void *a2, int a3)
{
  char *v5;
  int *v6;
  int *v7;
  int *v8;
  int *v9;
  char v10;
  unsigned int v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  int v18;
  GEOPDSearchSection *v20;
  id v21;
  void *v22;
  _BOOL8 v23;

  v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    v6 = (int *)MEMORY[0x1E0D82BF0];
    v7 = (int *)MEMORY[0x1E0D82BD8];
    v8 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v5[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v5[*MEMORY[0x1E0D82BD8]])
    {
      v9 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v5[*v8])
          break;
        v10 = 0;
        v11 = 0;
        v12 = 0;
        while (1)
        {
          v13 = *v6;
          v14 = *(_QWORD *)&v5[v13];
          v15 = v14 + 1;
          if (v14 == -1 || v15 > *(_QWORD *)&v5[*v7])
            break;
          v16 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v14);
          *(_QWORD *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0)
            goto LABEL_13;
          v10 += 7;
          if (v11++ >= 9)
          {
            v12 = 0;
            v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        v18 = v5[*v8];
        if (v5[*v8])
          v12 = 0;
LABEL_15:
        if (v18 || (v12 & 7) == 4)
          break;
        if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_29;
          v20 = objc_alloc_init(GEOPDSearchSection);
          if (!GEOPDSearchSectionReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          -[GEOPDSearchSectionList addSection:](a1, v20);

        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v21 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v22 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v21;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_29;
        }
      }
      while (*(_QWORD *)&v5[*v6] < *(_QWORD *)&v5[*v7]);
    }
    v23 = v5[*v8] == 0;
  }
  else
  {
LABEL_29:
    v23 = 0;
  }
  objc_sync_exit(v5);

  return v23;
}

void sub_1892E1634(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchSectionPlaceReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  GEOPDMapsIdentifier *v18;
  id v19;
  void *v20;
  _BOOL8 v21;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_29;
          v18 = objc_alloc_init(GEOPDMapsIdentifier);
          if (!GEOPDMapsIdentifierReadAllFrom((uint64_t)v18, v3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          -[GEOPDSearchSectionPlace addPlaceId:](a1, v18);

        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v19 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v20 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v19;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_29;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v21 = v3[*v6] == 0;
  }
  else
  {
LABEL_29:
    v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_1892E2020(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892E2BD8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1892E3500(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23,uint64_t a24,uint64_t a25,void *a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,void *a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,void *a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,void *a50)
{
  if (__p)
    operator delete(__p);
  if (a35)
    operator delete(a35);
  std::__hash_table<std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>>>::~__hash_table(a9);
  if (a26)
    operator delete(a26);
  if (a23)
    operator delete(a23);
  if (a41)
    operator delete(a41);
  if (a50)
    operator delete(a50);

  STACK[0x210] = (unint64_t)&off_1E1BF4FD8;
  std::__tree<std::__value_type<unsigned int,unsigned long>,std::__map_value_compare<unsigned int,std::__value_type<unsigned int,unsigned long>,std::less<unsigned int>,true>,std::allocator<std::__value_type<unsigned int,unsigned long>>>::destroy((uint64_t)&STACK[0x2A0], (_QWORD *)STACK[0x2A8]);

  _Unwind_Resume(a1);
}

id GEOGetGEOMapFeaturePathFinderLog(void)
{
  if (qword_1ECDBC188 != -1)
    dispatch_once(&qword_1ECDBC188, &__block_literal_global_108);
  return (id)_MergedGlobals_251;
}

void sub_1892E3ED8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,void *a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,void *__p,uint64_t a53)
{
  void **v53;
  void *v54;
  void *v55;
  void *v57;

  v57 = *v53;
  if (*v53)
  {
    *(_QWORD *)(a12 + 24) = v57;
    operator delete(v57);
  }
  if (__p)
    operator delete(__p);

  _Unwind_Resume(a1);
}

void maps::path_codec::Dijkstra<GEOPathMatcherRoadKey>::run(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _DWORD *a5@<X4>, uint64_t **a6@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  __int128 v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  __int128 v18;
  char *v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  __int128 v27;
  char *v28;
  char *v29;
  char *v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  uint64_t *v34;
  uint64_t *v35;
  int64_t i;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  __int128 v41;
  char *v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  char *v47;
  uint64_t v48;
  char *v49;
  __int128 v50;
  char *v51;
  char *v52;
  char *v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  unint64_t v57;
  unint64_t cost;
  uint64_t v59;
  unint64_t *v60;
  unsigned int v61;
  unsigned int v62;
  int v63;
  uint64_t v66;
  __int128 v67;
  uint64_t v68;
  unint64_t *v69;
  char *v70;
  uint64_t v71;
  __int128 v72;
  uint64_t v73;
  uint64_t **v74;
  uint64_t *v75;
  uint64_t *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unsigned int v80;
  unint64_t v81;
  unsigned int v82;
  int v83;
  unsigned int v84;
  unsigned int v85;
  unsigned int v86;
  uint64_t v87;
  uint64_t v88;
  unsigned int v89;
  uint64_t v90;
  unsigned int *v91;
  unsigned int v92;
  unsigned int v93;
  unsigned int v94;
  unint64_t *v95;
  unint64_t v96;
  uint64_t v97;
  int v98;
  _QWORD *v99;
  unint64_t v100;
  uint64_t *v101;
  uint64_t *v102;
  int64_t j;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  unint64_t v107;
  __int128 v108;
  char *v109;
  unint64_t v110;
  unint64_t v111;
  unint64_t v112;
  unint64_t v113;
  char *v114;
  uint64_t v115;
  char *v116;
  __int128 v117;
  char *v118;
  char *v119;
  char *v120;
  __int128 v121;
  __int128 v122;
  __int128 v123;
  unint64_t v124;
  unint64_t v125;
  unsigned int v126;
  unint64_t v127;
  unint64_t v128;
  unsigned int v129;
  int v130;
  BOOL v131;
  BOOL v132;
  uint64_t v133;
  __int128 v134;
  uint64_t v135;
  uint64_t *v136;
  char *v137;
  __int128 v138;
  uint64_t *v139;
  uint64_t *v140;
  __int128 v141;
  uint64_t *v142;
  uint64_t *v143;
  uint64_t v144;
  unint64_t v145;
  uint64_t v146;
  unint64_t v147;
  char *v148;
  __int128 v149;
  char *v150;
  char *v151;
  __int128 v152;
  uint64_t *v153;
  uint64_t v154;
  __int128 v155;
  uint64_t *v156;
  uint64_t *v157;
  __int128 v158;
  __int128 v159;
  __int128 v160;
  BOOL v161;
  void *v162;
  std::chrono::steady_clock::time_point v163;
  int v164;
  void *v165;
  _DWORD *v166;
  uint64_t v169;
  void *v170;
  uint64_t v171;
  unint64_t **v172;
  char **v174;
  unint64_t v175;
  void *v176[2];
  char v177;
  void *v178[2];
  char v179;
  void *v180[2];
  __int128 v181;
  char v182;
  void *__p;
  char v184;
  void *v185;
  char v186;
  _BYTE v187[160];
  __int128 v188;
  __int128 v189;
  uint64_t *v190;
  uint64_t *v191;
  uint64_t *v192;

  v163.__d_.__rep_ = std::chrono::steady_clock::now().__d_.__rep_;
  v9 = a1[2];
  v172 = (unint64_t **)(a1 + 2);
  a1[6] = a1[5];
  a1[3] = v9;
  *((_DWORD *)a1 + 16) = 0;
  std::__hash_table<std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>>>::clear(a1 + 9);
  v174 = (char **)(a1 + 14);
  a1[15] = a1[14];
  v190 = 0;
  v191 = 0;
  v192 = 0;
  v10 = *(_QWORD *)(a2 + 16);
  v169 = *(_QWORD *)(a2 + 24);
  if (v10 != v169)
  {
    v171 = (uint64_t)(a1 + 16);
    v166 = a5;
    while (1)
    {
      (*(void (**)(void **__return_ptr, _QWORD, uint64_t, _QWORD))(*(_QWORD *)*a1 + 32))(v180, *a1, v10, 0);
      if (v182)
      {
        if (maps::path_codec::Dijkstra<GEOPathMatcherRoadKey>::found_target((uint64_t)a1, (double *)v10, a3))
        {
          v188 = *(_OWORD *)v10;
          v189 = *(_OWORD *)(v10 + 16);
          a6[1] = 0;
          a6[2] = 0;
          *a6 = 0;
          v11 = (uint64_t *)operator new(0x20uLL);
          a6[1] = v11 + 4;
          a6[2] = v11 + 4;
          v12 = v189;
          *(_OWORD *)v11 = v188;
          *((_OWORD *)v11 + 1) = v12;
          *a6 = v11;
          v13 = 1;
        }
        else
        {
          v15 = a1[14];
          v14 = a1[15];
          *(_QWORD *)&v188 = v10;
          *((_DWORD *)std::__hash_table<std::__hash_value_type<GEOPathMatcherRoadKey,unsigned int>,std::__unordered_map_hasher<GEOPathMatcherRoadKey,std::__hash_value_type<GEOPathMatcherRoadKey,unsigned int>,std::hash<GEOPathMatcherRoadKey>,std::equal_to<GEOPathMatcherRoadKey>,true>,std::__unordered_map_equal<GEOPathMatcherRoadKey,std::__hash_value_type<GEOPathMatcherRoadKey,unsigned int>,std::equal_to<GEOPathMatcherRoadKey>,std::hash<GEOPathMatcherRoadKey>,true>,std::allocator<std::__hash_value_type<GEOPathMatcherRoadKey,unsigned int>>>::__emplace_unique_key_args<GEOPathMatcherRoadKey,std::piecewise_construct_t const&,std::tuple<GEOPathMatcherRoadKey const&>,std::tuple<>>((uint64_t)(a1 + 9), (uint64_t *)v10, (uint64_t)&std::piecewise_construct, (_OWORD **)&v188)+ 12) = 954437177 * ((unint64_t)(v14 - v15) >> 3);
          v16 = a1[15];
          v17 = a1[16];
          if (v16 >= v17)
          {
            v20 = 0x8E38E38E38E38E39 * ((uint64_t)(v16 - (_QWORD)*v174) >> 3);
            v21 = v20 + 1;
            if (v20 + 1 > 0x38E38E38E38E38ELL)
              std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
            v22 = 0x8E38E38E38E38E39 * ((uint64_t)(v17 - (_QWORD)*v174) >> 3);
            if (2 * v22 > v21)
              v21 = 2 * v22;
            if (v22 >= 0x1C71C71C71C71C7)
              v23 = 0x38E38E38E38E38ELL;
            else
              v23 = v21;
            v24 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<maps::path_codec::Dijkstra<GEOPathMatcherRoadKey>::SearchData>>(v171, v23);
            v26 = &v24[72 * v20];
            v27 = *(_OWORD *)(v10 + 16);
            *(_OWORD *)v26 = *(_OWORD *)v10;
            *((_OWORD *)v26 + 1) = v27;
            *((_OWORD *)v26 + 2) = maps::path_codec::Dijkstra<GEOPathMatcherRoadKey>::INVALID_ROAD_ID;
            *((_OWORD *)v26 + 3) = unk_189CD9400;
            *((_QWORD *)v26 + 8) = 0;
            v29 = (char *)a1[14];
            v28 = (char *)a1[15];
            v30 = v26;
            if (v28 != v29)
            {
              do
              {
                *(_OWORD *)(v30 - 72) = *(_OWORD *)(v28 - 72);
                v31 = *(_OWORD *)(v28 - 56);
                v32 = *(_OWORD *)(v28 - 40);
                v33 = *(_OWORD *)(v28 - 24);
                *((_QWORD *)v30 - 1) = *((_QWORD *)v28 - 1);
                *(_OWORD *)(v30 - 24) = v33;
                *(_OWORD *)(v30 - 40) = v32;
                *(_OWORD *)(v30 - 56) = v31;
                v30 -= 72;
                v28 -= 72;
              }
              while (v28 != v29);
              v28 = *v174;
            }
            v19 = v26 + 72;
            a1[14] = v30;
            a1[15] = v26 + 72;
            a1[16] = &v24[72 * v25];
            if (v28)
              operator delete(v28);
          }
          else
          {
            v18 = *(_OWORD *)(v10 + 16);
            *(_OWORD *)v16 = *(_OWORD *)v10;
            *(_OWORD *)(v16 + 16) = v18;
            *(_OWORD *)(v16 + 32) = maps::path_codec::Dijkstra<GEOPathMatcherRoadKey>::INVALID_ROAD_ID;
            *(_OWORD *)(v16 + 48) = unk_189CD9400;
            *(_QWORD *)(v16 + 64) = 0;
            v19 = (char *)(v16 + 72);
          }
          a1[15] = v19;
          maps::path_codec::Dijkstra<GEOPathMatcherRoadKey>::get_navigable_outgoing_roads(a1, v10, &v190);
          v34 = v190;
          v35 = v191;
          for (i = (char *)v191 - (char *)v190; v34 != v35; v34 += 4)
          {
            if (!std::__hash_table<std::__hash_value_type<GEOPathMatcherRoadKey,unsigned int>,std::__unordered_map_hasher<GEOPathMatcherRoadKey,std::__hash_value_type<GEOPathMatcherRoadKey,unsigned int>,std::hash<GEOPathMatcherRoadKey>,std::equal_to<GEOPathMatcherRoadKey>,true>,std::__unordered_map_equal<GEOPathMatcherRoadKey,std::__hash_value_type<GEOPathMatcherRoadKey,unsigned int>,std::equal_to<GEOPathMatcherRoadKey>,std::hash<GEOPathMatcherRoadKey>,true>,std::allocator<std::__hash_value_type<GEOPathMatcherRoadKey,unsigned int>>>::find<GEOPathMatcherRoadKey>(a1 + 9, v34))
            {
              v37 = a1[14];
              v38 = a1[15];
              *(_QWORD *)&v188 = v34;
              *((_DWORD *)std::__hash_table<std::__hash_value_type<GEOPathMatcherRoadKey,unsigned int>,std::__unordered_map_hasher<GEOPathMatcherRoadKey,std::__hash_value_type<GEOPathMatcherRoadKey,unsigned int>,std::hash<GEOPathMatcherRoadKey>,std::equal_to<GEOPathMatcherRoadKey>,true>,std::__unordered_map_equal<GEOPathMatcherRoadKey,std::__hash_value_type<GEOPathMatcherRoadKey,unsigned int>,std::equal_to<GEOPathMatcherRoadKey>,std::hash<GEOPathMatcherRoadKey>,true>,std::allocator<std::__hash_value_type<GEOPathMatcherRoadKey,unsigned int>>>::__emplace_unique_key_args<GEOPathMatcherRoadKey,std::piecewise_construct_t const&,std::tuple<GEOPathMatcherRoadKey const&>,std::tuple<>>((uint64_t)(a1 + 9), v34, (uint64_t)&std::piecewise_construct, (_OWORD **)&v188)+ 12) = 954437177 * ((unint64_t)(v38 - v37) >> 3);
              v39 = a1[15];
              v40 = a1[16];
              if (v39 >= v40)
              {
                v43 = 0x8E38E38E38E38E39 * ((uint64_t)(v39 - (_QWORD)*v174) >> 3);
                v44 = v43 + 1;
                if (v43 + 1 > 0x38E38E38E38E38ELL)
                  std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
                v45 = 0x8E38E38E38E38E39 * ((uint64_t)(v40 - (_QWORD)*v174) >> 3);
                if (2 * v45 > v44)
                  v44 = 2 * v45;
                if (v45 >= 0x1C71C71C71C71C7)
                  v46 = 0x38E38E38E38E38ELL;
                else
                  v46 = v44;
                v47 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<maps::path_codec::Dijkstra<GEOPathMatcherRoadKey>::SearchData>>(v171, v46);
                v49 = &v47[72 * v43];
                v50 = *((_OWORD *)v34 + 1);
                *(_OWORD *)v49 = *(_OWORD *)v34;
                *((_OWORD *)v49 + 1) = v50;
                *((_OWORD *)v49 + 2) = maps::path_codec::Dijkstra<GEOPathMatcherRoadKey>::INVALID_ROAD_ID;
                *((_OWORD *)v49 + 3) = unk_189CD9400;
                *((_QWORD *)v49 + 8) = 0x7FFFFFFFFFFFFFFFLL;
                v52 = (char *)a1[14];
                v51 = (char *)a1[15];
                v53 = v49;
                if (v51 != v52)
                {
                  do
                  {
                    *(_OWORD *)(v53 - 72) = *(_OWORD *)(v51 - 72);
                    v54 = *(_OWORD *)(v51 - 56);
                    v55 = *(_OWORD *)(v51 - 40);
                    v56 = *(_OWORD *)(v51 - 24);
                    *((_QWORD *)v53 - 1) = *((_QWORD *)v51 - 1);
                    *(_OWORD *)(v53 - 24) = v56;
                    *(_OWORD *)(v53 - 40) = v55;
                    *(_OWORD *)(v53 - 56) = v54;
                    v53 -= 72;
                    v51 -= 72;
                  }
                  while (v51 != v52);
                  v51 = *v174;
                }
                v42 = v49 + 72;
                a1[14] = v53;
                a1[15] = v49 + 72;
                a1[16] = &v47[72 * v48];
                if (v51)
                  operator delete(v51);
              }
              else
              {
                v41 = *((_OWORD *)v34 + 1);
                *(_OWORD *)v39 = *(_OWORD *)v34;
                *(_OWORD *)(v39 + 16) = v41;
                *(_OWORD *)(v39 + 32) = maps::path_codec::Dijkstra<GEOPathMatcherRoadKey>::INVALID_ROAD_ID;
                *(_OWORD *)(v39 + 48) = unk_189CD9400;
                *(_QWORD *)(v39 + 64) = 0x7FFFFFFFFFFFFFFFLL;
                v42 = (char *)(v39 + 72);
              }
              a1[15] = v42;
            }
            *(_QWORD *)&v188 = v34;
            v57 = *((unsigned int *)std::__hash_table<std::__hash_value_type<GEOPathMatcherRoadKey,unsigned int>,std::__unordered_map_hasher<GEOPathMatcherRoadKey,std::__hash_value_type<GEOPathMatcherRoadKey,unsigned int>,std::hash<GEOPathMatcherRoadKey>,std::equal_to<GEOPathMatcherRoadKey>,true>,std::__unordered_map_equal<GEOPathMatcherRoadKey,std::__hash_value_type<GEOPathMatcherRoadKey,unsigned int>,std::equal_to<GEOPathMatcherRoadKey>,std::hash<GEOPathMatcherRoadKey>,true>,std::allocator<std::__hash_value_type<GEOPathMatcherRoadKey,unsigned int>>>::__emplace_unique_key_args<GEOPathMatcherRoadKey,std::piecewise_construct_t const&,std::tuple<GEOPathMatcherRoadKey const&>,std::tuple<>>((uint64_t)(a1 + 9), v34, (uint64_t)&std::piecewise_construct, (_OWORD **)&v188)+ 12);
            cost = maps::path_codec::ArcEvaluator<GEOPathMatcherRoadKey>::get_cost(a1 + 1, v10, (uint64_t)v34, a4, i == 32, 1.0 - *(double *)(v10 + 32));
            *(_QWORD *)&v188 = cost;
            v59 = (uint64_t)&(*v174)[72 * v57];
            v62 = *(_DWORD *)(v59 + 64);
            v60 = (unint64_t *)(v59 + 64);
            v61 = v62;
            if (v62 != -1)
            {
              v63 = *(_DWORD *)&(*v174)[72 * v57 + 68];
              if (v63 != 0x7FFFFFFF && v61 <= cost && (v61 < cost || v63 <= SHIDWORD(cost)))
                continue;
            }
            *v60 = cost;
            v66 = a1[14] + 72 * v57;
            v67 = *(_OWORD *)(v10 + 16);
            *(_OWORD *)(v66 + 32) = *(_OWORD *)v10;
            *(_OWORD *)(v66 + 48) = v67;
            v68 = a1[5];
            if (v57 >= (a1[6] - v68) >> 2 || *(_DWORD *)(v68 + 4 * v57) == -1)
              maps::path_codec::KHeap<unsigned int,2u,std::less<unsigned int>>::insert(v172, v57, (unsigned int *)&v188);
            else
              maps::path_codec::KHeap<unsigned int,2u,std::less<unsigned int>>::change_priority((uint64_t *)v172, v57, (unsigned int *)&v188);
          }
          v13 = 0;
          a5 = v166;
        }
      }
      else
      {
        v13 = 3;
      }
      if (v184 < 0)
        operator delete(__p);
      if (v180[1])
      {
        *(void **)&v181 = v180[1];
        operator delete(v180[1]);
      }
      if (v13 != 3 && v13)
        goto LABEL_132;
      v10 += 56;
      if (v10 == v169)
        break;
    }
  }
  if (!*((_DWORD *)a1 + 16))
  {
LABEL_131:
    *a6 = 0;
    a6[1] = 0;
    a6[2] = 0;
LABEL_132:
    if (v190)
    {
      v191 = v190;
      operator delete(v190);
    }
    return;
  }
  v164 = 0;
  v170 = (void *)*MEMORY[0x1E0DE4F60];
  v165 = *(void **)(MEMORY[0x1E0DE4F60] + 24);
  v162 = (void *)(MEMORY[0x1E0DE4FB8] + 16);
  while (1)
  {
    v69 = *v172;
    v70 = *v174;
    v71 = (uint64_t)&(*v174)[72 * *(unsigned int *)*v172];
    v72 = *(_OWORD *)(v71 + 16);
    v188 = *(_OWORD *)v71;
    v189 = v72;
    v73 = *(_QWORD *)(v71 + 64);
    v74 = a6;
    v75 = *(uint64_t **)(a3 + 16);
    v76 = *(uint64_t **)(a3 + 24);
    if (v75 != v76)
      break;
LABEL_66:
    v79 = a1[5];
    *(_DWORD *)(v79 + 4 * *(unsigned int *)v69) = -1;
    v80 = *((_DWORD *)a1 + 16) - 1;
    *((_DWORD *)a1 + 16) = v80;
    if (v80)
    {
      v81 = v69[v80];
      *v69 = v81;
      *(_DWORD *)(v79 + 4 * v81) = 0;
      v82 = *((_DWORD *)a1 + 16);
      if (v82 >= 2)
      {
        v83 = 0;
        v84 = 0;
        v85 = 1;
        do
        {
          v86 = v83 + 5;
          if (v86 >= v82)
            v87 = v82;
          else
            v87 = v86;
          if (v85 >= v87)
            break;
          v88 = v84;
          v89 = HIDWORD(v69[v84]);
          v90 = v85;
          v91 = (unsigned int *)&v69[v85] + 1;
          v84 = -1;
          v92 = v89;
          do
          {
            v94 = *v91;
            v91 += 2;
            v93 = v94;
            if (v94 < v92)
            {
              v92 = v93;
              v84 = v90;
            }
            ++v90;
          }
          while (v87 != v90);
          if (v84 >= v82)
            break;
          v95 = &v69[v84];
          v96 = *v95;
          *(_DWORD *)v95 = v69[v88];
          *((_DWORD *)v95 + 1) = v89;
          v69[v88] = v96;
          v97 = *(unsigned int *)v95;
          v98 = *(_DWORD *)(v79 + 4 * v97);
          *(_DWORD *)(v79 + 4 * v97) = *(_DWORD *)(v79 + 4 * v96);
          *(_DWORD *)(v79 + 4 * v96) = v98;
          v83 = 4 * v84;
          v85 = (4 * v84) | 1;
          v82 = *((_DWORD *)a1 + 16);
        }
        while (v85 < v82);
      }
    }
    a1[3] -= 8;
    if (!maps::path_codec::Logger::m_log_level)
    {
      std::ostringstream::basic_ostringstream[abi:ne180100]((uint64_t)v180);
      v99 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v180, (uint64_t)"Exploring ", 10);
      operator<<(v99, &v188);
      std::string::basic_string[abi:ne180100]<0>(v178, "/Library/Caches/com.apple.xbs/Sources/GeoServices/libpathcodec/path-codec/include/path-codec/Dijkstra.h");
      std::stringbuf::str();
      maps::path_codec::Logger::log_trace((uint64_t)v178, 214, (uint64_t)v176);
      if (v177 < 0)
        operator delete(v176[0]);
      if (v179 < 0)
        operator delete(v178[0]);
      v180[0] = v170;
      *(void **)((char *)v180 + *((_QWORD *)v170 - 3)) = v165;
      v180[1] = v162;
      if (v186 < 0)
        operator delete(v185);
      std::streambuf::~streambuf();
      std::ostream::~ostream();
      MEMORY[0x18D764310](v187);
    }
    ++v164;
    HIDWORD(v100) = 989560465 * v164;
    LODWORD(v100) = 989560465 * v164;
    if ((v100 >> 4) <= 0x68DB8
      && (std::chrono::steady_clock::now().__d_.__rep_ - v163.__d_.__rep_) / 1000000 > *(unsigned int *)(a1[17] + 76))
    {
      if (maps::path_codec::Logger::m_log_level <= 1u)
      {
        std::ostringstream::basic_ostringstream[abi:ne180100]((uint64_t)v180);
        std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v180, (uint64_t)"Reached time limit for exploration.", 35);
        std::string::basic_string[abi:ne180100]<0>(v178, "/Library/Caches/com.apple.xbs/Sources/GeoServices/libpathcodec/path-codec/include/path-codec/Dijkstra.h");
        std::stringbuf::str();
        maps::path_codec::Logger::log_debug((uint64_t)v178, 224, (uint64_t)v176);
        if (v177 < 0)
          operator delete(v176[0]);
        if (v179 < 0)
          operator delete(v178[0]);
        v180[0] = v170;
        *(void **)((char *)v180 + *((_QWORD *)v170 - 3)) = v165;
        v180[1] = (void *)(MEMORY[0x1E0DE4FB8] + 16);
        if (v186 < 0)
          operator delete(v185);
        std::streambuf::~streambuf();
        std::ostream::~ostream();
        MEMORY[0x18D764310](v187);
        v74 = a6;
      }
      *v74 = 0;
      v74[1] = 0;
      v74[2] = 0;
      goto LABEL_132;
    }
    maps::path_codec::Dijkstra<GEOPathMatcherRoadKey>::get_navigable_outgoing_roads(a1, (uint64_t)&v188, &v190);
    v101 = v190;
    v102 = v191;
    for (j = (char *)v191 - (char *)v190; v101 != v102; v101 += 4)
    {
      if (!std::__hash_table<std::__hash_value_type<GEOPathMatcherRoadKey,unsigned int>,std::__unordered_map_hasher<GEOPathMatcherRoadKey,std::__hash_value_type<GEOPathMatcherRoadKey,unsigned int>,std::hash<GEOPathMatcherRoadKey>,std::equal_to<GEOPathMatcherRoadKey>,true>,std::__unordered_map_equal<GEOPathMatcherRoadKey,std::__hash_value_type<GEOPathMatcherRoadKey,unsigned int>,std::equal_to<GEOPathMatcherRoadKey>,std::hash<GEOPathMatcherRoadKey>,true>,std::allocator<std::__hash_value_type<GEOPathMatcherRoadKey,unsigned int>>>::find<GEOPathMatcherRoadKey>(a1 + 9, v101))
      {
        v105 = a1[14];
        v104 = a1[15];
        v180[0] = v101;
        *((_DWORD *)std::__hash_table<std::__hash_value_type<GEOPathMatcherRoadKey,unsigned int>,std::__unordered_map_hasher<GEOPathMatcherRoadKey,std::__hash_value_type<GEOPathMatcherRoadKey,unsigned int>,std::hash<GEOPathMatcherRoadKey>,std::equal_to<GEOPathMatcherRoadKey>,true>,std::__unordered_map_equal<GEOPathMatcherRoadKey,std::__hash_value_type<GEOPathMatcherRoadKey,unsigned int>,std::equal_to<GEOPathMatcherRoadKey>,std::hash<GEOPathMatcherRoadKey>,true>,std::allocator<std::__hash_value_type<GEOPathMatcherRoadKey,unsigned int>>>::__emplace_unique_key_args<GEOPathMatcherRoadKey,std::piecewise_construct_t const&,std::tuple<GEOPathMatcherRoadKey const&>,std::tuple<>>((uint64_t)(a1 + 9), v101, (uint64_t)&std::piecewise_construct, (_OWORD **)v180)+ 12) = 954437177 * ((unint64_t)(v104 - v105) >> 3);
        v106 = a1[15];
        v107 = a1[16];
        if (v106 >= v107)
        {
          v110 = 0x8E38E38E38E38E39 * ((uint64_t)(v106 - (_QWORD)*v174) >> 3);
          v111 = v110 + 1;
          if (v110 + 1 > 0x38E38E38E38E38ELL)
            std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
          v112 = 0x8E38E38E38E38E39 * ((uint64_t)(v107 - (_QWORD)*v174) >> 3);
          if (2 * v112 > v111)
            v111 = 2 * v112;
          if (v112 >= 0x1C71C71C71C71C7)
            v113 = 0x38E38E38E38E38ELL;
          else
            v113 = v111;
          v114 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<maps::path_codec::Dijkstra<GEOPathMatcherRoadKey>::SearchData>>((uint64_t)(a1 + 16), v113);
          v116 = &v114[72 * v110];
          v117 = *((_OWORD *)v101 + 1);
          *(_OWORD *)v116 = *(_OWORD *)v101;
          *((_OWORD *)v116 + 1) = v117;
          *((_OWORD *)v116 + 2) = maps::path_codec::Dijkstra<GEOPathMatcherRoadKey>::INVALID_ROAD_ID;
          *((_OWORD *)v116 + 3) = unk_189CD9400;
          *((_QWORD *)v116 + 8) = 0x7FFFFFFFFFFFFFFFLL;
          v119 = (char *)a1[14];
          v118 = (char *)a1[15];
          v120 = v116;
          if (v118 != v119)
          {
            do
            {
              *(_OWORD *)(v120 - 72) = *(_OWORD *)(v118 - 72);
              v121 = *(_OWORD *)(v118 - 56);
              v122 = *(_OWORD *)(v118 - 40);
              v123 = *(_OWORD *)(v118 - 24);
              *((_QWORD *)v120 - 1) = *((_QWORD *)v118 - 1);
              *(_OWORD *)(v120 - 24) = v123;
              *(_OWORD *)(v120 - 40) = v122;
              *(_OWORD *)(v120 - 56) = v121;
              v120 -= 72;
              v118 -= 72;
            }
            while (v118 != v119);
            v118 = *v174;
          }
          v109 = v116 + 72;
          a1[14] = v120;
          a1[15] = v116 + 72;
          a1[16] = &v114[72 * v115];
          if (v118)
            operator delete(v118);
        }
        else
        {
          v108 = *((_OWORD *)v101 + 1);
          *(_OWORD *)v106 = *(_OWORD *)v101;
          *(_OWORD *)(v106 + 16) = v108;
          *(_OWORD *)(v106 + 32) = maps::path_codec::Dijkstra<GEOPathMatcherRoadKey>::INVALID_ROAD_ID;
          *(_OWORD *)(v106 + 48) = unk_189CD9400;
          *(_QWORD *)(v106 + 64) = 0x7FFFFFFFFFFFFFFFLL;
          v109 = (char *)(v106 + 72);
        }
        a1[15] = v109;
      }
      v180[0] = v101;
      v124 = *((unsigned int *)std::__hash_table<std::__hash_value_type<GEOPathMatcherRoadKey,unsigned int>,std::__unordered_map_hasher<GEOPathMatcherRoadKey,std::__hash_value_type<GEOPathMatcherRoadKey,unsigned int>,std::hash<GEOPathMatcherRoadKey>,std::equal_to<GEOPathMatcherRoadKey>,true>,std::__unordered_map_equal<GEOPathMatcherRoadKey,std::__hash_value_type<GEOPathMatcherRoadKey,unsigned int>,std::equal_to<GEOPathMatcherRoadKey>,std::hash<GEOPathMatcherRoadKey>,true>,std::allocator<std::__hash_value_type<GEOPathMatcherRoadKey,unsigned int>>>::__emplace_unique_key_args<GEOPathMatcherRoadKey,std::piecewise_construct_t const&,std::tuple<GEOPathMatcherRoadKey const&>,std::tuple<>>((uint64_t)(a1 + 9), v101, (uint64_t)&std::piecewise_construct, (_OWORD **)v180)+ 12);
      v125 = maps::path_codec::ArcEvaluator<GEOPathMatcherRoadKey>::get_cost(a1 + 1, (uint64_t)&v188, (uint64_t)v101, a4, j == 32, 1.0);
      v126 = v125 + v73;
      v127 = (v125 & 0xFFFFFFFF00000000) + v73;
      v128 = HIDWORD(v127);
      v175 = v127 & 0xFFFFFFFF00000000 | (v125 + v73);
      if (*a5 == 0x7FFFFFFF || *a5 > SHIDWORD(v127))
      {
        v129 = *(_DWORD *)&(*v174)[72 * v124 + 64];
        if (v129 == -1
          || ((v130 = *(_DWORD *)&(*v174)[72 * v124 + 68], v130 != 0x7FFFFFFF)
            ? (v131 = v129 > v126)
            : (v131 = 1),
              v131 || (v129 >= v126 ? (v132 = v130 <= (int)v128) : (v132 = 1), !v132)))
        {
          v133 = a1[5];
          if (v124 >= (a1[6] - v133) >> 2 || *(_DWORD *)(v133 + 4 * v124) == -1)
            maps::path_codec::KHeap<unsigned int,2u,std::less<unsigned int>>::insert(v172, v124, (unsigned int *)&v175);
          else
            maps::path_codec::KHeap<unsigned int,2u,std::less<unsigned int>>::change_priority((uint64_t *)v172, v124, (unsigned int *)&v175);
          *(_QWORD *)&(*v174)[72 * v124 + 64] = v175;
          v134 = v189;
          v135 = (uint64_t)&(*v174)[72 * v124];
          *(_OWORD *)(v135 + 32) = v188;
          *(_OWORD *)(v135 + 48) = v134;
        }
      }
      else if (!maps::path_codec::Logger::m_log_level)
      {
        std::ostringstream::basic_ostringstream[abi:ne180100]((uint64_t)v180);
        std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v180, (uint64_t)"Exceeding the search radius, pruning the search here.", 53);
        std::string::basic_string[abi:ne180100]<0>(v178, "/Library/Caches/com.apple.xbs/Sources/GeoServices/libpathcodec/path-codec/include/path-codec/Dijkstra.h");
        std::stringbuf::str();
        maps::path_codec::Logger::log_trace((uint64_t)v178, 255, (uint64_t)v176);
        if (v177 < 0)
          operator delete(v176[0]);
        if (v179 < 0)
          operator delete(v178[0]);
        v180[0] = v170;
        *(void **)((char *)v180 + *((_QWORD *)v170 - 3)) = v165;
        v180[1] = (void *)(MEMORY[0x1E0DE4FB8] + 16);
        if (v186 < 0)
          operator delete(v185);
        std::streambuf::~streambuf();
        std::ostream::~ostream();
        MEMORY[0x18D764310](v187);
      }
    }
    if (!*((_DWORD *)a1 + 16))
      goto LABEL_131;
  }
  while (1)
  {
    v77 = *v75;
    if (*v75)
    {
      v78 = v188;
    }
    else
    {
      v77 = v75[1];
      v78 = *((_QWORD *)&v188 + 1);
    }
    if (v77 == v78)
      break;
    v75 += 7;
    if (v75 == v76)
      goto LABEL_66;
  }
  v136 = v190;
  v191 = v190;
  v137 = &v70[72 * *(unsigned int *)v69];
  v138 = *((_OWORD *)v137 + 1);
  *(_OWORD *)v180 = *(_OWORD *)v137;
  v181 = v138;
  v139 = v190;
  if (*(_OWORD *)v180 != 0)
  {
    do
    {
      v140 = v191;
      if (v191 >= v192)
      {
        v143 = v190;
        v144 = ((char *)v191 - (char *)v190) >> 5;
        v145 = v144 + 1;
        if ((unint64_t)(v144 + 1) >> 59)
          std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
        v146 = (char *)v192 - (char *)v190;
        if (((char *)v192 - (char *)v190) >> 4 > v145)
          v145 = v146 >> 4;
        if ((unint64_t)v146 >= 0x7FFFFFFFFFFFFFE0)
          v147 = 0x7FFFFFFFFFFFFFFLL;
        else
          v147 = v145;
        if (v147)
        {
          v148 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<zilch::ControlPoint>>((uint64_t)&v192, v147);
          v143 = v190;
          v140 = v191;
        }
        else
        {
          v148 = 0;
        }
        v149 = v181;
        v150 = &v148[32 * v144];
        *(_OWORD *)v150 = *(_OWORD *)v180;
        *((_OWORD *)v150 + 1) = v149;
        if (v140 == v143)
        {
          v153 = (uint64_t *)&v148[32 * v144];
        }
        else
        {
          v151 = &v148[32 * v144];
          do
          {
            v152 = *((_OWORD *)v140 - 1);
            v153 = (uint64_t *)(v151 - 32);
            *((_OWORD *)v151 - 2) = *((_OWORD *)v140 - 2);
            *((_OWORD *)v151 - 1) = v152;
            v140 -= 4;
            v151 -= 32;
          }
          while (v140 != v143);
        }
        v142 = (uint64_t *)(v150 + 32);
        v190 = v153;
        v191 = (uint64_t *)(v150 + 32);
        v192 = (uint64_t *)&v148[32 * v147];
        if (v143)
          operator delete(v143);
      }
      else
      {
        v141 = v181;
        *(_OWORD *)v191 = *(_OWORD *)v180;
        *((_OWORD *)v140 + 1) = v141;
        v142 = v140 + 4;
      }
      v191 = v142;
      *(_QWORD *)&v188 = v180;
      v154 = (uint64_t)&(*v174)[72
                             * *((unsigned int *)std::__hash_table<std::__hash_value_type<GEOPathMatcherRoadKey,unsigned int>,std::__unordered_map_hasher<GEOPathMatcherRoadKey,std::__hash_value_type<GEOPathMatcherRoadKey,unsigned int>,std::hash<GEOPathMatcherRoadKey>,std::equal_to<GEOPathMatcherRoadKey>,true>,std::__unordered_map_equal<GEOPathMatcherRoadKey,std::__hash_value_type<GEOPathMatcherRoadKey,unsigned int>,std::equal_to<GEOPathMatcherRoadKey>,std::hash<GEOPathMatcherRoadKey>,true>,std::allocator<std::__hash_value_type<GEOPathMatcherRoadKey,unsigned int>>>::__emplace_unique_key_args<GEOPathMatcherRoadKey,std::piecewise_construct_t const&,std::tuple<GEOPathMatcherRoadKey const&>,std::tuple<>>((uint64_t)(a1 + 9), (uint64_t *)v180, (uint64_t)&std::piecewise_construct, (_OWORD **)&v188)+ 12)];
      v155 = *(_OWORD *)(v154 + 48);
      *(_OWORD *)v180 = *(_OWORD *)(v154 + 32);
      v181 = v155;
    }
    while (*(_OWORD *)v180 != 0);
    v136 = v190;
    v139 = v191;
    if (v190 == v191)
    {
      v74 = a6;
    }
    else
    {
      v156 = v191 - 4;
      v74 = a6;
      if (v191 - 4 > v190)
      {
        v157 = v190 + 4;
        do
        {
          v159 = *((_OWORD *)v157 - 2);
          v158 = *((_OWORD *)v157 - 1);
          v160 = *((_OWORD *)v156 + 1);
          *((_OWORD *)v157 - 2) = *(_OWORD *)v156;
          *((_OWORD *)v157 - 1) = v160;
          *(_OWORD *)v156 = v159;
          *((_OWORD *)v156 + 1) = v158;
          v156 -= 4;
          v161 = v157 >= v156;
          v157 += 4;
        }
        while (!v161);
      }
    }
  }
  *v74 = v136;
  v74[1] = v139;
  v74[2] = v192;
}

void sub_1892E4ED8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30,void *a31,uint64_t a32,int a33,__int16 a34,char a35,char a36,char a37)
{
  uint64_t v37;
  void *v39;

  if (a30 < 0)
    operator delete(__p);
  if (a36 < 0)
    operator delete(a31);
  std::ostringstream::~ostringstream((uint64_t)&a37);
  v39 = *(void **)(v37 - 168);
  if (v39)
  {
    *(_QWORD *)(v37 - 160) = v39;
    operator delete(v39);
  }
  _Unwind_Resume(a1);
}

_QWORD *maps::path_codec::Dijkstra<GEOPathMatcherRoadKey>::~Dijkstra(_QWORD *a1)
{
  void *v2;
  void *v3;
  void *v4;

  v2 = (void *)a1[14];
  if (v2)
  {
    a1[15] = v2;
    operator delete(v2);
  }
  std::__hash_table<std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>>>::~__hash_table((uint64_t)(a1 + 9));
  v3 = (void *)a1[5];
  if (v3)
  {
    a1[6] = v3;
    operator delete(v3);
  }
  v4 = (void *)a1[2];
  if (v4)
  {
    a1[3] = v4;
    operator delete(v4);
  }
  return a1;
}

void GEOPathMatcherRoadNetwork::~GEOPathMatcherRoadNetwork(GEOPathMatcherRoadNetwork *this)
{
  *(_QWORD *)this = &off_1E1BF4FD8;
  std::__tree<std::__value_type<unsigned int,unsigned long>,std::__map_value_compare<unsigned int,std::__value_type<unsigned int,unsigned long>,std::less<unsigned int>,true>,std::allocator<std::__value_type<unsigned int,unsigned long>>>::destroy((uint64_t)this + 144, *((_QWORD **)this + 19));

}

void sub_1892E5248(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1892E5BB8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1892E5CF0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void ___ZL32GEOGetGEOMapFeaturePathFinderLogv_block_invoke()
{
  os_log_t v0;
  void *v1;

  v0 = os_log_create("com.apple.GeoServices", "GEOMapFeaturePathFinder");
  v1 = (void *)_MergedGlobals_251;
  _MergedGlobals_251 = (uint64_t)v0;

}

uint64_t maps::path_codec::Dijkstra<GEOPathMatcherRoadKey>::found_target(uint64_t a1, double *a2, uint64_t a3)
{
  double *v3;
  double *v4;
  double *i;
  double *v6;
  uint64_t v7;
  double v8;

  v4 = *(double **)(a3 + 16);
  v3 = *(double **)(a3 + 24);
  if (v4 == v3)
    return 0;
  for (i = v4 + 4; ; i += 7)
  {
    v7 = *((_QWORD *)i - 4);
    v6 = i - 4;
    if (v7)
    {
      v8 = *a2;
    }
    else
    {
      v7 = *((_QWORD *)i - 3);
      v8 = a2[1];
    }
    if (v7 == *(_QWORD *)&v8 && a2[4] <= *i)
      break;
    if (v6 + 7 == v3)
      return 0;
  }
  return 1;
}

uint64_t *maps::path_codec::Dijkstra<GEOPathMatcherRoadKey>::get_navigable_outgoing_roads(_QWORD *a1, uint64_t a2, uint64_t **a3)
{
  _QWORD *v7;
  _QWORD v8[4];

  (*(void (**)(_QWORD))(*(_QWORD *)*a1 + 72))(*a1);
  (*(void (**)(_QWORD *__return_ptr, _QWORD, uint64_t))(*(_QWORD *)*a1 + 8))(v8, *a1, a2);
  v7 = v8;
  return maps::path_codec::erase_if<GEOPathMatcherRoadKey,maps::path_codec::Dijkstra<GEOPathMatcherRoadKey>::get_navigable_outgoing_roads(GEOPathMatcherRoadKey const&,std::vector<GEOPathMatcherRoadKey> &)::{lambda(GEOPathMatcherRoadKey const&)#1}>(a3, (uint64_t *)&v7);
}

unint64_t maps::path_codec::ArcEvaluator<GEOPathMatcherRoadKey>::get_cost(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, double a6)
{
  int v12;
  int v13;
  uint64_t v14;
  unint64_t v15;
  int v16;
  double v17;
  int v18;
  int turn_cost;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  int v26;
  int v27;
  unsigned int v28;
  int v29;
  uint64_t v31;
  void *v32;
  void *v33;
  void *__p;
  char v35;
  uint64_t v36;
  void *v37;
  void *v38;
  void *v39;
  char v40;

  v12 = (*(uint64_t (**)(_QWORD))(*(_QWORD *)*a1 + 56))(*a1);
  v13 = (*(uint64_t (**)(_QWORD, uint64_t))(*(_QWORD *)*a1 + 48))(*a1, a3);
  (*(void (**)(uint64_t *__return_ptr, _QWORD, uint64_t, _QWORD))(*(_QWORD *)*a1 + 32))(&v36, *a1, a2, 0);
  (*(void (**)(uint64_t *__return_ptr, _QWORD, uint64_t, _QWORD))(*(_QWORD *)*a1 + 32))(&v31, *a1, a3, 0);
  v16 = (unsigned __int16)v36;
  v17 = 1.0;
  if ((unsigned __int16)v36 <= 7u)
  {
    LODWORD(v15) = *(_DWORD *)(a4 + 4 * (unsigned __int16)v36 + 28);
    v17 = (double)v15;
  }
  v18 = HIDWORD(v36);
  if ((a5 & 1) != 0)
  {
    turn_cost = 0;
  }
  else
  {
    v20 = v13 + 360 * ((unsigned __int16)(v12 + 180) / 0x168u) - (v12 + 180);
    if ((__int16)(v13 + 360 * ((unsigned __int16)(v12 + 180) / 0x168u) - (v12 + 180)) > 180)
      LOWORD(v20) = v20 - 360;
    if ((__int16)v20 < -179)
      LOWORD(v20) = v20 + 360;
    if ((v20 & 0x8000u) == 0)
      LOWORD(v21) = v20;
    else
      v21 = -(__int16)v20;
    turn_cost = maps::path_codec::CostFunction::get_turn_cost((uint64_t *)a4, v21);
    v16 = (unsigned __int16)v36;
  }
  v22 = (unsigned __int16)v31;
  v23 = WORD1(v36);
  v24 = WORD1(v31);
  v26 = *(_DWORD *)(a4 + 60);
  v25 = *(_DWORD *)(a4 + 64);
  if (v35 < 0)
    operator delete(__p);
  if (v32)
  {
    v33 = v32;
    operator delete(v32);
  }
  if (v40 < 0)
    operator delete(v39);
  if (v37)
  {
    v38 = v37;
    operator delete(v37);
  }
  if (v16 == v22)
    v27 = 0;
  else
    v27 = v26;
  LODWORD(v14) = llround((double)v18 * a6);
  v28 = fmax(round((double)(int)llround((double)(int)v14 / 100.0) / v17), 1.0);
  if (v23 == v24)
    v29 = 0;
  else
    v29 = v25;
  return (turn_cost + v27 + v29 + v28) | (unint64_t)(v14 << 32);
}

void sub_1892E6060(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *a17)
{
  maps::path_codec::RoadProperties::~RoadProperties((void **)&a9);
  maps::path_codec::RoadProperties::~RoadProperties(&a17);
  _Unwind_Resume(a1);
}

_QWORD *std::__hash_table<std::__hash_value_type<GEOPathMatcherRoadKey,unsigned int>,std::__unordered_map_hasher<GEOPathMatcherRoadKey,std::__hash_value_type<GEOPathMatcherRoadKey,unsigned int>,std::hash<GEOPathMatcherRoadKey>,std::equal_to<GEOPathMatcherRoadKey>,true>,std::__unordered_map_equal<GEOPathMatcherRoadKey,std::__hash_value_type<GEOPathMatcherRoadKey,unsigned int>,std::equal_to<GEOPathMatcherRoadKey>,std::hash<GEOPathMatcherRoadKey>,true>,std::allocator<std::__hash_value_type<GEOPathMatcherRoadKey,unsigned int>>>::__emplace_unique_key_args<GEOPathMatcherRoadKey,std::piecewise_construct_t const&,std::tuple<GEOPathMatcherRoadKey const&>,std::tuple<>>(uint64_t a1, uint64_t *a2, uint64_t a3, _OWORD **a4)
{
  unint64_t v4;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint8x8_t v10;
  void **v11;
  _QWORD *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  float v17;
  float v18;
  _BOOL8 v19;
  unint64_t v20;
  unint64_t v21;
  size_t v22;
  uint64_t v23;
  _QWORD *v24;
  unint64_t v25;

  if (*a2)
    v7 = *a2;
  else
    v7 = a2[1];
  v8 = v7 - 0x61C8864680B583EBLL;
  v9 = *(_QWORD *)(a1 + 8);
  if (v9)
  {
    v10 = (uint8x8_t)vcnt_s8((int8x8_t)v9);
    v10.i16[0] = vaddlv_u8(v10);
    if (v10.u32[0] > 1uLL)
    {
      v4 = v7 - 0x61C8864680B583EBLL;
      if (v8 >= v9)
        v4 = v8 % v9;
    }
    else
    {
      v4 = (v9 - 1) & v8;
    }
    v11 = *(void ***)(*(_QWORD *)a1 + 8 * v4);
    if (v11)
    {
      v12 = *v11;
      if (*v11)
      {
        do
        {
          v13 = v12[1];
          if (v13 == v8)
          {
            v14 = v12[2];
            if (v14)
            {
              v15 = *a2;
            }
            else
            {
              v14 = v12[3];
              v15 = a2[1];
            }
            if (v14 == v15)
              return v12;
          }
          else
          {
            if (v10.u32[0] > 1uLL)
            {
              if (v13 >= v9)
                v13 %= v9;
            }
            else
            {
              v13 &= v9 - 1;
            }
            if (v13 != v4)
              break;
          }
          v12 = (_QWORD *)*v12;
        }
        while (v12);
      }
    }
  }
  v12 = operator new(0x38uLL);
  *v12 = 0;
  v12[1] = v8;
  v16 = (*a4)[1];
  *((_OWORD *)v12 + 1) = **a4;
  *((_OWORD *)v12 + 2) = v16;
  *((_DWORD *)v12 + 12) = 0;
  v17 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v18 = *(float *)(a1 + 32);
  if (!v9 || (float)(v18 * (float)v9) < v17)
  {
    v19 = 1;
    if (v9 >= 3)
      v19 = (v9 & (v9 - 1)) != 0;
    v20 = v19 | (2 * v9);
    v21 = vcvtps_u32_f32(v17 / v18);
    if (v20 <= v21)
      v22 = v21;
    else
      v22 = v20;
    std::__hash_table<std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>>>::__rehash<true>(a1, v22);
    v9 = *(_QWORD *)(a1 + 8);
    if ((v9 & (v9 - 1)) != 0)
    {
      if (v8 >= v9)
        v4 = v8 % v9;
      else
        v4 = v8;
    }
    else
    {
      v4 = (v9 - 1) & v8;
    }
  }
  v23 = *(_QWORD *)a1;
  v24 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v4);
  if (v24)
  {
    *v12 = *v24;
LABEL_44:
    *v24 = v12;
    goto LABEL_45;
  }
  *v12 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v12;
  *(_QWORD *)(v23 + 8 * v4) = a1 + 16;
  if (*v12)
  {
    v25 = *(_QWORD *)(*v12 + 8);
    if ((v9 & (v9 - 1)) != 0)
    {
      if (v25 >= v9)
        v25 %= v9;
    }
    else
    {
      v25 &= v9 - 1;
    }
    v24 = (_QWORD *)(*(_QWORD *)a1 + 8 * v25);
    goto LABEL_44;
  }
LABEL_45:
  ++*(_QWORD *)(a1 + 24);
  return v12;
}

void sub_1892E62B8(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

void *std::__allocate_at_least[abi:ne180100]<std::allocator<maps::path_codec::Dijkstra<GEOPathMatcherRoadKey>::SearchData>>(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0x38E38E38E38E38FLL)
    std::__throw_bad_array_new_length[abi:ne180100]();
  return operator new(72 * a2);
}

uint64_t *maps::path_codec::erase_if<GEOPathMatcherRoadKey,maps::path_codec::Dijkstra<GEOPathMatcherRoadKey>::get_navigable_outgoing_roads(GEOPathMatcherRoadKey const&,std::vector<GEOPathMatcherRoadKey> &)::{lambda(GEOPathMatcherRoadKey const&)#1}>(uint64_t **a1, uint64_t *a2)
{
  uint64_t *result;

  result = std::remove_if[abi:ne180100]<std::__wrap_iter<GEOPathMatcherRoadKey *>,maps::path_codec::Dijkstra<GEOPathMatcherRoadKey>::get_navigable_outgoing_roads(GEOPathMatcherRoadKey const&,std::vector<GEOPathMatcherRoadKey> &)::{lambda(GEOPathMatcherRoadKey const&)#1}>(*a1, a1[1], *a2);
  if (a1[1] != result)
    a1[1] = result;
  return result;
}

uint64_t *std::remove_if[abi:ne180100]<std::__wrap_iter<GEOPathMatcherRoadKey *>,maps::path_codec::Dijkstra<GEOPathMatcherRoadKey>::get_navigable_outgoing_roads(GEOPathMatcherRoadKey const&,std::vector<GEOPathMatcherRoadKey> &)::{lambda(GEOPathMatcherRoadKey const&)#1}>(uint64_t *result, uint64_t *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t *i;
  uint64_t v5;
  __int128 v6;

  while (1)
  {
    if (result == a2)
      return a2;
    v3 = *result;
    if (!*result)
      v3 = result[1];
    if (v3 == *(_QWORD *)(a3 + 8 * (*result == 0)))
      break;
    result += 4;
  }
  if (result == a2)
    return a2;
  for (i = result + 4; i != a2; i += 4)
  {
    v5 = *i;
    if (!*i)
      v5 = i[1];
    if (v5 != *(_QWORD *)(a3 + 8 * (*i == 0)))
    {
      v6 = *((_OWORD *)i + 1);
      *(_OWORD *)result = *(_OWORD *)i;
      *((_OWORD *)result + 1) = v6;
      result += 4;
    }
  }
  return result;
}

_QWORD *std::__hash_table<std::__hash_value_type<GEOPathMatcherRoadKey,unsigned int>,std::__unordered_map_hasher<GEOPathMatcherRoadKey,std::__hash_value_type<GEOPathMatcherRoadKey,unsigned int>,std::hash<GEOPathMatcherRoadKey>,std::equal_to<GEOPathMatcherRoadKey>,true>,std::__unordered_map_equal<GEOPathMatcherRoadKey,std::__hash_value_type<GEOPathMatcherRoadKey,unsigned int>,std::equal_to<GEOPathMatcherRoadKey>,std::hash<GEOPathMatcherRoadKey>,true>,std::allocator<std::__hash_value_type<GEOPathMatcherRoadKey,unsigned int>>>::find<GEOPathMatcherRoadKey>(_QWORD *a1, uint64_t *a2)
{
  uint64_t v2;
  int8x8_t v3;
  unint64_t v4;
  uint8x8_t v5;
  unint64_t v6;
  _QWORD *v7;
  _QWORD *result;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if (*a2)
    v2 = *a2;
  else
    v2 = a2[1];
  v3 = (int8x8_t)a1[1];
  if (!*(_QWORD *)&v3)
    return 0;
  v4 = v2 - 0x61C8864680B583EBLL;
  v5 = (uint8x8_t)vcnt_s8(v3);
  v5.i16[0] = vaddlv_u8(v5);
  if (v5.u32[0] > 1uLL)
  {
    v6 = v4;
    if (v4 >= *(_QWORD *)&v3)
      v6 = v4 % *(_QWORD *)&v3;
  }
  else
  {
    v6 = (*(_QWORD *)&v3 - 1) & v4;
  }
  v7 = *(_QWORD **)(*a1 + 8 * v6);
  if (!v7)
    return 0;
  result = (_QWORD *)*v7;
  if (*v7)
  {
    do
    {
      v9 = result[1];
      if (v4 == v9)
      {
        v10 = result[2];
        if (v10)
        {
          v11 = *a2;
        }
        else
        {
          v10 = result[3];
          v11 = a2[1];
        }
        if (v10 == v11)
          return result;
      }
      else
      {
        if (v5.u32[0] > 1uLL)
        {
          if (v9 >= *(_QWORD *)&v3)
            v9 %= *(_QWORD *)&v3;
        }
        else
        {
          v9 &= *(_QWORD *)&v3 - 1;
        }
        if (v9 != v6)
          return 0;
      }
      result = (_QWORD *)*result;
    }
    while (result);
  }
  return result;
}

void *std::__allocate_at_least[abi:ne180100]<std::allocator<maps::path_codec::SnappedRoadSegment<GEOPathMatcherRoadKey>>>(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0x492492492492493)
    std::__throw_bad_array_new_length[abi:ne180100]();
  return operator new(56 * a2);
}

char *std::vector<GEOLocationCoordinate3D>::__assign_with_size[abi:ne180100]<GEOLocationCoordinate3D*,GEOLocationCoordinate3D*>(char *result, char *__src, uint64_t a3, unint64_t a4)
{
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  void **v13;
  char *v14;
  _BYTE *v15;
  char *v16;
  size_t v17;
  void *v18;
  char *v19;

  v7 = result;
  v8 = *((_QWORD *)result + 2);
  v9 = *(char **)result;
  if (0xAAAAAAAAAAAAAAABLL * ((v8 - *(_QWORD *)result) >> 3) < a4)
  {
    if (v9)
    {
      *((_QWORD *)result + 1) = v9;
      operator delete(v9);
      v8 = 0;
      *v7 = 0;
      v7[1] = 0;
      v7[2] = 0;
    }
    if (a4 > 0xAAAAAAAAAAAAAAALL)
      std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
    v10 = 0xAAAAAAAAAAAAAAABLL * (v8 >> 3);
    v11 = 2 * v10;
    if (2 * v10 <= a4)
      v11 = a4;
    if (v10 >= 0x555555555555555)
      v12 = 0xAAAAAAAAAAAAAAALL;
    else
      v12 = v11;
    result = std::vector<zilch::TrafficDynamicTile::Flow>::__vallocate[abi:ne180100](v7, v12);
    v14 = (char *)v7[1];
    v13 = (void **)(v7 + 1);
    v9 = v14;
LABEL_16:
    v17 = a3 - (_QWORD)__src;
    if (v17)
    {
      v18 = v9;
      v19 = __src;
      goto LABEL_18;
    }
    goto LABEL_19;
  }
  v13 = (void **)(result + 8);
  v15 = (_BYTE *)*((_QWORD *)result + 1);
  if (0xAAAAAAAAAAAAAAABLL * ((v15 - v9) >> 3) >= a4)
    goto LABEL_16;
  v16 = &__src[8 * ((v15 - v9) >> 3)];
  if (v15 != v9)
  {
    result = (char *)memmove(*(void **)result, __src, v15 - v9);
    v9 = (char *)*v13;
  }
  v17 = a3 - (_QWORD)v16;
  if (v17)
  {
    v18 = v9;
    v19 = v16;
LABEL_18:
    result = (char *)memmove(v18, v19, v17);
  }
LABEL_19:
  *v13 = &v9[v17];
  return result;
}

void sub_1892E6E54(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOBusinessResolutionRequestReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  _BOOL4 v15;
  int *v16;
  BOOL v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  int v28;
  unint64_t v30;
  _BOOL4 v31;
  int *v32;
  int v33;
  int v34;
  BOOL v35;
  uint64_t v36;
  void *v37;
  GEOLocation *v38;
  void *v39;
  char v40;
  char v41;
  char v42;
  int v43;
  int v44;
  void *v45;
  BOOL v47;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 36);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 32));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int8 *)(a1 + 44) >> 1) & 1) + (*(_BYTE *)(a1 + 44) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v9])
    {
      case -3:
        v8 = 1;
        goto LABEL_6;
      case -2:
        v12 = v7;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v10 & 1 | v11;
        v15 = v14 != 0;
        if ((v14 != 0) | v8 & 1)
          v16 = 0;
        else
          v16 = a3;
        v17 = v16 == 0;
        if (v14)
          v17 = 1;
        v47 = v17;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_6:
        v12 = v7;
        v13 = v10;
LABEL_8:
        ++v9;
        v7 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v19))
      goto LABEL_60;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      if (v25 == -1 || v25 >= *(_QWORD *)(v3 + *v6))
        break;
      v26 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v25 + 1;
      v23 |= (unint64_t)(v26 & 0x7F) << v21;
      if ((v26 & 0x80) == 0)
        goto LABEL_25;
      v21 += 7;
      if (v22++ >= 9)
      {
        v23 = 0;
        v28 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_25:
    v28 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_27:
    if (v28 || (v23 & 7) == 4)
    {
LABEL_60:
      if (v15)
      {
        v41 = 1;
        goto LABEL_72;
      }
      if (!v16)
        goto LABEL_73;
      while (1)
      {
        v44 = *v16++;
        v43 = v44;
        if (v44 == 1)
          break;
        if (v43 == 2)
        {
          v42 = 1;
LABEL_66:
          *(_BYTE *)(a1 + 44) |= v42;
        }
        else if (!v43)
        {
          goto LABEL_73;
        }
      }
      v42 = 2;
      goto LABEL_66;
    }
    v30 = v23 >> 3;
    v31 = v15;
    if (!v47)
    {
      v32 = v16;
      do
      {
        v34 = *v32++;
        v33 = v34;
        v31 = v34 != 0;
        if (v34)
          v35 = v33 == (_DWORD)v30;
        else
          v35 = 1;
      }
      while (!v35);
    }
    if ((_DWORD)v30 == 2)
      break;
    if ((_DWORD)v30 == 1)
    {
      if (v31)
      {
        if ((*(_BYTE *)(a1 + 44) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_71;
          v9 += *(unsigned __int8 *)(a1 + 44) << 30 >> 31;
        }
        else
        {
          PBReaderReadString();
          v36 = objc_claimAutoreleasedReturnValue();
          v37 = *(void **)(a1 + 24);
          *(_QWORD *)(a1 + 24) = v36;

          --v9;
        }
        goto LABEL_56;
      }
LABEL_50:
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        goto LABEL_71;
      goto LABEL_56;
    }
    if (!PBReaderSkipValueWithTag())
      goto LABEL_71;
LABEL_56:
    if (v9)
      v40 = 1;
    else
      v40 = v15;
    if ((v40 & 1) == 0)
      goto LABEL_60;
  }
  if (!v31)
    goto LABEL_50;
  if ((*(_BYTE *)(a1 + 44) & 1) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0)
    {
LABEL_71:
      v41 = 0;
      goto LABEL_72;
    }
    v9 -= *(_BYTE *)(a1 + 44) & 1;
    goto LABEL_56;
  }
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_71;
  v38 = objc_alloc_init(GEOLocation);
  if (GEOLocationReadAllFrom((uint64_t)v38, (void *)v3, v7 & 1))
  {
    PBReaderRecallMark();
    v39 = *(void **)(a1 + 16);
    *(_QWORD *)(a1 + 16) = v38;

    --v9;
    v19 = (int *)MEMORY[0x1E0D82BC8];
    goto LABEL_56;
  }

  v41 = 0;
  v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_72:
  *(_BYTE *)(a1 + 44) |= 2u;
  *(_BYTE *)(a1 + 44) |= 1u;
  if ((v41 & 1) != 0)
  {
LABEL_73:
    v3 = *(_BYTE *)(v3 + *v19) == 0;
    if (v15)
      goto LABEL_74;
  }
  else
  {
    v3 = 0;
    if (v15)
    {
LABEL_74:
      v45 = *(void **)(a1 + 8);
      *(_QWORD *)(a1 + 8) = 0;

    }
  }
  return v3;
}

void sub_1892E73EC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892E77D4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOBusinessResolutionRequestReadAllFrom(uint64_t a1, void *a2)
{
  unint64_t Specified;
  id v6;
  uint8_t v7[16];

  if (*(_DWORD *)(a1 + 36))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOBusinessResolutionRequestReadAllFrom can only be called once per object"));
  }
  else
  {
    if (!((unint64_t)objc_msgSend(a2, "position") >> 32)
      && !((unint64_t)objc_msgSend(a2, "length") >> 32))
    {
      os_unfair_lock_lock((os_unfair_lock_t)(a1 + 40));
      v6 = a2;
      objc_sync_enter(v6);
      objc_storeStrong((id *)(a1 + 8), a2);
      *(_DWORD *)(a1 + 32) = objc_msgSend(v6, "position");
      *(_DWORD *)(a1 + 36) = objc_msgSend(v6, "length");
      Specified = GEOBusinessResolutionRequestReadSpecified(a1, (unint64_t)v6, GEOBusinessResolutionRequestReadAllFrom_initialTag);
      objc_sync_exit(v6);

      os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
      return Specified;
    }
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v7 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v7, 2u);
    }
  }
  return 0;
}

void sub_1892E794C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892E7CC0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892E7FD4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892E8F60(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892E95F4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPBTransitAccessPointReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  int *v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  BOOL v28;
  int v29;
  unint64_t v31;
  BOOL v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  char v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  char v44;
  unsigned int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  char v50;
  id v51;
  void *v52;
  int v53;
  GEOLatLng *v54;
  void *v55;
  char v56;
  unsigned int v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  char v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  uint64_t v65;
  __int16 v66;
  int v67;
  int v68;
  __int16 v69;
  void *v70;
  int v72;
  int *v73;
  char v74;
  char v75;
  char v76;
  char v77;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 76);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 72));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 92)), (uint16x4_t)0xFFFCFFF9FFF8FFFBLL), (int8x8_t)0x1000100010001))+ ((*(_WORD *)(a1 + 92) >> 6) & 1)+ ((*(_WORD *)(a1 + 92) >> 3) & 1));
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 > 3;
        v74 = v16 & ~(_BYTE)v11 | v9;
        v75 = v16 | v11 | v74;
        if ((((v16 | v11) | v8) & 1) != 0)
          v17 = 0;
        else
          v17 = a3;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v76 = (v17 == 0) | v16 | v11;
        v77 = v16 | v11;
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v7;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v19))
      goto LABEL_118;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0)
        goto LABEL_25;
      v21 += 7;
      v28 = v22++ >= 9;
      if (v28)
      {
        v23 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_25:
    v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_27:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_118:
      v72 = 1;
      goto LABEL_119;
    }
    v31 = v23 >> 3;
    v32 = v77;
    if ((v76 & 1) == 0)
    {
      v33 = v17;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if ((v8 & 1) == 0)
          goto LABEL_94;
        v37 = 0;
        v38 = 0;
        v39 = 0;
        *(_WORD *)(a1 + 92) |= 1u;
        while (1)
        {
          v40 = *v18;
          v41 = *(_QWORD *)(v3 + v40);
          v42 = v41 + 1;
          if (v41 == -1 || v42 > *(_QWORD *)(v3 + *v6))
            break;
          v43 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v41);
          *(_QWORD *)(v3 + v40) = v42;
          v39 |= (unint64_t)(v43 & 0x7F) << v37;
          if ((v43 & 0x80) == 0)
            goto LABEL_97;
          v37 += 7;
          v28 = v38++ >= 9;
          if (v28)
          {
            v39 = 0;
            goto LABEL_99;
          }
        }
        *(_BYTE *)(v3 + *v19) = 1;
LABEL_97:
        if (*(_BYTE *)(v3 + *v19))
          v39 = 0;
LABEL_99:
        *(_QWORD *)(a1 + 64) = v39;
        goto LABEL_117;
      case 2:
      case 3:
      case 6:
      case 7:
      case 8:
      case 9:
      case 10:
      case 11:
      case 12:
        goto LABEL_56;
      case 4:
        if (!v32)
          goto LABEL_94;
        if ((*(_WORD *)(a1 + 92) & 0x100) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_142;
          v66 = *(_WORD *)(a1 + 92) << 7;
LABEL_110:
          v7 += v66 >> 15;
          goto LABEL_111;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_142;
        v54 = objc_alloc_init(GEOLatLng);
        if (GEOLatLngReadAllFrom((uint64_t)v54, (void *)v3))
        {
          PBReaderRecallMark();
          v55 = *(void **)(a1 + 56);
          *(_QWORD *)(a1 + 56) = v54;
LABEL_93:

          --v7;
LABEL_111:
          v19 = (int *)MEMORY[0x1E0D82BC8];
          v20 = (int *)MEMORY[0x1E0D82BB8];
          goto LABEL_117;
        }
LABEL_141:

LABEL_142:
        v72 = 0;
        v73 = &OBJC_IVAR___GEOPDRelatedEntitySection__reader;
        v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_120:
        if ((v74 & 1) != 0)
LABEL_121:
          *(_WORD *)(a1 + v73[188]) |= 8u;
        if (v77 & 1 | ((v72 & 1) == 0))
        {
          *(_WORD *)(a1 + v73[188]) |= 0x100u;
          *(_WORD *)(a1 + v73[188]) |= 0x20u;
          *(_WORD *)(a1 + v73[188]) |= 0x80u;
          *(_WORD *)(a1 + v73[188]) |= 0x10u;
          *(_WORD *)(a1 + v73[188]) |= 0x40u;
        }
        else if (v17)
        {
          while (1)
          {
            v68 = *v17++;
            v67 = v68;
            switch(v68)
            {
              case 13:
                v69 = 32;
                goto LABEL_134;
              case 14:
                v69 = 128;
                goto LABEL_134;
              case 15:
                v69 = 16;
                goto LABEL_134;
              case 16:
                v69 = 64;
                goto LABEL_134;
              default:
                if (v67 == 4)
                {
                  v69 = 256;
LABEL_134:
                  *(_WORD *)(a1 + v73[188]) |= v69;
                }
                else if (!v67)
                {
                  goto LABEL_135;
                }
                break;
            }
          }
        }
LABEL_135:
        if (v72)
          v3 = *(_BYTE *)(v3 + *v19) == 0;
        else
          v3 = 0;
        if ((v77 & 1) != 0)
        {
          v70 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      case 5:
        if ((v8 & 1) == 0)
          goto LABEL_94;
        v56 = 0;
        v57 = 0;
        v46 = 0;
        *(_WORD *)(a1 + 92) |= 4u;
        while (2)
        {
          v58 = *v18;
          v59 = *(_QWORD *)(v3 + v58);
          v60 = v59 + 1;
          if (v59 == -1 || v60 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v19) = 1;
          }
          else
          {
            v61 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v59);
            *(_QWORD *)(v3 + v58) = v60;
            v46 |= (unint64_t)(v61 & 0x7F) << v56;
            if (v61 < 0)
            {
              v56 += 7;
              v28 = v57++ >= 9;
              if (v28)
              {
                LODWORD(v46) = 0;
                goto LABEL_103;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v19))
          LODWORD(v46) = 0;
LABEL_103:
        v65 = 88;
        goto LABEL_116;
      case 13:
        if (!v32 || (*(_WORD *)(a1 + 92) & 0x20) != 0)
          goto LABEL_94;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_142;
        v54 = objc_alloc_init(GEOPBTransitZoomRangeString);
        if (!GEOPBTransitZoomRangeStringReadAllFrom((uint64_t)v54, (void *)v3, v10 & 1))
          goto LABEL_141;
        PBReaderRecallMark();
        -[GEOPBTransitAccessPoint _addNoFlagsEntranceZoomName:](a1, v54);
        goto LABEL_85;
      case 14:
        if (!v32 || (*(_WORD *)(a1 + 92) & 0x80) != 0)
          goto LABEL_94;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_142;
        v54 = objc_alloc_init(GEOPBTransitZoomRangeString);
        if (!GEOPBTransitZoomRangeStringReadAllFrom((uint64_t)v54, (void *)v3, v10 & 1))
          goto LABEL_141;
        PBReaderRecallMark();
        -[GEOPBTransitAccessPoint _addNoFlagsExitZoomName:](a1, v54);
LABEL_85:

        goto LABEL_111;
      case 15:
        if (!v32)
          goto LABEL_94;
        if ((*(_WORD *)(a1 + 92) & 0x10) == 0)
        {
          PBReaderReadString();
          v62 = objc_claimAutoreleasedReturnValue();
          v63 = 24;
          goto LABEL_92;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_142;
        v66 = *(_WORD *)(a1 + 92) << 11;
        goto LABEL_110;
      case 16:
        if (!v32)
          goto LABEL_94;
        if ((*(_WORD *)(a1 + 92) & 0x40) == 0)
        {
          PBReaderReadString();
          v62 = objc_claimAutoreleasedReturnValue();
          v63 = 40;
LABEL_92:
          v55 = *(void **)(a1 + v63);
          *(_QWORD *)(a1 + v63) = v62;
          goto LABEL_93;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_142;
        v66 = *(_WORD *)(a1 + 92) << 9;
        goto LABEL_110;
      default:
        if ((_DWORD)v31 == 2047)
        {
          if ((v8 & 1) != 0)
          {
            v44 = 0;
            v45 = 0;
            v46 = 0;
            *(_WORD *)(a1 + 92) |= 2u;
            while (1)
            {
              v47 = *v18;
              v48 = *(_QWORD *)(v3 + v47);
              v49 = v48 + 1;
              if (v48 == -1 || v49 > *(_QWORD *)(v3 + *v6))
                break;
              v50 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v48);
              *(_QWORD *)(v3 + v47) = v49;
              v46 |= (unint64_t)(v50 & 0x7F) << v44;
              if ((v50 & 0x80) == 0)
                goto LABEL_113;
              v44 += 7;
              v28 = v45++ >= 9;
              if (v28)
              {
                LODWORD(v46) = 0;
                goto LABEL_115;
              }
            }
            *(_BYTE *)(v3 + *v19) = 1;
LABEL_113:
            if (*(_BYTE *)(v3 + *v19))
              LODWORD(v46) = 0;
LABEL_115:
            v65 = 84;
LABEL_116:
            *(_DWORD *)(a1 + v65) = v46;
            goto LABEL_117;
          }
        }
        else
        {
LABEL_56:
          if ((v74 & 1) != 0 && (*(_WORD *)(a1 + 92) & 8) == 0)
          {
            if (!*(_QWORD *)(a1 + 16))
            {
              v51 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
              v52 = *(void **)(a1 + 16);
              *(_QWORD *)(a1 + 16) = v51;

            }
            v53 = PBUnknownFieldAdd();
            v19 = (int *)MEMORY[0x1E0D82BC8];
            v20 = (int *)MEMORY[0x1E0D82BB8];
            if (!v53)
            {
              v72 = 0;
              v73 = &OBJC_IVAR___GEOPDRelatedEntitySection__reader;
              goto LABEL_121;
            }
            goto LABEL_117;
          }
        }
LABEL_94:
        v64 = PBReaderSkipValueWithTag();
        v20 = (int *)MEMORY[0x1E0D82BB8];
        v19 = (int *)MEMORY[0x1E0D82BC8];
        if ((v64 & 1) == 0)
        {
          v72 = 0;
LABEL_119:
          v73 = &OBJC_IVAR___GEOPDRelatedEntitySection__reader;
          goto LABEL_120;
        }
LABEL_117:
        if (!(v75 & 1 | (v7 != 0)))
          goto LABEL_118;
        continue;
    }
  }
}

void sub_1892EA0F8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892EA428(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892EA758(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892EA898(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892EB5A0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPBTransitAccessPointCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  _BYTE v20[128];
  _BYTE v21[128];
  uint64_t v22;

  v22 = *MEMORY[0x1E0C80C00];
  objc_msgSend(a1[7], "readAll:", 1);
  v18 = 0u;
  v19 = 0u;
  v16 = 0u;
  v17 = 0u;
  v2 = a1[4];
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v16, v21, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v17;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v17 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v16 + 1) + 8 * v6++), "readAll:", 1);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v16, v21, 16);
    }
    while (v4);
  }

  v14 = 0u;
  v15 = 0u;
  v12 = 0u;
  v13 = 0u;
  v7 = a1[6];
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v12, v20, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v13;
    do
    {
      v11 = 0;
      do
      {
        if (*(_QWORD *)v13 != v10)
          objc_enumerationMutation(v7);
        objc_msgSend(*(id *)(*((_QWORD *)&v12 + 1) + 8 * v11++), "readAll:", 1, (_QWORD)v12);
      }
      while (v9 != v11);
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v12, v20, 16);
    }
    while (v9);
  }

}

unint64_t GEOPBTransitAccessPointReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 76))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPBTransitAccessPointReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 80));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 72) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 76) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPBTransitAccessPointReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPBTransitAccessPointReadAllFrom_initialTag;
  Specified = GEOPBTransitAccessPointReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPBTransitAccessPointCallReadAllRecursiveWithoutSynchronized((id *)a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 80));
  return Specified;
}

void sub_1892EB8D8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPBTransitAccessPointReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOPBTransitAccessPointReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1892EB938(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPBTransitAccessPointIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  int v32;
  _BOOL8 v33;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (!a1[*v4])
    {
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0)
            goto LABEL_60;
          v23 = 0;
          while (1)
          {
            v24 = *v2;
            v25 = *(_QWORD *)&a1[v24];
            v26 = v25 + 1;
            if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
              goto LABEL_53;
            v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
            *(_QWORD *)&a1[v24] = v26;
            if (v27 < 0)
            {
              v22 = v23++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_58;
          }
        case 2u:
        case 3u:
        case 6u:
        case 7u:
        case 8u:
        case 9u:
        case 0xAu:
        case 0xBu:
        case 0xCu:
          goto LABEL_57;
        case 4u:
          if (v15 == 2 && PBReaderPlaceMark() && GEOLatLngIsValid(a1))
            goto LABEL_44;
          goto LABEL_60;
        case 5u:
          if ((v8 & 7) != 0)
            goto LABEL_60;
          v28 = 0;
          while (1)
          {
            v29 = *v2;
            v30 = *(_QWORD *)&a1[v29];
            v31 = v30 + 1;
            if (v30 == -1 || v31 > *(_QWORD *)&a1[*v3])
              goto LABEL_53;
            v32 = *(char *)(*(_QWORD *)&a1[*v5] + v30);
            *(_QWORD *)&a1[v29] = v31;
            if (v32 < 0)
            {
              v22 = v28++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_58;
          }
        case 0xDu:
        case 0xEu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPBTransitZoomRangeStringIsValid(a1))
            goto LABEL_60;
LABEL_44:
          PBReaderRecallMark();
          goto LABEL_58;
        case 0xFu:
          if (v15 == 2)
            goto LABEL_57;
          goto LABEL_60;
        case 0x10u:
          if (v15 == 2)
            goto LABEL_57;
          goto LABEL_60;
        default:
          if ((v8 >> 3) == 2047)
          {
            if ((v8 & 7) != 0)
              goto LABEL_60;
            v17 = 0;
            while (1)
            {
              v18 = *v2;
              v19 = *(_QWORD *)&a1[v18];
              v20 = v19 + 1;
              if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
                break;
              v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
              *(_QWORD *)&a1[v18] = v20;
              if (v21 < 0)
              {
                v22 = v17++ > 8;
                if (!v22)
                  continue;
              }
              goto LABEL_58;
            }
LABEL_53:
            a1[*v4] = 1;
          }
          else
          {
LABEL_57:
            if ((PBReaderSkipValueWithTag() & 1) == 0)
            {
LABEL_60:
              PBReaderRecallMark();
              return 0;
            }
          }
LABEL_58:
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_59;
          break;
      }
    }
  }
LABEL_59:
  v33 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v33;
}

BOOL GEOPBTransitZoomRangeStringIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unint64_t v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int v22;
  _BOOL8 v24;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_38;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        goto LABEL_38;
      v17 = v8 >> 3;
      if ((v8 >> 3) == 4)
        break;
      if ((_DWORD)v17 == 3)
      {
        if (v15 != 2)
          goto LABEL_40;
LABEL_32:
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_40;
        goto LABEL_37;
      }
      if ((_DWORD)v17 == 1)
      {
        if ((v8 & 7) != 0)
          goto LABEL_40;
        v18 = 0;
        while (1)
        {
          v19 = *v2;
          v20 = *(_QWORD *)&a1[v19];
          v21 = v20 + 1;
          if (v20 == -1 || v21 > *(_QWORD *)&a1[*v3])
            break;
          v22 = *(char *)(*(_QWORD *)&a1[*v5] + v20);
          *(_QWORD *)&a1[v19] = v21;
          if (v22 < 0 && v18++ <= 8)
            continue;
          goto LABEL_37;
        }
        a1[*v4] = 1;
      }
      else if (!PBReaderSkipValueWithTag())
      {
LABEL_40:
        v24 = 0;
        goto LABEL_39;
      }
LABEL_37:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_38;
    }
    if (v15 != 2)
      goto LABEL_40;
    goto LABEL_32;
  }
LABEL_38:
  v24 = a1[*v4] == 0;
LABEL_39:
  PBReaderRecallMark();
  return v24;
}

void sub_1892EC204(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPBTransitAccessPointIsDirty(uint64_t a1)
{
  __int16 v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t i;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _BYTE v12[128];
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  v2 = *(_WORD *)(a1 + 92);
  if ((v2 & 0x3F0) != 0)
    return 1;
  if ((v2 & 0x80) == 0)
    return 0;
  v10 = 0u;
  v11 = 0u;
  v8 = 0u;
  v9 = 0u;
  v4 = *(id *)(a1 + 48);
  v3 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
  if (v3)
  {
    v5 = *(_QWORD *)v9;
    while (2)
    {
      for (i = 0; i != v3; ++i)
      {
        if (*(_QWORD *)v9 != v5)
          objc_enumerationMutation(v4);
        if (GEOPBTransitZoomRangeStringIsDirty(*(_QWORD *)(*((_QWORD *)&v8 + 1) + 8 * i)))
        {
          v3 = 1;
          goto LABEL_15;
        }
      }
      v3 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
      if (v3)
        continue;
      break;
    }
  }
LABEL_15:

  return v3;
}

os_unfair_lock_s *GEOPBTransitAccessPointIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOPBTransitAccessPointIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 20);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_1892EC994(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892ECF7C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPBTransitBrandReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  int *v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  BOOL v28;
  int v29;
  unint64_t v31;
  BOOL v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  GEOStyleAttributes *v37;
  void *v38;
  char v39;
  unsigned int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  char v46;
  unsigned int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  char v52;
  uint64_t v53;
  id v54;
  void *v55;
  int v56;
  char v57;
  char v58;
  int v59;
  int v60;
  char v61;
  void *v62;
  int v64;
  int *v65;
  char v66;
  char v67;
  char v68;
  char v69;
  char v70;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 52);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 48));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = ((*(unsigned __int8 *)(a1 + 64) >> 4) & 1)
      + ((*(unsigned __int8 *)(a1 + 64) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 64) >> 2) & 1);
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v12;
        v13 = v7;
        goto LABEL_8;
      case -3:
        v9 = 1;
        goto LABEL_7;
      case -2:
        v13 = v7;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 != 0;
        v66 = v16 & ~(_BYTE)v11 | v8;
        v67 = v9;
        v68 = v16 | v11 | v66;
        if ((((v16 | v11) | v9) & 1) != 0)
          v17 = 0;
        else
          v17 = a3;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v69 = (v17 == 0) | v16 | v11;
        v70 = v16 | v11;
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v7;
        v14 = v8;
LABEL_8:
        v15 = v11;
LABEL_10:
        ++v10;
        v7 = v13;
        v8 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v19))
      goto LABEL_91;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0)
        goto LABEL_25;
      v21 += 7;
      v28 = v22++ >= 9;
      if (v28)
      {
        v23 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_25:
    v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_27:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_91:
      v64 = 1;
      goto LABEL_92;
    }
    v31 = v23 >> 3;
    v32 = v70;
    if ((v69 & 1) == 0)
    {
      v33 = v17;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    if ((int)v31 > 9)
    {
      if ((_DWORD)v31 == 10)
      {
        if (!v32)
          goto LABEL_74;
        if ((*(_BYTE *)(a1 + 64) & 8) == 0)
        {
          PBReaderReadString();
          v53 = objc_claimAutoreleasedReturnValue();
          v38 = *(void **)(a1 + 32);
          *(_QWORD *)(a1 + 32) = v53;
LABEL_67:

          --v10;
LABEL_89:
          v19 = (int *)MEMORY[0x1E0D82BC8];
          goto LABEL_90;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_111;
        v58 = 16 * *(_BYTE *)(a1 + 64);
LABEL_88:
        v10 += v58 >> 7;
        goto LABEL_89;
      }
      if ((_DWORD)v31 == 2047)
      {
        if ((v67 & 1) == 0)
          goto LABEL_74;
        v39 = 0;
        v40 = 0;
        v41 = 0;
        *(_BYTE *)(a1 + 64) |= 2u;
        while (1)
        {
          v42 = *v18;
          v43 = *(_QWORD *)(v3 + v42);
          v44 = v43 + 1;
          if (v43 == -1 || v44 > *(_QWORD *)(v3 + *v6))
            break;
          v45 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v43);
          *(_QWORD *)(v3 + v42) = v44;
          v41 |= (unint64_t)(v45 & 0x7F) << v39;
          if ((v45 & 0x80) == 0)
            goto LABEL_77;
          v39 += 7;
          v28 = v40++ >= 9;
          if (v28)
          {
            LODWORD(v41) = 0;
            goto LABEL_79;
          }
        }
        *(_BYTE *)(v3 + *v19) = 1;
LABEL_77:
        if (*(_BYTE *)(v3 + *v19))
          LODWORD(v41) = 0;
LABEL_79:
        *(_DWORD *)(a1 + 60) = v41;
        goto LABEL_90;
      }
      goto LABEL_68;
    }
    if ((_DWORD)v31 == 4)
    {
      if ((v67 & 1) == 0)
        goto LABEL_74;
      v46 = 0;
      v47 = 0;
      v48 = 0;
      *(_BYTE *)(a1 + 64) |= 1u;
      while (1)
      {
        v49 = *v18;
        v50 = *(_QWORD *)(v3 + v49);
        v51 = v50 + 1;
        if (v50 == -1 || v51 > *(_QWORD *)(v3 + *v6))
          break;
        v52 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v50);
        *(_QWORD *)(v3 + v49) = v51;
        v48 |= (unint64_t)(v52 & 0x7F) << v46;
        if ((v52 & 0x80) == 0)
          goto LABEL_81;
        v46 += 7;
        v28 = v47++ >= 9;
        if (v28)
        {
          v48 = 0;
          goto LABEL_83;
        }
      }
      *(_BYTE *)(v3 + *v19) = 1;
LABEL_81:
      if (*(_BYTE *)(v3 + *v19))
        v48 = 0;
LABEL_83:
      *(_QWORD *)(a1 + 24) = v48;
      goto LABEL_90;
    }
    if ((_DWORD)v31 == 9)
      break;
LABEL_68:
    if ((v66 & 1) == 0 || (*(_BYTE *)(a1 + 64) & 4) != 0)
    {
LABEL_74:
      v57 = PBReaderSkipValueWithTag();
      v19 = (int *)MEMORY[0x1E0D82BC8];
      if ((v57 & 1) == 0)
      {
        v64 = 0;
        goto LABEL_92;
      }
      goto LABEL_90;
    }
    if (!*(_QWORD *)(a1 + 16))
    {
      v54 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
      v55 = *(void **)(a1 + 16);
      *(_QWORD *)(a1 + 16) = v54;

    }
    v56 = PBUnknownFieldAdd();
    v19 = (int *)MEMORY[0x1E0D82BC8];
    if (!v56)
    {
      v64 = 0;
      v65 = &OBJC_IVAR___GEORouteDetails__isNearCurrentlyDisplayedStep;
      goto LABEL_93;
    }
LABEL_90:
    if (!(v68 & 1 | (v10 != 0)))
      goto LABEL_91;
  }
  if (!v32)
    goto LABEL_74;
  if ((*(_BYTE *)(a1 + 64) & 0x10) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0)
      goto LABEL_111;
    v58 = 8 * *(_BYTE *)(a1 + 64);
    goto LABEL_88;
  }
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_111;
  v37 = objc_alloc_init(GEOStyleAttributes);
  if (GEOStyleAttributesReadAllFrom((uint64_t)v37, (void *)v3))
  {
    PBReaderRecallMark();
    v38 = *(void **)(a1 + 40);
    *(_QWORD *)(a1 + 40) = v37;
    goto LABEL_67;
  }

LABEL_111:
  v64 = 0;
  v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_92:
  v65 = &OBJC_IVAR___GEORouteDetails__isNearCurrentlyDisplayedStep;
  if ((v66 & 1) == 0)
    goto LABEL_94;
LABEL_93:
  *(_BYTE *)(a1 + v65[313]) |= 4u;
LABEL_94:
  if (v70 & 1 | ((v64 & 1) == 0))
  {
    *(_BYTE *)(a1 + v65[313]) |= 0x10u;
    *(_BYTE *)(a1 + v65[313]) |= 8u;
    goto LABEL_104;
  }
  if (v17)
  {
    while (2)
    {
      while (1)
      {
        v60 = *v17++;
        v59 = v60;
        if (v60 == 9)
          break;
        if (v59 == 10)
        {
          v61 = 8;
          goto LABEL_103;
        }
        if (!v59)
          goto LABEL_104;
      }
      v61 = 16;
LABEL_103:
      *(_BYTE *)(a1 + v65[313]) |= v61;
      continue;
    }
  }
LABEL_104:
  if (v64)
    v3 = *(_BYTE *)(v3 + *v19) == 0;
  else
    v3 = 0;
  if ((v70 & 1) != 0)
  {
    v62 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_1892EDD5C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892EDE40(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPBTransitBrandReadAllFrom(uint64_t a1, void *a2)
{
  unint64_t Specified;
  id v6;
  uint8_t v7[16];

  if (*(_DWORD *)(a1 + 52))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPBTransitBrandReadAllFrom can only be called once per object"));
  }
  else
  {
    if (!((unint64_t)objc_msgSend(a2, "position") >> 32)
      && !((unint64_t)objc_msgSend(a2, "length") >> 32))
    {
      os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
      v6 = a2;
      objc_sync_enter(v6);
      objc_storeStrong((id *)(a1 + 8), a2);
      *(_DWORD *)(a1 + 48) = objc_msgSend(v6, "position");
      *(_DWORD *)(a1 + 52) = objc_msgSend(v6, "length");
      Specified = GEOPBTransitBrandReadSpecified(a1, (unint64_t)v6, (int *)&GEOPBTransitBrandReadAllFrom_initialTag);
      objc_sync_exit(v6);

      os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
      return Specified;
    }
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v7 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v7, 2u);
    }
  }
  return 0;
}

void sub_1892EE080(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892EE254(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892EE420(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892EE8FC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPBTransitHallReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  int *v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  int *v18;
  int *v19;
  int *v20;
  int *v21;
  char v22;
  unsigned int v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  BOOL v29;
  int v30;
  unint64_t v32;
  BOOL v33;
  int *v34;
  int v35;
  int v36;
  BOOL v37;
  char v38;
  unsigned int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  char v45;
  unsigned int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  char v51;
  id v52;
  void *v53;
  int v54;
  char v55;
  unsigned int v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  char v60;
  GEOLatLng *v61;
  uint64_t v62;
  void *v63;
  uint64_t v64;
  char v65;
  uint64_t v66;
  __int16 v67;
  int v68;
  __int16 v69;
  void *v70;
  int v72;
  int *v73;
  char v74;
  char v75;
  char v76;
  char v77;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 68);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 64));
  v7 = v6;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 84)), (uint16x4_t)0xFFFBFFFAFFFCFFF9), (int8x8_t)0x1000100010001))+ ((*(_WORD *)(a1 + 84) >> 3) & 1));
  while (2)
  {
    v14 = 1;
    v15 = 1;
    v16 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v13;
        goto LABEL_8;
      case -3:
        v9 = 1;
        goto LABEL_7;
      case -2:
        v15 = v11;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v17 = v13 > 2;
        v74 = v17 & ~(_BYTE)v12 | v10;
        v75 = v17 | v12 | v74;
        if ((((v17 | v12) | v9) & 1) != 0)
          v18 = 0;
        else
          v18 = a3;
        v76 = (v18 == 0) | v17 | v12;
        v77 = v17 | v12;
        v19 = (int *)MEMORY[0x1E0D82BF0];
        v20 = (int *)MEMORY[0x1E0D82BC8];
        v21 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v13;
LABEL_7:
        v14 = v10;
LABEL_8:
        v15 = v11;
        v16 = v12;
LABEL_10:
        ++v8;
        v10 = v14;
        v11 = v15;
        v12 = v16;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v19) >= *(_QWORD *)(v3 + *v7) || *(_BYTE *)(v3 + *v20))
      goto LABEL_114;
    v22 = 0;
    v23 = 0;
    v24 = 0;
    while (1)
    {
      v25 = *v19;
      v26 = *(_QWORD *)(v3 + v25);
      v27 = v26 + 1;
      if (v26 == -1 || v27 > *(_QWORD *)(v3 + *v7))
        break;
      v28 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v26);
      *(_QWORD *)(v3 + v25) = v27;
      v24 |= (unint64_t)(v28 & 0x7F) << v22;
      if ((v28 & 0x80) == 0)
        goto LABEL_25;
      v22 += 7;
      v29 = v23++ >= 9;
      if (v29)
      {
        v24 = 0;
        v30 = *(unsigned __int8 *)(v3 + *v20);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v20) = 1;
LABEL_25:
    v30 = *(unsigned __int8 *)(v3 + *v20);
    if (*(_BYTE *)(v3 + *v20))
      v24 = 0;
LABEL_27:
    if (v30 || (v24 & 7) == 4)
    {
LABEL_114:
      v72 = 1;
      goto LABEL_115;
    }
    v32 = v24 >> 3;
    v33 = v77;
    if ((v76 & 1) == 0)
    {
      v34 = v18;
      do
      {
        v36 = *v34++;
        v35 = v36;
        v33 = v36 != 0;
        if (v36)
          v37 = v35 == (_DWORD)v32;
        else
          v37 = 1;
      }
      while (!v37);
    }
    switch((int)v32)
    {
      case 1:
        if ((v9 & 1) == 0)
          goto LABEL_90;
        v38 = 0;
        v39 = 0;
        v40 = 0;
        *(_WORD *)(a1 + 84) |= 1u;
        while (1)
        {
          v41 = *v19;
          v42 = *(_QWORD *)(v3 + v41);
          v43 = v42 + 1;
          if (v42 == -1 || v43 > *(_QWORD *)(v3 + *v7))
            break;
          v44 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v42);
          *(_QWORD *)(v3 + v41) = v43;
          v40 |= (unint64_t)(v44 & 0x7F) << v38;
          if ((v44 & 0x80) == 0)
            goto LABEL_93;
          v38 += 7;
          v29 = v39++ >= 9;
          if (v29)
          {
            v40 = 0;
            goto LABEL_95;
          }
        }
        *(_BYTE *)(v3 + *v20) = 1;
LABEL_93:
        if (*(_BYTE *)(v3 + *v20))
          v40 = 0;
LABEL_95:
        *(_QWORD *)(a1 + 32) = v40;
        goto LABEL_113;
      case 2:
        if ((v9 & 1) == 0)
          goto LABEL_90;
        v55 = 0;
        v56 = 0;
        v47 = 0;
        *(_WORD *)(a1 + 84) |= 4u;
        while (2)
        {
          v57 = *v19;
          v58 = *(_QWORD *)(v3 + v57);
          v59 = v58 + 1;
          if (v58 == -1 || v59 > *(_QWORD *)(v3 + *v7))
          {
            *(_BYTE *)(v3 + *v20) = 1;
          }
          else
          {
            v60 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v58);
            *(_QWORD *)(v3 + v57) = v59;
            v47 |= (unint64_t)(v60 & 0x7F) << v55;
            if (v60 < 0)
            {
              v55 += 7;
              v29 = v56++ >= 9;
              if (v29)
              {
                LODWORD(v47) = 0;
                goto LABEL_99;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v20))
          LODWORD(v47) = 0;
LABEL_99:
        v66 = 80;
        goto LABEL_112;
      case 3:
        if (!v33)
          goto LABEL_90;
        if ((*(_WORD *)(a1 + 84) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_133;
          v67 = *(_WORD *)(a1 + 84) << 11;
          goto LABEL_106;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_133;
        v61 = objc_alloc_init(GEOLatLng);
        if (!GEOLatLngReadAllFrom((uint64_t)v61, (void *)v3))
          goto LABEL_132;
        PBReaderRecallMark();
        v62 = 24;
        goto LABEL_85;
      case 4:
      case 5:
        goto LABEL_56;
      case 6:
        if (!v33 || (*(_WORD *)(a1 + 84) & 0x80) != 0)
          goto LABEL_90;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_133;
        v61 = objc_alloc_init(GEOPBTransitZoomRangeString);
        if (!GEOPBTransitZoomRangeStringReadAllFrom((uint64_t)v61, (void *)v3, v11 & 1))
          goto LABEL_132;
        PBReaderRecallMark();
        -[GEOPBTransitHall _addNoFlagsZoomName:](a1, v61);

        goto LABEL_107;
      case 7:
        if (!v33)
          goto LABEL_90;
        if ((*(_WORD *)(a1 + 84) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_133;
          v67 = *(_WORD *)(a1 + 84) << 9;
LABEL_106:
          v8 += v67 >> 15;
LABEL_107:
          v20 = (int *)MEMORY[0x1E0D82BC8];
          v7 = (int *)MEMORY[0x1E0D82BD8];
          goto LABEL_113;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_133;
        v61 = objc_alloc_init(GEOStyleAttributes);
        if (GEOStyleAttributesReadAllFrom((uint64_t)v61, (void *)v3))
        {
          PBReaderRecallMark();
          v62 = 48;
LABEL_85:
          v63 = *(void **)(a1 + v62);
          *(_QWORD *)(a1 + v62) = v61;
LABEL_89:

          --v8;
          goto LABEL_107;
        }
LABEL_132:

LABEL_133:
        v72 = 0;
        v73 = &OBJC_IVAR___GEOPDRelatedEntitySection__reader;
        v20 = (int *)MEMORY[0x1E0D82BC8];
LABEL_116:
        if ((v74 & 1) != 0)
LABEL_117:
          *(_WORD *)(a1 + v73[191]) |= 8u;
        if (v77 & 1 | ((v72 & 1) == 0))
        {
          *(_WORD *)(a1 + v73[191]) |= 0x10u;
          *(_WORD *)(a1 + v73[191]) |= 0x80u;
          *(_WORD *)(a1 + v73[191]) |= 0x40u;
          *(_WORD *)(a1 + v73[191]) |= 0x20u;
        }
        else if (v18)
        {
          while (1)
          {
            v68 = *v18++;
            v69 = 16;
            switch(v68)
            {
              case 0:
                goto LABEL_126;
              case 3:
                goto LABEL_125;
              case 6:
                v69 = 128;
                goto LABEL_125;
              case 7:
                v69 = 64;
                goto LABEL_125;
              case 8:
                v69 = 32;
LABEL_125:
                *(_WORD *)(a1 + v73[191]) |= v69;
                break;
              default:
                continue;
            }
          }
        }
LABEL_126:
        if (v72)
          v3 = *(_BYTE *)(v3 + *v20) == 0;
        else
          v3 = 0;
        if ((v77 & 1) != 0)
        {
          v70 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      case 8:
        if (!v33)
          goto LABEL_90;
        if ((*(_WORD *)(a1 + 84) & 0x20) == 0)
        {
          PBReaderReadString();
          v64 = objc_claimAutoreleasedReturnValue();
          v63 = *(void **)(a1 + 40);
          *(_QWORD *)(a1 + 40) = v64;
          goto LABEL_89;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_133;
        v67 = *(_WORD *)(a1 + 84) << 10;
        goto LABEL_106;
      default:
        if ((_DWORD)v32 == 2047)
        {
          if ((v9 & 1) != 0)
          {
            v45 = 0;
            v46 = 0;
            v47 = 0;
            *(_WORD *)(a1 + 84) |= 2u;
            while (1)
            {
              v48 = *v19;
              v49 = *(_QWORD *)(v3 + v48);
              v50 = v49 + 1;
              if (v49 == -1 || v50 > *(_QWORD *)(v3 + *v7))
                break;
              v51 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v49);
              *(_QWORD *)(v3 + v48) = v50;
              v47 |= (unint64_t)(v51 & 0x7F) << v45;
              if ((v51 & 0x80) == 0)
                goto LABEL_109;
              v45 += 7;
              v29 = v46++ >= 9;
              if (v29)
              {
                LODWORD(v47) = 0;
                goto LABEL_111;
              }
            }
            *(_BYTE *)(v3 + *v20) = 1;
LABEL_109:
            if (*(_BYTE *)(v3 + *v20))
              LODWORD(v47) = 0;
LABEL_111:
            v66 = 76;
LABEL_112:
            *(_DWORD *)(a1 + v66) = v47;
            goto LABEL_113;
          }
        }
        else
        {
LABEL_56:
          if ((v74 & 1) != 0 && (*(_WORD *)(a1 + 84) & 8) == 0)
          {
            if (!*(_QWORD *)(a1 + 16))
            {
              v52 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
              v53 = *(void **)(a1 + 16);
              *(_QWORD *)(a1 + 16) = v52;

            }
            v54 = PBUnknownFieldAdd();
            v20 = (int *)MEMORY[0x1E0D82BC8];
            v7 = (int *)MEMORY[0x1E0D82BD8];
            if (!v54)
            {
              v72 = 0;
              v73 = &OBJC_IVAR___GEOPDRelatedEntitySection__reader;
              goto LABEL_117;
            }
            goto LABEL_113;
          }
        }
LABEL_90:
        v65 = PBReaderSkipValueWithTag();
        v7 = (int *)MEMORY[0x1E0D82BD8];
        v20 = (int *)MEMORY[0x1E0D82BC8];
        if ((v65 & 1) == 0)
        {
          v72 = 0;
LABEL_115:
          v73 = &OBJC_IVAR___GEOPDRelatedEntitySection__reader;
          goto LABEL_116;
        }
LABEL_113:
        if (!(v75 & 1 | (v8 != 0)))
          goto LABEL_114;
        continue;
    }
  }
}

void sub_1892EF31C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892EF64C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892EF78C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892F0298(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPBTransitHallCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _BYTE v12[128];
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  objc_msgSend(a1[3], "readAll:", 1);
  v10 = 0u;
  v11 = 0u;
  v8 = 0u;
  v9 = 0u;
  v2 = a1[7];
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v9;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v9 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v8 + 1) + 8 * v6++), "readAll:", 1, (_QWORD)v8);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
    }
    while (v4);
  }

  return objc_msgSend(a1[6], "readAll:", 1);
}

unint64_t GEOPBTransitHallReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 68))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPBTransitHallReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 72));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 64) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 68) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPBTransitHallReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPBTransitHallReadAllFrom_initialTag;
  Specified = GEOPBTransitHallReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPBTransitHallCallReadAllRecursiveWithoutSynchronized((id *)a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return Specified;
}

void sub_1892F054C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPBTransitHallReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOPBTransitHallReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1892F05AC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPBTransitHallIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  int v32;
  _BOOL8 v33;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (!a1[*v4])
    {
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0)
            goto LABEL_62;
          v17 = 0;
          while (1)
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
              goto LABEL_45;
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if (v21 < 0)
            {
              v22 = v17++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_60;
          }
        case 2u:
          if ((v8 & 7) != 0)
            goto LABEL_62;
          v28 = 0;
          while (1)
          {
            v29 = *v2;
            v30 = *(_QWORD *)&a1[v29];
            v31 = v30 + 1;
            if (v30 == -1 || v31 > *(_QWORD *)&a1[*v3])
              goto LABEL_45;
            v32 = *(char *)(*(_QWORD *)&a1[*v5] + v30);
            *(_QWORD *)&a1[v29] = v31;
            if (v32 < 0)
            {
              v22 = v28++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_60;
          }
        case 3u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOLatLngIsValid(a1))
            goto LABEL_62;
          goto LABEL_57;
        case 4u:
        case 5u:
          goto LABEL_59;
        case 6u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPBTransitZoomRangeStringIsValid(a1))
            goto LABEL_62;
          goto LABEL_57;
        case 7u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOStyleAttributesIsValid(a1))
            goto LABEL_62;
LABEL_57:
          PBReaderRecallMark();
          goto LABEL_60;
        case 8u:
          if (v15 == 2)
            goto LABEL_59;
          goto LABEL_62;
        default:
          if ((v8 >> 3) == 2047)
          {
            if ((v8 & 7) != 0)
              goto LABEL_62;
            v23 = 0;
            while (1)
            {
              v24 = *v2;
              v25 = *(_QWORD *)&a1[v24];
              v26 = v25 + 1;
              if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
                break;
              v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
              *(_QWORD *)&a1[v24] = v26;
              if (v27 < 0)
              {
                v22 = v23++ > 8;
                if (!v22)
                  continue;
              }
              goto LABEL_60;
            }
LABEL_45:
            a1[*v4] = 1;
          }
          else
          {
LABEL_59:
            if ((PBReaderSkipValueWithTag() & 1) == 0)
            {
LABEL_62:
              PBReaderRecallMark();
              return 0;
            }
          }
LABEL_60:
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_61;
          break;
      }
    }
  }
LABEL_61:
  v33 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v33;
}

void sub_1892F0BF0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPBTransitHallIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  v2 = (*(_WORD *)(a1 + 84) & 0x1F0) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return v2;
}

void sub_1892F1170(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892F168C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892F1A68(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPBTransitIncidentReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint32x4_t v13;
  int8x16_t v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  char v20;
  unsigned __int8 v21;
  int *v22;
  int *v23;
  int *v24;
  int *v25;
  char v26;
  unsigned int v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  BOOL v33;
  int v34;
  unint64_t v36;
  BOOL v37;
  int *v38;
  int v39;
  int v40;
  BOOL v41;
  char v42;
  unsigned int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  char v48;
  char v49;
  unsigned int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  char v55;
  id v56;
  void *v57;
  int v58;
  char v59;
  unsigned int v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  char v64;
  char v65;
  unsigned int v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  char v70;
  char v71;
  unsigned int v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  char v76;
  char v77;
  unsigned int v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  char v82;
  char v83;
  unsigned int v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  char v88;
  GEOPBTransitIncidentEntity *v89;
  char v90;
  unsigned int v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  char v96;
  uint64_t v97;
  uint64_t v98;
  void *v99;
  char v100;
  uint64_t v101;
  int v102;
  int v103;
  int v104;
  void *v105;
  int v107;
  char v108;
  char v109;
  char v110;
  char v111;
  BOOL v112;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 104));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 100);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 96));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = *(_DWORD *)(a1 + 136);
  v13 = (uint32x4_t)vdupq_n_s32(v12);
  v14.i64[0] = 0x100000001;
  v14.i64[1] = 0x100000001;
  v15 = vaddvq_s32(vaddq_s32((int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v13, (uint32x4_t)xmmword_189CD9A70), v14), (int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v13, (uint32x4_t)xmmword_189CD9A80), v14)))+ ((v12 >> 8) & 1);
  while (2)
  {
    v16 = 1;
    v17 = 1;
    v18 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v15;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v17 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v19 = v15 > 5;
        v20 = v19 & ~(_BYTE)v11 | v9;
        v21 = v19 | v11;
        v108 = v20;
        v109 = v8;
        v110 = v21 | v20;
        if (((v21 | v8) & 1) != 0)
          v22 = 0;
        else
          v22 = a3;
        v111 = (v22 == 0) | v21;
        v112 = v21;
        v23 = (int *)MEMORY[0x1E0D82BF0];
        v24 = (int *)MEMORY[0x1E0D82BC8];
        v25 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v15;
LABEL_7:
        v16 = v9;
LABEL_8:
        v17 = v10;
        v18 = v11;
LABEL_10:
        ++v7;
        v9 = v16;
        v10 = v17;
        v11 = v18;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v23) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v24))
      goto LABEL_192;
    v26 = 0;
    v27 = 0;
    v28 = 0;
    while (1)
    {
      v29 = *v23;
      v30 = *(_QWORD *)(v3 + v29);
      v31 = v30 + 1;
      if (v30 == -1 || v31 > *(_QWORD *)(v3 + *v6))
        break;
      v32 = *(_BYTE *)(*(_QWORD *)(v3 + *v25) + v30);
      *(_QWORD *)(v3 + v29) = v31;
      v28 |= (unint64_t)(v32 & 0x7F) << v26;
      if ((v32 & 0x80) == 0)
        goto LABEL_25;
      v26 += 7;
      v33 = v27++ >= 9;
      if (v33)
      {
        v28 = 0;
        v34 = *(unsigned __int8 *)(v3 + *v24);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v24) = 1;
LABEL_25:
    v34 = *(unsigned __int8 *)(v3 + *v24);
    if (*(_BYTE *)(v3 + *v24))
      v28 = 0;
LABEL_27:
    if (v34 || (v28 & 7) == 4)
    {
LABEL_192:
      v107 = 1;
      goto LABEL_193;
    }
    v36 = v28 >> 3;
    v37 = v112;
    if ((v111 & 1) == 0)
    {
      v38 = v22;
      do
      {
        v40 = *v38++;
        v39 = v40;
        v37 = v40 != 0;
        if (v40)
          v41 = v39 == (_DWORD)v36;
        else
          v41 = 1;
      }
      while (!v41);
    }
    switch((int)v36)
    {
      case 1:
        if ((v109 & 1) == 0)
          goto LABEL_140;
        v42 = 0;
        v43 = 0;
        v44 = 0;
        *(_DWORD *)(a1 + 136) |= 1u;
        while (1)
        {
          v45 = *v23;
          v46 = *(_QWORD *)(v3 + v45);
          v47 = v46 + 1;
          if (v46 == -1 || v47 > *(_QWORD *)(v3 + *v6))
            break;
          v48 = *(_BYTE *)(*(_QWORD *)(v3 + *v25) + v46);
          *(_QWORD *)(v3 + v45) = v47;
          v44 |= (unint64_t)(v48 & 0x7F) << v42;
          if ((v48 & 0x80) == 0)
            goto LABEL_143;
          v42 += 7;
          v33 = v43++ >= 9;
          if (v33)
          {
            v44 = 0;
            goto LABEL_145;
          }
        }
        *(_BYTE *)(v3 + *v24) = 1;
LABEL_143:
        if (*(_BYTE *)(v3 + *v24))
          v44 = 0;
LABEL_145:
        *(_QWORD *)(a1 + 32) = v44;
        goto LABEL_191;
      case 2:
      case 3:
      case 4:
        goto LABEL_56;
      case 5:
        if ((v109 & 1) == 0)
          goto LABEL_140;
        v59 = 0;
        v60 = 0;
        v51 = 0;
        *(_DWORD *)(a1 + 136) |= 8u;
        while (2)
        {
          v61 = *v23;
          v62 = *(_QWORD *)(v3 + v61);
          v63 = v62 + 1;
          if (v62 == -1 || v63 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v24) = 1;
          }
          else
          {
            v64 = *(_BYTE *)(*(_QWORD *)(v3 + *v25) + v62);
            *(_QWORD *)(v3 + v61) = v63;
            v51 |= (unint64_t)(v64 & 0x7F) << v59;
            if (v64 < 0)
            {
              v59 += 7;
              v33 = v60++ >= 9;
              if (v33)
              {
                LODWORD(v51) = 0;
                goto LABEL_149;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v24))
          LODWORD(v51) = 0;
LABEL_149:
        v101 = 116;
        goto LABEL_190;
      case 6:
        if ((v109 & 1) == 0)
          goto LABEL_140;
        v65 = 0;
        v66 = 0;
        v51 = 0;
        *(_DWORD *)(a1 + 136) |= 0x20u;
        while (2)
        {
          v67 = *v23;
          v68 = *(_QWORD *)(v3 + v67);
          v69 = v68 + 1;
          if (v68 == -1 || v69 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v24) = 1;
          }
          else
          {
            v70 = *(_BYTE *)(*(_QWORD *)(v3 + *v25) + v68);
            *(_QWORD *)(v3 + v67) = v69;
            v51 |= (unint64_t)(v70 & 0x7F) << v65;
            if (v70 < 0)
            {
              v65 += 7;
              v33 = v66++ >= 9;
              if (v33)
              {
                LODWORD(v51) = 0;
                goto LABEL_153;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v24))
          LODWORD(v51) = 0;
LABEL_153:
        v101 = 124;
        goto LABEL_190;
      case 7:
        if ((v109 & 1) == 0)
          goto LABEL_140;
        v71 = 0;
        v72 = 0;
        v51 = 0;
        *(_DWORD *)(a1 + 136) |= 4u;
        while (2)
        {
          v73 = *v23;
          v74 = *(_QWORD *)(v3 + v73);
          v75 = v74 + 1;
          if (v74 == -1 || v75 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v24) = 1;
          }
          else
          {
            v76 = *(_BYTE *)(*(_QWORD *)(v3 + *v25) + v74);
            *(_QWORD *)(v3 + v73) = v75;
            v51 |= (unint64_t)(v76 & 0x7F) << v71;
            if (v76 < 0)
            {
              v71 += 7;
              v33 = v72++ >= 9;
              if (v33)
              {
                LODWORD(v51) = 0;
                goto LABEL_157;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v24))
          LODWORD(v51) = 0;
LABEL_157:
        v101 = 112;
        goto LABEL_190;
      case 8:
        if ((v109 & 1) == 0)
          goto LABEL_140;
        v77 = 0;
        v78 = 0;
        v51 = 0;
        *(_DWORD *)(a1 + 136) |= 2u;
        while (2)
        {
          v79 = *v23;
          v80 = *(_QWORD *)(v3 + v79);
          v81 = v80 + 1;
          if (v80 == -1 || v81 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v24) = 1;
          }
          else
          {
            v82 = *(_BYTE *)(*(_QWORD *)(v3 + *v25) + v80);
            *(_QWORD *)(v3 + v79) = v81;
            v51 |= (unint64_t)(v82 & 0x7F) << v77;
            if (v82 < 0)
            {
              v77 += 7;
              v33 = v78++ >= 9;
              if (v33)
              {
                LODWORD(v51) = 0;
                goto LABEL_161;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v24))
          LODWORD(v51) = 0;
LABEL_161:
        v101 = 108;
        goto LABEL_190;
      case 9:
        if ((v109 & 1) == 0)
          goto LABEL_140;
        v83 = 0;
        v84 = 0;
        v51 = 0;
        *(_DWORD *)(a1 + 136) |= 0x40u;
        while (2)
        {
          v85 = *v23;
          v86 = *(_QWORD *)(v3 + v85);
          v87 = v86 + 1;
          if (v86 == -1 || v87 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v24) = 1;
          }
          else
          {
            v88 = *(_BYTE *)(*(_QWORD *)(v3 + *v25) + v86);
            *(_QWORD *)(v3 + v85) = v87;
            v51 |= (unint64_t)(v88 & 0x7F) << v83;
            if (v88 < 0)
            {
              v83 += 7;
              v33 = v84++ >= 9;
              if (v33)
              {
                LODWORD(v51) = 0;
                goto LABEL_165;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v24))
          LODWORD(v51) = 0;
LABEL_165:
        v101 = 128;
        goto LABEL_190;
      case 10:
        if (!v37 || (*(_BYTE *)(a1 + 137) & 2) != 0)
          goto LABEL_140;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_214;
        v89 = objc_alloc_init(GEOPBTransitIncidentEntity);
        if (!GEOPBTransitIncidentEntityReadAllFrom((uint64_t)v89, (void *)v3))
          goto LABEL_213;
        PBReaderRecallMark();
        -[GEOPBTransitIncident _addNoFlagsAffectedEntity:](a1, v89);

        goto LABEL_185;
      case 11:
        if ((v109 & 1) == 0)
          goto LABEL_140;
        v90 = 0;
        v91 = 0;
        v92 = 0;
        *(_DWORD *)(a1 + 136) |= 0x80u;
        while (2)
        {
          v93 = *v23;
          v94 = *(_QWORD *)(v3 + v93);
          v95 = v94 + 1;
          if (v94 == -1 || v95 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v24) = 1;
          }
          else
          {
            v96 = *(_BYTE *)(*(_QWORD *)(v3 + *v25) + v94);
            *(_QWORD *)(v3 + v93) = v95;
            v92 |= (unint64_t)(v96 & 0x7F) << v90;
            if (v96 < 0)
            {
              v90 += 7;
              v33 = v91++ >= 9;
              if (v33)
              {
                v92 = 0;
                goto LABEL_169;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v24))
          v92 = 0;
LABEL_169:
        *(_BYTE *)(a1 + 132) = v92 != 0;
        goto LABEL_191;
      case 12:
        if (!v37)
          goto LABEL_140;
        if ((*(_BYTE *)(a1 + 137) & 8) == 0)
        {
          PBReaderReadString();
          v97 = objc_claimAutoreleasedReturnValue();
          v98 = 48;
          goto LABEL_133;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_214;
        v102 = (int)(*(_DWORD *)(a1 + 136) << 20) >> 31;
        goto LABEL_184;
      case 13:
        if (!v37)
          goto LABEL_140;
        if ((*(_BYTE *)(a1 + 137) & 0x80) == 0)
        {
          PBReaderReadString();
          v97 = objc_claimAutoreleasedReturnValue();
          v98 = 80;
          goto LABEL_133;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_214;
        v102 = (int)(*(_DWORD *)(a1 + 136) << 16) >> 31;
        goto LABEL_184;
      case 14:
        if (!v37)
          goto LABEL_140;
        if ((*(_BYTE *)(a1 + 138) & 1) == 0)
        {
          PBReaderReadString();
          v97 = objc_claimAutoreleasedReturnValue();
          v98 = 88;
          goto LABEL_133;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_214;
        v102 = (int)(*(_DWORD *)(a1 + 136) << 15) >> 31;
        goto LABEL_184;
      case 15:
        if (!v37)
          goto LABEL_140;
        if ((*(_BYTE *)(a1 + 137) & 0x40) == 0)
        {
          PBReaderReadString();
          v97 = objc_claimAutoreleasedReturnValue();
          v98 = 72;
          goto LABEL_133;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_214;
        v102 = (int)(*(_DWORD *)(a1 + 136) << 17) >> 31;
        goto LABEL_184;
      case 16:
        if (!v37)
          goto LABEL_140;
        if ((*(_BYTE *)(a1 + 137) & 0x10) == 0)
        {
          PBReaderReadString();
          v97 = objc_claimAutoreleasedReturnValue();
          v98 = 56;
          goto LABEL_133;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_214;
        v102 = (int)(*(_DWORD *)(a1 + 136) << 19) >> 31;
        goto LABEL_184;
      case 17:
        if (!v37)
          goto LABEL_140;
        if ((*(_BYTE *)(a1 + 137) & 0x20) == 0)
        {
          PBReaderReadString();
          v97 = objc_claimAutoreleasedReturnValue();
          v98 = 64;
LABEL_133:
          v99 = *(void **)(a1 + v98);
          *(_QWORD *)(a1 + v98) = v97;
          goto LABEL_134;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_214;
        v102 = (int)(*(_DWORD *)(a1 + 136) << 18) >> 31;
        goto LABEL_184;
      case 18:
        if (!v37)
          goto LABEL_140;
        if ((*(_BYTE *)(a1 + 137) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_214;
          v102 = (int)(*(_DWORD *)(a1 + 136) << 21) >> 31;
LABEL_184:
          v7 += v102;
          goto LABEL_185;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_214;
        v89 = objc_alloc_init(GEOPBTransitArtwork);
        if (GEOPBTransitArtworkReadAllFrom((uint64_t)v89, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          v99 = *(void **)(a1 + 40);
          *(_QWORD *)(a1 + 40) = v89;
LABEL_134:

          --v7;
LABEL_185:
          v24 = (int *)MEMORY[0x1E0D82BC8];
          v25 = (int *)MEMORY[0x1E0D82BB8];
LABEL_191:
          if (!(v110 & 1 | (v7 != 0)))
            goto LABEL_192;
          continue;
        }
LABEL_213:

LABEL_214:
        v107 = 0;
        v24 = (int *)MEMORY[0x1E0D82BC8];
LABEL_193:
        if ((v108 & 1) != 0)
LABEL_194:
          *(_DWORD *)(a1 + 136) |= 0x100u;
        if (v112 || (v107 & 1) == 0)
        {
          *(_DWORD *)(a1 + 136) |= 0x200u;
          *(_DWORD *)(a1 + 136) |= 0x800u;
          *(_DWORD *)(a1 + 136) |= 0x8000u;
          *(_DWORD *)(a1 + 136) |= 0x10000u;
          *(_DWORD *)(a1 + 136) |= 0x4000u;
          *(_DWORD *)(a1 + 136) |= 0x1000u;
          *(_DWORD *)(a1 + 136) |= 0x2000u;
          *(_DWORD *)(a1 + 136) |= 0x400u;
        }
        else if (v22)
        {
          while (1)
          {
            v103 = *v22++;
            v104 = 512;
            switch(v103)
            {
              case 0:
                goto LABEL_207;
              case 10:
                goto LABEL_206;
              case 12:
                v104 = 2048;
                goto LABEL_206;
              case 13:
                v104 = 0x8000;
                goto LABEL_206;
              case 14:
                v104 = 0x10000;
                goto LABEL_206;
              case 15:
                v104 = 0x4000;
                goto LABEL_206;
              case 16:
                v104 = 4096;
                goto LABEL_206;
              case 17:
                v104 = 0x2000;
                goto LABEL_206;
              case 18:
                v104 = 1024;
LABEL_206:
                *(_DWORD *)(a1 + 136) |= v104;
                break;
              default:
                continue;
            }
          }
        }
LABEL_207:
        if (v107)
          v3 = *(_BYTE *)(v3 + *v24) == 0;
        else
          v3 = 0;
        if (v112)
        {
          v105 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      default:
        if ((_DWORD)v36 == 2047)
        {
          if ((v109 & 1) != 0)
          {
            v49 = 0;
            v50 = 0;
            v51 = 0;
            *(_DWORD *)(a1 + 136) |= 0x10u;
            while (1)
            {
              v52 = *v23;
              v53 = *(_QWORD *)(v3 + v52);
              v54 = v53 + 1;
              if (v53 == -1 || v54 > *(_QWORD *)(v3 + *v6))
                break;
              v55 = *(_BYTE *)(*(_QWORD *)(v3 + *v25) + v53);
              *(_QWORD *)(v3 + v52) = v54;
              v51 |= (unint64_t)(v55 & 0x7F) << v49;
              if ((v55 & 0x80) == 0)
                goto LABEL_187;
              v49 += 7;
              v33 = v50++ >= 9;
              if (v33)
              {
                LODWORD(v51) = 0;
                goto LABEL_189;
              }
            }
            *(_BYTE *)(v3 + *v24) = 1;
LABEL_187:
            if (*(_BYTE *)(v3 + *v24))
              LODWORD(v51) = 0;
LABEL_189:
            v101 = 120;
LABEL_190:
            *(_DWORD *)(a1 + v101) = v51;
            goto LABEL_191;
          }
LABEL_140:
          v100 = PBReaderSkipValueWithTag();
          v25 = (int *)MEMORY[0x1E0D82BB8];
          v24 = (int *)MEMORY[0x1E0D82BC8];
          if ((v100 & 1) == 0)
          {
            v107 = 0;
            goto LABEL_193;
          }
          goto LABEL_191;
        }
LABEL_56:
        if ((v108 & 1) == 0 || (*(_BYTE *)(a1 + 137) & 1) != 0)
          goto LABEL_140;
        if (!*(_QWORD *)(a1 + 16))
        {
          v56 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
          v57 = *(void **)(a1 + 16);
          *(_QWORD *)(a1 + 16) = v56;

        }
        v58 = PBUnknownFieldAdd();
        v24 = (int *)MEMORY[0x1E0D82BC8];
        v25 = (int *)MEMORY[0x1E0D82BB8];
        if (!v58)
        {
          v107 = 0;
          goto LABEL_194;
        }
        goto LABEL_191;
    }
  }
}

void sub_1892F2AE8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892F2C44(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892F2DA0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892F2EFC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892F2FE8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892F30D4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892F31C0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892F3A6C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPBTransitIncidentCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _BYTE v11[128];
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  v7 = 0u;
  v8 = 0u;
  v9 = 0u;
  v10 = 0u;
  v2 = *(id *)(a1 + 24);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v8;
    while (1)
    {
      if (*(_QWORD *)v8 != v5)
        objc_enumerationMutation(v2);
      if (!--v4)
      {
        v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
        if (!v4)
          break;
      }
    }
  }

  return objc_msgSend(*(id *)(a1 + 40), "readAll:", 1, v7);
}

unint64_t GEOPBTransitIncidentReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 100))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPBTransitIncidentReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 104));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 96) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 100) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPBTransitIncidentReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPBTransitIncidentReadAllFrom_initialTag;
  Specified = GEOPBTransitIncidentReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPBTransitIncidentCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 104));
  return Specified;
}

void sub_1892F498C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPBTransitIncidentIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  BOOL v13;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  int v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  int v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  int v42;
  unsigned int v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  int v47;
  unsigned int v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  int v52;
  char v53;
  unsigned int v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  char v59;
  int v60;
  int v61;
  unsigned int v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  int v67;
  char v68;
  unsigned int v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  char v74;
  int v75;
  int v76;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  int v81;
  unsigned int v82;
  unsigned int v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  int v87;
  int v88;
  unsigned int v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  int v93;
  int v94;
  _BOOL8 v95;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] >= *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
LABEL_181:
    v95 = a1[*v4] == 0;
    PBReaderRecallMark();
    return v95;
  }
  v5 = (int *)MEMORY[0x1E0D82BB8];
  while (2)
  {
    if (a1[*v4])
      goto LABEL_181;
    v6 = 0;
    v7 = 0;
    v8 = 0;
    while (1)
    {
      v9 = *v2;
      v10 = *(_QWORD *)&a1[v9];
      v11 = v10 + 1;
      if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
        break;
      v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
      *(_QWORD *)&a1[v9] = v11;
      v8 |= (unint64_t)(v12 & 0x7F) << v6;
      if ((v12 & 0x80) == 0)
        goto LABEL_12;
      v6 += 7;
      v13 = v7++ >= 9;
      if (v13)
      {
        v8 = 0;
        v14 = a1[*v4];
        goto LABEL_14;
      }
    }
    a1[*v4] = 1;
LABEL_12:
    v14 = a1[*v4];
    if (a1[*v4])
      v8 = 0;
LABEL_14:
    v15 = v8 & 7;
    if (v14 || v15 == 4)
      goto LABEL_181;
    switch((v8 >> 3))
    {
      case 1u:
        if ((v8 & 7) != 0)
          goto LABEL_185;
        v17 = 0;
        while (1)
        {
          v18 = *v2;
          v19 = *(_QWORD *)&a1[v18];
          v20 = v19 + 1;
          if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
            goto LABEL_160;
          v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
          *(_QWORD *)&a1[v18] = v20;
          if (v21 < 0)
          {
            v22 = v17++ > 8;
            if (!v22)
              continue;
          }
          goto LABEL_173;
        }
      case 2u:
      case 3u:
      case 4u:
        goto LABEL_172;
      case 5u:
        if ((v8 & 7) != 0)
          goto LABEL_185;
        v28 = 0;
        while (1)
        {
          v29 = *v2;
          v30 = *(_QWORD *)&a1[v29];
          v31 = v30 + 1;
          if (v30 == -1 || v31 > *(_QWORD *)&a1[*v3])
            goto LABEL_160;
          v32 = *(char *)(*(_QWORD *)&a1[*v5] + v30);
          *(_QWORD *)&a1[v29] = v31;
          if (v32 < 0)
          {
            v22 = v28++ > 8;
            if (!v22)
              continue;
          }
          goto LABEL_173;
        }
      case 6u:
        if ((v8 & 7) != 0)
          goto LABEL_185;
        v33 = 0;
        while (1)
        {
          v34 = *v2;
          v35 = *(_QWORD *)&a1[v34];
          v36 = v35 + 1;
          if (v35 == -1 || v36 > *(_QWORD *)&a1[*v3])
            goto LABEL_160;
          v37 = *(char *)(*(_QWORD *)&a1[*v5] + v35);
          *(_QWORD *)&a1[v34] = v36;
          if (v37 < 0)
          {
            v22 = v33++ > 8;
            if (!v22)
              continue;
          }
          goto LABEL_173;
        }
      case 7u:
        if ((v8 & 7) != 0)
          goto LABEL_185;
        v38 = 0;
        while (1)
        {
          v39 = *v2;
          v40 = *(_QWORD *)&a1[v39];
          v41 = v40 + 1;
          if (v40 == -1 || v41 > *(_QWORD *)&a1[*v3])
            goto LABEL_160;
          v42 = *(char *)(*(_QWORD *)&a1[*v5] + v40);
          *(_QWORD *)&a1[v39] = v41;
          if (v42 < 0)
          {
            v22 = v38++ > 8;
            if (!v22)
              continue;
          }
          goto LABEL_173;
        }
      case 8u:
        if ((v8 & 7) != 0)
          goto LABEL_185;
        v43 = 0;
        while (1)
        {
          v44 = *v2;
          v45 = *(_QWORD *)&a1[v44];
          v46 = v45 + 1;
          if (v45 == -1 || v46 > *(_QWORD *)&a1[*v3])
            goto LABEL_160;
          v47 = *(char *)(*(_QWORD *)&a1[*v5] + v45);
          *(_QWORD *)&a1[v44] = v46;
          if (v47 < 0)
          {
            v22 = v43++ > 8;
            if (!v22)
              continue;
          }
          goto LABEL_173;
        }
      case 9u:
        if ((v8 & 7) != 0)
          goto LABEL_185;
        v48 = 0;
        while (1)
        {
          v49 = *v2;
          v50 = *(_QWORD *)&a1[v49];
          v51 = v50 + 1;
          if (v50 == -1 || v51 > *(_QWORD *)&a1[*v3])
            goto LABEL_160;
          v52 = *(char *)(*(_QWORD *)&a1[*v5] + v50);
          *(_QWORD *)&a1[v49] = v51;
          if (v52 < 0)
          {
            v22 = v48++ > 8;
            if (!v22)
              continue;
          }
          goto LABEL_173;
        }
      case 0xAu:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_185;
        objc_msgSend(a1, "position", 0, 0);
        objc_msgSend(a1, "length");
LABEL_80:
        if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3] || a1[*v4])
          goto LABEL_179;
        v53 = 0;
        v54 = 0;
        v55 = 0;
        while (1)
        {
          v56 = *v2;
          v57 = *(_QWORD *)&a1[v56];
          v58 = v57 + 1;
          if (v57 == -1 || v58 > *(_QWORD *)&a1[*v3])
            break;
          v59 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v57);
          *(_QWORD *)&a1[v56] = v58;
          v55 |= (unint64_t)(v59 & 0x7F) << v53;
          if ((v59 & 0x80) == 0)
            goto LABEL_90;
          v53 += 7;
          v13 = v54++ >= 9;
          if (v13)
          {
            v55 = 0;
            v60 = a1[*v4];
            goto LABEL_92;
          }
        }
        a1[*v4] = 1;
LABEL_90:
        v60 = a1[*v4];
        if (a1[*v4])
          v55 = 0;
LABEL_92:
        v61 = v55 & 7;
        if (v60 || v61 == 4)
        {
LABEL_179:
          v94 = a1[*v4];
          PBReaderRecallMark();
          if (v94)
            goto LABEL_185;
LABEL_180:
          PBReaderRecallMark();
LABEL_173:
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_181;
          continue;
        }
        if ((v55 >> 3) == 3)
        {
          if (v61 == 2 && PBReaderPlaceMark())
          {
            objc_msgSend(a1, "position");
            objc_msgSend(a1, "length");
LABEL_109:
            while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3] && !a1[*v4])
            {
              v68 = 0;
              v69 = 0;
              v70 = 0;
              while (1)
              {
                v71 = *v2;
                v72 = *(_QWORD *)&a1[v71];
                v73 = v72 + 1;
                if (v72 == -1 || v73 > *(_QWORD *)&a1[*v3])
                  break;
                v74 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v72);
                *(_QWORD *)&a1[v71] = v73;
                v70 |= (unint64_t)(v74 & 0x7F) << v68;
                if ((v74 & 0x80) == 0)
                  goto LABEL_119;
                v68 += 7;
                v13 = v69++ >= 9;
                if (v13)
                {
                  v70 = 0;
                  v75 = a1[*v4];
                  goto LABEL_121;
                }
              }
              a1[*v4] = 1;
LABEL_119:
              v75 = a1[*v4];
              if (a1[*v4])
                v70 = 0;
LABEL_121:
              v76 = v70 & 7;
              if (v75 || v76 == 4)
                break;
              if ((v70 >> 3) == 1)
              {
                if (v76 == 2)
                {
                  if (!PBReaderPlaceMark())
                  {
LABEL_183:
                    PBReaderRecallMark();
                    goto LABEL_184;
                  }
LABEL_136:
                  while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
                  {
                    v83 = a1[*v4];
                    if (a1[*v4])
                      break;
                    while (1)
                    {
                      v84 = *v2;
                      v85 = *(_QWORD *)&a1[v84];
                      v86 = v85 + 1;
                      if (v85 == -1 || v86 > *(_QWORD *)&a1[*v3])
                        break;
                      v87 = *(char *)(*(_QWORD *)&a1[*v5] + v85);
                      *(_QWORD *)&a1[v84] = v86;
                      if (v87 < 0)
                      {
                        v13 = v83++ >= 9;
                        if (!v13)
                          continue;
                      }
                      goto LABEL_136;
                    }
                    a1[*v4] = 1;
                  }
                  PBReaderRecallMark();
                }
                else
                {
                  if ((v70 & 7) != 0)
                    goto LABEL_183;
                  while (1)
                  {
                    v78 = *v2;
                    v79 = *(_QWORD *)&a1[v78];
                    v80 = v79 + 1;
                    if (v79 == -1 || v80 > *(_QWORD *)&a1[*v3])
                      break;
                    v81 = *(char *)(*(_QWORD *)&a1[*v5] + v79);
                    *(_QWORD *)&a1[v78] = v80;
                    if (v81 < 0)
                    {
                      v82 = v76++;
                      if (v82 <= 8)
                        continue;
                    }
                    goto LABEL_109;
                  }
                  a1[*v4] = 1;
                }
              }
              else if ((PBReaderSkipValueWithTag() & 1) == 0)
              {
                goto LABEL_183;
              }
            }
            v88 = a1[*v4];
            PBReaderRecallMark();
            if (!v88)
            {
              PBReaderRecallMark();
              goto LABEL_80;
            }
          }
        }
        else
        {
          if ((v55 >> 3) != 1)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0)
              goto LABEL_184;
            goto LABEL_80;
          }
          if ((v55 & 7) == 0)
          {
            v63 = 0;
            do
            {
              v64 = *v2;
              v65 = *(_QWORD *)&a1[v64];
              v66 = v65 + 1;
              if (v65 == -1 || v66 > *(_QWORD *)&a1[*v3])
              {
                a1[*v4] = 1;
                goto LABEL_80;
              }
              v67 = *(char *)(*(_QWORD *)&a1[*v5] + v65);
              *(_QWORD *)&a1[v64] = v66;
              if ((v67 & 0x80000000) == 0)
                break;
              v22 = v63++ > 8;
            }
            while (!v22);
            goto LABEL_80;
          }
        }
LABEL_184:
        PBReaderRecallMark();
LABEL_185:
        PBReaderRecallMark();
        return 0;
      case 0xBu:
        if ((v8 & 7) != 0)
          goto LABEL_185;
        v89 = 0;
        while (1)
        {
          v90 = *v2;
          v91 = *(_QWORD *)&a1[v90];
          v92 = v91 + 1;
          if (v91 == -1 || v92 > *(_QWORD *)&a1[*v3])
            goto LABEL_160;
          v93 = *(char *)(*(_QWORD *)&a1[*v5] + v91);
          *(_QWORD *)&a1[v90] = v92;
          if (v93 < 0)
          {
            v22 = v89++ > 8;
            if (!v22)
              continue;
          }
          goto LABEL_173;
        }
      case 0xCu:
        if (v15 == 2)
          goto LABEL_172;
        goto LABEL_185;
      case 0xDu:
        if (v15 == 2)
          goto LABEL_172;
        goto LABEL_185;
      case 0xEu:
        if (v15 == 2)
          goto LABEL_172;
        goto LABEL_185;
      case 0xFu:
        if (v15 == 2)
          goto LABEL_172;
        goto LABEL_185;
      case 0x10u:
        if (v15 == 2)
          goto LABEL_172;
        goto LABEL_185;
      case 0x11u:
        if (v15 == 2)
          goto LABEL_172;
        goto LABEL_185;
      case 0x12u:
        if (v15 == 2 && PBReaderPlaceMark() && GEOPBTransitArtworkIsValid(a1))
          goto LABEL_180;
        goto LABEL_185;
      default:
        if ((v8 >> 3) == 2047)
        {
          if ((v8 & 7) != 0)
            goto LABEL_185;
          v23 = 0;
          while (1)
          {
            v24 = *v2;
            v25 = *(_QWORD *)&a1[v24];
            v26 = v25 + 1;
            if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
              break;
            v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
            *(_QWORD *)&a1[v24] = v26;
            if (v27 < 0)
            {
              v22 = v23++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_173;
          }
LABEL_160:
          a1[*v4] = 1;
        }
        else
        {
LABEL_172:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_185;
        }
        goto LABEL_173;
    }
  }
}

void sub_1892F5654(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

os_unfair_lock_s *_GEOPBTransitIncidentIsDirty(uint64_t a1)
{
  int v2;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 104));
  v2 = *(_DWORD *)(a1 + 136);
  if ((v2 & 0x3FA00) != 0)
    return (os_unfair_lock_s *)1;
  if ((v2 & 0x400) != 0)
    return GEOPBTransitArtworkIsDirty(*(os_unfair_lock_s **)(a1 + 40));
  return 0;
}

os_unfair_lock_s *GEOPBTransitIncidentIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  os_unfair_lock_s *v2;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    v2 = _GEOPBTransitIncidentIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 26);
    return v2;
  }
  return result;
}

void sub_1892F5B78(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPBTransitIncidentEntityReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  GEOPBTransitIncidentEntityFilter *v25;
  void *v26;
  id v27;
  void *v28;
  _BOOL8 v29;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 3)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_42;
          v25 = objc_alloc_init(GEOPBTransitIncidentEntityFilter);
          if (!GEOPBTransitIncidentEntityFilterReadAllFrom((uint64_t)v25, v3))
          {

            goto LABEL_42;
          }
          PBReaderRecallMark();
          v26 = *(void **)(a1 + 24);
          *(_QWORD *)(a1 + 24) = v25;

        }
        else if ((v10 >> 3) == 1)
        {
          v18 = 0;
          v19 = 0;
          v20 = 0;
          *(_BYTE *)(a1 + 32) |= 1u;
          while (1)
          {
            v21 = *v4;
            v22 = *(_QWORD *)&v3[v21];
            v23 = v22 + 1;
            if (v22 == -1 || v23 > *(_QWORD *)&v3[*v5])
              break;
            v24 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v22);
            *(_QWORD *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0)
              goto LABEL_36;
            v18 += 7;
            v15 = v19++ >= 9;
            if (v15)
            {
              v20 = 0;
              goto LABEL_38;
            }
          }
          v3[*v6] = 1;
LABEL_36:
          if (v3[*v6])
            v20 = 0;
LABEL_38:
          *(_QWORD *)(a1 + 16) = v20;
        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v27 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v28 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v27;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_42;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v29 = v3[*v6] == 0;
  }
  else
  {
LABEL_42:
    v29 = 0;
  }
  objc_sync_exit(v3);

  return v29;
}

void sub_1892F694C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPBTransitIncidentEntityFilterReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  int v17;
  char v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  id v26;
  void *v27;
  char v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  _BOOL8 v35;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        v17 = v10 & 7;
        if (v16 || v17 == 4)
          break;
        if ((v10 >> 3) == 1)
        {
          if (v17 == 2)
          {
            if (!PBReaderPlaceMark())
              goto LABEL_49;
            while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5] && !v3[*v6])
            {
              v19 = 0;
              v20 = 0;
              v21 = 0;
              while (1)
              {
                v22 = *v4;
                v23 = *(_QWORD *)&v3[v22];
                v24 = v23 + 1;
                if (v23 == -1 || v24 > *(_QWORD *)&v3[*v5])
                  break;
                v25 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v23);
                *(_QWORD *)&v3[v22] = v24;
                v21 |= (unint64_t)(v25 & 0x7F) << v19;
                if (v25 < 0)
                {
                  v19 += 7;
                  v15 = v20++ >= 9;
                  if (!v15)
                    continue;
                }
                goto LABEL_32;
              }
              v3[*v6] = 1;
LABEL_32:
              PBRepeatedUInt64Add();
            }
            PBReaderRecallMark();
          }
          else
          {
            v28 = 0;
            v29 = 0;
            v30 = 0;
            while (1)
            {
              v31 = *v4;
              v32 = *(_QWORD *)&v3[v31];
              v33 = v32 + 1;
              if (v32 == -1 || v33 > *(_QWORD *)&v3[*v5])
                break;
              v34 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v32);
              *(_QWORD *)&v3[v31] = v33;
              v30 |= (unint64_t)(v34 & 0x7F) << v28;
              if (v34 < 0)
              {
                v28 += 7;
                v15 = v29++ >= 9;
                if (!v15)
                  continue;
              }
              goto LABEL_46;
            }
            v3[*v6] = 1;
LABEL_46:
            PBRepeatedUInt64Add();
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v26 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v27 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v26;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_49;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v35 = v3[*v6] == 0;
  }
  else
  {
LABEL_49:
    v35 = 0;
  }
  objc_sync_exit(v3);

  return v35;
}

void sub_1892F72F8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892F76AC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEOPBTransitLineReadSpecified(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint32x4_t v13;
  int8x16_t v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  char v20;
  unsigned __int8 v21;
  int *v22;
  int *v23;
  int *v24;
  int *v25;
  char v26;
  unsigned int v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  BOOL v33;
  int v34;
  unint64_t v36;
  BOOL v37;
  int *v38;
  int v39;
  int v40;
  BOOL v41;
  GEOPBTransitArtwork *v42;
  uint64_t v43;
  char v44;
  unsigned int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  char v50;
  id v51;
  void *v52;
  int v53;
  char v54;
  unsigned int v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  char v60;
  char v61;
  unsigned int v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  char v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  unsigned int v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  char v74;
  char v75;
  unsigned int v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  char v80;
  char v81;
  unsigned int v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  char v86;
  void *v87;
  char v88;
  unsigned int v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  char v93;
  char v94;
  uint64_t v95;
  int v96;
  int v97;
  int v98;
  int v99;
  void *v100;
  int v102;
  int *v103;
  char v104;
  char v105;
  char v106;
  BOOL v107;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 128));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 124);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 120));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = *(_DWORD *)(a1 + 156);
  v13 = (uint32x4_t)vdupq_n_s32(v12);
  v14.i64[0] = 0x100000001;
  v14.i64[1] = 0x100000001;
  v15 = vaddvq_s32(vaddq_s32((int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v13, (uint32x4_t)xmmword_189CD9A90), v14), (int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v13, (uint32x4_t)xmmword_189CD9AA0), v14)))+ ((v12 >> 15) & 1)+ ((v12 >> 7) & 1);
  while (2)
  {
    v16 = 1;
    v17 = 1;
    v18 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v15;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v17 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v19 = v15 > 6;
        v20 = v19 & ~(_BYTE)v11 | v9;
        v21 = v19 | v11;
        v104 = v20;
        v105 = v21 | v20;
        if (((v21 | v8) & 1) != 0)
          v22 = 0;
        else
          v22 = a3;
        v106 = (v22 == 0) | v21;
        v107 = v21;
        v23 = (int *)MEMORY[0x1E0D82BF0];
        v24 = (int *)MEMORY[0x1E0D82BC8];
        v25 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v15;
LABEL_7:
        v16 = v9;
LABEL_8:
        v17 = v10;
        v18 = v11;
LABEL_10:
        ++v7;
        v9 = v16;
        v10 = v17;
        v11 = v18;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v23) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v24))
      goto LABEL_196;
    v26 = 0;
    v27 = 0;
    v28 = 0;
    while (1)
    {
      v29 = *v23;
      v30 = *(_QWORD *)(v3 + v29);
      v31 = v30 + 1;
      if (v30 == -1 || v31 > *(_QWORD *)(v3 + *v6))
        break;
      v32 = *(_BYTE *)(*(_QWORD *)(v3 + *v25) + v30);
      *(_QWORD *)(v3 + v29) = v31;
      v28 |= (unint64_t)(v32 & 0x7F) << v26;
      if ((v32 & 0x80) == 0)
        goto LABEL_25;
      v26 += 7;
      v33 = v27++ >= 9;
      if (v33)
      {
        v28 = 0;
        v34 = *(unsigned __int8 *)(v3 + *v24);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v24) = 1;
LABEL_25:
    v34 = *(unsigned __int8 *)(v3 + *v24);
    if (*(_BYTE *)(v3 + *v24))
      v28 = 0;
LABEL_27:
    if (v34 || (v28 & 7) == 4)
    {
LABEL_196:
      v102 = 1;
      goto LABEL_197;
    }
    v36 = v28 >> 3;
    v37 = v107;
    if ((v106 & 1) == 0)
    {
      v38 = v22;
      do
      {
        v40 = *v38++;
        v39 = v40;
        v37 = v40 != 0;
        if (v40)
          v41 = v39 == (_DWORD)v36;
        else
          v41 = 1;
      }
      while (!v41);
    }
    switch((int)v36)
    {
      case 3:
        if (!v37)
          goto LABEL_146;
        if ((*(_BYTE *)(a1 + 157) & 4) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_225;
          v42 = objc_alloc_init(GEOPBTransitArtwork);
          if (GEOPBTransitArtworkReadAllFrom((uint64_t)v42, (void *)v3, v10 & 1))
          {
            PBReaderRecallMark();
            v43 = 56;
            goto LABEL_144;
          }
          goto LABEL_224;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_225;
        v96 = (int)(*(_DWORD *)(a1 + 156) << 21) >> 31;
        goto LABEL_188;
      case 4:
        if (!v37)
          goto LABEL_146;
        if ((*(_BYTE *)(a1 + 157) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_225;
          v96 = (int)(*(_DWORD *)(a1 + 156) << 17) >> 31;
          goto LABEL_188;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_225;
        v42 = objc_alloc_init(GEOPBTransitArtwork);
        if (!GEOPBTransitArtworkReadAllFrom((uint64_t)v42, (void *)v3, v10 & 1))
          goto LABEL_224;
        PBReaderRecallMark();
        v43 = 88;
        goto LABEL_144;
      case 5:
      case 6:
      case 8:
      case 9:
      case 12:
      case 13:
      case 14:
      case 17:
      case 19:
      case 20:
      case 21:
      case 22:
      case 23:
      case 24:
        goto LABEL_53;
      case 7:
        if ((v8 & 1) == 0)
          goto LABEL_146;
        v54 = 0;
        v55 = 0;
        v56 = 0;
        *(_DWORD *)(a1 + 156) |= 1u;
        while (2)
        {
          v57 = *v23;
          v58 = *(_QWORD *)(v3 + v57);
          v59 = v58 + 1;
          if (v58 == -1 || v59 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v24) = 1;
          }
          else
          {
            v60 = *(_BYTE *)(*(_QWORD *)(v3 + *v25) + v58);
            *(_QWORD *)(v3 + v57) = v59;
            v56 |= (unint64_t)(v60 & 0x7F) << v54;
            if (v60 < 0)
            {
              v54 += 7;
              v33 = v55++ >= 9;
              if (v33)
              {
                v56 = 0;
                goto LABEL_151;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v24))
          v56 = 0;
LABEL_151:
        *(_QWORD *)(a1 + 96) = v56;
        goto LABEL_195;
      case 10:
        if ((v8 & 1) == 0)
          goto LABEL_146;
        v61 = 0;
        v62 = 0;
        v46 = 0;
        *(_DWORD *)(a1 + 156) |= 2u;
        while (2)
        {
          v63 = *v23;
          v64 = *(_QWORD *)(v3 + v63);
          v65 = v64 + 1;
          if (v64 == -1 || v65 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v24) = 1;
          }
          else
          {
            v66 = *(_BYTE *)(*(_QWORD *)(v3 + *v25) + v64);
            *(_QWORD *)(v3 + v63) = v65;
            v46 |= (unint64_t)(v66 & 0x7F) << v61;
            if (v66 < 0)
            {
              v61 += 7;
              v33 = v62++ >= 9;
              if (v33)
              {
                LODWORD(v46) = 0;
                goto LABEL_155;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v24))
          LODWORD(v46) = 0;
LABEL_155:
        v95 = 132;
        goto LABEL_194;
      case 11:
        if (!v37)
          goto LABEL_146;
        if ((*(_BYTE *)(a1 + 157) & 0x20) == 0)
        {
          PBReaderReadString();
          v67 = objc_claimAutoreleasedReturnValue();
          v68 = 80;
          goto LABEL_125;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_225;
        v96 = (int)(*(_DWORD *)(a1 + 156) << 18) >> 31;
        goto LABEL_188;
      case 15:
        if ((v8 & 1) == 0)
          goto LABEL_146;
        v69 = 0;
        v70 = 0;
        v46 = 0;
        *(_DWORD *)(a1 + 156) |= 0x20u;
        while (2)
        {
          v71 = *v23;
          v72 = *(_QWORD *)(v3 + v71);
          v73 = v72 + 1;
          if (v72 == -1 || v73 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v24) = 1;
          }
          else
          {
            v74 = *(_BYTE *)(*(_QWORD *)(v3 + *v25) + v72);
            *(_QWORD *)(v3 + v71) = v73;
            v46 |= (unint64_t)(v74 & 0x7F) << v69;
            if (v74 < 0)
            {
              v69 += 7;
              v33 = v70++ >= 9;
              if (v33)
              {
                LODWORD(v46) = 0;
                goto LABEL_159;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v24))
          LODWORD(v46) = 0;
LABEL_159:
        v95 = 148;
        goto LABEL_194;
      case 16:
        if ((v8 & 1) == 0)
          goto LABEL_146;
        v75 = 0;
        v76 = 0;
        v46 = 0;
        *(_DWORD *)(a1 + 156) |= 0x40u;
        while (2)
        {
          v77 = *v23;
          v78 = *(_QWORD *)(v3 + v77);
          v79 = v78 + 1;
          if (v78 == -1 || v79 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v24) = 1;
          }
          else
          {
            v80 = *(_BYTE *)(*(_QWORD *)(v3 + *v25) + v78);
            *(_QWORD *)(v3 + v77) = v79;
            v46 |= (unint64_t)(v80 & 0x7F) << v75;
            if (v80 < 0)
            {
              v75 += 7;
              v33 = v76++ >= 9;
              if (v33)
              {
                LODWORD(v46) = 0;
                goto LABEL_163;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v24))
          LODWORD(v46) = 0;
LABEL_163:
        v95 = 152;
        goto LABEL_194;
      case 18:
        if ((v8 & 1) == 0)
          goto LABEL_146;
        v81 = 0;
        v82 = 0;
        v46 = 0;
        *(_DWORD *)(a1 + 156) |= 0x10u;
        while (2)
        {
          v83 = *v23;
          v84 = *(_QWORD *)(v3 + v83);
          v85 = v84 + 1;
          if (v84 == -1 || v85 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v24) = 1;
          }
          else
          {
            v86 = *(_BYTE *)(*(_QWORD *)(v3 + *v25) + v84);
            *(_QWORD *)(v3 + v83) = v85;
            v46 |= (unint64_t)(v86 & 0x7F) << v81;
            if (v86 < 0)
            {
              v81 += 7;
              v33 = v82++ >= 9;
              if (v33)
              {
                LODWORD(v46) = 0;
                goto LABEL_167;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v24))
          LODWORD(v46) = 0;
LABEL_167:
        v95 = 144;
        goto LABEL_194;
      case 25:
        if (!v37)
          goto LABEL_146;
        if ((*(_BYTE *)(a1 + 158) & 1) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_225;
          v96 = (int)(*(_DWORD *)(a1 + 156) << 15) >> 31;
          goto LABEL_188;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_225;
        v42 = objc_alloc_init(GEOStyleAttributes);
        if (!GEOStyleAttributesReadAllFrom((uint64_t)v42, (void *)v3))
          goto LABEL_224;
        PBReaderRecallMark();
        v43 = 112;
        goto LABEL_144;
      case 26:
        if (!v37 || (*(_BYTE *)(a1 + 157) & 1) != 0)
          goto LABEL_146;
        if (!PBReaderPlaceMark())
          goto LABEL_225;
        -[GEOPBTransitLine _reserveOperatingHours:](a1, 1uLL);
        if (!GEOPBTransitTimeRangeReadAllFrom(*(_QWORD *)(a1 + 24) + 12 * *(_QWORD *)(a1 + 32), v3))
          goto LABEL_225;
        PBReaderRecallMark();
        ++*(_QWORD *)(a1 + 32);
        goto LABEL_189;
      case 27:
        if (!v37)
          goto LABEL_146;
        if ((*(_BYTE *)(a1 + 157) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_225;
          v96 = (int)(*(_DWORD *)(a1 + 156) << 20) >> 31;
          goto LABEL_188;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_225;
        v42 = objc_alloc_init(GEOPBTransitLineDisplayHints);
        if (!GEOPBTransitLineDisplayHintsReadAllFrom((uint64_t)v42, (void *)v3))
          goto LABEL_224;
        PBReaderRecallMark();
        v43 = 64;
        goto LABEL_144;
      case 28:
        if (!v37)
          goto LABEL_146;
        if ((*(_BYTE *)(a1 + 157) & 0x80) == 0)
        {
          PBReaderReadString();
          v67 = objc_claimAutoreleasedReturnValue();
          v68 = 104;
LABEL_125:
          v87 = *(void **)(a1 + v68);
          *(_QWORD *)(a1 + v68) = v67;
          goto LABEL_145;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_225;
        v96 = (int)(*(_DWORD *)(a1 + 156) << 16) >> 31;
        goto LABEL_188;
      case 29:
        if ((v8 & 1) == 0)
          goto LABEL_146;
        v88 = 0;
        v89 = 0;
        v46 = 0;
        *(_DWORD *)(a1 + 156) |= 8u;
        while (2)
        {
          v90 = *v23;
          v91 = *(_QWORD *)(v3 + v90);
          v92 = v91 + 1;
          if (v91 == -1 || v92 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v24) = 1;
          }
          else
          {
            v93 = *(_BYTE *)(*(_QWORD *)(v3 + *v25) + v91);
            *(_QWORD *)(v3 + v90) = v92;
            v46 |= (unint64_t)(v93 & 0x7F) << v88;
            if (v93 < 0)
            {
              v88 += 7;
              v33 = v89++ >= 9;
              if (v33)
              {
                LODWORD(v46) = 0;
                goto LABEL_171;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v24))
          LODWORD(v46) = 0;
LABEL_171:
        v95 = 140;
        goto LABEL_194;
      case 30:
        if (!v37)
          goto LABEL_146;
        if ((*(_BYTE *)(a1 + 157) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_225;
          v96 = (int)(*(_DWORD *)(a1 + 156) << 22) >> 31;
          goto LABEL_188;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_225;
        v42 = objc_alloc_init(GEOPBTransitArtwork);
        if (!GEOPBTransitArtworkReadAllFrom((uint64_t)v42, (void *)v3, v10 & 1))
          goto LABEL_224;
        PBReaderRecallMark();
        v43 = 48;
        goto LABEL_144;
      case 31:
        if (!v37)
          goto LABEL_146;
        if ((*(_BYTE *)(a1 + 157) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_225;
          v96 = (int)(*(_DWORD *)(a1 + 156) << 19) >> 31;
LABEL_188:
          v7 += v96;
LABEL_189:
          v24 = (int *)MEMORY[0x1E0D82BC8];
          v25 = (int *)MEMORY[0x1E0D82BB8];
LABEL_195:
          if (!(v105 & 1 | (v7 != 0)))
            goto LABEL_196;
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_225;
        v42 = objc_alloc_init(GEOPBTransitArtwork);
        if (GEOPBTransitArtworkReadAllFrom((uint64_t)v42, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          v43 = 72;
LABEL_144:
          v87 = *(void **)(a1 + v43);
          *(_QWORD *)(a1 + v43) = v42;
LABEL_145:

          --v7;
          goto LABEL_189;
        }
LABEL_224:

LABEL_225:
        v102 = 0;
        v24 = (int *)MEMORY[0x1E0D82BC8];
LABEL_197:
        v103 = &OBJC_IVAR___GEORouteDetails__isNearCurrentlyDisplayedStep;
        if ((v104 & 1) != 0)
LABEL_198:
          *(_DWORD *)(a1 + v103[336]) |= 0x80u;
        if (v107 || (v102 & 1) == 0)
        {
          *(_DWORD *)(a1 + v103[336]) |= 0x400u;
          *(_DWORD *)(a1 + v103[336]) |= 0x4000u;
          *(_DWORD *)(a1 + v103[336]) |= 0x200u;
          *(_DWORD *)(a1 + v103[336]) |= 0x1000u;
          *(_DWORD *)(a1 + v103[336]) |= 0x2000u;
          *(_DWORD *)(a1 + v103[336]) |= 0x10000u;
          *(_DWORD *)(a1 + v103[336]) |= 0x100u;
          *(_DWORD *)(a1 + v103[336]) |= 0x800u;
          *(_DWORD *)(a1 + v103[336]) |= 0x8000u;
          goto LABEL_218;
        }
        if (v22)
        {
          while (1)
          {
            v98 = *v22++;
            v97 = v98;
            if (v98 > 10)
            {
              switch(v97)
              {
                case 25:
                  v99 = 0x10000;
                  goto LABEL_216;
                case 26:
                  v99 = 256;
                  goto LABEL_216;
                case 27:
                  v99 = 2048;
                  goto LABEL_216;
                case 28:
                  v99 = 0x8000;
                  goto LABEL_216;
                case 29:
                  continue;
                case 30:
                  v99 = 512;
                  goto LABEL_216;
                case 31:
                  v99 = 4096;
                  goto LABEL_216;
                default:
                  if (v97 != 11)
                    continue;
                  v99 = 0x2000;
                  break;
              }
              goto LABEL_216;
            }
            if (v97 == 3)
              break;
            if (v97 == 4)
            {
              v99 = 0x4000;
LABEL_216:
              *(_DWORD *)(a1 + v103[336]) |= v99;
              continue;
            }
            if (!v97)
              goto LABEL_218;
          }
          v99 = 1024;
          goto LABEL_216;
        }
LABEL_218:
        if (v102)
          v3 = *(_BYTE *)(v3 + *v24) == 0;
        else
          v3 = 0;
        if (v107)
        {
          v100 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      default:
        if ((_DWORD)v36 == 2047)
        {
          if ((v8 & 1) != 0)
          {
            v44 = 0;
            v45 = 0;
            v46 = 0;
            *(_DWORD *)(a1 + 156) |= 4u;
            while (1)
            {
              v47 = *v23;
              v48 = *(_QWORD *)(v3 + v47);
              v49 = v48 + 1;
              if (v48 == -1 || v49 > *(_QWORD *)(v3 + *v6))
                break;
              v50 = *(_BYTE *)(*(_QWORD *)(v3 + *v25) + v48);
              *(_QWORD *)(v3 + v47) = v49;
              v46 |= (unint64_t)(v50 & 0x7F) << v44;
              if ((v50 & 0x80) == 0)
                goto LABEL_191;
              v44 += 7;
              v33 = v45++ >= 9;
              if (v33)
              {
                LODWORD(v46) = 0;
                goto LABEL_193;
              }
            }
            *(_BYTE *)(v3 + *v24) = 1;
LABEL_191:
            if (*(_BYTE *)(v3 + *v24))
              LODWORD(v46) = 0;
LABEL_193:
            v95 = 136;
LABEL_194:
            *(_DWORD *)(a1 + v95) = v46;
            goto LABEL_195;
          }
LABEL_146:
          v94 = PBReaderSkipValueWithTag();
          v25 = (int *)MEMORY[0x1E0D82BB8];
          v24 = (int *)MEMORY[0x1E0D82BC8];
          if ((v94 & 1) == 0)
          {
            v102 = 0;
            goto LABEL_197;
          }
          goto LABEL_195;
        }
LABEL_53:
        if ((v104 & 1) == 0 || (*(_BYTE *)(a1 + 156) & 0x80) != 0)
          goto LABEL_146;
        if (!*(_QWORD *)(a1 + 16))
        {
          v51 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
          v52 = *(void **)(a1 + 16);
          *(_QWORD *)(a1 + 16) = v51;

        }
        v53 = PBUnknownFieldAdd();
        v24 = (int *)MEMORY[0x1E0D82BC8];
        v25 = (int *)MEMORY[0x1E0D82BB8];
        if (!v53)
        {
          v102 = 0;
          v103 = &OBJC_IVAR___GEORouteDetails__isNearCurrentlyDisplayedStep;
          goto LABEL_198;
        }
        goto LABEL_195;
    }
  }
}

void sub_1892F8740(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892F8888(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892F89D0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892F8D20(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892F9144(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892F9284(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892F9748(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892F9890(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id GEOPBTransitTimeRangeJSONRepresentation(unsigned int *a1)
{
  return _GEOPDTimeRangeDictionaryRepresentation(a1, 1);
}

id GEOPBTransitTimeRangeDictionaryRepresentation(unsigned int *a1)
{
  return _GEOPDTimeRangeDictionaryRepresentation(a1, 0);
}

void GEOPBTransitTimeRangeFromJSONRepresentation(void *a1, uint64_t a2)
{
  _GEOPDTimeRangeFromDictionaryRepresentation(a1, a2, 1);
}

void GEOPBTransitTimeRangeFromDictionaryRepresentation(void *a1, uint64_t a2)
{
  _GEOPDTimeRangeFromDictionaryRepresentation(a1, a2, 0);
}

void sub_1892FAD80(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPBTransitLineCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  objc_msgSend(a1[7], "readAll:", 1);
  objc_msgSend(a1[11], "readAll:", 1);
  objc_msgSend(a1[6], "readAll:", 1);
  objc_msgSend(a1[9], "readAll:", 1);
  objc_msgSend(a1[14], "readAll:", 1);
  return objc_msgSend(a1[8], "readAll:", 1);
}

uint64_t GEOPBTransitLineReadAllFrom(uint64_t a1, void *a2, int a3)
{
  uint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 124))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPBTransitLineReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 128));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 120) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 124) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPBTransitLineReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPBTransitLineReadAllFrom_initialTag;
  Specified = GEOPBTransitLineReadSpecified(a1, (uint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPBTransitLineCallReadAllRecursiveWithoutSynchronized((id *)a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 128));
  return Specified;
}

void sub_1892FAF94(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEOPBTransitLineReadFrom(uint64_t a1, void *a2)
{
  id v3;
  uint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOPBTransitLineReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1892FAFF4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPBTransitLineIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  int v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  int v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  int v42;
  unsigned int v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  int v47;
  unsigned int v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  int v52;
  _BOOL8 v53;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (!a1[*v4])
    {
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 3u:
        case 4u:
        case 0x1Eu:
        case 0x1Fu:
          if (v15 == 2 && PBReaderPlaceMark() && GEOPBTransitArtworkIsValid(a1))
            goto LABEL_86;
          goto LABEL_102;
        case 5u:
        case 6u:
        case 8u:
        case 9u:
        case 0xCu:
        case 0xDu:
        case 0xEu:
        case 0x11u:
        case 0x13u:
        case 0x14u:
        case 0x15u:
        case 0x16u:
        case 0x17u:
        case 0x18u:
          goto LABEL_88;
        case 7u:
          if ((v8 & 7) != 0)
            goto LABEL_102;
          v23 = 0;
          while (1)
          {
            v24 = *v2;
            v25 = *(_QWORD *)&a1[v24];
            v26 = v25 + 1;
            if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
              goto LABEL_98;
            v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
            *(_QWORD *)&a1[v24] = v26;
            if (v27 < 0)
            {
              v22 = v23++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_99;
          }
        case 0xAu:
          if ((v8 & 7) != 0)
            goto LABEL_102;
          v28 = 0;
          while (1)
          {
            v29 = *v2;
            v30 = *(_QWORD *)&a1[v29];
            v31 = v30 + 1;
            if (v30 == -1 || v31 > *(_QWORD *)&a1[*v3])
              goto LABEL_98;
            v32 = *(char *)(*(_QWORD *)&a1[*v5] + v30);
            *(_QWORD *)&a1[v29] = v31;
            if (v32 < 0)
            {
              v22 = v28++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_99;
          }
        case 0xBu:
          if (v15 == 2)
            goto LABEL_88;
          goto LABEL_102;
        case 0xFu:
          if ((v8 & 7) != 0)
            goto LABEL_102;
          v33 = 0;
          while (1)
          {
            v34 = *v2;
            v35 = *(_QWORD *)&a1[v34];
            v36 = v35 + 1;
            if (v35 == -1 || v36 > *(_QWORD *)&a1[*v3])
              goto LABEL_98;
            v37 = *(char *)(*(_QWORD *)&a1[*v5] + v35);
            *(_QWORD *)&a1[v34] = v36;
            if (v37 < 0)
            {
              v22 = v33++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_99;
          }
        case 0x10u:
          if ((v8 & 7) != 0)
            goto LABEL_102;
          v38 = 0;
          while (1)
          {
            v39 = *v2;
            v40 = *(_QWORD *)&a1[v39];
            v41 = v40 + 1;
            if (v40 == -1 || v41 > *(_QWORD *)&a1[*v3])
              goto LABEL_98;
            v42 = *(char *)(*(_QWORD *)&a1[*v5] + v40);
            *(_QWORD *)&a1[v39] = v41;
            if (v42 < 0)
            {
              v22 = v38++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_99;
          }
        case 0x12u:
          if ((v8 & 7) != 0)
            goto LABEL_102;
          v43 = 0;
          while (1)
          {
            v44 = *v2;
            v45 = *(_QWORD *)&a1[v44];
            v46 = v45 + 1;
            if (v45 == -1 || v46 > *(_QWORD *)&a1[*v3])
              goto LABEL_98;
            v47 = *(char *)(*(_QWORD *)&a1[*v5] + v45);
            *(_QWORD *)&a1[v44] = v46;
            if (v47 < 0)
            {
              v22 = v43++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_99;
          }
        case 0x19u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOStyleAttributesIsValid(a1))
            goto LABEL_102;
          goto LABEL_86;
        case 0x1Au:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPBTransitTimeRangeIsValid(a1))
            goto LABEL_102;
          goto LABEL_86;
        case 0x1Bu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPBTransitLineDisplayHintsIsValid(a1))
            goto LABEL_102;
LABEL_86:
          PBReaderRecallMark();
          goto LABEL_99;
        case 0x1Cu:
          if (v15 == 2)
            goto LABEL_88;
          goto LABEL_102;
        case 0x1Du:
          if ((v8 & 7) != 0)
            goto LABEL_102;
          v48 = 0;
          while (1)
          {
            v49 = *v2;
            v50 = *(_QWORD *)&a1[v49];
            v51 = v50 + 1;
            if (v50 == -1 || v51 > *(_QWORD *)&a1[*v3])
              goto LABEL_98;
            v52 = *(char *)(*(_QWORD *)&a1[*v5] + v50);
            *(_QWORD *)&a1[v49] = v51;
            if (v52 < 0)
            {
              v22 = v48++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_99;
          }
        default:
          if ((v8 >> 3) == 2047)
          {
            if ((v8 & 7) != 0)
              goto LABEL_102;
            v17 = 0;
            while (1)
            {
              v18 = *v2;
              v19 = *(_QWORD *)&a1[v18];
              v20 = v19 + 1;
              if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
                break;
              v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
              *(_QWORD *)&a1[v18] = v20;
              if (v21 < 0)
              {
                v22 = v17++ > 8;
                if (!v22)
                  continue;
              }
              goto LABEL_99;
            }
LABEL_98:
            a1[*v4] = 1;
          }
          else
          {
LABEL_88:
            if ((PBReaderSkipValueWithTag() & 1) == 0)
            {
LABEL_102:
              PBReaderRecallMark();
              return 0;
            }
          }
LABEL_99:
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_100;
          break;
      }
    }
  }
LABEL_100:
  v53 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v53;
}

BOOL GEOPBTransitTimeRangeIsValid(void *a1)
{
  _BOOL8 AllFrom;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;

  v6 = objc_msgSend(a1, "position");
  v7 = objc_msgSend(a1, "length");
  v5 = 0;
  v4 = 0;
  AllFrom = GEOPBTransitTimeRangeReadAllFrom((uint64_t)&v4, (uint64_t)a1);
  PBReaderRecallMark();
  return AllFrom;
}

BOOL GEOPBTransitLineDisplayHintsIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int v20;
  _BOOL8 v22;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      if (v14 || (v8 & 7) == 4)
        break;
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0)
          goto LABEL_33;
        v16 = 0;
        while (1)
        {
          v17 = *v2;
          v18 = *(_QWORD *)&a1[v17];
          v19 = v18 + 1;
          if (v18 == -1 || v19 > *(_QWORD *)&a1[*v3])
            break;
          v20 = *(char *)(*(_QWORD *)&a1[*v5] + v18);
          *(_QWORD *)&a1[v17] = v19;
          if (v20 < 0 && v16++ <= 8)
            continue;
          goto LABEL_30;
        }
        a1[*v4] = 1;
      }
      else if (!PBReaderSkipValueWithTag())
      {
LABEL_33:
        v22 = 0;
        goto LABEL_32;
      }
LABEL_30:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v22 = a1[*v4] == 0;
LABEL_32:
  PBReaderRecallMark();
  return v22;
}

void sub_1892FBA94(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPBTransitLineIsDirty(uint64_t a1)
{
  unsigned int v2;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 128));
  v2 = *(_DWORD *)(a1 + 156);
  if ((v2 & 0x20000) != 0)
    return 1;
  if ((v2 & 0x400) != 0)
  {
    if ((GEOPBTransitArtworkIsDirty(*(os_unfair_lock_s **)(a1 + 56)) & 1) != 0)
      return 1;
    v2 = *(_DWORD *)(a1 + 156);
  }
  if ((v2 & 0x4000) != 0)
  {
    if ((GEOPBTransitArtworkIsDirty(*(os_unfair_lock_s **)(a1 + 88)) & 1) != 0)
      return 1;
    v2 = *(_DWORD *)(a1 + 156);
  }
  if ((v2 & 0x200) != 0)
  {
    if ((GEOPBTransitArtworkIsDirty(*(os_unfair_lock_s **)(a1 + 48)) & 1) != 0)
      return 1;
    v2 = *(_DWORD *)(a1 + 156);
  }
  if ((v2 & 0x1000) == 0)
    goto LABEL_14;
  if ((GEOPBTransitArtworkIsDirty(*(os_unfair_lock_s **)(a1 + 72)) & 1) != 0)
    return 1;
  v2 = *(_DWORD *)(a1 + 156);
LABEL_14:
  if ((v2 & 0x12900) != 0)
    return 1;
  return (v2 >> 15) & 1;
}

uint64_t GEOPBTransitTimeRangeWriteTo(uint64_t result)
{
  uint64_t v1;
  char v2;

  v1 = result;
  v2 = *(_BYTE *)(result + 8);
  if ((v2 & 2) != 0)
  {
    result = PBDataWriterWriteUint32Field();
    v2 = *(_BYTE *)(v1 + 8);
  }
  if ((v2 & 1) != 0)
    return PBDataWriterWriteUint32Field();
  return result;
}

os_unfair_lock_s *GEOPBTransitLineIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOPBTransitLineIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 32);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_1892FC280(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892FCB54(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPBTransitLineDisplayHintsReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  id v25;
  void *v26;
  _BOOL8 v27;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 1)
        {
          v18 = 0;
          v19 = 0;
          v20 = 0;
          *(_BYTE *)(a1 + 20) |= 1u;
          while (1)
          {
            v21 = *v4;
            v22 = *(_QWORD *)&v3[v21];
            v23 = v22 + 1;
            if (v22 == -1 || v23 > *(_QWORD *)&v3[*v5])
              break;
            v24 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v22);
            *(_QWORD *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0)
              goto LABEL_32;
            v18 += 7;
            v15 = v19++ >= 9;
            if (v15)
            {
              v20 = 0;
              goto LABEL_34;
            }
          }
          v3[*v6] = 1;
LABEL_32:
          if (v3[*v6])
            v20 = 0;
LABEL_34:
          *(_BYTE *)(a1 + 16) = v20 != 0;
        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v25 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v26 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v25;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_37;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v27 = v3[*v6] == 0;
  }
  else
  {
LABEL_37:
    v27 = 0;
  }
  objc_sync_exit(v3);

  return v27;
}

void sub_1892FD3B0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPBTransitLineDisplayHintsReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOPBTransitLineDisplayHintsReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1892FD410(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892FD8C0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPBTransitPaymentMethodReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  char v15;
  unsigned __int8 v16;
  int *v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  BOOL v28;
  int v29;
  unint64_t v31;
  BOOL v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  void *v40;
  int v41;
  char v42;
  unsigned int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  char v48;
  char v49;
  unsigned int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  char v55;
  char v56;
  unsigned int v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  char v61;
  void *v62;
  char v63;
  uint64_t v64;
  char v65;
  int v66;
  int v67;
  char v68;
  void *v69;
  int v71;
  int *v72;
  char v73;
  char v74;
  char v75;
  BOOL v76;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 52);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 48));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int8 *)(a1 + 68) >> 4) & 1)
      + ((*(unsigned __int8 *)(a1 + 68) >> 5) & 1)
      + ((*(unsigned __int8 *)(a1 + 68) >> 3) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v11;
        v12 = v7;
        goto LABEL_8;
      case -3:
        v9 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v11 != 0;
        v15 = v14 & ~(_BYTE)v7;
        v16 = v14 | v7;
        v73 = v15 | v8;
        v74 = v16 | v15 | v8;
        if (((v16 | v9) & 1) != 0)
          v17 = 0;
        else
          v17 = a3;
        v75 = (v17 == 0) | v16;
        v76 = v16;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_7:
        v12 = v7;
        v13 = v8;
LABEL_8:
        ++v10;
        v7 = v12;
        v8 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v19))
      goto LABEL_96;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0)
        goto LABEL_23;
      v21 += 7;
      v28 = v22++ >= 9;
      if (v28)
      {
        v23 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_25;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_23:
    v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_25:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_96:
      v71 = 1;
      goto LABEL_97;
    }
    v31 = v23 >> 3;
    v32 = v76;
    if ((v75 & 1) == 0)
    {
      v33 = v17;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if (!v32)
          goto LABEL_74;
        if ((*(_BYTE *)(a1 + 68) & 0x10) == 0)
        {
          PBReaderReadString();
          v37 = objc_claimAutoreleasedReturnValue();
          v38 = 24;
          goto LABEL_73;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_115;
        v65 = 8 * *(_BYTE *)(a1 + 68);
        goto LABEL_93;
      case 2:
        if ((v9 & 1) == 0)
          goto LABEL_74;
        v42 = 0;
        v43 = 0;
        v44 = 0;
        *(_BYTE *)(a1 + 68) |= 1u;
        while (2)
        {
          v45 = *v18;
          v46 = *(_QWORD *)(v3 + v45);
          v47 = v46 + 1;
          if (v46 == -1 || v47 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v19) = 1;
          }
          else
          {
            v48 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v46);
            *(_QWORD *)(v3 + v45) = v47;
            v44 |= (unint64_t)(v48 & 0x7F) << v42;
            if (v48 < 0)
            {
              v42 += 7;
              v28 = v43++ >= 9;
              if (v28)
              {
                v44 = 0;
                goto LABEL_79;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v19))
          v44 = 0;
LABEL_79:
        *(_QWORD *)(a1 + 32) = v44;
        goto LABEL_95;
      case 3:
        if ((v9 & 1) == 0)
          goto LABEL_74;
        v49 = 0;
        v50 = 0;
        v51 = 0;
        *(_BYTE *)(a1 + 68) |= 4u;
        while (2)
        {
          v52 = *v18;
          v53 = *(_QWORD *)(v3 + v52);
          v54 = v53 + 1;
          if (v53 == -1 || v54 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v19) = 1;
          }
          else
          {
            v55 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v53);
            *(_QWORD *)(v3 + v52) = v54;
            v51 |= (unint64_t)(v55 & 0x7F) << v49;
            if (v55 < 0)
            {
              v49 += 7;
              v28 = v50++ >= 9;
              if (v28)
              {
                LODWORD(v51) = 0;
                goto LABEL_83;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v19))
          LODWORD(v51) = 0;
LABEL_83:
        v64 = 64;
        goto LABEL_88;
      case 4:
        if ((v9 & 1) == 0)
          goto LABEL_74;
        v56 = 0;
        v57 = 0;
        v51 = 0;
        *(_BYTE *)(a1 + 68) |= 2u;
        while (2)
        {
          v58 = *v18;
          v59 = *(_QWORD *)(v3 + v58);
          v60 = v59 + 1;
          if (v59 == -1 || v60 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v19) = 1;
          }
          else
          {
            v61 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v59);
            *(_QWORD *)(v3 + v58) = v60;
            v51 |= (unint64_t)(v61 & 0x7F) << v56;
            if (v61 < 0)
            {
              v56 += 7;
              v28 = v57++ >= 9;
              if (v28)
              {
                LODWORD(v51) = 0;
                goto LABEL_87;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v19))
          LODWORD(v51) = 0;
LABEL_87:
        v64 = 60;
LABEL_88:
        *(_DWORD *)(a1 + v64) = v51;
        goto LABEL_95;
      case 5:
        if (!v32)
          goto LABEL_74;
        if ((*(_BYTE *)(a1 + 68) & 0x20) == 0)
        {
          PBReaderReadString();
          v37 = objc_claimAutoreleasedReturnValue();
          v38 = 40;
LABEL_73:
          v62 = *(void **)(a1 + v38);
          *(_QWORD *)(a1 + v38) = v37;

          --v10;
LABEL_94:
          v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_95:
          if (!(v74 & 1 | (v10 != 0)))
            goto LABEL_96;
          continue;
        }
        if ((PBReaderSkipValueWithTag() & 1) != 0)
        {
          v65 = 4 * *(_BYTE *)(a1 + 68);
LABEL_93:
          v10 += v65 >> 7;
          goto LABEL_94;
        }
LABEL_115:
        v71 = 0;
        v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_97:
        v72 = &OBJC_IVAR___GEOPDRelatedEntitySection__reader;
        if ((v73 & 1) != 0)
LABEL_98:
          *(_BYTE *)(a1 + v72[219]) |= 8u;
        if (v76 || (v71 & 1) == 0)
        {
          *(_BYTE *)(a1 + v72[219]) |= 0x10u;
          *(_BYTE *)(a1 + v72[219]) |= 0x20u;
          goto LABEL_109;
        }
        if (v17)
        {
          while (2)
          {
            while (1)
            {
              v67 = *v17++;
              v66 = v67;
              if (v67 == 1)
                break;
              if (v66 == 5)
              {
                v68 = 32;
                goto LABEL_108;
              }
              if (!v66)
                goto LABEL_109;
            }
            v68 = 16;
LABEL_108:
            *(_BYTE *)(a1 + v72[219]) |= v68;
            continue;
          }
        }
LABEL_109:
        if (v71)
          v3 = *(_BYTE *)(v3 + *v19) == 0;
        else
          v3 = 0;
        if (v76)
        {
          v69 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      default:
        if ((v73 & 1) == 0 || (*(_BYTE *)(a1 + 68) & 8) != 0)
        {
LABEL_74:
          v63 = PBReaderSkipValueWithTag();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if ((v63 & 1) == 0)
          {
            v71 = 0;
            goto LABEL_97;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v39 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v40 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v39;

          }
          v41 = PBUnknownFieldAdd();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if (!v41)
          {
            v71 = 0;
            v72 = &OBJC_IVAR___GEOPDRelatedEntitySection__reader;
            goto LABEL_98;
          }
        }
        goto LABEL_95;
    }
  }
}

void sub_1892FE508(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892FEDB4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPBTransitPaymentMethodReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 52))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPBTransitPaymentMethodReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 52) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPBTransitPaymentMethodReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPBTransitPaymentMethodReadAllFrom_initialTag;
  Specified = GEOPBTransitPaymentMethodReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_1892FEF3C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPBTransitPaymentMethodReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOPBTransitPaymentMethodReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1892FEF9C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPBTransitPaymentMethodIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  int v32;
  _BOOL8 v33;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2)
            goto LABEL_51;
          goto LABEL_47;
        case 2u:
          if ((v8 & 7) != 0)
            goto LABEL_51;
          v17 = 0;
          while (1)
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
              goto LABEL_45;
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if (v21 < 0)
            {
              v22 = v17++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_48;
          }
        case 3u:
          if ((v8 & 7) != 0)
            goto LABEL_51;
          v23 = 0;
          while (1)
          {
            v24 = *v2;
            v25 = *(_QWORD *)&a1[v24];
            v26 = v25 + 1;
            if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
              goto LABEL_45;
            v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
            *(_QWORD *)&a1[v24] = v26;
            if (v27 < 0)
            {
              v22 = v23++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_48;
          }
        case 4u:
          if ((v8 & 7) != 0)
            goto LABEL_51;
          v28 = 0;
          break;
        case 5u:
          if (v15 == 2)
            goto LABEL_47;
          goto LABEL_51;
        default:
LABEL_47:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_51:
          v33 = 0;
          goto LABEL_50;
      }
      while (1)
      {
        v29 = *v2;
        v30 = *(_QWORD *)&a1[v29];
        v31 = v30 + 1;
        if (v30 == -1 || v31 > *(_QWORD *)&a1[*v3])
          break;
        v32 = *(char *)(*(_QWORD *)&a1[*v5] + v30);
        *(_QWORD *)&a1[v29] = v31;
        if (v32 < 0)
        {
          v22 = v28++ > 8;
          if (!v22)
            continue;
        }
        goto LABEL_48;
      }
LABEL_45:
      a1[*v4] = 1;
LABEL_48:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v33 = a1[*v4] == 0;
LABEL_50:
  PBReaderRecallMark();
  return v33;
}

void sub_1892FF474(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPBTransitPaymentMethodIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v2 = (*(_BYTE *)(a1 + 68) & 0x70) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return v2;
}

void sub_1892FF838(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892FFBD4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892FFE80(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPBTransitPaymentMethodSuggestionReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  char v18;
  char v19;
  int *v20;
  int *v21;
  char v22;
  int *v23;
  int *v24;
  char v25;
  unsigned int v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  BOOL v32;
  int v33;
  int v34;
  unint64_t v36;
  BOOL v37;
  int *v38;
  int v39;
  int v40;
  BOOL v41;
  char v42;
  unsigned int v43;
  uint64_t v44;
  int *v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  id v50;
  void *v51;
  int v52;
  GEOPBTransitPaymentMethodSuggestionDetails *v53;
  void *v54;
  char v55;
  unsigned int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  char v61;
  char v62;
  unsigned int v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  char v67;
  char v68;
  uint64_t v69;
  char v70;
  unsigned int v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  char v76;
  char v77;
  int v78;
  int v79;
  void *v80;
  char v82;
  char v83;
  int v84;
  char v85;
  char v86;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 60);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 56));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = &OBJC_IVAR___GEOPDRelatedEntitySection__reader;
  v13 = ((*(unsigned __int8 *)(a1 + 76) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 76) >> 4) & 1)
      + ((*(unsigned __int8 *)(a1 + 76) >> 2) & 1);
  while (2)
  {
    v14 = 1;
    v15 = 1;
    v16 = 1;
    switch(a3[v9])
    {
      case -4:
        ++v13;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v15 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v17 = v13 != 0;
        v18 = v17 & ~(_BYTE)v11 | v7;
        v19 = v17 | v11;
        v20 = (int *)MEMORY[0x1E0D82BF0];
        if ((((v17 | v11) | v8) & 1) != 0)
          v21 = 0;
        else
          v21 = a3;
        v84 = 1;
        v22 = v18;
        if (*(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(v3 + *v6))
          goto LABEL_111;
        v82 = v18;
        v85 = v19 | v18;
        v23 = (int *)MEMORY[0x1E0D82BC8];
        v86 = (v21 == 0) | v19;
        v24 = (int *)MEMORY[0x1E0D82BB8];
        v83 = v19;
        break;
      default:
        ++v13;
LABEL_7:
        v14 = v7;
LABEL_8:
        v15 = v10;
        v16 = v11;
LABEL_10:
        ++v9;
        v7 = v14;
        v10 = v15;
        v11 = v16;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_BYTE *)(v3 + *v23))
      goto LABEL_109;
    v25 = 0;
    v26 = 0;
    v27 = 0;
    while (1)
    {
      v28 = *v20;
      v29 = *(_QWORD *)(v3 + v28);
      v30 = v29 + 1;
      if (v29 == -1 || v30 > *(_QWORD *)(v3 + *v6))
        break;
      v31 = *(_BYTE *)(*(_QWORD *)(v3 + *v24) + v29);
      *(_QWORD *)(v3 + v28) = v30;
      v27 |= (unint64_t)(v31 & 0x7F) << v25;
      if ((v31 & 0x80) == 0)
        goto LABEL_25;
      v25 += 7;
      v32 = v26++ >= 9;
      if (v32)
      {
        v27 = 0;
        v33 = *(unsigned __int8 *)(v3 + *v23);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v23) = 1;
LABEL_25:
    v33 = *(unsigned __int8 *)(v3 + *v23);
    if (*(_BYTE *)(v3 + *v23))
      v27 = 0;
LABEL_27:
    v34 = v27 & 7;
    if (v33 || v34 == 4)
    {
LABEL_109:
      v84 = 1;
      goto LABEL_110;
    }
    v36 = v27 >> 3;
    v37 = v19;
    if ((v86 & 1) == 0)
    {
      v38 = v21;
      do
      {
        v40 = *v38++;
        v39 = v40;
        v37 = v40 != 0;
        if (v40)
          v41 = v39 == (_DWORD)v36;
        else
          v41 = 1;
      }
      while (!v41);
    }
    switch((int)v36)
    {
      case 1:
        if (!v37 || (*(_BYTE *)(a1 + v12[221]) & 8) != 0)
          goto LABEL_82;
        if (v34 == 2)
        {
          if (!PBReaderPlaceMark())
            goto LABEL_130;
          v23 = (int *)MEMORY[0x1E0D82BC8];
          while (*(_QWORD *)(v3 + *v20) < *(_QWORD *)(v3 + *v6))
          {
            if (*(_BYTE *)(v3 + *v23))
              break;
            v42 = 0;
            v43 = 0;
            v44 = 0;
            v45 = (int *)MEMORY[0x1E0D82BB8];
            while (1)
            {
              v46 = *v20;
              v47 = *(_QWORD *)(v3 + v46);
              v48 = v47 + 1;
              if (v47 == -1 || v48 > *(_QWORD *)(v3 + *v6))
                break;
              v49 = *(_BYTE *)(*(_QWORD *)(v3 + *v45) + v47);
              *(_QWORD *)(v3 + v46) = v48;
              v44 |= (unint64_t)(v49 & 0x7F) << v42;
              if (v49 < 0)
              {
                v42 += 7;
                v32 = v43++ >= 9;
                if (!v32)
                  continue;
              }
              goto LABEL_53;
            }
            *(_BYTE *)(v3 + *v23) = 1;
LABEL_53:
            PBRepeatedUInt32Add();
          }
          PBReaderRecallMark();
        }
        else
        {
          v70 = 0;
          v71 = 0;
          v72 = 0;
          v23 = (int *)MEMORY[0x1E0D82BC8];
          while (1)
          {
            v73 = *v20;
            v74 = *(_QWORD *)(v3 + v73);
            v75 = v74 + 1;
            if (v74 == -1 || v75 > *(_QWORD *)(v3 + *v6))
              break;
            v76 = *(_BYTE *)(*(_QWORD *)(v3 + *v24) + v74);
            *(_QWORD *)(v3 + v73) = v75;
            v72 |= (unint64_t)(v76 & 0x7F) << v70;
            if (v76 < 0)
            {
              v70 += 7;
              v32 = v71++ >= 9;
              if (!v32)
                continue;
            }
            goto LABEL_104;
          }
          *(_BYTE *)(v3 + *v23) = 1;
LABEL_104:
          PBRepeatedUInt32Add();
        }
        v12 = &OBJC_IVAR___GEOPDRelatedEntitySection__reader;
        v19 = v83;
        goto LABEL_106;
      case 2:
        if (!v37)
          goto LABEL_82;
        if ((*(_BYTE *)(a1 + v12[221]) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_130;
          v12 = &OBJC_IVAR___GEOPDRelatedEntitySection__reader;
          v9 += *(unsigned __int8 *)(a1 + 76) << 27 >> 31;
          goto LABEL_95;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_130;
        v53 = objc_alloc_init(GEOPBTransitPaymentMethodSuggestionDetails);
        if (GEOPBTransitPaymentMethodSuggestionDetailsReadAllFrom((uint64_t)v53, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          v54 = *(void **)(a1 + 48);
          *(_QWORD *)(a1 + 48) = v53;

          --v9;
          v12 = &OBJC_IVAR___GEOPDRelatedEntitySection__reader;
LABEL_95:
          v19 = v83;
          v23 = (int *)MEMORY[0x1E0D82BC8];
LABEL_106:
          v24 = (int *)MEMORY[0x1E0D82BB8];
LABEL_107:
          if (!(v85 & 1 | (v9 != 0)) || *(_QWORD *)(v3 + *v20) >= *(_QWORD *)(v3 + *v6))
            goto LABEL_109;
          continue;
        }

LABEL_130:
        v84 = 0;
        v12 = &OBJC_IVAR___GEOPDRelatedEntitySection__reader;
        v19 = v83;
LABEL_110:
        v22 = v82;
LABEL_111:
        if ((v22 & 1) != 0)
LABEL_112:
          *(_BYTE *)(a1 + v12[221]) |= 4u;
        if (v19 & 1 | ((v84 & 1) == 0))
        {
          *(_BYTE *)(a1 + v12[221]) |= 8u;
          *(_BYTE *)(a1 + v12[221]) |= 0x10u;
          goto LABEL_123;
        }
        if (v21)
        {
          while (1)
          {
            v79 = *v21++;
            v78 = v79;
            if (v79 == 1)
              break;
            if (v78 == 2)
            {
              v77 = 16;
LABEL_119:
              *(_BYTE *)(a1 + v12[221]) |= v77;
            }
            else if (!v78)
            {
              goto LABEL_123;
            }
          }
          v77 = 8;
          goto LABEL_119;
        }
LABEL_123:
        if (v84)
        {
          v3 = *(_BYTE *)(v3 + (int)*MEMORY[0x1E0D82BC8]) == 0;
          if ((v19 & 1) == 0)
            return v3;
LABEL_127:
          v80 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        else
        {
          v3 = 0;
          if ((v19 & 1) != 0)
            goto LABEL_127;
        }
        return v3;
      case 3:
        if ((v8 & 1) == 0)
          goto LABEL_82;
        v55 = 0;
        v56 = 0;
        v57 = 0;
        *(_BYTE *)(a1 + v12[221]) |= 1u;
        v23 = (int *)MEMORY[0x1E0D82BC8];
        while (2)
        {
          v58 = *v20;
          v59 = *(_QWORD *)(v3 + v58);
          v60 = v59 + 1;
          if (v59 == -1 || v60 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v23) = 1;
          }
          else
          {
            v61 = *(_BYTE *)(*(_QWORD *)(v3 + *v24) + v59);
            *(_QWORD *)(v3 + v58) = v60;
            v57 |= (unint64_t)(v61 & 0x7F) << v55;
            if (v61 < 0)
            {
              v55 += 7;
              v32 = v56++ >= 9;
              if (v32)
              {
                LODWORD(v57) = 0;
                goto LABEL_87;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v23))
          LODWORD(v57) = 0;
LABEL_87:
        v69 = 68;
        goto LABEL_92;
      case 4:
        if ((v8 & 1) == 0)
          goto LABEL_82;
        v62 = 0;
        v63 = 0;
        v57 = 0;
        *(_BYTE *)(a1 + v12[221]) |= 2u;
        v23 = (int *)MEMORY[0x1E0D82BC8];
        while (2)
        {
          v64 = *v20;
          v65 = *(_QWORD *)(v3 + v64);
          v66 = v65 + 1;
          if (v65 == -1 || v66 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v23) = 1;
          }
          else
          {
            v67 = *(_BYTE *)(*(_QWORD *)(v3 + *v24) + v65);
            *(_QWORD *)(v3 + v64) = v66;
            v57 |= (unint64_t)(v67 & 0x7F) << v62;
            if (v67 < 0)
            {
              v62 += 7;
              v32 = v63++ >= 9;
              if (v32)
              {
                LODWORD(v57) = 0;
                goto LABEL_91;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v23))
          LODWORD(v57) = 0;
LABEL_91:
        v69 = 72;
LABEL_92:
        *(_DWORD *)(a1 + v69) = v57;
        goto LABEL_107;
      default:
        if ((v82 & 1) == 0 || (*(_BYTE *)(a1 + v12[221]) & 4) != 0)
        {
LABEL_82:
          v68 = PBReaderSkipValueWithTag();
          v24 = (int *)MEMORY[0x1E0D82BB8];
          v19 = v83;
          v12 = &OBJC_IVAR___GEOPDRelatedEntitySection__reader;
          v23 = (int *)MEMORY[0x1E0D82BC8];
          if ((v68 & 1) == 0)
          {
            v84 = 0;
            goto LABEL_110;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v50 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v51 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v50;

          }
          v52 = PBUnknownFieldAdd();
          v12 = &OBJC_IVAR___GEOPDRelatedEntitySection__reader;
          v19 = v83;
          v23 = (int *)MEMORY[0x1E0D82BC8];
          v24 = (int *)MEMORY[0x1E0D82BB8];
          if (!v52)
          {
            v84 = 0;
            goto LABEL_112;
          }
        }
        goto LABEL_107;
    }
  }
}

void sub_189300A3C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893016D0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPBTransitPaymentMethodSuggestionReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 60))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPBTransitPaymentMethodSuggestionReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 60) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPBTransitPaymentMethodSuggestionReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPBTransitPaymentMethodSuggestionReadAllFrom_initialTag;
  Specified = GEOPBTransitPaymentMethodSuggestionReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    objc_msgSend(*(id *)(a1 + 48), "readAll:", 1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_189301870(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPBTransitPaymentMethodSuggestionReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOPBTransitPaymentMethodSuggestionReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1893018D0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPBTransitPaymentMethodSuggestionIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  BOOL v13;
  int v14;
  int v15;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int v20;
  unsigned int v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  int v26;
  BOOL v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  int v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  int v37;
  _BOOL8 v38;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        v13 = v7++ >= 9;
        if (v13)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 == 2)
          {
            if (!PBReaderPlaceMark())
              goto LABEL_63;
            while (1)
            {
LABEL_52:
              if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
                goto LABEL_31;
              v33 = a1[*v4];
              if (a1[*v4])
                goto LABEL_31;
              while (1)
              {
                v34 = *v2;
                v35 = *(_QWORD *)&a1[v34];
                v36 = v35 + 1;
                if (v35 == -1 || v36 > *(_QWORD *)&a1[*v3])
                  break;
                v37 = *(char *)(*(_QWORD *)&a1[*v5] + v35);
                *(_QWORD *)&a1[v34] = v36;
                if (v37 < 0)
                {
                  v13 = v33++ >= 9;
                  if (!v13)
                    continue;
                }
                goto LABEL_52;
              }
              a1[*v4] = 1;
            }
          }
          if ((v8 & 7) != 0)
            goto LABEL_63;
          while (1)
          {
            v17 = *v2;
            v18 = *(_QWORD *)&a1[v17];
            v19 = v18 + 1;
            if (v18 == -1 || v19 > *(_QWORD *)&a1[*v3])
              goto LABEL_48;
            v20 = *(char *)(*(_QWORD *)&a1[*v5] + v18);
            *(_QWORD *)&a1[v17] = v19;
            if (v20 < 0)
            {
              v21 = v15++;
              if (v21 <= 8)
                continue;
            }
            goto LABEL_49;
          }
        case 2u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPBTransitPaymentMethodSuggestionDetailsIsValid(a1))
            goto LABEL_63;
LABEL_31:
          PBReaderRecallMark();
          continue;
        case 3u:
          if ((v8 & 7) != 0)
            goto LABEL_63;
          v22 = 0;
          while (1)
          {
            v23 = *v2;
            v24 = *(_QWORD *)&a1[v23];
            v25 = v24 + 1;
            if (v24 == -1 || v25 > *(_QWORD *)&a1[*v3])
              goto LABEL_48;
            v26 = *(char *)(*(_QWORD *)&a1[*v5] + v24);
            *(_QWORD *)&a1[v23] = v25;
            if (v26 < 0)
            {
              v27 = v22++ > 8;
              if (!v27)
                continue;
            }
            goto LABEL_49;
          }
        case 4u:
          if ((v8 & 7) != 0)
            goto LABEL_63;
          v28 = 0;
          break;
        default:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_63:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v29 = *v2;
        v30 = *(_QWORD *)&a1[v29];
        v31 = v30 + 1;
        if (v30 == -1 || v31 > *(_QWORD *)&a1[*v3])
          break;
        v32 = *(char *)(*(_QWORD *)&a1[*v5] + v30);
        *(_QWORD *)&a1[v29] = v31;
        if (v32 < 0)
        {
          v27 = v28++ > 8;
          if (!v27)
            continue;
        }
        goto LABEL_49;
      }
LABEL_48:
      a1[*v4] = 1;
LABEL_49:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v38 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v38;
}

BOOL GEOPBTransitPaymentMethodSuggestionDetailsIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  _BOOL8 v23;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (!a1[*v4])
    {
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0)
            goto LABEL_41;
          v17 = 0;
          do
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
            {
              a1[*v4] = 1;
              goto LABEL_37;
            }
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if ((v21 & 0x80000000) == 0)
              break;
          }
          while (v17++ <= 8);
          goto LABEL_37;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOFormattedStringIsValid(a1))
            goto LABEL_41;
          goto LABEL_36;
        case 6u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOAssetIsValid(a1))
            goto LABEL_41;
LABEL_36:
          PBReaderRecallMark();
          goto LABEL_37;
        default:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_41:
            PBReaderRecallMark();
            return 0;
          }
LABEL_37:
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_40;
          break;
      }
    }
  }
LABEL_40:
  v23 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v23;
}

void sub_1893020B4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

os_unfair_lock_s *_GEOPBTransitPaymentMethodSuggestionIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  if ((*(_BYTE *)(a1 + 76) & 0x28) != 0)
    return (os_unfair_lock_s *)1;
  if ((*(_BYTE *)(a1 + 76) & 0x10) != 0)
    return GEOPBTransitPaymentMethodSuggestionDetailsIsDirty(*(os_unfair_lock_s **)(a1 + 48));
  return 0;
}

os_unfair_lock_s *GEOPBTransitPaymentMethodSuggestionIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  os_unfair_lock_s *v2;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    v2 = _GEOPBTransitPaymentMethodSuggestionIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 16);
    return v2;
  }
  return result;
}

void sub_189302490(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893027EC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189302AB8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPBTransitPaymentMethodSuggestionDetailsReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  int *v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  int *v18;
  int *v19;
  int *v20;
  int *v21;
  char v22;
  unsigned int v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  BOOL v29;
  int v30;
  unint64_t v32;
  BOOL v33;
  int *v34;
  int v35;
  int v36;
  BOOL v37;
  char v38;
  unsigned int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  id v45;
  void *v46;
  int v47;
  GEOFormattedString *v48;
  uint64_t v49;
  void *v50;
  char v51;
  char v52;
  int v53;
  char v54;
  void *v55;
  int v57;
  int *v58;
  char v59;
  char v60;
  char v61;
  char v62;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 76);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 72));
  v7 = v6;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = (vaddv_s16((int16x4_t)(*(_QWORD *)&vshl_u16((uint16x4_t)(*(_QWORD *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 84)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFBFFFAFFFDFFFCLL) & 0xFF01FF01FF01FF01))+ ((*(_BYTE *)(a1 + 84) & 4) != 0)+ ((*(_BYTE *)(a1 + 84) & 2) != 0));
  while (2)
  {
    v14 = 1;
    v15 = 1;
    v16 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v13;
        goto LABEL_8;
      case -3:
        v9 = 1;
        goto LABEL_7;
      case -2:
        v15 = v11;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v17 = v13 > 3;
        v59 = v17 & ~(_BYTE)v12 | v10;
        v60 = v17 | v12 | v59;
        if ((((v17 | v12) | v9) & 1) != 0)
          v18 = 0;
        else
          v18 = a3;
        v61 = (v18 == 0) | v17 | v12;
        v62 = v17 | v12;
        v19 = (int *)MEMORY[0x1E0D82BF0];
        v20 = (int *)MEMORY[0x1E0D82BC8];
        v21 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v13;
LABEL_7:
        v14 = v10;
LABEL_8:
        v15 = v11;
        v16 = v12;
LABEL_10:
        ++v8;
        v10 = v14;
        v11 = v15;
        v12 = v16;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v19) >= *(_QWORD *)(v3 + *v7) || *(_BYTE *)(v3 + *v20))
      goto LABEL_95;
    v22 = 0;
    v23 = 0;
    v24 = 0;
    while (1)
    {
      v25 = *v19;
      v26 = *(_QWORD *)(v3 + v25);
      v27 = v26 + 1;
      if (v26 == -1 || v27 > *(_QWORD *)(v3 + *v7))
        break;
      v28 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v26);
      *(_QWORD *)(v3 + v25) = v27;
      v24 |= (unint64_t)(v28 & 0x7F) << v22;
      if ((v28 & 0x80) == 0)
        goto LABEL_25;
      v22 += 7;
      v29 = v23++ >= 9;
      if (v29)
      {
        v24 = 0;
        v30 = *(unsigned __int8 *)(v3 + *v20);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v20) = 1;
LABEL_25:
    v30 = *(unsigned __int8 *)(v3 + *v20);
    if (*(_BYTE *)(v3 + *v20))
      v24 = 0;
LABEL_27:
    if (v30 || (v24 & 7) == 4)
    {
LABEL_95:
      v57 = 1;
      goto LABEL_96;
    }
    v32 = v24 >> 3;
    v33 = v62;
    if ((v61 & 1) == 0)
    {
      v34 = v18;
      do
      {
        v36 = *v34++;
        v35 = v36;
        v33 = v36 != 0;
        if (v36)
          v37 = v35 == (_DWORD)v32;
        else
          v37 = 1;
      }
      while (!v37);
    }
    switch((int)v32)
    {
      case 1:
        if ((v9 & 1) == 0)
          goto LABEL_80;
        v38 = 0;
        v39 = 0;
        v40 = 0;
        *(_BYTE *)(a1 + 84) |= 1u;
        while (1)
        {
          v41 = *v19;
          v42 = *(_QWORD *)(v3 + v41);
          v43 = v42 + 1;
          if (v42 == -1 || v43 > *(_QWORD *)(v3 + *v7))
            break;
          v44 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v42);
          *(_QWORD *)(v3 + v41) = v43;
          v40 |= (unint64_t)(v44 & 0x7F) << v38;
          if ((v44 & 0x80) == 0)
            goto LABEL_83;
          v38 += 7;
          v29 = v39++ >= 9;
          if (v29)
          {
            v40 = 0;
            goto LABEL_85;
          }
        }
        *(_BYTE *)(v3 + *v20) = 1;
LABEL_83:
        if (*(_BYTE *)(v3 + *v20))
          v40 = 0;
LABEL_85:
        *(_QWORD *)(a1 + 48) = v40;
        goto LABEL_94;
      case 2:
        if (!v33)
          goto LABEL_80;
        if ((*(_BYTE *)(a1 + 84) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_114;
          v52 = 16 * *(_BYTE *)(a1 + 84);
          goto LABEL_92;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_114;
        v48 = objc_alloc_init(GEOFormattedString);
        if (!GEOFormattedStringReadAllFrom((uint64_t)v48, (void *)v3, v11 & 1))
          goto LABEL_113;
        PBReaderRecallMark();
        v49 = 32;
        goto LABEL_73;
      case 3:
        if (!v33 || (*(_BYTE *)(a1 + 84) & 0x10) != 0)
          goto LABEL_80;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_114;
        v48 = objc_alloc_init(GEOFormattedString);
        if (!GEOFormattedStringReadAllFrom((uint64_t)v48, (void *)v3, v11 & 1))
          goto LABEL_113;
        PBReaderRecallMark();
        -[GEOPBTransitPaymentMethodSuggestionDetails _addNoFlagsEducationalScreenPaymentBody:](a1, v48);
        goto LABEL_79;
      case 4:
        if (!v33)
          goto LABEL_80;
        if ((*(_BYTE *)(a1 + 84) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_114;
          v52 = 2 * *(_BYTE *)(a1 + 84);
          goto LABEL_92;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_114;
        v48 = objc_alloc_init(GEOFormattedString);
        if (!GEOFormattedStringReadAllFrom((uint64_t)v48, (void *)v3, v11 & 1))
          goto LABEL_113;
        PBReaderRecallMark();
        v49 = 64;
        goto LABEL_73;
      case 5:
        if (!v33)
          goto LABEL_80;
        if ((*(_BYTE *)(a1 + 84) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_114;
          v52 = 4 * *(_BYTE *)(a1 + 84);
LABEL_92:
          v8 += v52 >> 7;
LABEL_93:
          v20 = (int *)MEMORY[0x1E0D82BC8];
          v7 = (int *)MEMORY[0x1E0D82BD8];
LABEL_94:
          if (!(v60 & 1 | (v8 != 0)))
            goto LABEL_95;
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_114;
        v48 = objc_alloc_init(GEOFormattedString);
        if (GEOFormattedStringReadAllFrom((uint64_t)v48, (void *)v3, v11 & 1))
        {
          PBReaderRecallMark();
          v49 = 56;
LABEL_73:
          v50 = *(void **)(a1 + v49);
          *(_QWORD *)(a1 + v49) = v48;

          --v8;
          goto LABEL_93;
        }
LABEL_113:

LABEL_114:
        v57 = 0;
        v20 = (int *)MEMORY[0x1E0D82BC8];
LABEL_96:
        v58 = &OBJC_IVAR___GEORouteDetails__isNearCurrentlyDisplayedStep;
        if ((v59 & 1) != 0)
LABEL_97:
          *(_BYTE *)(a1 + v58[378]) |= 2u;
        if (v62 & 1 | ((v57 & 1) == 0))
        {
          *(_BYTE *)(a1 + v58[378]) |= 8u;
          *(_BYTE *)(a1 + v58[378]) |= 0x10u;
          *(_BYTE *)(a1 + v58[378]) |= 0x40u;
          *(_BYTE *)(a1 + v58[378]) |= 0x20u;
          *(_BYTE *)(a1 + v58[378]) |= 4u;
        }
        else if (v18)
        {
          while (1)
          {
            v53 = *v18++;
            v54 = 8;
            switch(v53)
            {
              case 0:
                goto LABEL_107;
              case 2:
                goto LABEL_106;
              case 3:
                v54 = 16;
                goto LABEL_106;
              case 4:
                v54 = 64;
                goto LABEL_106;
              case 5:
                v54 = 32;
                goto LABEL_106;
              case 6:
                v54 = 4;
LABEL_106:
                *(_BYTE *)(a1 + v58[378]) |= v54;
                break;
              default:
                continue;
            }
          }
        }
LABEL_107:
        if (v57)
          v3 = *(_BYTE *)(v3 + *v20) == 0;
        else
          v3 = 0;
        if ((v62 & 1) != 0)
        {
          v55 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      case 6:
        if (!v33 || (*(_BYTE *)(a1 + 84) & 4) != 0)
          goto LABEL_80;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_114;
        v48 = objc_alloc_init(GEOAsset);
        if (!GEOAssetReadAllFrom((uint64_t)v48, (void *)v3))
          goto LABEL_113;
        PBReaderRecallMark();
        -[GEOPBTransitPaymentMethodSuggestionDetails _addNoFlagsEducationalScreenAsset:](a1, v48);
LABEL_79:

        goto LABEL_93;
      default:
        if ((v59 & 1) == 0 || (*(_BYTE *)(a1 + 84) & 2) != 0)
        {
LABEL_80:
          v51 = PBReaderSkipValueWithTag();
          v7 = (int *)MEMORY[0x1E0D82BD8];
          v20 = (int *)MEMORY[0x1E0D82BC8];
          if ((v51 & 1) == 0)
          {
            v57 = 0;
            goto LABEL_96;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v45 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v46 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v45;

          }
          v47 = PBUnknownFieldAdd();
          v20 = (int *)MEMORY[0x1E0D82BC8];
          v7 = (int *)MEMORY[0x1E0D82BD8];
          if (!v47)
          {
            v57 = 0;
            v58 = &OBJC_IVAR___GEORouteDetails__isNearCurrentlyDisplayedStep;
            goto LABEL_97;
          }
        }
        goto LABEL_94;
    }
  }
}

void sub_189303414(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18930374C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189303888(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893039C8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189304820(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPBTransitPaymentMethodSuggestionDetailsCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  _BYTE v20[128];
  _BYTE v21[128];
  uint64_t v22;

  v22 = *MEMORY[0x1E0C80C00];
  objc_msgSend(a1[4], "readAll:", 1);
  v18 = 0u;
  v19 = 0u;
  v16 = 0u;
  v17 = 0u;
  v2 = a1[5];
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v16, v21, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v17;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v17 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v16 + 1) + 8 * v6++), "readAll:", 1);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v16, v21, 16);
    }
    while (v4);
  }

  objc_msgSend(a1[8], "readAll:", 1);
  objc_msgSend(a1[7], "readAll:", 1);
  v14 = 0u;
  v15 = 0u;
  v12 = 0u;
  v13 = 0u;
  v7 = a1[3];
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v12, v20, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v13;
    do
    {
      v11 = 0;
      do
      {
        if (*(_QWORD *)v13 != v10)
          objc_enumerationMutation(v7);
        objc_msgSend(*(id *)(*((_QWORD *)&v12 + 1) + 8 * v11++), "readAll:", 1, (_QWORD)v12);
      }
      while (v9 != v11);
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v12, v20, 16);
    }
    while (v9);
  }

}

unint64_t GEOPBTransitPaymentMethodSuggestionDetailsReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 76))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPBTransitPaymentMethodSuggestionDetailsReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 80));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 72) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 76) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPBTransitPaymentMethodSuggestionDetailsReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPBTransitPaymentMethodSuggestionDetailsReadAllFrom_initialTag;
  Specified = GEOPBTransitPaymentMethodSuggestionDetailsReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPBTransitPaymentMethodSuggestionDetailsCallReadAllRecursiveWithoutSynchronized((id *)a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 80));
  return Specified;
}

void sub_189304B7C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPBTransitPaymentMethodSuggestionDetailsReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOPBTransitPaymentMethodSuggestionDetailsReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189304BDC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189304F0C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPBTransitPaymentMethodSuggestionDetailsIsDirty(uint64_t a1)
{
  int v2;
  uint64_t v3;
  id v5;
  uint64_t v6;
  uint64_t i;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _BYTE v12[128];
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  v2 = *(char *)(a1 + 84);
  if (v2 < 0)
    return 1;
  if ((v2 & 8) != 0)
  {
    if ((GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(a1 + 32)) & 1) != 0)
      return 1;
    LOBYTE(v2) = *(_BYTE *)(a1 + 84);
  }
  if ((v2 & 0x10) != 0)
    return 1;
  if ((v2 & 0x40) != 0)
  {
    if ((GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(a1 + 64)) & 1) != 0)
      return 1;
    LOBYTE(v2) = *(_BYTE *)(a1 + 84);
  }
  if ((v2 & 0x20) == 0)
    goto LABEL_12;
  if ((GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(a1 + 56)) & 1) != 0)
    return 1;
  LOBYTE(v2) = *(_BYTE *)(a1 + 84);
LABEL_12:
  if ((v2 & 4) != 0)
    return 1;
  if ((v2 & 0x10) == 0)
    return 0;
  v10 = 0u;
  v11 = 0u;
  v8 = 0u;
  v9 = 0u;
  v5 = *(id *)(a1 + 40);
  v3 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
  if (v3)
  {
    v6 = *(_QWORD *)v9;
    while (2)
    {
      for (i = 0; i != v3; ++i)
      {
        if (*(_QWORD *)v9 != v6)
          objc_enumerationMutation(v5);
        if ((GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(*((_QWORD *)&v8 + 1) + 8 * i)) & 1) != 0)
        {
          v3 = 1;
          goto LABEL_27;
        }
      }
      v3 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
      if (v3)
        continue;
      break;
    }
  }
LABEL_27:

  return v3;
}

os_unfair_lock_s *GEOPBTransitPaymentMethodSuggestionDetailsIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOPBTransitPaymentMethodSuggestionDetailsIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 20);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_189305634(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189305B4C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189305FC0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPBTransitRoutingIncidentMessageReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  int *v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  unsigned __int8 v16;
  char v17;
  int *v18;
  int *v19;
  int v20;
  int *v21;
  int *v22;
  char v23;
  unsigned int v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  BOOL v30;
  int v31;
  int v32;
  int *v34;
  unint64_t v35;
  BOOL v36;
  int *v37;
  int v38;
  int v39;
  BOOL v40;
  char v41;
  unsigned int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  char v47;
  uint64_t v48;
  void *v49;
  int v50;
  char v51;
  unsigned int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  char v57;
  id v58;
  void *v59;
  int v60;
  char v61;
  char v62;
  char v63;
  unsigned int v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  char v69;
  int v70;
  int v71;
  char v72;
  void *v73;
  char v75;
  unsigned __int8 v76;
  char v77;
  char v78;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 60);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 56));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = &OBJC_IVAR___GEOPDRelatedEntitySection__reader;
  v12 = ((*(unsigned __int8 *)(a1 + 72) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 72) >> 2) & 1)
      + ((*(unsigned __int8 *)(a1 + 72) >> 1) & 1);
  while (2)
  {
    v13 = 1;
    v14 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v12;
        v13 = v7;
        goto LABEL_8;
      case -3:
        v9 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_8;
      case 0:
        v15 = v12 != 0;
        v16 = v15 | v7;
        v17 = v15 & ~(_BYTE)v7 | v8;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        if (((v16 | v9) & 1) != 0)
          v19 = 0;
        else
          v19 = a3;
        v20 = 1;
        if (*(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(v3 + *v6))
          goto LABEL_95;
        v75 = v17;
        v77 = v16 | v17;
        v78 = (v19 == 0) | v16;
        v21 = (int *)MEMORY[0x1E0D82BC8];
        v22 = (int *)MEMORY[0x1E0D82BB8];
        v76 = v16;
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v7;
        v14 = v8;
LABEL_8:
        ++v10;
        v7 = v13;
        v8 = v14;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_BYTE *)(v3 + *v21))
      goto LABEL_92;
    v23 = 0;
    v24 = 0;
    v25 = 0;
    while (1)
    {
      v26 = *v18;
      v27 = *(_QWORD *)(v3 + v26);
      v28 = v27 + 1;
      if (v27 == -1 || v28 > *(_QWORD *)(v3 + *v6))
        break;
      v29 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v27);
      *(_QWORD *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0)
        goto LABEL_23;
      v23 += 7;
      v30 = v24++ >= 9;
      if (v30)
      {
        v25 = 0;
        v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_25;
      }
    }
    *(_BYTE *)(v3 + *v21) = 1;
LABEL_23:
    v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(_BYTE *)(v3 + *v21))
      v25 = 0;
LABEL_25:
    v32 = v25 & 7;
    if (v31 || v32 == 4)
    {
LABEL_92:
      v20 = 1;
      goto LABEL_93;
    }
    v34 = v21;
    v35 = v25 >> 3;
    v36 = v16;
    if ((v78 & 1) == 0)
    {
      v37 = v19;
      do
      {
        v39 = *v37++;
        v38 = v39;
        v36 = v39 != 0;
        if (v39)
          v40 = v38 == (_DWORD)v35;
        else
          v40 = 1;
      }
      while (!v40);
    }
    if ((_DWORD)v35 == 1)
      break;
    if ((_DWORD)v35 == 2)
    {
      if (!v36 || (*(_BYTE *)(a1 + 72) & 4) != 0)
        goto LABEL_71;
      v21 = v34;
      if (v32 == 2)
      {
        v50 = PBReaderPlaceMark();
        v6 = (int *)MEMORY[0x1E0D82BD8];
        if (!v50)
          goto LABEL_114;
        while (*(_QWORD *)(v3 + *v18) < *(_QWORD *)(v3 + *v6) && !*(_BYTE *)(v3 + *v21))
        {
          v51 = 0;
          v52 = 0;
          v53 = 0;
          while (1)
          {
            v54 = *v18;
            v55 = *(_QWORD *)(v3 + v54);
            v56 = v55 + 1;
            if (v55 == -1 || v56 > *(_QWORD *)(v3 + *v6))
              break;
            v57 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v55);
            *(_QWORD *)(v3 + v54) = v56;
            v53 |= (unint64_t)(v57 & 0x7F) << v51;
            if (v57 < 0)
            {
              v51 += 7;
              v30 = v52++ >= 9;
              if (!v30)
                continue;
            }
            goto LABEL_64;
          }
          *(_BYTE *)(v3 + *v21) = 1;
LABEL_64:
          PBRepeatedUInt32Add();
        }
        PBReaderRecallMark();
      }
      else
      {
        v63 = 0;
        v64 = 0;
        v65 = 0;
        v6 = (int *)MEMORY[0x1E0D82BD8];
        while (1)
        {
          v66 = *v18;
          v67 = *(_QWORD *)(v3 + v66);
          v68 = v67 + 1;
          if (v67 == -1 || v68 > *(_QWORD *)(v3 + *v6))
            break;
          v69 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v67);
          *(_QWORD *)(v3 + v66) = v68;
          v65 |= (unint64_t)(v69 & 0x7F) << v63;
          if (v69 < 0)
          {
            v63 += 7;
            v30 = v64++ >= 9;
            if (!v30)
              continue;
          }
          goto LABEL_90;
        }
        *(_BYTE *)(v3 + *v21) = 1;
LABEL_90:
        PBRepeatedUInt32Add();
      }
      goto LABEL_91;
    }
    if ((_DWORD)v35 == 2047)
    {
      if ((v9 & 1) != 0)
      {
        v41 = 0;
        v42 = 0;
        v43 = 0;
        *(_BYTE *)(a1 + 72) |= 1u;
        v21 = v34;
        v6 = (int *)MEMORY[0x1E0D82BD8];
        while (1)
        {
          v44 = *v18;
          v45 = *(_QWORD *)(v3 + v44);
          v46 = v45 + 1;
          if (v45 == -1 || v46 > *(_QWORD *)(v3 + *v6))
            break;
          v47 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v45);
          *(_QWORD *)(v3 + v44) = v46;
          v43 |= (unint64_t)(v47 & 0x7F) << v41;
          if ((v47 & 0x80) == 0)
            goto LABEL_76;
          v41 += 7;
          v30 = v42++ >= 9;
          if (v30)
          {
            LODWORD(v43) = 0;
            goto LABEL_78;
          }
        }
        *(_BYTE *)(v3 + *v21) = 1;
LABEL_76:
        if (*(_BYTE *)(v3 + *v21))
          LODWORD(v43) = 0;
LABEL_78:
        *(_DWORD *)(a1 + 68) = v43;
        goto LABEL_72;
      }
LABEL_71:
      v61 = PBReaderSkipValueWithTag();
      v16 = v76;
      v21 = v34;
      v6 = (int *)MEMORY[0x1E0D82BD8];
      if ((v61 & 1) != 0)
        goto LABEL_72;
      v20 = 0;
LABEL_93:
      v11 = &OBJC_IVAR___GEOPDRelatedEntitySection__reader;
      goto LABEL_94;
    }
    if ((v75 & 1) == 0 || (*(_BYTE *)(a1 + 72) & 2) != 0)
      goto LABEL_71;
    if (!*(_QWORD *)(a1 + 16))
    {
      v58 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
      v59 = *(void **)(a1 + 16);
      *(_QWORD *)(a1 + 16) = v58;

    }
    v60 = PBUnknownFieldAdd();
    v16 = v76;
    v21 = v34;
    v6 = (int *)MEMORY[0x1E0D82BD8];
    if (!v60)
    {
      v20 = 0;
      v11 = &OBJC_IVAR___GEOPDRelatedEntitySection__reader;
LABEL_96:
      *(_BYTE *)(a1 + v11[227]) |= 2u;
      goto LABEL_97;
    }
LABEL_72:
    if (!(v77 & 1 | (v10 != 0)) || *(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6))
      goto LABEL_92;
  }
  if (!v36)
    goto LABEL_71;
  v21 = v34;
  if ((*(_BYTE *)(a1 + 72) & 8) == 0)
  {
    PBReaderReadString();
    v48 = objc_claimAutoreleasedReturnValue();
    v49 = *(void **)(a1 + 48);
    *(_QWORD *)(a1 + 48) = v48;

    --v10;
    v16 = v76;
    v6 = (int *)MEMORY[0x1E0D82BD8];
    goto LABEL_72;
  }
  v62 = PBReaderSkipValueWithTag();
  v6 = (int *)MEMORY[0x1E0D82BD8];
  if ((v62 & 1) != 0)
  {
    v10 += *(unsigned __int8 *)(a1 + 72) << 28 >> 31;
LABEL_91:
    v16 = v76;
    goto LABEL_72;
  }
LABEL_114:
  v20 = 0;
  v11 = &OBJC_IVAR___GEOPDRelatedEntitySection__reader;
  v16 = v76;
LABEL_94:
  v17 = v75;
LABEL_95:
  if ((v17 & 1) != 0)
    goto LABEL_96;
LABEL_97:
  if (v16 & 1 | ((v20 & 1) == 0))
  {
    *(_BYTE *)(a1 + v11[227]) |= 8u;
    *(_BYTE *)(a1 + v11[227]) |= 4u;
    goto LABEL_107;
  }
  if (v19)
  {
    while (2)
    {
      while (1)
      {
        v71 = *v19++;
        v70 = v71;
        if (v71 == 1)
          break;
        if (v70 == 2)
        {
          v72 = 4;
          goto LABEL_106;
        }
        if (!v70)
          goto LABEL_107;
      }
      v72 = 8;
LABEL_106:
      *(_BYTE *)(a1 + v11[227]) |= v72;
      continue;
    }
  }
LABEL_107:
  if (v20)
  {
    v3 = *(_BYTE *)(v3 + (int)*MEMORY[0x1E0D82BC8]) == 0;
    if ((v16 & 1) == 0)
      return v3;
LABEL_111:
    v73 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  else
  {
    v3 = 0;
    if ((v16 & 1) != 0)
      goto LABEL_111;
  }
  return v3;
}

void sub_189306864(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189306D04(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPBTransitRoutingIncidentMessageReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 60))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPBTransitRoutingIncidentMessageReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 60) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPBTransitRoutingIncidentMessageReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPBTransitRoutingIncidentMessageReadAllFrom_initialTag;
  Specified = GEOPBTransitRoutingIncidentMessageReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_1893071C8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPBTransitRoutingIncidentMessageIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  BOOL v13;
  int v14;
  int v15;
  unint64_t v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int v22;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  unsigned int v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  int v33;
  _BOOL8 v34;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_53;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        v13 = v7++ >= 9;
        if (v13)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        goto LABEL_53;
      v17 = v8 >> 3;
      if ((v8 >> 3) == 1)
        break;
      if ((_DWORD)v17 != 2)
      {
        if ((_DWORD)v17 == 2047)
        {
          if ((v8 & 7) != 0)
            goto LABEL_55;
          v18 = 0;
          while (1)
          {
            v19 = *v2;
            v20 = *(_QWORD *)&a1[v19];
            v21 = v20 + 1;
            if (v20 == -1 || v21 > *(_QWORD *)&a1[*v3])
              break;
            v22 = *(char *)(*(_QWORD *)&a1[*v5] + v20);
            *(_QWORD *)&a1[v19] = v21;
            if (v22 < 0 && v18++ <= 8)
              continue;
            goto LABEL_52;
          }
LABEL_40:
          a1[*v4] = 1;
          goto LABEL_52;
        }
        goto LABEL_38;
      }
      if (v15 != 2)
      {
        if ((v8 & 7) != 0)
          goto LABEL_55;
        while (1)
        {
          v24 = *v2;
          v25 = *(_QWORD *)&a1[v24];
          v26 = v25 + 1;
          if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
            goto LABEL_40;
          v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
          *(_QWORD *)&a1[v24] = v26;
          if (v27 < 0)
          {
            v28 = v15++;
            if (v28 <= 8)
              continue;
          }
          goto LABEL_52;
        }
      }
      if (!PBReaderPlaceMark())
      {
LABEL_55:
        PBReaderRecallMark();
        return 0;
      }
LABEL_42:
      while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
      {
        v29 = a1[*v4];
        if (a1[*v4])
          break;
        while (1)
        {
          v30 = *v2;
          v31 = *(_QWORD *)&a1[v30];
          v32 = v31 + 1;
          if (v31 == -1 || v32 > *(_QWORD *)&a1[*v3])
            break;
          v33 = *(char *)(*(_QWORD *)&a1[*v5] + v31);
          *(_QWORD *)&a1[v30] = v32;
          if (v33 < 0)
          {
            v13 = v29++ >= 9;
            if (!v13)
              continue;
          }
          goto LABEL_42;
        }
        a1[*v4] = 1;
      }
      PBReaderRecallMark();
LABEL_52:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_53;
    }
    if (v15 != 2)
      goto LABEL_55;
LABEL_38:
    if ((PBReaderSkipValueWithTag() & 1) == 0)
      goto LABEL_55;
    goto LABEL_52;
  }
LABEL_53:
  v34 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v34;
}

void sub_189307698(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPBTransitRoutingIncidentMessageIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  v2 = (*(_BYTE *)(a1 + 72) & 0x1C) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return v2;
}

void sub_1893078B0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPBTransitScheduleLookupParametersReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  id v25;
  void *v26;
  char v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  char v33;
  unsigned int v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  char v38;
  uint64_t v39;
  void *v40;
  char v41;
  unsigned int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  char v47;
  char v48;
  unsigned int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  uint64_t v55;
  BOOL v56;
  uint64_t v57;
  _BOOL8 v58;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        switch((v10 >> 3))
        {
          case 1u:
            v18 = 0;
            v19 = 0;
            v20 = 0;
            *(_BYTE *)(a1 + 52) |= 1u;
            while (1)
            {
              v21 = *v4;
              v22 = *(_QWORD *)&v3[v21];
              v23 = v22 + 1;
              if (v22 == -1 || v23 > *(_QWORD *)&v3[*v5])
                break;
              v24 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v22);
              *(_QWORD *)&v3[v21] = v23;
              v20 |= (unint64_t)(v24 & 0x7F) << v18;
              if ((v24 & 0x80) == 0)
                goto LABEL_61;
              v18 += 7;
              v15 = v19++ >= 9;
              if (v15)
              {
                v20 = 0;
                goto LABEL_63;
              }
            }
            v3[*v6] = 1;
LABEL_61:
            if (v3[*v6])
              v20 = 0;
LABEL_63:
            v55 = 16;
            goto LABEL_72;
          case 2u:
            v27 = 0;
            v28 = 0;
            v20 = 0;
            *(_BYTE *)(a1 + 52) |= 4u;
            while (2)
            {
              v29 = *v4;
              v30 = *(_QWORD *)&v3[v29];
              v31 = v30 + 1;
              if (v30 == -1 || v31 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v32 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v30);
                *(_QWORD *)&v3[v29] = v31;
                v20 |= (unint64_t)(v32 & 0x7F) << v27;
                if (v32 < 0)
                {
                  v27 += 7;
                  v15 = v28++ >= 9;
                  if (v15)
                  {
                    v20 = 0;
                    goto LABEL_67;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              v20 = 0;
LABEL_67:
            v55 = 40;
            goto LABEL_72;
          case 3u:
            v33 = 0;
            v34 = 0;
            v20 = 0;
            *(_BYTE *)(a1 + 52) |= 2u;
            while (2)
            {
              v35 = *v4;
              v36 = *(_QWORD *)&v3[v35];
              v37 = v36 + 1;
              if (v36 == -1 || v37 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v38 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v36);
                *(_QWORD *)&v3[v35] = v37;
                v20 |= (unint64_t)(v38 & 0x7F) << v33;
                if (v38 < 0)
                {
                  v33 += 7;
                  v15 = v34++ >= 9;
                  if (v15)
                  {
                    v20 = 0;
                    goto LABEL_71;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              v20 = 0;
LABEL_71:
            v55 = 24;
LABEL_72:
            *(_QWORD *)(a1 + v55) = v20;
            continue;
          case 4u:
            PBReaderReadData();
            v39 = objc_claimAutoreleasedReturnValue();
            v40 = *(void **)(a1 + 32);
            *(_QWORD *)(a1 + 32) = v39;

            continue;
          case 5u:
            v41 = 0;
            v42 = 0;
            v43 = 0;
            *(_BYTE *)(a1 + 52) |= 8u;
            while (2)
            {
              v44 = *v4;
              v45 = *(_QWORD *)&v3[v44];
              v46 = v45 + 1;
              if (v45 == -1 || v46 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v47 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v45);
                *(_QWORD *)&v3[v44] = v46;
                v43 |= (unint64_t)(v47 & 0x7F) << v41;
                if (v47 < 0)
                {
                  v41 += 7;
                  v15 = v42++ >= 9;
                  if (v15)
                  {
                    v43 = 0;
                    goto LABEL_76;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              v43 = 0;
LABEL_76:
            v56 = v43 != 0;
            v57 = 48;
            goto LABEL_81;
          case 6u:
            v48 = 0;
            v49 = 0;
            v50 = 0;
            *(_BYTE *)(a1 + 52) |= 0x10u;
            break;
          default:
            if (!*(_QWORD *)(a1 + 8))
            {
              v25 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
              v26 = *(void **)(a1 + 8);
              *(_QWORD *)(a1 + 8) = v25;

            }
            if (!PBUnknownFieldAdd())
              goto LABEL_84;
            continue;
        }
        while (1)
        {
          v51 = *v4;
          v52 = *(_QWORD *)&v3[v51];
          v53 = v52 + 1;
          if (v52 == -1 || v53 > *(_QWORD *)&v3[*v5])
            break;
          v54 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v52);
          *(_QWORD *)&v3[v51] = v53;
          v50 |= (unint64_t)(v54 & 0x7F) << v48;
          if ((v54 & 0x80) == 0)
            goto LABEL_78;
          v48 += 7;
          v15 = v49++ >= 9;
          if (v15)
          {
            v50 = 0;
            goto LABEL_80;
          }
        }
        v3[*v6] = 1;
LABEL_78:
        if (v3[*v6])
          v50 = 0;
LABEL_80:
        v56 = v50 != 0;
        v57 = 49;
LABEL_81:
        *(_BYTE *)(a1 + v57) = v56;
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v58 = v3[*v6] == 0;
  }
  else
  {
LABEL_84:
    v58 = 0;
  }
  objc_sync_exit(v3);

  return v58;
}

void sub_189308ADC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPBTransitScheduleLookupParametersReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOPBTransitScheduleLookupParametersReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189308B3C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPBTransitScheduleLookupParametersIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  int v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  int v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  int v42;
  _BOOL8 v43;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0)
            goto LABEL_66;
          v17 = 0;
          while (1)
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
              goto LABEL_62;
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if (v21 < 0)
            {
              v22 = v17++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_63;
          }
        case 2u:
          if ((v8 & 7) != 0)
            goto LABEL_66;
          v23 = 0;
          while (1)
          {
            v24 = *v2;
            v25 = *(_QWORD *)&a1[v24];
            v26 = v25 + 1;
            if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
              goto LABEL_62;
            v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
            *(_QWORD *)&a1[v24] = v26;
            if (v27 < 0)
            {
              v22 = v23++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_63;
          }
        case 3u:
          if ((v8 & 7) != 0)
            goto LABEL_66;
          v28 = 0;
          while (1)
          {
            v29 = *v2;
            v30 = *(_QWORD *)&a1[v29];
            v31 = v30 + 1;
            if (v30 == -1 || v31 > *(_QWORD *)&a1[*v3])
              goto LABEL_62;
            v32 = *(char *)(*(_QWORD *)&a1[*v5] + v30);
            *(_QWORD *)&a1[v29] = v31;
            if (v32 < 0)
            {
              v22 = v28++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_63;
          }
        case 4u:
          if (v15 == 2)
            goto LABEL_44;
          goto LABEL_66;
        case 5u:
          if ((v8 & 7) != 0)
            goto LABEL_66;
          v33 = 0;
          while (1)
          {
            v34 = *v2;
            v35 = *(_QWORD *)&a1[v34];
            v36 = v35 + 1;
            if (v35 == -1 || v36 > *(_QWORD *)&a1[*v3])
              goto LABEL_62;
            v37 = *(char *)(*(_QWORD *)&a1[*v5] + v35);
            *(_QWORD *)&a1[v34] = v36;
            if (v37 < 0)
            {
              v22 = v33++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_63;
          }
        case 6u:
          if ((v8 & 7) != 0)
            goto LABEL_66;
          v38 = 0;
          break;
        default:
LABEL_44:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_66:
          v43 = 0;
          goto LABEL_65;
      }
      while (1)
      {
        v39 = *v2;
        v40 = *(_QWORD *)&a1[v39];
        v41 = v40 + 1;
        if (v40 == -1 || v41 > *(_QWORD *)&a1[*v3])
          break;
        v42 = *(char *)(*(_QWORD *)&a1[*v5] + v40);
        *(_QWORD *)&a1[v39] = v41;
        if (v42 < 0)
        {
          v22 = v38++ > 8;
          if (!v22)
            continue;
        }
        goto LABEL_63;
      }
LABEL_62:
      a1[*v4] = 1;
LABEL_63:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v43 = a1[*v4] == 0;
LABEL_65:
  PBReaderRecallMark();
  return v43;
}

void sub_1893098A8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPBTransitStationReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  int *v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  BOOL v28;
  int v29;
  unint64_t v31;
  BOOL v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  char v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  char v44;
  unsigned int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  char v50;
  id v51;
  void *v52;
  int v53;
  GEOLatLng *v54;
  void *v55;
  char v56;
  unsigned int v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  char v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  char v65;
  int v66;
  int v67;
  char v68;
  void *v69;
  int v71;
  int *v72;
  char v73;
  char v74;
  char v75;
  char v76;
  char v77;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 60);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 56));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = vaddv_s16((int16x4_t)(*(_QWORD *)&vshl_u16((uint16x4_t)(*(_QWORD *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 76)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFDFFFBFFFCFFFALL) & 0xFF01FF01FF01FF01));
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 > 1;
        v73 = v16 & ~(_BYTE)v11 | v9;
        v74 = v8;
        v75 = v16 | v11 | v73;
        if ((((v16 | v11) | v8) & 1) != 0)
          v17 = 0;
        else
          v17 = a3;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v76 = (v17 == 0) | v16 | v11;
        v77 = v16 | v11;
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v7;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v19))
      goto LABEL_106;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0)
        goto LABEL_25;
      v21 += 7;
      v28 = v22++ >= 9;
      if (v28)
      {
        v23 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_25:
    v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_27:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_106:
      v71 = 1;
      goto LABEL_107;
    }
    v31 = v23 >> 3;
    v32 = v77;
    if ((v76 & 1) == 0)
    {
      v33 = v17;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 3:
        if ((v74 & 1) == 0)
          goto LABEL_84;
        v37 = 0;
        v38 = 0;
        v39 = 0;
        *(_BYTE *)(a1 + 76) |= 1u;
        while (1)
        {
          v40 = *v18;
          v41 = *(_QWORD *)(v3 + v40);
          v42 = v41 + 1;
          if (v41 == -1 || v42 > *(_QWORD *)(v3 + *v6))
            break;
          v43 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v41);
          *(_QWORD *)(v3 + v40) = v42;
          v39 |= (unint64_t)(v43 & 0x7F) << v37;
          if ((v43 & 0x80) == 0)
            goto LABEL_87;
          v37 += 7;
          v28 = v38++ >= 9;
          if (v28)
          {
            v39 = 0;
            goto LABEL_89;
          }
        }
        *(_BYTE *)(v3 + *v19) = 1;
LABEL_87:
        if (*(_BYTE *)(v3 + *v19))
          v39 = 0;
LABEL_89:
        *(_QWORD *)(a1 + 32) = v39;
        goto LABEL_105;
      case 4:
        if (!v32)
          goto LABEL_84;
        if ((*(_BYTE *)(a1 + 76) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_128;
          v65 = 8 * *(_BYTE *)(a1 + 76);
LABEL_98:
          v7 += v65 >> 7;
          goto LABEL_99;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_128;
        v54 = objc_alloc_init(GEOLatLng);
        if (GEOLatLngReadAllFrom((uint64_t)v54, (void *)v3))
        {
          PBReaderRecallMark();
          v55 = *(void **)(a1 + 24);
          *(_QWORD *)(a1 + 24) = v54;
LABEL_83:

          --v7;
LABEL_99:
          v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_105:
          if (!(v75 & 1 | (v7 != 0)))
            goto LABEL_106;
          continue;
        }
LABEL_127:

LABEL_128:
        v71 = 0;
        v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_107:
        v72 = &OBJC_IVAR___GEORouteDetails__isNearCurrentlyDisplayedStep;
        if ((v73 & 1) != 0)
LABEL_108:
          *(_BYTE *)(a1 + v72[400]) |= 8u;
        if (v77 & 1 | ((v71 & 1) == 0))
        {
          *(_BYTE *)(a1 + v72[400]) |= 0x10u;
          *(_BYTE *)(a1 + v72[400]) |= 0x40u;
          *(_BYTE *)(a1 + v72[400]) |= 0x20u;
          goto LABEL_121;
        }
        if (v17)
        {
          while (2)
          {
            while (1)
            {
              v67 = *v17++;
              v66 = v67;
              if (v67 > 11)
                break;
              if (v66 == 4)
              {
                v68 = 16;
LABEL_119:
                *(_BYTE *)(a1 + v72[400]) |= v68;
                continue;
              }
              if (!v66)
                goto LABEL_121;
            }
            if (v66 == 13)
            {
              v68 = 32;
            }
            else
            {
              if (v66 != 12)
                continue;
              v68 = 64;
            }
            goto LABEL_119;
          }
        }
LABEL_121:
        if (v71)
          v3 = *(_BYTE *)(v3 + *v19) == 0;
        else
          v3 = 0;
        if ((v77 & 1) != 0)
        {
          v69 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      case 5:
      case 6:
      case 7:
      case 9:
      case 10:
      case 11:
        goto LABEL_56;
      case 8:
        if ((v74 & 1) == 0)
          goto LABEL_84;
        v56 = 0;
        v57 = 0;
        v46 = 0;
        *(_BYTE *)(a1 + 76) |= 4u;
        while (2)
        {
          v58 = *v18;
          v59 = *(_QWORD *)(v3 + v58);
          v60 = v59 + 1;
          if (v59 == -1 || v60 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v19) = 1;
          }
          else
          {
            v61 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v59);
            *(_QWORD *)(v3 + v58) = v60;
            v46 |= (unint64_t)(v61 & 0x7F) << v56;
            if (v61 < 0)
            {
              v56 += 7;
              v28 = v57++ >= 9;
              if (v28)
              {
                LODWORD(v46) = 0;
                goto LABEL_93;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v19))
          LODWORD(v46) = 0;
LABEL_93:
        v64 = 72;
        goto LABEL_104;
      case 12:
        if (!v32 || (*(_BYTE *)(a1 + 76) & 0x40) != 0)
          goto LABEL_84;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_128;
        v54 = objc_alloc_init(GEOPBTransitZoomRangeString);
        if (!GEOPBTransitZoomRangeStringReadAllFrom((uint64_t)v54, (void *)v3, v10 & 1))
          goto LABEL_127;
        PBReaderRecallMark();
        -[GEOPBTransitStation _addNoFlagsZoomName:](a1, v54);

        goto LABEL_99;
      case 13:
        if (!v32)
          goto LABEL_84;
        if ((*(_BYTE *)(a1 + 76) & 0x20) == 0)
        {
          PBReaderReadString();
          v62 = objc_claimAutoreleasedReturnValue();
          v55 = *(void **)(a1 + 40);
          *(_QWORD *)(a1 + 40) = v62;
          goto LABEL_83;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_128;
        v65 = 4 * *(_BYTE *)(a1 + 76);
        goto LABEL_98;
      default:
        if ((_DWORD)v31 == 2047)
        {
          if ((v74 & 1) != 0)
          {
            v44 = 0;
            v45 = 0;
            v46 = 0;
            *(_BYTE *)(a1 + 76) |= 2u;
            while (1)
            {
              v47 = *v18;
              v48 = *(_QWORD *)(v3 + v47);
              v49 = v48 + 1;
              if (v48 == -1 || v49 > *(_QWORD *)(v3 + *v6))
                break;
              v50 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v48);
              *(_QWORD *)(v3 + v47) = v49;
              v46 |= (unint64_t)(v50 & 0x7F) << v44;
              if ((v50 & 0x80) == 0)
                goto LABEL_101;
              v44 += 7;
              v28 = v45++ >= 9;
              if (v28)
              {
                LODWORD(v46) = 0;
                goto LABEL_103;
              }
            }
            *(_BYTE *)(v3 + *v19) = 1;
LABEL_101:
            if (*(_BYTE *)(v3 + *v19))
              LODWORD(v46) = 0;
LABEL_103:
            v64 = 68;
LABEL_104:
            *(_DWORD *)(a1 + v64) = v46;
            goto LABEL_105;
          }
LABEL_84:
          v63 = PBReaderSkipValueWithTag();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if ((v63 & 1) == 0)
          {
            v71 = 0;
            goto LABEL_107;
          }
          goto LABEL_105;
        }
LABEL_56:
        if ((v73 & 1) == 0 || (*(_BYTE *)(a1 + 76) & 8) != 0)
          goto LABEL_84;
        if (!*(_QWORD *)(a1 + 16))
        {
          v51 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
          v52 = *(void **)(a1 + 16);
          *(_QWORD *)(a1 + 16) = v51;

        }
        v53 = PBUnknownFieldAdd();
        v19 = (int *)MEMORY[0x1E0D82BC8];
        if (!v53)
        {
          v71 = 0;
          v72 = &OBJC_IVAR___GEORouteDetails__isNearCurrentlyDisplayedStep;
          goto LABEL_108;
        }
        goto LABEL_105;
    }
  }
}

void sub_18930A3FC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18930A730(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18930B260(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPBTransitStationCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _BYTE v11[128];
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  objc_msgSend(*(id *)(a1 + 24), "readAll:", 1);
  v9 = 0u;
  v10 = 0u;
  v7 = 0u;
  v8 = 0u;
  v2 = *(id *)(a1 + 48);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v8;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v8 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v7 + 1) + 8 * v6++), "readAll:", 1, (_QWORD)v7);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
    }
    while (v4);
  }

}

unint64_t GEOPBTransitStationReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 60))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPBTransitStationReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 60) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPBTransitStationReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPBTransitStationReadAllFrom_initialTag;
  Specified = GEOPBTransitStationReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPBTransitStationCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_18930B504(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPBTransitStationReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOPBTransitStationReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18930B564(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPBTransitStationIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  int v32;
  _BOOL8 v33;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (!a1[*v4])
    {
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 3u:
          if ((v8 & 7) != 0)
            goto LABEL_59;
          v17 = 0;
          while (1)
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
              goto LABEL_49;
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if (v21 < 0)
            {
              v22 = v17++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_56;
          }
        case 4u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOLatLngIsValid(a1))
            goto LABEL_59;
          goto LABEL_53;
        case 5u:
        case 6u:
        case 7u:
        case 9u:
        case 0xAu:
        case 0xBu:
          goto LABEL_55;
        case 8u:
          if ((v8 & 7) != 0)
            goto LABEL_59;
          v28 = 0;
          while (1)
          {
            v29 = *v2;
            v30 = *(_QWORD *)&a1[v29];
            v31 = v30 + 1;
            if (v30 == -1 || v31 > *(_QWORD *)&a1[*v3])
              goto LABEL_49;
            v32 = *(char *)(*(_QWORD *)&a1[*v5] + v30);
            *(_QWORD *)&a1[v29] = v31;
            if (v32 < 0)
            {
              v22 = v28++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_56;
          }
        case 0xCu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPBTransitZoomRangeStringIsValid(a1))
            goto LABEL_59;
LABEL_53:
          PBReaderRecallMark();
          goto LABEL_56;
        case 0xDu:
          if (v15 == 2)
            goto LABEL_55;
          goto LABEL_59;
        default:
          if ((v8 >> 3) == 2047)
          {
            if ((v8 & 7) != 0)
              goto LABEL_59;
            v23 = 0;
            while (1)
            {
              v24 = *v2;
              v25 = *(_QWORD *)&a1[v24];
              v26 = v25 + 1;
              if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
                break;
              v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
              *(_QWORD *)&a1[v24] = v26;
              if (v27 < 0)
              {
                v22 = v23++ > 8;
                if (!v22)
                  continue;
              }
              goto LABEL_56;
            }
LABEL_49:
            a1[*v4] = 1;
          }
          else
          {
LABEL_55:
            if ((PBReaderSkipValueWithTag() & 1) == 0)
            {
LABEL_59:
              PBReaderRecallMark();
              return 0;
            }
          }
LABEL_56:
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_57;
          break;
      }
    }
  }
LABEL_57:
  v33 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v33;
}

void sub_18930BB54(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPBTransitStationIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  v2 = *(unsigned __int8 *)(a1 + 76) > 0xFu;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return v2;
}

void sub_18930C07C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18930C54C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18930C970(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPBTransitStopReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  int *v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  BOOL v28;
  int v29;
  unint64_t v31;
  BOOL v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  char v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  char v44;
  unsigned int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  char v50;
  id v51;
  void *v52;
  int v53;
  GEOLatLng *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  char v59;
  unsigned int v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  char v64;
  char v65;
  uint64_t v66;
  __int16 v67;
  int v68;
  int v69;
  __int16 v70;
  void *v71;
  int v73;
  int *v74;
  char v75;
  char v76;
  char v77;
  char v78;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 76);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 72));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 92)), (uint16x4_t)0xFFF8FFFAFFFCFFF9), (int8x8_t)0x1000100010001))+ ((*(_WORD *)(a1 + 92) >> 5) & 1)+ ((*(_WORD *)(a1 + 92) >> 3) & 1));
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 > 3;
        v75 = v16 & ~(_BYTE)v11 | v9;
        v76 = v16 | v11 | v75;
        if ((((v16 | v11) | v8) & 1) != 0)
          v17 = 0;
        else
          v17 = a3;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v77 = (v17 == 0) | v16 | v11;
        v78 = v16 | v11;
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v7;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v19))
      goto LABEL_120;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0)
        goto LABEL_25;
      v21 += 7;
      v28 = v22++ >= 9;
      if (v28)
      {
        v23 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_25:
    v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_27:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_120:
      v73 = 1;
      goto LABEL_121;
    }
    v31 = v23 >> 3;
    v32 = v78;
    if ((v77 & 1) == 0)
    {
      v33 = v17;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if ((v8 & 1) == 0)
          goto LABEL_94;
        v37 = 0;
        v38 = 0;
        v39 = 0;
        *(_WORD *)(a1 + 92) |= 1u;
        while (1)
        {
          v40 = *v18;
          v41 = *(_QWORD *)(v3 + v40);
          v42 = v41 + 1;
          if (v41 == -1 || v42 > *(_QWORD *)(v3 + *v6))
            break;
          v43 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v41);
          *(_QWORD *)(v3 + v40) = v42;
          v39 |= (unint64_t)(v43 & 0x7F) << v37;
          if ((v43 & 0x80) == 0)
            goto LABEL_97;
          v37 += 7;
          v28 = v38++ >= 9;
          if (v28)
          {
            v39 = 0;
            goto LABEL_99;
          }
        }
        *(_BYTE *)(v3 + *v19) = 1;
LABEL_97:
        if (*(_BYTE *)(v3 + *v19))
          v39 = 0;
LABEL_99:
        *(_QWORD *)(a1 + 32) = v39;
        goto LABEL_119;
      case 2:
      case 3:
      case 5:
      case 6:
      case 8:
      case 9:
      case 10:
      case 11:
      case 12:
      case 13:
        goto LABEL_56;
      case 4:
        if (!v32)
          goto LABEL_94;
        if ((*(_WORD *)(a1 + 92) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_147;
          v67 = *(_WORD *)(a1 + 92) << 11;
          goto LABEL_112;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_147;
        v54 = objc_alloc_init(GEOLatLng);
        if (!GEOLatLngReadAllFrom((uint64_t)v54, (void *)v3))
          goto LABEL_146;
        PBReaderRecallMark();
        v55 = 24;
        goto LABEL_75;
      case 7:
        if (!v32)
          goto LABEL_94;
        if ((*(_WORD *)(a1 + 92) & 0x80) == 0)
        {
          PBReaderReadString();
          v56 = objc_claimAutoreleasedReturnValue();
          v57 = 56;
          goto LABEL_92;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_147;
        v67 = *(_WORD *)(a1 + 92) << 8;
        goto LABEL_112;
      case 14:
        if (!v32)
          goto LABEL_94;
        if ((*(_WORD *)(a1 + 92) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_147;
          v67 = *(_WORD *)(a1 + 92) << 9;
LABEL_112:
          v7 += v67 >> 15;
LABEL_113:
          v19 = (int *)MEMORY[0x1E0D82BC8];
          v20 = (int *)MEMORY[0x1E0D82BB8];
          goto LABEL_119;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_147;
        v54 = objc_alloc_init(GEOStyleAttributes);
        if (GEOStyleAttributesReadAllFrom((uint64_t)v54, (void *)v3))
        {
          PBReaderRecallMark();
          v55 = 48;
LABEL_75:
          v58 = *(void **)(a1 + v55);
          *(_QWORD *)(a1 + v55) = v54;
LABEL_93:

          --v7;
          goto LABEL_113;
        }
LABEL_146:

LABEL_147:
        v73 = 0;
        v74 = &OBJC_IVAR___GEOPDRelatedEntitySection__reader;
        v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_122:
        if ((v75 & 1) != 0)
LABEL_123:
          *(_WORD *)(a1 + v74[232]) |= 8u;
        if (v78 & 1 | ((v73 & 1) == 0))
        {
          *(_WORD *)(a1 + v74[232]) |= 0x10u;
          *(_WORD *)(a1 + v74[232]) |= 0x80u;
          *(_WORD *)(a1 + v74[232]) |= 0x40u;
          *(_WORD *)(a1 + v74[232]) |= 0x100u;
          *(_WORD *)(a1 + v74[232]) |= 0x20u;
          goto LABEL_140;
        }
        if (v17)
        {
          while (1)
          {
            v69 = *v17++;
            v68 = v69;
            if (v69 > 13)
            {
              switch(v68)
              {
                case 14:
                  v70 = 64;
                  break;
                case 16:
                  v70 = 256;
                  break;
                case 17:
                  v70 = 32;
                  break;
                default:
                  continue;
              }
              goto LABEL_138;
            }
            if (v68 == 4)
              break;
            if (v68 == 7)
            {
              v70 = 128;
LABEL_138:
              *(_WORD *)(a1 + v74[232]) |= v70;
              continue;
            }
            if (!v68)
              goto LABEL_140;
          }
          v70 = 16;
          goto LABEL_138;
        }
LABEL_140:
        if (v73)
          v3 = *(_BYTE *)(v3 + *v19) == 0;
        else
          v3 = 0;
        if ((v78 & 1) != 0)
        {
          v71 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      case 15:
        if ((v8 & 1) == 0)
          goto LABEL_94;
        v59 = 0;
        v60 = 0;
        v46 = 0;
        *(_WORD *)(a1 + 92) |= 2u;
        while (2)
        {
          v61 = *v18;
          v62 = *(_QWORD *)(v3 + v61);
          v63 = v62 + 1;
          if (v62 == -1 || v63 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v19) = 1;
          }
          else
          {
            v64 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v62);
            *(_QWORD *)(v3 + v61) = v63;
            v46 |= (unint64_t)(v64 & 0x7F) << v59;
            if (v64 < 0)
            {
              v59 += 7;
              v28 = v60++ >= 9;
              if (v28)
              {
                LODWORD(v46) = 0;
                goto LABEL_103;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v19))
          LODWORD(v46) = 0;
LABEL_103:
        v66 = 84;
        goto LABEL_118;
      case 16:
        if (!v32 || (*(_WORD *)(a1 + 92) & 0x100) != 0)
          goto LABEL_94;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_147;
        v54 = objc_alloc_init(GEOPBTransitZoomRangeString);
        if (!GEOPBTransitZoomRangeStringReadAllFrom((uint64_t)v54, (void *)v3, v10 & 1))
          goto LABEL_146;
        PBReaderRecallMark();
        -[GEOPBTransitStop _addNoFlagsZoomName:](a1, v54);

        goto LABEL_113;
      case 17:
        if (!v32)
          goto LABEL_94;
        if ((*(_WORD *)(a1 + 92) & 0x20) == 0)
        {
          PBReaderReadString();
          v56 = objc_claimAutoreleasedReturnValue();
          v57 = 40;
LABEL_92:
          v58 = *(void **)(a1 + v57);
          *(_QWORD *)(a1 + v57) = v56;
          goto LABEL_93;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_147;
        v67 = *(_WORD *)(a1 + 92) << 10;
        goto LABEL_112;
      default:
        if ((_DWORD)v31 == 2047)
        {
          if ((v8 & 1) != 0)
          {
            v44 = 0;
            v45 = 0;
            v46 = 0;
            *(_WORD *)(a1 + 92) |= 4u;
            while (1)
            {
              v47 = *v18;
              v48 = *(_QWORD *)(v3 + v47);
              v49 = v48 + 1;
              if (v48 == -1 || v49 > *(_QWORD *)(v3 + *v6))
                break;
              v50 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v48);
              *(_QWORD *)(v3 + v47) = v49;
              v46 |= (unint64_t)(v50 & 0x7F) << v44;
              if ((v50 & 0x80) == 0)
                goto LABEL_115;
              v44 += 7;
              v28 = v45++ >= 9;
              if (v28)
              {
                LODWORD(v46) = 0;
                goto LABEL_117;
              }
            }
            *(_BYTE *)(v3 + *v19) = 1;
LABEL_115:
            if (*(_BYTE *)(v3 + *v19))
              LODWORD(v46) = 0;
LABEL_117:
            v66 = 88;
LABEL_118:
            *(_DWORD *)(a1 + v66) = v46;
            goto LABEL_119;
          }
        }
        else
        {
LABEL_56:
          if ((v75 & 1) != 0 && (*(_WORD *)(a1 + 92) & 8) == 0)
          {
            if (!*(_QWORD *)(a1 + 16))
            {
              v51 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
              v52 = *(void **)(a1 + 16);
              *(_QWORD *)(a1 + 16) = v51;

            }
            v53 = PBUnknownFieldAdd();
            v19 = (int *)MEMORY[0x1E0D82BC8];
            v20 = (int *)MEMORY[0x1E0D82BB8];
            if (!v53)
            {
              v73 = 0;
              v74 = &OBJC_IVAR___GEOPDRelatedEntitySection__reader;
              goto LABEL_123;
            }
            goto LABEL_119;
          }
        }
LABEL_94:
        v65 = PBReaderSkipValueWithTag();
        v20 = (int *)MEMORY[0x1E0D82BB8];
        v19 = (int *)MEMORY[0x1E0D82BC8];
        if ((v65 & 1) == 0)
        {
          v73 = 0;
LABEL_121:
          v74 = &OBJC_IVAR___GEOPDRelatedEntitySection__reader;
          goto LABEL_122;
        }
LABEL_119:
        if (!(v76 & 1 | (v7 != 0)))
          goto LABEL_120;
        continue;
    }
  }
}

void sub_18930D424(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18930D564(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18930D718(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18930DA48(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18930E5E4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPBTransitStopCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _BYTE v11[128];
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  objc_msgSend(a1[3], "readAll:", 1);
  objc_msgSend(a1[6], "readAll:", 1);
  v9 = 0u;
  v10 = 0u;
  v7 = 0u;
  v8 = 0u;
  v2 = a1[8];
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v8;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v8 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v7 + 1) + 8 * v6++), "readAll:", 1, (_QWORD)v7);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
    }
    while (v4);
  }

}

unint64_t GEOPBTransitStopReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 76))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPBTransitStopReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 80));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 72) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 76) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPBTransitStopReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPBTransitStopReadAllFrom_initialTag;
  Specified = GEOPBTransitStopReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPBTransitStopCallReadAllRecursiveWithoutSynchronized((id *)a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 80));
  return Specified;
}

void sub_18930E894(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPBTransitStopReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOPBTransitStopReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18930E8F4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPBTransitStopIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  int v32;
  _BOOL8 v33;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (!a1[*v4])
    {
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0)
            goto LABEL_64;
          v17 = 0;
          while (1)
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
              goto LABEL_55;
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if (v21 < 0)
            {
              v22 = v17++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_62;
          }
        case 2u:
        case 3u:
        case 5u:
        case 6u:
        case 8u:
        case 9u:
        case 0xAu:
        case 0xBu:
        case 0xCu:
        case 0xDu:
          goto LABEL_61;
        case 4u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOLatLngIsValid(a1))
            goto LABEL_64;
          goto LABEL_59;
        case 7u:
          if (v15 == 2)
            goto LABEL_61;
          goto LABEL_64;
        case 0xEu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOStyleAttributesIsValid(a1))
            goto LABEL_64;
          goto LABEL_59;
        case 0xFu:
          if ((v8 & 7) != 0)
            goto LABEL_64;
          v28 = 0;
          while (1)
          {
            v29 = *v2;
            v30 = *(_QWORD *)&a1[v29];
            v31 = v30 + 1;
            if (v30 == -1 || v31 > *(_QWORD *)&a1[*v3])
              goto LABEL_55;
            v32 = *(char *)(*(_QWORD *)&a1[*v5] + v30);
            *(_QWORD *)&a1[v29] = v31;
            if (v32 < 0)
            {
              v22 = v28++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_62;
          }
        case 0x10u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPBTransitZoomRangeStringIsValid(a1))
            goto LABEL_64;
LABEL_59:
          PBReaderRecallMark();
          goto LABEL_62;
        case 0x11u:
          if (v15 == 2)
            goto LABEL_61;
          goto LABEL_64;
        default:
          if ((v8 >> 3) == 2047)
          {
            if ((v8 & 7) != 0)
              goto LABEL_64;
            v23 = 0;
            while (1)
            {
              v24 = *v2;
              v25 = *(_QWORD *)&a1[v24];
              v26 = v25 + 1;
              if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
                break;
              v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
              *(_QWORD *)&a1[v24] = v26;
              if (v27 < 0)
              {
                v22 = v23++ > 8;
                if (!v22)
                  continue;
              }
              goto LABEL_62;
            }
LABEL_55:
            a1[*v4] = 1;
          }
          else
          {
LABEL_61:
            if ((PBReaderSkipValueWithTag() & 1) == 0)
            {
LABEL_64:
              PBReaderRecallMark();
              return 0;
            }
          }
LABEL_62:
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_63;
          break;
      }
    }
  }
LABEL_63:
  v33 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v33;
}

void sub_18930EF5C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPBTransitStopIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  v2 = (*(_WORD *)(a1 + 92) & 0x3F0) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 80));
  return v2;
}

void sub_18930F500(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18930FA88(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18930FEE0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPBTransitSystemReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  int *v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  BOOL v28;
  int v29;
  unint64_t v31;
  BOOL v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  char v37;
  GEOStyleAttributes *v38;
  uint64_t v39;
  char v40;
  unsigned int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  char v46;
  char v47;
  unsigned int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  void *v57;
  void *v58;
  id v59;
  void *v60;
  int v61;
  char v62;
  char v63;
  char v64;
  char v65;
  char v66;
  char v67;
  int v68;
  int v69;
  void *v70;
  int v72;
  int *v73;
  char v74;
  char v75;
  char v76;
  char v77;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 68);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 64));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = (vaddv_s16((int16x4_t)(*(_QWORD *)&vshl_u16((uint16x4_t)(*(_QWORD *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 80)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFCFFFDFFFAFFFBLL) & 0xFF01FF01FF01FF01))+ ((*(_BYTE *)(a1 + 80) & 4) != 0));
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 > 2;
        v74 = v16 & ~(_BYTE)v11 | v9;
        v75 = v16 | v11 | v74;
        if ((((v16 | v11) | v8) & 1) != 0)
          v17 = 0;
        else
          v17 = a3;
        v76 = (v17 == 0) | v16 | v11;
        v77 = v16 | v11;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v7;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v19))
      goto LABEL_106;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0)
        goto LABEL_25;
      v21 += 7;
      v28 = v22++ >= 9;
      if (v28)
      {
        v23 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_25:
    v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_27:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_106:
      v72 = 1;
      goto LABEL_107;
    }
    v31 = v23 >> 3;
    v32 = v77;
    if ((v76 & 1) == 0)
    {
      v33 = v17;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    if ((int)v31 > 14)
      break;
    switch((_DWORD)v31)
    {
      case 1:
        if ((v8 & 1) != 0)
        {
          v47 = 0;
          v48 = 0;
          v49 = 0;
          *(_BYTE *)(a1 + 80) |= 1u;
          v6 = (int *)MEMORY[0x1E0D82BD8];
          while (1)
          {
            v50 = *v18;
            v51 = *(_QWORD *)(v3 + v50);
            v52 = v51 + 1;
            if (v51 == -1 || v52 > *(_QWORD *)(v3 + *v6))
              break;
            v53 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v51);
            *(_QWORD *)(v3 + v50) = v52;
            v49 |= (unint64_t)(v53 & 0x7F) << v47;
            if ((v53 & 0x80) == 0)
              goto LABEL_92;
            v47 += 7;
            v28 = v48++ >= 9;
            if (v28)
            {
              v49 = 0;
              goto LABEL_94;
            }
          }
          *(_BYTE *)(v3 + *v19) = 1;
LABEL_92:
          if (*(_BYTE *)(v3 + *v19))
            v49 = 0;
LABEL_94:
          *(_QWORD *)(a1 + 32) = v49;
          goto LABEL_105;
        }
        break;
      case 5:
        if (v32)
        {
          if ((*(_BYTE *)(a1 + 80) & 0x40) != 0)
          {
            v65 = PBReaderSkipValueWithTag();
            v6 = (int *)MEMORY[0x1E0D82BD8];
            if ((v65 & 1) == 0)
              goto LABEL_131;
            v64 = 2 * *(_BYTE *)(a1 + 80);
            goto LABEL_103;
          }
          PBReaderReadString();
          v54 = objc_claimAutoreleasedReturnValue();
          v55 = 56;
LABEL_78:
          v58 = *(void **)(a1 + v55);
          *(_QWORD *)(a1 + v55) = v54;

          --v7;
          v19 = (int *)MEMORY[0x1E0D82BC8];
          v6 = (int *)MEMORY[0x1E0D82BD8];
          goto LABEL_105;
        }
        break;
      case 0xD:
        if (v32)
        {
          if ((*(_BYTE *)(a1 + 80) & 0x20) != 0)
          {
            v63 = PBReaderSkipValueWithTag();
            v6 = (int *)MEMORY[0x1E0D82BD8];
            if ((v63 & 1) == 0)
              goto LABEL_131;
            v64 = 4 * *(_BYTE *)(a1 + 80);
            goto LABEL_103;
          }
          v37 = PBReaderPlaceMark();
          v6 = (int *)MEMORY[0x1E0D82BD8];
          if ((v37 & 1) == 0)
            goto LABEL_131;
          v38 = objc_alloc_init(GEOStyleAttributes);
          if (!GEOStyleAttributesReadAllFrom((uint64_t)v38, (void *)v3))
            goto LABEL_130;
          PBReaderRecallMark();
          v39 = 48;
          goto LABEL_74;
        }
        break;
      default:
LABEL_79:
        if ((v74 & 1) != 0 && (*(_BYTE *)(a1 + 80) & 4) == 0)
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v59 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v60 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v59;

          }
          v61 = PBUnknownFieldAdd();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          v6 = (int *)MEMORY[0x1E0D82BD8];
          if (!v61)
          {
            v72 = 0;
            v73 = &OBJC_IVAR___GEOPDRelatedEntitySection__reader;
            goto LABEL_109;
          }
          goto LABEL_105;
        }
        break;
    }
LABEL_85:
    v62 = PBReaderSkipValueWithTag();
    v19 = (int *)MEMORY[0x1E0D82BC8];
    v6 = (int *)MEMORY[0x1E0D82BD8];
    if ((v62 & 1) == 0)
    {
      v72 = 0;
LABEL_107:
      v73 = &OBJC_IVAR___GEOPDRelatedEntitySection__reader;
      goto LABEL_108;
    }
LABEL_105:
    if (!(v75 & 1 | (v7 != 0)))
      goto LABEL_106;
  }
  if ((_DWORD)v31 != 15)
  {
    if ((_DWORD)v31 == 16)
    {
      if (v32)
      {
        if ((*(_BYTE *)(a1 + 80) & 0x10) != 0)
        {
          v67 = PBReaderSkipValueWithTag();
          v6 = (int *)MEMORY[0x1E0D82BD8];
          if ((v67 & 1) == 0)
            goto LABEL_131;
          v64 = 8 * *(_BYTE *)(a1 + 80);
LABEL_103:
          v7 += v64 >> 7;
LABEL_104:
          v19 = (int *)MEMORY[0x1E0D82BC8];
          goto LABEL_105;
        }
        PBReaderReadString();
        v54 = objc_claimAutoreleasedReturnValue();
        v55 = 40;
        goto LABEL_78;
      }
    }
    else
    {
      if ((_DWORD)v31 != 2047)
        goto LABEL_79;
      if ((v8 & 1) != 0)
      {
        v40 = 0;
        v41 = 0;
        v42 = 0;
        *(_BYTE *)(a1 + 80) |= 2u;
        v6 = (int *)MEMORY[0x1E0D82BD8];
        while (1)
        {
          v43 = *v18;
          v44 = *(_QWORD *)(v3 + v43);
          v45 = v44 + 1;
          if (v44 == -1 || v45 > *(_QWORD *)(v3 + *v6))
            break;
          v46 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v44);
          *(_QWORD *)(v3 + v43) = v45;
          v42 |= (unint64_t)(v46 & 0x7F) << v40;
          if ((v46 & 0x80) == 0)
            goto LABEL_88;
          v40 += 7;
          v28 = v41++ >= 9;
          if (v28)
          {
            LODWORD(v42) = 0;
            goto LABEL_90;
          }
        }
        *(_BYTE *)(v3 + *v19) = 1;
LABEL_88:
        if (*(_BYTE *)(v3 + *v19))
          LODWORD(v42) = 0;
LABEL_90:
        *(_DWORD *)(a1 + 76) = v42;
        goto LABEL_105;
      }
    }
    goto LABEL_85;
  }
  if (!v32)
    goto LABEL_85;
  if ((*(_BYTE *)(a1 + 80) & 8) != 0)
  {
    v66 = PBReaderSkipValueWithTag();
    v6 = (int *)MEMORY[0x1E0D82BD8];
    if ((v66 & 1) == 0)
      goto LABEL_131;
    v64 = 16 * *(_BYTE *)(a1 + 80);
    goto LABEL_103;
  }
  v56 = PBReaderPlaceMark();
  v6 = (int *)MEMORY[0x1E0D82BD8];
  if ((v56 & 1) == 0)
    goto LABEL_131;
  v38 = objc_alloc_init(GEOPBTransitArtwork);
  if (GEOPBTransitArtworkReadAllFrom((uint64_t)v38, (void *)v3, v10 & 1))
  {
    PBReaderRecallMark();
    v39 = 24;
LABEL_74:
    v57 = *(void **)(a1 + v39);
    *(_QWORD *)(a1 + v39) = v38;

    --v7;
    goto LABEL_104;
  }
LABEL_130:

LABEL_131:
  v72 = 0;
  v73 = &OBJC_IVAR___GEOPDRelatedEntitySection__reader;
  v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_108:
  if ((v74 & 1) == 0)
    goto LABEL_110;
LABEL_109:
  *(_BYTE *)(a1 + v73[234]) |= 4u;
LABEL_110:
  if (v77 & 1 | ((v72 & 1) == 0))
  {
    *(_BYTE *)(a1 + v73[234]) |= 0x40u;
    *(_BYTE *)(a1 + v73[234]) |= 0x20u;
    *(_BYTE *)(a1 + v73[234]) |= 8u;
    *(_BYTE *)(a1 + v73[234]) |= 0x10u;
    goto LABEL_124;
  }
  if (v17)
  {
    while (1)
    {
      while (1)
      {
        v69 = *v17++;
        v68 = v69;
        if (v69 <= 14)
          break;
        if (v68 == 15)
        {
          LOBYTE(v68) = 8;
          goto LABEL_122;
        }
        if (v68 == 16)
          goto LABEL_122;
      }
      if (v68 == 5)
        break;
      if (v68 == 13)
      {
        LOBYTE(v68) = 32;
LABEL_122:
        *(_BYTE *)(a1 + v73[234]) |= v68;
        continue;
      }
      if (!v68)
        goto LABEL_124;
    }
    LOBYTE(v68) = 64;
    goto LABEL_122;
  }
LABEL_124:
  if (v72)
    v3 = *(_BYTE *)(v3 + *v19) == 0;
  else
    v3 = 0;
  if ((v77 & 1) != 0)
  {
    v70 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_189310898(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893109D8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189310B14(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189311354(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPBTransitSystemReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 68))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPBTransitSystemReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 72));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 64) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 68) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPBTransitSystemReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPBTransitSystemReadAllFrom_initialTag;
  Specified = GEOPBTransitSystemReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    objc_msgSend(*(id *)(a1 + 48), "readAll:", 1);
    objc_msgSend(*(id *)(a1 + 24), "readAll:", 1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return Specified;
}

void sub_189311508(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPBTransitSystemReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOPBTransitSystemReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189311568(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPBTransitSystemIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unint64_t v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int v22;
  BOOL v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  int v28;
  _BOOL8 v29;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      v17 = v8 >> 3;
      if ((int)(v8 >> 3) > 14)
      {
        switch((_DWORD)v17)
        {
          case 0xF:
            if (v15 != 2 || !PBReaderPlaceMark() || !GEOPBTransitArtworkIsValid(a1))
            {
LABEL_57:
              PBReaderRecallMark();
              return 0;
            }
            goto LABEL_51;
          case 0x10:
            if (v15 != 2)
              goto LABEL_57;
            break;
          case 0x7FF:
            if ((v8 & 7) != 0)
              goto LABEL_57;
            v18 = 0;
            while (1)
            {
              v19 = *v2;
              v20 = *(_QWORD *)&a1[v19];
              v21 = v20 + 1;
              if (v20 == -1 || v21 > *(_QWORD *)&a1[*v3])
                break;
              v22 = *(char *)(*(_QWORD *)&a1[*v5] + v20);
              *(_QWORD *)&a1[v19] = v21;
              if (v22 < 0)
              {
                v23 = v18++ > 8;
                if (!v23)
                  continue;
              }
              goto LABEL_54;
            }
LABEL_45:
            a1[*v4] = 1;
            continue;
        }
      }
      else
      {
        switch((_DWORD)v17)
        {
          case 1:
            if ((v8 & 7) != 0)
              goto LABEL_57;
            v24 = 0;
            while (1)
            {
              v25 = *v2;
              v26 = *(_QWORD *)&a1[v25];
              v27 = v26 + 1;
              if (v26 == -1 || v27 > *(_QWORD *)&a1[*v3])
                goto LABEL_45;
              v28 = *(char *)(*(_QWORD *)&a1[*v5] + v26);
              *(_QWORD *)&a1[v25] = v27;
              if (v28 < 0)
              {
                v23 = v24++ > 8;
                if (!v23)
                  continue;
              }
              goto LABEL_54;
            }
          case 5:
            if (v15 != 2)
              goto LABEL_57;
            break;
          case 0xD:
            if (v15 != 2 || !PBReaderPlaceMark() || !GEOStyleAttributesIsValid(a1))
              goto LABEL_57;
LABEL_51:
            PBReaderRecallMark();
            continue;
        }
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        goto LABEL_57;
LABEL_54:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v29 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v29;
}

void sub_189311A70(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPBTransitSystemIsDirty(uint64_t a1)
{
  unsigned int v2;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  v2 = *(unsigned __int8 *)(a1 + 80);
  if (v2 > 0x1F)
    return 1;
  if ((v2 & 8) != 0)
  {
    if ((GEOPBTransitArtworkIsDirty(*(os_unfair_lock_s **)(a1 + 24)) & 1) != 0)
      return 1;
    v2 = *(unsigned __int8 *)(a1 + 80);
  }
  return (v2 >> 4) & 1;
}

os_unfair_lock_s *GEOPBTransitSystemIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOPBTransitSystemIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 18);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_189311E9C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189312288(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id GEOPBTransitTimeRangeDescription(unsigned int *a1)
{
  void *v2;
  void *v3;
  void *v4;

  v2 = (void *)MEMORY[0x1E0CB3940];
  _GEOPDTimeRangeDictionaryRepresentation(a1, 0);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "stringWithFormat:", CFSTR("GEOPBTransitTimeRange<%p> %@"), a1, v3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  return v4;
}

BOOL GEOPBTransitTimeRangeReadFrom(uint64_t a1, uint64_t a2)
{
  return GEOPBTransitTimeRangeReadAllFrom(a1, a2);
}

BOOL GEOPBTransitTimeRangeReadAllFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  _DWORD *v7;
  int *v8;
  char v9;
  unsigned int v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  int v17;
  char v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  BOOL v26;
  _DWORD *v27;
  char v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char v33;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (_DWORD *)(a1 + 4);
    v8 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v9 = 0;
      v10 = 0;
      v11 = 0;
      while (1)
      {
        v12 = *v3;
        v13 = *(_QWORD *)(a2 + v12);
        v14 = v13 + 1;
        if (v13 == -1 || v14 > *(_QWORD *)(a2 + *v4))
          break;
        v15 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v13);
        *(_QWORD *)(a2 + v12) = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0)
          goto LABEL_12;
        v9 += 7;
        if (v10++ >= 9)
        {
          v11 = 0;
          v17 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v17 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v11 = 0;
LABEL_14:
      if (v17 || (v11 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      if ((v11 >> 3) == 2)
        break;
      if ((v11 >> 3) == 1)
      {
        v19 = 0;
        v20 = 0;
        v21 = 0;
        *(_BYTE *)(a1 + 8) |= 2u;
        while (1)
        {
          v22 = *v3;
          v23 = *(_QWORD *)(a2 + v22);
          v24 = v23 + 1;
          if (v23 == -1 || v24 > *(_QWORD *)(a2 + *v4))
          {
            v27 = v7;
            goto LABEL_38;
          }
          v25 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v23);
          *(_QWORD *)(a2 + v22) = v24;
          v21 |= (unint64_t)(v25 & 0x7F) << v19;
          if ((v25 & 0x80) == 0)
            break;
          v19 += 7;
          v26 = v20++ > 8;
          if (v26)
          {
            LODWORD(v21) = 0;
            v27 = v7;
            goto LABEL_41;
          }
        }
        v27 = v7;
LABEL_39:
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v21) = 0;
LABEL_41:
        *v27 = v21;
        goto LABEL_42;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        return 0;
LABEL_42:
      if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
        return *(_BYTE *)(a2 + *v5) == 0;
    }
    v28 = 0;
    v29 = 0;
    v21 = 0;
    *(_BYTE *)(a1 + 8) |= 1u;
    while (1)
    {
      v30 = *v3;
      v31 = *(_QWORD *)(a2 + v30);
      v32 = v31 + 1;
      if (v31 == -1 || v32 > *(_QWORD *)(a2 + *v4))
        break;
      v33 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v31);
      *(_QWORD *)(a2 + v30) = v32;
      v21 |= (unint64_t)(v33 & 0x7F) << v28;
      if ((v33 & 0x80) == 0)
      {
        v27 = (_DWORD *)a1;
        goto LABEL_39;
      }
      v28 += 7;
      v26 = v29++ > 8;
      if (v26)
      {
        LODWORD(v21) = 0;
        v27 = (_DWORD *)a1;
        goto LABEL_41;
      }
    }
    v27 = (_DWORD *)a1;
LABEL_38:
    *(_BYTE *)(a2 + *v5) = 1;
    goto LABEL_39;
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

BOOL GEOPBTransitTimeRangeEquals(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)a1 == *(_QWORD *)a2 && *(_DWORD *)(a1 + 8) == (unint64_t)*(unsigned int *)(a2 + 8);
}

uint64_t GEOPBTransitTimeRangeHash()
{
  return PBHashBytes();
}

BOOL GEOPBTransitTriggerRegionReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  GEOLatLng *v18;
  void *v19;
  id v20;
  void *v21;
  char v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  char v29;
  unsigned int v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  char v35;
  unsigned int v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  uint64_t v41;
  _BOOL8 v42;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        switch((v10 >> 3))
        {
          case 1u:
            if ((PBReaderPlaceMark() & 1) == 0)
              goto LABEL_64;
            v18 = objc_alloc_init(GEOLatLng);
            if (GEOLatLngReadAllFrom((uint64_t)v18, v3))
            {
              PBReaderRecallMark();
              v19 = *(void **)(a1 + 16);
              *(_QWORD *)(a1 + 16) = v18;

              continue;
            }

            goto LABEL_64;
          case 2u:
            v22 = 0;
            v23 = 0;
            v24 = 0;
            *(_BYTE *)(a1 + 36) |= 4u;
            while (2)
            {
              v25 = *v4;
              v26 = *(_QWORD *)&v3[v25];
              v27 = v26 + 1;
              if (v26 == -1 || v27 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v28 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v26);
                *(_QWORD *)&v3[v25] = v27;
                v24 |= (unint64_t)(v28 & 0x7F) << v22;
                if (v28 < 0)
                {
                  v22 += 7;
                  v15 = v23++ >= 9;
                  if (v15)
                  {
                    LODWORD(v24) = 0;
                    goto LABEL_51;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              LODWORD(v24) = 0;
LABEL_51:
            v41 = 32;
            goto LABEL_60;
          case 3u:
            v29 = 0;
            v30 = 0;
            v24 = 0;
            *(_BYTE *)(a1 + 36) |= 2u;
            while (2)
            {
              v31 = *v4;
              v32 = *(_QWORD *)&v3[v31];
              v33 = v32 + 1;
              if (v32 == -1 || v33 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v34 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v32);
                *(_QWORD *)&v3[v31] = v33;
                v24 |= (unint64_t)(v34 & 0x7F) << v29;
                if (v34 < 0)
                {
                  v29 += 7;
                  v15 = v30++ >= 9;
                  if (v15)
                  {
                    LODWORD(v24) = 0;
                    goto LABEL_55;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              LODWORD(v24) = 0;
LABEL_55:
            v41 = 28;
            goto LABEL_60;
          case 4u:
            v35 = 0;
            v36 = 0;
            v24 = 0;
            *(_BYTE *)(a1 + 36) |= 1u;
            break;
          default:
            if (!*(_QWORD *)(a1 + 8))
            {
              v20 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
              v21 = *(void **)(a1 + 8);
              *(_QWORD *)(a1 + 8) = v20;

            }
            if (!PBUnknownFieldAdd())
              goto LABEL_64;
            continue;
        }
        while (1)
        {
          v37 = *v4;
          v38 = *(_QWORD *)&v3[v37];
          v39 = v38 + 1;
          if (v38 == -1 || v39 > *(_QWORD *)&v3[*v5])
            break;
          v40 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v38);
          *(_QWORD *)&v3[v37] = v39;
          v24 |= (unint64_t)(v40 & 0x7F) << v35;
          if ((v40 & 0x80) == 0)
            goto LABEL_57;
          v35 += 7;
          v15 = v36++ >= 9;
          if (v15)
          {
            LODWORD(v24) = 0;
            goto LABEL_59;
          }
        }
        v3[*v6] = 1;
LABEL_57:
        if (v3[*v6])
          LODWORD(v24) = 0;
LABEL_59:
        v41 = 24;
LABEL_60:
        *(_DWORD *)(a1 + v41) = v24;
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v42 = v3[*v6] == 0;
  }
  else
  {
LABEL_64:
    v42 = 0;
  }
  objc_sync_exit(v3);

  return v42;
}

void sub_189313574(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPBTransitTriggerRegionReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOPBTransitTriggerRegionReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1893135D4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPBTransitTriggerRegionIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  int v32;
  _BOOL8 v33;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOLatLngIsValid(a1))
            goto LABEL_53;
          PBReaderRecallMark();
          continue;
        case 2u:
          if ((v8 & 7) != 0)
            goto LABEL_53;
          v17 = 0;
          while (1)
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
              goto LABEL_49;
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if (v21 < 0)
            {
              v22 = v17++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_50;
          }
        case 3u:
          if ((v8 & 7) != 0)
            goto LABEL_53;
          v23 = 0;
          while (1)
          {
            v24 = *v2;
            v25 = *(_QWORD *)&a1[v24];
            v26 = v25 + 1;
            if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
              goto LABEL_49;
            v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
            *(_QWORD *)&a1[v24] = v26;
            if (v27 < 0)
            {
              v22 = v23++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_50;
          }
        case 4u:
          if ((v8 & 7) != 0)
            goto LABEL_53;
          v28 = 0;
          break;
        default:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_53:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v29 = *v2;
        v30 = *(_QWORD *)&a1[v29];
        v31 = v30 + 1;
        if (v30 == -1 || v31 > *(_QWORD *)&a1[*v3])
          break;
        v32 = *(char *)(*(_QWORD *)&a1[*v5] + v30);
        *(_QWORD *)&a1[v29] = v31;
        if (v32 < 0)
        {
          v22 = v28++ > 8;
          if (!v22)
            continue;
        }
        goto LABEL_50;
      }
LABEL_49:
      a1[*v4] = 1;
LABEL_50:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v33 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v33;
}

void sub_1893140E0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPBTransitVehiclePositionReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  int *v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  char v18;
  unsigned __int8 v19;
  int *v20;
  int *v21;
  int *v22;
  int *v23;
  char v24;
  unsigned int v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  BOOL v31;
  int v32;
  unint64_t v34;
  BOOL v35;
  int *v36;
  int v37;
  int v38;
  BOOL v39;
  char v40;
  unsigned int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  char v46;
  id v47;
  void *v48;
  int v49;
  GEOLatLng *v50;
  uint64_t v51;
  char v52;
  unsigned int v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  char v57;
  uint64_t v58;
  unint64_t v59;
  int v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  char v66;
  uint64_t v67;
  __int16 v68;
  uint64_t v69;
  int v70;
  __int16 v71;
  void *v72;
  int v74;
  char v75;
  char v76;
  char v77;
  BOOL v78;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 104));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 100);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 96));
  v7 = v6;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = ((*(unsigned __int16 *)(a1 + 116) >> 4) & 1)
      + (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 116)), (uint16x4_t)0xFFF6FFF8FFF7FFF9), (int8x8_t)0x1000100010001))+ ((*(_WORD *)(a1 + 116) >> 6) & 1)+ ((*(_WORD *)(a1 + 116) >> 11) & 1)+ ((*(_WORD *)(a1 + 116) >> 5) & 1));
  while (2)
  {
    v14 = 1;
    v15 = 1;
    v16 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v13;
        goto LABEL_8;
      case -3:
        v9 = 1;
        goto LABEL_7;
      case -2:
        v15 = v11;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v17 = v13 > 4;
        v18 = v17 & ~(_BYTE)v12 | v10;
        v19 = v17 | v12;
        v75 = v18;
        v76 = v19 | v18;
        if (((v19 | v9) & 1) != 0)
          v20 = 0;
        else
          v20 = a3;
        v21 = (int *)MEMORY[0x1E0D82BF0];
        v22 = (int *)MEMORY[0x1E0D82BC8];
        v77 = (v20 == 0) | v19;
        v78 = v19;
        v23 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v13;
LABEL_7:
        v14 = v10;
LABEL_8:
        v15 = v11;
        v16 = v12;
LABEL_10:
        ++v8;
        v10 = v14;
        v11 = v15;
        v12 = v16;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v21) >= *(_QWORD *)(v3 + *v7) || *(_BYTE *)(v3 + *v22))
      goto LABEL_134;
    v24 = 0;
    v25 = 0;
    v26 = 0;
    while (1)
    {
      v27 = *v21;
      v28 = *(_QWORD *)(v3 + v27);
      v29 = v28 + 1;
      if (v28 == -1 || v29 > *(_QWORD *)(v3 + *v7))
        break;
      v30 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v28);
      *(_QWORD *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0)
        goto LABEL_25;
      v24 += 7;
      v31 = v25++ >= 9;
      if (v31)
      {
        v26 = 0;
        v32 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v22) = 1;
LABEL_25:
    v32 = *(unsigned __int8 *)(v3 + *v22);
    if (*(_BYTE *)(v3 + *v22))
      v26 = 0;
LABEL_27:
    if (v32 || (v26 & 7) == 4)
    {
LABEL_134:
      v74 = 1;
      goto LABEL_135;
    }
    v34 = v26 >> 3;
    v35 = v78;
    if ((v77 & 1) == 0)
    {
      v36 = v20;
      do
      {
        v38 = *v36++;
        v37 = v38;
        v35 = v38 != 0;
        if (v38)
          v39 = v37 == (_DWORD)v34;
        else
          v39 = 1;
      }
      while (!v39);
    }
    switch((int)v34)
    {
      case 1:
        if ((v9 & 1) == 0)
          goto LABEL_101;
        v40 = 0;
        v41 = 0;
        v42 = 0;
        *(_WORD *)(a1 + 116) |= 2u;
        while (1)
        {
          v43 = *v21;
          v44 = *(_QWORD *)(v3 + v43);
          v45 = v44 + 1;
          if (v44 == -1 || v45 > *(_QWORD *)(v3 + *v7))
            break;
          v46 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v44);
          *(_QWORD *)(v3 + v43) = v45;
          v42 |= (unint64_t)(v46 & 0x7F) << v40;
          if ((v46 & 0x80) == 0)
            goto LABEL_104;
          v40 += 7;
          v31 = v41++ >= 9;
          if (v31)
          {
            v42 = 0;
            goto LABEL_106;
          }
        }
        *(_BYTE *)(v3 + *v22) = 1;
LABEL_104:
        if (*(_BYTE *)(v3 + *v22))
          v42 = 0;
LABEL_106:
        v67 = 88;
        goto LABEL_111;
      case 2:
        if (!v35)
          goto LABEL_101;
        if ((*(_WORD *)(a1 + 116) & 0x200) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_155;
          v68 = *(_WORD *)(a1 + 116) << 6;
          goto LABEL_126;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_155;
        v50 = objc_alloc_init(GEOLatLng);
        if (!GEOLatLngReadAllFrom((uint64_t)v50, (void *)v3))
          goto LABEL_154;
        PBReaderRecallMark();
        v51 = 56;
        goto LABEL_99;
      case 3:
        if ((v9 & 1) == 0)
          goto LABEL_101;
        v52 = 0;
        v53 = 0;
        v42 = 0;
        *(_WORD *)(a1 + 116) |= 1u;
        while (2)
        {
          v54 = *v21;
          v55 = *(_QWORD *)(v3 + v54);
          v56 = v55 + 1;
          if (v55 == -1 || v56 > *(_QWORD *)(v3 + *v7))
          {
            *(_BYTE *)(v3 + *v22) = 1;
          }
          else
          {
            v57 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v55);
            *(_QWORD *)(v3 + v54) = v56;
            v42 |= (unint64_t)(v57 & 0x7F) << v52;
            if (v57 < 0)
            {
              v52 += 7;
              v31 = v53++ >= 9;
              if (v31)
              {
                v42 = 0;
                goto LABEL_110;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v22))
          v42 = 0;
LABEL_110:
        v67 = 80;
LABEL_111:
        *(_QWORD *)(a1 + v67) = v42;
        goto LABEL_133;
      case 4:
        if ((v9 & 1) == 0)
          goto LABEL_101;
        *(_WORD *)(a1 + 116) |= 4u;
        v58 = *v21;
        v59 = *(_QWORD *)(v3 + v58);
        if (v59 <= 0xFFFFFFFFFFFFFFFBLL && v59 + 4 <= *(_QWORD *)(v3 + *v7))
        {
          v60 = *(_DWORD *)(*(_QWORD *)(v3 + *v23) + v59);
          *(_QWORD *)(v3 + v58) = v59 + 4;
        }
        else
        {
          *(_BYTE *)(v3 + *v22) = 1;
          v60 = 0;
        }
        v69 = 108;
        goto LABEL_132;
      case 5:
        if ((v9 & 1) == 0)
          goto LABEL_101;
        *(_WORD *)(a1 + 116) |= 8u;
        v61 = *v21;
        v62 = *(_QWORD *)(v3 + v61);
        if (v62 <= 0xFFFFFFFFFFFFFFFBLL && v62 + 4 <= *(_QWORD *)(v3 + *v7))
        {
          v60 = *(_DWORD *)(*(_QWORD *)(v3 + *v23) + v62);
          *(_QWORD *)(v3 + v61) = v62 + 4;
        }
        else
        {
          *(_BYTE *)(v3 + *v22) = 1;
          v60 = 0;
        }
        v69 = 112;
LABEL_132:
        *(_DWORD *)(a1 + v69) = v60;
        goto LABEL_133;
      case 6:
        if (!v35)
          goto LABEL_101;
        if ((*(_WORD *)(a1 + 116) & 0x80) == 0)
        {
          PBReaderReadString();
          v63 = objc_claimAutoreleasedReturnValue();
          v64 = 40;
          goto LABEL_88;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_155;
        v68 = *(_WORD *)(a1 + 116) << 8;
        goto LABEL_126;
      case 7:
        if (!v35)
          goto LABEL_101;
        if ((*(_WORD *)(a1 + 116) & 0x100) == 0)
        {
          PBReaderReadString();
          v63 = objc_claimAutoreleasedReturnValue();
          v64 = 48;
          goto LABEL_88;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_155;
        v68 = *(_WORD *)(a1 + 116) << 7;
        goto LABEL_126;
      case 8:
        if (!v35)
          goto LABEL_101;
        if ((*(_WORD *)(a1 + 116) & 0x400) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_155;
          v68 = 32 * *(_WORD *)(a1 + 116);
          goto LABEL_126;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_155;
        v50 = objc_alloc_init(GEOPBTransitShield);
        if (!GEOPBTransitShieldReadAllFrom((uint64_t)v50, (void *)v3, v11 & 1))
          goto LABEL_154;
        PBReaderRecallMark();
        v51 = 64;
        goto LABEL_99;
      case 9:
        if (!v35)
          goto LABEL_101;
        if ((*(_WORD *)(a1 + 116) & 0x40) == 0)
        {
          PBReaderReadString();
          v63 = objc_claimAutoreleasedReturnValue();
          v64 = 32;
LABEL_88:
          v65 = *(void **)(a1 + v64);
          *(_QWORD *)(a1 + v64) = v63;
          goto LABEL_100;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_155;
        v68 = *(_WORD *)(a1 + 116) << 9;
        goto LABEL_126;
      case 10:
        if (!v35)
          goto LABEL_101;
        if ((*(_WORD *)(a1 + 116) & 0x800) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_155;
          v68 = 16 * *(_WORD *)(a1 + 116);
          goto LABEL_126;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_155;
        v50 = objc_alloc_init(GEOStyleAttributes);
        if (!GEOStyleAttributesReadAllFrom((uint64_t)v50, (void *)v3))
          goto LABEL_154;
        PBReaderRecallMark();
        v51 = 72;
        goto LABEL_99;
      case 11:
        if (!v35)
          goto LABEL_101;
        if ((*(_WORD *)(a1 + 116) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_155;
          v68 = *(_WORD *)(a1 + 116) << 10;
LABEL_126:
          v8 += v68 >> 15;
LABEL_127:
          v22 = (int *)MEMORY[0x1E0D82BC8];
          v7 = (int *)MEMORY[0x1E0D82BD8];
          v23 = (int *)MEMORY[0x1E0D82BB8];
LABEL_133:
          if (!(v76 & 1 | (v8 != 0)))
            goto LABEL_134;
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_155;
        v50 = objc_alloc_init(GEOPBTransitArtwork);
        if (GEOPBTransitArtworkReadAllFrom((uint64_t)v50, (void *)v3, v11 & 1))
        {
          PBReaderRecallMark();
          v51 = 24;
LABEL_99:
          v65 = *(void **)(a1 + v51);
          *(_QWORD *)(a1 + v51) = v50;
LABEL_100:

          --v8;
          goto LABEL_127;
        }
LABEL_154:

LABEL_155:
        v74 = 0;
        v22 = (int *)MEMORY[0x1E0D82BC8];
LABEL_135:
        if ((v75 & 1) != 0)
LABEL_136:
          *(_WORD *)(a1 + 116) |= 0x10u;
        if (v78 || (v74 & 1) == 0)
        {
          *(_WORD *)(a1 + 116) |= 0x200u;
          *(_WORD *)(a1 + 116) |= 0x80u;
          *(_WORD *)(a1 + 116) |= 0x100u;
          *(_WORD *)(a1 + 116) |= 0x400u;
          *(_WORD *)(a1 + 116) |= 0x40u;
          *(_WORD *)(a1 + 116) |= 0x800u;
          *(_WORD *)(a1 + 116) |= 0x20u;
        }
        else if (v20)
        {
          while (1)
          {
            v70 = *v20++;
            v71 = 512;
            switch(v70)
            {
              case 0:
                goto LABEL_148;
              case 2:
                goto LABEL_147;
              case 6:
                v71 = 128;
                goto LABEL_147;
              case 7:
                v71 = 256;
                goto LABEL_147;
              case 8:
                v71 = 1024;
                goto LABEL_147;
              case 9:
                v71 = 64;
                goto LABEL_147;
              case 10:
                v71 = 2048;
                goto LABEL_147;
              case 11:
                v71 = 32;
LABEL_147:
                *(_WORD *)(a1 + 116) |= v71;
                break;
              default:
                continue;
            }
          }
        }
LABEL_148:
        if (v74)
          v3 = *(_BYTE *)(v3 + *v22) == 0;
        else
          v3 = 0;
        if (v78)
        {
          v72 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      default:
        if ((v75 & 1) == 0 || (*(_WORD *)(a1 + 116) & 0x10) != 0)
        {
LABEL_101:
          v66 = PBReaderSkipValueWithTag();
          v23 = (int *)MEMORY[0x1E0D82BB8];
          v7 = (int *)MEMORY[0x1E0D82BD8];
          v22 = (int *)MEMORY[0x1E0D82BC8];
          if ((v66 & 1) == 0)
          {
            v74 = 0;
            goto LABEL_135;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v47 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v48 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v47;

          }
          v49 = PBUnknownFieldAdd();
          v22 = (int *)MEMORY[0x1E0D82BC8];
          v7 = (int *)MEMORY[0x1E0D82BD8];
          v23 = (int *)MEMORY[0x1E0D82BB8];
          if (!v49)
          {
            v74 = 0;
            goto LABEL_136;
          }
        }
        goto LABEL_133;
    }
  }
}

void sub_189314E20(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189314F64(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893150A8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893151EC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189315330(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189315470(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189315FE0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPBTransitVehiclePositionCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  objc_msgSend(a1[7], "readAll:", 1);
  objc_msgSend(a1[8], "readAll:", 1);
  objc_msgSend(a1[9], "readAll:", 1);
  return objc_msgSend(a1[3], "readAll:", 1);
}

unint64_t GEOPBTransitVehiclePositionReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 100))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPBTransitVehiclePositionReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 104));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 96) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 100) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPBTransitVehiclePositionReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPBTransitVehiclePositionReadAllFrom_initialTag;
  Specified = GEOPBTransitVehiclePositionReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPBTransitVehiclePositionCallReadAllRecursiveWithoutSynchronized((id *)a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 104));
  return Specified;
}

void sub_1893161D8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPBTransitVehiclePositionReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOPBTransitVehiclePositionReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189316238(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPBTransitVehiclePositionIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v14;
  int v15;
  int v16;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  int v25;
  BOOL v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  int v31;
  _BOOL8 v32;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = *v4;
          v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = *v4;
      v15 = a1[v14];
      if (a1[v14])
        v8 = 0;
LABEL_14:
      v16 = v8 & 7;
      if (v15 || v16 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0)
            goto LABEL_67;
          v21 = 0;
          while (1)
          {
            v22 = *v2;
            v23 = *(_QWORD *)&a1[v22];
            v24 = v23 + 1;
            if (v23 == -1 || v24 > *(_QWORD *)&a1[*v3])
              goto LABEL_43;
            v25 = *(char *)(*(_QWORD *)&a1[*v5] + v23);
            *(_QWORD *)&a1[v22] = v24;
            if (v25 < 0)
            {
              v26 = v21++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_64;
          }
        case 2u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOLatLngIsValid(a1))
            goto LABEL_67;
          goto LABEL_63;
        case 3u:
          if ((v8 & 7) != 0)
            goto LABEL_67;
          v27 = 0;
          break;
        case 4u:
        case 5u:
          if (v16 != 5)
            goto LABEL_67;
          v18 = *v2;
          v19 = *(_QWORD *)&a1[v18];
          if (v19 > 0xFFFFFFFFFFFFFFFBLL)
            goto LABEL_44;
          v20 = v19 + 4;
          if (v20 > *(_QWORD *)&a1[*v3])
            goto LABEL_44;
          *(_QWORD *)&a1[v18] = v20;
          continue;
        case 6u:
          if (v16 == 2)
            goto LABEL_54;
          goto LABEL_67;
        case 7u:
          if (v16 == 2)
            goto LABEL_54;
          goto LABEL_67;
        case 8u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOPBTransitShieldIsValid(a1))
            goto LABEL_67;
          goto LABEL_63;
        case 9u:
          if (v16 == 2)
            goto LABEL_54;
          goto LABEL_67;
        case 0xAu:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOStyleAttributesIsValid(a1))
            goto LABEL_67;
          goto LABEL_63;
        case 0xBu:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOPBTransitArtworkIsValid(a1))
            goto LABEL_67;
LABEL_63:
          PBReaderRecallMark();
          continue;
        default:
LABEL_54:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_67:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v28 = *v2;
        v29 = *(_QWORD *)&a1[v28];
        v30 = v29 + 1;
        if (v29 == -1 || v30 > *(_QWORD *)&a1[*v3])
          break;
        v31 = *(char *)(*(_QWORD *)&a1[*v5] + v29);
        *(_QWORD *)&a1[v28] = v30;
        if (v31 < 0)
        {
          v26 = v27++ > 8;
          if (!v26)
            continue;
        }
        goto LABEL_64;
      }
LABEL_43:
      v14 = *v4;
LABEL_44:
      a1[v14] = 1;
LABEL_64:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v32 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v32;
}

void sub_189316888(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPBTransitVehiclePositionIsDirty(uint64_t a1)
{
  __int16 v2;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 104));
  v2 = *(_WORD *)(a1 + 116);
  if ((v2 & 0x1380) != 0)
    return 1;
  if ((*(_WORD *)(a1 + 116) & 0x400) != 0)
  {
    if (GEOPBTransitShieldIsDirty(*(_QWORD *)(a1 + 64)))
      return 1;
    v2 = *(_WORD *)(a1 + 116);
  }
  if ((v2 & 0x840) != 0)
    return 1;
  if ((v2 & 0x20) != 0)
    return (uint64_t)GEOPBTransitArtworkIsDirty(*(os_unfair_lock_s **)(a1 + 24));
  else
    return 0;
}

os_unfair_lock_s *GEOPBTransitVehiclePositionIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOPBTransitVehiclePositionIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 26);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_189316E60(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189317520(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189317874(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPBTransitZoomRangeStringReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  char v15;
  unsigned __int8 v16;
  int *v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  BOOL v28;
  int v29;
  unint64_t v31;
  BOOL v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  char v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  id v47;
  void *v48;
  int v49;
  char v50;
  char v51;
  int v52;
  int v53;
  char v54;
  void *v55;
  int v57;
  int *v58;
  char v59;
  char v60;
  char v61;
  BOOL v62;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int8 *)(a1 + 56) >> 2) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 1) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v11;
        v12 = v7;
        goto LABEL_8;
      case -3:
        v9 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v11 != 0;
        v15 = v14 & ~(_BYTE)v7;
        v16 = v14 | v7;
        v59 = v15 | v8;
        v60 = v16 | v15 | v8;
        if (((v16 | v9) & 1) != 0)
          v17 = 0;
        else
          v17 = a3;
        v61 = (v17 == 0) | v16;
        v62 = v16;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_7:
        v12 = v7;
        v13 = v8;
LABEL_8:
        ++v10;
        v7 = v12;
        v8 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v19))
      goto LABEL_72;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0)
        goto LABEL_23;
      v21 += 7;
      v28 = v22++ >= 9;
      if (v28)
      {
        v23 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_25;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_23:
    v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_25:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_72:
      v57 = 1;
LABEL_73:
      v58 = &OBJC_IVAR___GEOPDRelatedEntitySection__reader;
      goto LABEL_74;
    }
    v31 = v23 >> 3;
    v32 = v62;
    if ((v61 & 1) == 0)
    {
      v33 = v17;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    if ((_DWORD)v31 != 4)
      break;
    if (v32)
    {
      if ((*(_BYTE *)(a1 + 56) & 8) != 0)
      {
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_93;
        v51 = 16 * *(_BYTE *)(a1 + 56);
        goto LABEL_71;
      }
      PBReaderReadString();
      v44 = objc_claimAutoreleasedReturnValue();
      v45 = 32;
      goto LABEL_53;
    }
LABEL_60:
    v50 = PBReaderSkipValueWithTag();
    v19 = (int *)MEMORY[0x1E0D82BC8];
    if ((v50 & 1) == 0)
    {
      v57 = 0;
      goto LABEL_73;
    }
LABEL_61:
    if (!(v60 & 1 | (v10 != 0)))
      goto LABEL_72;
  }
  if ((_DWORD)v31 != 3)
  {
    if ((_DWORD)v31 == 1)
    {
      if ((v9 & 1) != 0)
      {
        v37 = 0;
        v38 = 0;
        v39 = 0;
        *(_BYTE *)(a1 + 56) |= 1u;
        while (1)
        {
          v40 = *v18;
          v41 = *(_QWORD *)(v3 + v40);
          v42 = v41 + 1;
          if (v41 == -1 || v42 > *(_QWORD *)(v3 + *v6))
            break;
          v43 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v41);
          *(_QWORD *)(v3 + v40) = v42;
          v39 |= (unint64_t)(v43 & 0x7F) << v37;
          if ((v43 & 0x80) == 0)
            goto LABEL_64;
          v37 += 7;
          v28 = v38++ >= 9;
          if (v28)
          {
            LODWORD(v39) = 0;
            goto LABEL_66;
          }
        }
        *(_BYTE *)(v3 + *v19) = 1;
LABEL_64:
        if (*(_BYTE *)(v3 + *v19))
          LODWORD(v39) = 0;
LABEL_66:
        *(_DWORD *)(a1 + 52) = v39;
        goto LABEL_61;
      }
    }
    else if ((v59 & 1) != 0 && (*(_BYTE *)(a1 + 56) & 2) == 0)
    {
      if (!*(_QWORD *)(a1 + 16))
      {
        v47 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v48 = *(void **)(a1 + 16);
        *(_QWORD *)(a1 + 16) = v47;

      }
      v49 = PBUnknownFieldAdd();
      v19 = (int *)MEMORY[0x1E0D82BC8];
      if (!v49)
      {
        v57 = 0;
        v58 = &OBJC_IVAR___GEOPDRelatedEntitySection__reader;
        goto LABEL_75;
      }
      goto LABEL_61;
    }
    goto LABEL_60;
  }
  if (!v32)
    goto LABEL_60;
  if ((*(_BYTE *)(a1 + 56) & 4) == 0)
  {
    PBReaderReadString();
    v44 = objc_claimAutoreleasedReturnValue();
    v45 = 24;
LABEL_53:
    v46 = *(void **)(a1 + v45);
    *(_QWORD *)(a1 + v45) = v44;

    v19 = (int *)MEMORY[0x1E0D82BC8];
    --v10;
    goto LABEL_61;
  }
  if ((PBReaderSkipValueWithTag() & 1) != 0)
  {
    v51 = 32 * *(_BYTE *)(a1 + 56);
LABEL_71:
    v10 += v51 >> 7;
    v19 = (int *)MEMORY[0x1E0D82BC8];
    goto LABEL_61;
  }
LABEL_93:
  v57 = 0;
  v58 = &OBJC_IVAR___GEOPDRelatedEntitySection__reader;
  v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_74:
  if ((v59 & 1) == 0)
    goto LABEL_76;
LABEL_75:
  *(_BYTE *)(a1 + v58[237]) |= 2u;
LABEL_76:
  if (v62 || (v57 & 1) == 0)
  {
    *(_BYTE *)(a1 + v58[237]) |= 4u;
    *(_BYTE *)(a1 + v58[237]) |= 8u;
    goto LABEL_86;
  }
  if (v17)
  {
    while (2)
    {
      while (1)
      {
        v53 = *v17++;
        v52 = v53;
        if (v53 == 3)
          break;
        if (v52 == 4)
        {
          v54 = 8;
          goto LABEL_85;
        }
        if (!v52)
          goto LABEL_86;
      }
      v54 = 4;
LABEL_85:
      *(_BYTE *)(a1 + v58[237]) |= v54;
      continue;
    }
  }
LABEL_86:
  if (v57)
    v3 = *(_BYTE *)(v3 + *v19) == 0;
  else
    v3 = 0;
  if (v62)
  {
    v55 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_189317F60(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18931856C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPBTransitZoomRangeStringReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPBTransitZoomRangeStringReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPBTransitZoomRangeStringReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPBTransitZoomRangeStringReadAllFrom_initialTag;
  Specified = GEOPBTransitZoomRangeStringReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_1893186F4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPBTransitZoomRangeStringReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOPBTransitZoomRangeStringReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189318754(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189318910(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPBTransitZoomRangeStringIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v2 = (*(_BYTE *)(a1 + 56) & 0x1C) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return v2;
}

void sub_189318C30(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189318EE8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189319FF0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDPlaceSummaryDynamicContextServerOverrideReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  BOOL v15;
  _BOOL8 v16;
  BOOL v17;
  int *v18;
  BOOL v19;
  int *v20;
  int *v21;
  int *v22;
  int *v23;
  char v24;
  unsigned int v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  int v31;
  unint64_t v33;
  _BOOL4 v34;
  int *v35;
  int v36;
  int v37;
  BOOL v38;
  _BOOL8 v39;
  GEOPDMapsIdentifier *v40;
  char v41;
  int v42;
  int v43;
  void *v44;
  BOOL v46;
  BOOL v47;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 36);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 32));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int8 *)(a1 + 44) >> 1) & 1) + (*(_BYTE *)(a1 + 44) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v7])
    {
      case -3:
        v8 = 1;
        goto LABEL_6;
      case -2:
        v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v10 & 1 | v11;
        v15 = v7 != 0;
        v16 = v14 != 0;
        v17 = v16 | v8;
        if (v14)
          v15 = 1;
        if (v17)
          v18 = 0;
        else
          v18 = a3;
        v19 = v18 == 0;
        if (v14)
          v19 = 1;
        v46 = v15;
        v47 = v19;
        v20 = (int *)MEMORY[0x1E0D82BF0];
        v21 = (int *)MEMORY[0x1E0D82BC8];
        v22 = &OBJC_IVAR___GEORouteDetails__isNearCurrentlyDisplayedStep;
        v23 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_6:
        v12 = v9;
        v13 = v10;
LABEL_8:
        ++v7;
        v9 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v20) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v21))
      goto LABEL_57;
    v24 = 0;
    v25 = 0;
    v26 = 0;
    while (1)
    {
      v27 = *v20;
      v28 = *(_QWORD *)(v3 + v27);
      if (v28 == -1 || v28 >= *(_QWORD *)(v3 + *v6))
        break;
      v29 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v28);
      *(_QWORD *)(v3 + v27) = v28 + 1;
      v26 |= (unint64_t)(v29 & 0x7F) << v24;
      if ((v29 & 0x80) == 0)
        goto LABEL_27;
      v24 += 7;
      if (v25++ >= 9)
      {
        v26 = 0;
        v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_29;
      }
    }
    *(_BYTE *)(v3 + *v21) = 1;
LABEL_27:
    v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(_BYTE *)(v3 + *v21))
      v26 = 0;
LABEL_29:
    if (v31 || (v26 & 7) == 4)
    {
LABEL_57:
      if (v16)
      {
        v41 = 1;
        goto LABEL_66;
      }
      if (v18)
      {
        do
        {
          while (1)
          {
            v43 = *v18++;
            v42 = v43;
            if (v43 != 1 && v42 != 2)
              break;
            *(_BYTE *)(a1 + v22[461]) |= v42;
          }
        }
        while (v42);
      }
      goto LABEL_67;
    }
    v33 = v26 >> 3;
    v34 = v16;
    if (!v47)
    {
      v35 = v18;
      do
      {
        v37 = *v35++;
        v36 = v37;
        v34 = v37 != 0;
        if (v37)
          v38 = v36 == (_DWORD)v33;
        else
          v38 = 1;
      }
      while (!v38);
    }
    if ((_DWORD)v33 == 2)
      break;
    if ((_DWORD)v33 != 1)
    {
      if (!PBReaderSkipValueWithTag())
        goto LABEL_65;
      goto LABEL_56;
    }
    if (v34 && (*(_BYTE *)(a1 + v22[461]) & 1) == 0)
    {
      if ((PBReaderPlaceMark() & 1) == 0)
        goto LABEL_65;
      v39 = v16;
      v16 = (_BOOL8)v21;
      v40 = objc_alloc_init(GEOPDMapsIdentifier);
      if (!GEOPDMapsIdentifierReadAllFrom((uint64_t)v40, (void *)v3))
        goto LABEL_72;
      PBReaderRecallMark();
      -[GEOPDPlaceSummaryDynamicContextServerOverride _addNoFlagsMapsId:](a1, v40);
      goto LABEL_52;
    }
LABEL_55:
    if ((PBReaderSkipValueWithTag() & 1) == 0)
    {
LABEL_65:
      v41 = 0;
      goto LABEL_66;
    }
LABEL_56:
    if (!v46)
      goto LABEL_57;
  }
  if (!v34 || (*(_BYTE *)(a1 + v22[461]) & 2) != 0)
    goto LABEL_55;
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_65;
  v39 = v16;
  v16 = (_BOOL8)v21;
  v40 = objc_alloc_init(GEOPDPlaceSummaryLayoutUnitString);
  if (GEOPDPlaceSummaryLayoutUnitStringReadAllFrom((uint64_t)v40, (void *)v3, v9 & 1))
  {
    PBReaderRecallMark();
    -[GEOPDPlaceSummaryDynamicContextServerOverride _addNoFlagsServerDynamicContext:](a1, v40);
LABEL_52:

    v21 = (int *)v16;
    v16 = v39;
    v22 = &OBJC_IVAR___GEORouteDetails__isNearCurrentlyDisplayedStep;
    goto LABEL_56;
  }
LABEL_72:

  v41 = 0;
  v21 = (int *)v16;
  LODWORD(v16) = v39;
  v22 = &OBJC_IVAR___GEORouteDetails__isNearCurrentlyDisplayedStep;
LABEL_66:
  *(_BYTE *)(a1 + v22[461]) |= 1u;
  *(_BYTE *)(a1 + v22[461]) |= 2u;
  if ((v41 & 1) != 0)
  {
LABEL_67:
    v3 = *(_BYTE *)(v3 + *v21) == 0;
    if (!v16)
      return v3;
    goto LABEL_68;
  }
  v3 = 0;
  if (v16)
  {
LABEL_68:
    v44 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_18931A758(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18931B100(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDPlaceSummaryDynamicContextServerOverrideCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  _BYTE v20[128];
  _BYTE v21[128];
  uint64_t v22;

  v22 = *MEMORY[0x1E0C80C00];
  v16 = 0u;
  v17 = 0u;
  v18 = 0u;
  v19 = 0u;
  v2 = *(id *)(a1 + 16);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v16, v21, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v17;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v17 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v16 + 1) + 8 * v6++), "readAll:", 1);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v16, v21, 16);
    }
    while (v4);
  }

  v14 = 0u;
  v15 = 0u;
  v12 = 0u;
  v13 = 0u;
  v7 = *(id *)(a1 + 24);
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v12, v20, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v13;
    do
    {
      v11 = 0;
      do
      {
        if (*(_QWORD *)v13 != v10)
          objc_enumerationMutation(v7);
        objc_msgSend(*(id *)(*((_QWORD *)&v12 + 1) + 8 * v11++), "readAll:", 1, (_QWORD)v12);
      }
      while (v9 != v11);
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v12, v20, 16);
    }
    while (v9);
  }

}

unint64_t GEOPDPlaceSummaryDynamicContextServerOverrideReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 36))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDPlaceSummaryDynamicContextServerOverrideReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 40));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 32) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 36) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDPlaceSummaryDynamicContextServerOverrideReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDPlaceSummaryDynamicContextServerOverrideReadAllFrom_initialTag;
  Specified = GEOPDPlaceSummaryDynamicContextServerOverrideReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDPlaceSummaryDynamicContextServerOverrideCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return Specified;
}

void sub_18931B424(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDPlaceSummaryDynamicContextServerOverrideReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOPDPlaceSummaryDynamicContextServerOverrideReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18931B484(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryDynamicContextServerOverrideIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  int v13;
  int v14;
  _BOOL8 v16;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_30;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        if (v10 == -1 || v10 >= *(_QWORD *)&a1[*v3])
          break;
        v11 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v13 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v14 = v8 & 7;
      if (v13 || v14 == 4)
        goto LABEL_30;
      if ((v8 >> 3) == 2)
        break;
      if ((v8 >> 3) == 1)
      {
        if (v14 != 2 || !PBReaderPlaceMark() || !GEOPDMapsIdentifierIsValid(a1))
          goto LABEL_31;
LABEL_27:
        PBReaderRecallMark();
        goto LABEL_29;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        goto LABEL_31;
LABEL_29:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_30;
    }
    if (v14 != 2 || !PBReaderPlaceMark() || !GEOPDPlaceSummaryLayoutUnitStringIsValid(a1))
    {
LABEL_31:
      PBReaderRecallMark();
      return 0;
    }
    goto LABEL_27;
  }
LABEL_30:
  v16 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v16;
}

BOOL GEOPDPlaceSummaryLayoutUnitStringIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  int v13;
  int v14;
  unsigned int v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int v20;
  BOOL v21;
  unsigned int v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  int v26;
  _BOOL8 v27;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        if (v10 == -1 || v10 >= *(_QWORD *)&a1[*v3])
          break;
        v11 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v13 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v14 = v8 & 7;
      if (v13 || v14 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v14 != 2)
            goto LABEL_56;
          goto LABEL_47;
        case 2u:
          if (v14 == 2)
            goto LABEL_47;
          goto LABEL_56;
        case 3u:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEOPDPlaceSummaryFormatIsValid(a1))
            goto LABEL_56;
          goto LABEL_52;
        case 4u:
          if ((v8 & 7) != 0)
            goto LABEL_56;
          v16 = 0;
          while (1)
          {
            v17 = *v2;
            v18 = *(_QWORD *)&a1[v17];
            if (v18 == -1 || v18 >= *(_QWORD *)&a1[*v3])
              goto LABEL_43;
            v19 = v18 + 1;
            v20 = *(char *)(*(_QWORD *)&a1[*v5] + v18);
            *(_QWORD *)&a1[v17] = v19;
            if (v20 < 0)
            {
              v21 = v16++ > 8;
              if (!v21)
                continue;
            }
            goto LABEL_53;
          }
        case 5u:
          if ((v8 & 7) != 0)
            goto LABEL_56;
          v22 = 0;
          break;
        case 6u:
          if (v14 == 2)
            goto LABEL_47;
          goto LABEL_56;
        case 7u:
          if (v14 == 2)
            goto LABEL_47;
          goto LABEL_56;
        case 8u:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEOStyleAttributesIsValid(a1))
            goto LABEL_56;
LABEL_52:
          PBReaderRecallMark();
          continue;
        default:
LABEL_47:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_56:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v23 = *v2;
        v24 = *(_QWORD *)&a1[v23];
        if (v24 == -1 || v24 >= *(_QWORD *)&a1[*v3])
          break;
        v25 = v24 + 1;
        v26 = *(char *)(*(_QWORD *)&a1[*v5] + v24);
        *(_QWORD *)&a1[v23] = v25;
        if (v26 < 0)
        {
          v21 = v22++ > 8;
          if (!v21)
            continue;
        }
        goto LABEL_53;
      }
LABEL_43:
      a1[*v4] = 1;
LABEL_53:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v27 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v27;
}

void sub_18931BC3C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDPlaceSummaryDynamicContextServerOverrideIsDirty(uint64_t a1)
{
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t i;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _BYTE v11[128];
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  if ((*(_BYTE *)(a1 + 44) & 7) != 0)
    return 1;
  if ((*(_BYTE *)(a1 + 44) & 2) == 0)
    return 0;
  v9 = 0u;
  v10 = 0u;
  v7 = 0u;
  v8 = 0u;
  v3 = *(id *)(a1 + 24);
  v2 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
  if (v2)
  {
    v4 = *(_QWORD *)v8;
    while (2)
    {
      for (i = 0; i != v2; ++i)
      {
        if (*(_QWORD *)v8 != v4)
          objc_enumerationMutation(v3);
        if (GEOPDPlaceSummaryLayoutUnitStringIsDirty(*(_QWORD *)(*((_QWORD *)&v7 + 1) + 8 * i)))
        {
          v2 = 1;
          goto LABEL_15;
        }
      }
      v2 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
      if (v2)
        continue;
      break;
    }
  }
LABEL_15:

  return v2;
}

os_unfair_lock_s *GEOPDPlaceSummaryDynamicContextServerOverrideIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOPDPlaceSummaryDynamicContextServerOverrideIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 10);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_18931C39C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryFormatReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  char v23;
  unsigned int v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  char v28;
  unsigned int v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  GEOPDMapsIdentifier *v33;
  void *v34;
  uint64_t v35;
  _BOOL8 v36;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      while (!v3[*v6])
      {
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          if (v12 == -1 || v12 >= *(_QWORD *)&v3[*v5])
            break;
          v13 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v12 + 1;
          v10 |= (unint64_t)(v13 & 0x7F) << v8;
          if ((v13 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v14 = v9++ >= 9;
          if (v14)
          {
            v10 = 0;
            v15 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v15 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v15 || (v10 & 7) == 4)
          break;
        switch((v10 >> 3))
        {
          case 1u:
            v17 = 0;
            v18 = 0;
            v19 = 0;
            *(_BYTE *)(a1 + 28) |= 2u;
            while (1)
            {
              v20 = *v4;
              v21 = *(_QWORD *)&v3[v20];
              if (v21 == -1 || v21 >= *(_QWORD *)&v3[*v5])
                break;
              v22 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v21);
              *(_QWORD *)&v3[v20] = v21 + 1;
              v19 |= (unint64_t)(v22 & 0x7F) << v17;
              if ((v22 & 0x80) == 0)
                goto LABEL_47;
              v17 += 7;
              v14 = v18++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_49;
              }
            }
            v3[*v6] = 1;
LABEL_47:
            if (v3[*v6])
              LODWORD(v19) = 0;
LABEL_49:
            v35 = 20;
            goto LABEL_58;
          case 2u:
            v23 = 0;
            v24 = 0;
            v19 = 0;
            *(_BYTE *)(a1 + 28) |= 4u;
            while (2)
            {
              v25 = *v4;
              v26 = *(_QWORD *)&v3[v25];
              if (v26 == -1 || v26 >= *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v27 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v26);
                *(_QWORD *)&v3[v25] = v26 + 1;
                v19 |= (unint64_t)(v27 & 0x7F) << v23;
                if (v27 < 0)
                {
                  v23 += 7;
                  v14 = v24++ >= 9;
                  if (v14)
                  {
                    LODWORD(v19) = 0;
                    goto LABEL_53;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              LODWORD(v19) = 0;
LABEL_53:
            v35 = 24;
            goto LABEL_58;
          case 3u:
            v28 = 0;
            v29 = 0;
            v19 = 0;
            *(_BYTE *)(a1 + 28) |= 1u;
            while (2)
            {
              v30 = *v4;
              v31 = *(_QWORD *)&v3[v30];
              if (v31 == -1 || v31 >= *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v32 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v31);
                *(_QWORD *)&v3[v30] = v31 + 1;
                v19 |= (unint64_t)(v32 & 0x7F) << v28;
                if (v32 < 0)
                {
                  v28 += 7;
                  v14 = v29++ >= 9;
                  if (v14)
                  {
                    LODWORD(v19) = 0;
                    goto LABEL_57;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              LODWORD(v19) = 0;
LABEL_57:
            v35 = 16;
LABEL_58:
            *(_DWORD *)(a1 + v35) = v19;
            goto LABEL_59;
          case 4u:
            if ((PBReaderPlaceMark() & 1) == 0)
              goto LABEL_62;
            v33 = objc_alloc_init(GEOPDMapsIdentifier);
            if (!GEOPDMapsIdentifierReadAllFrom((uint64_t)v33, v3))
            {

              goto LABEL_62;
            }
            PBReaderRecallMark();
            v34 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v33;

LABEL_59:
            if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
              goto LABEL_60;
            break;
          default:
            if (!PBReaderSkipValueWithTag())
              goto LABEL_62;
            goto LABEL_59;
        }
      }
    }
LABEL_60:
    v36 = v3[*v6] == 0;
  }
  else
  {
LABEL_62:
    v36 = 0;
  }
  objc_sync_exit(v3);

  return v36;
}

void sub_18931D290(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryFormatReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOPDPlaceSummaryFormatReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18931D2F0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryFormatIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  int v13;
  int v14;
  unsigned int v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int v20;
  BOOL v21;
  unsigned int v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  int v26;
  unsigned int v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  int v31;
  _BOOL8 v32;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        if (v10 == -1 || v10 >= *(_QWORD *)&a1[*v3])
          break;
        v11 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v13 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v14 = v8 & 7;
      if (v13 || v14 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0)
            goto LABEL_53;
          v16 = 0;
          while (1)
          {
            v17 = *v2;
            v18 = *(_QWORD *)&a1[v17];
            if (v18 == -1 || v18 >= *(_QWORD *)&a1[*v3])
              goto LABEL_45;
            v19 = v18 + 1;
            v20 = *(char *)(*(_QWORD *)&a1[*v5] + v18);
            *(_QWORD *)&a1[v17] = v19;
            if (v20 < 0)
            {
              v21 = v16++ > 8;
              if (!v21)
                continue;
            }
            goto LABEL_50;
          }
        case 2u:
          if ((v8 & 7) != 0)
            goto LABEL_53;
          v22 = 0;
          while (1)
          {
            v23 = *v2;
            v24 = *(_QWORD *)&a1[v23];
            if (v24 == -1 || v24 >= *(_QWORD *)&a1[*v3])
              goto LABEL_45;
            v25 = v24 + 1;
            v26 = *(char *)(*(_QWORD *)&a1[*v5] + v24);
            *(_QWORD *)&a1[v23] = v25;
            if (v26 < 0)
            {
              v21 = v22++ > 8;
              if (!v21)
                continue;
            }
            goto LABEL_50;
          }
        case 3u:
          if ((v8 & 7) != 0)
            goto LABEL_53;
          v27 = 0;
          break;
        case 4u:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEOPDMapsIdentifierIsValid(a1))
            goto LABEL_53;
          PBReaderRecallMark();
          continue;
        default:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_53:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v28 = *v2;
        v29 = *(_QWORD *)&a1[v28];
        if (v29 == -1 || v29 >= *(_QWORD *)&a1[*v3])
          break;
        v30 = v29 + 1;
        v31 = *(char *)(*(_QWORD *)&a1[*v5] + v29);
        *(_QWORD *)&a1[v28] = v30;
        if (v31 < 0)
        {
          v21 = v27++ > 8;
          if (!v21)
            continue;
        }
        goto LABEL_50;
      }
LABEL_45:
      a1[*v4] = 1;
LABEL_50:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v32 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v32;
}

BOOL GEOPDPlaceSummaryLayoutLineReadAllFrom(_BYTE *a1, void *a2, int a3)
{
  char *v5;
  int *v6;
  int *v7;
  int *v8;
  int *v9;
  char v10;
  unsigned int v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  BOOL v16;
  int v17;
  unint64_t v19;
  GEOPDPlaceSummaryLayoutUnit *v20;
  char v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  char v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  BOOL v33;
  uint64_t v34;
  _BOOL8 v35;

  v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    v6 = (int *)MEMORY[0x1E0D82BF0];
    v7 = (int *)MEMORY[0x1E0D82BD8];
    v8 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v5[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v5[*MEMORY[0x1E0D82BD8]])
    {
      v9 = (int *)MEMORY[0x1E0D82BB8];
      while (1)
      {
        if (v5[*v8])
          goto LABEL_51;
        v10 = 0;
        v11 = 0;
        v12 = 0;
        while (1)
        {
          v13 = *v6;
          v14 = *(_QWORD *)&v5[v13];
          if (v14 == -1 || v14 >= *(_QWORD *)&v5[*v7])
            break;
          v15 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v14);
          *(_QWORD *)&v5[v13] = v14 + 1;
          v12 |= (unint64_t)(v15 & 0x7F) << v10;
          if ((v15 & 0x80) == 0)
            goto LABEL_13;
          v10 += 7;
          v16 = v11++ >= 9;
          if (v16)
          {
            v12 = 0;
            v17 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        v17 = v5[*v8];
        if (v5[*v8])
          v12 = 0;
LABEL_15:
        if (v17 || (v12 & 7) == 4)
          goto LABEL_51;
        v19 = v12 >> 3;
        if ((v12 >> 3) == 3)
          break;
        if ((_DWORD)v19 == 2)
        {
          v27 = 0;
          v28 = 0;
          v29 = 0;
          a1[20] |= 1u;
          while (1)
          {
            v30 = *v6;
            v31 = *(_QWORD *)&v5[v30];
            if (v31 == -1 || v31 >= *(_QWORD *)&v5[*v7])
              break;
            v32 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v31);
            *(_QWORD *)&v5[v30] = v31 + 1;
            v29 |= (unint64_t)(v32 & 0x7F) << v27;
            if ((v32 & 0x80) == 0)
              goto LABEL_46;
            v27 += 7;
            v16 = v28++ >= 9;
            if (v16)
            {
              v29 = 0;
              goto LABEL_48;
            }
          }
          v5[*v8] = 1;
LABEL_46:
          if (v5[*v8])
            v29 = 0;
LABEL_48:
          v33 = v29 != 0;
          v34 = 16;
LABEL_49:
          a1[v34] = v33;
          goto LABEL_50;
        }
        if ((_DWORD)v19 == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_53;
          v20 = objc_alloc_init(GEOPDPlaceSummaryLayoutUnit);
          if (!GEOPDPlaceSummaryLayoutUnitReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_53;
          }
          PBReaderRecallMark();
          objc_msgSend(a1, "addUnit:", v20, 0, 0);

        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_53;
        }
LABEL_50:
        if (*(_QWORD *)&v5[*v6] >= *(_QWORD *)&v5[*v7])
          goto LABEL_51;
      }
      v21 = 0;
      v22 = 0;
      v23 = 0;
      a1[20] |= 2u;
      while (1)
      {
        v24 = *v6;
        v25 = *(_QWORD *)&v5[v24];
        if (v25 == -1 || v25 >= *(_QWORD *)&v5[*v7])
          break;
        v26 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v25);
        *(_QWORD *)&v5[v24] = v25 + 1;
        v23 |= (unint64_t)(v26 & 0x7F) << v21;
        if ((v26 & 0x80) == 0)
          goto LABEL_42;
        v21 += 7;
        v16 = v22++ >= 9;
        if (v16)
        {
          v23 = 0;
          goto LABEL_44;
        }
      }
      v5[*v8] = 1;
LABEL_42:
      if (v5[*v8])
        v23 = 0;
LABEL_44:
      v33 = v23 != 0;
      v34 = 17;
      goto LABEL_49;
    }
LABEL_51:
    v35 = v5[*v8] == 0;
  }
  else
  {
LABEL_53:
    v35 = 0;
  }
  objc_sync_exit(v5);

  return v35;
}

void sub_18931E5CC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryLayoutLineReadFrom(_BYTE *a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOPDPlaceSummaryLayoutLineReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18931E62C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryLayoutLineIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  int v13;
  int v14;
  unint64_t v16;
  unsigned int v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  int v27;
  _BOOL8 v28;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_44;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        if (v10 == -1 || v10 >= *(_QWORD *)&a1[*v3])
          break;
        v11 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v13 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v14 = v8 & 7;
      if (v13 || v14 == 4)
        goto LABEL_44;
      v16 = v8 >> 3;
      if ((v8 >> 3) == 3)
        break;
      if ((_DWORD)v16 == 2)
      {
        if ((v8 & 7) != 0)
          goto LABEL_46;
        v23 = 0;
        while (1)
        {
          v24 = *v2;
          v25 = *(_QWORD *)&a1[v24];
          if (v25 == -1 || v25 >= *(_QWORD *)&a1[*v3])
            goto LABEL_41;
          v26 = v25 + 1;
          v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
          *(_QWORD *)&a1[v24] = v26;
          if (v27 < 0)
          {
            v22 = v23++ > 8;
            if (!v22)
              continue;
          }
          goto LABEL_43;
        }
      }
      if ((_DWORD)v16 == 1)
      {
        if (v14 != 2 || !PBReaderPlaceMark() || !GEOPDPlaceSummaryLayoutUnitIsValid(a1))
        {
LABEL_46:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_46;
      }
LABEL_43:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_44;
    }
    if ((v8 & 7) != 0)
      goto LABEL_46;
    v17 = 0;
    while (1)
    {
      v18 = *v2;
      v19 = *(_QWORD *)&a1[v18];
      if (v19 == -1 || v19 >= *(_QWORD *)&a1[*v3])
        break;
      v20 = v19 + 1;
      v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
      *(_QWORD *)&a1[v18] = v20;
      if (v21 < 0)
      {
        v22 = v17++ > 8;
        if (!v22)
          continue;
      }
      goto LABEL_43;
    }
LABEL_41:
    a1[*v4] = 1;
    goto LABEL_43;
  }
LABEL_44:
  v28 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v28;
}

BOOL GEOPDPlaceSummaryLayoutUnitIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  int v13;
  int v14;
  unint64_t v16;
  unsigned int v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  int v27;
  _BOOL8 v28;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (!a1[*v4])
    {
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        if (v10 == -1 || v10 >= *(_QWORD *)&a1[*v3])
          break;
        v11 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v13 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v14 = v8 & 7;
      if (v13 || v14 == 4)
        break;
      v16 = v8 >> 3;
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0)
            goto LABEL_188;
          v17 = 0;
          do
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            if (v19 == -1 || v19 >= *(_QWORD *)&a1[*v3])
            {
              a1[*v4] = 1;
              goto LABEL_173;
            }
            v20 = v19 + 1;
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if ((v21 & 0x80000000) == 0)
              break;
            v22 = v17++ > 8;
          }
          while (!v22);
          goto LABEL_173;
        case 2u:
          if (v14 != 2
            || !PBReaderPlaceMark()
            || !GEOPDPlaceSummaryLayoutUnitNameIsValid((unsigned __int8 *)a1))
          {
            goto LABEL_188;
          }
          goto LABEL_172;
        case 3u:
          if (v14 != 2
            || !PBReaderPlaceMark()
            || !GEOPDPlaceSummaryLayoutUnitCategoryIsValid((unsigned __int8 *)a1))
          {
            goto LABEL_188;
          }
          goto LABEL_172;
        case 4u:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEOPDPlaceSummaryLayoutUnitDistanceIsValid(a1))
            goto LABEL_188;
          goto LABEL_172;
        case 5u:
          if (v14 != 2
            || !PBReaderPlaceMark()
            || !GEOPDPlaceSummaryLayoutUnitPriceIsValid((unsigned __int8 *)a1))
          {
            goto LABEL_188;
          }
          goto LABEL_172;
        case 6u:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEOPDPlaceSummaryLayoutUnitHoursIsValid(a1))
            goto LABEL_188;
          goto LABEL_172;
        case 7u:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEOPDPlaceSummaryLayoutUnitAddressIsValid(a1))
            goto LABEL_188;
          goto LABEL_172;
        case 8u:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEOPDPlaceSummaryLayoutUnitRatingsIsValid(a1))
            goto LABEL_188;
          goto LABEL_172;
        case 9u:
          if (v14 != 2
            || !PBReaderPlaceMark()
            || !GEOPDPlaceSummaryLayoutUnitTransitShieldsIsValid((unsigned __int8 *)a1))
          {
            goto LABEL_188;
          }
          goto LABEL_172;
        case 0xAu:
          if (v14 != 2
            || !PBReaderPlaceMark()
            || !GEOPDPlaceSummaryLayoutUnitUserGeneratedGuidesIsValid((unsigned __int8 *)a1))
          {
            goto LABEL_188;
          }
          goto LABEL_172;
        case 0xBu:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEOPDPlaceSummaryLayoutUnitCuratedGuidesIsValid(a1))
            goto LABEL_188;
          goto LABEL_172;
        case 0xCu:
          if (v14 != 2
            || !PBReaderPlaceMark()
            || !GEOPDPlaceSummaryLayoutUnitEVChargersNumberIsValid((unsigned __int8 *)a1))
          {
            goto LABEL_188;
          }
          goto LABEL_172;
        case 0xDu:
          if (v14 != 2
            || !PBReaderPlaceMark()
            || !GEOPDPlaceSummaryLayoutUnitUGCUserSubmittedRecommendationsIsValid((unsigned __int8 *)a1))
          {
            goto LABEL_188;
          }
          goto LABEL_172;
        case 0xEu:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEOPDPlaceSummaryLayoutUnitStringIsValid(a1))
            goto LABEL_188;
          goto LABEL_172;
        case 0xFu:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEOPDPlaceSummaryLayoutUnitServerOverrideIsValid(a1))
            goto LABEL_188;
          goto LABEL_172;
        case 0x10u:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEOPDPlaceSummaryLayoutUnitContainmentIsValid(a1))
            goto LABEL_188;
          goto LABEL_172;
        case 0x11u:
          if (v14 != 2
            || !PBReaderPlaceMark()
            || !GEOPDPlaceSummaryLayoutUnitRecentIsValid((unsigned __int8 *)a1))
          {
            goto LABEL_188;
          }
          goto LABEL_172;
        case 0x12u:
          if (v14 != 2
            || !PBReaderPlaceMark()
            || !GEOPDPlaceSummaryLayoutUnitHighlightMainIsValid((unsigned __int8 *)a1))
          {
            goto LABEL_188;
          }
          goto LABEL_172;
        case 0x13u:
          if (v14 != 2
            || !PBReaderPlaceMark()
            || !GEOPDPlaceSummaryLayoutUnitHighlightExtraIsValid((unsigned __int8 *)a1))
          {
            goto LABEL_188;
          }
          goto LABEL_172;
        case 0x14u:
          if (v14 != 2
            || !PBReaderPlaceMark()
            || !GEOPDPlaceSummaryLayoutUnitPublisherNameForGuideIsValid((unsigned __int8 *)a1))
          {
            goto LABEL_188;
          }
          goto LABEL_172;
        case 0x15u:
          if (v14 != 2
            || !PBReaderPlaceMark()
            || !GEOPDPlaceSummaryLayoutUnitNumPlacesInGuideIsValid((unsigned __int8 *)a1))
          {
            goto LABEL_188;
          }
          goto LABEL_172;
        case 0x16u:
          if (v14 != 2
            || !PBReaderPlaceMark()
            || !GEOPDPlaceSummaryLayoutUnitPublisherDescriptionIsValid((unsigned __int8 *)a1))
          {
            goto LABEL_188;
          }
          goto LABEL_172;
        case 0x17u:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEOPDPlaceSummaryLayoutUnitSecondaryNameIsValid(a1))
            goto LABEL_188;
          goto LABEL_172;
        case 0x18u:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEOPDPlaceSummaryLayoutUnitFactoidIsValid(a1))
            goto LABEL_188;
          goto LABEL_172;
        case 0x19u:
          if (v14 != 2
            || !PBReaderPlaceMark()
            || !GEOPDPlaceSummaryLayoutUnitArpRatingsIsValid((unsigned __int8 *)a1))
          {
            goto LABEL_188;
          }
          goto LABEL_172;
        case 0x1Au:
          if (v14 != 2
            || !PBReaderPlaceMark()
            || !GEOPDPlaceSummaryLayoutUnitRealTimeEVChargerAvailabilityIsValid((unsigned __int8 *)a1))
          {
            goto LABEL_188;
          }
          goto LABEL_172;
        case 0x1Bu:
          if (v14 != 2
            || !PBReaderPlaceMark()
            || !GEOPDPlaceSummaryLayoutUnitDetourTimeIsValid((unsigned __int8 *)a1))
          {
            goto LABEL_188;
          }
          goto LABEL_172;
        case 0x1Cu:
          if (v14 != 2
            || !PBReaderPlaceMark()
            || !GEOPDPlaceSummaryLayoutUnitHikingDifficultyIsValid((unsigned __int8 *)a1))
          {
            goto LABEL_188;
          }
          goto LABEL_172;
        case 0x1Du:
          if (v14 != 2
            || !PBReaderPlaceMark()
            || !GEOPDPlaceSummaryLayoutUnitHikingTrailLengthIsValid((unsigned __int8 *)a1))
          {
            goto LABEL_188;
          }
          goto LABEL_172;
        case 0x1Eu:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEOPDPlaceSummaryLayoutUnitPhotoCarouselIsValid(a1))
            goto LABEL_188;
          goto LABEL_172;
        case 0x1Fu:
          if (v14 != 2
            || !PBReaderPlaceMark()
            || !GEOPDPlaceSummaryLayoutUnitUserNoteIsValid((unsigned __int8 *)a1))
          {
            goto LABEL_188;
          }
          goto LABEL_172;
        case 0x20u:
          if (v14 != 2
            || !PBReaderPlaceMark()
            || !GEOPDPlaceSummaryLayoutUnitInUserLibraryIsValid((unsigned __int8 *)a1))
          {
            goto LABEL_188;
          }
          goto LABEL_172;
        case 0x21u:
          if (v14 != 2
            || !PBReaderPlaceMark()
            || !GEOPDPlaceSummaryLayoutUnitHikeRouteFactoidElevationGainLossIsValid((unsigned __int8 *)a1))
          {
            goto LABEL_188;
          }
          goto LABEL_172;
        case 0x22u:
          if (v14 != 2
            || !PBReaderPlaceMark()
            || !GEOPDPlaceSummaryLayoutUnitHikeRouteTypeIsValid((unsigned __int8 *)a1))
          {
            goto LABEL_188;
          }
          goto LABEL_172;
        case 0x23u:
          if (v14 != 2
            || !PBReaderPlaceMark()
            || !GEOPDPlaceSummaryLayoutUnitHikeRouteDurationIsValid((unsigned __int8 *)a1))
          {
            goto LABEL_188;
          }
          goto LABEL_172;
        case 0x24u:
          if (v14 == 2
            && PBReaderPlaceMark()
            && GEOPDPlaceSummaryLayoutUnitHikeRouteLengthIsValid((unsigned __int8 *)a1))
          {
            goto LABEL_172;
          }
          goto LABEL_188;
        default:
          if ((_DWORD)v16 == 101)
          {
            if ((v8 & 7) != 0)
              goto LABEL_188;
            v23 = 0;
            while (1)
            {
              v24 = *v2;
              v25 = *(_QWORD *)&a1[v24];
              if (v25 == -1 || v25 >= *(_QWORD *)&a1[*v3])
                break;
              v26 = v25 + 1;
              v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
              *(_QWORD *)&a1[v24] = v26;
              if (v27 < 0)
              {
                v22 = v23++ > 8;
                if (!v22)
                  continue;
              }
              goto LABEL_173;
            }
            a1[*v4] = 1;
          }
          else if ((_DWORD)v16 == 102)
          {
            if (v14 != 2 || !PBReaderPlaceMark() || (GEOPDPlaceSummaryLayoutUnitIsValid(a1) & 1) == 0)
            {
LABEL_188:
              PBReaderRecallMark();
              return 0;
            }
LABEL_172:
            PBReaderRecallMark();
          }
          else if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
            goto LABEL_188;
          }
LABEL_173:
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_187;
          break;
      }
    }
  }
LABEL_187:
  v28 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v28;
}

void sub_18931FC78(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDPlaceSummaryLayoutMetadataReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  BOOL v15;
  _BOOL4 v16;
  char v17;
  int *v18;
  BOOL v19;
  int *v20;
  int *v21;
  int *v22;
  int *v23;
  char v24;
  unsigned int v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  BOOL v30;
  int v31;
  unint64_t v33;
  _BOOL4 v34;
  int *v35;
  int v36;
  int v37;
  BOOL v38;
  char v39;
  unsigned int v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  GEOPDPlaceSummaryResultLayoutTemplatePair *v45;
  int v46;
  char v47;
  char v48;
  char v49;
  int v50;
  int v51;
  void *v52;
  char v54;
  BOOL v55;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 36);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 32));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int8 *)(a1 + 48) >> 2) & 1) + ((*(unsigned __int8 *)(a1 + 48) >> 1) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v7])
    {
      case -3:
        v8 = 1;
        goto LABEL_6;
      case -2:
        v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v10 & 1 | v11;
        v15 = v7 != 0;
        v16 = v14 != 0;
        if (v14)
          v17 = 1;
        else
          v17 = v15;
        if ((v14 != 0) | v8 & 1)
          v18 = 0;
        else
          v18 = a3;
        v19 = v18 == 0;
        if (v14)
          v19 = 1;
        v54 = v17;
        v55 = v19;
        v20 = (int *)MEMORY[0x1E0D82BF0];
        v21 = (int *)MEMORY[0x1E0D82BC8];
        v22 = (int *)MEMORY[0x1E0D82BB8];
        v23 = &OBJC_IVAR___GEOPDRelatedEntitySection__reader;
        break;
      default:
        ++v11;
LABEL_6:
        v12 = v9;
        v13 = v10;
LABEL_8:
        ++v7;
        v9 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v20) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v21))
      goto LABEL_72;
    v24 = 0;
    v25 = 0;
    v26 = 0;
    while (1)
    {
      v27 = *v20;
      v28 = *(_QWORD *)(v3 + v27);
      if (v28 == -1 || v28 >= *(_QWORD *)(v3 + *v6))
        break;
      v29 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v28);
      *(_QWORD *)(v3 + v27) = v28 + 1;
      v26 |= (unint64_t)(v29 & 0x7F) << v24;
      if ((v29 & 0x80) == 0)
        goto LABEL_28;
      v24 += 7;
      v30 = v25++ >= 9;
      if (v30)
      {
        v26 = 0;
        v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_30;
      }
    }
    *(_BYTE *)(v3 + *v21) = 1;
LABEL_28:
    v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(_BYTE *)(v3 + *v21))
      v26 = 0;
LABEL_30:
    if (v31 || (v26 & 7) == 4)
    {
LABEL_72:
      if (v16)
      {
        v48 = 1;
        goto LABEL_87;
      }
      if (!v18)
        goto LABEL_88;
      while (1)
      {
        v51 = *v18++;
        v50 = v51;
        if (v51 == 2)
          break;
        if (v50 == 3)
        {
          v49 = 2;
LABEL_78:
          *(_BYTE *)(a1 + v23[248]) |= v49;
        }
        else if (!v50)
        {
          goto LABEL_88;
        }
      }
      v49 = 4;
      goto LABEL_78;
    }
    v33 = v26 >> 3;
    v34 = v16;
    if (!v55)
    {
      v35 = v18;
      do
      {
        v37 = *v35++;
        v36 = v37;
        v34 = v37 != 0;
        if (v37)
          v38 = v36 == (_DWORD)v33;
        else
          v38 = 1;
      }
      while (!v38);
    }
    if ((_DWORD)v33 == 3)
      break;
    if ((_DWORD)v33 == 2)
    {
      if (v34 && (*(_BYTE *)(a1 + v23[248]) & 4) == 0)
      {
        if ((PBReaderPlaceMark() & 1) == 0)
        {
LABEL_84:
          v48 = 0;
          goto LABEL_86;
        }
        v45 = objc_alloc_init(GEOPDPlaceSummaryResultLayoutTemplatePair);
        if (!GEOPDPlaceSummaryResultLayoutTemplatePairReadAllFrom((uint64_t)v45, (void *)v3, v9 & 1))
          goto LABEL_85;
        PBReaderRecallMark();
        -[GEOPDPlaceSummaryLayoutMetadata _addNoFlagsLayoutTemplatePair:](a1, v45);
        goto LABEL_62;
      }
    }
    else
    {
      if ((_DWORD)v33 != 1)
      {
        v46 = PBReaderSkipValueWithTag();
        v21 = (int *)MEMORY[0x1E0D82BC8];
        if (!v46)
          goto LABEL_83;
        goto LABEL_71;
      }
      if ((v8 & 1) != 0)
      {
        v39 = 0;
        v40 = 0;
        v41 = 0;
        *(_BYTE *)(a1 + v23[248]) |= 1u;
        while (1)
        {
          v42 = *v20;
          v43 = *(_QWORD *)(v3 + v42);
          if (v43 == -1 || v43 >= *(_QWORD *)(v3 + *v6))
            break;
          v44 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v43);
          *(_QWORD *)(v3 + v42) = v43 + 1;
          v41 |= (unint64_t)(v44 & 0x7F) << v39;
          if ((v44 & 0x80) == 0)
            goto LABEL_68;
          v39 += 7;
          v30 = v40++ >= 9;
          if (v30)
          {
            LODWORD(v41) = 0;
            goto LABEL_70;
          }
        }
        *(_BYTE *)(v3 + *v21) = 1;
LABEL_68:
        if (*(_BYTE *)(v3 + *v21))
          LODWORD(v41) = 0;
LABEL_70:
        *(_DWORD *)(a1 + 44) = v41;
        goto LABEL_71;
      }
    }
LABEL_65:
    v47 = PBReaderSkipValueWithTag();
    v21 = (int *)MEMORY[0x1E0D82BC8];
    if ((v47 & 1) == 0)
    {
LABEL_83:
      v48 = 0;
      goto LABEL_87;
    }
LABEL_71:
    if ((v54 & 1) == 0)
      goto LABEL_72;
  }
  if (!v34 || (*(_BYTE *)(a1 + v23[248]) & 2) != 0)
    goto LABEL_65;
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_84;
  v45 = objc_alloc_init(GEOPDPlaceSummaryDynamicContextServerOverride);
  if (GEOPDPlaceSummaryDynamicContextServerOverrideReadAllFrom((uint64_t)v45, (void *)v3, v9 & 1))
  {
    PBReaderRecallMark();
    -[GEOPDPlaceSummaryLayoutMetadata _addNoFlagsDyanmicContextServerOverride:](a1, v45);
LABEL_62:

    v23 = &OBJC_IVAR___GEOPDRelatedEntitySection__reader;
    v21 = (int *)MEMORY[0x1E0D82BC8];
    goto LABEL_71;
  }
LABEL_85:

  v48 = 0;
  v23 = &OBJC_IVAR___GEOPDRelatedEntitySection__reader;
LABEL_86:
  v21 = (int *)MEMORY[0x1E0D82BC8];
LABEL_87:
  *(_BYTE *)(a1 + v23[248]) |= 4u;
  *(_BYTE *)(a1 + v23[248]) |= 2u;
  if ((v48 & 1) != 0)
  {
LABEL_88:
    v3 = *(_BYTE *)(v3 + *v21) == 0;
    if (v16)
      goto LABEL_89;
  }
  else
  {
    v3 = 0;
    if (v16)
    {
LABEL_89:
      v52 = *(void **)(a1 + 8);
      *(_QWORD *)(a1 + 8) = 0;

    }
  }
  return v3;
}

void sub_1893204B0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189320FA8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDPlaceSummaryLayoutMetadataCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  _BYTE v20[128];
  _BYTE v21[128];
  uint64_t v22;

  v22 = *MEMORY[0x1E0C80C00];
  v16 = 0u;
  v17 = 0u;
  v18 = 0u;
  v19 = 0u;
  v2 = *(id *)(a1 + 24);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v16, v21, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v17;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v17 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v16 + 1) + 8 * v6++), "readAll:", 1);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v16, v21, 16);
    }
    while (v4);
  }

  v14 = 0u;
  v15 = 0u;
  v12 = 0u;
  v13 = 0u;
  v7 = *(id *)(a1 + 16);
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v12, v20, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v13;
    do
    {
      v11 = 0;
      do
      {
        if (*(_QWORD *)v13 != v10)
          objc_enumerationMutation(v7);
        objc_msgSend(*(id *)(*((_QWORD *)&v12 + 1) + 8 * v11++), "readAll:", 1, (_QWORD)v12);
      }
      while (v9 != v11);
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v12, v20, 16);
    }
    while (v9);
  }

}

unint64_t GEOPDPlaceSummaryLayoutMetadataReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 36))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDPlaceSummaryLayoutMetadataReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 40));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 32) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 36) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDPlaceSummaryLayoutMetadataReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDPlaceSummaryLayoutMetadataReadAllFrom_initialTag;
  Specified = GEOPDPlaceSummaryLayoutMetadataReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDPlaceSummaryLayoutMetadataCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return Specified;
}

void sub_1893212CC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDPlaceSummaryLayoutMetadataReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOPDPlaceSummaryLayoutMetadataReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18932132C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryLayoutMetadataIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  int v13;
  int v14;
  unint64_t v16;
  unsigned int v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int v21;
  _BOOL8 v23;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_41;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        if (v10 == -1 || v10 >= *(_QWORD *)&a1[*v3])
          break;
        v11 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v13 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v14 = v8 & 7;
      if (v13 || v14 == 4)
        goto LABEL_41;
      v16 = v8 >> 3;
      if ((v8 >> 3) == 3)
        break;
      if ((_DWORD)v16 == 2)
      {
        if (v14 != 2 || !PBReaderPlaceMark() || !GEOPDPlaceSummaryResultLayoutTemplatePairIsValid(a1))
          goto LABEL_43;
LABEL_36:
        PBReaderRecallMark();
        goto LABEL_40;
      }
      if ((_DWORD)v16 == 1)
      {
        if ((v8 & 7) != 0)
          goto LABEL_43;
        v17 = 0;
        while (1)
        {
          v18 = *v2;
          v19 = *(_QWORD *)&a1[v18];
          if (v19 == -1 || v19 >= *(_QWORD *)&a1[*v3])
            break;
          v20 = v19 + 1;
          v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
          *(_QWORD *)&a1[v18] = v20;
          if (v21 < 0 && v17++ <= 8)
            continue;
          goto LABEL_40;
        }
        a1[*v4] = 1;
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_43;
      }
LABEL_40:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_41;
    }
    if (v14 != 2 || !PBReaderPlaceMark() || !GEOPDPlaceSummaryDynamicContextServerOverrideIsValid(a1))
    {
LABEL_43:
      PBReaderRecallMark();
      return 0;
    }
    goto LABEL_36;
  }
LABEL_41:
  v23 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v23;
}

BOOL GEOPDPlaceSummaryResultLayoutTemplatePairIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  BOOL v12;
  int v13;
  int v14;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int v20;
  unsigned int v21;
  unsigned int v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  int v26;
  _BOOL8 v27;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        if (v10 == -1 || v10 >= *(_QWORD *)&a1[*v3])
          break;
        v11 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        v12 = v7++ >= 9;
        if (v12)
        {
          v8 = 0;
          v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v13 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v14 = v8 & 7;
      if (v13 || v14 == 4)
        break;
      v16 = v8 >> 3;
      if ((v8 >> 3) == 3)
      {
        if (v14 == 2)
        {
          if (!PBReaderPlaceMark())
            goto LABEL_52;
LABEL_39:
          while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
          {
            v22 = a1[*v4];
            if (a1[*v4])
              break;
            while (1)
            {
              v23 = *v2;
              v24 = *(_QWORD *)&a1[v23];
              if (v24 == -1 || v24 >= *(_QWORD *)&a1[*v3])
                break;
              v25 = v24 + 1;
              v26 = *(char *)(*(_QWORD *)&a1[*v5] + v24);
              *(_QWORD *)&a1[v23] = v25;
              if (v26 < 0)
              {
                v12 = v22++ >= 9;
                if (!v12)
                  continue;
              }
              goto LABEL_39;
            }
            a1[*v4] = 1;
          }
LABEL_35:
          PBReaderRecallMark();
          continue;
        }
        if ((v8 & 7) != 0)
          goto LABEL_52;
        while (1)
        {
          v17 = *v2;
          v18 = *(_QWORD *)&a1[v17];
          if (v18 == -1 || v18 >= *(_QWORD *)&a1[*v3])
            break;
          v19 = v18 + 1;
          v20 = *(char *)(*(_QWORD *)&a1[*v5] + v18);
          *(_QWORD *)&a1[v17] = v19;
          if (v20 < 0)
          {
            v21 = v14++;
            if (v21 <= 8)
              continue;
          }
          goto LABEL_49;
        }
        a1[*v4] = 1;
      }
      else
      {
        if ((_DWORD)v16 == 2)
        {
          if (v14 != 2 || !PBReaderPlaceMark() || !GEOPDPlaceSummaryLayoutTemplateIsValid(a1))
          {
LABEL_52:
            PBReaderRecallMark();
            return 0;
          }
          goto LABEL_35;
        }
        if ((_DWORD)v16 == 1)
        {
          if (v14 != 2 || !PBReaderPlaceMark() || !GEOPDMapsIdentifierIsValid(a1))
            goto LABEL_52;
          goto LABEL_35;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_52;
      }
LABEL_49:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v27 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v27;
}

void sub_189321B50(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDPlaceSummaryLayoutMetadataIsDirty(uint64_t a1)
{
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t i;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _BYTE v11[128];
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  if ((*(_BYTE *)(a1 + 48) & 0xE) != 0)
    return 1;
  if ((*(_BYTE *)(a1 + 48) & 2) == 0)
    return 0;
  v9 = 0u;
  v10 = 0u;
  v7 = 0u;
  v8 = 0u;
  v3 = *(id *)(a1 + 16);
  v2 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
  if (v2)
  {
    v4 = *(_QWORD *)v8;
    while (2)
    {
      for (i = 0; i != v2; ++i)
      {
        if (*(_QWORD *)v8 != v4)
          objc_enumerationMutation(v3);
        if ((GEOPDPlaceSummaryDynamicContextServerOverrideIsDirty(*(os_unfair_lock_s **)(*((_QWORD *)&v7 + 1) + 8 * i)) & 1) != 0)
        {
          v2 = 1;
          goto LABEL_15;
        }
      }
      v2 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
      if (v2)
        continue;
      break;
    }
  }
LABEL_15:

  return v2;
}

os_unfair_lock_s *GEOPDPlaceSummaryLayoutMetadataIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOPDPlaceSummaryLayoutMetadataIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 10);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_189322310(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18932281C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDPlaceSummaryLayoutTemplateReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  _BOOL4 v15;
  int *v16;
  BOOL v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  int v28;
  unint64_t v30;
  _BOOL4 v31;
  int *v32;
  int v33;
  int v34;
  BOOL v35;
  uint64_t v36;
  void *v37;
  GEOPDPlaceSummaryLayoutTemplateEntry *v38;
  char v39;
  char v40;
  char v41;
  int v42;
  int v43;
  void *v44;
  BOOL v46;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 36);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 32));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int8 *)(a1 + 44) >> 1) & 1) + (*(_BYTE *)(a1 + 44) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v9])
    {
      case -3:
        v8 = 1;
        goto LABEL_6;
      case -2:
        v12 = v7;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v10 & 1 | v11;
        v15 = v14 != 0;
        if ((v14 != 0) | v8 & 1)
          v16 = 0;
        else
          v16 = a3;
        v17 = v16 == 0;
        if (v14)
          v17 = 1;
        v46 = v17;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_6:
        v12 = v7;
        v13 = v10;
LABEL_8:
        ++v9;
        v7 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v19))
      goto LABEL_58;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      if (v25 == -1 || v25 >= *(_QWORD *)(v3 + *v6))
        break;
      v26 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v25 + 1;
      v23 |= (unint64_t)(v26 & 0x7F) << v21;
      if ((v26 & 0x80) == 0)
        goto LABEL_25;
      v21 += 7;
      if (v22++ >= 9)
      {
        v23 = 0;
        v28 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_25:
    v28 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_27:
    if (v28 || (v23 & 7) == 4)
    {
LABEL_58:
      if (v15)
      {
        v40 = 1;
        goto LABEL_70;
      }
      if (!v16)
        goto LABEL_71;
      while (1)
      {
        v43 = *v16++;
        v42 = v43;
        if (v43 == 1)
          break;
        if (v42 == 2)
        {
          v41 = 1;
LABEL_64:
          *(_BYTE *)(a1 + 44) |= v41;
        }
        else if (!v42)
        {
          goto LABEL_71;
        }
      }
      v41 = 2;
      goto LABEL_64;
    }
    v30 = v23 >> 3;
    v31 = v15;
    if (!v46)
    {
      v32 = v16;
      do
      {
        v34 = *v32++;
        v33 = v34;
        v31 = v34 != 0;
        if (v34)
          v35 = v33 == (_DWORD)v30;
        else
          v35 = 1;
      }
      while (!v35);
    }
    if ((_DWORD)v30 == 2)
      break;
    if ((_DWORD)v30 == 1)
    {
      if (!v31)
        goto LABEL_50;
      if ((*(_BYTE *)(a1 + 44) & 2) != 0)
      {
        if ((PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_69:
          v40 = 0;
          goto LABEL_70;
        }
        v9 += *(unsigned __int8 *)(a1 + 44) << 30 >> 31;
      }
      else
      {
        PBReaderReadString();
        v36 = objc_claimAutoreleasedReturnValue();
        v37 = *(void **)(a1 + 24);
        *(_QWORD *)(a1 + 24) = v36;

        --v9;
      }
    }
    else if (!PBReaderSkipValueWithTag())
    {
      goto LABEL_69;
    }
LABEL_51:
    if (v9)
      v39 = 1;
    else
      v39 = v15;
    if ((v39 & 1) == 0)
      goto LABEL_58;
  }
  if (!v31 || (*(_BYTE *)(a1 + 44) & 1) != 0)
  {
LABEL_50:
    if ((PBReaderSkipValueWithTag() & 1) == 0)
      goto LABEL_69;
    goto LABEL_51;
  }
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_69;
  v38 = objc_alloc_init(GEOPDPlaceSummaryLayoutTemplateEntry);
  if (GEOPDPlaceSummaryLayoutTemplateEntryReadAllFrom((uint64_t)v38, (void *)v3, v7 & 1))
  {
    PBReaderRecallMark();
    -[GEOPDPlaceSummaryLayoutTemplate _addNoFlagsTemplateEntry:](a1, v38);

    v19 = (int *)MEMORY[0x1E0D82BC8];
    goto LABEL_51;
  }

  v40 = 0;
  v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_70:
  *(_BYTE *)(a1 + 44) |= 2u;
  *(_BYTE *)(a1 + 44) |= 1u;
  if ((v40 & 1) != 0)
  {
LABEL_71:
    v3 = *(_BYTE *)(v3 + *v19) == 0;
    if (v15)
      goto LABEL_72;
  }
  else
  {
    v3 = 0;
    if (v15)
    {
LABEL_72:
      v44 = *(void **)(a1 + 8);
      *(_QWORD *)(a1 + 8) = 0;

    }
  }
  return v3;
}

void sub_189322D88(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18932358C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDPlaceSummaryLayoutTemplateCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _BYTE v10[128];
  uint64_t v11;

  v11 = *MEMORY[0x1E0C80C00];
  v6 = 0u;
  v7 = 0u;
  v8 = 0u;
  v9 = 0u;
  v1 = *(id *)(a1 + 16);
  v2 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
  if (v2)
  {
    v3 = v2;
    v4 = *(_QWORD *)v7;
    do
    {
      v5 = 0;
      do
      {
        if (*(_QWORD *)v7 != v4)
          objc_enumerationMutation(v1);
        objc_msgSend(*(id *)(*((_QWORD *)&v6 + 1) + 8 * v5++), "readAll:", 1, (_QWORD)v6);
      }
      while (v3 != v5);
      v3 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
    }
    while (v3);
  }

}

unint64_t GEOPDPlaceSummaryLayoutTemplateReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 36))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDPlaceSummaryLayoutTemplateReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 40));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 32) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 36) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDPlaceSummaryLayoutTemplateReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDPlaceSummaryLayoutTemplateReadAllFrom_initialTag;
  Specified = GEOPDPlaceSummaryLayoutTemplateReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDPlaceSummaryLayoutTemplateCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return Specified;
}

void sub_189323818(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDPlaceSummaryLayoutTemplateReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOPDPlaceSummaryLayoutTemplateReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189323878(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryLayoutTemplateIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  int v13;
  int v14;
  _BOOL8 v16;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        if (v10 == -1 || v10 >= *(_QWORD *)&a1[*v3])
          break;
        v11 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v13 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v14 = v8 & 7;
      if (v13 || v14 == 4)
        break;
      if ((v8 >> 3) == 2)
      {
        if (v14 != 2 || !PBReaderPlaceMark() || !GEOPDPlaceSummaryLayoutTemplateEntryIsValid(a1))
          goto LABEL_29;
        PBReaderRecallMark();
      }
      else if ((v8 >> 3) == 1 && v14 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_29:
        PBReaderRecallMark();
        return 0;
      }
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v16 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v16;
}

BOOL GEOPDPlaceSummaryLayoutTemplateEntryIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  BOOL v12;
  int v13;
  int v14;
  unsigned int v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int v20;
  BOOL v21;
  unsigned int v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  int v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  int v30;
  unsigned int v31;
  unsigned int v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  int v36;
  _BOOL8 v37;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (!a1[*v4])
    {
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        if (v10 == -1 || v10 >= *(_QWORD *)&a1[*v3])
          break;
        v11 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        v12 = v7++ >= 9;
        if (v12)
        {
          v8 = 0;
          v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v13 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v14 = v8 & 7;
      if (v13 || v14 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0)
            goto LABEL_63;
          v16 = 0;
          while (1)
          {
            v17 = *v2;
            v18 = *(_QWORD *)&a1[v17];
            if (v18 == -1 || v18 >= *(_QWORD *)&a1[*v3])
              goto LABEL_48;
            v19 = v18 + 1;
            v20 = *(char *)(*(_QWORD *)&a1[*v5] + v18);
            *(_QWORD *)&a1[v17] = v19;
            if (v20 < 0)
            {
              v21 = v16++ > 8;
              if (!v21)
                continue;
            }
            goto LABEL_49;
          }
        case 2u:
          if (v14 == 2 && PBReaderPlaceMark() && GEOPDPlaceSummaryLayoutLineIsValid(a1))
            goto LABEL_32;
          goto LABEL_63;
        case 3u:
          if ((v8 & 7) != 0)
            goto LABEL_63;
          v22 = 0;
          while (1)
          {
            v23 = *v2;
            v24 = *(_QWORD *)&a1[v23];
            if (v24 == -1 || v24 >= *(_QWORD *)&a1[*v3])
              goto LABEL_48;
            v25 = v24 + 1;
            v26 = *(char *)(*(_QWORD *)&a1[*v5] + v24);
            *(_QWORD *)&a1[v23] = v25;
            if (v26 < 0)
            {
              v21 = v22++ > 8;
              if (!v21)
                continue;
            }
            goto LABEL_49;
          }
        case 4u:
          if (v14 == 2)
          {
            if (!PBReaderPlaceMark())
            {
LABEL_63:
              PBReaderRecallMark();
              return 0;
            }
LABEL_52:
            while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
            {
              v32 = a1[*v4];
              if (a1[*v4])
                break;
              while (1)
              {
                v33 = *v2;
                v34 = *(_QWORD *)&a1[v33];
                if (v34 == -1 || v34 >= *(_QWORD *)&a1[*v3])
                  break;
                v35 = v34 + 1;
                v36 = *(char *)(*(_QWORD *)&a1[*v5] + v34);
                *(_QWORD *)&a1[v33] = v35;
                if (v36 < 0)
                {
                  v12 = v32++ >= 9;
                  if (!v12)
                    continue;
                }
                goto LABEL_52;
              }
              a1[*v4] = 1;
            }
LABEL_32:
            PBReaderRecallMark();
          }
          else
          {
            if ((v8 & 7) != 0)
              goto LABEL_63;
            while (1)
            {
              v27 = *v2;
              v28 = *(_QWORD *)&a1[v27];
              if (v28 == -1 || v28 >= *(_QWORD *)&a1[*v3])
                break;
              v29 = v28 + 1;
              v30 = *(char *)(*(_QWORD *)&a1[*v5] + v28);
              *(_QWORD *)&a1[v27] = v29;
              if (v30 < 0)
              {
                v31 = v14++;
                if (v31 <= 8)
                  continue;
              }
              goto LABEL_49;
            }
LABEL_48:
            a1[*v4] = 1;
          }
LABEL_49:
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_61;
          break;
        default:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_63;
          goto LABEL_49;
      }
    }
  }
LABEL_61:
  v37 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v37;
}

void sub_189324008(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDPlaceSummaryLayoutTemplateIsDirty(uint64_t a1)
{
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t i;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _BYTE v11[128];
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  if ((*(_BYTE *)(a1 + 44) & 7) != 0)
    return 1;
  if ((*(_BYTE *)(a1 + 44) & 1) == 0)
    return 0;
  v9 = 0u;
  v10 = 0u;
  v7 = 0u;
  v8 = 0u;
  v3 = *(id *)(a1 + 16);
  v2 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
  if (v2)
  {
    v4 = *(_QWORD *)v8;
    while (2)
    {
      for (i = 0; i != v2; ++i)
      {
        if (*(_QWORD *)v8 != v4)
          objc_enumerationMutation(v3);
        if (GEOPDPlaceSummaryLayoutTemplateEntryIsDirty(*(_QWORD *)(*((_QWORD *)&v7 + 1) + 8 * i)))
        {
          v2 = 1;
          goto LABEL_15;
        }
      }
      v2 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
      if (v2)
        continue;
      break;
    }
  }
LABEL_15:

  return v2;
}

os_unfair_lock_s *GEOPDPlaceSummaryLayoutTemplateIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOPDPlaceSummaryLayoutTemplateIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 10);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_1893245E0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189324BD4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDPlaceSummaryLayoutTemplateEntryReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  _BOOL4 v14;
  int *v15;
  _BOOL4 v16;
  int *v17;
  int *v18;
  BOOL v19;
  int v20;
  int *v21;
  char v22;
  unsigned int v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  BOOL v28;
  int v29;
  int v30;
  unint64_t v32;
  _BOOL4 v33;
  int *v34;
  int v35;
  int v36;
  BOOL v37;
  char v38;
  unsigned int v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  int v44;
  GEOPDPlaceSummaryLayoutLine *v45;
  char v46;
  unsigned int v47;
  uint64_t v48;
  unint64_t v49;
  char v50;
  int *v51;
  char v52;
  unsigned int v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  char v57;
  char v58;
  uint64_t v59;
  char v60;
  unsigned int v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  char v65;
  char v66;
  int v67;
  int v68;
  void *v69;
  _BOOL4 v71;
  int v72;
  BOOL v73;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 52);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 48));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int8 *)(a1 + 68) >> 3) & 1) + ((*(unsigned __int8 *)(a1 + 68) >> 2) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v8])
    {
      case -3:
        v7 = 1;
        goto LABEL_6;
      case -2:
        v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v14 = (v10 & 1 | v11) != 0;
        if (((v10 & 1 | v11) != 0) | v7 & 1)
          v15 = 0;
        else
          v15 = a3;
        v16 = (v10 & 1 | v11) != 0;
        v17 = (int *)MEMORY[0x1E0D82BF0];
        v18 = (int *)MEMORY[0x1E0D82BC8];
        if (*(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(v3 + *v6))
          goto LABEL_106;
        if (v15)
          v19 = (v10 & 1 | v11) != 0;
        else
          v19 = 1;
        if (v8)
          v20 = 1;
        else
          v20 = v14;
        v72 = v20;
        v73 = v19;
        v21 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_6:
        v12 = v9;
        v13 = v10;
LABEL_8:
        ++v8;
        v9 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_BYTE *)(v3 + *v18))
      goto LABEL_106;
    v22 = 0;
    v23 = 0;
    v24 = 0;
    while (1)
    {
      v25 = *v17;
      v26 = *(_QWORD *)(v3 + v25);
      if (v26 == -1 || v26 >= *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v26);
      *(_QWORD *)(v3 + v25) = v26 + 1;
      v24 |= (unint64_t)(v27 & 0x7F) << v22;
      if ((v27 & 0x80) == 0)
        goto LABEL_29;
      v22 += 7;
      v28 = v23++ >= 9;
      if (v28)
      {
        v24 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_31;
      }
    }
    *(_BYTE *)(v3 + *v18) = 1;
LABEL_29:
    v29 = *(unsigned __int8 *)(v3 + *v18);
    if (*(_BYTE *)(v3 + *v18))
      v24 = 0;
LABEL_31:
    v30 = v24 & 7;
    if (v29 || v30 == 4)
    {
LABEL_106:
      if (v16)
      {
        v66 = 1;
        goto LABEL_108;
      }
      if (!v15)
        goto LABEL_118;
      while (1)
      {
        while (1)
        {
          v68 = *v15++;
          v67 = v68;
          if (v68 != 2)
            break;
          LOBYTE(v67) = 8;
LABEL_117:
          *(_BYTE *)(a1 + 68) |= v67;
        }
        if (v67 == 4)
          goto LABEL_117;
        if (!v67)
          goto LABEL_118;
      }
    }
    v32 = v24 >> 3;
    v33 = v16;
    if (!v73)
    {
      v34 = v15;
      do
      {
        v36 = *v34++;
        v35 = v36;
        v33 = v36 != 0;
        if (v36)
          v37 = v35 == (_DWORD)v32;
        else
          v37 = 1;
      }
      while (!v37);
    }
    switch((int)v32)
    {
      case 1:
        if ((v7 & 1) == 0)
          goto LABEL_81;
        v38 = 0;
        v39 = 0;
        v40 = 0;
        *(_BYTE *)(a1 + 68) |= 1u;
        while (1)
        {
          v41 = *v17;
          v42 = *(_QWORD *)(v3 + v41);
          if (v42 == -1 || v42 >= *(_QWORD *)(v3 + *v6))
            break;
          v43 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v42);
          *(_QWORD *)(v3 + v41) = v42 + 1;
          v40 |= (unint64_t)(v43 & 0x7F) << v38;
          if ((v43 & 0x80) == 0)
            goto LABEL_84;
          v38 += 7;
          v28 = v39++ >= 9;
          if (v28)
          {
            LODWORD(v40) = 0;
            goto LABEL_86;
          }
        }
        *(_BYTE *)(v3 + *v18) = 1;
LABEL_84:
        if (*(_BYTE *)(v3 + *v18))
          LODWORD(v40) = 0;
LABEL_86:
        v59 = 60;
        goto LABEL_91;
      case 2:
        if (!v33 || (*(_BYTE *)(a1 + 68) & 8) != 0)
          goto LABEL_81;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_122;
        v71 = v16;
        v45 = objc_alloc_init(GEOPDPlaceSummaryLayoutLine);
        if (GEOPDPlaceSummaryLayoutLineReadAllFrom(v45, (void *)v3, v9 & 1))
        {
          PBReaderRecallMark();
          -[GEOPDPlaceSummaryLayoutTemplateEntry _addNoFlagsLine:](a1, v45);

          v16 = v71;
LABEL_103:
          v18 = (int *)MEMORY[0x1E0D82BC8];
LABEL_104:
          if (!v72)
            goto LABEL_106;
LABEL_105:
          if (*(_QWORD *)(v3 + *v17) >= *(_QWORD *)(v3 + *v6))
            goto LABEL_106;
          continue;
        }

        v66 = 0;
        v16 = v71;
LABEL_124:
        v18 = (int *)MEMORY[0x1E0D82BC8];
LABEL_108:
        *(_BYTE *)(a1 + 68) |= 8u;
        *(_BYTE *)(a1 + 68) |= 4u;
        if ((v66 & 1) != 0)
        {
LABEL_118:
          v3 = *(_BYTE *)(v3 + *v18) == 0;
          if (v16)
            goto LABEL_119;
          return v3;
        }
        v3 = 0;
        if (!v16)
          return v3;
LABEL_119:
        v69 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = 0;

        return v3;
      case 3:
        if ((v7 & 1) == 0)
          goto LABEL_81;
        v46 = 0;
        v47 = 0;
        v40 = 0;
        *(_BYTE *)(a1 + 68) |= 2u;
        while (2)
        {
          v48 = *v17;
          v49 = *(_QWORD *)(v3 + v48);
          if (v49 == -1 || v49 >= *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v50 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v49);
            *(_QWORD *)(v3 + v48) = v49 + 1;
            v40 |= (unint64_t)(v50 & 0x7F) << v46;
            if (v50 < 0)
            {
              v46 += 7;
              v28 = v47++ >= 9;
              if (v28)
              {
                LODWORD(v40) = 0;
                goto LABEL_90;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          LODWORD(v40) = 0;
LABEL_90:
        v59 = 64;
LABEL_91:
        *(_DWORD *)(a1 + v59) = v40;
        goto LABEL_104;
      case 4:
        if (!v33 || (*(_BYTE *)(a1 + 68) & 4) != 0)
        {
LABEL_81:
          v58 = PBReaderSkipValueWithTag();
          v18 = (int *)MEMORY[0x1E0D82BC8];
          if ((v58 & 1) == 0)
          {
LABEL_121:
            v66 = 0;
            goto LABEL_108;
          }
          goto LABEL_104;
        }
        if (v30 != 2)
        {
          v60 = 0;
          v61 = 0;
          v62 = 0;
          while (1)
          {
            v63 = *v17;
            v64 = *(_QWORD *)(v3 + v63);
            if (v64 == -1 || v64 >= *(_QWORD *)(v3 + *v6))
              break;
            v65 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v64);
            *(_QWORD *)(v3 + v63) = v64 + 1;
            v62 |= (unint64_t)(v65 & 0x7F) << v60;
            if (v65 < 0)
            {
              v60 += 7;
              v28 = v61++ >= 9;
              if (!v28)
                continue;
            }
            goto LABEL_102;
          }
          *(_BYTE *)(v3 + *v18) = 1;
LABEL_102:
          PBRepeatedInt32Add();
          goto LABEL_103;
        }
        if (!PBReaderPlaceMark())
        {
LABEL_122:
          v66 = 0;
          goto LABEL_124;
        }
        while (1)
        {
          v51 = (int *)MEMORY[0x1E0D82BC8];
          if (*(_QWORD *)(v3 + *v17) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + (int)*MEMORY[0x1E0D82BC8]))
            break;
          v52 = 0;
          v53 = 0;
          v54 = 0;
          while (1)
          {
            v55 = *v17;
            v56 = *(_QWORD *)(v3 + v55);
            if (v56 == -1 || v56 >= *(_QWORD *)(v3 + *v6))
              break;
            v57 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v56);
            *(_QWORD *)(v3 + v55) = v56 + 1;
            v54 |= (unint64_t)(v57 & 0x7F) << v52;
            if (v57 < 0)
            {
              v52 += 7;
              v28 = v53++ >= 9;
              if (!v28)
                continue;
            }
            goto LABEL_80;
          }
          *(_BYTE *)(v3 + *v51) = 1;
LABEL_80:
          PBRepeatedInt32Add();
        }
        PBReaderRecallMark();
        v18 = (int *)MEMORY[0x1E0D82BC8];
        if ((v72 & 1) == 0)
          goto LABEL_106;
        goto LABEL_105;
      default:
        v44 = PBReaderSkipValueWithTag();
        v18 = (int *)MEMORY[0x1E0D82BC8];
        if (!v44)
          goto LABEL_121;
        goto LABEL_104;
    }
  }
}

void sub_1893258BC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893268F0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDPlaceSummaryLayoutTemplateEntryCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _BYTE v10[128];
  uint64_t v11;

  v11 = *MEMORY[0x1E0C80C00];
  v6 = 0u;
  v7 = 0u;
  v8 = 0u;
  v9 = 0u;
  v1 = *(id *)(a1 + 40);
  v2 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
  if (v2)
  {
    v3 = v2;
    v4 = *(_QWORD *)v7;
    do
    {
      v5 = 0;
      do
      {
        if (*(_QWORD *)v7 != v4)
          objc_enumerationMutation(v1);
        objc_msgSend(*(id *)(*((_QWORD *)&v6 + 1) + 8 * v5++), "readAll:", 1, (_QWORD)v6);
      }
      while (v3 != v5);
      v3 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
    }
    while (v3);
  }

}

unint64_t GEOPDPlaceSummaryLayoutTemplateEntryReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 52))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDPlaceSummaryLayoutTemplateEntryReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 52) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDPlaceSummaryLayoutTemplateEntryReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDPlaceSummaryLayoutTemplateEntryReadAllFrom_initialTag;
  Specified = GEOPDPlaceSummaryLayoutTemplateEntryReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDPlaceSummaryLayoutTemplateEntryCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_189326B7C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDPlaceSummaryLayoutTemplateEntryReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOPDPlaceSummaryLayoutTemplateEntryReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189326BDC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189326E70(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryLayoutTemplateEntryIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v2 = (*(_BYTE *)(a1 + 68) & 0x1C) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return v2;
}

void sub_189327410(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189327E64(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDPlaceSummaryLayoutUnitReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint32x4_t v12;
  int8x16_t v13;
  unsigned int v14;
  int v15;
  unsigned int v16;
  int8x8_t v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unsigned __int8 v21;
  int *v22;
  BOOL v23;
  int *v24;
  int *v25;
  int *v26;
  uint64_t v27;
  unsigned int v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  BOOL v33;
  int v34;
  unint64_t v36;
  BOOL v37;
  int *v38;
  int v39;
  int v40;
  BOOL v41;
  uint64_t v42;
  unsigned int v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  char v47;
  GEOPDPlaceSummaryLayoutUnitName *v48;
  uint64_t v49;
  void *v50;
  uint64_t v51;
  unsigned int v52;
  uint64_t v53;
  unint64_t v54;
  char v55;
  int v56;
  char v57;
  uint64_t v58;
  char v59;
  uint64_t v60;
  char v61;
  char v62;
  char v63;
  char v64;
  char v65;
  char v66;
  char v67;
  char v68;
  char v69;
  char v70;
  char v71;
  char v72;
  char v73;
  char v74;
  char v75;
  char v76;
  char v77;
  char v78;
  char v79;
  char v80;
  char v81;
  char v82;
  char v83;
  char v84;
  char v85;
  char v86;
  char v87;
  char v88;
  char v89;
  char v90;
  char v91;
  char v92;
  char v93;
  char v94;
  char v95;
  int v96;
  uint64_t v97;
  void *v98;
  BOOL v100;
  char v101;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 312));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 308);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 304));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = *(_QWORD *)(a1 + 324);
  v12 = (uint32x4_t)vdupq_n_s32(v11);
  v13.i64[0] = 0x100000001;
  v13.i64[1] = 0x100000001;
  v14 = vaddvq_s32((int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v12, (uint32x4_t)xmmword_189CD9EA0), v13))
      + ((v11 >> 3) & 1);
  v15 = vaddvq_s32(vaddq_s32((int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v12, (uint32x4_t)xmmword_189CD9EE0), v13), vaddq_s32((int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v12, (uint32x4_t)xmmword_189CD9EB0), v13), (int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v12, (uint32x4_t)xmmword_189CD9EC0), v13))));
  v16 = vaddvq_s32((int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v12, (uint32x4_t)xmmword_189CD9ED0), v13))
      + (v11 >> 31);
  v17.i32[0] = v11 >> 36;
  v17.i32[1] = v11 >> 5;
  *(int32x2_t *)v12.i8 = vadd_s32(vadd_s32((int32x2_t)vand_s8((int8x8_t)vmovn_s64((int64x2_t)vshlq_u64((uint64x2_t)vdupq_n_s64(v11), (uint64x2_t)xmmword_189CD9EF0)), (int8x8_t)0x100000001), (int32x2_t)vand_s8((int8x8_t)vshl_u32(*(uint32x2_t *)v12.i8, (uint32x2_t)0xFFFFFFF7FFFFFFF6), (int8x8_t)0x100000001)), vadd_s32((int32x2_t)vand_s8((int8x8_t)vshl_u32(*(uint32x2_t *)v12.i8, (uint32x2_t)0xFFFFFFEAFFFFFFF9), (int8x8_t)0x100000001), (int32x2_t)vand_s8(v17, (int8x8_t)0x100000001)));
  v18 = v14
      + (WORD1(v11) & 1)
      + ((v11 >> 37) & 1)
      + (BYTE3(v11) & 1)
      + ((v11 >> 19) & 1)
      + (BYTE4(v11) & 1)
      + ((v11 >> 33) & 1)
      + vadd_s32(*(int32x2_t *)v12.i8, vdup_lane_s32(*(int32x2_t *)v12.i8, 1)).u32[0]
      + v15
      + v16;
  while (2)
  {
    v19 = 1;
    v20 = 1;
    switch(a3[v7])
    {
      case -3:
        v8 = 1;
        goto LABEL_6;
      case -2:
        v19 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v21 = v10 | (v18 > 0x1B);
        if (((v21 | v8) & 1) != 0)
          v22 = 0;
        else
          v22 = a3;
        v23 = v21;
        v24 = (int *)MEMORY[0x1E0D82BF0];
        v101 = (v22 == 0) | v21;
        v25 = (int *)MEMORY[0x1E0D82BC8];
        v26 = (int *)MEMORY[0x1E0D82BB8];
        v100 = v21;
        break;
      default:
        ++v18;
LABEL_6:
        v19 = v9;
        v20 = v10;
LABEL_8:
        ++v7;
        v9 = v19;
        v10 = v20;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v24) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v25))
      goto LABEL_323;
    v27 = 0;
    v28 = 0;
    v29 = 0;
    while (1)
    {
      v30 = *v24;
      v31 = *(_QWORD *)(v3 + v30);
      if (v31 == -1 || v31 >= *(_QWORD *)(v3 + *v6))
        break;
      v32 = *(_BYTE *)(*(_QWORD *)(v3 + *v26) + v31);
      *(_QWORD *)(v3 + v30) = v31 + 1;
      v29 |= (unint64_t)(v32 & 0x7F) << v27;
      if ((v32 & 0x80) == 0)
        goto LABEL_23;
      v27 += 7;
      v33 = v28++ >= 9;
      if (v33)
      {
        v29 = 0;
        v34 = *(unsigned __int8 *)(v3 + *v25);
        goto LABEL_25;
      }
    }
    *(_BYTE *)(v3 + *v25) = 1;
LABEL_23:
    v34 = *(unsigned __int8 *)(v3 + *v25);
    if (*(_BYTE *)(v3 + *v25))
      v29 = 0;
LABEL_25:
    if (v34 || (v29 & 7) == 4)
    {
LABEL_323:
      if (v23)
      {
        *(_QWORD *)(a1 + 324) |= 0x3FFFFFFFFCuLL;
      }
      else if (v22)
      {
        while (1)
        {
          v96 = *v22++;
          v97 = 0x400000;
          switch(v96)
          {
            case 0:
              goto LABEL_362;
            case 2:
              goto LABEL_361;
            case 3:
              v97 = 32;
              goto LABEL_361;
            case 4:
              v97 = 512;
              goto LABEL_361;
            case 5:
              v97 = 0x2000000;
              goto LABEL_361;
            case 6:
              v97 = 0x100000;
              goto LABEL_361;
            case 7:
              v97 = 4;
              goto LABEL_361;
            case 8:
              v97 = 0x10000000;
              goto LABEL_361;
            case 9:
              v97 = 0x400000000;
              goto LABEL_361;
            case 10:
              v97 = 0x1000000000;
              goto LABEL_361;
            case 11:
              v97 = 128;
              goto LABEL_361;
            case 12:
              v97 = 1024;
              goto LABEL_361;
            case 13:
              v97 = 0x800000000;
              goto LABEL_361;
            case 14:
              v97 = 0x200000000;
              goto LABEL_361;
            case 15:
              v97 = 0x100000000;
              goto LABEL_361;
            case 16:
              v97 = 64;
              goto LABEL_361;
            case 17:
              v97 = 0x40000000;
              goto LABEL_361;
            case 18:
              v97 = 0x2000;
              goto LABEL_361;
            case 19:
              v97 = 4096;
              goto LABEL_361;
            case 20:
              v97 = 0x8000000;
              goto LABEL_361;
            case 21:
              v97 = 0x800000;
              goto LABEL_361;
            case 22:
              v97 = 0x4000000;
              goto LABEL_361;
            case 23:
              v97 = 0x80000000;
              goto LABEL_361;
            case 24:
              v97 = 2048;
              goto LABEL_361;
            case 25:
              v97 = 16;
              goto LABEL_361;
            case 26:
              v97 = 0x20000000;
              goto LABEL_361;
            case 27:
              v97 = 256;
              goto LABEL_361;
            case 28:
              v97 = 0x40000;
              goto LABEL_361;
            case 29:
              v97 = 0x80000;
              goto LABEL_361;
            case 30:
              v97 = 0x1000000;
              goto LABEL_361;
            case 31:
              v97 = 0x2000000000;
              goto LABEL_361;
            case 32:
              v97 = 0x200000;
              goto LABEL_361;
            case 33:
              v97 = 0x8000;
              goto LABEL_361;
            case 34:
              v97 = 0x20000;
              goto LABEL_361;
            case 35:
              v97 = 0x4000;
              goto LABEL_361;
            case 36:
              v97 = 0x10000;
LABEL_361:
              *(_QWORD *)(a1 + 324) |= v97;
              break;
            default:
              continue;
          }
        }
      }
LABEL_362:
      v3 = *(_BYTE *)(v3 + *v25) == 0;
      if (!v23)
        return v3;
LABEL_363:
      v98 = *(void **)(a1 + 8);
      *(_QWORD *)(a1 + 8) = 0;

      return v3;
    }
    v36 = v29 >> 3;
    v37 = v23;
    if ((v101 & 1) == 0)
    {
      v38 = v22;
      do
      {
        v40 = *v38++;
        v39 = v40;
        v37 = v40 != 0;
        if (v40)
          v41 = v39 == (_DWORD)v36;
        else
          v41 = 1;
      }
      while (!v41);
    }
    switch((int)v36)
    {
      case 1:
        if ((v8 & 1) == 0)
          goto LABEL_238;
        v42 = 0;
        v43 = 0;
        v44 = 0;
        *(_QWORD *)(a1 + 324) |= 2uLL;
        while (1)
        {
          v45 = *v24;
          v46 = *(_QWORD *)(v3 + v45);
          if (v46 == -1 || v46 >= *(_QWORD *)(v3 + *v6))
            break;
          v47 = *(_BYTE *)(*(_QWORD *)(v3 + *v26) + v46);
          *(_QWORD *)(v3 + v45) = v46 + 1;
          v44 |= (unint64_t)(v47 & 0x7F) << v42;
          if ((v47 & 0x80) == 0)
            goto LABEL_241;
          v42 += 7;
          v33 = v43++ >= 9;
          if (v33)
          {
            LODWORD(v44) = 0;
            goto LABEL_243;
          }
        }
        *(_BYTE *)(v3 + *v25) = 1;
LABEL_241:
        if (*(_BYTE *)(v3 + *v25))
          LODWORD(v44) = 0;
LABEL_243:
        v58 = 320;
        goto LABEL_248;
      case 2:
        if (!v37)
          goto LABEL_238;
        if ((*(_BYTE *)(a1 + 326) & 0x40) != 0)
        {
          v61 = PBReaderSkipValueWithTag();
          v25 = (int *)MEMORY[0x1E0D82BC8];
          if ((v61 & 1) == 0)
            goto LABEL_366;
          v60 = *(_QWORD *)(a1 + 324) << 41;
          goto LABEL_321;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_366;
        v48 = objc_alloc_init(GEOPDPlaceSummaryLayoutUnitName);
        if (!GEOPDPlaceSummaryLayoutUnitNameReadAllFrom((uint64_t)v48, (void *)v3))
          goto LABEL_365;
        PBReaderRecallMark();
        v49 = 176;
        goto LABEL_227;
      case 3:
        if (!v37)
          goto LABEL_238;
        if ((*(_BYTE *)(a1 + 324) & 0x20) != 0)
        {
          v62 = PBReaderSkipValueWithTag();
          v25 = (int *)MEMORY[0x1E0D82BC8];
          if ((v62 & 1) == 0)
            goto LABEL_366;
          v60 = *(_QWORD *)(a1 + 324) << 58;
          goto LABEL_321;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_366;
        v48 = objc_alloc_init(GEOPDPlaceSummaryLayoutUnitCategory);
        if (!GEOPDPlaceSummaryLayoutUnitCategoryReadAllFrom((uint64_t)v48, (void *)v3))
          goto LABEL_365;
        PBReaderRecallMark();
        v49 = 40;
        goto LABEL_227;
      case 4:
        if (!v37)
          goto LABEL_238;
        if ((*(_BYTE *)(a1 + 325) & 2) != 0)
        {
          v63 = PBReaderSkipValueWithTag();
          v25 = (int *)MEMORY[0x1E0D82BC8];
          if ((v63 & 1) == 0)
            goto LABEL_366;
          v60 = *(_QWORD *)(a1 + 324) << 54;
          goto LABEL_321;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_366;
        v48 = objc_alloc_init(GEOPDPlaceSummaryLayoutUnitDistance);
        if (!GEOPDPlaceSummaryLayoutUnitDistanceReadAllFrom((uint64_t)v48, (void *)v3))
          goto LABEL_365;
        PBReaderRecallMark();
        v49 = 72;
        goto LABEL_227;
      case 5:
        if (!v37)
          goto LABEL_238;
        if ((*(_BYTE *)(a1 + 327) & 2) != 0)
        {
          v64 = PBReaderSkipValueWithTag();
          v25 = (int *)MEMORY[0x1E0D82BC8];
          if ((v64 & 1) == 0)
            goto LABEL_366;
          v60 = *(_QWORD *)(a1 + 324) << 38;
          goto LABEL_321;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_366;
        v48 = objc_alloc_init(GEOPDPlaceSummaryLayoutUnitPrice);
        if (!GEOPDPlaceSummaryLayoutUnitPriceReadAllFrom((uint64_t)v48, (void *)v3))
          goto LABEL_365;
        PBReaderRecallMark();
        v49 = 200;
        goto LABEL_227;
      case 6:
        if (!v37)
          goto LABEL_238;
        if ((*(_BYTE *)(a1 + 326) & 0x10) != 0)
        {
          v65 = PBReaderSkipValueWithTag();
          v25 = (int *)MEMORY[0x1E0D82BC8];
          if ((v65 & 1) == 0)
            goto LABEL_366;
          v60 = *(_QWORD *)(a1 + 324) << 43;
          goto LABEL_321;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_366;
        v48 = objc_alloc_init(GEOPDPlaceSummaryLayoutUnitHours);
        if (!GEOPDPlaceSummaryLayoutUnitHoursReadAllFrom((uint64_t)v48, (void *)v3))
          goto LABEL_365;
        PBReaderRecallMark();
        v49 = 160;
        goto LABEL_227;
      case 7:
        if (!v37)
          goto LABEL_238;
        if ((*(_BYTE *)(a1 + 324) & 4) != 0)
        {
          v66 = PBReaderSkipValueWithTag();
          v25 = (int *)MEMORY[0x1E0D82BC8];
          if ((v66 & 1) == 0)
            goto LABEL_366;
          v60 = *(_QWORD *)(a1 + 324) << 61;
          goto LABEL_321;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_366;
        v48 = objc_alloc_init(GEOPDPlaceSummaryLayoutUnitAddress);
        if (!GEOPDPlaceSummaryLayoutUnitAddressReadAllFrom((uint64_t)v48, (void *)v3))
          goto LABEL_365;
        PBReaderRecallMark();
        v49 = 16;
        goto LABEL_227;
      case 8:
        if (!v37)
          goto LABEL_238;
        if ((*(_BYTE *)(a1 + 327) & 0x10) != 0)
        {
          v67 = PBReaderSkipValueWithTag();
          v25 = (int *)MEMORY[0x1E0D82BC8];
          if ((v67 & 1) == 0)
            goto LABEL_366;
          v60 = *(_QWORD *)(a1 + 324) << 35;
          goto LABEL_321;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_366;
        v48 = objc_alloc_init(GEOPDPlaceSummaryLayoutUnitRatings);
        if (!GEOPDPlaceSummaryLayoutUnitRatingsReadAllFrom((uint64_t)v48, (void *)v3))
          goto LABEL_365;
        PBReaderRecallMark();
        v49 = 224;
        goto LABEL_227;
      case 9:
        if (!v37)
          goto LABEL_238;
        if ((*(_BYTE *)(a1 + 328) & 4) != 0)
        {
          v68 = PBReaderSkipValueWithTag();
          v25 = (int *)MEMORY[0x1E0D82BC8];
          if ((v68 & 1) == 0)
            goto LABEL_366;
          v60 = *(_QWORD *)(a1 + 324) << 29;
          goto LABEL_321;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_366;
        v48 = objc_alloc_init(GEOPDPlaceSummaryLayoutUnitTransitShields);
        if (!GEOPDPlaceSummaryLayoutUnitTransitShieldsReadAllFrom((uint64_t)v48, (void *)v3))
          goto LABEL_365;
        PBReaderRecallMark();
        v49 = 272;
        goto LABEL_227;
      case 10:
        if (!v37)
          goto LABEL_238;
        if ((*(_BYTE *)(a1 + 328) & 0x10) != 0)
        {
          v69 = PBReaderSkipValueWithTag();
          v25 = (int *)MEMORY[0x1E0D82BC8];
          if ((v69 & 1) == 0)
            goto LABEL_366;
          v60 = *(_QWORD *)(a1 + 324) << 27;
          goto LABEL_321;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_366;
        v48 = objc_alloc_init(GEOPDPlaceSummaryLayoutUnitUserGeneratedGuides);
        if (!GEOPDPlaceSummaryLayoutUnitUserGeneratedGuidesReadAllFrom((uint64_t)v48, (void *)v3))
          goto LABEL_365;
        PBReaderRecallMark();
        v49 = 288;
        goto LABEL_227;
      case 11:
        if (!v37)
          goto LABEL_238;
        if ((*(_BYTE *)(a1 + 324) & 0x80) != 0)
        {
          v70 = PBReaderSkipValueWithTag();
          v25 = (int *)MEMORY[0x1E0D82BC8];
          if ((v70 & 1) == 0)
            goto LABEL_366;
          v60 = *(_QWORD *)(a1 + 324) << 56;
          goto LABEL_321;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_366;
        v48 = objc_alloc_init(GEOPDPlaceSummaryLayoutUnitCuratedGuides);
        if (!GEOPDPlaceSummaryLayoutUnitCuratedGuidesReadAllFrom((uint64_t)v48, (void *)v3))
          goto LABEL_365;
        PBReaderRecallMark();
        v49 = 56;
        goto LABEL_227;
      case 12:
        if (!v37)
          goto LABEL_238;
        if ((*(_BYTE *)(a1 + 325) & 4) != 0)
        {
          v71 = PBReaderSkipValueWithTag();
          v25 = (int *)MEMORY[0x1E0D82BC8];
          if ((v71 & 1) == 0)
            goto LABEL_366;
          v60 = *(_QWORD *)(a1 + 324) << 53;
          goto LABEL_321;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_366;
        v48 = objc_alloc_init(GEOPDPlaceSummaryLayoutUnitEVChargersNumber);
        if (!GEOPDPlaceSummaryLayoutUnitEVChargersNumberReadAllFrom((uint64_t)v48, (void *)v3))
          goto LABEL_365;
        PBReaderRecallMark();
        v49 = 80;
        goto LABEL_227;
      case 13:
        if (!v37)
          goto LABEL_238;
        if ((*(_BYTE *)(a1 + 328) & 8) != 0)
        {
          v72 = PBReaderSkipValueWithTag();
          v25 = (int *)MEMORY[0x1E0D82BC8];
          if ((v72 & 1) == 0)
            goto LABEL_366;
          v60 = *(_QWORD *)(a1 + 324) << 28;
          goto LABEL_321;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_366;
        v48 = objc_alloc_init(GEOPDPlaceSummaryLayoutUnitUGCUserSubmittedRecommendations);
        if (!GEOPDPlaceSummaryLayoutUnitUGCUserSubmittedRecommendationsReadAllFrom((uint64_t)v48, (void *)v3))
          goto LABEL_365;
        PBReaderRecallMark();
        v49 = 280;
        goto LABEL_227;
      case 14:
        if (!v37)
          goto LABEL_238;
        if ((*(_BYTE *)(a1 + 328) & 2) != 0)
        {
          v73 = PBReaderSkipValueWithTag();
          v25 = (int *)MEMORY[0x1E0D82BC8];
          if ((v73 & 1) == 0)
            goto LABEL_366;
          v60 = *(_QWORD *)(a1 + 324) << 30;
          goto LABEL_321;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_366;
        v48 = objc_alloc_init(GEOPDPlaceSummaryLayoutUnitString);
        if (!GEOPDPlaceSummaryLayoutUnitStringReadAllFrom((uint64_t)v48, (void *)v3, v9 & 1))
          goto LABEL_365;
        PBReaderRecallMark();
        v49 = 264;
        goto LABEL_227;
      case 15:
        if (!v37)
          goto LABEL_238;
        if ((*(_BYTE *)(a1 + 328) & 1) != 0)
        {
          v74 = PBReaderSkipValueWithTag();
          v25 = (int *)MEMORY[0x1E0D82BC8];
          if ((v74 & 1) == 0)
            goto LABEL_366;
          v60 = *(_QWORD *)(a1 + 324) << 31;
          goto LABEL_321;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_366;
        v48 = objc_alloc_init(GEOPDPlaceSummaryLayoutUnitServerOverride);
        if (!GEOPDPlaceSummaryLayoutUnitServerOverrideReadAllFrom((uint64_t)v48, (void *)v3))
          goto LABEL_365;
        PBReaderRecallMark();
        v49 = 256;
        goto LABEL_227;
      case 16:
        if (!v37)
          goto LABEL_238;
        if ((*(_BYTE *)(a1 + 324) & 0x40) != 0)
        {
          v75 = PBReaderSkipValueWithTag();
          v25 = (int *)MEMORY[0x1E0D82BC8];
          if ((v75 & 1) == 0)
            goto LABEL_366;
          v60 = *(_QWORD *)(a1 + 324) << 57;
          goto LABEL_321;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_366;
        v48 = objc_alloc_init(GEOPDPlaceSummaryLayoutUnitContainment);
        if (!GEOPDPlaceSummaryLayoutUnitContainmentReadAllFrom((uint64_t)v48, (void *)v3))
          goto LABEL_365;
        PBReaderRecallMark();
        v49 = 48;
        goto LABEL_227;
      case 17:
        if (!v37)
          goto LABEL_238;
        if ((*(_BYTE *)(a1 + 327) & 0x40) != 0)
        {
          v76 = PBReaderSkipValueWithTag();
          v25 = (int *)MEMORY[0x1E0D82BC8];
          if ((v76 & 1) == 0)
            goto LABEL_366;
          v60 = *(_QWORD *)(a1 + 324) << 33;
          goto LABEL_321;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_366;
        v48 = objc_alloc_init(GEOPDPlaceSummaryLayoutUnitRecent);
        if (!GEOPDPlaceSummaryLayoutUnitRecentReadAllFrom((uint64_t)v48, (void *)v3))
          goto LABEL_365;
        PBReaderRecallMark();
        v49 = 240;
        goto LABEL_227;
      case 18:
        if (!v37)
          goto LABEL_238;
        if ((*(_BYTE *)(a1 + 325) & 0x20) != 0)
        {
          v77 = PBReaderSkipValueWithTag();
          v25 = (int *)MEMORY[0x1E0D82BC8];
          if ((v77 & 1) == 0)
            goto LABEL_366;
          v60 = *(_QWORD *)(a1 + 324) << 50;
          goto LABEL_321;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_366;
        v48 = objc_alloc_init(GEOPDPlaceSummaryLayoutUnitHighlightMain);
        if (!GEOPDPlaceSummaryLayoutUnitHighlightMainReadAllFrom((uint64_t)v48, (void *)v3))
          goto LABEL_365;
        PBReaderRecallMark();
        v49 = 104;
        goto LABEL_227;
      case 19:
        if (!v37)
          goto LABEL_238;
        if ((*(_BYTE *)(a1 + 325) & 0x10) != 0)
        {
          v78 = PBReaderSkipValueWithTag();
          v25 = (int *)MEMORY[0x1E0D82BC8];
          if ((v78 & 1) == 0)
            goto LABEL_366;
          v60 = *(_QWORD *)(a1 + 324) << 51;
          goto LABEL_321;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_366;
        v48 = objc_alloc_init(GEOPDPlaceSummaryLayoutUnitHighlightExtra);
        if (!GEOPDPlaceSummaryLayoutUnitHighlightExtraReadAllFrom((uint64_t)v48, (void *)v3))
          goto LABEL_365;
        PBReaderRecallMark();
        v49 = 96;
        goto LABEL_227;
      case 20:
        if (!v37)
          goto LABEL_238;
        if ((*(_BYTE *)(a1 + 327) & 8) != 0)
        {
          v79 = PBReaderSkipValueWithTag();
          v25 = (int *)MEMORY[0x1E0D82BC8];
          if ((v79 & 1) == 0)
            goto LABEL_366;
          v60 = *(_QWORD *)(a1 + 324) << 36;
          goto LABEL_321;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_366;
        v48 = objc_alloc_init(GEOPDPlaceSummaryLayoutUnitPublisherNameForGuide);
        if (!GEOPDPlaceSummaryLayoutUnitPublisherNameForGuideReadAllFrom((uint64_t)v48, (void *)v3))
          goto LABEL_365;
        PBReaderRecallMark();
        v49 = 216;
        goto LABEL_227;
      case 21:
        if (!v37)
          goto LABEL_238;
        if ((*(_BYTE *)(a1 + 326) & 0x80) != 0)
        {
          v80 = PBReaderSkipValueWithTag();
          v25 = (int *)MEMORY[0x1E0D82BC8];
          if ((v80 & 1) == 0)
            goto LABEL_366;
          v60 = *(_QWORD *)(a1 + 324) << 40;
          goto LABEL_321;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_366;
        v48 = objc_alloc_init(GEOPDPlaceSummaryLayoutUnitNumPlacesInGuide);
        if (!GEOPDPlaceSummaryLayoutUnitNumPlacesInGuideReadAllFrom((uint64_t)v48, (void *)v3))
          goto LABEL_365;
        PBReaderRecallMark();
        v49 = 184;
        goto LABEL_227;
      case 22:
        if (!v37)
          goto LABEL_238;
        if ((*(_BYTE *)(a1 + 327) & 4) != 0)
        {
          v81 = PBReaderSkipValueWithTag();
          v25 = (int *)MEMORY[0x1E0D82BC8];
          if ((v81 & 1) == 0)
            goto LABEL_366;
          v60 = *(_QWORD *)(a1 + 324) << 37;
          goto LABEL_321;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_366;
        v48 = objc_alloc_init(GEOPDPlaceSummaryLayoutUnitPublisherDescription);
        if (!GEOPDPlaceSummaryLayoutUnitPublisherDescriptionReadAllFrom((uint64_t)v48, (void *)v3))
          goto LABEL_365;
        PBReaderRecallMark();
        v49 = 208;
        goto LABEL_227;
      case 23:
        if (!v37)
          goto LABEL_238;
        if ((*(_BYTE *)(a1 + 327) & 0x80) != 0)
        {
          v82 = PBReaderSkipValueWithTag();
          v25 = (int *)MEMORY[0x1E0D82BC8];
          if ((v82 & 1) == 0)
            goto LABEL_366;
          v60 = *(_QWORD *)(a1 + 324) << 32;
          goto LABEL_321;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_366;
        v48 = objc_alloc_init(GEOPDPlaceSummaryLayoutUnitSecondaryName);
        if (!GEOPDPlaceSummaryLayoutUnitSecondaryNameReadAllFrom((uint64_t)v48, (void *)v3))
          goto LABEL_365;
        PBReaderRecallMark();
        v49 = 248;
        goto LABEL_227;
      case 24:
        if (!v37)
          goto LABEL_238;
        if ((*(_BYTE *)(a1 + 325) & 8) != 0)
        {
          v83 = PBReaderSkipValueWithTag();
          v25 = (int *)MEMORY[0x1E0D82BC8];
          if ((v83 & 1) == 0)
            goto LABEL_366;
          v60 = *(_QWORD *)(a1 + 324) << 52;
          goto LABEL_321;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_366;
        v48 = objc_alloc_init(GEOPDPlaceSummaryLayoutUnitFactoid);
        if (!GEOPDPlaceSummaryLayoutUnitFactoidReadAllFrom((uint64_t)v48, (void *)v3))
          goto LABEL_365;
        PBReaderRecallMark();
        v49 = 88;
        goto LABEL_227;
      case 25:
        if (!v37)
          goto LABEL_238;
        if ((*(_BYTE *)(a1 + 324) & 0x10) != 0)
        {
          v84 = PBReaderSkipValueWithTag();
          v25 = (int *)MEMORY[0x1E0D82BC8];
          if ((v84 & 1) == 0)
            goto LABEL_366;
          v60 = *(_QWORD *)(a1 + 324) << 59;
          goto LABEL_321;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_366;
        v48 = objc_alloc_init(GEOPDPlaceSummaryLayoutUnitArpRatings);
        if (!GEOPDPlaceSummaryLayoutUnitArpRatingsReadAllFrom((uint64_t)v48, (void *)v3))
          goto LABEL_365;
        PBReaderRecallMark();
        v49 = 32;
        goto LABEL_227;
      case 26:
        if (!v37)
          goto LABEL_238;
        if ((*(_BYTE *)(a1 + 327) & 0x20) != 0)
        {
          v85 = PBReaderSkipValueWithTag();
          v25 = (int *)MEMORY[0x1E0D82BC8];
          if ((v85 & 1) == 0)
            goto LABEL_366;
          v60 = *(_QWORD *)(a1 + 324) << 34;
          goto LABEL_321;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_366;
        v48 = objc_alloc_init(GEOPDPlaceSummaryLayoutUnitRealTimeEVChargerAvailability);
        if (!GEOPDPlaceSummaryLayoutUnitRealTimeEVChargerAvailabilityReadAllFrom((uint64_t)v48, (void *)v3))
          goto LABEL_365;
        PBReaderRecallMark();
        v49 = 232;
        goto LABEL_227;
      case 27:
        if (!v37)
          goto LABEL_238;
        if ((*(_BYTE *)(a1 + 325) & 1) != 0)
        {
          v86 = PBReaderSkipValueWithTag();
          v25 = (int *)MEMORY[0x1E0D82BC8];
          if ((v86 & 1) == 0)
            goto LABEL_366;
          v60 = *(_QWORD *)(a1 + 324) << 55;
          goto LABEL_321;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_366;
        v48 = objc_alloc_init(GEOPDPlaceSummaryLayoutUnitDetourTime);
        if (!GEOPDPlaceSummaryLayoutUnitDetourTimeReadAllFrom((uint64_t)v48, (void *)v3))
          goto LABEL_365;
        PBReaderRecallMark();
        v49 = 64;
        goto LABEL_227;
      case 28:
        if (!v37)
          goto LABEL_238;
        if ((*(_BYTE *)(a1 + 326) & 4) != 0)
        {
          v87 = PBReaderSkipValueWithTag();
          v25 = (int *)MEMORY[0x1E0D82BC8];
          if ((v87 & 1) == 0)
            goto LABEL_366;
          v60 = *(_QWORD *)(a1 + 324) << 45;
          goto LABEL_321;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_366;
        v48 = objc_alloc_init(GEOPDPlaceSummaryLayoutUnitHikingDifficulty);
        if (!GEOPDPlaceSummaryLayoutUnitHikingDifficultyReadAllFrom((uint64_t)v48, (void *)v3))
          goto LABEL_365;
        PBReaderRecallMark();
        v49 = 144;
        goto LABEL_227;
      case 29:
        if (!v37)
          goto LABEL_238;
        if ((*(_BYTE *)(a1 + 326) & 8) != 0)
        {
          v88 = PBReaderSkipValueWithTag();
          v25 = (int *)MEMORY[0x1E0D82BC8];
          if ((v88 & 1) == 0)
            goto LABEL_366;
          v60 = *(_QWORD *)(a1 + 324) << 44;
          goto LABEL_321;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_366;
        v48 = objc_alloc_init(GEOPDPlaceSummaryLayoutUnitHikingTrailLength);
        if (!GEOPDPlaceSummaryLayoutUnitHikingTrailLengthReadAllFrom((uint64_t)v48, (void *)v3))
          goto LABEL_365;
        PBReaderRecallMark();
        v49 = 152;
        goto LABEL_227;
      case 30:
        if (!v37)
          goto LABEL_238;
        if ((*(_BYTE *)(a1 + 327) & 1) != 0)
        {
          v89 = PBReaderSkipValueWithTag();
          v25 = (int *)MEMORY[0x1E0D82BC8];
          if ((v89 & 1) == 0)
            goto LABEL_366;
          v60 = *(_QWORD *)(a1 + 324) << 39;
          goto LABEL_321;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_366;
        v48 = objc_alloc_init(GEOPDPlaceSummaryLayoutUnitPhotoCarousel);
        if (!GEOPDPlaceSummaryLayoutUnitPhotoCarouselReadAllFrom((uint64_t)v48, (void *)v3))
          goto LABEL_365;
        PBReaderRecallMark();
        v49 = 192;
        goto LABEL_227;
      case 31:
        if (!v37)
          goto LABEL_238;
        if ((*(_BYTE *)(a1 + 328) & 0x20) != 0)
        {
          v90 = PBReaderSkipValueWithTag();
          v25 = (int *)MEMORY[0x1E0D82BC8];
          if ((v90 & 1) == 0)
            goto LABEL_366;
          v60 = *(_QWORD *)(a1 + 324) << 26;
          goto LABEL_321;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_366;
        v48 = objc_alloc_init(GEOPDPlaceSummaryLayoutUnitUserNote);
        if (!GEOPDPlaceSummaryLayoutUnitUserNoteReadAllFrom((uint64_t)v48, (void *)v3))
          goto LABEL_365;
        PBReaderRecallMark();
        v49 = 296;
        goto LABEL_227;
      case 32:
        if (!v37)
          goto LABEL_238;
        if ((*(_BYTE *)(a1 + 326) & 0x20) != 0)
        {
          v91 = PBReaderSkipValueWithTag();
          v25 = (int *)MEMORY[0x1E0D82BC8];
          if ((v91 & 1) == 0)
            goto LABEL_366;
          v60 = *(_QWORD *)(a1 + 324) << 42;
          goto LABEL_321;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_366;
        v48 = objc_alloc_init(GEOPDPlaceSummaryLayoutUnitInUserLibrary);
        if (!GEOPDPlaceSummaryLayoutUnitInUserLibraryReadAllFrom((uint64_t)v48, (void *)v3))
          goto LABEL_365;
        PBReaderRecallMark();
        v49 = 168;
        goto LABEL_227;
      case 33:
        if (!v37)
          goto LABEL_238;
        if ((*(_BYTE *)(a1 + 325) & 0x80) != 0)
        {
          v92 = PBReaderSkipValueWithTag();
          v25 = (int *)MEMORY[0x1E0D82BC8];
          if ((v92 & 1) == 0)
            goto LABEL_366;
          v60 = *(_QWORD *)(a1 + 324) << 48;
          goto LABEL_321;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_366;
        v48 = objc_alloc_init(GEOPDPlaceSummaryLayoutUnitHikeRouteFactoidElevationGainLoss);
        if (!GEOPDPlaceSummaryLayoutUnitHikeRouteFactoidElevationGainLossReadAllFrom((uint64_t)v48, (void *)v3))
          goto LABEL_365;
        PBReaderRecallMark();
        v49 = 120;
        goto LABEL_227;
      case 34:
        if (!v37)
          goto LABEL_238;
        if ((*(_BYTE *)(a1 + 326) & 2) != 0)
        {
          v93 = PBReaderSkipValueWithTag();
          v25 = (int *)MEMORY[0x1E0D82BC8];
          if ((v93 & 1) == 0)
            goto LABEL_366;
          v60 = *(_QWORD *)(a1 + 324) << 46;
          goto LABEL_321;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_366;
        v48 = objc_alloc_init(GEOPDPlaceSummaryLayoutUnitHikeRouteType);
        if (!GEOPDPlaceSummaryLayoutUnitHikeRouteTypeReadAllFrom((uint64_t)v48, (void *)v3))
          goto LABEL_365;
        PBReaderRecallMark();
        v49 = 136;
        goto LABEL_227;
      case 35:
        if (!v37)
          goto LABEL_238;
        if ((*(_BYTE *)(a1 + 325) & 0x40) != 0)
        {
          v94 = PBReaderSkipValueWithTag();
          v25 = (int *)MEMORY[0x1E0D82BC8];
          if ((v94 & 1) == 0)
            goto LABEL_366;
          v60 = *(_QWORD *)(a1 + 324) << 49;
          goto LABEL_321;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_366;
        v48 = objc_alloc_init(GEOPDPlaceSummaryLayoutUnitHikeRouteDuration);
        if (!GEOPDPlaceSummaryLayoutUnitHikeRouteDurationReadAllFrom((uint64_t)v48, (void *)v3))
          goto LABEL_365;
        PBReaderRecallMark();
        v49 = 112;
        goto LABEL_227;
      case 36:
        if (!v37)
          goto LABEL_238;
        if ((*(_BYTE *)(a1 + 326) & 1) != 0)
        {
          v95 = PBReaderSkipValueWithTag();
          v25 = (int *)MEMORY[0x1E0D82BC8];
          if ((v95 & 1) == 0)
            goto LABEL_366;
          v60 = *(_QWORD *)(a1 + 324) << 47;
LABEL_321:
          v7 += v60 >> 63;
          goto LABEL_322;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_366;
        v48 = objc_alloc_init(GEOPDPlaceSummaryLayoutUnitHikeRouteLength);
        if (GEOPDPlaceSummaryLayoutUnitHikeRouteLengthReadAllFrom((uint64_t)v48, (void *)v3))
        {
          PBReaderRecallMark();
          v49 = 128;
LABEL_227:
          v50 = *(void **)(a1 + v49);
          *(_QWORD *)(a1 + v49) = v48;

          --v7;
          v23 = v100;
          v25 = (int *)MEMORY[0x1E0D82BC8];
LABEL_322:
          v26 = (int *)MEMORY[0x1E0D82BB8];
          if (!v23 && v7 == 0)
            goto LABEL_323;
          continue;
        }
LABEL_365:

        v23 = v100;
LABEL_366:
        v3 = 0;
        *(_QWORD *)(a1 + 324) |= 0x3FFFFFFFFCuLL;
        if (v23)
          goto LABEL_363;
        return v3;
      default:
        if ((_DWORD)v36 == 101)
        {
          if ((v8 & 1) != 0)
          {
            v51 = 0;
            v52 = 0;
            v44 = 0;
            *(_QWORD *)(a1 + 324) |= 1uLL;
            while (1)
            {
              v53 = *v24;
              v54 = *(_QWORD *)(v3 + v53);
              if (v54 == -1 || v54 >= *(_QWORD *)(v3 + *v6))
                break;
              v55 = *(_BYTE *)(*(_QWORD *)(v3 + *v26) + v54);
              *(_QWORD *)(v3 + v53) = v54 + 1;
              v44 |= (unint64_t)(v55 & 0x7F) << v51;
              if ((v55 & 0x80) == 0)
                goto LABEL_245;
              v51 += 7;
              v33 = v52++ >= 9;
              if (v33)
              {
                LODWORD(v44) = 0;
                goto LABEL_247;
              }
            }
            *(_BYTE *)(v3 + *v25) = 1;
LABEL_245:
            if (*(_BYTE *)(v3 + *v25))
              LODWORD(v44) = 0;
LABEL_247:
            v58 = 316;
LABEL_248:
            *(_DWORD *)(a1 + v58) = v44;
            goto LABEL_322;
          }
LABEL_238:
          v57 = PBReaderSkipValueWithTag();
          v25 = (int *)MEMORY[0x1E0D82BC8];
          if ((v57 & 1) == 0)
            goto LABEL_366;
          goto LABEL_322;
        }
        if ((_DWORD)v36 != 102)
        {
          v56 = PBReaderSkipValueWithTag();
          v25 = (int *)MEMORY[0x1E0D82BC8];
          if (!v56)
            goto LABEL_366;
          goto LABEL_322;
        }
        if (!v37)
          goto LABEL_238;
        if ((*(_BYTE *)(a1 + 324) & 8) != 0)
        {
          v59 = PBReaderSkipValueWithTag();
          v25 = (int *)MEMORY[0x1E0D82BC8];
          if ((v59 & 1) == 0)
            goto LABEL_366;
          v60 = *(_QWORD *)(a1 + 324) << 60;
          goto LABEL_321;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_366;
        v48 = objc_alloc_init(GEOPDPlaceSummaryLayoutUnit);
        if (!GEOPDPlaceSummaryLayoutUnitReadAllFrom())
          goto LABEL_365;
        PBReaderRecallMark();
        v49 = 24;
        goto LABEL_227;
    }
  }
}

void sub_189329B84(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189329CD0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189329E1C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189329F68(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18932A0B0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18932A1FC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18932A348(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18932A490(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18932A5D4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18932A720(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18932A86C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18932A9B4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18932AAFC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18932AC40(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18932AD84(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18932AED0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18932B01C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18932B168(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18932B2B4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18932B400(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18932B54C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18932B698(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18932B7E0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18932B92C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18932BA78(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18932BBC4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18932BD10(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18932BE5C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18932BFA8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18932C0EC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18932C238(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18932C384(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18932C4D0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18932C61C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18932C7D8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18932EE00(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDPlaceSummaryLayoutUnitCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  objc_msgSend(a1[22], "readAll:", 1);
  objc_msgSend(a1[5], "readAll:", 1);
  objc_msgSend(a1[9], "readAll:", 1);
  objc_msgSend(a1[25], "readAll:", 1);
  objc_msgSend(a1[20], "readAll:", 1);
  objc_msgSend(a1[2], "readAll:", 1);
  objc_msgSend(a1[28], "readAll:", 1);
  objc_msgSend(a1[34], "readAll:", 1);
  objc_msgSend(a1[36], "readAll:", 1);
  objc_msgSend(a1[7], "readAll:", 1);
  objc_msgSend(a1[10], "readAll:", 1);
  objc_msgSend(a1[35], "readAll:", 1);
  objc_msgSend(a1[33], "readAll:", 1);
  objc_msgSend(a1[32], "readAll:", 1);
  objc_msgSend(a1[6], "readAll:", 1);
  objc_msgSend(a1[30], "readAll:", 1);
  objc_msgSend(a1[13], "readAll:", 1);
  objc_msgSend(a1[12], "readAll:", 1);
  objc_msgSend(a1[27], "readAll:", 1);
  objc_msgSend(a1[23], "readAll:", 1);
  objc_msgSend(a1[26], "readAll:", 1);
  objc_msgSend(a1[31], "readAll:", 1);
  objc_msgSend(a1[11], "readAll:", 1);
  objc_msgSend(a1[4], "readAll:", 1);
  objc_msgSend(a1[29], "readAll:", 1);
  objc_msgSend(a1[8], "readAll:", 1);
  objc_msgSend(a1[18], "readAll:", 1);
  objc_msgSend(a1[19], "readAll:", 1);
  objc_msgSend(a1[24], "readAll:", 1);
  objc_msgSend(a1[37], "readAll:", 1);
  objc_msgSend(a1[21], "readAll:", 1);
  objc_msgSend(a1[15], "readAll:", 1);
  objc_msgSend(a1[17], "readAll:", 1);
  objc_msgSend(a1[14], "readAll:", 1);
  objc_msgSend(a1[16], "readAll:", 1);
  return objc_msgSend(a1[3], "readAll:", 1);
}

unint64_t GEOPDPlaceSummaryLayoutUnitReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 308))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDPlaceSummaryLayoutUnitReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 312));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 304) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 308) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDPlaceSummaryLayoutUnitReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDPlaceSummaryLayoutUnitReadAllFrom_initialTag;
  Specified = GEOPDPlaceSummaryLayoutUnitReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDPlaceSummaryLayoutUnitCallReadAllRecursiveWithoutSynchronized((id *)a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 312));
  return Specified;
}

void sub_18932F1F8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDPlaceSummaryLayoutUnitReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOPDPlaceSummaryLayoutUnitReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18932F258(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryLayoutUnitNameIsValid(unsigned __int8 *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  int v6;
  char v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  BOOL v14;
  _BOOL8 v15;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  v5 = (int *)MEMORY[0x1E0D82BB8];
  while (1)
  {
    v6 = a1[*v4];
    if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
      break;
    if (a1[*v4])
    {
      v6 = 1;
      break;
    }
    v7 = 0;
    v8 = 0;
    v9 = 0;
    while (1)
    {
      v10 = *v2;
      v11 = *(_QWORD *)&a1[v10];
      if (v11 == -1 || v11 >= *(_QWORD *)&a1[*v3])
        break;
      v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v11);
      *(_QWORD *)&a1[v10] = v11 + 1;
      v9 |= (unint64_t)(v12 & 0x7F) << v7;
      if ((v12 & 0x80) == 0)
        goto LABEL_12;
      v7 += 7;
      if (v8++ >= 9)
      {
        LOBYTE(v9) = 0;
        v6 = a1[*v4];
        goto LABEL_14;
      }
    }
    a1[*v4] = 1;
LABEL_12:
    v6 = a1[*v4];
    if (a1[*v4])
      LOBYTE(v9) = 0;
LABEL_14:
    if (v6)
      v14 = 1;
    else
      v14 = (v9 & 7) == 4;
    if (v14)
      break;
    if ((PBReaderSkipValueWithTag() & 1) == 0)
    {
      v15 = 0;
      goto LABEL_22;
    }
  }
  v15 = v6 == 0;
LABEL_22:
  PBReaderRecallMark();
  return v15;
}

BOOL GEOPDPlaceSummaryLayoutUnitCategoryIsValid(unsigned __int8 *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  int v6;
  char v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  BOOL v14;
  _BOOL8 v15;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  v5 = (int *)MEMORY[0x1E0D82BB8];
  while (1)
  {
    v6 = a1[*v4];
    if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
      break;
    if (a1[*v4])
    {
      v6 = 1;
      break;
    }
    v7 = 0;
    v8 = 0;
    v9 = 0;
    while (1)
    {
      v10 = *v2;
      v11 = *(_QWORD *)&a1[v10];
      if (v11 == -1 || v11 >= *(_QWORD *)&a1[*v3])
        break;
      v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v11);
      *(_QWORD *)&a1[v10] = v11 + 1;
      v9 |= (unint64_t)(v12 & 0x7F) << v7;
      if ((v12 & 0x80) == 0)
        goto LABEL_12;
      v7 += 7;
      if (v8++ >= 9)
      {
        LOBYTE(v9) = 0;
        v6 = a1[*v4];
        goto LABEL_14;
      }
    }
    a1[*v4] = 1;
LABEL_12:
    v6 = a1[*v4];
    if (a1[*v4])
      LOBYTE(v9) = 0;
LABEL_14:
    if (v6)
      v14 = 1;
    else
      v14 = (v9 & 7) == 4;
    if (v14)
      break;
    if ((PBReaderSkipValueWithTag() & 1) == 0)
    {
      v15 = 0;
      goto LABEL_22;
    }
  }
  v15 = v6 == 0;
LABEL_22:
  PBReaderRecallMark();
  return v15;
}

BOOL GEOPDPlaceSummaryLayoutUnitDistanceIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  int v13;
  unsigned int v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int v19;
  _BOOL8 v21;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        if (v10 == -1 || v10 >= *(_QWORD *)&a1[*v3])
          break;
        v11 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v13 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      if (v13 || (v8 & 7) == 4)
        break;
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0)
          goto LABEL_33;
        v15 = 0;
        while (1)
        {
          v16 = *v2;
          v17 = *(_QWORD *)&a1[v16];
          if (v17 == -1 || v17 >= *(_QWORD *)&a1[*v3])
            break;
          v18 = v17 + 1;
          v19 = *(char *)(*(_QWORD *)&a1[*v5] + v17);
          *(_QWORD *)&a1[v16] = v18;
          if (v19 < 0 && v15++ <= 8)
            continue;
          goto LABEL_30;
        }
        a1[*v4] = 1;
      }
      else if (!PBReaderSkipValueWithTag())
      {
LABEL_33:
        v21 = 0;
        goto LABEL_32;
      }
LABEL_30:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v21 = a1[*v4] == 0;
LABEL_32:
  PBReaderRecallMark();
  return v21;
}

BOOL GEOPDPlaceSummaryLayoutUnitPriceIsValid(unsigned __int8 *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  int v6;
  char v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  BOOL v14;
  _BOOL8 v15;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  v5 = (int *)MEMORY[0x1E0D82BB8];
  while (1)
  {
    v6 = a1[*v4];
    if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
      break;
    if (a1[*v4])
    {
      v6 = 1;
      break;
    }
    v7 = 0;
    v8 = 0;
    v9 = 0;
    while (1)
    {
      v10 = *v2;
      v11 = *(_QWORD *)&a1[v10];
      if (v11 == -1 || v11 >= *(_QWORD *)&a1[*v3])
        break;
      v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v11);
      *(_QWORD *)&a1[v10] = v11 + 1;
      v9 |= (unint64_t)(v12 & 0x7F) << v7;
      if ((v12 & 0x80) == 0)
        goto LABEL_12;
      v7 += 7;
      if (v8++ >= 9)
      {
        LOBYTE(v9) = 0;
        v6 = a1[*v4];
        goto LABEL_14;
      }
    }
    a1[*v4] = 1;
LABEL_12:
    v6 = a1[*v4];
    if (a1[*v4])
      LOBYTE(v9) = 0;
LABEL_14:
    if (v6)
      v14 = 1;
    else
      v14 = (v9 & 7) == 4;
    if (v14)
      break;
    if ((PBReaderSkipValueWithTag() & 1) == 0)
    {
      v15 = 0;
      goto LABEL_22;
    }
  }
  v15 = v6 == 0;
LABEL_22:
  PBReaderRecallMark();
  return v15;
}

BOOL GEOPDPlaceSummaryLayoutUnitHoursIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  BOOL v12;
  int v13;
  int v14;
  unsigned int v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int v20;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  int v25;
  unsigned int v26;
  unsigned int v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  int v31;
  _BOOL8 v32;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        if (v10 == -1 || v10 >= *(_QWORD *)&a1[*v3])
          break;
        v11 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        v12 = v7++ >= 9;
        if (v12)
        {
          v8 = 0;
          v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v13 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v14 = v8 & 7;
      if (v13 || v14 == 4)
        break;
      if ((v8 >> 3) == 2)
      {
        if (v14 != 2)
        {
          if ((v8 & 7) != 0)
            goto LABEL_52;
          while (1)
          {
            v22 = *v2;
            v23 = *(_QWORD *)&a1[v22];
            if (v23 == -1 || v23 >= *(_QWORD *)&a1[*v3])
              goto LABEL_37;
            v24 = v23 + 1;
            v25 = *(char *)(*(_QWORD *)&a1[*v5] + v23);
            *(_QWORD *)&a1[v22] = v24;
            if (v25 < 0)
            {
              v26 = v14++;
              if (v26 <= 8)
                continue;
            }
            goto LABEL_49;
          }
        }
        if (!PBReaderPlaceMark())
        {
LABEL_52:
          PBReaderRecallMark();
          return 0;
        }
LABEL_39:
        while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
        {
          v27 = a1[*v4];
          if (a1[*v4])
            break;
          while (1)
          {
            v28 = *v2;
            v29 = *(_QWORD *)&a1[v28];
            if (v29 == -1 || v29 >= *(_QWORD *)&a1[*v3])
              break;
            v30 = v29 + 1;
            v31 = *(char *)(*(_QWORD *)&a1[*v5] + v29);
            *(_QWORD *)&a1[v28] = v30;
            if (v31 < 0)
            {
              v12 = v27++ >= 9;
              if (!v12)
                continue;
            }
            goto LABEL_39;
          }
          a1[*v4] = 1;
        }
        PBReaderRecallMark();
      }
      else
      {
        if ((v8 >> 3) == 1)
        {
          if ((v8 & 7) != 0)
            goto LABEL_52;
          v16 = 0;
          while (1)
          {
            v17 = *v2;
            v18 = *(_QWORD *)&a1[v17];
            if (v18 == -1 || v18 >= *(_QWORD *)&a1[*v3])
              break;
            v19 = v18 + 1;
            v20 = *(char *)(*(_QWORD *)&a1[*v5] + v18);
            *(_QWORD *)&a1[v17] = v19;
            if (v20 < 0 && v16++ <= 8)
              continue;
            goto LABEL_49;
          }
LABEL_37:
          a1[*v4] = 1;
          continue;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_52;
      }
LABEL_49:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v32 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v32;
}

BOOL GEOPDPlaceSummaryLayoutUnitAddressIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  int v13;
  unsigned int v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int v19;
  _BOOL8 v21;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        if (v10 == -1 || v10 >= *(_QWORD *)&a1[*v3])
          break;
        v11 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v13 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      if (v13 || (v8 & 7) == 4)
        break;
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0)
          goto LABEL_33;
        v15 = 0;
        while (1)
        {
          v16 = *v2;
          v17 = *(_QWORD *)&a1[v16];
          if (v17 == -1 || v17 >= *(_QWORD *)&a1[*v3])
            break;
          v18 = v17 + 1;
          v19 = *(char *)(*(_QWORD *)&a1[*v5] + v17);
          *(_QWORD *)&a1[v16] = v18;
          if (v19 < 0 && v15++ <= 8)
            continue;
          goto LABEL_30;
        }
        a1[*v4] = 1;
      }
      else if (!PBReaderSkipValueWithTag())
      {
LABEL_33:
        v21 = 0;
        goto LABEL_32;
      }
LABEL_30:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v21 = a1[*v4] == 0;
LABEL_32:
  PBReaderRecallMark();
  return v21;
}

BOOL GEOPDPlaceSummaryLayoutUnitRatingsIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  int v13;
  unsigned int v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int v19;
  _BOOL8 v21;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        if (v10 == -1 || v10 >= *(_QWORD *)&a1[*v3])
          break;
        v11 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v13 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      if (v13 || (v8 & 7) == 4)
        break;
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0)
          goto LABEL_33;
        v15 = 0;
        while (1)
        {
          v16 = *v2;
          v17 = *(_QWORD *)&a1[v16];
          if (v17 == -1 || v17 >= *(_QWORD *)&a1[*v3])
            break;
          v18 = v17 + 1;
          v19 = *(char *)(*(_QWORD *)&a1[*v5] + v17);
          *(_QWORD *)&a1[v16] = v18;
          if (v19 < 0 && v15++ <= 8)
            continue;
          goto LABEL_30;
        }
        a1[*v4] = 1;
      }
      else if (!PBReaderSkipValueWithTag())
      {
LABEL_33:
        v21 = 0;
        goto LABEL_32;
      }
LABEL_30:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v21 = a1[*v4] == 0;
LABEL_32:
  PBReaderRecallMark();
  return v21;
}

BOOL GEOPDPlaceSummaryLayoutUnitTransitShieldsIsValid(unsigned __int8 *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  int v6;
  char v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  BOOL v14;
  _BOOL8 v15;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  v5 = (int *)MEMORY[0x1E0D82BB8];
  while (1)
  {
    v6 = a1[*v4];
    if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
      break;
    if (a1[*v4])
    {
      v6 = 1;
      break;
    }
    v7 = 0;
    v8 = 0;
    v9 = 0;
    while (1)
    {
      v10 = *v2;
      v11 = *(_QWORD *)&a1[v10];
      if (v11 == -1 || v11 >= *(_QWORD *)&a1[*v3])
        break;
      v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v11);
      *(_QWORD *)&a1[v10] = v11 + 1;
      v9 |= (unint64_t)(v12 & 0x7F) << v7;
      if ((v12 & 0x80) == 0)
        goto LABEL_12;
      v7 += 7;
      if (v8++ >= 9)
      {
        LOBYTE(v9) = 0;
        v6 = a1[*v4];
        goto LABEL_14;
      }
    }
    a1[*v4] = 1;
LABEL_12:
    v6 = a1[*v4];
    if (a1[*v4])
      LOBYTE(v9) = 0;
LABEL_14:
    if (v6)
      v14 = 1;
    else
      v14 = (v9 & 7) == 4;
    if (v14)
      break;
    if ((PBReaderSkipValueWithTag() & 1) == 0)
    {
      v15 = 0;
      goto LABEL_22;
    }
  }
  v15 = v6 == 0;
LABEL_22:
  PBReaderRecallMark();
  return v15;
}

BOOL GEOPDPlaceSummaryLayoutUnitUserGeneratedGuidesIsValid(unsigned __int8 *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  int v6;
  char v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  BOOL v14;
  _BOOL8 v15;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  v5 = (int *)MEMORY[0x1E0D82BB8];
  while (1)
  {
    v6 = a1[*v4];
    if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
      break;
    if (a1[*v4])
    {
      v6 = 1;
      break;
    }
    v7 = 0;
    v8 = 0;
    v9 = 0;
    while (1)
    {
      v10 = *v2;
      v11 = *(_QWORD *)&a1[v10];
      if (v11 == -1 || v11 >= *(_QWORD *)&a1[*v3])
        break;
      v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v11);
      *(_QWORD *)&a1[v10] = v11 + 1;
      v9 |= (unint64_t)(v12 & 0x7F) << v7;
      if ((v12 & 0x80) == 0)
        goto LABEL_12;
      v7 += 7;
      if (v8++ >= 9)
      {
        LOBYTE(v9) = 0;
        v6 = a1[*v4];
        goto LABEL_14;
      }
    }
    a1[*v4] = 1;
LABEL_12:
    v6 = a1[*v4];
    if (a1[*v4])
      LOBYTE(v9) = 0;
LABEL_14:
    if (v6)
      v14 = 1;
    else
      v14 = (v9 & 7) == 4;
    if (v14)
      break;
    if ((PBReaderSkipValueWithTag() & 1) == 0)
    {
      v15 = 0;
      goto LABEL_22;
    }
  }
  v15 = v6 == 0;
LABEL_22:
  PBReaderRecallMark();
  return v15;
}

BOOL GEOPDPlaceSummaryLayoutUnitCuratedGuidesIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  int v13;
  unsigned int v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int v19;
  _BOOL8 v21;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        if (v10 == -1 || v10 >= *(_QWORD *)&a1[*v3])
          break;
        v11 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v13 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      if (v13 || (v8 & 7) == 4)
        break;
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0)
          goto LABEL_33;
        v15 = 0;
        while (1)
        {
          v16 = *v2;
          v17 = *(_QWORD *)&a1[v16];
          if (v17 == -1 || v17 >= *(_QWORD *)&a1[*v3])
            break;
          v18 = v17 + 1;
          v19 = *(char *)(*(_QWORD *)&a1[*v5] + v17);
          *(_QWORD *)&a1[v16] = v18;
          if (v19 < 0 && v15++ <= 8)
            continue;
          goto LABEL_30;
        }
        a1[*v4] = 1;
      }
      else if (!PBReaderSkipValueWithTag())
      {
LABEL_33:
        v21 = 0;
        goto LABEL_32;
      }
LABEL_30:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v21 = a1[*v4] == 0;
LABEL_32:
  PBReaderRecallMark();
  return v21;
}

BOOL GEOPDPlaceSummaryLayoutUnitEVChargersNumberIsValid(unsigned __int8 *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  int v6;
  char v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  BOOL v14;
  _BOOL8 v15;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  v5 = (int *)MEMORY[0x1E0D82BB8];
  while (1)
  {
    v6 = a1[*v4];
    if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
      break;
    if (a1[*v4])
    {
      v6 = 1;
      break;
    }
    v7 = 0;
    v8 = 0;
    v9 = 0;
    while (1)
    {
      v10 = *v2;
      v11 = *(_QWORD *)&a1[v10];
      if (v11 == -1 || v11 >= *(_QWORD *)&a1[*v3])
        break;
      v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v11);
      *(_QWORD *)&a1[v10] = v11 + 1;
      v9 |= (unint64_t)(v12 & 0x7F) << v7;
      if ((v12 & 0x80) == 0)
        goto LABEL_12;
      v7 += 7;
      if (v8++ >= 9)
      {
        LOBYTE(v9) = 0;
        v6 = a1[*v4];
        goto LABEL_14;
      }
    }
    a1[*v4] = 1;
LABEL_12:
    v6 = a1[*v4];
    if (a1[*v4])
      LOBYTE(v9) = 0;
LABEL_14:
    if (v6)
      v14 = 1;
    else
      v14 = (v9 & 7) == 4;
    if (v14)
      break;
    if ((PBReaderSkipValueWithTag() & 1) == 0)
    {
      v15 = 0;
      goto LABEL_22;
    }
  }
  v15 = v6 == 0;
LABEL_22:
  PBReaderRecallMark();
  return v15;
}

BOOL GEOPDPlaceSummaryLayoutUnitUGCUserSubmittedRecommendationsIsValid(unsigned __int8 *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  int v6;
  char v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  BOOL v14;
  _BOOL8 v15;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  v5 = (int *)MEMORY[0x1E0D82BB8];
  while (1)
  {
    v6 = a1[*v4];
    if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
      break;
    if (a1[*v4])
    {
      v6 = 1;
      break;
    }
    v7 = 0;
    v8 = 0;
    v9 = 0;
    while (1)
    {
      v10 = *v2;
      v11 = *(_QWORD *)&a1[v10];
      if (v11 == -1 || v11 >= *(_QWORD *)&a1[*v3])
        break;
      v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v11);
      *(_QWORD *)&a1[v10] = v11 + 1;
      v9 |= (unint64_t)(v12 & 0x7F) << v7;
      if ((v12 & 0x80) == 0)
        goto LABEL_12;
      v7 += 7;
      if (v8++ >= 9)
      {
        LOBYTE(v9) = 0;
        v6 = a1[*v4];
        goto LABEL_14;
      }
    }
    a1[*v4] = 1;
LABEL_12:
    v6 = a1[*v4];
    if (a1[*v4])
      LOBYTE(v9) = 0;
LABEL_14:
    if (v6)
      v14 = 1;
    else
      v14 = (v9 & 7) == 4;
    if (v14)
      break;
    if ((PBReaderSkipValueWithTag() & 1) == 0)
    {
      v15 = 0;
      goto LABEL_22;
    }
  }
  v15 = v6 == 0;
LABEL_22:
  PBReaderRecallMark();
  return v15;
}

BOOL GEOPDPlaceSummaryLayoutUnitServerOverrideIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  int v13;
  unsigned int v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int v19;
  _BOOL8 v21;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        if (v10 == -1 || v10 >= *(_QWORD *)&a1[*v3])
          break;
        v11 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v13 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      if (v13 || (v8 & 7) == 4)
        break;
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0)
          goto LABEL_33;
        v15 = 0;
        while (1)
        {
          v16 = *v2;
          v17 = *(_QWORD *)&a1[v16];
          if (v17 == -1 || v17 >= *(_QWORD *)&a1[*v3])
            break;
          v18 = v17 + 1;
          v19 = *(char *)(*(_QWORD *)&a1[*v5] + v17);
          *(_QWORD *)&a1[v16] = v18;
          if (v19 < 0 && v15++ <= 8)
            continue;
          goto LABEL_30;
        }
        a1[*v4] = 1;
      }
      else if (!PBReaderSkipValueWithTag())
      {
LABEL_33:
        v21 = 0;
        goto LABEL_32;
      }
LABEL_30:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v21 = a1[*v4] == 0;
LABEL_32:
  PBReaderRecallMark();
  return v21;
}

BOOL GEOPDPlaceSummaryLayoutUnitContainmentIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  int v13;
  unsigned int v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int v19;
  _BOOL8 v21;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        if (v10 == -1 || v10 >= *(_QWORD *)&a1[*v3])
          break;
        v11 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v13 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      if (v13 || (v8 & 7) == 4)
        break;
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0)
          goto LABEL_33;
        v15 = 0;
        while (1)
        {
          v16 = *v2;
          v17 = *(_QWORD *)&a1[v16];
          if (v17 == -1 || v17 >= *(_QWORD *)&a1[*v3])
            break;
          v18 = v17 + 1;
          v19 = *(char *)(*(_QWORD *)&a1[*v5] + v17);
          *(_QWORD *)&a1[v16] = v18;
          if (v19 < 0 && v15++ <= 8)
            continue;
          goto LABEL_30;
        }
        a1[*v4] = 1;
      }
      else if (!PBReaderSkipValueWithTag())
      {
LABEL_33:
        v21 = 0;
        goto LABEL_32;
      }
LABEL_30:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v21 = a1[*v4] == 0;
LABEL_32:
  PBReaderRecallMark();
  return v21;
}

BOOL GEOPDPlaceSummaryLayoutUnitRecentIsValid(unsigned __int8 *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  int v6;
  char v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  BOOL v14;
  _BOOL8 v15;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  v5 = (int *)MEMORY[0x1E0D82BB8];
  while (1)
  {
    v6 = a1[*v4];
    if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
      break;
    if (a1[*v4])
    {
      v6 = 1;
      break;
    }
    v7 = 0;
    v8 = 0;
    v9 = 0;
    while (1)
    {
      v10 = *v2;
      v11 = *(_QWORD *)&a1[v10];
      if (v11 == -1 || v11 >= *(_QWORD *)&a1[*v3])
        break;
      v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v11);
      *(_QWORD *)&a1[v10] = v11 + 1;
      v9 |= (unint64_t)(v12 & 0x7F) << v7;
      if ((v12 & 0x80) == 0)
        goto LABEL_12;
      v7 += 7;
      if (v8++ >= 9)
      {
        LOBYTE(v9) = 0;
        v6 = a1[*v4];
        goto LABEL_14;
      }
    }
    a1[*v4] = 1;
LABEL_12:
    v6 = a1[*v4];
    if (a1[*v4])
      LOBYTE(v9) = 0;
LABEL_14:
    if (v6)
      v14 = 1;
    else
      v14 = (v9 & 7) == 4;
    if (v14)
      break;
    if ((PBReaderSkipValueWithTag() & 1) == 0)
    {
      v15 = 0;
      goto LABEL_22;
    }
  }
  v15 = v6 == 0;
LABEL_22:
  PBReaderRecallMark();
  return v15;
}

BOOL GEOPDPlaceSummaryLayoutUnitHighlightMainIsValid(unsigned __int8 *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  int v6;
  char v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  BOOL v14;
  _BOOL8 v15;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  v5 = (int *)MEMORY[0x1E0D82BB8];
  while (1)
  {
    v6 = a1[*v4];
    if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
      break;
    if (a1[*v4])
    {
      v6 = 1;
      break;
    }
    v7 = 0;
    v8 = 0;
    v9 = 0;
    while (1)
    {
      v10 = *v2;
      v11 = *(_QWORD *)&a1[v10];
      if (v11 == -1 || v11 >= *(_QWORD *)&a1[*v3])
        break;
      v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v11);
      *(_QWORD *)&a1[v10] = v11 + 1;
      v9 |= (unint64_t)(v12 & 0x7F) << v7;
      if ((v12 & 0x80) == 0)
        goto LABEL_12;
      v7 += 7;
      if (v8++ >= 9)
      {
        LOBYTE(v9) = 0;
        v6 = a1[*v4];
        goto LABEL_14;
      }
    }
    a1[*v4] = 1;
LABEL_12:
    v6 = a1[*v4];
    if (a1[*v4])
      LOBYTE(v9) = 0;
LABEL_14:
    if (v6)
      v14 = 1;
    else
      v14 = (v9 & 7) == 4;
    if (v14)
      break;
    if ((PBReaderSkipValueWithTag() & 1) == 0)
    {
      v15 = 0;
      goto LABEL_22;
    }
  }
  v15 = v6 == 0;
LABEL_22:
  PBReaderRecallMark();
  return v15;
}

BOOL GEOPDPlaceSummaryLayoutUnitHighlightExtraIsValid(unsigned __int8 *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  int v6;
  char v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  BOOL v14;
  _BOOL8 v15;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  v5 = (int *)MEMORY[0x1E0D82BB8];
  while (1)
  {
    v6 = a1[*v4];
    if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
      break;
    if (a1[*v4])
    {
      v6 = 1;
      break;
    }
    v7 = 0;
    v8 = 0;
    v9 = 0;
    while (1)
    {
      v10 = *v2;
      v11 = *(_QWORD *)&a1[v10];
      if (v11 == -1 || v11 >= *(_QWORD *)&a1[*v3])
        break;
      v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v11);
      *(_QWORD *)&a1[v10] = v11 + 1;
      v9 |= (unint64_t)(v12 & 0x7F) << v7;
      if ((v12 & 0x80) == 0)
        goto LABEL_12;
      v7 += 7;
      if (v8++ >= 9)
      {
        LOBYTE(v9) = 0;
        v6 = a1[*v4];
        goto LABEL_14;
      }
    }
    a1[*v4] = 1;
LABEL_12:
    v6 = a1[*v4];
    if (a1[*v4])
      LOBYTE(v9) = 0;
LABEL_14:
    if (v6)
      v14 = 1;
    else
      v14 = (v9 & 7) == 4;
    if (v14)
      break;
    if ((PBReaderSkipValueWithTag() & 1) == 0)
    {
      v15 = 0;
      goto LABEL_22;
    }
  }
  v15 = v6 == 0;
LABEL_22:
  PBReaderRecallMark();
  return v15;
}

BOOL GEOPDPlaceSummaryLayoutUnitPublisherNameForGuideIsValid(unsigned __int8 *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  int v6;
  char v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  BOOL v14;
  _BOOL8 v15;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  v5 = (int *)MEMORY[0x1E0D82BB8];
  while (1)
  {
    v6 = a1[*v4];
    if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
      break;
    if (a1[*v4])
    {
      v6 = 1;
      break;
    }
    v7 = 0;
    v8 = 0;
    v9 = 0;
    while (1)
    {
      v10 = *v2;
      v11 = *(_QWORD *)&a1[v10];
      if (v11 == -1 || v11 >= *(_QWORD *)&a1[*v3])
        break;
      v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v11);
      *(_QWORD *)&a1[v10] = v11 + 1;
      v9 |= (unint64_t)(v12 & 0x7F) << v7;
      if ((v12 & 0x80) == 0)
        goto LABEL_12;
      v7 += 7;
      if (v8++ >= 9)
      {
        LOBYTE(v9) = 0;
        v6 = a1[*v4];
        goto LABEL_14;
      }
    }
    a1[*v4] = 1;
LABEL_12:
    v6 = a1[*v4];
    if (a1[*v4])
      LOBYTE(v9) = 0;
LABEL_14:
    if (v6)
      v14 = 1;
    else
      v14 = (v9 & 7) == 4;
    if (v14)
      break;
    if ((PBReaderSkipValueWithTag() & 1) == 0)
    {
      v15 = 0;
      goto LABEL_22;
    }
  }
  v15 = v6 == 0;
LABEL_22:
  PBReaderRecallMark();
  return v15;
}

BOOL GEOPDPlaceSummaryLayoutUnitNumPlacesInGuideIsValid(unsigned __int8 *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  int v6;
  char v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  BOOL v14;
  _BOOL8 v15;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  v5 = (int *)MEMORY[0x1E0D82BB8];
  while (1)
  {
    v6 = a1[*v4];
    if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
      break;
    if (a1[*v4])
    {
      v6 = 1;
      break;
    }
    v7 = 0;
    v8 = 0;
    v9 = 0;
    while (1)
    {
      v10 = *v2;
      v11 = *(_QWORD *)&a1[v10];
      if (v11 == -1 || v11 >= *(_QWORD *)&a1[*v3])
        break;
      v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v11);
      *(_QWORD *)&a1[v10] = v11 + 1;
      v9 |= (unint64_t)(v12 & 0x7F) << v7;
      if ((v12 & 0x80) == 0)
        goto LABEL_12;
      v7 += 7;
      if (v8++ >= 9)
      {
        LOBYTE(v9) = 0;
        v6 = a1[*v4];
        goto LABEL_14;
      }
    }
    a1[*v4] = 1;
LABEL_12:
    v6 = a1[*v4];
    if (a1[*v4])
      LOBYTE(v9) = 0;
LABEL_14:
    if (v6)
      v14 = 1;
    else
      v14 = (v9 & 7) == 4;
    if (v14)
      break;
    if ((PBReaderSkipValueWithTag() & 1) == 0)
    {
      v15 = 0;
      goto LABEL_22;
    }
  }
  v15 = v6 == 0;
LABEL_22:
  PBReaderRecallMark();
  return v15;
}

BOOL GEOPDPlaceSummaryLayoutUnitPublisherDescriptionIsValid(unsigned __int8 *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  int v6;
  char v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  BOOL v14;
  _BOOL8 v15;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  v5 = (int *)MEMORY[0x1E0D82BB8];
  while (1)
  {
    v6 = a1[*v4];
    if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
      break;
    if (a1[*v4])
    {
      v6 = 1;
      break;
    }
    v7 = 0;
    v8 = 0;
    v9 = 0;
    while (1)
    {
      v10 = *v2;
      v11 = *(_QWORD *)&a1[v10];
      if (v11 == -1 || v11 >= *(_QWORD *)&a1[*v3])
        break;
      v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v11);
      *(_QWORD *)&a1[v10] = v11 + 1;
      v9 |= (unint64_t)(v12 & 0x7F) << v7;
      if ((v12 & 0x80) == 0)
        goto LABEL_12;
      v7 += 7;
      if (v8++ >= 9)
      {
        LOBYTE(v9) = 0;
        v6 = a1[*v4];
        goto LABEL_14;
      }
    }
    a1[*v4] = 1;
LABEL_12:
    v6 = a1[*v4];
    if (a1[*v4])
      LOBYTE(v9) = 0;
LABEL_14:
    if (v6)
      v14 = 1;
    else
      v14 = (v9 & 7) == 4;
    if (v14)
      break;
    if ((PBReaderSkipValueWithTag() & 1) == 0)
    {
      v15 = 0;
      goto LABEL_22;
    }
  }
  v15 = v6 == 0;
LABEL_22:
  PBReaderRecallMark();
  return v15;
}

BOOL GEOPDPlaceSummaryLayoutUnitSecondaryNameIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  int v13;
  int v14;
  _BOOL8 v16;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        if (v10 == -1 || v10 >= *(_QWORD *)&a1[*v3])
          break;
        v11 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v13 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v14 = v8 & 7;
      if (v13 || v14 == 4)
        break;
      if ((v8 >> 3) == 1)
      {
        if (v14 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_26:
          v16 = 0;
          goto LABEL_25;
        }
      }
      else if (!PBReaderSkipValueWithTag())
      {
        goto LABEL_26;
      }
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v16 = a1[*v4] == 0;
LABEL_25:
  PBReaderRecallMark();
  return v16;
}

BOOL GEOPDPlaceSummaryLayoutUnitFactoidIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  int v13;
  unsigned int v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int v19;
  _BOOL8 v21;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        if (v10 == -1 || v10 >= *(_QWORD *)&a1[*v3])
          break;
        v11 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v13 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      if (v13 || (v8 & 7) == 4)
        break;
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0)
          goto LABEL_33;
        v15 = 0;
        while (1)
        {
          v16 = *v2;
          v17 = *(_QWORD *)&a1[v16];
          if (v17 == -1 || v17 >= *(_QWORD *)&a1[*v3])
            break;
          v18 = v17 + 1;
          v19 = *(char *)(*(_QWORD *)&a1[*v5] + v17);
          *(_QWORD *)&a1[v16] = v18;
          if (v19 < 0 && v15++ <= 8)
            continue;
          goto LABEL_30;
        }
        a1[*v4] = 1;
      }
      else if (!PBReaderSkipValueWithTag())
      {
LABEL_33:
        v21 = 0;
        goto LABEL_32;
      }
LABEL_30:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v21 = a1[*v4] == 0;
LABEL_32:
  PBReaderRecallMark();
  return v21;
}

BOOL GEOPDPlaceSummaryLayoutUnitArpRatingsIsValid(unsigned __int8 *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  int v6;
  char v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  BOOL v14;
  _BOOL8 v15;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  v5 = (int *)MEMORY[0x1E0D82BB8];
  while (1)
  {
    v6 = a1[*v4];
    if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
      break;
    if (a1[*v4])
    {
      v6 = 1;
      break;
    }
    v7 = 0;
    v8 = 0;
    v9 = 0;
    while (1)
    {
      v10 = *v2;
      v11 = *(_QWORD *)&a1[v10];
      if (v11 == -1 || v11 >= *(_QWORD *)&a1[*v3])
        break;
      v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v11);
      *(_QWORD *)&a1[v10] = v11 + 1;
      v9 |= (unint64_t)(v12 & 0x7F) << v7;
      if ((v12 & 0x80) == 0)
        goto LABEL_12;
      v7 += 7;
      if (v8++ >= 9)
      {
        LOBYTE(v9) = 0;
        v6 = a1[*v4];
        goto LABEL_14;
      }
    }
    a1[*v4] = 1;
LABEL_12:
    v6 = a1[*v4];
    if (a1[*v4])
      LOBYTE(v9) = 0;
LABEL_14:
    if (v6)
      v14 = 1;
    else
      v14 = (v9 & 7) == 4;
    if (v14)
      break;
    if ((PBReaderSkipValueWithTag() & 1) == 0)
    {
      v15 = 0;
      goto LABEL_22;
    }
  }
  v15 = v6 == 0;
LABEL_22:
  PBReaderRecallMark();
  return v15;
}

BOOL GEOPDPlaceSummaryLayoutUnitRealTimeEVChargerAvailabilityIsValid(unsigned __int8 *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  int v6;
  char v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  BOOL v14;
  _BOOL8 v15;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  v5 = (int *)MEMORY[0x1E0D82BB8];
  while (1)
  {
    v6 = a1[*v4];
    if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
      break;
    if (a1[*v4])
    {
      v6 = 1;
      break;
    }
    v7 = 0;
    v8 = 0;
    v9 = 0;
    while (1)
    {
      v10 = *v2;
      v11 = *(_QWORD *)&a1[v10];
      if (v11 == -1 || v11 >= *(_QWORD *)&a1[*v3])
        break;
      v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v11);
      *(_QWORD *)&a1[v10] = v11 + 1;
      v9 |= (unint64_t)(v12 & 0x7F) << v7;
      if ((v12 & 0x80) == 0)
        goto LABEL_12;
      v7 += 7;
      if (v8++ >= 9)
      {
        LOBYTE(v9) = 0;
        v6 = a1[*v4];
        goto LABEL_14;
      }
    }
    a1[*v4] = 1;
LABEL_12:
    v6 = a1[*v4];
    if (a1[*v4])
      LOBYTE(v9) = 0;
LABEL_14:
    if (v6)
      v14 = 1;
    else
      v14 = (v9 & 7) == 4;
    if (v14)
      break;
    if ((PBReaderSkipValueWithTag() & 1) == 0)
    {
      v15 = 0;
      goto LABEL_22;
    }
  }
  v15 = v6 == 0;
LABEL_22:
  PBReaderRecallMark();
  return v15;
}

BOOL GEOPDPlaceSummaryLayoutUnitDetourTimeIsValid(unsigned __int8 *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  int v6;
  char v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  BOOL v14;
  _BOOL8 v15;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  v5 = (int *)MEMORY[0x1E0D82BB8];
  while (1)
  {
    v6 = a1[*v4];
    if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
      break;
    if (a1[*v4])
    {
      v6 = 1;
      break;
    }
    v7 = 0;
    v8 = 0;
    v9 = 0;
    while (1)
    {
      v10 = *v2;
      v11 = *(_QWORD *)&a1[v10];
      if (v11 == -1 || v11 >= *(_QWORD *)&a1[*v3])
        break;
      v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v11);
      *(_QWORD *)&a1[v10] = v11 + 1;
      v9 |= (unint64_t)(v12 & 0x7F) << v7;
      if ((v12 & 0x80) == 0)
        goto LABEL_12;
      v7 += 7;
      if (v8++ >= 9)
      {
        LOBYTE(v9) = 0;
        v6 = a1[*v4];
        goto LABEL_14;
      }
    }
    a1[*v4] = 1;
LABEL_12:
    v6 = a1[*v4];
    if (a1[*v4])
      LOBYTE(v9) = 0;
LABEL_14:
    if (v6)
      v14 = 1;
    else
      v14 = (v9 & 7) == 4;
    if (v14)
      break;
    if ((PBReaderSkipValueWithTag() & 1) == 0)
    {
      v15 = 0;
      goto LABEL_22;
    }
  }
  v15 = v6 == 0;
LABEL_22:
  PBReaderRecallMark();
  return v15;
}

BOOL GEOPDPlaceSummaryLayoutUnitHikingDifficultyIsValid(unsigned __int8 *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  int v6;
  char v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  BOOL v14;
  _BOOL8 v15;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  v5 = (int *)MEMORY[0x1E0D82BB8];
  while (1)
  {
    v6 = a1[*v4];
    if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
      break;
    if (a1[*v4])
    {
      v6 = 1;
      break;
    }
    v7 = 0;
    v8 = 0;
    v9 = 0;
    while (1)
    {
      v10 = *v2;
      v11 = *(_QWORD *)&a1[v10];
      if (v11 == -1 || v11 >= *(_QWORD *)&a1[*v3])
        break;
      v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v11);
      *(_QWORD *)&a1[v10] = v11 + 1;
      v9 |= (unint64_t)(v12 & 0x7F) << v7;
      if ((v12 & 0x80) == 0)
        goto LABEL_12;
      v7 += 7;
      if (v8++ >= 9)
      {
        LOBYTE(v9) = 0;
        v6 = a1[*v4];
        goto LABEL_14;
      }
    }
    a1[*v4] = 1;
LABEL_12:
    v6 = a1[*v4];
    if (a1[*v4])
      LOBYTE(v9) = 0;
LABEL_14:
    if (v6)
      v14 = 1;
    else
      v14 = (v9 & 7) == 4;
    if (v14)
      break;
    if ((PBReaderSkipValueWithTag() & 1) == 0)
    {
      v15 = 0;
      goto LABEL_22;
    }
  }
  v15 = v6 == 0;
LABEL_22:
  PBReaderRecallMark();
  return v15;
}

BOOL GEOPDPlaceSummaryLayoutUnitHikingTrailLengthIsValid(unsigned __int8 *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  int v6;
  char v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  BOOL v14;
  _BOOL8 v15;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  v5 = (int *)MEMORY[0x1E0D82BB8];
  while (1)
  {
    v6 = a1[*v4];
    if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
      break;
    if (a1[*v4])
    {
      v6 = 1;
      break;
    }
    v7 = 0;
    v8 = 0;
    v9 = 0;
    while (1)
    {
      v10 = *v2;
      v11 = *(_QWORD *)&a1[v10];
      if (v11 == -1 || v11 >= *(_QWORD *)&a1[*v3])
        break;
      v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v11);
      *(_QWORD *)&a1[v10] = v11 + 1;
      v9 |= (unint64_t)(v12 & 0x7F) << v7;
      if ((v12 & 0x80) == 0)
        goto LABEL_12;
      v7 += 7;
      if (v8++ >= 9)
      {
        LOBYTE(v9) = 0;
        v6 = a1[*v4];
        goto LABEL_14;
      }
    }
    a1[*v4] = 1;
LABEL_12:
    v6 = a1[*v4];
    if (a1[*v4])
      LOBYTE(v9) = 0;
LABEL_14:
    if (v6)
      v14 = 1;
    else
      v14 = (v9 & 7) == 4;
    if (v14)
      break;
    if ((PBReaderSkipValueWithTag() & 1) == 0)
    {
      v15 = 0;
      goto LABEL_22;
    }
  }
  v15 = v6 == 0;
LABEL_22:
  PBReaderRecallMark();
  return v15;
}

BOOL GEOPDPlaceSummaryLayoutUnitPhotoCarouselIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  int v13;
  unsigned int v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int v19;
  _BOOL8 v21;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        if (v10 == -1 || v10 >= *(_QWORD *)&a1[*v3])
          break;
        v11 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v13 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      if (v13 || (v8 & 7) == 4)
        break;
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0)
          goto LABEL_33;
        v15 = 0;
        while (1)
        {
          v16 = *v2;
          v17 = *(_QWORD *)&a1[v16];
          if (v17 == -1 || v17 >= *(_QWORD *)&a1[*v3])
            break;
          v18 = v17 + 1;
          v19 = *(char *)(*(_QWORD *)&a1[*v5] + v17);
          *(_QWORD *)&a1[v16] = v18;
          if (v19 < 0 && v15++ <= 8)
            continue;
          goto LABEL_30;
        }
        a1[*v4] = 1;
      }
      else if (!PBReaderSkipValueWithTag())
      {
LABEL_33:
        v21 = 0;
        goto LABEL_32;
      }
LABEL_30:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v21 = a1[*v4] == 0;
LABEL_32:
  PBReaderRecallMark();
  return v21;
}

BOOL GEOPDPlaceSummaryLayoutUnitUserNoteIsValid(unsigned __int8 *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  int v6;
  char v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  BOOL v14;
  _BOOL8 v15;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  v5 = (int *)MEMORY[0x1E0D82BB8];
  while (1)
  {
    v6 = a1[*v4];
    if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
      break;
    if (a1[*v4])
    {
      v6 = 1;
      break;
    }
    v7 = 0;
    v8 = 0;
    v9 = 0;
    while (1)
    {
      v10 = *v2;
      v11 = *(_QWORD *)&a1[v10];
      if (v11 == -1 || v11 >= *(_QWORD *)&a1[*v3])
        break;
      v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v11);
      *(_QWORD *)&a1[v10] = v11 + 1;
      v9 |= (unint64_t)(v12 & 0x7F) << v7;
      if ((v12 & 0x80) == 0)
        goto LABEL_12;
      v7 += 7;
      if (v8++ >= 9)
      {
        LOBYTE(v9) = 0;
        v6 = a1[*v4];
        goto LABEL_14;
      }
    }
    a1[*v4] = 1;
LABEL_12:
    v6 = a1[*v4];
    if (a1[*v4])
      LOBYTE(v9) = 0;
LABEL_14:
    if (v6)
      v14 = 1;
    else
      v14 = (v9 & 7) == 4;
    if (v14)
      break;
    if ((PBReaderSkipValueWithTag() & 1) == 0)
    {
      v15 = 0;
      goto LABEL_22;
    }
  }
  v15 = v6 == 0;
LABEL_22:
  PBReaderRecallMark();
  return v15;
}

BOOL GEOPDPlaceSummaryLayoutUnitInUserLibraryIsValid(unsigned __int8 *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  int v6;
  char v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  BOOL v14;
  _BOOL8 v15;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  v5 = (int *)MEMORY[0x1E0D82BB8];
  while (1)
  {
    v6 = a1[*v4];
    if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
      break;
    if (a1[*v4])
    {
      v6 = 1;
      break;
    }
    v7 = 0;
    v8 = 0;
    v9 = 0;
    while (1)
    {
      v10 = *v2;
      v11 = *(_QWORD *)&a1[v10];
      if (v11 == -1 || v11 >= *(_QWORD *)&a1[*v3])
        break;
      v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v11);
      *(_QWORD *)&a1[v10] = v11 + 1;
      v9 |= (unint64_t)(v12 & 0x7F) << v7;
      if ((v12 & 0x80) == 0)
        goto LABEL_12;
      v7 += 7;
      if (v8++ >= 9)
      {
        LOBYTE(v9) = 0;
        v6 = a1[*v4];
        goto LABEL_14;
      }
    }
    a1[*v4] = 1;
LABEL_12:
    v6 = a1[*v4];
    if (a1[*v4])
      LOBYTE(v9) = 0;
LABEL_14:
    if (v6)
      v14 = 1;
    else
      v14 = (v9 & 7) == 4;
    if (v14)
      break;
    if ((PBReaderSkipValueWithTag() & 1) == 0)
    {
      v15 = 0;
      goto LABEL_22;
    }
  }
  v15 = v6 == 0;
LABEL_22:
  PBReaderRecallMark();
  return v15;
}

BOOL GEOPDPlaceSummaryLayoutUnitHikeRouteFactoidElevationGainLossIsValid(unsigned __int8 *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  int v6;
  char v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  BOOL v14;
  _BOOL8 v15;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  v5 = (int *)MEMORY[0x1E0D82BB8];
  while (1)
  {
    v6 = a1[*v4];
    if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
      break;
    if (a1[*v4])
    {
      v6 = 1;
      break;
    }
    v7 = 0;
    v8 = 0;
    v9 = 0;
    while (1)
    {
      v10 = *v2;
      v11 = *(_QWORD *)&a1[v10];
      if (v11 == -1 || v11 >= *(_QWORD *)&a1[*v3])
        break;
      v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v11);
      *(_QWORD *)&a1[v10] = v11 + 1;
      v9 |= (unint64_t)(v12 & 0x7F) << v7;
      if ((v12 & 0x80) == 0)
        goto LABEL_12;
      v7 += 7;
      if (v8++ >= 9)
      {
        LOBYTE(v9) = 0;
        v6 = a1[*v4];
        goto LABEL_14;
      }
    }
    a1[*v4] = 1;
LABEL_12:
    v6 = a1[*v4];
    if (a1[*v4])
      LOBYTE(v9) = 0;
LABEL_14:
    if (v6)
      v14 = 1;
    else
      v14 = (v9 & 7) == 4;
    if (v14)
      break;
    if ((PBReaderSkipValueWithTag() & 1) == 0)
    {
      v15 = 0;
      goto LABEL_22;
    }
  }
  v15 = v6 == 0;
LABEL_22:
  PBReaderRecallMark();
  return v15;
}

BOOL GEOPDPlaceSummaryLayoutUnitHikeRouteTypeIsValid(unsigned __int8 *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  int v6;
  char v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  BOOL v14;
  _BOOL8 v15;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  v5 = (int *)MEMORY[0x1E0D82BB8];
  while (1)
  {
    v6 = a1[*v4];
    if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
      break;
    if (a1[*v4])
    {
      v6 = 1;
      break;
    }
    v7 = 0;
    v8 = 0;
    v9 = 0;
    while (1)
    {
      v10 = *v2;
      v11 = *(_QWORD *)&a1[v10];
      if (v11 == -1 || v11 >= *(_QWORD *)&a1[*v3])
        break;
      v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v11);
      *(_QWORD *)&a1[v10] = v11 + 1;
      v9 |= (unint64_t)(v12 & 0x7F) << v7;
      if ((v12 & 0x80) == 0)
        goto LABEL_12;
      v7 += 7;
      if (v8++ >= 9)
      {
        LOBYTE(v9) = 0;
        v6 = a1[*v4];
        goto LABEL_14;
      }
    }
    a1[*v4] = 1;
LABEL_12:
    v6 = a1[*v4];
    if (a1[*v4])
      LOBYTE(v9) = 0;
LABEL_14:
    if (v6)
      v14 = 1;
    else
      v14 = (v9 & 7) == 4;
    if (v14)
      break;
    if ((PBReaderSkipValueWithTag() & 1) == 0)
    {
      v15 = 0;
      goto LABEL_22;
    }
  }
  v15 = v6 == 0;
LABEL_22:
  PBReaderRecallMark();
  return v15;
}

BOOL GEOPDPlaceSummaryLayoutUnitHikeRouteDurationIsValid(unsigned __int8 *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  int v6;
  char v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  BOOL v14;
  _BOOL8 v15;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  v5 = (int *)MEMORY[0x1E0D82BB8];
  while (1)
  {
    v6 = a1[*v4];
    if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
      break;
    if (a1[*v4])
    {
      v6 = 1;
      break;
    }
    v7 = 0;
    v8 = 0;
    v9 = 0;
    while (1)
    {
      v10 = *v2;
      v11 = *(_QWORD *)&a1[v10];
      if (v11 == -1 || v11 >= *(_QWORD *)&a1[*v3])
        break;
      v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v11);
      *(_QWORD *)&a1[v10] = v11 + 1;
      v9 |= (unint64_t)(v12 & 0x7F) << v7;
      if ((v12 & 0x80) == 0)
        goto LABEL_12;
      v7 += 7;
      if (v8++ >= 9)
      {
        LOBYTE(v9) = 0;
        v6 = a1[*v4];
        goto LABEL_14;
      }
    }
    a1[*v4] = 1;
LABEL_12:
    v6 = a1[*v4];
    if (a1[*v4])
      LOBYTE(v9) = 0;
LABEL_14:
    if (v6)
      v14 = 1;
    else
      v14 = (v9 & 7) == 4;
    if (v14)
      break;
    if ((PBReaderSkipValueWithTag() & 1) == 0)
    {
      v15 = 0;
      goto LABEL_22;
    }
  }
  v15 = v6 == 0;
LABEL_22:
  PBReaderRecallMark();
  return v15;
}

BOOL GEOPDPlaceSummaryLayoutUnitHikeRouteLengthIsValid(unsigned __int8 *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  int v6;
  char v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  BOOL v14;
  _BOOL8 v15;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  v5 = (int *)MEMORY[0x1E0D82BB8];
  while (1)
  {
    v6 = a1[*v4];
    if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
      break;
    if (a1[*v4])
    {
      v6 = 1;
      break;
    }
    v7 = 0;
    v8 = 0;
    v9 = 0;
    while (1)
    {
      v10 = *v2;
      v11 = *(_QWORD *)&a1[v10];
      if (v11 == -1 || v11 >= *(_QWORD *)&a1[*v3])
        break;
      v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v11);
      *(_QWORD *)&a1[v10] = v11 + 1;
      v9 |= (unint64_t)(v12 & 0x7F) << v7;
      if ((v12 & 0x80) == 0)
        goto LABEL_12;
      v7 += 7;
      if (v8++ >= 9)
      {
        LOBYTE(v9) = 0;
        v6 = a1[*v4];
        goto LABEL_14;
      }
    }
    a1[*v4] = 1;
LABEL_12:
    v6 = a1[*v4];
    if (a1[*v4])
      LOBYTE(v9) = 0;
LABEL_14:
    if (v6)
      v14 = 1;
    else
      v14 = (v9 & 7) == 4;
    if (v14)
      break;
    if ((PBReaderSkipValueWithTag() & 1) == 0)
    {
      v15 = 0;
      goto LABEL_22;
    }
  }
  v15 = v6 == 0;
LABEL_22:
  PBReaderRecallMark();
  return v15;
}

void sub_189332C74(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDPlaceSummaryLayoutUnitIsDirty(uint64_t a1)
{
  uint64_t v2;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 312));
  v2 = *(_QWORD *)(a1 + 324);
  if ((v2 & 0x5C125006A4) != 0)
    return 1;
  if ((v2 & 0x200000000) != 0)
  {
    if (GEOPDPlaceSummaryLayoutUnitStringIsDirty(*(_QWORD *)(a1 + 264)))
      return 1;
    v2 = *(_QWORD *)(a1 + 324);
  }
  if ((v2 & 0x21EDAFF950) != 0)
    return 1;
  if ((v2 & 8) != 0)
    return (uint64_t)GEOPDPlaceSummaryLayoutUnitIsDirty(*(os_unfair_lock_s **)(a1 + 24));
  else
    return 0;
}

os_unfair_lock_s *GEOPDPlaceSummaryLayoutUnitIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOPDPlaceSummaryLayoutUnitIsDirty(v1);
    os_unfair_lock_unlock(v1 + 78);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_189333828(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryLayoutUnitAddressReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  _BOOL8 v23;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          if (v12 == -1 || v12 >= *(_QWORD *)&v3[*v5])
            break;
          v13 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v12 + 1;
          v10 |= (unint64_t)(v13 & 0x7F) << v8;
          if ((v13 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v14 = v9++ >= 9;
          if (v14)
          {
            v10 = 0;
            v15 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v15 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v15 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 1)
        {
          v17 = 0;
          v18 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 12) |= 1u;
          while (1)
          {
            v20 = *v4;
            v21 = *(_QWORD *)&v3[v20];
            if (v21 == -1 || v21 >= *(_QWORD *)&v3[*v5])
              break;
            v22 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v21);
            *(_QWORD *)&v3[v20] = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              goto LABEL_30;
            v17 += 7;
            v14 = v18++ >= 9;
            if (v14)
            {
              LODWORD(v19) = 0;
              goto LABEL_32;
            }
          }
          v3[*v6] = 1;
LABEL_30:
          if (v3[*v6])
            LODWORD(v19) = 0;
LABEL_32:
          *(_DWORD *)(a1 + 8) = v19;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_35;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v23 = v3[*v6] == 0;
  }
  else
  {
LABEL_35:
    v23 = 0;
  }
  objc_sync_exit(v3);

  return v23;
}

void sub_1893351A0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryLayoutUnitAddressReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOPDPlaceSummaryLayoutUnitAddressReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189335200(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryLayoutUnitArpRatingsReadAllFrom(uint64_t a1, void *a2)
{
  unsigned __int8 *v2;
  int *v3;
  int *v4;
  int *v5;
  int *v6;
  int v7;
  char v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v15;
  _BOOL8 v16;

  v2 = a2;
  objc_sync_enter(v2);
  if (v2)
  {
    v3 = (int *)MEMORY[0x1E0D82BF0];
    v4 = (int *)MEMORY[0x1E0D82BD8];
    v5 = (int *)MEMORY[0x1E0D82BC8];
    v6 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      v7 = v2[*v5];
      if (*(_QWORD *)&v2[*v3] >= *(_QWORD *)&v2[*v4])
        break;
      if (v2[*v5])
      {
        v7 = 1;
        break;
      }
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)&v2[v11];
        if (v12 == -1 || v12 >= *(_QWORD *)&v2[*v4])
          break;
        v13 = *(_BYTE *)(*(_QWORD *)&v2[*v6] + v12);
        *(_QWORD *)&v2[v11] = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_13;
        v8 += 7;
        if (v9++ >= 9)
        {
          LOBYTE(v10) = 0;
          v7 = v2[*v5];
          goto LABEL_15;
        }
      }
      v2[*v5] = 1;
LABEL_13:
      v7 = v2[*v5];
      if (v2[*v5])
        LOBYTE(v10) = 0;
LABEL_15:
      if (v7)
        v15 = 1;
      else
        v15 = (v10 & 7) == 4;
      if (v15)
        break;
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        goto LABEL_20;
    }
    v16 = v7 == 0;
  }
  else
  {
LABEL_20:
    v16 = 0;
  }
  objc_sync_exit(v2);

  return v16;
}

void sub_18933567C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryLayoutUnitArpRatingsReadFrom(uint64_t a1, void *a2)
{
  id v2;
  uint64_t v3;
  _BOOL8 AllFrom;

  v2 = a2;
  v3 = objc_sync_enter(v2);
  AllFrom = GEOPDPlaceSummaryLayoutUnitArpRatingsReadAllFrom(v3, v2);
  objc_sync_exit(v2);

  return AllFrom;
}

void sub_1893356D4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryLayoutUnitCategoryReadAllFrom(uint64_t a1, void *a2)
{
  unsigned __int8 *v2;
  int *v3;
  int *v4;
  int *v5;
  int *v6;
  int v7;
  char v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v15;
  _BOOL8 v16;

  v2 = a2;
  objc_sync_enter(v2);
  if (v2)
  {
    v3 = (int *)MEMORY[0x1E0D82BF0];
    v4 = (int *)MEMORY[0x1E0D82BD8];
    v5 = (int *)MEMORY[0x1E0D82BC8];
    v6 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      v7 = v2[*v5];
      if (*(_QWORD *)&v2[*v3] >= *(_QWORD *)&v2[*v4])
        break;
      if (v2[*v5])
      {
        v7 = 1;
        break;
      }
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)&v2[v11];
        if (v12 == -1 || v12 >= *(_QWORD *)&v2[*v4])
          break;
        v13 = *(_BYTE *)(*(_QWORD *)&v2[*v6] + v12);
        *(_QWORD *)&v2[v11] = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_13;
        v8 += 7;
        if (v9++ >= 9)
        {
          LOBYTE(v10) = 0;
          v7 = v2[*v5];
          goto LABEL_15;
        }
      }
      v2[*v5] = 1;
LABEL_13:
      v7 = v2[*v5];
      if (v2[*v5])
        LOBYTE(v10) = 0;
LABEL_15:
      if (v7)
        v15 = 1;
      else
        v15 = (v10 & 7) == 4;
      if (v15)
        break;
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        goto LABEL_20;
    }
    v16 = v7 == 0;
  }
  else
  {
LABEL_20:
    v16 = 0;
  }
  objc_sync_exit(v2);

  return v16;
}

void sub_1893359BC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryLayoutUnitCategoryReadFrom(uint64_t a1, void *a2)
{
  id v2;
  uint64_t v3;
  _BOOL8 AllFrom;

  v2 = a2;
  v3 = objc_sync_enter(v2);
  AllFrom = GEOPDPlaceSummaryLayoutUnitCategoryReadAllFrom(v3, v2);
  objc_sync_exit(v2);

  return AllFrom;
}

void sub_189335A14(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryLayoutUnitContainmentReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  _BOOL8 v23;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          if (v12 == -1 || v12 >= *(_QWORD *)&v3[*v5])
            break;
          v13 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v12 + 1;
          v10 |= (unint64_t)(v13 & 0x7F) << v8;
          if ((v13 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v14 = v9++ >= 9;
          if (v14)
          {
            v10 = 0;
            v15 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v15 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v15 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 1)
        {
          v17 = 0;
          v18 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 12) |= 1u;
          while (1)
          {
            v20 = *v4;
            v21 = *(_QWORD *)&v3[v20];
            if (v21 == -1 || v21 >= *(_QWORD *)&v3[*v5])
              break;
            v22 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v21);
            *(_QWORD *)&v3[v20] = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              goto LABEL_30;
            v17 += 7;
            v14 = v18++ >= 9;
            if (v14)
            {
              LODWORD(v19) = 0;
              goto LABEL_32;
            }
          }
          v3[*v6] = 1;
LABEL_30:
          if (v3[*v6])
            LODWORD(v19) = 0;
LABEL_32:
          *(_DWORD *)(a1 + 8) = v19;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_35;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v23 = v3[*v6] == 0;
  }
  else
  {
LABEL_35:
    v23 = 0;
  }
  objc_sync_exit(v3);

  return v23;
}

void sub_1893361AC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryLayoutUnitContainmentReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOPDPlaceSummaryLayoutUnitContainmentReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18933620C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryLayoutUnitCuratedGuidesReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  _BOOL8 v23;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          if (v12 == -1 || v12 >= *(_QWORD *)&v3[*v5])
            break;
          v13 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v12 + 1;
          v10 |= (unint64_t)(v13 & 0x7F) << v8;
          if ((v13 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v14 = v9++ >= 9;
          if (v14)
          {
            v10 = 0;
            v15 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v15 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v15 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 1)
        {
          v17 = 0;
          v18 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 12) |= 1u;
          while (1)
          {
            v20 = *v4;
            v21 = *(_QWORD *)&v3[v20];
            if (v21 == -1 || v21 >= *(_QWORD *)&v3[*v5])
              break;
            v22 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v21);
            *(_QWORD *)&v3[v20] = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              goto LABEL_30;
            v17 += 7;
            v14 = v18++ >= 9;
            if (v14)
            {
              LODWORD(v19) = 0;
              goto LABEL_32;
            }
          }
          v3[*v6] = 1;
LABEL_30:
          if (v3[*v6])
            LODWORD(v19) = 0;
LABEL_32:
          *(_DWORD *)(a1 + 8) = v19;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_35;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v23 = v3[*v6] == 0;
  }
  else
  {
LABEL_35:
    v23 = 0;
  }
  objc_sync_exit(v3);

  return v23;
}

void sub_189336930(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryLayoutUnitCuratedGuidesReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOPDPlaceSummaryLayoutUnitCuratedGuidesReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189336990(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryLayoutUnitDetourTimeReadAllFrom(uint64_t a1, void *a2)
{
  unsigned __int8 *v2;
  int *v3;
  int *v4;
  int *v5;
  int *v6;
  int v7;
  char v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v15;
  _BOOL8 v16;

  v2 = a2;
  objc_sync_enter(v2);
  if (v2)
  {
    v3 = (int *)MEMORY[0x1E0D82BF0];
    v4 = (int *)MEMORY[0x1E0D82BD8];
    v5 = (int *)MEMORY[0x1E0D82BC8];
    v6 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      v7 = v2[*v5];
      if (*(_QWORD *)&v2[*v3] >= *(_QWORD *)&v2[*v4])
        break;
      if (v2[*v5])
      {
        v7 = 1;
        break;
      }
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)&v2[v11];
        if (v12 == -1 || v12 >= *(_QWORD *)&v2[*v4])
          break;
        v13 = *(_BYTE *)(*(_QWORD *)&v2[*v6] + v12);
        *(_QWORD *)&v2[v11] = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_13;
        v8 += 7;
        if (v9++ >= 9)
        {
          LOBYTE(v10) = 0;
          v7 = v2[*v5];
          goto LABEL_15;
        }
      }
      v2[*v5] = 1;
LABEL_13:
      v7 = v2[*v5];
      if (v2[*v5])
        LOBYTE(v10) = 0;
LABEL_15:
      if (v7)
        v15 = 1;
      else
        v15 = (v10 & 7) == 4;
      if (v15)
        break;
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        goto LABEL_20;
    }
    v16 = v7 == 0;
  }
  else
  {
LABEL_20:
    v16 = 0;
  }
  objc_sync_exit(v2);

  return v16;
}

void sub_189336E0C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryLayoutUnitDetourTimeReadFrom(uint64_t a1, void *a2)
{
  id v2;
  uint64_t v3;
  _BOOL8 AllFrom;

  v2 = a2;
  v3 = objc_sync_enter(v2);
  AllFrom = GEOPDPlaceSummaryLayoutUnitDetourTimeReadAllFrom(v3, v2);
  objc_sync_exit(v2);

  return AllFrom;
}

void sub_189336E64(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryLayoutUnitDistanceReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  _BOOL8 v23;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          if (v12 == -1 || v12 >= *(_QWORD *)&v3[*v5])
            break;
          v13 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v12 + 1;
          v10 |= (unint64_t)(v13 & 0x7F) << v8;
          if ((v13 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v14 = v9++ >= 9;
          if (v14)
          {
            v10 = 0;
            v15 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v15 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v15 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 1)
        {
          v17 = 0;
          v18 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 16) |= 1u;
          while (1)
          {
            v20 = *v4;
            v21 = *(_QWORD *)&v3[v20];
            if (v21 == -1 || v21 >= *(_QWORD *)&v3[*v5])
              break;
            v22 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v21);
            *(_QWORD *)&v3[v20] = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              goto LABEL_30;
            v17 += 7;
            v14 = v18++ >= 9;
            if (v14)
            {
              v19 = 0;
              goto LABEL_32;
            }
          }
          v3[*v6] = 1;
LABEL_30:
          if (v3[*v6])
            v19 = 0;
LABEL_32:
          *(_QWORD *)(a1 + 8) = v19;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_35;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v23 = v3[*v6] == 0;
  }
  else
  {
LABEL_35:
    v23 = 0;
  }
  objc_sync_exit(v3);

  return v23;
}

void sub_1893373F4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryLayoutUnitDistanceReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOPDPlaceSummaryLayoutUnitDistanceReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189337454(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryLayoutUnitEVChargersNumberReadAllFrom(uint64_t a1, void *a2)
{
  unsigned __int8 *v2;
  int *v3;
  int *v4;
  int *v5;
  int *v6;
  int v7;
  char v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v15;
  _BOOL8 v16;

  v2 = a2;
  objc_sync_enter(v2);
  if (v2)
  {
    v3 = (int *)MEMORY[0x1E0D82BF0];
    v4 = (int *)MEMORY[0x1E0D82BD8];
    v5 = (int *)MEMORY[0x1E0D82BC8];
    v6 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      v7 = v2[*v5];
      if (*(_QWORD *)&v2[*v3] >= *(_QWORD *)&v2[*v4])
        break;
      if (v2[*v5])
      {
        v7 = 1;
        break;
      }
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)&v2[v11];
        if (v12 == -1 || v12 >= *(_QWORD *)&v2[*v4])
          break;
        v13 = *(_BYTE *)(*(_QWORD *)&v2[*v6] + v12);
        *(_QWORD *)&v2[v11] = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_13;
        v8 += 7;
        if (v9++ >= 9)
        {
          LOBYTE(v10) = 0;
          v7 = v2[*v5];
          goto LABEL_15;
        }
      }
      v2[*v5] = 1;
LABEL_13:
      v7 = v2[*v5];
      if (v2[*v5])
        LOBYTE(v10) = 0;
LABEL_15:
      if (v7)
        v15 = 1;
      else
        v15 = (v10 & 7) == 4;
      if (v15)
        break;
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        goto LABEL_20;
    }
    v16 = v7 == 0;
  }
  else
  {
LABEL_20:
    v16 = 0;
  }
  objc_sync_exit(v2);

  return v16;
}

void sub_1893378D0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryLayoutUnitEVChargersNumberReadFrom(uint64_t a1, void *a2)
{
  id v2;
  uint64_t v3;
  _BOOL8 AllFrom;

  v2 = a2;
  v3 = objc_sync_enter(v2);
  AllFrom = GEOPDPlaceSummaryLayoutUnitEVChargersNumberReadAllFrom(v3, v2);
  objc_sync_exit(v2);

  return AllFrom;
}

void sub_189337928(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryLayoutUnitFactoidReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  _BOOL8 v23;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          if (v12 == -1 || v12 >= *(_QWORD *)&v3[*v5])
            break;
          v13 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v12 + 1;
          v10 |= (unint64_t)(v13 & 0x7F) << v8;
          if ((v13 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v14 = v9++ >= 9;
          if (v14)
          {
            v10 = 0;
            v15 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v15 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v15 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 1)
        {
          v17 = 0;
          v18 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 12) |= 1u;
          while (1)
          {
            v20 = *v4;
            v21 = *(_QWORD *)&v3[v20];
            if (v21 == -1 || v21 >= *(_QWORD *)&v3[*v5])
              break;
            v22 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v21);
            *(_QWORD *)&v3[v20] = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              goto LABEL_30;
            v17 += 7;
            v14 = v18++ >= 9;
            if (v14)
            {
              LODWORD(v19) = 0;
              goto LABEL_32;
            }
          }
          v3[*v6] = 1;
LABEL_30:
          if (v3[*v6])
            LODWORD(v19) = 0;
LABEL_32:
          *(_DWORD *)(a1 + 8) = v19;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_35;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v23 = v3[*v6] == 0;
  }
  else
  {
LABEL_35:
    v23 = 0;
  }
  objc_sync_exit(v3);

  return v23;
}

void sub_189337EB8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryLayoutUnitFactoidReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOPDPlaceSummaryLayoutUnitFactoidReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189337F18(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryLayoutUnitHighlightExtraReadAllFrom(uint64_t a1, void *a2)
{
  unsigned __int8 *v2;
  int *v3;
  int *v4;
  int *v5;
  int *v6;
  int v7;
  char v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v15;
  _BOOL8 v16;

  v2 = a2;
  objc_sync_enter(v2);
  if (v2)
  {
    v3 = (int *)MEMORY[0x1E0D82BF0];
    v4 = (int *)MEMORY[0x1E0D82BD8];
    v5 = (int *)MEMORY[0x1E0D82BC8];
    v6 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      v7 = v2[*v5];
      if (*(_QWORD *)&v2[*v3] >= *(_QWORD *)&v2[*v4])
        break;
      if (v2[*v5])
      {
        v7 = 1;
        break;
      }
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)&v2[v11];
        if (v12 == -1 || v12 >= *(_QWORD *)&v2[*v4])
          break;
        v13 = *(_BYTE *)(*(_QWORD *)&v2[*v6] + v12);
        *(_QWORD *)&v2[v11] = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_13;
        v8 += 7;
        if (v9++ >= 9)
        {
          LOBYTE(v10) = 0;
          v7 = v2[*v5];
          goto LABEL_15;
        }
      }
      v2[*v5] = 1;
LABEL_13:
      v7 = v2[*v5];
      if (v2[*v5])
        LOBYTE(v10) = 0;
LABEL_15:
      if (v7)
        v15 = 1;
      else
        v15 = (v10 & 7) == 4;
      if (v15)
        break;
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        goto LABEL_20;
    }
    v16 = v7 == 0;
  }
  else
  {
LABEL_20:
    v16 = 0;
  }
  objc_sync_exit(v2);

  return v16;
}

void sub_189338394(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryLayoutUnitHighlightExtraReadFrom(uint64_t a1, void *a2)
{
  id v2;
  uint64_t v3;
  _BOOL8 AllFrom;

  v2 = a2;
  v3 = objc_sync_enter(v2);
  AllFrom = GEOPDPlaceSummaryLayoutUnitHighlightExtraReadAllFrom(v3, v2);
  objc_sync_exit(v2);

  return AllFrom;
}

void sub_1893383EC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryLayoutUnitHighlightMainReadAllFrom(uint64_t a1, void *a2)
{
  unsigned __int8 *v2;
  int *v3;
  int *v4;
  int *v5;
  int *v6;
  int v7;
  char v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v15;
  _BOOL8 v16;

  v2 = a2;
  objc_sync_enter(v2);
  if (v2)
  {
    v3 = (int *)MEMORY[0x1E0D82BF0];
    v4 = (int *)MEMORY[0x1E0D82BD8];
    v5 = (int *)MEMORY[0x1E0D82BC8];
    v6 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      v7 = v2[*v5];
      if (*(_QWORD *)&v2[*v3] >= *(_QWORD *)&v2[*v4])
        break;
      if (v2[*v5])
      {
        v7 = 1;
        break;
      }
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)&v2[v11];
        if (v12 == -1 || v12 >= *(_QWORD *)&v2[*v4])
          break;
        v13 = *(_BYTE *)(*(_QWORD *)&v2[*v6] + v12);
        *(_QWORD *)&v2[v11] = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_13;
        v8 += 7;
        if (v9++ >= 9)
        {
          LOBYTE(v10) = 0;
          v7 = v2[*v5];
          goto LABEL_15;
        }
      }
      v2[*v5] = 1;
LABEL_13:
      v7 = v2[*v5];
      if (v2[*v5])
        LOBYTE(v10) = 0;
LABEL_15:
      if (v7)
        v15 = 1;
      else
        v15 = (v10 & 7) == 4;
      if (v15)
        break;
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        goto LABEL_20;
    }
    v16 = v7 == 0;
  }
  else
  {
LABEL_20:
    v16 = 0;
  }
  objc_sync_exit(v2);

  return v16;
}

void sub_1893386D4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryLayoutUnitHighlightMainReadFrom(uint64_t a1, void *a2)
{
  id v2;
  uint64_t v3;
  _BOOL8 AllFrom;

  v2 = a2;
  v3 = objc_sync_enter(v2);
  AllFrom = GEOPDPlaceSummaryLayoutUnitHighlightMainReadAllFrom(v3, v2);
  objc_sync_exit(v2);

  return AllFrom;
}

void sub_18933872C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryLayoutUnitHikeRouteDurationReadAllFrom(uint64_t a1, void *a2)
{
  unsigned __int8 *v2;
  int *v3;
  int *v4;
  int *v5;
  int *v6;
  int v7;
  char v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v15;
  _BOOL8 v16;

  v2 = a2;
  objc_sync_enter(v2);
  if (v2)
  {
    v3 = (int *)MEMORY[0x1E0D82BF0];
    v4 = (int *)MEMORY[0x1E0D82BD8];
    v5 = (int *)MEMORY[0x1E0D82BC8];
    v6 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      v7 = v2[*v5];
      if (*(_QWORD *)&v2[*v3] >= *(_QWORD *)&v2[*v4])
        break;
      if (v2[*v5])
      {
        v7 = 1;
        break;
      }
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)&v2[v11];
        if (v12 == -1 || v12 >= *(_QWORD *)&v2[*v4])
          break;
        v13 = *(_BYTE *)(*(_QWORD *)&v2[*v6] + v12);
        *(_QWORD *)&v2[v11] = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_13;
        v8 += 7;
        if (v9++ >= 9)
        {
          LOBYTE(v10) = 0;
          v7 = v2[*v5];
          goto LABEL_15;
        }
      }
      v2[*v5] = 1;
LABEL_13:
      v7 = v2[*v5];
      if (v2[*v5])
        LOBYTE(v10) = 0;
LABEL_15:
      if (v7)
        v15 = 1;
      else
        v15 = (v10 & 7) == 4;
      if (v15)
        break;
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        goto LABEL_20;
    }
    v16 = v7 == 0;
  }
  else
  {
LABEL_20:
    v16 = 0;
  }
  objc_sync_exit(v2);

  return v16;
}

void sub_189338A14(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryLayoutUnitHikeRouteDurationReadFrom(uint64_t a1, void *a2)
{
  id v2;
  uint64_t v3;
  _BOOL8 AllFrom;

  v2 = a2;
  v3 = objc_sync_enter(v2);
  AllFrom = GEOPDPlaceSummaryLayoutUnitHikeRouteDurationReadAllFrom(v3, v2);
  objc_sync_exit(v2);

  return AllFrom;
}

void sub_189338A6C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryLayoutUnitHikeRouteFactoidElevationGainLossReadAllFrom(uint64_t a1, void *a2)
{
  unsigned __int8 *v2;
  int *v3;
  int *v4;
  int *v5;
  int *v6;
  int v7;
  char v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v15;
  _BOOL8 v16;

  v2 = a2;
  objc_sync_enter(v2);
  if (v2)
  {
    v3 = (int *)MEMORY[0x1E0D82BF0];
    v4 = (int *)MEMORY[0x1E0D82BD8];
    v5 = (int *)MEMORY[0x1E0D82BC8];
    v6 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      v7 = v2[*v5];
      if (*(_QWORD *)&v2[*v3] >= *(_QWORD *)&v2[*v4])
        break;
      if (v2[*v5])
      {
        v7 = 1;
        break;
      }
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)&v2[v11];
        if (v12 == -1 || v12 >= *(_QWORD *)&v2[*v4])
          break;
        v13 = *(_BYTE *)(*(_QWORD *)&v2[*v6] + v12);
        *(_QWORD *)&v2[v11] = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_13;
        v8 += 7;
        if (v9++ >= 9)
        {
          LOBYTE(v10) = 0;
          v7 = v2[*v5];
          goto LABEL_15;
        }
      }
      v2[*v5] = 1;
LABEL_13:
      v7 = v2[*v5];
      if (v2[*v5])
        LOBYTE(v10) = 0;
LABEL_15:
      if (v7)
        v15 = 1;
      else
        v15 = (v10 & 7) == 4;
      if (v15)
        break;
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        goto LABEL_20;
    }
    v16 = v7 == 0;
  }
  else
  {
LABEL_20:
    v16 = 0;
  }
  objc_sync_exit(v2);

  return v16;
}

void sub_189338D54(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryLayoutUnitHikeRouteFactoidElevationGainLossReadFrom(uint64_t a1, void *a2)
{
  id v2;
  uint64_t v3;
  _BOOL8 AllFrom;

  v2 = a2;
  v3 = objc_sync_enter(v2);
  AllFrom = GEOPDPlaceSummaryLayoutUnitHikeRouteFactoidElevationGainLossReadAllFrom(v3, v2);
  objc_sync_exit(v2);

  return AllFrom;
}

void sub_189338DAC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryLayoutUnitHikeRouteLengthReadAllFrom(uint64_t a1, void *a2)
{
  unsigned __int8 *v2;
  int *v3;
  int *v4;
  int *v5;
  int *v6;
  int v7;
  char v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v15;
  _BOOL8 v16;

  v2 = a2;
  objc_sync_enter(v2);
  if (v2)
  {
    v3 = (int *)MEMORY[0x1E0D82BF0];
    v4 = (int *)MEMORY[0x1E0D82BD8];
    v5 = (int *)MEMORY[0x1E0D82BC8];
    v6 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      v7 = v2[*v5];
      if (*(_QWORD *)&v2[*v3] >= *(_QWORD *)&v2[*v4])
        break;
      if (v2[*v5])
      {
        v7 = 1;
        break;
      }
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)&v2[v11];
        if (v12 == -1 || v12 >= *(_QWORD *)&v2[*v4])
          break;
        v13 = *(_BYTE *)(*(_QWORD *)&v2[*v6] + v12);
        *(_QWORD *)&v2[v11] = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_13;
        v8 += 7;
        if (v9++ >= 9)
        {
          LOBYTE(v10) = 0;
          v7 = v2[*v5];
          goto LABEL_15;
        }
      }
      v2[*v5] = 1;
LABEL_13:
      v7 = v2[*v5];
      if (v2[*v5])
        LOBYTE(v10) = 0;
LABEL_15:
      if (v7)
        v15 = 1;
      else
        v15 = (v10 & 7) == 4;
      if (v15)
        break;
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        goto LABEL_20;
    }
    v16 = v7 == 0;
  }
  else
  {
LABEL_20:
    v16 = 0;
  }
  objc_sync_exit(v2);

  return v16;
}

void sub_189339094(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryLayoutUnitHikeRouteLengthReadFrom(uint64_t a1, void *a2)
{
  id v2;
  uint64_t v3;
  _BOOL8 AllFrom;

  v2 = a2;
  v3 = objc_sync_enter(v2);
  AllFrom = GEOPDPlaceSummaryLayoutUnitHikeRouteLengthReadAllFrom(v3, v2);
  objc_sync_exit(v2);

  return AllFrom;
}

void sub_1893390EC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryLayoutUnitHikeRouteTypeReadAllFrom(uint64_t a1, void *a2)
{
  unsigned __int8 *v2;
  int *v3;
  int *v4;
  int *v5;
  int *v6;
  int v7;
  char v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v15;
  _BOOL8 v16;

  v2 = a2;
  objc_sync_enter(v2);
  if (v2)
  {
    v3 = (int *)MEMORY[0x1E0D82BF0];
    v4 = (int *)MEMORY[0x1E0D82BD8];
    v5 = (int *)MEMORY[0x1E0D82BC8];
    v6 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      v7 = v2[*v5];
      if (*(_QWORD *)&v2[*v3] >= *(_QWORD *)&v2[*v4])
        break;
      if (v2[*v5])
      {
        v7 = 1;
        break;
      }
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)&v2[v11];
        if (v12 == -1 || v12 >= *(_QWORD *)&v2[*v4])
          break;
        v13 = *(_BYTE *)(*(_QWORD *)&v2[*v6] + v12);
        *(_QWORD *)&v2[v11] = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_13;
        v8 += 7;
        if (v9++ >= 9)
        {
          LOBYTE(v10) = 0;
          v7 = v2[*v5];
          goto LABEL_15;
        }
      }
      v2[*v5] = 1;
LABEL_13:
      v7 = v2[*v5];
      if (v2[*v5])
        LOBYTE(v10) = 0;
LABEL_15:
      if (v7)
        v15 = 1;
      else
        v15 = (v10 & 7) == 4;
      if (v15)
        break;
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        goto LABEL_20;
    }
    v16 = v7 == 0;
  }
  else
  {
LABEL_20:
    v16 = 0;
  }
  objc_sync_exit(v2);

  return v16;
}

void sub_1893393D4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryLayoutUnitHikeRouteTypeReadFrom(uint64_t a1, void *a2)
{
  id v2;
  uint64_t v3;
  _BOOL8 AllFrom;

  v2 = a2;
  v3 = objc_sync_enter(v2);
  AllFrom = GEOPDPlaceSummaryLayoutUnitHikeRouteTypeReadAllFrom(v3, v2);
  objc_sync_exit(v2);

  return AllFrom;
}

void sub_18933942C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryLayoutUnitHikingDifficultyReadAllFrom(uint64_t a1, void *a2)
{
  unsigned __int8 *v2;
  int *v3;
  int *v4;
  int *v5;
  int *v6;
  int v7;
  char v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v15;
  _BOOL8 v16;

  v2 = a2;
  objc_sync_enter(v2);
  if (v2)
  {
    v3 = (int *)MEMORY[0x1E0D82BF0];
    v4 = (int *)MEMORY[0x1E0D82BD8];
    v5 = (int *)MEMORY[0x1E0D82BC8];
    v6 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      v7 = v2[*v5];
      if (*(_QWORD *)&v2[*v3] >= *(_QWORD *)&v2[*v4])
        break;
      if (v2[*v5])
      {
        v7 = 1;
        break;
      }
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)&v2[v11];
        if (v12 == -1 || v12 >= *(_QWORD *)&v2[*v4])
          break;
        v13 = *(_BYTE *)(*(_QWORD *)&v2[*v6] + v12);
        *(_QWORD *)&v2[v11] = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_13;
        v8 += 7;
        if (v9++ >= 9)
        {
          LOBYTE(v10) = 0;
          v7 = v2[*v5];
          goto LABEL_15;
        }
      }
      v2[*v5] = 1;
LABEL_13:
      v7 = v2[*v5];
      if (v2[*v5])
        LOBYTE(v10) = 0;
LABEL_15:
      if (v7)
        v15 = 1;
      else
        v15 = (v10 & 7) == 4;
      if (v15)
        break;
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        goto LABEL_20;
    }
    v16 = v7 == 0;
  }
  else
  {
LABEL_20:
    v16 = 0;
  }
  objc_sync_exit(v2);

  return v16;
}

void sub_189339714(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryLayoutUnitHikingDifficultyReadFrom(uint64_t a1, void *a2)
{
  id v2;
  uint64_t v3;
  _BOOL8 AllFrom;

  v2 = a2;
  v3 = objc_sync_enter(v2);
  AllFrom = GEOPDPlaceSummaryLayoutUnitHikingDifficultyReadAllFrom(v3, v2);
  objc_sync_exit(v2);

  return AllFrom;
}

void sub_18933976C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryLayoutUnitHikingTrailLengthReadAllFrom(uint64_t a1, void *a2)
{
  unsigned __int8 *v2;
  int *v3;
  int *v4;
  int *v5;
  int *v6;
  int v7;
  char v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v15;
  _BOOL8 v16;

  v2 = a2;
  objc_sync_enter(v2);
  if (v2)
  {
    v3 = (int *)MEMORY[0x1E0D82BF0];
    v4 = (int *)MEMORY[0x1E0D82BD8];
    v5 = (int *)MEMORY[0x1E0D82BC8];
    v6 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      v7 = v2[*v5];
      if (*(_QWORD *)&v2[*v3] >= *(_QWORD *)&v2[*v4])
        break;
      if (v2[*v5])
      {
        v7 = 1;
        break;
      }
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)&v2[v11];
        if (v12 == -1 || v12 >= *(_QWORD *)&v2[*v4])
          break;
        v13 = *(_BYTE *)(*(_QWORD *)&v2[*v6] + v12);
        *(_QWORD *)&v2[v11] = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_13;
        v8 += 7;
        if (v9++ >= 9)
        {
          LOBYTE(v10) = 0;
          v7 = v2[*v5];
          goto LABEL_15;
        }
      }
      v2[*v5] = 1;
LABEL_13:
      v7 = v2[*v5];
      if (v2[*v5])
        LOBYTE(v10) = 0;
LABEL_15:
      if (v7)
        v15 = 1;
      else
        v15 = (v10 & 7) == 4;
      if (v15)
        break;
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        goto LABEL_20;
    }
    v16 = v7 == 0;
  }
  else
  {
LABEL_20:
    v16 = 0;
  }
  objc_sync_exit(v2);

  return v16;
}

void sub_189339A54(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryLayoutUnitHikingTrailLengthReadFrom(uint64_t a1, void *a2)
{
  id v2;
  uint64_t v3;
  _BOOL8 AllFrom;

  v2 = a2;
  v3 = objc_sync_enter(v2);
  AllFrom = GEOPDPlaceSummaryLayoutUnitHikingTrailLengthReadAllFrom(v3, v2);
  objc_sync_exit(v2);

  return AllFrom;
}

void sub_189339AAC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryLayoutUnitHoursReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  char v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  char v30;
  unsigned int v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  _BOOL8 v36;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          if (v12 == -1 || v12 >= *(_QWORD *)&v3[*v5])
            break;
          v13 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v12 + 1;
          v10 |= (unint64_t)(v13 & 0x7F) << v8;
          if ((v13 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v14 = v9++ >= 9;
          if (v14)
          {
            v10 = 0;
            v15 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v15 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        v16 = v10 & 7;
        if (v15 || v16 == 4)
          break;
        if ((v10 >> 3) == 2)
        {
          if (v16 == 2)
          {
            if (!PBReaderPlaceMark())
              goto LABEL_59;
            while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5] && !v3[*v6])
            {
              v24 = 0;
              v25 = 0;
              v26 = 0;
              while (1)
              {
                v27 = *v4;
                v28 = *(_QWORD *)&v3[v27];
                if (v28 == -1 || v28 >= *(_QWORD *)&v3[*v5])
                  break;
                v29 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v28);
                *(_QWORD *)&v3[v27] = v28 + 1;
                v26 |= (unint64_t)(v29 & 0x7F) << v24;
                if (v29 < 0)
                {
                  v24 += 7;
                  v14 = v25++ >= 9;
                  if (!v14)
                    continue;
                }
                goto LABEL_40;
              }
              v3[*v6] = 1;
LABEL_40:
              PBRepeatedInt32Add();
            }
            PBReaderRecallMark();
          }
          else
          {
            v30 = 0;
            v31 = 0;
            v32 = 0;
            while (1)
            {
              v33 = *v4;
              v34 = *(_QWORD *)&v3[v33];
              if (v34 == -1 || v34 >= *(_QWORD *)&v3[*v5])
                break;
              v35 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v34);
              *(_QWORD *)&v3[v33] = v34 + 1;
              v32 |= (unint64_t)(v35 & 0x7F) << v30;
              if (v35 < 0)
              {
                v30 += 7;
                v14 = v31++ >= 9;
                if (!v14)
                  continue;
              }
              goto LABEL_56;
            }
            v3[*v6] = 1;
LABEL_56:
            PBRepeatedInt32Add();
          }
        }
        else if ((v10 >> 3) == 1)
        {
          v18 = 0;
          v19 = 0;
          v20 = 0;
          *(_BYTE *)(a1 + 36) |= 1u;
          while (1)
          {
            v21 = *v4;
            v22 = *(_QWORD *)&v3[v21];
            if (v22 == -1 || v22 >= *(_QWORD *)&v3[*v5])
              break;
            v23 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v22);
            *(_QWORD *)&v3[v21] = v22 + 1;
            v20 |= (unint64_t)(v23 & 0x7F) << v18;
            if ((v23 & 0x80) == 0)
              goto LABEL_44;
            v18 += 7;
            v14 = v19++ >= 9;
            if (v14)
            {
              LODWORD(v20) = 0;
              goto LABEL_46;
            }
          }
          v3[*v6] = 1;
LABEL_44:
          if (v3[*v6])
            LODWORD(v20) = 0;
LABEL_46:
          *(_DWORD *)(a1 + 32) = v20;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_59;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v36 = v3[*v6] == 0;
  }
  else
  {
LABEL_59:
    v36 = 0;
  }
  objc_sync_exit(v3);

  return v36;
}

void sub_18933A93C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryLayoutUnitHoursReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOPDPlaceSummaryLayoutUnitHoursReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18933A9A0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryLayoutUnitInUserLibraryReadAllFrom(uint64_t a1, void *a2)
{
  unsigned __int8 *v2;
  int *v3;
  int *v4;
  int *v5;
  int *v6;
  int v7;
  char v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v15;
  _BOOL8 v16;

  v2 = a2;
  objc_sync_enter(v2);
  if (v2)
  {
    v3 = (int *)MEMORY[0x1E0D82BF0];
    v4 = (int *)MEMORY[0x1E0D82BD8];
    v5 = (int *)MEMORY[0x1E0D82BC8];
    v6 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      v7 = v2[*v5];
      if (*(_QWORD *)&v2[*v3] >= *(_QWORD *)&v2[*v4])
        break;
      if (v2[*v5])
      {
        v7 = 1;
        break;
      }
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)&v2[v11];
        if (v12 == -1 || v12 >= *(_QWORD *)&v2[*v4])
          break;
        v13 = *(_BYTE *)(*(_QWORD *)&v2[*v6] + v12);
        *(_QWORD *)&v2[v11] = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_13;
        v8 += 7;
        if (v9++ >= 9)
        {
          LOBYTE(v10) = 0;
          v7 = v2[*v5];
          goto LABEL_15;
        }
      }
      v2[*v5] = 1;
LABEL_13:
      v7 = v2[*v5];
      if (v2[*v5])
        LOBYTE(v10) = 0;
LABEL_15:
      if (v7)
        v15 = 1;
      else
        v15 = (v10 & 7) == 4;
      if (v15)
        break;
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        goto LABEL_20;
    }
    v16 = v7 == 0;
  }
  else
  {
LABEL_20:
    v16 = 0;
  }
  objc_sync_exit(v2);

  return v16;
}

void sub_18933AF5C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryLayoutUnitInUserLibraryReadFrom(uint64_t a1, void *a2)
{
  id v2;
  uint64_t v3;
  _BOOL8 AllFrom;

  v2 = a2;
  v3 = objc_sync_enter(v2);
  AllFrom = GEOPDPlaceSummaryLayoutUnitInUserLibraryReadAllFrom(v3, v2);
  objc_sync_exit(v2);

  return AllFrom;
}

void sub_18933AFB4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryLayoutUnitNameReadAllFrom(uint64_t a1, void *a2)
{
  unsigned __int8 *v2;
  int *v3;
  int *v4;
  int *v5;
  int *v6;
  int v7;
  char v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v15;
  _BOOL8 v16;

  v2 = a2;
  objc_sync_enter(v2);
  if (v2)
  {
    v3 = (int *)MEMORY[0x1E0D82BF0];
    v4 = (int *)MEMORY[0x1E0D82BD8];
    v5 = (int *)MEMORY[0x1E0D82BC8];
    v6 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      v7 = v2[*v5];
      if (*(_QWORD *)&v2[*v3] >= *(_QWORD *)&v2[*v4])
        break;
      if (v2[*v5])
      {
        v7 = 1;
        break;
      }
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)&v2[v11];
        if (v12 == -1 || v12 >= *(_QWORD *)&v2[*v4])
          break;
        v13 = *(_BYTE *)(*(_QWORD *)&v2[*v6] + v12);
        *(_QWORD *)&v2[v11] = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_13;
        v8 += 7;
        if (v9++ >= 9)
        {
          LOBYTE(v10) = 0;
          v7 = v2[*v5];
          goto LABEL_15;
        }
      }
      v2[*v5] = 1;
LABEL_13:
      v7 = v2[*v5];
      if (v2[*v5])
        LOBYTE(v10) = 0;
LABEL_15:
      if (v7)
        v15 = 1;
      else
        v15 = (v10 & 7) == 4;
      if (v15)
        break;
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        goto LABEL_20;
    }
    v16 = v7 == 0;
  }
  else
  {
LABEL_20:
    v16 = 0;
  }
  objc_sync_exit(v2);

  return v16;
}

void sub_18933B29C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryLayoutUnitNameReadFrom(uint64_t a1, void *a2)
{
  id v2;
  uint64_t v3;
  _BOOL8 AllFrom;

  v2 = a2;
  v3 = objc_sync_enter(v2);
  AllFrom = GEOPDPlaceSummaryLayoutUnitNameReadAllFrom(v3, v2);
  objc_sync_exit(v2);

  return AllFrom;
}

void sub_18933B2F4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryLayoutUnitNumPlacesInGuideReadAllFrom(uint64_t a1, void *a2)
{
  unsigned __int8 *v2;
  int *v3;
  int *v4;
  int *v5;
  int *v6;
  int v7;
  char v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v15;
  _BOOL8 v16;

  v2 = a2;
  objc_sync_enter(v2);
  if (v2)
  {
    v3 = (int *)MEMORY[0x1E0D82BF0];
    v4 = (int *)MEMORY[0x1E0D82BD8];
    v5 = (int *)MEMORY[0x1E0D82BC8];
    v6 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      v7 = v2[*v5];
      if (*(_QWORD *)&v2[*v3] >= *(_QWORD *)&v2[*v4])
        break;
      if (v2[*v5])
      {
        v7 = 1;
        break;
      }
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)&v2[v11];
        if (v12 == -1 || v12 >= *(_QWORD *)&v2[*v4])
          break;
        v13 = *(_BYTE *)(*(_QWORD *)&v2[*v6] + v12);
        *(_QWORD *)&v2[v11] = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_13;
        v8 += 7;
        if (v9++ >= 9)
        {
          LOBYTE(v10) = 0;
          v7 = v2[*v5];
          goto LABEL_15;
        }
      }
      v2[*v5] = 1;
LABEL_13:
      v7 = v2[*v5];
      if (v2[*v5])
        LOBYTE(v10) = 0;
LABEL_15:
      if (v7)
        v15 = 1;
      else
        v15 = (v10 & 7) == 4;
      if (v15)
        break;
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        goto LABEL_20;
    }
    v16 = v7 == 0;
  }
  else
  {
LABEL_20:
    v16 = 0;
  }
  objc_sync_exit(v2);

  return v16;
}

void sub_18933B5DC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryLayoutUnitNumPlacesInGuideReadFrom(uint64_t a1, void *a2)
{
  id v2;
  uint64_t v3;
  _BOOL8 AllFrom;

  v2 = a2;
  v3 = objc_sync_enter(v2);
  AllFrom = GEOPDPlaceSummaryLayoutUnitNumPlacesInGuideReadAllFrom(v3, v2);
  objc_sync_exit(v2);

  return AllFrom;
}

void sub_18933B634(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryLayoutUnitPhotoCarouselReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  _BOOL8 v23;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          if (v12 == -1 || v12 >= *(_QWORD *)&v3[*v5])
            break;
          v13 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v12 + 1;
          v10 |= (unint64_t)(v13 & 0x7F) << v8;
          if ((v13 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v14 = v9++ >= 9;
          if (v14)
          {
            v10 = 0;
            v15 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v15 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v15 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 1)
        {
          v17 = 0;
          v18 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 12) |= 1u;
          while (1)
          {
            v20 = *v4;
            v21 = *(_QWORD *)&v3[v20];
            if (v21 == -1 || v21 >= *(_QWORD *)&v3[*v5])
              break;
            v22 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v21);
            *(_QWORD *)&v3[v20] = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              goto LABEL_30;
            v17 += 7;
            v14 = v18++ >= 9;
            if (v14)
            {
              LODWORD(v19) = 0;
              goto LABEL_32;
            }
          }
          v3[*v6] = 1;
LABEL_30:
          if (v3[*v6])
            LODWORD(v19) = 0;
LABEL_32:
          *(_DWORD *)(a1 + 8) = v19;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_35;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v23 = v3[*v6] == 0;
  }
  else
  {
LABEL_35:
    v23 = 0;
  }
  objc_sync_exit(v3);

  return v23;
}

void sub_18933BBC4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryLayoutUnitPhotoCarouselReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOPDPlaceSummaryLayoutUnitPhotoCarouselReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18933BC24(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryLayoutUnitPriceReadAllFrom(uint64_t a1, void *a2)
{
  unsigned __int8 *v2;
  int *v3;
  int *v4;
  int *v5;
  int *v6;
  int v7;
  char v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v15;
  _BOOL8 v16;

  v2 = a2;
  objc_sync_enter(v2);
  if (v2)
  {
    v3 = (int *)MEMORY[0x1E0D82BF0];
    v4 = (int *)MEMORY[0x1E0D82BD8];
    v5 = (int *)MEMORY[0x1E0D82BC8];
    v6 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      v7 = v2[*v5];
      if (*(_QWORD *)&v2[*v3] >= *(_QWORD *)&v2[*v4])
        break;
      if (v2[*v5])
      {
        v7 = 1;
        break;
      }
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)&v2[v11];
        if (v12 == -1 || v12 >= *(_QWORD *)&v2[*v4])
          break;
        v13 = *(_BYTE *)(*(_QWORD *)&v2[*v6] + v12);
        *(_QWORD *)&v2[v11] = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_13;
        v8 += 7;
        if (v9++ >= 9)
        {
          LOBYTE(v10) = 0;
          v7 = v2[*v5];
          goto LABEL_15;
        }
      }
      v2[*v5] = 1;
LABEL_13:
      v7 = v2[*v5];
      if (v2[*v5])
        LOBYTE(v10) = 0;
LABEL_15:
      if (v7)
        v15 = 1;
      else
        v15 = (v10 & 7) == 4;
      if (v15)
        break;
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        goto LABEL_20;
    }
    v16 = v7 == 0;
  }
  else
  {
LABEL_20:
    v16 = 0;
  }
  objc_sync_exit(v2);

  return v16;
}

void sub_18933C0A0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryLayoutUnitPriceReadFrom(uint64_t a1, void *a2)
{
  id v2;
  uint64_t v3;
  _BOOL8 AllFrom;

  v2 = a2;
  v3 = objc_sync_enter(v2);
  AllFrom = GEOPDPlaceSummaryLayoutUnitPriceReadAllFrom(v3, v2);
  objc_sync_exit(v2);

  return AllFrom;
}

void sub_18933C0F8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryLayoutUnitPublisherDescriptionReadAllFrom(uint64_t a1, void *a2)
{
  unsigned __int8 *v2;
  int *v3;
  int *v4;
  int *v5;
  int *v6;
  int v7;
  char v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v15;
  _BOOL8 v16;

  v2 = a2;
  objc_sync_enter(v2);
  if (v2)
  {
    v3 = (int *)MEMORY[0x1E0D82BF0];
    v4 = (int *)MEMORY[0x1E0D82BD8];
    v5 = (int *)MEMORY[0x1E0D82BC8];
    v6 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      v7 = v2[*v5];
      if (*(_QWORD *)&v2[*v3] >= *(_QWORD *)&v2[*v4])
        break;
      if (v2[*v5])
      {
        v7 = 1;
        break;
      }
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)&v2[v11];
        if (v12 == -1 || v12 >= *(_QWORD *)&v2[*v4])
          break;
        v13 = *(_BYTE *)(*(_QWORD *)&v2[*v6] + v12);
        *(_QWORD *)&v2[v11] = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_13;
        v8 += 7;
        if (v9++ >= 9)
        {
          LOBYTE(v10) = 0;
          v7 = v2[*v5];
          goto LABEL_15;
        }
      }
      v2[*v5] = 1;
LABEL_13:
      v7 = v2[*v5];
      if (v2[*v5])
        LOBYTE(v10) = 0;
LABEL_15:
      if (v7)
        v15 = 1;
      else
        v15 = (v10 & 7) == 4;
      if (v15)
        break;
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        goto LABEL_20;
    }
    v16 = v7 == 0;
  }
  else
  {
LABEL_20:
    v16 = 0;
  }
  objc_sync_exit(v2);

  return v16;
}

void sub_18933C3E0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryLayoutUnitPublisherDescriptionReadFrom(uint64_t a1, void *a2)
{
  id v2;
  uint64_t v3;
  _BOOL8 AllFrom;

  v2 = a2;
  v3 = objc_sync_enter(v2);
  AllFrom = GEOPDPlaceSummaryLayoutUnitPublisherDescriptionReadAllFrom(v3, v2);
  objc_sync_exit(v2);

  return AllFrom;
}

void sub_18933C438(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryLayoutUnitPublisherNameForGuideReadAllFrom(uint64_t a1, void *a2)
{
  unsigned __int8 *v2;
  int *v3;
  int *v4;
  int *v5;
  int *v6;
  int v7;
  char v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v15;
  _BOOL8 v16;

  v2 = a2;
  objc_sync_enter(v2);
  if (v2)
  {
    v3 = (int *)MEMORY[0x1E0D82BF0];
    v4 = (int *)MEMORY[0x1E0D82BD8];
    v5 = (int *)MEMORY[0x1E0D82BC8];
    v6 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      v7 = v2[*v5];
      if (*(_QWORD *)&v2[*v3] >= *(_QWORD *)&v2[*v4])
        break;
      if (v2[*v5])
      {
        v7 = 1;
        break;
      }
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)&v2[v11];
        if (v12 == -1 || v12 >= *(_QWORD *)&v2[*v4])
          break;
        v13 = *(_BYTE *)(*(_QWORD *)&v2[*v6] + v12);
        *(_QWORD *)&v2[v11] = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_13;
        v8 += 7;
        if (v9++ >= 9)
        {
          LOBYTE(v10) = 0;
          v7 = v2[*v5];
          goto LABEL_15;
        }
      }
      v2[*v5] = 1;
LABEL_13:
      v7 = v2[*v5];
      if (v2[*v5])
        LOBYTE(v10) = 0;
LABEL_15:
      if (v7)
        v15 = 1;
      else
        v15 = (v10 & 7) == 4;
      if (v15)
        break;
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        goto LABEL_20;
    }
    v16 = v7 == 0;
  }
  else
  {
LABEL_20:
    v16 = 0;
  }
  objc_sync_exit(v2);

  return v16;
}

void sub_18933C720(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryLayoutUnitPublisherNameForGuideReadFrom(uint64_t a1, void *a2)
{
  id v2;
  uint64_t v3;
  _BOOL8 AllFrom;

  v2 = a2;
  v3 = objc_sync_enter(v2);
  AllFrom = GEOPDPlaceSummaryLayoutUnitPublisherNameForGuideReadAllFrom(v3, v2);
  objc_sync_exit(v2);

  return AllFrom;
}

void sub_18933C778(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryLayoutUnitRatingsReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  _BOOL8 v23;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          if (v12 == -1 || v12 >= *(_QWORD *)&v3[*v5])
            break;
          v13 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v12 + 1;
          v10 |= (unint64_t)(v13 & 0x7F) << v8;
          if ((v13 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v14 = v9++ >= 9;
          if (v14)
          {
            v10 = 0;
            v15 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v15 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v15 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 1)
        {
          v17 = 0;
          v18 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 12) |= 1u;
          while (1)
          {
            v20 = *v4;
            v21 = *(_QWORD *)&v3[v20];
            if (v21 == -1 || v21 >= *(_QWORD *)&v3[*v5])
              break;
            v22 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v21);
            *(_QWORD *)&v3[v20] = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              goto LABEL_30;
            v17 += 7;
            v14 = v18++ >= 9;
            if (v14)
            {
              v19 = 0;
              goto LABEL_32;
            }
          }
          v3[*v6] = 1;
LABEL_30:
          if (v3[*v6])
            v19 = 0;
LABEL_32:
          *(_BYTE *)(a1 + 8) = v19 != 0;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_35;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v23 = v3[*v6] == 0;
  }
  else
  {
LABEL_35:
    v23 = 0;
  }
  objc_sync_exit(v3);

  return v23;
}

void sub_18933CD10(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryLayoutUnitRatingsReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOPDPlaceSummaryLayoutUnitRatingsReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18933CD70(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryLayoutUnitRealTimeEVChargerAvailabilityReadAllFrom(uint64_t a1, void *a2)
{
  unsigned __int8 *v2;
  int *v3;
  int *v4;
  int *v5;
  int *v6;
  int v7;
  char v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v15;
  _BOOL8 v16;

  v2 = a2;
  objc_sync_enter(v2);
  if (v2)
  {
    v3 = (int *)MEMORY[0x1E0D82BF0];
    v4 = (int *)MEMORY[0x1E0D82BD8];
    v5 = (int *)MEMORY[0x1E0D82BC8];
    v6 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      v7 = v2[*v5];
      if (*(_QWORD *)&v2[*v3] >= *(_QWORD *)&v2[*v4])
        break;
      if (v2[*v5])
      {
        v7 = 1;
        break;
      }
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)&v2[v11];
        if (v12 == -1 || v12 >= *(_QWORD *)&v2[*v4])
          break;
        v13 = *(_BYTE *)(*(_QWORD *)&v2[*v6] + v12);
        *(_QWORD *)&v2[v11] = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_13;
        v8 += 7;
        if (v9++ >= 9)
        {
          LOBYTE(v10) = 0;
          v7 = v2[*v5];
          goto LABEL_15;
        }
      }
      v2[*v5] = 1;
LABEL_13:
      v7 = v2[*v5];
      if (v2[*v5])
        LOBYTE(v10) = 0;
LABEL_15:
      if (v7)
        v15 = 1;
      else
        v15 = (v10 & 7) == 4;
      if (v15)
        break;
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        goto LABEL_20;
    }
    v16 = v7 == 0;
  }
  else
  {
LABEL_20:
    v16 = 0;
  }
  objc_sync_exit(v2);

  return v16;
}

void sub_18933D1F4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryLayoutUnitRealTimeEVChargerAvailabilityReadFrom(uint64_t a1, void *a2)
{
  id v2;
  uint64_t v3;
  _BOOL8 AllFrom;

  v2 = a2;
  v3 = objc_sync_enter(v2);
  AllFrom = GEOPDPlaceSummaryLayoutUnitRealTimeEVChargerAvailabilityReadAllFrom(v3, v2);
  objc_sync_exit(v2);

  return AllFrom;
}

void sub_18933D24C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryLayoutUnitRecentReadAllFrom(uint64_t a1, void *a2)
{
  unsigned __int8 *v2;
  int *v3;
  int *v4;
  int *v5;
  int *v6;
  int v7;
  char v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v15;
  _BOOL8 v16;

  v2 = a2;
  objc_sync_enter(v2);
  if (v2)
  {
    v3 = (int *)MEMORY[0x1E0D82BF0];
    v4 = (int *)MEMORY[0x1E0D82BD8];
    v5 = (int *)MEMORY[0x1E0D82BC8];
    v6 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      v7 = v2[*v5];
      if (*(_QWORD *)&v2[*v3] >= *(_QWORD *)&v2[*v4])
        break;
      if (v2[*v5])
      {
        v7 = 1;
        break;
      }
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)&v2[v11];
        if (v12 == -1 || v12 >= *(_QWORD *)&v2[*v4])
          break;
        v13 = *(_BYTE *)(*(_QWORD *)&v2[*v6] + v12);
        *(_QWORD *)&v2[v11] = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_13;
        v8 += 7;
        if (v9++ >= 9)
        {
          LOBYTE(v10) = 0;
          v7 = v2[*v5];
          goto LABEL_15;
        }
      }
      v2[*v5] = 1;
LABEL_13:
      v7 = v2[*v5];
      if (v2[*v5])
        LOBYTE(v10) = 0;
LABEL_15:
      if (v7)
        v15 = 1;
      else
        v15 = (v10 & 7) == 4;
      if (v15)
        break;
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        goto LABEL_20;
    }
    v16 = v7 == 0;
  }
  else
  {
LABEL_20:
    v16 = 0;
  }
  objc_sync_exit(v2);

  return v16;
}

void sub_18933D534(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryLayoutUnitRecentReadFrom(uint64_t a1, void *a2)
{
  id v2;
  uint64_t v3;
  _BOOL8 AllFrom;

  v2 = a2;
  v3 = objc_sync_enter(v2);
  AllFrom = GEOPDPlaceSummaryLayoutUnitRecentReadAllFrom(v3, v2);
  objc_sync_exit(v2);

  return AllFrom;
}

void sub_18933D58C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryLayoutUnitSecondaryNameReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  uint64_t v17;
  void *v18;
  _BOOL8 v19;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          if (v12 == -1 || v12 >= *(_QWORD *)&v3[*v5])
            break;
          v13 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v12 + 1;
          v10 |= (unint64_t)(v13 & 0x7F) << v8;
          if ((v13 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v15 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v15 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v15 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 1)
        {
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = v17;

        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_24;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v19 = v3[*v6] == 0;
  }
  else
  {
LABEL_24:
    v19 = 0;
  }
  objc_sync_exit(v3);

  return v19;
}

void sub_18933DA54(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryLayoutUnitSecondaryNameReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOPDPlaceSummaryLayoutUnitSecondaryNameReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18933DAB4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryLayoutUnitServerOverrideReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  _BOOL8 v23;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          if (v12 == -1 || v12 >= *(_QWORD *)&v3[*v5])
            break;
          v13 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v12 + 1;
          v10 |= (unint64_t)(v13 & 0x7F) << v8;
          if ((v13 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v14 = v9++ >= 9;
          if (v14)
          {
            v10 = 0;
            v15 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v15 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v15 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 1)
        {
          v17 = 0;
          v18 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 12) |= 1u;
          while (1)
          {
            v20 = *v4;
            v21 = *(_QWORD *)&v3[v20];
            if (v21 == -1 || v21 >= *(_QWORD *)&v3[*v5])
              break;
            v22 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v21);
            *(_QWORD *)&v3[v20] = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              goto LABEL_30;
            v17 += 7;
            v14 = v18++ >= 9;
            if (v14)
            {
              LODWORD(v19) = 0;
              goto LABEL_32;
            }
          }
          v3[*v6] = 1;
LABEL_30:
          if (v3[*v6])
            LODWORD(v19) = 0;
LABEL_32:
          *(_DWORD *)(a1 + 8) = v19;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_35;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v23 = v3[*v6] == 0;
  }
  else
  {
LABEL_35:
    v23 = 0;
  }
  objc_sync_exit(v3);

  return v23;
}

void sub_18933E190(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryLayoutUnitServerOverrideReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOPDPlaceSummaryLayoutUnitServerOverrideReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18933E1F0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18933E5CC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDPlaceSummaryLayoutUnitStringReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  char v15;
  int *v16;
  int *v17;
  int *v18;
  int *v19;
  char v20;
  unsigned int v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  BOOL v26;
  int v27;
  unint64_t v29;
  BOOL v30;
  int *v31;
  int v32;
  int v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  char v38;
  unsigned int v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  char v44;
  unsigned int v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  void *v50;
  char v51;
  __int16 v52;
  char v53;
  int v54;
  __int16 v55;
  void *v56;
  GEOPDPlaceSummaryFormat *v58;
  char v59;
  char v60;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 68);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 64));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 84)), (uint16x4_t)0xFFFCFFFEFFF9FFFBLL), (int8x8_t)0x1000100010001))+ ((*(_WORD *)(a1 + 84) >> 6) & 1)+ ((*(_WORD *)(a1 + 84) >> 3) & 1));
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v7])
    {
      case -3:
        v8 = 1;
        goto LABEL_6;
      case -2:
        v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v11 > 3;
        v15 = v10 | v14;
        if ((((v10 | v14) | v8) & 1) != 0)
          v16 = 0;
        else
          v16 = a3;
        v60 = (v16 == 0) | v15;
        v17 = (int *)MEMORY[0x1E0D82BF0];
        v18 = (int *)MEMORY[0x1E0D82BC8];
        v19 = (int *)MEMORY[0x1E0D82BB8];
        v59 = v10 | v14;
        break;
      default:
        ++v11;
LABEL_6:
        v12 = v9;
        v13 = v10;
LABEL_8:
        ++v7;
        v9 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v17) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v18))
      goto LABEL_100;
    v20 = 0;
    v21 = 0;
    v22 = 0;
    while (1)
    {
      v23 = *v17;
      v24 = *(_QWORD *)(v3 + v23);
      if (v24 == -1 || v24 >= *(_QWORD *)(v3 + *v6))
        break;
      v25 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v24);
      *(_QWORD *)(v3 + v23) = v24 + 1;
      v22 |= (unint64_t)(v25 & 0x7F) << v20;
      if ((v25 & 0x80) == 0)
        goto LABEL_23;
      v20 += 7;
      v26 = v21++ >= 9;
      if (v26)
      {
        v22 = 0;
        v27 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(_BYTE *)(v3 + *v18) = 1;
LABEL_23:
    v27 = *(unsigned __int8 *)(v3 + *v18);
    if (*(_BYTE *)(v3 + *v18))
      v22 = 0;
LABEL_25:
    if (v27 || (v22 & 7) == 4)
    {
LABEL_100:
      if ((v15 & 1) != 0)
      {
        v53 = 1;
        goto LABEL_113;
      }
      if (v16)
      {
        while (1)
        {
          v54 = *v16++;
          v55 = 128;
          switch(v54)
          {
            case 0:
              goto LABEL_114;
            case 1:
              goto LABEL_109;
            case 2:
              v55 = 32;
              goto LABEL_109;
            case 3:
              v55 = 4;
              goto LABEL_109;
            case 6:
              v55 = 16;
              goto LABEL_109;
            case 7:
              v55 = 64;
              goto LABEL_109;
            case 8:
              v55 = 8;
LABEL_109:
              *(_WORD *)(a1 + 84) |= v55;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_114;
    }
    v29 = v22 >> 3;
    v30 = v15;
    if ((v60 & 1) == 0)
    {
      v31 = v16;
      do
      {
        v33 = *v31++;
        v32 = v33;
        v30 = v33 != 0;
        if (v33)
          v34 = v32 == (_DWORD)v29;
        else
          v34 = 1;
      }
      while (!v34);
    }
    switch((int)v29)
    {
      case 1:
        if (!v30)
          goto LABEL_79;
        if ((*(_WORD *)(a1 + 84) & 0x80) == 0)
        {
          PBReaderReadString();
          v35 = objc_claimAutoreleasedReturnValue();
          v36 = 56;
          goto LABEL_72;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_112;
        v52 = *(_WORD *)(a1 + 84) << 8;
        goto LABEL_97;
      case 2:
        if (!v30)
          goto LABEL_79;
        if ((*(_WORD *)(a1 + 84) & 0x20) == 0)
        {
          PBReaderReadString();
          v35 = objc_claimAutoreleasedReturnValue();
          v36 = 40;
          goto LABEL_72;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_112;
        v52 = *(_WORD *)(a1 + 84) << 10;
        goto LABEL_97;
      case 3:
        if (!v30 || (*(_WORD *)(a1 + 84) & 4) != 0)
          goto LABEL_79;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_112;
        v58 = objc_alloc_init(GEOPDPlaceSummaryFormat);
        if (!GEOPDPlaceSummaryFormatReadAllFrom((uint64_t)v58, (void *)v3))
          goto LABEL_111;
        PBReaderRecallMark();
        -[GEOPDPlaceSummaryLayoutUnitString _addNoFlagsFormat:](a1, v58);
        goto LABEL_78;
      case 4:
        if ((v8 & 1) == 0)
          goto LABEL_79;
        v38 = 0;
        v39 = 0;
        v40 = 0;
        *(_WORD *)(a1 + 84) |= 1u;
        while (2)
        {
          v41 = *v17;
          v42 = *(_QWORD *)(v3 + v41);
          if (v42 == -1 || v42 >= *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v43 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v42);
            *(_QWORD *)(v3 + v41) = v42 + 1;
            v40 |= (unint64_t)(v43 & 0x7F) << v38;
            if (v43 < 0)
            {
              v38 += 7;
              v26 = v39++ >= 9;
              if (v26)
              {
                LODWORD(v40) = 0;
                goto LABEL_84;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          LODWORD(v40) = 0;
LABEL_84:
        *(_DWORD *)(a1 + 76) = v40;
        goto LABEL_99;
      case 5:
        if ((v8 & 1) == 0)
          goto LABEL_79;
        v44 = 0;
        v45 = 0;
        v46 = 0;
        *(_WORD *)(a1 + 84) |= 2u;
        while (2)
        {
          v47 = *v17;
          v48 = *(_QWORD *)(v3 + v47);
          if (v48 == -1 || v48 >= *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v49 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v48);
            *(_QWORD *)(v3 + v47) = v48 + 1;
            v46 |= (unint64_t)(v49 & 0x7F) << v44;
            if (v49 < 0)
            {
              v44 += 7;
              v26 = v45++ >= 9;
              if (v26)
              {
                v46 = 0;
                goto LABEL_88;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          v46 = 0;
LABEL_88:
        *(_BYTE *)(a1 + 80) = v46 != 0;
        goto LABEL_99;
      case 6:
        if (!v30)
          goto LABEL_79;
        if ((*(_WORD *)(a1 + 84) & 0x10) == 0)
        {
          PBReaderReadString();
          v35 = objc_claimAutoreleasedReturnValue();
          v36 = 32;
          goto LABEL_72;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_112;
        v52 = *(_WORD *)(a1 + 84) << 11;
        goto LABEL_97;
      case 7:
        if (!v30)
          goto LABEL_79;
        if ((*(_WORD *)(a1 + 84) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_112;
          v52 = *(_WORD *)(a1 + 84) << 9;
LABEL_97:
          v7 += v52 >> 15;
        }
        else
        {
          PBReaderReadString();
          v35 = objc_claimAutoreleasedReturnValue();
          v36 = 48;
LABEL_72:
          v50 = *(void **)(a1 + v36);
          *(_QWORD *)(a1 + v36) = v35;

          --v7;
        }
        goto LABEL_98;
      case 8:
        if (!v30 || (*(_WORD *)(a1 + 84) & 8) != 0)
        {
LABEL_79:
          v51 = PBReaderSkipValueWithTag();
          v18 = (int *)MEMORY[0x1E0D82BC8];
          v15 = v59;
          if ((v51 & 1) == 0)
          {
LABEL_110:
            v53 = 0;
            goto LABEL_113;
          }
LABEL_99:
          if (!(v15 & 1 | (v7 != 0)))
            goto LABEL_100;
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_112;
        v58 = objc_alloc_init(GEOStyleAttributes);
        if (GEOStyleAttributesReadAllFrom((uint64_t)v58, (void *)v3))
        {
          PBReaderRecallMark();
          -[GEOPDPlaceSummaryLayoutUnitString _addNoFlagsStyleAttributes:](a1, v58);
LABEL_78:

LABEL_98:
          v15 = v59;
          v18 = (int *)MEMORY[0x1E0D82BC8];
          goto LABEL_99;
        }
LABEL_111:

LABEL_112:
        v53 = 0;
        v15 = v59;
        v18 = (int *)MEMORY[0x1E0D82BC8];
LABEL_113:
        *(_WORD *)(a1 + 84) |= 0x80u;
        *(_WORD *)(a1 + 84) |= 0x20u;
        *(_WORD *)(a1 + 84) |= 4u;
        *(_WORD *)(a1 + 84) |= 0x10u;
        *(_WORD *)(a1 + 84) |= 0x40u;
        *(_WORD *)(a1 + 84) |= 8u;
        if ((v53 & 1) != 0)
        {
LABEL_114:
          v3 = *(_BYTE *)(v3 + *v18) == 0;
          if ((v15 & 1) != 0)
            goto LABEL_115;
        }
        else
        {
          v3 = 0;
          if ((v15 & 1) != 0)
          {
LABEL_115:
            v56 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = 0;

          }
        }
        return v3;
      default:
        v37 = PBReaderSkipValueWithTag();
        v18 = (int *)MEMORY[0x1E0D82BC8];
        v15 = v59;
        if (!v37)
          goto LABEL_110;
        goto LABEL_99;
    }
  }
}

void sub_18933EECC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18933F010(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18933F424(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18933F568(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18933F6AC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893403E4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDPlaceSummaryLayoutUnitStringCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  _BYTE v20[128];
  _BYTE v21[128];
  uint64_t v22;

  v22 = *MEMORY[0x1E0C80C00];
  v16 = 0u;
  v17 = 0u;
  v18 = 0u;
  v19 = 0u;
  v2 = *(id *)(a1 + 16);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v16, v21, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v17;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v17 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v16 + 1) + 8 * v6++), "readAll:", 1);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v16, v21, 16);
    }
    while (v4);
  }

  v14 = 0u;
  v15 = 0u;
  v12 = 0u;
  v13 = 0u;
  v7 = *(id *)(a1 + 24);
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v12, v20, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v13;
    do
    {
      v11 = 0;
      do
      {
        if (*(_QWORD *)v13 != v10)
          objc_enumerationMutation(v7);
        objc_msgSend(*(id *)(*((_QWORD *)&v12 + 1) + 8 * v11++), "readAll:", 1, (_QWORD)v12);
      }
      while (v9 != v11);
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v12, v20, 16);
    }
    while (v9);
  }

}

unint64_t GEOPDPlaceSummaryLayoutUnitStringReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 68))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDPlaceSummaryLayoutUnitStringReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 72));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 64) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 68) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDPlaceSummaryLayoutUnitStringReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDPlaceSummaryLayoutUnitStringReadAllFrom_initialTag;
  Specified = GEOPDPlaceSummaryLayoutUnitStringReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDPlaceSummaryLayoutUnitStringCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return Specified;
}

void sub_18934070C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDPlaceSummaryLayoutUnitStringReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOPDPlaceSummaryLayoutUnitStringReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18934076C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189340AD0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryLayoutUnitStringIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  v2 = (*(_WORD *)(a1 + 84) & 0x1FC) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return v2;
}

void sub_1893411D4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryLayoutUnitTransitShieldsReadAllFrom(uint64_t a1, void *a2)
{
  unsigned __int8 *v2;
  int *v3;
  int *v4;
  int *v5;
  int *v6;
  int v7;
  char v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v15;
  _BOOL8 v16;

  v2 = a2;
  objc_sync_enter(v2);
  if (v2)
  {
    v3 = (int *)MEMORY[0x1E0D82BF0];
    v4 = (int *)MEMORY[0x1E0D82BD8];
    v5 = (int *)MEMORY[0x1E0D82BC8];
    v6 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      v7 = v2[*v5];
      if (*(_QWORD *)&v2[*v3] >= *(_QWORD *)&v2[*v4])
        break;
      if (v2[*v5])
      {
        v7 = 1;
        break;
      }
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)&v2[v11];
        if (v12 == -1 || v12 >= *(_QWORD *)&v2[*v4])
          break;
        v13 = *(_BYTE *)(*(_QWORD *)&v2[*v6] + v12);
        *(_QWORD *)&v2[v11] = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_13;
        v8 += 7;
        if (v9++ >= 9)
        {
          LOBYTE(v10) = 0;
          v7 = v2[*v5];
          goto LABEL_15;
        }
      }
      v2[*v5] = 1;
LABEL_13:
      v7 = v2[*v5];
      if (v2[*v5])
        LOBYTE(v10) = 0;
LABEL_15:
      if (v7)
        v15 = 1;
      else
        v15 = (v10 & 7) == 4;
      if (v15)
        break;
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        goto LABEL_20;
    }
    v16 = v7 == 0;
  }
  else
  {
LABEL_20:
    v16 = 0;
  }
  objc_sync_exit(v2);

  return v16;
}

void sub_18934196C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryLayoutUnitTransitShieldsReadFrom(uint64_t a1, void *a2)
{
  id v2;
  uint64_t v3;
  _BOOL8 AllFrom;

  v2 = a2;
  v3 = objc_sync_enter(v2);
  AllFrom = GEOPDPlaceSummaryLayoutUnitTransitShieldsReadAllFrom(v3, v2);
  objc_sync_exit(v2);

  return AllFrom;
}

void sub_1893419C4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryLayoutUnitUGCUserSubmittedRecommendationsReadAllFrom(uint64_t a1, void *a2)
{
  unsigned __int8 *v2;
  int *v3;
  int *v4;
  int *v5;
  int *v6;
  int v7;
  char v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v15;
  _BOOL8 v16;

  v2 = a2;
  objc_sync_enter(v2);
  if (v2)
  {
    v3 = (int *)MEMORY[0x1E0D82BF0];
    v4 = (int *)MEMORY[0x1E0D82BD8];
    v5 = (int *)MEMORY[0x1E0D82BC8];
    v6 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      v7 = v2[*v5];
      if (*(_QWORD *)&v2[*v3] >= *(_QWORD *)&v2[*v4])
        break;
      if (v2[*v5])
      {
        v7 = 1;
        break;
      }
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)&v2[v11];
        if (v12 == -1 || v12 >= *(_QWORD *)&v2[*v4])
          break;
        v13 = *(_BYTE *)(*(_QWORD *)&v2[*v6] + v12);
        *(_QWORD *)&v2[v11] = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_13;
        v8 += 7;
        if (v9++ >= 9)
        {
          LOBYTE(v10) = 0;
          v7 = v2[*v5];
          goto LABEL_15;
        }
      }
      v2[*v5] = 1;
LABEL_13:
      v7 = v2[*v5];
      if (v2[*v5])
        LOBYTE(v10) = 0;
LABEL_15:
      if (v7)
        v15 = 1;
      else
        v15 = (v10 & 7) == 4;
      if (v15)
        break;
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        goto LABEL_20;
    }
    v16 = v7 == 0;
  }
  else
  {
LABEL_20:
    v16 = 0;
  }
  objc_sync_exit(v2);

  return v16;
}

void sub_189341CAC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryLayoutUnitUGCUserSubmittedRecommendationsReadFrom(uint64_t a1, void *a2)
{
  id v2;
  uint64_t v3;
  _BOOL8 AllFrom;

  v2 = a2;
  v3 = objc_sync_enter(v2);
  AllFrom = GEOPDPlaceSummaryLayoutUnitUGCUserSubmittedRecommendationsReadAllFrom(v3, v2);
  objc_sync_exit(v2);

  return AllFrom;
}

void sub_189341D04(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryLayoutUnitUserGeneratedGuidesReadAllFrom(uint64_t a1, void *a2)
{
  unsigned __int8 *v2;
  int *v3;
  int *v4;
  int *v5;
  int *v6;
  int v7;
  char v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v15;
  _BOOL8 v16;

  v2 = a2;
  objc_sync_enter(v2);
  if (v2)
  {
    v3 = (int *)MEMORY[0x1E0D82BF0];
    v4 = (int *)MEMORY[0x1E0D82BD8];
    v5 = (int *)MEMORY[0x1E0D82BC8];
    v6 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      v7 = v2[*v5];
      if (*(_QWORD *)&v2[*v3] >= *(_QWORD *)&v2[*v4])
        break;
      if (v2[*v5])
      {
        v7 = 1;
        break;
      }
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)&v2[v11];
        if (v12 == -1 || v12 >= *(_QWORD *)&v2[*v4])
          break;
        v13 = *(_BYTE *)(*(_QWORD *)&v2[*v6] + v12);
        *(_QWORD *)&v2[v11] = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_13;
        v8 += 7;
        if (v9++ >= 9)
        {
          LOBYTE(v10) = 0;
          v7 = v2[*v5];
          goto LABEL_15;
        }
      }
      v2[*v5] = 1;
LABEL_13:
      v7 = v2[*v5];
      if (v2[*v5])
        LOBYTE(v10) = 0;
LABEL_15:
      if (v7)
        v15 = 1;
      else
        v15 = (v10 & 7) == 4;
      if (v15)
        break;
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        goto LABEL_20;
    }
    v16 = v7 == 0;
  }
  else
  {
LABEL_20:
    v16 = 0;
  }
  objc_sync_exit(v2);

  return v16;
}

void sub_189341FEC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryLayoutUnitUserGeneratedGuidesReadFrom(uint64_t a1, void *a2)
{
  id v2;
  uint64_t v3;
  _BOOL8 AllFrom;

  v2 = a2;
  v3 = objc_sync_enter(v2);
  AllFrom = GEOPDPlaceSummaryLayoutUnitUserGeneratedGuidesReadAllFrom(v3, v2);
  objc_sync_exit(v2);

  return AllFrom;
}

void sub_189342044(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryLayoutUnitUserNoteReadAllFrom(uint64_t a1, void *a2)
{
  unsigned __int8 *v2;
  int *v3;
  int *v4;
  int *v5;
  int *v6;
  int v7;
  char v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v15;
  _BOOL8 v16;

  v2 = a2;
  objc_sync_enter(v2);
  if (v2)
  {
    v3 = (int *)MEMORY[0x1E0D82BF0];
    v4 = (int *)MEMORY[0x1E0D82BD8];
    v5 = (int *)MEMORY[0x1E0D82BC8];
    v6 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      v7 = v2[*v5];
      if (*(_QWORD *)&v2[*v3] >= *(_QWORD *)&v2[*v4])
        break;
      if (v2[*v5])
      {
        v7 = 1;
        break;
      }
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)&v2[v11];
        if (v12 == -1 || v12 >= *(_QWORD *)&v2[*v4])
          break;
        v13 = *(_BYTE *)(*(_QWORD *)&v2[*v6] + v12);
        *(_QWORD *)&v2[v11] = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_13;
        v8 += 7;
        if (v9++ >= 9)
        {
          LOBYTE(v10) = 0;
          v7 = v2[*v5];
          goto LABEL_15;
        }
      }
      v2[*v5] = 1;
LABEL_13:
      v7 = v2[*v5];
      if (v2[*v5])
        LOBYTE(v10) = 0;
LABEL_15:
      if (v7)
        v15 = 1;
      else
        v15 = (v10 & 7) == 4;
      if (v15)
        break;
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        goto LABEL_20;
    }
    v16 = v7 == 0;
  }
  else
  {
LABEL_20:
    v16 = 0;
  }
  objc_sync_exit(v2);

  return v16;
}

void sub_18934232C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceSummaryLayoutUnitUserNoteReadFrom(uint64_t a1, void *a2)
{
  id v2;
  uint64_t v3;
  _BOOL8 AllFrom;

  v2 = a2;
  v3 = objc_sync_enter(v2);
  AllFrom = GEOPDPlaceSummaryLayoutUnitUserNoteReadAllFrom(v3, v2);
  objc_sync_exit(v2);

  return AllFrom;
}

void sub_189342384(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18934261C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDPlaceSummaryResultLayoutTemplatePairReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  int *v15;
  GEOPDMapsIdentifier *v16;
  int *v17;
  int *v18;
  int *v19;
  char v20;
  unsigned int v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  BOOL v26;
  int v27;
  int v28;
  unint64_t v30;
  BOOL v31;
  int *v32;
  int v33;
  int v34;
  BOOL v35;
  int *v36;
  char v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  void *v43;
  int v44;
  char v45;
  char v46;
  unsigned int v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  char v51;
  char v52;
  int v53;
  char v54;
  void *v55;
  int v57;
  char v58;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 60);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 56));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int8 *)(a1 + 68) >> 1) & 1)
      + (*(_BYTE *)(a1 + 68) & 1)
      + ((*(unsigned __int8 *)(a1 + 68) >> 2) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v7])
    {
      case -3:
        v8 = 1;
        goto LABEL_6;
      case -2:
        v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v10 | (v11 > 1);
        if (((v14 | v8) & 1) != 0)
          v15 = 0;
        else
          v15 = a3;
        LODWORD(v16) = v14;
        v17 = (int *)MEMORY[0x1E0D82BF0];
        v18 = (int *)MEMORY[0x1E0D82BC8];
        if (*(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(v3 + *v6))
          goto LABEL_84;
        v58 = (v15 == 0) | v14;
        v19 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_6:
        v12 = v9;
        v13 = v10;
LABEL_8:
        ++v7;
        v9 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  do
  {
    if (*(_BYTE *)(v3 + *v18))
      break;
    v20 = 0;
    v21 = 0;
    v22 = 0;
    while (1)
    {
      v23 = *v17;
      v24 = *(_QWORD *)(v3 + v23);
      if (v24 == -1 || v24 >= *(_QWORD *)(v3 + *v6))
        break;
      v25 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v24);
      *(_QWORD *)(v3 + v23) = v24 + 1;
      v22 |= (unint64_t)(v25 & 0x7F) << v20;
      if ((v25 & 0x80) == 0)
        goto LABEL_23;
      v20 += 7;
      v26 = v21++ >= 9;
      if (v26)
      {
        v22 = 0;
        v27 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(_BYTE *)(v3 + *v18) = 1;
LABEL_23:
    v27 = *(unsigned __int8 *)(v3 + *v18);
    if (*(_BYTE *)(v3 + *v18))
      v22 = 0;
LABEL_25:
    v28 = v22 & 7;
    if (v27 || v28 == 4)
      break;
    v30 = v22 >> 3;
    v31 = (char)v16;
    if ((v58 & 1) == 0)
    {
      v32 = v15;
      do
      {
        v34 = *v32++;
        v33 = v34;
        v31 = v34 != 0;
        if (v34)
          v35 = v33 == (_DWORD)v30;
        else
          v35 = 1;
      }
      while (!v35);
    }
    switch((_DWORD)v30)
    {
      case 3:
        if (!v31 || (*(_BYTE *)(a1 + 68) & 1) != 0)
        {
LABEL_67:
          v45 = PBReaderSkipValueWithTag();
          v18 = (int *)MEMORY[0x1E0D82BC8];
          if ((v45 & 1) == 0)
          {
LABEL_97:
            v52 = 0;
            goto LABEL_86;
          }
          continue;
        }
        if (v28 == 2)
        {
          if (!PBReaderPlaceMark())
            goto LABEL_98;
          while (1)
          {
            v36 = (int *)MEMORY[0x1E0D82BC8];
            if (*(_QWORD *)(v3 + *v17) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + (int)*MEMORY[0x1E0D82BC8]))
              break;
            v37 = 0;
            v38 = 0;
            v39 = 0;
            while (1)
            {
              v40 = *v17;
              v41 = *(_QWORD *)(v3 + v40);
              if (v41 == -1 || v41 >= *(_QWORD *)(v3 + *v6))
                break;
              v42 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v41);
              *(_QWORD *)(v3 + v40) = v41 + 1;
              v39 |= (unint64_t)(v42 & 0x7F) << v37;
              if (v42 < 0)
              {
                v37 += 7;
                v26 = v38++ >= 9;
                if (!v26)
                  continue;
              }
              goto LABEL_58;
            }
            *(_BYTE *)(v3 + *v36) = 1;
LABEL_58:
            PBRepeatedInt32Add();
          }
          PBReaderRecallMark();
        }
        else
        {
          v46 = 0;
          v47 = 0;
          v48 = 0;
          while (1)
          {
            v49 = *v17;
            v50 = *(_QWORD *)(v3 + v49);
            if (v50 == -1 || v50 >= *(_QWORD *)(v3 + *v6))
              break;
            v51 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v50);
            *(_QWORD *)(v3 + v49) = v50 + 1;
            v48 |= (unint64_t)(v51 & 0x7F) << v46;
            if (v51 < 0)
            {
              v46 += 7;
              v26 = v47++ >= 9;
              if (!v26)
                continue;
            }
            goto LABEL_80;
          }
          *(_BYTE *)(v3 + *v18) = 1;
LABEL_80:
          PBRepeatedInt32Add();
        }
        goto LABEL_81;
      case 2:
        if (!v31)
          goto LABEL_67;
        if ((*(_BYTE *)(a1 + 68) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_98:
            v52 = 0;
LABEL_100:
            v18 = (int *)MEMORY[0x1E0D82BC8];
            goto LABEL_86;
          }
          v7 += *(unsigned __int8 *)(a1 + 68) << 30 >> 31;
          goto LABEL_81;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_98;
        v57 = (int)v16;
        v16 = objc_alloc_init(GEOPDPlaceSummaryLayoutTemplate);
        if (!GEOPDPlaceSummaryLayoutTemplateReadAllFrom((uint64_t)v16, (void *)v3, v9 & 1))
        {
LABEL_99:

          v52 = 0;
          LOBYTE(v16) = v57;
          goto LABEL_100;
        }
        PBReaderRecallMark();
        v43 = *(void **)(a1 + 40);
        *(_QWORD *)(a1 + 40) = v16;

        --v7;
        break;
      case 1:
        if (!v31 || (*(_BYTE *)(a1 + 68) & 4) != 0)
          goto LABEL_67;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_98;
        v57 = (int)v16;
        v16 = objc_alloc_init(GEOPDMapsIdentifier);
        if (!GEOPDMapsIdentifierReadAllFrom((uint64_t)v16, (void *)v3))
          goto LABEL_99;
        PBReaderRecallMark();
        -[GEOPDPlaceSummaryResultLayoutTemplatePair _addNoFlagsMapsId:](a1, v16);

        break;
      default:
        v44 = PBReaderSkipValueWithTag();
        v18 = (int *)MEMORY[0x1E0D82BC8];
        if (!v44)
          goto LABEL_97;
        continue;
    }
    LODWORD(v16) = v57;
LABEL_81:
    v18 = (int *)MEMORY[0x1E0D82BC8];
  }
  while (v16 & 1 | (v7 != 0) && *(_QWORD *)(v3 + *v17) < *(_QWORD *)(v3 + *v6));
LABEL_84:
  if ((v16 & 1) == 0)
  {
    if (v15)
    {
      while (1)
      {
        v53 = *v15++;
        v54 = 4;
        switch(v53)
        {
          case 0:
            goto LABEL_94;
          case 1:
            goto LABEL_93;
          case 2:
            v54 = 2;
            goto LABEL_93;
          case 3:
            v54 = 1;
LABEL_93:
            *(_BYTE *)(a1 + 68) |= v54;
            break;
          default:
            continue;
        }
      }
    }
    goto LABEL_94;
  }
  v52 = 1;
LABEL_86:
  *(_BYTE *)(a1 + 68) |= 4u;
  *(_BYTE *)(a1 + 68) |= 2u;
  *(_BYTE *)(a1 + 68) |= 1u;
  if ((v52 & 1) == 0)
  {
    v3 = 0;
    if ((v16 & 1) == 0)
      return v3;
    goto LABEL_95;
  }
LABEL_94:
  v3 = *(_BYTE *)(v3 + *v18) == 0;
  if ((v16 & 1) == 0)
    return v3;
LABEL_95:
  v55 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = 0;

  return v3;
}

void sub_189342FB4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893430F8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189344300(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDPlaceSummaryResultLayoutTemplatePairCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _BYTE v12[128];
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  v8 = 0u;
  v9 = 0u;
  v10 = 0u;
  v11 = 0u;
  v2 = *(id *)(a1 + 48);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v9;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v9 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v8 + 1) + 8 * v6++), "readAll:", 1, (_QWORD)v8);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
    }
    while (v4);
  }

  return objc_msgSend(*(id *)(a1 + 40), "readAll:", 1);
}

unint64_t GEOPDPlaceSummaryResultLayoutTemplatePairReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 60))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDPlaceSummaryResultLayoutTemplatePairReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 60) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDPlaceSummaryResultLayoutTemplatePairReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDPlaceSummaryResultLayoutTemplatePairReadAllFrom_initialTag;
  Specified = GEOPDPlaceSummaryResultLayoutTemplatePairReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDPlaceSummaryResultLayoutTemplatePairCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_1893445A4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDPlaceSummaryResultLayoutTemplatePairReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOPDPlaceSummaryResultLayoutTemplatePairReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189344604(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189344860(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDPlaceSummaryResultLayoutTemplatePairIsDirty(uint64_t a1)
{
  char v2;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  v2 = *(_BYTE *)(a1 + 68);
  if ((v2 & 0xC) != 0)
    return 1;
  if ((*(_BYTE *)(a1 + 68) & 2) != 0)
  {
    if ((GEOPDPlaceSummaryLayoutTemplateIsDirty(*(os_unfair_lock_s **)(a1 + 40)) & 1) != 0)
      return 1;
    v2 = *(_BYTE *)(a1 + 68);
  }
  return v2 & 1;
}

os_unfair_lock_s *GEOPDPlaceSummaryResultLayoutTemplatePairIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOPDPlaceSummaryResultLayoutTemplatePairIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 16);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_189344E00(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189345458(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  void *v30;
  uint64_t v31;
  uint64_t v32;

  _Block_object_dispose(&a30, 8);
  *(_QWORD *)(v32 - 128) = v31;
  std::vector<geo::TransitEdgePiece>::__destroy_vector::operator()[abi:ne180100]((void ***)(v32 - 128));

  _Unwind_Resume(a1);
}

void sub_1893455A0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

__n128 __Block_byref_object_copy__3_0(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = a2[3];
  a1[3] = result;
  return result;
}

void sub_18934585C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_189345984(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_189345A78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_189345BE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_189345CF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  std::shared_ptr<std::vector<zilch::GeoCoordinates> const>::~shared_ptr[abi:ne180100]((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void std::vector<geo::TransitEdgePiece>::__destroy_vector::operator()[abi:ne180100](void ***a1)
{
  void **v1;
  id *v2;
  id *v4;
  void *v5;
  void *v6;

  v1 = *a1;
  v2 = (id *)**a1;
  if (v2)
  {
    v4 = (id *)v1[1];
    v5 = **a1;
    if (v4 != v2)
    {
      do
      {

        v6 = *(v4 - 4);
        v4 -= 4;

      }
      while (v4 != v2);
      v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

uint64_t *std::vector<geo::TransitEdgePiece>::__swap_out_circular_buffer(uint64_t *result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = *result;
  v2 = result[1];
  v4 = a2[1];
  while (v2 != v3)
  {
    v5 = *(_QWORD *)(v2 - 32);
    v2 -= 32;
    *(_QWORD *)v2 = 0;
    *(_QWORD *)(v4 - 32) = v5;
    v4 -= 32;
    v6 = *(_QWORD *)(v2 + 8);
    v7 = *(_QWORD *)(v2 + 16);
    *(_QWORD *)(v2 + 16) = 0;
    *(_QWORD *)(v4 + 8) = v6;
    *(_QWORD *)(v4 + 16) = v7;
    LODWORD(v6) = *(_DWORD *)(v2 + 24);
    *(_BYTE *)(v4 + 28) = *(_BYTE *)(v2 + 28);
    *(_DWORD *)(v4 + 24) = v6;
  }
  a2[1] = v4;
  v8 = *result;
  *result = v4;
  a2[1] = v8;
  v9 = result[1];
  result[1] = a2[2];
  a2[2] = v9;
  v10 = result[2];
  result[2] = a2[3];
  a2[3] = v10;
  *a2 = a2[1];
  return result;
}

void *std::__allocate_at_least[abi:ne180100]<std::allocator<geo::TransitEdgePiece>>(unint64_t a1)
{
  if (a1 >> 59)
    std::__throw_bad_array_new_length[abi:ne180100]();
  return operator new(32 * a1);
}

uint64_t std::__split_buffer<geo::TransitEdgePiece>::~__split_buffer(uint64_t a1)
{
  uint64_t v2;
  uint64_t i;

  v2 = *(_QWORD *)(a1 + 8);
  for (i = *(_QWORD *)(a1 + 16); i != v2; i = *(_QWORD *)(a1 + 16))
  {
    *(_QWORD *)(a1 + 16) = i - 32;

  }
  if (*(_QWORD *)a1)
    operator delete(*(void **)a1);
  return a1;
}

id std::vector<geo::TransitEdgePiece>::__construct_one_at_end[abi:ne180100]<geo::TransitEdgePiece const&>(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  id v5;
  uint64_t v6;
  void *v7;
  id result;
  char v9;

  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(id *)a2;
  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(void **)(a2 + 16);
  *(_QWORD *)v4 = v5;
  *(_QWORD *)(v4 + 8) = v6;
  result = v7;
  *(_QWORD *)(v4 + 16) = result;
  v9 = *(_BYTE *)(a2 + 28);
  *(_DWORD *)(v4 + 24) = *(_DWORD *)(a2 + 24);
  *(_BYTE *)(v4 + 28) = v9;
  *(_QWORD *)(a1 + 8) = v4 + 32;
  return result;
}

uint64_t std::vector<geo::TransitEdgePiece>::__push_back_slow_path<geo::TransitEdgePiece const&>(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t *v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int v11;
  uint64_t v12;
  _QWORD v14[5];

  v2 = (a1[1] - *a1) >> 5;
  v3 = v2 + 1;
  if ((unint64_t)(v2 + 1) >> 59)
    std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
  v6 = a1 + 2;
  v7 = a1[2] - *a1;
  if (v7 >> 4 > v3)
    v3 = v7 >> 4;
  if ((unint64_t)v7 >= 0x7FFFFFFFFFFFFFE0)
    v8 = 0x7FFFFFFFFFFFFFFLL;
  else
    v8 = v3;
  v14[4] = v6;
  if (v8)
    v8 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<geo::TransitEdgePiece>>(v8);
  else
    v9 = 0;
  v10 = v8 + 32 * v2;
  v14[0] = v8;
  v14[1] = v10;
  v14[3] = v8 + 32 * v9;
  *(_QWORD *)v10 = *(id *)a2;
  *(_QWORD *)(v10 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(v10 + 16) = *(id *)(a2 + 16);
  v11 = *(_DWORD *)(a2 + 24);
  *(_BYTE *)(v10 + 28) = *(_BYTE *)(a2 + 28);
  *(_DWORD *)(v10 + 24) = v11;
  v14[2] = v10 + 32;
  std::vector<geo::TransitEdgePiece>::__swap_out_circular_buffer(a1, v14);
  v12 = a1[1];
  std::__split_buffer<geo::TransitEdgePiece>::~__split_buffer((uint64_t)v14);
  return v12;
}

void std::vector<GEOLocationCoordinate3D>::reserve(void **a1, unint64_t a2)
{
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  char *v11;
  char *v12;
  __int128 v13;

  v4 = a1[2];
  v3 = (uint64_t)(a1 + 2);
  if (0xAAAAAAAAAAAAAAABLL * ((v4 - (_BYTE *)*a1) >> 3) < a2)
  {
    if (a2 >= 0xAAAAAAAAAAAAAABLL)
      std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
    v5 = ((_BYTE *)a1[1] - (_BYTE *)*a1) / 24;
    v6 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<zilch::TrafficDynamicTile::Flow>>(v3, a2);
    v7 = &v6[24 * v5];
    v9 = &v6[24 * v8];
    v11 = (char *)*a1;
    v10 = (char *)a1[1];
    v12 = v7;
    if (v10 != *a1)
    {
      do
      {
        v13 = *(_OWORD *)(v10 - 24);
        *((_QWORD *)v12 - 1) = *((_QWORD *)v10 - 1);
        *(_OWORD *)(v12 - 24) = v13;
        v12 -= 24;
        v10 -= 24;
      }
      while (v10 != v11);
      v10 = (char *)*a1;
    }
    *a1 = v12;
    a1[1] = v7;
    a1[2] = v9;
    if (v10)
      operator delete(v10);
  }
}

void sub_18934769C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18934776C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18934782C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18934817C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, void *a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,void *a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,void *__p,uint64_t a43,uint64_t a44,void *a45,uint64_t a46,uint64_t a47,uint64_t a48,char a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,void *a54)
{
  void *v54;

  _Block_object_dispose(&a49, 8);
  _Unwind_Resume(a1);
}

void sub_189348F6C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, void *a10, void *a11, void *a12, uint64_t a13, void *a14, uint64_t a15, void *a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,void *__p,uint64_t a34)
{

  _Unwind_Resume(a1);
}

void sub_1893492F4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1893494DC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18934968C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18934972C(_Unwind_Exception *exception_object)
{
  _Unwind_Resume(exception_object);
}

void sub_189349900(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_189349B14(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_189349BC4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_189349FD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *a22)
{
  void *v22;
  void *v23;

  _Unwind_Resume(a1);
}

void sub_18934A274(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18934A3B8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18934A734(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18934AD7C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18934B1E4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18934B388(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_18934B458(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_18934B7C8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18934BAE4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18934BBD0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_18934BCF4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18934C04C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_18934C2D4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18934C3D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18934C510(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void ___ZL25GEOGetGEOComposedRouteLogv_block_invoke_0()
{
  os_log_t v0;
  void *v1;

  v0 = os_log_create("com.apple.GeoServices", "GEOComposedRoute");
  v1 = (void *)_MergedGlobals_252;
  _MergedGlobals_252 = (uint64_t)v0;

}

void sub_18934CC44(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOVectorTileRequestReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  char v7;
  char v8;
  uint64_t v9;
  unsigned int v10;
  unsigned int v11;
  char v12;
  int *v13;
  int *v14;
  int *v15;
  int *v16;
  char v17;
  unsigned int v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  BOOL v24;
  int v25;
  unint64_t v27;
  BOOL v28;
  int *v29;
  int v30;
  int v31;
  BOOL v32;
  char v33;
  unsigned int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  int v40;
  char v41;
  unsigned int v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  char v46;
  char v47;
  unsigned int v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  char v52;
  char v53;
  unsigned int v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  char v58;
  char v59;
  unsigned int v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  unsigned int v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  char v73;
  char v74;
  unsigned int v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  char v80;
  char v81;
  unsigned int v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  char v86;
  char v87;
  unsigned int v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  char v92;
  uint64_t v93;
  unint64_t v94;
  int v95;
  uint64_t v96;
  unint64_t v97;
  void *v98;
  char v99;
  unsigned int v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  char v105;
  char v106;
  unsigned int v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  unint64_t v111;
  char v112;
  char v113;
  uint64_t v114;
  BOOL v115;
  uint64_t v116;
  int v117;
  uint64_t v118;
  char v119;
  int v120;
  int v121;
  int v122;
  void *v123;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 52);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 48));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = ((*(_DWORD *)(a1 + 100) >> 15) & 1) + ((*(_DWORD *)(a1 + 100) >> 13) & 1) + ((*(_DWORD *)(a1 + 100) >> 14) & 1);
  while (1)
  {
    v11 = a3[v9];
    if (v11 >= 0xFFFFFFFE)
    {
      v7 = 1;
      goto LABEL_9;
    }
    if (v11 != -3)
      break;
    v8 = 1;
LABEL_9:
    ++v9;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  v12 = v7 | (v10 > 1);
  if (v7 & 1 | (v10 > 1) | v8 & 1)
    v13 = 0;
  else
    v13 = a3;
  v14 = (int *)MEMORY[0x1E0D82BF0];
  v15 = (int *)MEMORY[0x1E0D82BC8];
  v16 = (int *)MEMORY[0x1E0D82BB8];
  while (2)
  {
    if (*(_QWORD *)(v3 + *v14) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v15))
      goto LABEL_208;
    v17 = 0;
    v18 = 0;
    v19 = 0;
    while (1)
    {
      v20 = *v14;
      v21 = *(_QWORD *)(v3 + v20);
      v22 = v21 + 1;
      if (v21 == -1 || v22 > *(_QWORD *)(v3 + *v6))
        break;
      v23 = *(_BYTE *)(*(_QWORD *)(v3 + *v16) + v21);
      *(_QWORD *)(v3 + v20) = v22;
      v19 |= (unint64_t)(v23 & 0x7F) << v17;
      if ((v23 & 0x80) == 0)
        goto LABEL_24;
      v17 += 7;
      v24 = v18++ >= 9;
      if (v24)
      {
        v19 = 0;
        v25 = *(unsigned __int8 *)(v3 + *v15);
        goto LABEL_26;
      }
    }
    *(_BYTE *)(v3 + *v15) = 1;
LABEL_24:
    v25 = *(unsigned __int8 *)(v3 + *v15);
    if (*(_BYTE *)(v3 + *v15))
      v19 = 0;
LABEL_26:
    if (v25 || (v19 & 7) == 4)
    {
LABEL_208:
      if ((v12 & 1) != 0)
      {
        v119 = 1;
        goto LABEL_222;
      }
      if (!v13)
        goto LABEL_223;
      while (1)
      {
        while (1)
        {
          v121 = *v13++;
          v120 = v121;
          if (v121 <= 10)
            break;
          if (v120 == 14)
          {
            v122 = 0x4000;
LABEL_218:
            *(_DWORD *)(a1 + 100) |= v122;
          }
          else if (v120 == 11)
          {
            v122 = 0x2000;
            goto LABEL_218;
          }
        }
        if (v120 == 6)
        {
          v122 = 0x8000;
          goto LABEL_218;
        }
        if (!v120)
          goto LABEL_223;
      }
    }
    v27 = v19 >> 3;
    v28 = v12;
    if (!((v13 == 0) | v12 & 1))
    {
      v29 = v13;
      do
      {
        v31 = *v29++;
        v30 = v31;
        v28 = v31 != 0;
        if (v31)
          v32 = v30 == (_DWORD)v27;
        else
          v32 = 1;
      }
      while (!v32);
    }
    switch((int)v27)
    {
      case 1:
        if ((v8 & 1) == 0)
          goto LABEL_146;
        v33 = 0;
        v34 = 0;
        v35 = 0;
        *(_DWORD *)(a1 + 100) |= 0x80u;
        while (1)
        {
          v36 = *v14;
          v37 = *(_QWORD *)(v3 + v36);
          v38 = v37 + 1;
          if (v37 == -1 || v38 > *(_QWORD *)(v3 + *v6))
            break;
          v39 = *(_BYTE *)(*(_QWORD *)(v3 + *v16) + v37);
          *(_QWORD *)(v3 + v36) = v38;
          v35 |= (unint64_t)(v39 & 0x7F) << v33;
          if ((v39 & 0x80) == 0)
            goto LABEL_149;
          v33 += 7;
          v24 = v34++ >= 9;
          if (v24)
          {
            LODWORD(v35) = 0;
            goto LABEL_151;
          }
        }
        *(_BYTE *)(v3 + *v15) = 1;
LABEL_149:
        if (*(_BYTE *)(v3 + *v15))
          LODWORD(v35) = 0;
LABEL_151:
        v114 = 84;
        goto LABEL_184;
      case 2:
        if ((v8 & 1) == 0)
          goto LABEL_146;
        v41 = 0;
        v42 = 0;
        v35 = 0;
        *(_DWORD *)(a1 + 100) |= 0x100u;
        while (2)
        {
          v43 = *v14;
          v44 = *(_QWORD *)(v3 + v43);
          v45 = v44 + 1;
          if (v44 == -1 || v45 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v15) = 1;
          }
          else
          {
            v46 = *(_BYTE *)(*(_QWORD *)(v3 + *v16) + v44);
            *(_QWORD *)(v3 + v43) = v45;
            v35 |= (unint64_t)(v46 & 0x7F) << v41;
            if (v46 < 0)
            {
              v41 += 7;
              v24 = v42++ >= 9;
              if (v24)
              {
                LODWORD(v35) = 0;
                goto LABEL_155;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v15))
          LODWORD(v35) = 0;
LABEL_155:
        v114 = 88;
        goto LABEL_184;
      case 3:
        if ((v8 & 1) == 0)
          goto LABEL_146;
        v47 = 0;
        v48 = 0;
        v35 = 0;
        *(_DWORD *)(a1 + 100) |= 0x200u;
        while (2)
        {
          v49 = *v14;
          v50 = *(_QWORD *)(v3 + v49);
          v51 = v50 + 1;
          if (v50 == -1 || v51 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v15) = 1;
          }
          else
          {
            v52 = *(_BYTE *)(*(_QWORD *)(v3 + *v16) + v50);
            *(_QWORD *)(v3 + v49) = v51;
            v35 |= (unint64_t)(v52 & 0x7F) << v47;
            if (v52 < 0)
            {
              v47 += 7;
              v24 = v48++ >= 9;
              if (v24)
              {
                LODWORD(v35) = 0;
                goto LABEL_159;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v15))
          LODWORD(v35) = 0;
LABEL_159:
        v114 = 92;
        goto LABEL_184;
      case 4:
        if ((v8 & 1) == 0)
          goto LABEL_146;
        v53 = 0;
        v54 = 0;
        v35 = 0;
        *(_DWORD *)(a1 + 100) |= 0x40u;
        while (2)
        {
          v55 = *v14;
          v56 = *(_QWORD *)(v3 + v55);
          v57 = v56 + 1;
          if (v56 == -1 || v57 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v15) = 1;
          }
          else
          {
            v58 = *(_BYTE *)(*(_QWORD *)(v3 + *v16) + v56);
            *(_QWORD *)(v3 + v55) = v57;
            v35 |= (unint64_t)(v58 & 0x7F) << v53;
            if (v58 < 0)
            {
              v53 += 7;
              v24 = v54++ >= 9;
              if (v24)
              {
                LODWORD(v35) = 0;
                goto LABEL_163;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v15))
          LODWORD(v35) = 0;
LABEL_163:
        v114 = 80;
        goto LABEL_184;
      case 5:
        if ((v8 & 1) == 0)
          goto LABEL_146;
        v59 = 0;
        v60 = 0;
        v35 = 0;
        *(_DWORD *)(a1 + 100) |= 0x20u;
        while (2)
        {
          v61 = *v14;
          v62 = *(_QWORD *)(v3 + v61);
          v63 = v62 + 1;
          if (v62 == -1 || v63 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v15) = 1;
          }
          else
          {
            v64 = *(_BYTE *)(*(_QWORD *)(v3 + *v16) + v62);
            *(_QWORD *)(v3 + v61) = v63;
            v35 |= (unint64_t)(v64 & 0x7F) << v59;
            if (v64 < 0)
            {
              v59 += 7;
              v24 = v60++ >= 9;
              if (v24)
              {
                LODWORD(v35) = 0;
                goto LABEL_167;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v15))
          LODWORD(v35) = 0;
LABEL_167:
        v114 = 76;
        goto LABEL_184;
      case 6:
        if (!v28)
          goto LABEL_146;
        if ((*(_BYTE *)(a1 + 101) & 0x80) == 0)
        {
          PBReaderReadString();
          v65 = objc_claimAutoreleasedReturnValue();
          v66 = 32;
          goto LABEL_129;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_228;
        v117 = (int)(*(_DWORD *)(a1 + 100) << 16) >> 31;
        goto LABEL_200;
      case 7:
        if ((v8 & 1) == 0)
          goto LABEL_146;
        v67 = 0;
        v68 = 0;
        v69 = 0;
        *(_DWORD *)(a1 + 100) |= 0x400u;
        while (2)
        {
          v70 = *v14;
          v71 = *(_QWORD *)(v3 + v70);
          v72 = v71 + 1;
          if (v71 == -1 || v72 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v15) = 1;
          }
          else
          {
            v73 = *(_BYTE *)(*(_QWORD *)(v3 + *v16) + v71);
            *(_QWORD *)(v3 + v70) = v72;
            v69 |= (unint64_t)(v73 & 0x7F) << v67;
            if (v73 < 0)
            {
              v67 += 7;
              v24 = v68++ >= 9;
              if (v24)
              {
                v69 = 0;
                goto LABEL_171;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v15))
          v69 = 0;
LABEL_171:
        v115 = v69 != 0;
        v116 = 96;
        goto LABEL_193;
      case 8:
        if ((v8 & 1) == 0)
          goto LABEL_146;
        v74 = 0;
        v75 = 0;
        v76 = 0;
        *(_DWORD *)(a1 + 100) |= 1u;
        while (2)
        {
          v77 = *v14;
          v78 = *(_QWORD *)(v3 + v77);
          v79 = v78 + 1;
          if (v78 == -1 || v79 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v15) = 1;
          }
          else
          {
            v80 = *(_BYTE *)(*(_QWORD *)(v3 + *v16) + v78);
            *(_QWORD *)(v3 + v77) = v79;
            v76 |= (unint64_t)(v80 & 0x7F) << v74;
            if (v80 < 0)
            {
              v74 += 7;
              v24 = v75++ >= 9;
              if (v24)
              {
                v76 = 0;
                goto LABEL_175;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v15))
          v76 = 0;
LABEL_175:
        *(_QWORD *)(a1 + 40) = v76;
        goto LABEL_207;
      case 9:
        if ((v8 & 1) == 0)
          goto LABEL_146;
        v81 = 0;
        v82 = 0;
        v35 = 0;
        *(_DWORD *)(a1 + 100) |= 0x10u;
        while (2)
        {
          v83 = *v14;
          v84 = *(_QWORD *)(v3 + v83);
          v85 = v84 + 1;
          if (v84 == -1 || v85 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v15) = 1;
          }
          else
          {
            v86 = *(_BYTE *)(*(_QWORD *)(v3 + *v16) + v84);
            *(_QWORD *)(v3 + v83) = v85;
            v35 |= (unint64_t)(v86 & 0x7F) << v81;
            if (v86 < 0)
            {
              v81 += 7;
              v24 = v82++ >= 9;
              if (v24)
              {
                LODWORD(v35) = 0;
                goto LABEL_179;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v15))
          LODWORD(v35) = 0;
LABEL_179:
        v114 = 72;
        goto LABEL_184;
      case 10:
        if ((v8 & 1) == 0)
          goto LABEL_146;
        v87 = 0;
        v88 = 0;
        v35 = 0;
        *(_DWORD *)(a1 + 100) |= 8u;
        while (2)
        {
          v89 = *v14;
          v90 = *(_QWORD *)(v3 + v89);
          v91 = v90 + 1;
          if (v90 == -1 || v91 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v15) = 1;
          }
          else
          {
            v92 = *(_BYTE *)(*(_QWORD *)(v3 + *v16) + v90);
            *(_QWORD *)(v3 + v89) = v91;
            v35 |= (unint64_t)(v92 & 0x7F) << v87;
            if (v92 < 0)
            {
              v87 += 7;
              v24 = v88++ >= 9;
              if (v24)
              {
                LODWORD(v35) = 0;
                goto LABEL_183;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v15))
          LODWORD(v35) = 0;
LABEL_183:
        v114 = 68;
LABEL_184:
        *(_DWORD *)(a1 + v114) = v35;
        goto LABEL_207;
      case 11:
        if (!v28)
          goto LABEL_146;
        if ((*(_BYTE *)(a1 + 101) & 0x20) == 0)
        {
          PBReaderReadString();
          v65 = objc_claimAutoreleasedReturnValue();
          v66 = 16;
          goto LABEL_129;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_228;
        v117 = (int)(*(_DWORD *)(a1 + 100) << 18) >> 31;
        goto LABEL_200;
      case 12:
        if ((v8 & 1) == 0)
          goto LABEL_146;
        *(_DWORD *)(a1 + 100) |= 4u;
        v93 = *v14;
        v94 = *(_QWORD *)(v3 + v93);
        if (v94 <= 0xFFFFFFFFFFFFFFFBLL && v94 + 4 <= *(_QWORD *)(v3 + *v6))
        {
          v95 = *(_DWORD *)(*(_QWORD *)(v3 + *v16) + v94);
          *(_QWORD *)(v3 + v93) = v94 + 4;
        }
        else
        {
          *(_BYTE *)(v3 + *v15) = 1;
          v95 = 0;
        }
        v118 = 64;
        goto LABEL_206;
      case 13:
        if ((v8 & 1) == 0)
          goto LABEL_146;
        *(_DWORD *)(a1 + 100) |= 2u;
        v96 = *v14;
        v97 = *(_QWORD *)(v3 + v96);
        if (v97 <= 0xFFFFFFFFFFFFFFFBLL && v97 + 4 <= *(_QWORD *)(v3 + *v6))
        {
          v95 = *(_DWORD *)(*(_QWORD *)(v3 + *v16) + v97);
          *(_QWORD *)(v3 + v96) = v97 + 4;
        }
        else
        {
          *(_BYTE *)(v3 + *v15) = 1;
          v95 = 0;
        }
        v118 = 60;
LABEL_206:
        *(_DWORD *)(a1 + v118) = v95;
        goto LABEL_207;
      case 14:
        if (!v28)
          goto LABEL_146;
        if ((*(_BYTE *)(a1 + 101) & 0x40) == 0)
        {
          PBReaderReadString();
          v65 = objc_claimAutoreleasedReturnValue();
          v66 = 24;
LABEL_129:
          v98 = *(void **)(a1 + v66);
          *(_QWORD *)(a1 + v66) = v65;

          --v9;
          goto LABEL_201;
        }
        if ((PBReaderSkipValueWithTag() & 1) != 0)
        {
          v117 = (int)(*(_DWORD *)(a1 + 100) << 17) >> 31;
LABEL_200:
          v9 += v117;
LABEL_201:
          v15 = (int *)MEMORY[0x1E0D82BC8];
LABEL_207:
          if (!(v12 & 1 | (v9 != 0)))
            goto LABEL_208;
          continue;
        }
LABEL_228:
        v119 = 0;
        v15 = (int *)MEMORY[0x1E0D82BC8];
LABEL_222:
        *(_DWORD *)(a1 + 100) |= 0x8000u;
        *(_DWORD *)(a1 + 100) |= 0x2000u;
        *(_DWORD *)(a1 + 100) |= 0x4000u;
        if ((v119 & 1) != 0)
        {
LABEL_223:
          v3 = *(_BYTE *)(v3 + *v15) == 0;
          if ((v12 & 1) != 0)
            goto LABEL_224;
        }
        else
        {
          v3 = 0;
          if ((v12 & 1) != 0)
          {
LABEL_224:
            v123 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = 0;

          }
        }
        return v3;
      case 15:
        if ((v8 & 1) == 0)
          goto LABEL_146;
        v99 = 0;
        v100 = 0;
        v101 = 0;
        *(_DWORD *)(a1 + 100) |= 0x800u;
        while (2)
        {
          v102 = *v14;
          v103 = *(_QWORD *)(v3 + v102);
          v104 = v103 + 1;
          if (v103 == -1 || v104 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v15) = 1;
          }
          else
          {
            v105 = *(_BYTE *)(*(_QWORD *)(v3 + *v16) + v103);
            *(_QWORD *)(v3 + v102) = v104;
            v101 |= (unint64_t)(v105 & 0x7F) << v99;
            if (v105 < 0)
            {
              v99 += 7;
              v24 = v100++ >= 9;
              if (v24)
              {
                v101 = 0;
                goto LABEL_188;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v15))
          v101 = 0;
LABEL_188:
        v115 = v101 != 0;
        v116 = 97;
        goto LABEL_193;
      case 16:
        if ((v8 & 1) != 0)
        {
          v106 = 0;
          v107 = 0;
          v108 = 0;
          *(_DWORD *)(a1 + 100) |= 0x1000u;
          while (1)
          {
            v109 = *v14;
            v110 = *(_QWORD *)(v3 + v109);
            v111 = v110 + 1;
            if (v110 == -1 || v111 > *(_QWORD *)(v3 + *v6))
              break;
            v112 = *(_BYTE *)(*(_QWORD *)(v3 + *v16) + v110);
            *(_QWORD *)(v3 + v109) = v111;
            v108 |= (unint64_t)(v112 & 0x7F) << v106;
            if ((v112 & 0x80) == 0)
              goto LABEL_190;
            v106 += 7;
            v24 = v107++ >= 9;
            if (v24)
            {
              v108 = 0;
              goto LABEL_192;
            }
          }
          *(_BYTE *)(v3 + *v15) = 1;
LABEL_190:
          if (*(_BYTE *)(v3 + *v15))
            v108 = 0;
LABEL_192:
          v115 = v108 != 0;
          v116 = 98;
LABEL_193:
          *(_BYTE *)(a1 + v116) = v115;
        }
        else
        {
LABEL_146:
          v113 = PBReaderSkipValueWithTag();
          v15 = (int *)MEMORY[0x1E0D82BC8];
          if ((v113 & 1) == 0)
          {
LABEL_221:
            v119 = 0;
            goto LABEL_222;
          }
        }
        goto LABEL_207;
      default:
        v40 = PBReaderSkipValueWithTag();
        v15 = (int *)MEMORY[0x1E0D82BC8];
        if (!v40)
          goto LABEL_221;
        goto LABEL_207;
    }
  }
}

void sub_18934DC8C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18934DED8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18934EBE0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOVectorTileRequestReadAllFrom(uint64_t a1, void *a2)
{
  unint64_t Specified;
  id v6;
  uint8_t v7[16];

  if (*(_DWORD *)(a1 + 52))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOVectorTileRequestReadAllFrom can only be called once per object"));
  }
  else
  {
    if (!((unint64_t)objc_msgSend(a2, "position") >> 32)
      && !((unint64_t)objc_msgSend(a2, "length") >> 32))
    {
      os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
      v6 = a2;
      objc_sync_enter(v6);
      objc_storeStrong((id *)(a1 + 8), a2);
      *(_DWORD *)(a1 + 48) = objc_msgSend(v6, "position");
      *(_DWORD *)(a1 + 52) = objc_msgSend(v6, "length");
      Specified = GEOVectorTileRequestReadSpecified(a1, (unint64_t)v6, GEOVectorTileRequestReadAllFrom_initialTag);
      objc_sync_exit(v6);

      os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
      return Specified;
    }
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v7 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v7, 2u);
    }
  }
  return 0;
}

void sub_18934ED58(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18934F648(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18934FCBC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189350AD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  void *v3;
  va_list va;

  va_start(va, a3);
  std::shared_ptr<std::vector<zilch::GeoCoordinates> const>::~shared_ptr[abi:ne180100]((uint64_t)va);

  _Unwind_Resume(a1);
}

void sub_189350B8C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_189350BDC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_189350C2C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_189350CA4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  v4 = v3;

  _Unwind_Resume(a1);
}

void sub_189350D38(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  v4 = v3;

  _Unwind_Resume(a1);
}

void sub_189350DCC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  v4 = v3;

  _Unwind_Resume(a1);
}

void sub_189350E60(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  v4 = v3;

  _Unwind_Resume(a1);
}

void sub_189350F18(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_189350FB8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_189351088(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_18935115C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_189351224(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_1893512F8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1893513C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_189351494(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18935155C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_189351630(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1893516F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_1893517CC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_189351868(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_189351B6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  void *v11;
  void *v12;
  void *v13;

  _Unwind_Resume(a1);
}

void sub_189351D4C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, _Unwind_Exception *exception_object)
{
  void *v9;
  void *v10;
  void *v11;
  void *v12;

  _Unwind_Resume(a1);
}

void sub_189351E04(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_189351ED4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

BOOL GEOVLBuildReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  char v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  char v29;
  unsigned int v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  char v34;
  unsigned int v35;
  uint64_t v36;
  unint64_t v37;
  char v38;
  uint64_t v39;
  _BOOL8 v40;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          if (v12 == -1 || v12 >= *(_QWORD *)&v3[*v5])
            break;
          v13 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v12 + 1;
          v10 |= (unint64_t)(v13 & 0x7F) << v8;
          if ((v13 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v14 = v9++ >= 9;
          if (v14)
          {
            v10 = 0;
            v15 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v15 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v15 || (v10 & 7) == 4)
          break;
        switch((v10 >> 3))
        {
          case 1u:
            v17 = 0;
            v18 = 0;
            v19 = 0;
            *(_BYTE *)(a1 + 28) |= 1u;
            while (2)
            {
              v20 = *v4;
              v21 = *(_QWORD *)&v3[v20];
              if (v21 == -1 || v21 >= *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v22 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v21);
                *(_QWORD *)&v3[v20] = v21 + 1;
                v19 |= (unint64_t)(v22 & 0x7F) << v17;
                if (v22 < 0)
                {
                  v17 += 7;
                  v14 = v18++ >= 9;
                  if (v14)
                  {
                    v19 = 0;
                    goto LABEL_53;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              v19 = 0;
LABEL_53:
            *(_QWORD *)(a1 + 8) = v19;
            continue;
          case 2u:
            v23 = 0;
            v24 = 0;
            v25 = 0;
            *(_BYTE *)(a1 + 28) |= 4u;
            while (1)
            {
              v26 = *v4;
              v27 = *(_QWORD *)&v3[v26];
              if (v27 == -1 || v27 >= *(_QWORD *)&v3[*v5])
                break;
              v28 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v27);
              *(_QWORD *)&v3[v26] = v27 + 1;
              v25 |= (unint64_t)(v28 & 0x7F) << v23;
              if ((v28 & 0x80) == 0)
                goto LABEL_55;
              v23 += 7;
              v14 = v24++ >= 9;
              if (v14)
              {
                LODWORD(v25) = 0;
                goto LABEL_57;
              }
            }
            v3[*v6] = 1;
LABEL_55:
            if (v3[*v6])
              LODWORD(v25) = 0;
LABEL_57:
            v39 = 20;
            goto LABEL_66;
          case 3u:
            v29 = 0;
            v30 = 0;
            v25 = 0;
            *(_BYTE *)(a1 + 28) |= 8u;
            while (2)
            {
              v31 = *v4;
              v32 = *(_QWORD *)&v3[v31];
              if (v32 == -1 || v32 >= *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v33 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v32);
                *(_QWORD *)&v3[v31] = v32 + 1;
                v25 |= (unint64_t)(v33 & 0x7F) << v29;
                if (v33 < 0)
                {
                  v29 += 7;
                  v14 = v30++ >= 9;
                  if (v14)
                  {
                    LODWORD(v25) = 0;
                    goto LABEL_61;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              LODWORD(v25) = 0;
LABEL_61:
            v39 = 24;
            goto LABEL_66;
          case 4u:
            v34 = 0;
            v35 = 0;
            v25 = 0;
            *(_BYTE *)(a1 + 28) |= 2u;
            break;
          default:
            if (!PBReaderSkipValueWithTag())
              goto LABEL_69;
            continue;
        }
        while (1)
        {
          v36 = *v4;
          v37 = *(_QWORD *)&v3[v36];
          if (v37 == -1 || v37 >= *(_QWORD *)&v3[*v5])
            break;
          v38 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v37);
          *(_QWORD *)&v3[v36] = v37 + 1;
          v25 |= (unint64_t)(v38 & 0x7F) << v34;
          if ((v38 & 0x80) == 0)
            goto LABEL_63;
          v34 += 7;
          v14 = v35++ >= 9;
          if (v14)
          {
            LODWORD(v25) = 0;
            goto LABEL_65;
          }
        }
        v3[*v6] = 1;
LABEL_63:
        if (v3[*v6])
          LODWORD(v25) = 0;
LABEL_65:
        v39 = 16;
LABEL_66:
        *(_DWORD *)(a1 + v39) = v25;
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v40 = v3[*v6] == 0;
  }
  else
  {
LABEL_69:
    v40 = 0;
  }
  objc_sync_exit(v3);

  return v40;
}

void sub_1893528D0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOVLBuildReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOVLBuildReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189352930(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOVLBuildIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  int v13;
  unsigned int v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int v19;
  BOOL v20;
  unsigned int v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  int v25;
  unsigned int v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  int v30;
  unsigned int v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  int v35;
  _BOOL8 v36;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        if (v10 == -1 || v10 >= *(_QWORD *)&a1[*v3])
          break;
        v11 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v13 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      if (v13 || (v8 & 7) == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0)
            goto LABEL_57;
          v15 = 0;
          while (1)
          {
            v16 = *v2;
            v17 = *(_QWORD *)&a1[v16];
            if (v17 == -1 || v17 >= *(_QWORD *)&a1[*v3])
              goto LABEL_53;
            v18 = v17 + 1;
            v19 = *(char *)(*(_QWORD *)&a1[*v5] + v17);
            *(_QWORD *)&a1[v16] = v18;
            if (v19 < 0)
            {
              v20 = v15++ > 8;
              if (!v20)
                continue;
            }
            goto LABEL_54;
          }
        case 2u:
          if ((v8 & 7) != 0)
            goto LABEL_57;
          v21 = 0;
          while (1)
          {
            v22 = *v2;
            v23 = *(_QWORD *)&a1[v22];
            if (v23 == -1 || v23 >= *(_QWORD *)&a1[*v3])
              goto LABEL_53;
            v24 = v23 + 1;
            v25 = *(char *)(*(_QWORD *)&a1[*v5] + v23);
            *(_QWORD *)&a1[v22] = v24;
            if (v25 < 0)
            {
              v20 = v21++ > 8;
              if (!v20)
                continue;
            }
            goto LABEL_54;
          }
        case 3u:
          if ((v8 & 7) != 0)
            goto LABEL_57;
          v26 = 0;
          while (1)
          {
            v27 = *v2;
            v28 = *(_QWORD *)&a1[v27];
            if (v28 == -1 || v28 >= *(_QWORD *)&a1[*v3])
              goto LABEL_53;
            v29 = v28 + 1;
            v30 = *(char *)(*(_QWORD *)&a1[*v5] + v28);
            *(_QWORD *)&a1[v27] = v29;
            if (v30 < 0)
            {
              v20 = v26++ > 8;
              if (!v20)
                continue;
            }
            goto LABEL_54;
          }
        case 4u:
          if ((v8 & 7) != 0)
            goto LABEL_57;
          v31 = 0;
          break;
        default:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_57:
          v36 = 0;
          goto LABEL_56;
      }
      while (1)
      {
        v32 = *v2;
        v33 = *(_QWORD *)&a1[v32];
        if (v33 == -1 || v33 >= *(_QWORD *)&a1[*v3])
          break;
        v34 = v33 + 1;
        v35 = *(char *)(*(_QWORD *)&a1[*v5] + v33);
        *(_QWORD *)&a1[v32] = v34;
        if (v35 < 0)
        {
          v20 = v31++ > 8;
          if (!v20)
            continue;
        }
        goto LABEL_54;
      }
LABEL_53:
      a1[*v4] = 1;
LABEL_54:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v36 = a1[*v4] == 0;
LABEL_56:
  PBReaderRecallMark();
  return v36;
}

void sub_189353364(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOVLDataTileReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  int *v15;
  GEOTileCoordinate *v16;
  int *v17;
  int *v18;
  int *v19;
  char v20;
  unsigned int v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  BOOL v26;
  int v27;
  int v28;
  unint64_t v30;
  BOOL v31;
  int *v32;
  int v33;
  int v34;
  BOOL v35;
  void *v36;
  int v37;
  int *v38;
  char v39;
  unsigned int v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  int *v45;
  char v46;
  unsigned int v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  char v51;
  int *v52;
  char v53;
  unsigned int v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  char v58;
  char v59;
  char v60;
  unsigned int v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  char v65;
  char v66;
  unsigned int v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  char v71;
  char v72;
  unsigned int v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  char v77;
  char v78;
  int v79;
  char v80;
  void *v81;
  int v83;
  char v84;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 104));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 100);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 96));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int8 *)(a1 + 108) >> 3) & 1)
      + (*(_BYTE *)(a1 + 108) & 1)
      + ((*(unsigned __int8 *)(a1 + 108) >> 1) & 1)
      + ((*(unsigned __int8 *)(a1 + 108) >> 2) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v7])
    {
      case -3:
        v8 = 1;
        goto LABEL_6;
      case -2:
        v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v10 | (v11 > 2);
        if (((v14 | v8) & 1) != 0)
          v15 = 0;
        else
          v15 = a3;
        LODWORD(v16) = v14;
        v17 = (int *)MEMORY[0x1E0D82BF0];
        v18 = (int *)MEMORY[0x1E0D82BC8];
        if (*(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(v3 + *v6))
          goto LABEL_122;
        v84 = (v15 == 0) | v14;
        v19 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_6:
        v12 = v9;
        v13 = v10;
LABEL_8:
        ++v7;
        v9 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_BYTE *)(v3 + *v18))
      goto LABEL_122;
    v20 = 0;
    v21 = 0;
    v22 = 0;
    while (1)
    {
      v23 = *v17;
      v24 = *(_QWORD *)(v3 + v23);
      if (v24 == -1 || v24 >= *(_QWORD *)(v3 + *v6))
        break;
      v25 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v24);
      *(_QWORD *)(v3 + v23) = v24 + 1;
      v22 |= (unint64_t)(v25 & 0x7F) << v20;
      if ((v25 & 0x80) == 0)
        goto LABEL_23;
      v20 += 7;
      v26 = v21++ >= 9;
      if (v26)
      {
        v22 = 0;
        v27 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(_BYTE *)(v3 + *v18) = 1;
LABEL_23:
    v27 = *(unsigned __int8 *)(v3 + *v18);
    if (*(_BYTE *)(v3 + *v18))
      v22 = 0;
LABEL_25:
    v28 = v22 & 7;
    if (v27 || v28 == 4)
    {
LABEL_122:
      if ((v16 & 1) != 0)
      {
        v78 = 1;
        goto LABEL_124;
      }
      if (v15)
      {
        while (1)
        {
          v79 = *v15++;
          v80 = 8;
          switch(v79)
          {
            case 0:
              goto LABEL_133;
            case 1:
              goto LABEL_132;
            case 2:
              v80 = 1;
              goto LABEL_132;
            case 3:
              v80 = 2;
              goto LABEL_132;
            case 4:
              v80 = 4;
LABEL_132:
              *(_BYTE *)(a1 + 108) |= v80;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_133;
    }
    v30 = v22 >> 3;
    v31 = (char)v16;
    if ((v84 & 1) == 0)
    {
      v32 = v15;
      do
      {
        v34 = *v32++;
        v33 = v34;
        v31 = v34 != 0;
        if (v34)
          v35 = v33 == (_DWORD)v30;
        else
          v35 = 1;
      }
      while (!v35);
    }
    switch((int)v30)
    {
      case 1:
        if (!v31)
          goto LABEL_89;
        if ((*(_BYTE *)(a1 + 108) & 8) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_137;
          v83 = (int)v16;
          v16 = objc_alloc_init(GEOTileCoordinate);
          if (GEOTileCoordinateReadAllFrom((uint64_t)v16, (void *)v3))
          {
            PBReaderRecallMark();
            v36 = *(void **)(a1 + 88);
            *(_QWORD *)(a1 + 88) = v16;

            --v7;
            LODWORD(v16) = v83;
            goto LABEL_119;
          }

          v78 = 0;
          LOBYTE(v16) = v83;
          goto LABEL_139;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_137;
        v7 += *(unsigned __int8 *)(a1 + 108) << 28 >> 31;
        goto LABEL_119;
      case 2:
        if (!v31 || (*(_BYTE *)(a1 + 108) & 1) != 0)
          goto LABEL_89;
        if (v28 != 2)
        {
          v60 = 0;
          v61 = 0;
          v62 = 0;
          while (1)
          {
            v63 = *v17;
            v64 = *(_QWORD *)(v3 + v63);
            if (v64 == -1 || v64 >= *(_QWORD *)(v3 + *v6))
              goto LABEL_108;
            v65 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v64);
            *(_QWORD *)(v3 + v63) = v64 + 1;
            v62 |= (unint64_t)(v65 & 0x7F) << v60;
            if (v65 < 0)
            {
              v60 += 7;
              v26 = v61++ >= 9;
              if (!v26)
                continue;
            }
            goto LABEL_109;
          }
        }
        if (!PBReaderPlaceMark())
          goto LABEL_137;
        while (1)
        {
          v38 = (int *)MEMORY[0x1E0D82BC8];
          if (*(_QWORD *)(v3 + *v17) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + (int)*MEMORY[0x1E0D82BC8]))
            goto LABEL_91;
          v39 = 0;
          v40 = 0;
          v41 = 0;
          while (1)
          {
            v42 = *v17;
            v43 = *(_QWORD *)(v3 + v42);
            if (v43 == -1 || v43 >= *(_QWORD *)(v3 + *v6))
              break;
            v44 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v43);
            *(_QWORD *)(v3 + v42) = v43 + 1;
            v41 |= (unint64_t)(v44 & 0x7F) << v39;
            if (v44 < 0)
            {
              v39 += 7;
              v26 = v40++ >= 9;
              if (!v26)
                continue;
            }
            goto LABEL_58;
          }
          *(_BYTE *)(v3 + *v38) = 1;
LABEL_58:
          PBRepeatedUInt32Add();
        }
      case 3:
        if (!v31 || (*(_BYTE *)(a1 + 108) & 2) != 0)
          goto LABEL_89;
        if (v28 != 2)
        {
          v66 = 0;
          v67 = 0;
          v68 = 0;
          while (1)
          {
            v69 = *v17;
            v70 = *(_QWORD *)(v3 + v69);
            if (v70 == -1 || v70 >= *(_QWORD *)(v3 + *v6))
              break;
            v71 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v70);
            *(_QWORD *)(v3 + v69) = v70 + 1;
            v68 |= (unint64_t)(v71 & 0x7F) << v66;
            if (v71 < 0)
            {
              v66 += 7;
              v26 = v67++ >= 9;
              if (!v26)
                continue;
            }
            goto LABEL_109;
          }
LABEL_108:
          *(_BYTE *)(v3 + *v18) = 1;
LABEL_109:
          PBRepeatedUInt32Add();
          goto LABEL_119;
        }
        if (!PBReaderPlaceMark())
          goto LABEL_137;
        while (1)
        {
          v45 = (int *)MEMORY[0x1E0D82BC8];
          if (*(_QWORD *)(v3 + *v17) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + (int)*MEMORY[0x1E0D82BC8]))
            goto LABEL_91;
          v46 = 0;
          v47 = 0;
          v48 = 0;
          while (1)
          {
            v49 = *v17;
            v50 = *(_QWORD *)(v3 + v49);
            if (v50 == -1 || v50 >= *(_QWORD *)(v3 + *v6))
              break;
            v51 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v50);
            *(_QWORD *)(v3 + v49) = v50 + 1;
            v48 |= (unint64_t)(v51 & 0x7F) << v46;
            if (v51 < 0)
            {
              v46 += 7;
              v26 = v47++ >= 9;
              if (!v26)
                continue;
            }
            goto LABEL_73;
          }
          *(_BYTE *)(v3 + *v45) = 1;
LABEL_73:
          PBRepeatedUInt32Add();
        }
      case 4:
        if (!v31 || (*(_BYTE *)(a1 + 108) & 4) != 0)
        {
LABEL_89:
          v59 = PBReaderSkipValueWithTag();
          v18 = (int *)MEMORY[0x1E0D82BC8];
          if ((v59 & 1) == 0)
          {
LABEL_136:
            v78 = 0;
            goto LABEL_124;
          }
LABEL_120:
          if (!(v16 & 1 | (v7 != 0)) || *(_QWORD *)(v3 + *v17) >= *(_QWORD *)(v3 + *v6))
            goto LABEL_122;
          continue;
        }
        if (v28 != 2)
        {
          v72 = 0;
          v73 = 0;
          v74 = 0;
          while (1)
          {
            v75 = *v17;
            v76 = *(_QWORD *)(v3 + v75);
            if (v76 == -1 || v76 >= *(_QWORD *)(v3 + *v6))
              break;
            v77 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v76);
            *(_QWORD *)(v3 + v75) = v76 + 1;
            v74 |= (unint64_t)(v77 & 0x7F) << v72;
            if (v77 < 0)
            {
              v72 += 7;
              v26 = v73++ >= 9;
              if (!v26)
                continue;
            }
            goto LABEL_118;
          }
          *(_BYTE *)(v3 + *v18) = 1;
LABEL_118:
          PBRepeatedInt32Add();
LABEL_119:
          v18 = (int *)MEMORY[0x1E0D82BC8];
          goto LABEL_120;
        }
        if (PBReaderPlaceMark())
        {
          while (1)
          {
            v52 = (int *)MEMORY[0x1E0D82BC8];
            if (*(_QWORD *)(v3 + *v17) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + (int)*MEMORY[0x1E0D82BC8]))
              break;
            v53 = 0;
            v54 = 0;
            v55 = 0;
            while (1)
            {
              v56 = *v17;
              v57 = *(_QWORD *)(v3 + v56);
              if (v57 == -1 || v57 >= *(_QWORD *)(v3 + *v6))
                break;
              v58 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v57);
              *(_QWORD *)(v3 + v56) = v57 + 1;
              v55 |= (unint64_t)(v58 & 0x7F) << v53;
              if (v58 < 0)
              {
                v53 += 7;
                v26 = v54++ >= 9;
                if (!v26)
                  continue;
              }
              goto LABEL_88;
            }
            *(_BYTE *)(v3 + *v52) = 1;
LABEL_88:
            PBRepeatedInt32Add();
          }
LABEL_91:
          PBReaderRecallMark();
          goto LABEL_119;
        }
LABEL_137:
        v78 = 0;
LABEL_139:
        v18 = (int *)MEMORY[0x1E0D82BC8];
LABEL_124:
        *(_BYTE *)(a1 + 108) |= 8u;
        *(_BYTE *)(a1 + 108) |= 1u;
        *(_BYTE *)(a1 + 108) |= 2u;
        *(_BYTE *)(a1 + 108) |= 4u;
        if ((v78 & 1) != 0)
        {
LABEL_133:
          v3 = *(_BYTE *)(v3 + *v18) == 0;
          if ((v16 & 1) != 0)
            goto LABEL_134;
          return v3;
        }
        v3 = 0;
        if ((v16 & 1) == 0)
          return v3;
LABEL_134:
        v81 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = 0;

        return v3;
      default:
        v37 = PBReaderSkipValueWithTag();
        v18 = (int *)MEMORY[0x1E0D82BC8];
        if (!v37)
          goto LABEL_136;
        goto LABEL_120;
    }
  }
}

void sub_189353DD0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189354110(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189354450(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189355004(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOVLDataTileReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 100))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOVLDataTileReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 104));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 96) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 100) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOVLDataTileReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOVLDataTileReadAllFrom_initialTag;
  Specified = GEOVLDataTileReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    objc_msgSend(*(id *)(a1 + 88), "readAll:", 1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 104));
  return Specified;
}

void sub_1893551A8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOVLDataTileReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOVLDataTileReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189355208(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOVLDataTileIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  BOOL v12;
  int v13;
  int v14;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int v19;
  unsigned int v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  int v24;
  unsigned int v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  int v29;
  unsigned int v30;
  unsigned int v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  int v35;
  unsigned int v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  int v40;
  unsigned int v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  int v45;
  _BOOL8 v46;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (!a1[*v4])
    {
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        if (v10 == -1 || v10 >= *(_QWORD *)&a1[*v3])
          break;
        v11 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        v12 = v7++ >= 9;
        if (v12)
        {
          v8 = 0;
          v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v13 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v14 = v8 & 7;
      if (v13 || v14 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEOTileCoordinateIsValid(a1))
            goto LABEL_81;
          goto LABEL_22;
        case 2u:
          if (v14 != 2)
          {
            if ((v8 & 7) != 0)
              goto LABEL_81;
            while (1)
            {
              v16 = *v2;
              v17 = *(_QWORD *)&a1[v16];
              if (v17 == -1 || v17 >= *(_QWORD *)&a1[*v3])
                goto LABEL_46;
              v18 = v17 + 1;
              v19 = *(char *)(*(_QWORD *)&a1[*v5] + v17);
              *(_QWORD *)&a1[v16] = v18;
              if (v19 < 0)
              {
                v20 = v14++;
                if (v20 <= 8)
                  continue;
              }
              goto LABEL_47;
            }
          }
          if (!PBReaderPlaceMark())
            goto LABEL_81;
LABEL_50:
          while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
          {
            v31 = a1[*v4];
            if (a1[*v4])
              break;
            while (1)
            {
              v32 = *v2;
              v33 = *(_QWORD *)&a1[v32];
              if (v33 == -1 || v33 >= *(_QWORD *)&a1[*v3])
                break;
              v34 = v33 + 1;
              v35 = *(char *)(*(_QWORD *)&a1[*v5] + v33);
              *(_QWORD *)&a1[v32] = v34;
              if (v35 < 0)
              {
                v12 = v31++ >= 9;
                if (!v12)
                  continue;
              }
              goto LABEL_50;
            }
            a1[*v4] = 1;
          }
          goto LABEL_22;
        case 3u:
          if (v14 != 2)
          {
            if ((v8 & 7) != 0)
              goto LABEL_81;
            while (1)
            {
              v21 = *v2;
              v22 = *(_QWORD *)&a1[v21];
              if (v22 == -1 || v22 >= *(_QWORD *)&a1[*v3])
                goto LABEL_46;
              v23 = v22 + 1;
              v24 = *(char *)(*(_QWORD *)&a1[*v5] + v22);
              *(_QWORD *)&a1[v21] = v23;
              if (v24 < 0)
              {
                v25 = v14++;
                if (v25 <= 8)
                  continue;
              }
              goto LABEL_47;
            }
          }
          if (!PBReaderPlaceMark())
            goto LABEL_81;
LABEL_60:
          while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
          {
            v36 = a1[*v4];
            if (a1[*v4])
              break;
            while (1)
            {
              v37 = *v2;
              v38 = *(_QWORD *)&a1[v37];
              if (v38 == -1 || v38 >= *(_QWORD *)&a1[*v3])
                break;
              v39 = v38 + 1;
              v40 = *(char *)(*(_QWORD *)&a1[*v5] + v38);
              *(_QWORD *)&a1[v37] = v39;
              if (v40 < 0)
              {
                v12 = v36++ >= 9;
                if (!v12)
                  continue;
              }
              goto LABEL_60;
            }
            a1[*v4] = 1;
          }
          goto LABEL_22;
        case 4u:
          if (v14 == 2)
          {
            if (!PBReaderPlaceMark())
            {
LABEL_81:
              PBReaderRecallMark();
              return 0;
            }
LABEL_70:
            while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
            {
              v41 = a1[*v4];
              if (a1[*v4])
                break;
              while (1)
              {
                v42 = *v2;
                v43 = *(_QWORD *)&a1[v42];
                if (v43 == -1 || v43 >= *(_QWORD *)&a1[*v3])
                  break;
                v44 = v43 + 1;
                v45 = *(char *)(*(_QWORD *)&a1[*v5] + v43);
                *(_QWORD *)&a1[v42] = v44;
                if (v45 < 0)
                {
                  v12 = v41++ >= 9;
                  if (!v12)
                    continue;
                }
                goto LABEL_70;
              }
              a1[*v4] = 1;
            }
LABEL_22:
            PBReaderRecallMark();
          }
          else
          {
            if ((v8 & 7) != 0)
              goto LABEL_81;
            while (1)
            {
              v26 = *v2;
              v27 = *(_QWORD *)&a1[v26];
              if (v27 == -1 || v27 >= *(_QWORD *)&a1[*v3])
                break;
              v28 = v27 + 1;
              v29 = *(char *)(*(_QWORD *)&a1[*v5] + v27);
              *(_QWORD *)&a1[v26] = v28;
              if (v29 < 0)
              {
                v30 = v14++;
                if (v30 <= 8)
                  continue;
              }
              goto LABEL_47;
            }
LABEL_46:
            a1[*v4] = 1;
          }
LABEL_47:
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_79;
          break;
        default:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_81;
          goto LABEL_47;
      }
    }
  }
LABEL_79:
  v46 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v46;
}

void sub_1893558E0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOVLDataTileIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 104));
  v2 = (*(_BYTE *)(a1 + 108) & 0x1F) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 104));
  return v2;
}

void sub_189355C54(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893560BC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOVLMetadataTileReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 v14;
  int *v15;
  BOOL v16;
  int *v17;
  int *v18;
  int *v19;
  char v20;
  unsigned int v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  BOOL v26;
  int v27;
  int v28;
  unint64_t v30;
  BOOL v31;
  int *v32;
  int v33;
  int v34;
  BOOL v35;
  GEOTileCoordinate *v36;
  void *v37;
  int v38;
  int *v39;
  char v40;
  unsigned int v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  char v46;
  char v47;
  unsigned int v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  char v52;
  char v53;
  int v54;
  char v55;
  void *v56;
  BOOL v58;
  char v59;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 76);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 72));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = (vaddv_s16((int16x4_t)(*(_QWORD *)&vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int8 *)(a1 + 84)), (uint16x4_t)0xFFFCFFFDFFFEFFFFLL) & 0xFF01FF01FF01FF01))+ (*(_BYTE *)(a1 + 84) & 1));
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v7])
    {
      case -3:
        v8 = 1;
        goto LABEL_6;
      case -2:
        v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v10 | (v11 > 3);
        if (((v14 | v8) & 1) != 0)
          v15 = 0;
        else
          v15 = a3;
        v16 = v14;
        v17 = (int *)MEMORY[0x1E0D82BF0];
        v18 = (int *)MEMORY[0x1E0D82BC8];
        if (*(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(v3 + *v6))
          goto LABEL_93;
        v59 = (v15 == 0) | v14;
        v19 = (int *)MEMORY[0x1E0D82BB8];
        v58 = v14;
        break;
      default:
        ++v11;
LABEL_6:
        v12 = v9;
        v13 = v10;
LABEL_8:
        ++v7;
        v9 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_BYTE *)(v3 + *v18))
      goto LABEL_93;
    v20 = 0;
    v21 = 0;
    v22 = 0;
    while (1)
    {
      v23 = *v17;
      v24 = *(_QWORD *)(v3 + v23);
      if (v24 == -1 || v24 >= *(_QWORD *)(v3 + *v6))
        break;
      v25 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v24);
      *(_QWORD *)(v3 + v23) = v24 + 1;
      v22 |= (unint64_t)(v25 & 0x7F) << v20;
      if ((v25 & 0x80) == 0)
        goto LABEL_23;
      v20 += 7;
      v26 = v21++ >= 9;
      if (v26)
      {
        v22 = 0;
        v27 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(_BYTE *)(v3 + *v18) = 1;
LABEL_23:
    v27 = *(unsigned __int8 *)(v3 + *v18);
    if (*(_BYTE *)(v3 + *v18))
      v22 = 0;
LABEL_25:
    v28 = v22 & 7;
    if (v27 || v28 == 4)
    {
LABEL_93:
      if (v16)
      {
        v53 = 1;
        goto LABEL_95;
      }
      if (v15)
      {
        while (1)
        {
          v54 = *v15++;
          v55 = 4;
          switch(v54)
          {
            case 0:
              goto LABEL_105;
            case 1:
              goto LABEL_104;
            case 2:
              v55 = 2;
              goto LABEL_104;
            case 3:
              v55 = 8;
              goto LABEL_104;
            case 4:
              v55 = 16;
              goto LABEL_104;
            case 5:
              v55 = 1;
LABEL_104:
              *(_BYTE *)(a1 + 84) |= v55;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_105;
    }
    v30 = v22 >> 3;
    v31 = v16;
    if ((v59 & 1) == 0)
    {
      v32 = v15;
      do
      {
        v34 = *v32++;
        v33 = v34;
        v31 = v34 != 0;
        if (v34)
          v35 = v33 == (_DWORD)v30;
        else
          v35 = 1;
      }
      while (!v35);
    }
    switch((int)v30)
    {
      case 1:
        if (!v31)
          goto LABEL_76;
        if ((*(_BYTE *)(a1 + 84) & 4) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_109;
          v36 = objc_alloc_init(GEOTileCoordinate);
          if (GEOTileCoordinateReadAllFrom((uint64_t)v36, (void *)v3))
          {
            PBReaderRecallMark();
            v37 = *(void **)(a1 + 48);
            *(_QWORD *)(a1 + 48) = v36;

            --v7;
            goto LABEL_60;
          }
          goto LABEL_110;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_109;
        v7 += *(unsigned __int8 *)(a1 + 84) << 29 >> 31;
        goto LABEL_90;
      case 2:
        if (!v31 || (*(_BYTE *)(a1 + 84) & 2) != 0)
          goto LABEL_76;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_109;
        v36 = objc_alloc_init(GEOVLBuild);
        if (!GEOVLBuildReadAllFrom((uint64_t)v36, (void *)v3))
          goto LABEL_110;
        PBReaderRecallMark();
        -[GEOVLMetadataTile _addNoFlagsBuild:](a1, v36);
        goto LABEL_59;
      case 3:
        if (!v31 || (*(_BYTE *)(a1 + 84) & 8) != 0)
          goto LABEL_76;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_109;
        v36 = objc_alloc_init(GEOVLPrecision);
        if (!GEOVLPrecisionReadAllFrom((uint64_t)v36, (void *)v3))
          goto LABEL_110;
        PBReaderRecallMark();
        -[GEOVLMetadataTile _addNoFlagsPrecision:](a1, v36);
        goto LABEL_59;
      case 4:
        if (!v31 || (*(_BYTE *)(a1 + 84) & 0x10) != 0)
          goto LABEL_76;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_109;
        v36 = objc_alloc_init(GEOVLDataTile);
        if (GEOVLDataTileReadAllFrom((uint64_t)v36, (void *)v3, v9 & 1))
        {
          PBReaderRecallMark();
          -[GEOVLMetadataTile _addNoFlagsTile:](a1, v36);
LABEL_59:

LABEL_60:
          v16 = v58;
LABEL_90:
          v18 = (int *)MEMORY[0x1E0D82BC8];
LABEL_91:
          if (!v16 && v7 == 0 || *(_QWORD *)(v3 + *v17) >= *(_QWORD *)(v3 + *v6))
            goto LABEL_93;
          continue;
        }
LABEL_110:

        v53 = 0;
        v16 = v58;
LABEL_111:
        v18 = (int *)MEMORY[0x1E0D82BC8];
LABEL_95:
        *(_BYTE *)(a1 + 84) |= 4u;
        *(_BYTE *)(a1 + 84) |= 2u;
        *(_BYTE *)(a1 + 84) |= 8u;
        *(_BYTE *)(a1 + 84) |= 0x10u;
        *(_BYTE *)(a1 + 84) |= 1u;
        if ((v53 & 1) != 0)
        {
LABEL_105:
          v3 = *(_BYTE *)(v3 + *v18) == 0;
          if (v16)
            goto LABEL_106;
          return v3;
        }
        v3 = 0;
        if (!v16)
          return v3;
LABEL_106:
        v56 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = 0;

        return v3;
      case 5:
        if (v31 && (*(_BYTE *)(a1 + 84) & 1) == 0)
        {
          if (v28 == 2)
          {
            if (!PBReaderPlaceMark())
            {
LABEL_109:
              v53 = 0;
              goto LABEL_111;
            }
            while (1)
            {
              v39 = (int *)MEMORY[0x1E0D82BC8];
              if (*(_QWORD *)(v3 + *v17) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + (int)*MEMORY[0x1E0D82BC8]))
                break;
              v40 = 0;
              v41 = 0;
              v42 = 0;
              while (1)
              {
                v43 = *v17;
                v44 = *(_QWORD *)(v3 + v43);
                if (v44 == -1 || v44 >= *(_QWORD *)(v3 + *v6))
                  break;
                v45 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v44);
                *(_QWORD *)(v3 + v43) = v44 + 1;
                v42 |= (unint64_t)(v45 & 0x7F) << v40;
                if (v45 < 0)
                {
                  v40 += 7;
                  v26 = v41++ >= 9;
                  if (!v26)
                    continue;
                }
                goto LABEL_75;
              }
              *(_BYTE *)(v3 + *v39) = 1;
LABEL_75:
              PBRepeatedInt32Add();
            }
            PBReaderRecallMark();
          }
          else
          {
            v47 = 0;
            v48 = 0;
            v49 = 0;
            while (1)
            {
              v50 = *v17;
              v51 = *(_QWORD *)(v3 + v50);
              if (v51 == -1 || v51 >= *(_QWORD *)(v3 + *v6))
                break;
              v52 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v51);
              *(_QWORD *)(v3 + v50) = v51 + 1;
              v49 |= (unint64_t)(v52 & 0x7F) << v47;
              if (v52 < 0)
              {
                v47 += 7;
                v26 = v48++ >= 9;
                if (!v26)
                  continue;
              }
              goto LABEL_89;
            }
            *(_BYTE *)(v3 + *v18) = 1;
LABEL_89:
            PBRepeatedInt32Add();
          }
          goto LABEL_90;
        }
LABEL_76:
        v46 = PBReaderSkipValueWithTag();
        v18 = (int *)MEMORY[0x1E0D82BC8];
        if ((v46 & 1) == 0)
        {
LABEL_108:
          v53 = 0;
          goto LABEL_95;
        }
        goto LABEL_91;
      default:
        v38 = PBReaderSkipValueWithTag();
        v18 = (int *)MEMORY[0x1E0D82BC8];
        if (!v38)
          goto LABEL_108;
        goto LABEL_91;
    }
  }
}

void sub_189356988(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189356CBC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189356FF0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189357324(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893582C8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOVLMetadataTileCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  _BYTE v29[128];
  _BYTE v30[128];
  _BYTE v31[128];
  uint64_t v32;

  v32 = *MEMORY[0x1E0C80C00];
  objc_msgSend(a1[6], "readAll:", 1);
  v27 = 0u;
  v28 = 0u;
  v25 = 0u;
  v26 = 0u;
  v2 = a1[5];
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v25, v31, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v26;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v26 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v25 + 1) + 8 * v6++), "readAll:", 1);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v25, v31, 16);
    }
    while (v4);
  }

  v23 = 0u;
  v24 = 0u;
  v21 = 0u;
  v22 = 0u;
  v7 = a1[7];
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v21, v30, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v22;
    do
    {
      v11 = 0;
      do
      {
        if (*(_QWORD *)v22 != v10)
          objc_enumerationMutation(v7);
        objc_msgSend(*(id *)(*((_QWORD *)&v21 + 1) + 8 * v11++), "readAll:", 1);
      }
      while (v9 != v11);
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v21, v30, 16);
    }
    while (v9);
  }

  v19 = 0u;
  v20 = 0u;
  v17 = 0u;
  v18 = 0u;
  v12 = a1[8];
  v13 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v17, v29, 16);
  if (v13)
  {
    v14 = v13;
    v15 = *(_QWORD *)v18;
    do
    {
      v16 = 0;
      do
      {
        if (*(_QWORD *)v18 != v15)
          objc_enumerationMutation(v12);
        objc_msgSend(*(id *)(*((_QWORD *)&v17 + 1) + 8 * v16++), "readAll:", 1, (_QWORD)v17);
      }
      while (v14 != v16);
      v14 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v17, v29, 16);
    }
    while (v14);
  }

}

unint64_t GEOVLMetadataTileReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 76))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOVLMetadataTileReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 80));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 72) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 76) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOVLMetadataTileReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOVLMetadataTileReadAllFrom_initialTag;
  Specified = GEOVLMetadataTileReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOVLMetadataTileCallReadAllRecursiveWithoutSynchronized((id *)a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 80));
  return Specified;
}

void sub_18935869C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOVLMetadataTileReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOVLMetadataTileReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1893586FC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOVLMetadataTileIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  BOOL v12;
  int v13;
  int v14;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int v19;
  unsigned int v20;
  unsigned int v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  int v25;
  _BOOL8 v26;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (!a1[*v4])
    {
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        if (v10 == -1 || v10 >= *(_QWORD *)&a1[*v3])
          break;
        v11 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        v12 = v7++ >= 9;
        if (v12)
        {
          v8 = 0;
          v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v13 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v14 = v8 & 7;
      if (v13 || v14 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v14 == 2 && PBReaderPlaceMark() && GEOTileCoordinateIsValid(a1))
            goto LABEL_36;
          goto LABEL_58;
        case 2u:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEOVLBuildIsValid(a1))
            goto LABEL_58;
          goto LABEL_36;
        case 3u:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEOVLPrecisionIsValid(a1))
            goto LABEL_58;
          goto LABEL_36;
        case 4u:
          if (v14 == 2 && PBReaderPlaceMark() && GEOVLDataTileIsValid(a1))
            goto LABEL_36;
          goto LABEL_58;
        case 5u:
          if (v14 == 2)
          {
            if (!PBReaderPlaceMark())
            {
LABEL_58:
              PBReaderRecallMark();
              return 0;
            }
LABEL_47:
            while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
            {
              v21 = a1[*v4];
              if (a1[*v4])
                break;
              while (1)
              {
                v22 = *v2;
                v23 = *(_QWORD *)&a1[v22];
                if (v23 == -1 || v23 >= *(_QWORD *)&a1[*v3])
                  break;
                v24 = v23 + 1;
                v25 = *(char *)(*(_QWORD *)&a1[*v5] + v23);
                *(_QWORD *)&a1[v22] = v24;
                if (v25 < 0)
                {
                  v12 = v21++ >= 9;
                  if (!v12)
                    continue;
                }
                goto LABEL_47;
              }
              a1[*v4] = 1;
            }
LABEL_36:
            PBReaderRecallMark();
          }
          else
          {
            if ((v8 & 7) != 0)
              goto LABEL_58;
            while (1)
            {
              v16 = *v2;
              v17 = *(_QWORD *)&a1[v16];
              if (v17 == -1 || v17 >= *(_QWORD *)&a1[*v3])
                break;
              v18 = v17 + 1;
              v19 = *(char *)(*(_QWORD *)&a1[*v5] + v17);
              *(_QWORD *)&a1[v16] = v18;
              if (v19 < 0)
              {
                v20 = v14++;
                if (v20 <= 8)
                  continue;
              }
              goto LABEL_37;
            }
            a1[*v4] = 1;
          }
LABEL_37:
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_57;
          break;
        default:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_58;
          goto LABEL_37;
      }
    }
  }
LABEL_57:
  v26 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v26;
}

BOOL GEOVLPrecisionIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  BOOL v12;
  int v13;
  int v14;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int v19;
  unsigned int v20;
  unsigned int v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  int v25;
  _BOOL8 v26;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        if (v10 == -1 || v10 >= *(_QWORD *)&a1[*v3])
          break;
        v11 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        v12 = v7++ >= 9;
        if (v12)
        {
          v8 = 0;
          v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v13 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v14 = v8 & 7;
      if (v13 || v14 == 4)
        break;
      if ((v8 >> 3) == 1)
      {
        if (v14 == 2)
        {
          if (!PBReaderPlaceMark())
          {
LABEL_43:
            PBReaderRecallMark();
            return 0;
          }
LABEL_29:
          while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
          {
            v21 = a1[*v4];
            if (a1[*v4])
              break;
            while (1)
            {
              v22 = *v2;
              v23 = *(_QWORD *)&a1[v22];
              if (v23 == -1 || v23 >= *(_QWORD *)&a1[*v3])
                break;
              v24 = v23 + 1;
              v25 = *(char *)(*(_QWORD *)&a1[*v5] + v23);
              *(_QWORD *)&a1[v22] = v24;
              if (v25 < 0)
              {
                v12 = v21++ >= 9;
                if (!v12)
                  continue;
              }
              goto LABEL_29;
            }
            a1[*v4] = 1;
          }
          PBReaderRecallMark();
        }
        else
        {
          if ((v8 & 7) != 0)
            goto LABEL_43;
          while (1)
          {
            v16 = *v2;
            v17 = *(_QWORD *)&a1[v16];
            if (v17 == -1 || v17 >= *(_QWORD *)&a1[*v3])
              break;
            v18 = v17 + 1;
            v19 = *(char *)(*(_QWORD *)&a1[*v5] + v17);
            *(_QWORD *)&a1[v16] = v18;
            if (v19 < 0)
            {
              v20 = v14++;
              if (v20 <= 8)
                continue;
            }
            goto LABEL_40;
          }
          a1[*v4] = 1;
        }
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_43;
      }
LABEL_40:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v26 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v26;
}

void sub_18935909C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOVLMetadataTileIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  v2 = (*(_BYTE *)(a1 + 84) & 0x3F) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 80));
  return v2;
}

void sub_1893596B0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOVLPrecisionReadAllFrom(uint64_t a1, void *a2)
{
  char *v2;
  int *v3;
  int *v4;
  int *v5;
  int *v6;
  char v7;
  unsigned int v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  BOOL v13;
  int v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  char v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  _BOOL8 v29;

  v2 = a2;
  objc_sync_enter(v2);
  if (v2)
  {
    v3 = (int *)MEMORY[0x1E0D82BF0];
    v4 = (int *)MEMORY[0x1E0D82BD8];
    v5 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v2[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v2[*MEMORY[0x1E0D82BD8]])
    {
      v6 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v2[*v5])
          break;
        v7 = 0;
        v8 = 0;
        v9 = 0;
        while (1)
        {
          v10 = *v3;
          v11 = *(_QWORD *)&v2[v10];
          if (v11 == -1 || v11 >= *(_QWORD *)&v2[*v4])
            break;
          v12 = *(_BYTE *)(*(_QWORD *)&v2[*v6] + v11);
          *(_QWORD *)&v2[v10] = v11 + 1;
          v9 |= (unint64_t)(v12 & 0x7F) << v7;
          if ((v12 & 0x80) == 0)
            goto LABEL_13;
          v7 += 7;
          v13 = v8++ >= 9;
          if (v13)
          {
            v9 = 0;
            v14 = v2[*v5];
            goto LABEL_15;
          }
        }
        v2[*v5] = 1;
LABEL_13:
        v14 = v2[*v5];
        if (v2[*v5])
          v9 = 0;
LABEL_15:
        v15 = v9 & 7;
        if (v14 || v15 == 4)
          break;
        if ((v9 >> 3) == 1)
        {
          if (v15 == 2)
          {
            if (!PBReaderPlaceMark())
              goto LABEL_47;
            while (*(_QWORD *)&v2[*v3] < *(_QWORD *)&v2[*v4] && !v2[*v5])
            {
              v17 = 0;
              v18 = 0;
              v19 = 0;
              while (1)
              {
                v20 = *v3;
                v21 = *(_QWORD *)&v2[v20];
                if (v21 == -1 || v21 >= *(_QWORD *)&v2[*v4])
                  break;
                v22 = *(_BYTE *)(*(_QWORD *)&v2[*v6] + v21);
                *(_QWORD *)&v2[v20] = v21 + 1;
                v19 |= (unint64_t)(v22 & 0x7F) << v17;
                if (v22 < 0)
                {
                  v17 += 7;
                  v13 = v18++ >= 9;
                  if (!v13)
                    continue;
                }
                goto LABEL_32;
              }
              v2[*v5] = 1;
LABEL_32:
              PBRepeatedUInt32Add();
            }
            PBReaderRecallMark();
          }
          else
          {
            v23 = 0;
            v24 = 0;
            v25 = 0;
            while (1)
            {
              v26 = *v3;
              v27 = *(_QWORD *)&v2[v26];
              if (v27 == -1 || v27 >= *(_QWORD *)&v2[*v4])
                break;
              v28 = *(_BYTE *)(*(_QWORD *)&v2[*v6] + v27);
              *(_QWORD *)&v2[v26] = v27 + 1;
              v25 |= (unint64_t)(v28 & 0x7F) << v23;
              if (v28 < 0)
              {
                v23 += 7;
                v13 = v24++ >= 9;
                if (!v13)
                  continue;
              }
              goto LABEL_44;
            }
            v2[*v5] = 1;
LABEL_44:
            PBRepeatedUInt32Add();
          }
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_47;
        }
      }
      while (*(_QWORD *)&v2[*v3] < *(_QWORD *)&v2[*v4]);
    }
    v29 = v2[*v5] == 0;
  }
  else
  {
LABEL_47:
    v29 = 0;
  }
  objc_sync_exit(v2);

  return v29;
}

void sub_18935A280(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOVLPrecisionReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOVLPrecisionReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18935A2E4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void GeoCodecsVMP4DecodingOptions::~GeoCodecsVMP4DecodingOptions(GeoCodecsVMP4DecodingOptions *this)
{
  char *v2;
  char *v3;
  uint64_t v4;

  v2 = (char *)this + 40;
  v3 = (char *)*((_QWORD *)this + 8);
  if (v3 == v2)
  {
    v4 = 4;
    v3 = v2;
  }
  else
  {
    if (!v3)
      goto LABEL_6;
    v4 = 5;
  }
  (*(void (**)(void))(*(_QWORD *)v3 + 8 * v4))();
LABEL_6:
  if (*((char *)this + 23) < 0)
    operator delete(*(void **)this);
}

void sub_18935A68C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18935A70C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{

  _Unwind_Resume(a1);
}

void sub_18935A78C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{

  _Unwind_Resume(a1);
}

void sub_18935A80C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{

  _Unwind_Resume(a1);
}

void sub_18935A88C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{

  _Unwind_Resume(a1);
}

void sub_18935A90C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{

  _Unwind_Resume(a1);
}

void sub_18935A98C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{

  _Unwind_Resume(a1);
}

void sub_18935AA0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{

  _Unwind_Resume(a1);
}

void sub_18935B43C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_18935B4E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18935B564(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18935B690(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18935B710(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void GEORoadEdgeFlip(void *a1)
{
  uint64_t v1;
  id v2;

  v2 = a1;
  v1 = objc_msgSend(v2, "get");
  *(int8x16_t *)(v1 + 8) = vextq_s8(*(int8x16_t *)(v1 + 8), *(int8x16_t *)(v1 + 8), 8uLL);
  *(int8x16_t *)(v1 + 24) = vextq_s8(*(int8x16_t *)(v1 + 24), *(int8x16_t *)(v1 + 24), 8uLL);
  *(int8x16_t *)(v1 + 40) = vextq_s8(*(int8x16_t *)(v1 + 40), *(int8x16_t *)(v1 + 40), 8uLL);

}

void sub_18935B778(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18935B9D8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18935BAC8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18935BBC4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18935BC98(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id a9)
{

  _Unwind_Resume(a1);
}

void sub_18935BD14(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18935C034(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

id GEOVectorTransitLineAlongLink(void *a1, uint64_t a2)
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;

  v3 = a1;
  objc_msgSend(v3, "containingTile");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = v4;
  if (v4)
  {
    objc_msgSend(v4, "transitLines");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = objc_msgSend(v5, "transitLinkLineIndices");
    v8 = 0;
    if (v6)
    {
      v9 = v7;
      if (v7)
      {
        v10 = *(_QWORD *)objc_msgSend(v3, "transitIndexRange");
        if (v10 + a2 >= (unint64_t)objc_msgSend(v5, "transitLinkLineIndicesCount")
          || (v11 = *(_QWORD *)(v9 + 8 * (v10 + a2)), v11 >= objc_msgSend(v5, "transitLineCount")))
        {
          v8 = 0;
        }
        else
        {
          objc_msgSend(v6, "objectAtIndex:", v11);
          v8 = (void *)objc_claimAutoreleasedReturnValue();
        }
      }
    }

  }
  else
  {
    v8 = 0;
  }

  return v8;
}

void sub_18935C13C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

float GEOBuildingFootprintBaseHeight(void *a1, unint64_t a2)
{
  id v3;
  float v4;

  v3 = a1;
  v4 = geo::codec::buildingFootprintBaseHeight(objc_msgSend(v3, "get"), a2);

  return v4;
}

void sub_18935C1B0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

float GEOBuildingFootprintExtrusionHeight(void *a1, unint64_t a2)
{
  id v3;
  float v4;

  v3 = a1;
  v4 = geo::codec::buildingFootprintExtrusionHeight(objc_msgSend(v3, "get"), a2);

  return v4;
}

void sub_18935C204(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

_QWORD *GEOMultiSectionFeaturePoints(void *a1, unint64_t a2, _QWORD *a3)
{
  id v5;
  _QWORD *v6;

  v5 = a1;
  v6 = geo::codec::multiSectionFeaturePoints((_QWORD *)objc_msgSend(v5, "get"), a2, a3);

  return v6;
}

void sub_18935C260(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

uint64_t GEOMultiSectionFeatureElevations(void *a1, unint64_t a2, _QWORD *a3)
{
  id v5;
  uint64_t v6;

  v5 = a1;
  v6 = geo::codec::multiSectionFeatureElevations(objc_msgSend(v5, "get"), a2, a3);

  return v6;
}

void sub_18935C2BC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

_QWORD *GEOMultiSectionFeaturePointsWithElevation(void *a1, unint64_t a2, _QWORD *a3, _QWORD *a4)
{
  id v7;
  _QWORD *v8;

  v7 = a1;
  v8 = geo::codec::multiSectionFeaturePointsWithElevation((_QWORD *)objc_msgSend(v7, "get"), a2, a3, a4);

  return v8;
}

void sub_18935C320(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

_QWORD *GEOMultiSectionFeatureGetGEOVectorTilePoints(void *a1, unint64_t a2, _QWORD *a3)
{
  id v5;
  _QWORD *v6;

  v5 = a1;
  v6 = geo::codec::multiSectionFeaturePoints((_QWORD *)objc_msgSend(v5, "get"), a2, a3);

  return v6;
}

void sub_18935C37C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

id GEOBuildingFootprintFeatureAtIndex(void *a1, unint64_t a2)
{
  id v3;
  void *v4;
  void *v5;
  uint64_t v6;

  v3 = a1;
  if (objc_msgSend(v3, "totalBuildingFootprintsCount") <= a2)
  {
    v5 = 0;
  }
  else
  {
    if (objc_msgSend(v3, "nonOverlappingBuildingFootprintsCount") <= a2)
    {
      v6 = objc_msgSend(v3, "nonOverlappingBuildingFootprintsCount");
      objc_msgSend(v3, "overlapBuildingFootprints");
      v4 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v4, "objectAtIndex:", a2 - v6);
    }
    else
    {
      objc_msgSend(v3, "buildingFootprints");
      v4 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v4, "objectAtIndex:", a2);
    }
    v5 = (void *)objc_claimAutoreleasedReturnValue();

  }
  return v5;
}

void sub_18935C434(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

uint64_t GEOTransitLinkPoints(void *a1, uint64_t a2, _QWORD *a3)
{
  id v5;
  uint64_t v6;

  v5 = a1;
  v6 = geo::codec::transitLinkPoints(objc_msgSend(v5, "get"), a2, a3);

  return v6;
}

void sub_18935C4A4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

geo::codec *GEOMultiSectionFeatureCharacteristicPoints(void *a1, GeoCodecsRoadFeature *a2)
{
  id v3;
  std::__shared_weak_count **v4;
  unint64_t *v5;
  geo::codec *v6;

  v3 = a1;
  v4 = (std::__shared_weak_count **)objc_msgSend(v3, "getRoad");
  v6 = geo::codec::multiSectionFeatureCharacteristicPoints(v4, a2, v5);

  return v6;
}

void sub_18935C4F0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

uint64_t GEOFeatureGetLocalizedLabelCount(void *a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;

  v1 = a1;
  v2 = objc_msgSend(v1, "get");
  if (v2)
    v3 = *(unsigned __int8 *)(v2 + 73);
  else
    v3 = 0;

  return v3;
}

void sub_18935C53C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void GEOFeatureGetLocalizedLabel(void *a1, unint64_t a2, unint64_t *a3, unint64_t *a4)
{
  id v7;
  void *v8;
  void *v9;
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v12;
  uint64_t v13;
  std::__shared_weak_count *v14;

  v7 = a1;
  objc_msgSend(v7, "containingTile");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = v8;
  if (v8)
  {
    objc_msgSend(v8, "vectorTilePtr");
  }
  else
  {
    v13 = 0;
    v14 = 0;
  }
  geo::codec::vectorTileGetLocalizedLabel(&v13, objc_msgSend(v7, "labelCount", v13), objc_msgSend(v7, "labelOffset"), a2, a3, a4);
  v10 = v14;
  if (v14)
  {
    p_shared_owners = (unint64_t *)&v14->__shared_owners_;
    do
      v12 = __ldaxr(p_shared_owners);
    while (__stlxr(v12 - 1, p_shared_owners));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }

}

void sub_18935C624(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void GEOFeatureGetLocalizedShield(void *a1, unint64_t a2, unint64_t *a3, _QWORD *a4, _QWORD *a5)
{
  id v9;

  v9 = a1;
  geo::codec::featureGetLocalizedShield(objc_msgSend(v9, "get"), a2, a3, a4, a5);

}

void sub_18935C6AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

uint64_t getIndexforMultiSectionFeature(void *a1, void *a2)
{
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;

  v3 = a1;
  v4 = a2;
  v5 = objc_msgSend(v3, "getRoad");
  v6 = 1022611261 * ((unint64_t)(v5 - objc_msgSend(v4, "getRoad")) >> 3);

  return v6;
}

void sub_18935C728(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void GEOFeatureGetNativeLabel(void *a1, unint64_t a2, unint64_t *a3, unint64_t *a4)
{
  id v7;

  v7 = a1;
  geo::codec::featureGetLocalizedLabel((uint64_t *)objc_msgSend(v7, "get"), a2, a3, a4);

}

void sub_18935C790(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

id GEOVectorTileRetain(void *a1)
{
  id v1;
  void *v2;
  id v3;

  v1 = a1;
  v2 = v1;
  if (v1)
    v3 = v1;

  return v2;
}

void GEOVectorTileRelease(void *a1)
{
  id v1;
  id v2;

  v1 = a1;
  if (v1)
  {
    v2 = v1;

    v1 = v2;
  }

}

id GEOMultiSectionFeatureRetain(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  void *v4;
  id v5;

  v1 = a1;
  v2 = v1;
  if (v1)
  {
    objc_msgSend(v1, "feature");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "containingTile");
    v4 = (void *)objc_claimAutoreleasedReturnValue();

    v5 = v2;
  }

  return v2;
}

void sub_18935C868(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void GEOMultiSectionFeatureRelease(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  id v4;

  v1 = a1;
  if (v1)
  {
    v4 = v1;
    objc_msgSend(v1, "feature");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "containingTile");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    GEOVectorTileRelease(v3);

    v1 = v4;
  }

}

void sub_18935C8D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

_DWORD *GEOMultiSectionFeatureBounds(void *a1)
{
  id v1;
  _DWORD *v2;

  v1 = a1;
  v2 = geo::codec::multiSectionFeatureBounds((float *)objc_msgSend(v1, "get"));

  return v2;
}

void sub_18935C92C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void GEOFeatureGetNativeShield(void *a1, unint64_t a2, _QWORD *a3, _QWORD *a4, _QWORD *a5)
{
  id v9;

  v9 = a1;
  geo::codec::featureGetNativeShield(objc_msgSend(v9, "get"), a2, a3, a4, a5);

}

void sub_18935C998(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

BOOL GEOMultiSectionFeatureIsSameRoad(void *a1, void *a2)
{
  id v3;
  id v4;
  geo::codec *v5;
  const GeoCodecsRoadFeature *v6;
  const GeoCodecsRoadFeature *v7;
  _BOOL8 IsSameRoad;

  v3 = a1;
  v4 = a2;
  v5 = (geo::codec *)objc_msgSend(v3, "getRoad");
  v6 = (const GeoCodecsRoadFeature *)objc_msgSend(v4, "getRoad");
  IsSameRoad = geo::codec::multiSectionFeatureIsSameRoad(v5, v6, v7);

  return IsSameRoad;
}

void sub_18935CA10(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void GEOMultiSectionFeatureGetSectionData(void *a1, _QWORD *a2, _QWORD *a3, _QWORD *a4)
{
  id v7;
  uint64_t v8;

  v7 = a1;
  v8 = 0;
  geo::codec::multiSectionFeatureGetSectionData(objc_msgSend(v7, "get"), &v8, a3, a4);
  *a2 = v8;

}

void sub_18935CA7C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id a9)
{

  _Unwind_Resume(a1);
}

void std::__call_once_proxy[abi:ne180100]<std::tuple<-[GEOVectorTile lines]::$_1 &&>>(_QWORD **a1)
{
  _QWORD *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t i;
  void *v7;
  GEOMultiSectionFeature *v8;

  v1 = (_QWORD *)**a1;
  v2 = objc_msgSend(objc_alloc(MEMORY[0x1E0C99DE8]), "initWithCapacity:", 0xCF3CF3CF3CF3CF3DLL* ((uint64_t)(*(_QWORD *)(*(_QWORD *)(*v1 + 8) + 40) - *(_QWORD *)(*(_QWORD *)(*v1 + 8) + 32)) >> 3));
  v3 = *(void **)(*v1 + 24);
  *(_QWORD *)(*v1 + 24) = v2;

  v4 = *(_QWORD *)(*v1 + 8);
  v5 = *(_QWORD *)(v4 + 32);
  for (i = *(_QWORD *)(v4 + 40); v5 != i; v5 += 168)
  {
    v7 = *(void **)(*v1 + 24);
    v8 = -[GEOMultiSectionFeature initWithRoad:withVectorTile:]([GEOMultiSectionFeature alloc], "initWithRoad:withVectorTile:", v5, *v1);
    objc_msgSend(v7, "addObject:", v8);

  }
}

void sub_18935CBF4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void std::__call_once_proxy[abi:ne180100]<std::tuple<-[GEOVectorTile coastlines]::$_2 &&>>(_QWORD **a1)
{
  _QWORD *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t i;
  void *v7;
  id v8;

  v1 = (_QWORD *)**a1;
  v2 = objc_msgSend(objc_alloc(MEMORY[0x1E0C99DE8]), "initWithCapacity:", 0x4EC4EC4EC4EC4EC5* ((uint64_t)(*(_QWORD *)(*(_QWORD *)(*v1 + 8) + 72) - *(_QWORD *)(*(_QWORD *)(*v1 + 8) + 64)) >> 3));
  v3 = *(void **)(*v1 + 32);
  *(_QWORD *)(*v1 + 32) = v2;

  v4 = *(_QWORD *)(*v1 + 8);
  v5 = *(_QWORD *)(v4 + 64);
  for (i = *(_QWORD *)(v4 + 72); v5 != i; v5 += 104)
  {
    v7 = *(void **)(*v1 + 32);
    v8 = -[GEOMultiSectionFeature init:withVectorTile:]([GEOMultiSectionFeature alloc], "init:withVectorTile:", v5, *v1);
    objc_msgSend(v7, "addObject:", v8);

  }
}

void sub_18935CCD0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void std::__call_once_proxy[abi:ne180100]<std::tuple<-[GEOVectorTile buildingFootprints]::$_3 &&>>(_QWORD **a1)
{
  _QWORD *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t i;
  void *v7;
  id v8;

  v1 = (_QWORD *)**a1;
  v2 = objc_msgSend(objc_alloc(MEMORY[0x1E0C99DE8]), "initWithCapacity:", 0xF0F0F0F0F0F0F0F1* ((uint64_t)(*(_QWORD *)(*(_QWORD *)(*v1 + 8) + 288) - *(_QWORD *)(*(_QWORD *)(*v1 + 8) + 280)) >> 3));
  v3 = *(void **)(*v1 + 40);
  *(_QWORD *)(*v1 + 40) = v2;

  v4 = *(_QWORD *)(*v1 + 8);
  v5 = *(_QWORD *)(v4 + 280);
  for (i = *(_QWORD *)(v4 + 288); v5 != i; v5 += 136)
  {
    v7 = *(void **)(*v1 + 40);
    v8 = -[GEOBuildingFootprintFeature init:withVectorTile:]([GEOBuildingFootprintFeature alloc], "init:withVectorTile:", v5, *v1);
    objc_msgSend(v7, "addObject:", v8);

  }
}

void sub_18935CDA4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void std::__call_once_proxy[abi:ne180100]<std::tuple<-[GEOVectorTile junctionsWithoutFeature]::$_4 &&>>(uint64_t ***a1)
{
  uint64_t *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  void *v7;
  id v8;

  v1 = **a1;
  v2 = objc_msgSend(objc_alloc(MEMORY[0x1E0C99DE8]), "initWithCapacity:", *(_QWORD *)(*(_QWORD *)(*v1 + 8) + 696));
  v3 = *(void **)(*v1 + 72);
  *(_QWORD *)(*v1 + 72) = v2;

  v4 = *v1;
  if (*(_QWORD *)(*(_QWORD *)(*v1 + 8) + 696))
  {
    v5 = 0;
    v6 = 0;
    do
    {
      v7 = *(void **)(v4 + 72);
      v8 = -[GEOConnectivityJunction init:]([GEOConnectivityJunction alloc], "init:", *(_QWORD *)(*(_QWORD *)(*v1 + 8) + 688) + v5);
      objc_msgSend(v7, "addObject:", v8);

      ++v6;
      v4 = *v1;
      v5 += 32;
    }
    while (v6 < *(_QWORD *)(*(_QWORD *)(*v1 + 8) + 696));
  }
}

void sub_18935CE7C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void std::__call_once_proxy[abi:ne180100]<std::tuple<-[GEOVectorTile transitLines]::$_5 &&>>(_QWORD **a1)
{
  _QWORD *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t i;
  void *v7;
  id v8;

  v1 = (_QWORD *)**a1;
  v2 = objc_msgSend(objc_alloc(MEMORY[0x1E0C99DE8]), "initWithCapacity:", 0x4EC4EC4EC4EC4EC5* ((uint64_t)(*(_QWORD *)(*(_QWORD *)(*v1 + 8) + 1288) - *(_QWORD *)(*(_QWORD *)(*v1 + 8) + 1280)) >> 3));
  v3 = *(void **)(*v1 + 48);
  *(_QWORD *)(*v1 + 48) = v2;

  v4 = *(_QWORD *)(*v1 + 8);
  v5 = *(_QWORD *)(v4 + 1280);
  for (i = *(_QWORD *)(v4 + 1288); v5 != i; v5 += 104)
  {
    v7 = *(void **)(*v1 + 48);
    v8 = -[GEOVectorTransitLine init:withVectorTile:]([GEOVectorTransitLine alloc], "init:withVectorTile:", v5, *v1);
    objc_msgSend(v7, "addObject:", v8);

  }
}

void sub_18935CF60(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void std::__call_once_proxy[abi:ne180100]<std::tuple<-[GEOVectorTile transitLinks]::$_6 &&>>(_QWORD **a1)
{
  _QWORD *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t i;
  void *v7;
  id v8;

  v1 = (_QWORD *)**a1;
  v2 = objc_msgSend(objc_alloc(MEMORY[0x1E0C99DE8]), "initWithCapacity:", 0xD37A6F4DE9BD37A7* ((uint64_t)(*(_QWORD *)(*(_QWORD *)(*v1 + 8) + 1352) - *(_QWORD *)(*(_QWORD *)(*v1 + 8) + 1344)) >> 3));
  v3 = *(void **)(*v1 + 56);
  *(_QWORD *)(*v1 + 56) = v2;

  v4 = *(_QWORD *)(*v1 + 8);
  v5 = *(_QWORD *)(v4 + 1344);
  for (i = *(_QWORD *)(v4 + 1352); v5 != i; v5 += 184)
  {
    v7 = *(void **)(*v1 + 56);
    v8 = -[GEOTransitLink init:withVectorTile:]([GEOTransitLink alloc], "init:withVectorTile:", v5, *v1);
    objc_msgSend(v7, "addObject:", v8);

  }
}

void sub_18935D044(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void std::__call_once_proxy[abi:ne180100]<std::tuple<-[GEOVectorTile overlapBuildingFootprints]::$_7 &&>>(_QWORD **a1)
{
  _QWORD *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t i;
  void *v7;
  id v8;

  v1 = (_QWORD *)**a1;
  v2 = objc_msgSend(objc_alloc(MEMORY[0x1E0C99DE8]), "initWithCapacity:", 0xF0F0F0F0F0F0F0F1* ((uint64_t)(*(_QWORD *)(*(_QWORD *)(*v1 + 8) + 384) - *(_QWORD *)(*(_QWORD *)(*v1 + 8) + 376)) >> 3));
  v3 = *(void **)(*v1 + 64);
  *(_QWORD *)(*v1 + 64) = v2;

  v4 = *(_QWORD *)(*v1 + 8);
  v5 = *(_QWORD *)(v4 + 376);
  for (i = *(_QWORD *)(v4 + 384); v5 != i; v5 += 136)
  {
    v7 = *(void **)(*v1 + 64);
    v8 = -[GEOBuildingFootprintFeature init:withVectorTile:]([GEOBuildingFootprintFeature alloc], "init:withVectorTile:", v5, *v1);
    objc_msgSend(v7, "addObject:", v8);

  }
}

void sub_18935D118(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18935D1F0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18935D2D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  void *v15;

  _Unwind_Resume(a1);
}

void sub_18935D474(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  void *v11;
  void *v12;
  void *v13;
  va_list va;

  va_start(va, a11);

  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18935D82C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_18935DCD8(_Unwind_Exception *a1)
{
  id *v1;
  void *v2;

  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t std::hash<GEORoadEdge * {__strong}>::operator()(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  unint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  _QWORD v18[2];
  _QWORD v19[3];

  v19[2] = *MEMORY[0x1E0C80C00];
  v1 = a1;
  objc_msgSend(v1, "road");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "feature");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "containingTile");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = objc_msgSend(v4, "tileKey");
  v6 = *(_QWORD *)v5;
  v7 = *(_QWORD *)v5 << 32;
  v8 = BYTE4(*(_QWORD *)v5) | ((((*(_QWORD *)v5 >> 40) | (*(unsigned __int16 *)(v5 + 8) << 24)) & 0x3FFFFFF) << 8) & 0xFF0FFFFFFFFFFFFFLL | ((unint64_t)(*(unsigned __int16 *)(v5 + 8) >> 2) << 34) & 0xFF0FFFFFFFFFFFFFLL | ((unint64_t)(*(_BYTE *)(v5 + 10) & 0xF) << 48) & 0xFF0FFFFFFFFFFFFFLL | ((unint64_t)(*(_BYTE *)(v5 + 10) >> 4) << 52);
  *(_QWORD *)((char *)v19 + 1) = v7 & 0xFFFFC00000000000 | ((unint64_t)((*(_QWORD *)v5 >> 8) & 0x3F) << 40);
  LOBYTE(v19[0]) = v6;
  *((_QWORD *)&v9 + 1) = v8;
  *(_QWORD *)&v9 = v7;
  v18[0] = v19[0];
  v18[1] = v9 >> 56;
  v10 = GEOTileKeyHash(v18);

  objc_msgSend(v1, "road");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v12 = objc_msgSend(v11, "sectionOffset");

  v13 = objc_msgSend(v1, "vertexIndexA");
  v14 = objc_msgSend(v1, "vertexIndexB");

  v15 = (((v10 + 2654435769u) << 6) + ((v10 + 2654435769u) >> 2) + v12 + 2654435769) ^ (v10 + 2654435769u);
  v16 = ((v15 << 6) + (v15 >> 2) + v13 + 2654435769) ^ v15;
  return ((v16 << 6) + (v16 >> 2) + v14 + 2654435769) ^ v16;
}

void sub_18935DF14(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

BOOL std::equal_to<GEORoadEdge * {__strong}>::operator()(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  void *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  void *v19;
  _BOOL8 v21;
  _BYTE v23[11];
  _BYTE v24[11];

  v3 = a1;
  v4 = a2;
  objc_msgSend(v3, "road");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "feature");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "containingTile");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = objc_msgSend(v7, "tileKey");
  *(_QWORD *)v24 = *(_QWORD *)v8;
  *(_DWORD *)&v24[7] = *(_DWORD *)(v8 + 7);

  objc_msgSend(v4, "road");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "feature");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "containingTile");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v12 = objc_msgSend(v11, "tileKey");
  *(_QWORD *)v23 = *(_QWORD *)v12;
  *(_DWORD *)&v23[7] = *(_DWORD *)(v12 + 7);

  v13 = objc_msgSend(v3, "junctionIndexA");
  if (v13 == objc_msgSend(v4, "junctionIndexA")
    && (v14 = objc_msgSend(v3, "junctionIndexB"), v14 == objc_msgSend(v4, "junctionIndexB"))
    && (v15 = objc_msgSend(v3, "vertexIndexA"), v15 == objc_msgSend(v4, "vertexIndexA"))
    && (v16 = objc_msgSend(v3, "vertexIndexB"), v16 == objc_msgSend(v4, "vertexIndexB")))
  {
    objc_msgSend(v3, "road");
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    v18 = objc_msgSend(v17, "sectionOffset");
    objc_msgSend(v4, "road");
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    v21 = v18 == objc_msgSend(v19, "sectionOffset")
       && *(_QWORD *)v24 == *(_QWORD *)v23
       && *(_QWORD *)&v24[3] == *(_QWORD *)&v23[3];

  }
  else
  {
    v21 = 0;
  }

  return v21;
}

void sub_18935E144(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_18935E2AC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_18935E3F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18935E4FC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18935E628(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_18935E6D4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18935E7A8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18935E82C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18935E87C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18935E928(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18935E9E0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18935EBE0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18935ED20(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18935EE9C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_18935F198(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18935F2B0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18935F3C8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18935F4E0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18935F5F8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18935F740(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18935FF8C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893600A4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893601E8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189360330(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDAnalyticMetadataCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _BYTE v12[128];
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  v8 = 0u;
  v9 = 0u;
  v10 = 0u;
  v11 = 0u;
  v2 = a1[16];
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v9;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v9 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v8 + 1) + 8 * v6++), "readAll:", 1, (_QWORD)v8);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
    }
    while (v4);
  }

  objc_msgSend(a1[5], "readAll:", 1);
  return objc_msgSend(a1[15], "readAll:", 1);
}

uint64_t GEOPDAnalyticMetadataReadFrom(uint64_t a1, void *a2)
{
  id v3;
  uint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOPDAnalyticMetadataReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189361BE8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDAnalyticMetadataIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v14;
  int v15;
  int v16;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int v22;
  BOOL v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  int v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  int v33;
  unsigned int v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  int v38;
  unsigned int v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  int v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unsigned int v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  int v51;
  unsigned int v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  int v56;
  _BOOL8 v57;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = *v4;
          v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = *v4;
      v15 = a1[v14];
      if (a1[v14])
        v8 = 0;
LABEL_14:
      v16 = v8 & 7;
      if (v15 || v16 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v16 != 2)
            goto LABEL_116;
          goto LABEL_112;
        case 2u:
          if (v16 == 2)
            goto LABEL_112;
          goto LABEL_116;
        case 3u:
          if (v16 == 2)
            goto LABEL_112;
          goto LABEL_116;
        case 4u:
          if (v16 == 2)
            goto LABEL_112;
          goto LABEL_116;
        case 5u:
          if (v16 == 2)
            goto LABEL_112;
          goto LABEL_116;
        case 6u:
          if ((v8 & 7) != 0)
            goto LABEL_116;
          v18 = 0;
          while (1)
          {
            v19 = *v2;
            v20 = *(_QWORD *)&a1[v19];
            v21 = v20 + 1;
            if (v20 == -1 || v21 > *(_QWORD *)&a1[*v3])
              goto LABEL_109;
            v22 = *(char *)(*(_QWORD *)&a1[*v5] + v20);
            *(_QWORD *)&a1[v19] = v21;
            if (v22 < 0)
            {
              v23 = v18++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_113;
          }
        case 7u:
          if ((v8 & 7) != 0)
            goto LABEL_116;
          v24 = 0;
          while (1)
          {
            v25 = *v2;
            v26 = *(_QWORD *)&a1[v25];
            v27 = v26 + 1;
            if (v26 == -1 || v27 > *(_QWORD *)&a1[*v3])
              goto LABEL_109;
            v28 = *(char *)(*(_QWORD *)&a1[*v5] + v26);
            *(_QWORD *)&a1[v25] = v27;
            if (v28 < 0)
            {
              v23 = v24++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_113;
          }
        case 8u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOSessionIDIsValid(a1))
            goto LABEL_116;
          goto LABEL_88;
        case 9u:
          if ((v8 & 7) != 0)
            goto LABEL_116;
          v29 = 0;
          while (1)
          {
            v30 = *v2;
            v31 = *(_QWORD *)&a1[v30];
            v32 = v31 + 1;
            if (v31 == -1 || v32 > *(_QWORD *)&a1[*v3])
              goto LABEL_109;
            v33 = *(char *)(*(_QWORD *)&a1[*v5] + v31);
            *(_QWORD *)&a1[v30] = v32;
            if (v33 < 0)
            {
              v23 = v29++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_113;
          }
        case 0xAu:
          if ((v8 & 7) != 0)
            goto LABEL_116;
          v34 = 0;
          while (1)
          {
            v35 = *v2;
            v36 = *(_QWORD *)&a1[v35];
            v37 = v36 + 1;
            if (v36 == -1 || v37 > *(_QWORD *)&a1[*v3])
              goto LABEL_109;
            v38 = *(char *)(*(_QWORD *)&a1[*v5] + v36);
            *(_QWORD *)&a1[v35] = v37;
            if (v38 < 0)
            {
              v23 = v34++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_113;
          }
        case 0xCu:
          if ((v8 & 7) != 0)
            goto LABEL_116;
          v39 = 0;
          while (1)
          {
            v40 = *v2;
            v41 = *(_QWORD *)&a1[v40];
            v42 = v41 + 1;
            if (v41 == -1 || v42 > *(_QWORD *)&a1[*v3])
              goto LABEL_109;
            v43 = *(char *)(*(_QWORD *)&a1[*v5] + v41);
            *(_QWORD *)&a1[v40] = v42;
            if (v43 < 0)
            {
              v23 = v39++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_113;
          }
        case 0xDu:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOGeoServiceTagIsValid(a1))
            goto LABEL_116;
          goto LABEL_88;
        case 0xEu:
          if (v16 == 2)
            goto LABEL_112;
          goto LABEL_116;
        case 0xFu:
          if (v16 == 2)
            goto LABEL_112;
          goto LABEL_116;
        case 0x10u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOAbAssignInfoIsValid(a1))
            goto LABEL_116;
          goto LABEL_88;
        case 0x11u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOLocalTimeIsValid(a1))
            goto LABEL_116;
LABEL_88:
          PBReaderRecallMark();
          continue;
        case 0x12u:
          if (v16 != 1)
            goto LABEL_116;
          v44 = *v2;
          v45 = *(_QWORD *)&a1[v44];
          if (v45 > 0xFFFFFFFFFFFFFFF7)
            goto LABEL_110;
          v46 = v45 + 8;
          if (v46 > *(_QWORD *)&a1[*v3])
            goto LABEL_110;
          *(_QWORD *)&a1[v44] = v46;
          continue;
        case 0x13u:
          if ((v8 & 7) != 0)
            goto LABEL_116;
          v47 = 0;
          while (1)
          {
            v48 = *v2;
            v49 = *(_QWORD *)&a1[v48];
            v50 = v49 + 1;
            if (v49 == -1 || v50 > *(_QWORD *)&a1[*v3])
              goto LABEL_109;
            v51 = *(char *)(*(_QWORD *)&a1[*v5] + v49);
            *(_QWORD *)&a1[v48] = v50;
            if (v51 < 0)
            {
              v23 = v47++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_113;
          }
        case 0x14u:
          if ((v8 & 7) != 0)
            goto LABEL_116;
          v52 = 0;
          break;
        case 0x15u:
          if (v16 == 2)
            goto LABEL_112;
          goto LABEL_116;
        default:
LABEL_112:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_116:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v53 = *v2;
        v54 = *(_QWORD *)&a1[v53];
        v55 = v54 + 1;
        if (v54 == -1 || v55 > *(_QWORD *)&a1[*v3])
          break;
        v56 = *(char *)(*(_QWORD *)&a1[*v5] + v54);
        *(_QWORD *)&a1[v53] = v55;
        if (v56 < 0)
        {
          v23 = v52++ > 8;
          if (!v23)
            continue;
        }
        goto LABEL_113;
      }
LABEL_109:
      v14 = *v4;
LABEL_110:
      a1[v14] = 1;
LABEL_113:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v57 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v57;
}

BOOL GEOPDAnalyticMetadataIsDirty(os_unfair_lock_s *a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner(a1 + 36);
  v2 = (a1[41]._os_unfair_lock_opaque & 0x3FFC00) != 0;
  os_unfair_lock_unlock(a1 + 36);
  return v2;
}

void sub_189362A30(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18936351C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893637B4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893638CC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893639E4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189363B2C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189364254(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18936439C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189364864(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893651EC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189365304(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893657CC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189365E14(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189365F54(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189366268(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDClientMetadataCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _BYTE v12[128];
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  objc_msgSend(a1[20], "readAll:", 1);
  objc_msgSend(a1[25], "readAll:", 1);
  v10 = 0u;
  v11 = 0u;
  v8 = 0u;
  v9 = 0u;
  v2 = a1[26];
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v9;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v9 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v8 + 1) + 8 * v6++), "readAll:", 1, (_QWORD)v8);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
    }
    while (v4);
  }

  objc_msgSend(a1[31], "readAll:", 1);
  objc_msgSend(a1[19], "readAll:", 1);
  return objc_msgSend(a1[18], "readAll:", 1);
}

unint64_t GEOPDClientMetadataReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOPDClientMetadataReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18936940C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDClientMetadataIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  BOOL v13;
  int v14;
  int v15;
  unint64_t v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int v22;
  BOOL v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  int v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  int v33;
  unsigned int v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  int v38;
  unsigned int v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  int v47;
  unsigned int v48;
  unsigned int v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  int v57;
  unsigned int v58;
  unsigned int v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  int v63;
  unsigned int v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  int v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  int v72;
  unsigned int v73;
  char v74;
  unsigned int v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  char v80;
  uint64_t v81;
  int v82;
  int v83;
  uint64_t v85;
  unint64_t v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  int v91;
  unsigned int v92;
  unsigned int v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  int v97;
  unsigned int v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  int v102;
  uint64_t v103;
  uint64_t v104;
  unint64_t v105;
  int v106;
  unsigned int v107;
  int v108;
  unsigned int v109;
  uint64_t v110;
  uint64_t v111;
  unint64_t v112;
  int v113;
  unsigned int v114;
  uint64_t v115;
  uint64_t v116;
  unint64_t v117;
  int v118;
  unsigned int v119;
  uint64_t v120;
  uint64_t v121;
  unint64_t v122;
  int v123;
  unsigned int v124;
  uint64_t v125;
  uint64_t v126;
  unint64_t v127;
  int v128;
  unsigned int v129;
  uint64_t v130;
  uint64_t v131;
  unint64_t v132;
  int v133;
  _BOOL8 v134;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] >= *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
LABEL_258:
    v134 = a1[*v4] == 0;
    PBReaderRecallMark();
    return v134;
  }
  v5 = (int *)MEMORY[0x1E0D82BB8];
  while (2)
  {
    if (a1[*v4])
      goto LABEL_258;
    v6 = 0;
    v7 = 0;
    v8 = 0;
    while (1)
    {
      v9 = *v2;
      v10 = *(_QWORD *)&a1[v9];
      v11 = v10 + 1;
      if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
        break;
      v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
      *(_QWORD *)&a1[v9] = v11;
      v8 |= (unint64_t)(v12 & 0x7F) << v6;
      if ((v12 & 0x80) == 0)
        goto LABEL_12;
      v6 += 7;
      v13 = v7++ >= 9;
      if (v13)
      {
        v8 = 0;
        v14 = a1[*v4];
        goto LABEL_14;
      }
    }
    a1[*v4] = 1;
LABEL_12:
    v14 = a1[*v4];
    if (a1[*v4])
      v8 = 0;
LABEL_14:
    v15 = v8 & 7;
    if (v14 || v15 == 4)
      goto LABEL_258;
    v17 = v8 >> 3;
    switch((v8 >> 3))
    {
      case 1u:
        if (v15 != 2)
          goto LABEL_261;
        goto LABEL_174;
      case 2u:
      case 6u:
      case 7u:
      case 0xEu:
        goto LABEL_174;
      case 3u:
        if (v15 == 2)
          goto LABEL_174;
        goto LABEL_261;
      case 4u:
        if (v15 == 2)
          goto LABEL_174;
        goto LABEL_261;
      case 5u:
        if (v15 == 2)
          goto LABEL_174;
        goto LABEL_261;
      case 8u:
        if ((v8 & 7) != 0)
          goto LABEL_261;
        v18 = 0;
        while (1)
        {
          v19 = *v2;
          v20 = *(_QWORD *)&a1[v19];
          v21 = v20 + 1;
          if (v20 == -1 || v21 > *(_QWORD *)&a1[*v3])
            goto LABEL_199;
          v22 = *(char *)(*(_QWORD *)&a1[*v5] + v20);
          *(_QWORD *)&a1[v19] = v21;
          if (v22 < 0)
          {
            v23 = v18++ > 8;
            if (!v23)
              continue;
          }
          goto LABEL_204;
        }
      case 9u:
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOAdditionalEnabledMarketsIsValid(a1))
          goto LABEL_261;
        goto LABEL_203;
      case 0xAu:
        if ((v8 & 7) != 0)
          goto LABEL_261;
        v24 = 0;
        while (1)
        {
          v25 = *v2;
          v26 = *(_QWORD *)&a1[v25];
          v27 = v26 + 1;
          if (v26 == -1 || v27 > *(_QWORD *)&a1[*v3])
            goto LABEL_199;
          v28 = *(char *)(*(_QWORD *)&a1[*v5] + v26);
          *(_QWORD *)&a1[v25] = v27;
          if (v28 < 0)
          {
            v23 = v24++ > 8;
            if (!v23)
              continue;
          }
          goto LABEL_204;
        }
      case 0xBu:
        if ((v8 & 7) != 0)
          goto LABEL_261;
        v29 = 0;
        while (1)
        {
          v30 = *v2;
          v31 = *(_QWORD *)&a1[v30];
          v32 = v31 + 1;
          if (v31 == -1 || v32 > *(_QWORD *)&a1[*v3])
            goto LABEL_199;
          v33 = *(char *)(*(_QWORD *)&a1[*v5] + v31);
          *(_QWORD *)&a1[v30] = v32;
          if (v33 < 0)
          {
            v23 = v29++ > 8;
            if (!v23)
              continue;
          }
          goto LABEL_204;
        }
      case 0xCu:
        if ((v8 & 7) != 0)
          goto LABEL_261;
        v34 = 0;
        while (1)
        {
          v35 = *v2;
          v36 = *(_QWORD *)&a1[v35];
          v37 = v36 + 1;
          if (v36 == -1 || v37 > *(_QWORD *)&a1[*v3])
            goto LABEL_199;
          v38 = *(char *)(*(_QWORD *)&a1[*v5] + v36);
          *(_QWORD *)&a1[v35] = v37;
          if (v38 < 0)
          {
            v23 = v34++ > 8;
            if (!v23)
              continue;
          }
          goto LABEL_204;
        }
      case 0xDu:
      case 0xFu:
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOLocationIsValid(a1))
          goto LABEL_261;
        goto LABEL_203;
      case 0x10u:
        if ((v8 & 7) != 0)
          goto LABEL_261;
        v39 = 0;
        while (1)
        {
          v40 = *v2;
          v41 = *(_QWORD *)&a1[v40];
          v42 = v41 + 1;
          if (v41 == -1 || v42 > *(_QWORD *)&a1[*v3])
            goto LABEL_199;
          v43 = *(char *)(*(_QWORD *)&a1[*v5] + v41);
          *(_QWORD *)&a1[v40] = v42;
          if (v43 < 0)
          {
            v23 = v39++ > 8;
            if (!v23)
              continue;
          }
          goto LABEL_204;
        }
      case 0x11u:
        if (v15 == 2)
          goto LABEL_174;
        goto LABEL_261;
      case 0x12u:
        if (v15 != 2)
        {
          if ((v8 & 7) != 0)
            goto LABEL_261;
          while (1)
          {
            v44 = *v2;
            v45 = *(_QWORD *)&a1[v44];
            v46 = v45 + 1;
            if (v45 == -1 || v46 > *(_QWORD *)&a1[*v3])
              goto LABEL_199;
            v47 = *(char *)(*(_QWORD *)&a1[*v5] + v45);
            *(_QWORD *)&a1[v44] = v46;
            if (v47 < 0)
            {
              v48 = v15++;
              if (v48 <= 8)
                continue;
            }
            goto LABEL_204;
          }
        }
        if (!PBReaderPlaceMark())
          goto LABEL_261;
LABEL_209:
        while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
        {
          v109 = a1[*v4];
          if (a1[*v4])
            break;
          while (1)
          {
            v110 = *v2;
            v111 = *(_QWORD *)&a1[v110];
            v112 = v111 + 1;
            if (v111 == -1 || v112 > *(_QWORD *)&a1[*v3])
              break;
            v113 = *(char *)(*(_QWORD *)&a1[*v5] + v111);
            *(_QWORD *)&a1[v110] = v112;
            if (v113 < 0)
            {
              v13 = v109++ >= 9;
              if (!v13)
                continue;
            }
            goto LABEL_209;
          }
          a1[*v4] = 1;
        }
        goto LABEL_203;
      case 0x13u:
        if ((v8 & 7) != 0)
          goto LABEL_261;
        v49 = 0;
        while (1)
        {
          v50 = *v2;
          v51 = *(_QWORD *)&a1[v50];
          v52 = v51 + 1;
          if (v51 == -1 || v52 > *(_QWORD *)&a1[*v3])
            goto LABEL_199;
          v53 = *(char *)(*(_QWORD *)&a1[*v5] + v51);
          *(_QWORD *)&a1[v50] = v52;
          if (v53 < 0)
          {
            v23 = v49++ > 8;
            if (!v23)
              continue;
          }
          goto LABEL_204;
        }
      case 0x14u:
        if (v15 != 2)
        {
          if ((v8 & 7) != 0)
            goto LABEL_261;
          while (1)
          {
            v54 = *v2;
            v55 = *(_QWORD *)&a1[v54];
            v56 = v55 + 1;
            if (v55 == -1 || v56 > *(_QWORD *)&a1[*v3])
              goto LABEL_199;
            v57 = *(char *)(*(_QWORD *)&a1[*v5] + v55);
            *(_QWORD *)&a1[v54] = v56;
            if (v57 < 0)
            {
              v58 = v15++;
              if (v58 <= 8)
                continue;
            }
            goto LABEL_204;
          }
        }
        if (!PBReaderPlaceMark())
          goto LABEL_261;
LABEL_219:
        while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
        {
          v114 = a1[*v4];
          if (a1[*v4])
            break;
          while (1)
          {
            v115 = *v2;
            v116 = *(_QWORD *)&a1[v115];
            v117 = v116 + 1;
            if (v116 == -1 || v117 > *(_QWORD *)&a1[*v3])
              break;
            v118 = *(char *)(*(_QWORD *)&a1[*v5] + v116);
            *(_QWORD *)&a1[v115] = v117;
            if (v118 < 0)
            {
              v13 = v114++ >= 9;
              if (!v13)
                continue;
            }
            goto LABEL_219;
          }
          a1[*v4] = 1;
        }
        goto LABEL_203;
      case 0x15u:
        if (v15 == 2)
          goto LABEL_174;
        goto LABEL_261;
      case 0x16u:
        if ((v8 & 7) != 0)
          goto LABEL_261;
        v59 = 0;
        while (1)
        {
          v60 = *v2;
          v61 = *(_QWORD *)&a1[v60];
          v62 = v61 + 1;
          if (v61 == -1 || v62 > *(_QWORD *)&a1[*v3])
            goto LABEL_199;
          v63 = *(char *)(*(_QWORD *)&a1[*v5] + v61);
          *(_QWORD *)&a1[v60] = v62;
          if (v63 < 0)
          {
            v23 = v59++ > 8;
            if (!v23)
              continue;
          }
          goto LABEL_204;
        }
      case 0x17u:
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOLocalizationCapabilitiesIsValid(a1))
          goto LABEL_261;
        goto LABEL_203;
      case 0x18u:
        if (v15 == 2)
          goto LABEL_174;
        goto LABEL_261;
      case 0x19u:
        if ((v8 & 7) != 0)
          goto LABEL_261;
        v64 = 0;
        while (1)
        {
          v65 = *v2;
          v66 = *(_QWORD *)&a1[v65];
          v67 = v66 + 1;
          if (v66 == -1 || v67 > *(_QWORD *)&a1[*v3])
            goto LABEL_199;
          v68 = *(char *)(*(_QWORD *)&a1[*v5] + v66);
          *(_QWORD *)&a1[v65] = v67;
          if (v68 < 0)
          {
            v23 = v64++ > 8;
            if (!v23)
              continue;
          }
          goto LABEL_204;
        }
      case 0x1Au:
        if (v15 != 2)
        {
          if ((v8 & 7) != 0)
            goto LABEL_261;
          while (1)
          {
            v69 = *v2;
            v70 = *(_QWORD *)&a1[v69];
            v71 = v70 + 1;
            if (v70 == -1 || v71 > *(_QWORD *)&a1[*v3])
              goto LABEL_199;
            v72 = *(char *)(*(_QWORD *)&a1[*v5] + v70);
            *(_QWORD *)&a1[v69] = v71;
            if (v72 < 0)
            {
              v73 = v15++;
              if (v73 <= 8)
                continue;
            }
            goto LABEL_204;
          }
        }
        if (!PBReaderPlaceMark())
          goto LABEL_261;
LABEL_229:
        while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
        {
          v119 = a1[*v4];
          if (a1[*v4])
            break;
          while (1)
          {
            v120 = *v2;
            v121 = *(_QWORD *)&a1[v120];
            v122 = v121 + 1;
            if (v121 == -1 || v122 > *(_QWORD *)&a1[*v3])
              break;
            v123 = *(char *)(*(_QWORD *)&a1[*v5] + v121);
            *(_QWORD *)&a1[v120] = v122;
            if (v123 < 0)
            {
              v13 = v119++ >= 9;
              if (!v13)
                continue;
            }
            goto LABEL_229;
          }
          a1[*v4] = 1;
        }
        goto LABEL_203;
      case 0x1Bu:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_261;
        objc_msgSend(a1, "position", 0, 0);
        objc_msgSend(a1, "length");
LABEL_140:
        if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3] || a1[*v4])
          goto LABEL_206;
        v74 = 0;
        v75 = 0;
        v76 = 0;
        while (1)
        {
          v77 = *v2;
          v78 = *(_QWORD *)&a1[v77];
          v79 = v78 + 1;
          if (v78 == -1 || v79 > *(_QWORD *)&a1[*v3])
            break;
          v80 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v78);
          *(_QWORD *)&a1[v77] = v79;
          v76 |= (unint64_t)(v80 & 0x7F) << v74;
          if ((v80 & 0x80) == 0)
            goto LABEL_150;
          v74 += 7;
          v13 = v75++ >= 9;
          if (v13)
          {
            v76 = 0;
            v81 = *v4;
            v82 = a1[v81];
            goto LABEL_152;
          }
        }
        a1[*v4] = 1;
LABEL_150:
        v81 = *v4;
        v82 = a1[v81];
        if (a1[v81])
          v76 = 0;
LABEL_152:
        v83 = v76 & 7;
        if (v82 || v83 == 4)
        {
LABEL_206:
          v108 = a1[*v4];
          PBReaderRecallMark();
          if (v108)
            goto LABEL_261;
LABEL_203:
          PBReaderRecallMark();
LABEL_204:
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_258;
          continue;
        }
        if ((v76 >> 3) != 1)
        {
          if (!PBReaderSkipValueWithTag())
            goto LABEL_260;
          goto LABEL_140;
        }
        if (v83 == 1)
        {
          v85 = *v2;
          v86 = *(_QWORD *)&a1[v85];
          if (v86 <= 0xFFFFFFFFFFFFFFF7 && (v87 = v86 + 8, v87 <= *(_QWORD *)&a1[*v3]))
            *(_QWORD *)&a1[v85] = v87;
          else
            a1[v81] = 1;
          goto LABEL_140;
        }
LABEL_260:
        PBReaderRecallMark();
LABEL_261:
        PBReaderRecallMark();
        return 0;
      case 0x1Cu:
        if (v15 != 2)
        {
          if ((v8 & 7) != 0)
            goto LABEL_261;
          while (1)
          {
            v88 = *v2;
            v89 = *(_QWORD *)&a1[v88];
            v90 = v89 + 1;
            if (v89 == -1 || v90 > *(_QWORD *)&a1[*v3])
              goto LABEL_199;
            v91 = *(char *)(*(_QWORD *)&a1[*v5] + v89);
            *(_QWORD *)&a1[v88] = v90;
            if (v91 < 0)
            {
              v92 = v15++;
              if (v92 <= 8)
                continue;
            }
            goto LABEL_204;
          }
        }
        if (!PBReaderPlaceMark())
          goto LABEL_261;
LABEL_239:
        while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
        {
          v124 = a1[*v4];
          if (a1[*v4])
            break;
          while (1)
          {
            v125 = *v2;
            v126 = *(_QWORD *)&a1[v125];
            v127 = v126 + 1;
            if (v126 == -1 || v127 > *(_QWORD *)&a1[*v3])
              break;
            v128 = *(char *)(*(_QWORD *)&a1[*v5] + v126);
            *(_QWORD *)&a1[v125] = v127;
            if (v128 < 0)
            {
              v13 = v124++ >= 9;
              if (!v13)
                continue;
            }
            goto LABEL_239;
          }
          a1[*v4] = 1;
        }
        goto LABEL_203;
      case 0x1Du:
        if (v15 == 2)
          goto LABEL_174;
        goto LABEL_261;
      case 0x1Eu:
        if (v15 == 2)
          goto LABEL_174;
        goto LABEL_261;
      case 0x1Fu:
        if ((v8 & 7) != 0)
          goto LABEL_261;
        v93 = 0;
        while (1)
        {
          v94 = *v2;
          v95 = *(_QWORD *)&a1[v94];
          v96 = v95 + 1;
          if (v95 == -1 || v96 > *(_QWORD *)&a1[*v3])
            goto LABEL_199;
          v97 = *(char *)(*(_QWORD *)&a1[*v5] + v95);
          *(_QWORD *)&a1[v94] = v96;
          if (v97 < 0)
          {
            v23 = v93++ > 8;
            if (!v23)
              continue;
          }
          goto LABEL_204;
        }
      case 0x20u:
        if ((v8 & 7) != 0)
          goto LABEL_261;
        v98 = 0;
        while (1)
        {
          v99 = *v2;
          v100 = *(_QWORD *)&a1[v99];
          v101 = v100 + 1;
          if (v100 == -1 || v101 > *(_QWORD *)&a1[*v3])
            goto LABEL_199;
          v102 = *(char *)(*(_QWORD *)&a1[*v5] + v100);
          *(_QWORD *)&a1[v99] = v101;
          if (v102 < 0)
          {
            v23 = v98++ > 8;
            if (!v23)
              continue;
          }
          goto LABEL_204;
        }
      case 0x21u:
        if (v15 != 2)
        {
          if ((v8 & 7) != 0)
            goto LABEL_261;
          while (1)
          {
            v103 = *v2;
            v104 = *(_QWORD *)&a1[v103];
            v105 = v104 + 1;
            if (v104 == -1 || v105 > *(_QWORD *)&a1[*v3])
              break;
            v106 = *(char *)(*(_QWORD *)&a1[*v5] + v104);
            *(_QWORD *)&a1[v103] = v105;
            if (v106 < 0)
            {
              v107 = v15++;
              if (v107 <= 8)
                continue;
            }
            goto LABEL_204;
          }
LABEL_199:
          a1[*v4] = 1;
          goto LABEL_204;
        }
        if (!PBReaderPlaceMark())
          goto LABEL_261;
LABEL_249:
        while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
        {
          v129 = a1[*v4];
          if (a1[*v4])
            break;
          while (1)
          {
            v130 = *v2;
            v131 = *(_QWORD *)&a1[v130];
            v132 = v131 + 1;
            if (v131 == -1 || v132 > *(_QWORD *)&a1[*v3])
              break;
            v133 = *(char *)(*(_QWORD *)&a1[*v5] + v131);
            *(_QWORD *)&a1[v130] = v132;
            if (v133 < 0)
            {
              v13 = v129++ >= 9;
              if (!v13)
                continue;
            }
            goto LABEL_249;
          }
          a1[*v4] = 1;
        }
        goto LABEL_203;
      default:
        if ((_DWORD)v17 == 100)
        {
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOABSecondPartyPlaceRequestClientMetaDataIsValid(a1))
            goto LABEL_261;
        }
        else
        {
          if ((_DWORD)v17 != 101)
          {
LABEL_174:
            if ((PBReaderSkipValueWithTag() & 1) == 0)
              goto LABEL_261;
            goto LABEL_204;
          }
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOABBranchInfoIsValid(a1))
            goto LABEL_261;
        }
        goto LABEL_203;
    }
  }
}

uint64_t _GEOPDClientMetadataIsDirty(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  id v5;
  uint64_t v6;
  uint64_t i;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _BYTE v12[128];
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 280));
  v2 = *(_QWORD *)(a1 + 316);
  if ((v2 & 0x10A600000) != 0)
    return 1;
  if ((v2 & 0x40000) != 0)
  {
    if (GEOAdditionalEnabledMarketsIsDirty(*(_QWORD *)(a1 + 160)))
      return 1;
    v2 = *(_QWORD *)(a1 + 316);
  }
  if ((v2 & 0x800000) != 0)
  {
    if (GEOLocationIsDirty(*(os_unfair_lock_s **)(a1 + 200)))
      return 1;
    v2 = *(_QWORD *)(a1 + 316);
  }
  if ((v2 & 0xF518F800) != 0)
    return 1;
  if ((v2 & 0x20000) != 0)
  {
    if ((GEOABSecondPartyPlaceRequestClientMetaDataIsDirty(*(os_unfair_lock_s **)(a1 + 152)) & 1) != 0)
      return 1;
    v2 = *(_QWORD *)(a1 + 316);
  }
  if ((v2 & 0x10000) == 0)
    goto LABEL_17;
  if (GEOABBranchInfoIsDirty(*(_QWORD *)(a1 + 144)))
    return 1;
  v2 = *(_QWORD *)(a1 + 316);
LABEL_17:
  if ((v2 & 0x1000000) == 0)
    return 0;
  v10 = 0u;
  v11 = 0u;
  v8 = 0u;
  v9 = 0u;
  v5 = *(id *)(a1 + 208);
  v3 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
  if (v3)
  {
    v6 = *(_QWORD *)v9;
    while (2)
    {
      for (i = 0; i != v3; ++i)
      {
        if (*(_QWORD *)v9 != v6)
          objc_enumerationMutation(v5);
        if (GEOLocationIsDirty(*(os_unfair_lock_s **)(*((_QWORD *)&v8 + 1) + 8 * i)))
        {
          v3 = 1;
          goto LABEL_29;
        }
      }
      v3 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
      if (v3)
        continue;
      break;
    }
  }
LABEL_29:

  return v3;
}

void sub_18936AFF4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18936BFB8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18936C254(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18936C36C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDMapsIdentifierReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOPDMapsIdentifierReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18936C69C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDMapsSuggestionsTouristInfoReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  id v21;
  void *v22;
  _BOOL8 v23;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 1)
        {
          *(_BYTE *)(a1 + 24) |= 1u;
          v18 = *v4;
          v19 = *(_QWORD *)&v3[v18];
          if (v19 <= 0xFFFFFFFFFFFFFFF7 && v19 + 8 <= *(_QWORD *)&v3[*v5])
          {
            v20 = *(_QWORD *)(*(_QWORD *)&v3[*v7] + v19);
            *(_QWORD *)&v3[v18] = v19 + 8;
          }
          else
          {
            v3[*v6] = 1;
            v20 = 0;
          }
          *(_QWORD *)(a1 + 16) = v20;
        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v21 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v22 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v21;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_31;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v23 = v3[*v6] == 0;
  }
  else
  {
LABEL_31:
    v23 = 0;
  }
  objc_sync_exit(v3);

  return v23;
}

void sub_18936CDD0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDShardedIdReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOPDShardedIdReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18936D8CC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackBooleanFieldReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  BOOL v25;
  int *v26;
  char v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  _BOOL8 v33;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 2)
        {
          v27 = 0;
          v28 = 0;
          v20 = 0;
          *(_BYTE *)(a1 + 12) |= 1u;
          while (1)
          {
            v29 = *v4;
            v30 = *(_QWORD *)&v3[v29];
            v31 = v30 + 1;
            if (v30 == -1 || v31 > *(_QWORD *)&v3[*v5])
              break;
            v32 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v30);
            *(_QWORD *)&v3[v29] = v31;
            v20 |= (unint64_t)(v32 & 0x7F) << v27;
            if ((v32 & 0x80) == 0)
            {
              v26 = &OBJC_IVAR___GEORPFeedbackBooleanField__edited;
              goto LABEL_40;
            }
            v27 += 7;
            v25 = v28++ > 8;
            if (v25)
            {
              v20 = 0;
              v26 = &OBJC_IVAR___GEORPFeedbackBooleanField__edited;
              goto LABEL_42;
            }
          }
          v26 = &OBJC_IVAR___GEORPFeedbackBooleanField__edited;
LABEL_39:
          v3[*v6] = 1;
        }
        else
        {
          if ((v10 >> 3) != 1)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0)
              goto LABEL_48;
            continue;
          }
          v18 = 0;
          v19 = 0;
          v20 = 0;
          *(_BYTE *)(a1 + 12) |= 2u;
          while (1)
          {
            v21 = *v4;
            v22 = *(_QWORD *)&v3[v21];
            v23 = v22 + 1;
            if (v22 == -1 || v23 > *(_QWORD *)&v3[*v5])
            {
              v26 = &OBJC_IVAR___GEORPFeedbackBooleanField__original;
              goto LABEL_39;
            }
            v24 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v22);
            *(_QWORD *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0)
              break;
            v18 += 7;
            v25 = v19++ > 8;
            if (v25)
            {
              v20 = 0;
              v26 = &OBJC_IVAR___GEORPFeedbackBooleanField__original;
              goto LABEL_42;
            }
          }
          v26 = &OBJC_IVAR___GEORPFeedbackBooleanField__original;
        }
LABEL_40:
        if (v3[*v6])
          v20 = 0;
LABEL_42:
        *(_BYTE *)(a1 + *v26) = v20 != 0;
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v33 = v3[*v6] == 0;
  }
  else
  {
LABEL_48:
    v33 = 0;
  }
  objc_sync_exit(v3);

  return v33;
}

void sub_18936E560(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackBooleanFieldReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORPFeedbackBooleanFieldReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18936E5C0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackBooleanFieldIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int v20;
  BOOL v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  int v26;
  _BOOL8 v27;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_39;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      if (v14 || (v8 & 7) == 4)
        goto LABEL_39;
      if ((v8 >> 3) == 2)
        break;
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0)
          goto LABEL_41;
        v16 = 0;
        while (1)
        {
          v17 = *v2;
          v18 = *(_QWORD *)&a1[v17];
          v19 = v18 + 1;
          if (v18 == -1 || v19 > *(_QWORD *)&a1[*v3])
            break;
          v20 = *(char *)(*(_QWORD *)&a1[*v5] + v18);
          *(_QWORD *)&a1[v17] = v19;
          if (v20 < 0)
          {
            v21 = v16++ > 8;
            if (!v21)
              continue;
          }
          goto LABEL_38;
        }
LABEL_36:
        a1[*v4] = 1;
        goto LABEL_38;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_41:
        v27 = 0;
        goto LABEL_40;
      }
LABEL_38:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_39;
    }
    if ((v8 & 7) != 0)
      goto LABEL_41;
    v22 = 0;
    while (1)
    {
      v23 = *v2;
      v24 = *(_QWORD *)&a1[v23];
      v25 = v24 + 1;
      if (v24 == -1 || v25 > *(_QWORD *)&a1[*v3])
        goto LABEL_36;
      v26 = *(char *)(*(_QWORD *)&a1[*v5] + v24);
      *(_QWORD *)&a1[v23] = v25;
      if (v26 < 0)
      {
        v21 = v22++ > 8;
        if (!v21)
          continue;
      }
      goto LABEL_38;
    }
  }
LABEL_39:
  v27 = a1[*v4] == 0;
LABEL_40:
  PBReaderRecallMark();
  return v27;
}

void sub_18936ECE4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackCoordinateFieldReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 v14;
  int *v15;
  BOOL v16;
  int *v17;
  int *v18;
  int *v19;
  char v20;
  unsigned int v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  int v28;
  unint64_t v30;
  BOOL v31;
  int *v32;
  int v33;
  int v34;
  BOOL v35;
  GEOLatLng *v36;
  uint64_t v37;
  int v38;
  void *v39;
  char v40;
  char v41;
  char v42;
  int v43;
  char v44;
  void *v45;
  BOOL v47;
  char v48;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 52);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 48));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int8 *)(a1 + 60) >> 1) & 1)
      + (*(_BYTE *)(a1 + 60) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 2) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v7])
    {
      case -3:
        v8 = 1;
        goto LABEL_6;
      case -2:
        v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v10 | (v11 > 2);
        if (((v14 | v8) & 1) != 0)
          v15 = 0;
        else
          v15 = a3;
        v16 = v14;
        v48 = (v15 == 0) | v14;
        v17 = (int *)MEMORY[0x1E0D82BF0];
        v18 = (int *)MEMORY[0x1E0D82BC8];
        v19 = (int *)MEMORY[0x1E0D82BB8];
        v47 = v14;
        break;
      default:
        ++v11;
LABEL_6:
        v12 = v9;
        v13 = v10;
LABEL_8:
        ++v7;
        v9 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v17) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v18))
      goto LABEL_73;
    v20 = 0;
    v21 = 0;
    v22 = 0;
    while (1)
    {
      v23 = *v17;
      v24 = *(_QWORD *)(v3 + v23);
      v25 = v24 + 1;
      if (v24 == -1 || v25 > *(_QWORD *)(v3 + *v6))
        break;
      v26 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v24);
      *(_QWORD *)(v3 + v23) = v25;
      v22 |= (unint64_t)(v26 & 0x7F) << v20;
      if ((v26 & 0x80) == 0)
        goto LABEL_23;
      v20 += 7;
      if (v21++ >= 9)
      {
        v22 = 0;
        v28 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(_BYTE *)(v3 + *v18) = 1;
LABEL_23:
    v28 = *(unsigned __int8 *)(v3 + *v18);
    if (*(_BYTE *)(v3 + *v18))
      v22 = 0;
LABEL_25:
    if (v28 || (v22 & 7) == 4)
    {
LABEL_73:
      if (v16)
      {
        v42 = 1;
        goto LABEL_85;
      }
      if (v15)
      {
        while (1)
        {
          v43 = *v15++;
          v44 = 8;
          switch(v43)
          {
            case 0:
              goto LABEL_86;
            case 1:
              goto LABEL_80;
            case 2:
              v44 = 2;
              goto LABEL_80;
            case 3:
              v44 = 1;
              goto LABEL_80;
            case 4:
              v44 = 4;
LABEL_80:
              *(_BYTE *)(a1 + 60) |= v44;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_86;
    }
    v30 = v22 >> 3;
    v31 = v16;
    if ((v48 & 1) == 0)
    {
      v32 = v15;
      do
      {
        v34 = *v32++;
        v33 = v34;
        v31 = v34 != 0;
        if (v34)
          v35 = v33 == (_DWORD)v30;
        else
          v35 = 1;
      }
      while (!v35);
    }
    switch((int)v30)
    {
      case 1:
        if (!v31)
          goto LABEL_60;
        if ((*(_BYTE *)(a1 + 60) & 8) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_82;
          v36 = objc_alloc_init(GEOLatLng);
          if (GEOLatLngReadAllFrom((uint64_t)v36, (void *)v3))
          {
            PBReaderRecallMark();
            v37 = 40;
            goto LABEL_59;
          }
          goto LABEL_83;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_82;
        v41 = 16 * *(_BYTE *)(a1 + 60);
        goto LABEL_70;
      case 2:
        if (!v31)
          goto LABEL_60;
        if ((*(_BYTE *)(a1 + 60) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_82;
          v41 = *(_BYTE *)(a1 + 60) << 6;
          goto LABEL_70;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_82;
        v36 = objc_alloc_init(GEOLatLng);
        if (!GEOLatLngReadAllFrom((uint64_t)v36, (void *)v3))
          goto LABEL_83;
        PBReaderRecallMark();
        v37 = 24;
        goto LABEL_59;
      case 3:
        if (!v31)
          goto LABEL_60;
        if ((*(_BYTE *)(a1 + 60) & 1) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_82;
          v7 -= *(_BYTE *)(a1 + 60) & 1;
          goto LABEL_71;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_82;
        v36 = objc_alloc_init(GEORPFeedbackTileFeatureInfo);
        if (!GEORPFeedbackTileFeatureInfoReadAllFrom((uint64_t)v36, (void *)v3, v9 & 1))
          goto LABEL_83;
        PBReaderRecallMark();
        v37 = 16;
        goto LABEL_59;
      case 4:
        if (!v31)
        {
LABEL_60:
          v40 = PBReaderSkipValueWithTag();
          v18 = (int *)MEMORY[0x1E0D82BC8];
          if ((v40 & 1) == 0)
          {
LABEL_81:
            v42 = 0;
            goto LABEL_85;
          }
LABEL_72:
          if (!v16 && v7 == 0)
            goto LABEL_73;
          continue;
        }
        if ((*(_BYTE *)(a1 + 60) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_82:
            v42 = 0;
            goto LABEL_84;
          }
          v41 = 32 * *(_BYTE *)(a1 + 60);
LABEL_70:
          v7 += v41 >> 7;
          goto LABEL_71;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_82;
        v36 = objc_alloc_init(GEORPFeedbackTileFeatureInfo);
        if (GEORPFeedbackTileFeatureInfoReadAllFrom((uint64_t)v36, (void *)v3, v9 & 1))
        {
          PBReaderRecallMark();
          v37 = 32;
LABEL_59:
          v39 = *(void **)(a1 + v37);
          *(_QWORD *)(a1 + v37) = v36;

          --v7;
          v16 = v47;
LABEL_71:
          v18 = (int *)MEMORY[0x1E0D82BC8];
          goto LABEL_72;
        }
LABEL_83:

        v42 = 0;
        v16 = v47;
LABEL_84:
        v18 = (int *)MEMORY[0x1E0D82BC8];
LABEL_85:
        *(_BYTE *)(a1 + 60) |= 8u;
        *(_BYTE *)(a1 + 60) |= 2u;
        *(_BYTE *)(a1 + 60) |= 1u;
        *(_BYTE *)(a1 + 60) |= 4u;
        if ((v42 & 1) != 0)
        {
LABEL_86:
          v3 = *(_BYTE *)(v3 + *v18) == 0;
          if (v16)
            goto LABEL_87;
        }
        else
        {
          v3 = 0;
          if (v16)
          {
LABEL_87:
            v45 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = 0;

          }
        }
        return v3;
      default:
        v38 = PBReaderSkipValueWithTag();
        v18 = (int *)MEMORY[0x1E0D82BC8];
        if (!v38)
          goto LABEL_81;
        goto LABEL_72;
    }
  }
}

void sub_18936F414(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18936F558(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18936F698(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18936FC5C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORPFeedbackCoordinateFieldCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  objc_msgSend(a1[5], "readAll:", 1);
  objc_msgSend(a1[3], "readAll:", 1);
  objc_msgSend(a1[2], "readAll:", 1);
  return objc_msgSend(a1[4], "readAll:", 1);
}

unint64_t GEORPFeedbackCoordinateFieldReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 52))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEORPFeedbackCoordinateFieldReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 52) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEORPFeedbackCoordinateFieldReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEORPFeedbackCoordinateFieldReadAllFrom_initialTag;
  Specified = GEORPFeedbackCoordinateFieldReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEORPFeedbackCoordinateFieldCallReadAllRecursiveWithoutSynchronized((id *)a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_18936FE54(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackCoordinateFieldReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORPFeedbackCoordinateFieldReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18936FEB4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackCoordinateFieldIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  BOOL v16;
  _BOOL8 v17;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (2)
    {
      if (!a1[*v4])
      {
        v6 = 0;
        v7 = 0;
        v8 = 0;
        while (1)
        {
          v9 = *v2;
          v10 = *(_QWORD *)&a1[v9];
          v11 = v10 + 1;
          if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
            break;
          v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
          *(_QWORD *)&a1[v9] = v11;
          v8 |= (unint64_t)(v12 & 0x7F) << v6;
          if ((v12 & 0x80) == 0)
            goto LABEL_12;
          v6 += 7;
          if (v7++ >= 9)
          {
            v8 = 0;
            v14 = a1[*v4];
            goto LABEL_14;
          }
        }
        a1[*v4] = 1;
LABEL_12:
        v14 = a1[*v4];
        if (a1[*v4])
          v8 = 0;
LABEL_14:
        v15 = v8 & 7;
        if (v14)
          v16 = 1;
        else
          v16 = v15 == 4;
        if (!v16)
        {
          switch((v8 >> 3))
          {
            case 1u:
            case 2u:
              if (v15 == 2 && PBReaderPlaceMark() && GEOLatLngIsValid(a1))
                goto LABEL_26;
              goto LABEL_30;
            case 3u:
            case 4u:
              if (v15 != 2 || !PBReaderPlaceMark() || !GEORPFeedbackTileFeatureInfoIsValid(a1))
                goto LABEL_30;
LABEL_26:
              PBReaderRecallMark();
LABEL_28:
              if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
                break;
              continue;
            default:
              if ((PBReaderSkipValueWithTag() & 1) != 0)
                goto LABEL_28;
LABEL_30:
              PBReaderRecallMark();
              return 0;
          }
        }
      }
      break;
    }
  }
  v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

BOOL GEORPFeedbackTileFeatureInfoIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  _BOOL8 v17;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_27;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        goto LABEL_27;
      if ((v8 >> 3) == 2)
        break;
      if ((v8 >> 3) != 1)
        goto LABEL_25;
      if (v15 != 2 || !PBReaderPlaceMark() || !GEORPFeatureHandleIsValid(a1))
      {
LABEL_28:
        PBReaderRecallMark();
        return 0;
      }
      PBReaderRecallMark();
LABEL_26:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_27;
    }
    if (v15 != 2)
      goto LABEL_28;
LABEL_25:
    if ((PBReaderSkipValueWithTag() & 1) == 0)
      goto LABEL_28;
    goto LABEL_26;
  }
LABEL_27:
  v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

void sub_18937044C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL _GEORPFeedbackCoordinateFieldIsDirty(uint64_t a1)
{
  char v2;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v2 = *(_BYTE *)(a1 + 60);
  if ((v2 & 0x1A) != 0)
    return 1;
  if ((*(_BYTE *)(a1 + 60) & 1) != 0)
  {
    if (GEORPFeedbackTileFeatureInfoIsDirty(*(_QWORD *)(a1 + 16)))
      return 1;
    v2 = *(_BYTE *)(a1 + 60);
  }
  return (v2 & 4) != 0 && GEORPFeedbackTileFeatureInfoIsDirty(*(_QWORD *)(a1 + 32));
}

os_unfair_lock_s *GEORPFeedbackCoordinateFieldIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  _BOOL8 IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEORPFeedbackCoordinateFieldIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 14);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_189370824(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackDoubleFieldReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  int *v23;
  _BOOL8 v24;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 2)
        {
          *(_BYTE *)(a1 + 24) |= 1u;
          v21 = *v4;
          v22 = *(_QWORD *)&v3[v21];
          if (v22 <= 0xFFFFFFFFFFFFFFF7 && v22 + 8 <= *(_QWORD *)&v3[*v5])
          {
            v20 = *(_QWORD *)(*(_QWORD *)&v3[*v7] + v22);
            *(_QWORD *)&v3[v21] = v22 + 8;
          }
          else
          {
            v3[*v6] = 1;
            v20 = 0;
          }
          v23 = &OBJC_IVAR___GEORPFeedbackDoubleField__edited;
        }
        else
        {
          if ((v10 >> 3) != 1)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0)
              goto LABEL_36;
            continue;
          }
          *(_BYTE *)(a1 + 24) |= 2u;
          v18 = *v4;
          v19 = *(_QWORD *)&v3[v18];
          if (v19 <= 0xFFFFFFFFFFFFFFF7 && v19 + 8 <= *(_QWORD *)&v3[*v5])
          {
            v20 = *(_QWORD *)(*(_QWORD *)&v3[*v7] + v19);
            *(_QWORD *)&v3[v18] = v19 + 8;
          }
          else
          {
            v3[*v6] = 1;
            v20 = 0;
          }
          v23 = &OBJC_IVAR___GEORPFeedbackDoubleField__original;
        }
        *(_QWORD *)(a1 + *v23) = v20;
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v24 = v3[*v6] == 0;
  }
  else
  {
LABEL_36:
    v24 = 0;
  }
  objc_sync_exit(v3);

  return v24;
}

void sub_1893710A4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackDoubleFieldReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORPFeedbackDoubleFieldReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189371104(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackDoubleFieldIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v14;
  int v15;
  int v16;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  _BOOL8 v21;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = *v4;
          v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = *v4;
      v15 = a1[v14];
      if (a1[v14])
        v8 = 0;
LABEL_14:
      v16 = v8 & 7;
      if (v15 || v16 == 4)
        break;
      if ((v8 >> 3) == 2 || (v8 >> 3) == 1)
      {
        if (v16 != 1)
          goto LABEL_30;
        v18 = *v2;
        v19 = *(_QWORD *)&a1[v18];
        if (v19 <= 0xFFFFFFFFFFFFFFF7 && (v20 = v19 + 8, v20 <= *(_QWORD *)&a1[*v3]))
          *(_QWORD *)&a1[v18] = v20;
        else
          a1[v14] = 1;
      }
      else if (!PBReaderSkipValueWithTag())
      {
LABEL_30:
        v21 = 0;
        goto LABEL_29;
      }
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v21 = a1[*v4] == 0;
LABEL_29:
  PBReaderRecallMark();
  return v21;
}

void sub_18937185C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackDynamicFormReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  int *v15;
  GEORPFeedbackFormField *v16;
  int *v17;
  int *v18;
  int *v19;
  char v20;
  unsigned int v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  int v28;
  unint64_t v30;
  BOOL v31;
  int *v32;
  int v33;
  int v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  void *v39;
  char v40;
  char v41;
  char v42;
  int v43;
  char v44;
  void *v45;
  int v47;
  char v48;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 60);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 56));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = (vaddv_s16((int16x4_t)(*(_QWORD *)&vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int8 *)(a1 + 68)), (uint16x4_t)0xFFFFFFFEFFFCFFFDLL) & 0xFF01FF01FF01FF01))+ (*(_BYTE *)(a1 + 68) & 1));
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v7])
    {
      case -3:
        v8 = 1;
        goto LABEL_6;
      case -2:
        v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v10 | (v11 > 3);
        if (((v14 | v8) & 1) != 0)
          v15 = 0;
        else
          v15 = a3;
        LODWORD(v16) = v14;
        v17 = (int *)MEMORY[0x1E0D82BF0];
        v48 = (v15 == 0) | v14;
        v18 = (int *)MEMORY[0x1E0D82BC8];
        v19 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_6:
        v12 = v9;
        v13 = v10;
LABEL_8:
        ++v7;
        v9 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v17) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v18))
      goto LABEL_70;
    v20 = 0;
    v21 = 0;
    v22 = 0;
    while (1)
    {
      v23 = *v17;
      v24 = *(_QWORD *)(v3 + v23);
      v25 = v24 + 1;
      if (v24 == -1 || v25 > *(_QWORD *)(v3 + *v6))
        break;
      v26 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v24);
      *(_QWORD *)(v3 + v23) = v25;
      v22 |= (unint64_t)(v26 & 0x7F) << v20;
      if ((v26 & 0x80) == 0)
        goto LABEL_23;
      v20 += 7;
      if (v21++ >= 9)
      {
        v22 = 0;
        v28 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(_BYTE *)(v3 + *v18) = 1;
LABEL_23:
    v28 = *(unsigned __int8 *)(v3 + *v18);
    if (*(_BYTE *)(v3 + *v18))
      v22 = 0;
LABEL_25:
    if (v28 || (v22 & 7) == 4)
    {
LABEL_70:
      if ((v16 & 1) != 0)
      {
        v42 = 1;
        goto LABEL_82;
      }
      if (v15)
      {
        while (1)
        {
          v43 = *v15++;
          v44 = 16;
          switch(v43)
          {
            case 0:
              goto LABEL_83;
            case 1:
              goto LABEL_78;
            case 2:
              v44 = 8;
              goto LABEL_78;
            case 3:
              v44 = 4;
              goto LABEL_78;
            case 4:
              v44 = 1;
              goto LABEL_78;
            case 5:
              v44 = 2;
LABEL_78:
              *(_BYTE *)(a1 + 68) |= v44;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_83;
    }
    v30 = v22 >> 3;
    v31 = (char)v16;
    if ((v48 & 1) == 0)
    {
      v32 = v15;
      do
      {
        v34 = *v32++;
        v33 = v34;
        v31 = v34 != 0;
        if (v34)
          v35 = v33 == (_DWORD)v30;
        else
          v35 = 1;
      }
      while (!v35);
    }
    switch((int)v30)
    {
      case 1:
        if (!v31)
          goto LABEL_59;
        if ((*(_BYTE *)(a1 + 68) & 0x10) == 0)
        {
          PBReaderReadString();
          v36 = objc_claimAutoreleasedReturnValue();
          v37 = 48;
          goto LABEL_58;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_80;
        v41 = 8 * *(_BYTE *)(a1 + 68);
        goto LABEL_67;
      case 2:
        if (!v31 || (*(_BYTE *)(a1 + 68) & 8) != 0)
          goto LABEL_59;
        v47 = (int)v16;
        PBReaderReadString();
        v16 = (GEORPFeedbackFormField *)objc_claimAutoreleasedReturnValue();
        if (v16)
          -[GEORPFeedbackDynamicForm _addNoFlagsUserPaths:](a1, v16);
        goto LABEL_51;
      case 3:
        if (!v31 || (*(_BYTE *)(a1 + 68) & 4) != 0)
          goto LABEL_59;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_80;
        v47 = (int)v16;
        v16 = objc_alloc_init(GEORPFeedbackFormField);
        if (GEORPFeedbackFormFieldReadAllFrom((uint64_t)v16, (void *)v3, v9 & 1))
        {
          PBReaderRecallMark();
          -[GEORPFeedbackDynamicForm _addNoFlagsFormFields:](a1, v16);
LABEL_51:

          LODWORD(v16) = v47;
LABEL_68:
          v18 = (int *)MEMORY[0x1E0D82BC8];
LABEL_69:
          if (!(v16 & 1 | (v7 != 0)))
            goto LABEL_70;
          continue;
        }

        v42 = 0;
        LOBYTE(v16) = v47;
LABEL_81:
        v18 = (int *)MEMORY[0x1E0D82BC8];
LABEL_82:
        *(_BYTE *)(a1 + 68) |= 0x10u;
        *(_BYTE *)(a1 + 68) |= 8u;
        *(_BYTE *)(a1 + 68) |= 4u;
        *(_BYTE *)(a1 + 68) |= 1u;
        *(_BYTE *)(a1 + 68) |= 2u;
        if ((v42 & 1) != 0)
        {
LABEL_83:
          v3 = *(_BYTE *)(v3 + *v18) == 0;
          if ((v16 & 1) != 0)
            goto LABEL_84;
        }
        else
        {
          v3 = 0;
          if ((v16 & 1) != 0)
          {
LABEL_84:
            v45 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = 0;

          }
        }
        return v3;
      case 4:
        if (!v31)
          goto LABEL_59;
        if ((*(_BYTE *)(a1 + 68) & 1) == 0)
        {
          PBReaderReadString();
          v36 = objc_claimAutoreleasedReturnValue();
          v37 = 16;
          goto LABEL_58;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_80;
        v7 -= *(_BYTE *)(a1 + 68) & 1;
        goto LABEL_68;
      case 5:
        if (v31)
        {
          if ((*(_BYTE *)(a1 + 68) & 2) != 0)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0)
            {
LABEL_80:
              v42 = 0;
              goto LABEL_81;
            }
            v41 = *(_BYTE *)(a1 + 68) << 6;
LABEL_67:
            v7 += v41 >> 7;
          }
          else
          {
            PBReaderReadString();
            v36 = objc_claimAutoreleasedReturnValue();
            v37 = 24;
LABEL_58:
            v39 = *(void **)(a1 + v37);
            *(_QWORD *)(a1 + v37) = v36;

            --v7;
          }
          goto LABEL_68;
        }
LABEL_59:
        v40 = PBReaderSkipValueWithTag();
        v18 = (int *)MEMORY[0x1E0D82BC8];
        if ((v40 & 1) == 0)
        {
LABEL_79:
          v42 = 0;
          goto LABEL_82;
        }
        goto LABEL_69;
      default:
        v38 = PBReaderSkipValueWithTag();
        v18 = (int *)MEMORY[0x1E0D82BC8];
        if (!v38)
          goto LABEL_79;
        goto LABEL_69;
    }
  }
}

void sub_189371F40(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189372270(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893725A0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893726E0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189372F54(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEORPFeedbackDynamicFormCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _BYTE v10[128];
  uint64_t v11;

  v11 = *MEMORY[0x1E0C80C00];
  v6 = 0u;
  v7 = 0u;
  v8 = 0u;
  v9 = 0u;
  v1 = *(id *)(a1 + 32);
  v2 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
  if (v2)
  {
    v3 = v2;
    v4 = *(_QWORD *)v7;
    do
    {
      v5 = 0;
      do
      {
        if (*(_QWORD *)v7 != v4)
          objc_enumerationMutation(v1);
        objc_msgSend(*(id *)(*((_QWORD *)&v6 + 1) + 8 * v5++), "readAll:", 1, (_QWORD)v6);
      }
      while (v3 != v5);
      v3 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
    }
    while (v3);
  }

}

unint64_t GEORPFeedbackDynamicFormReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 60))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEORPFeedbackDynamicFormReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 60) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEORPFeedbackDynamicFormReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEORPFeedbackDynamicFormReadAllFrom_initialTag;
  Specified = GEORPFeedbackDynamicFormReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEORPFeedbackDynamicFormCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_1893731DC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackDynamicFormReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORPFeedbackDynamicFormReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18937323C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackDynamicFormIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  _BOOL8 v17;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (!a1[*v4])
    {
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2)
            goto LABEL_33;
          goto LABEL_30;
        case 2u:
          if (v15 == 2)
            goto LABEL_30;
          goto LABEL_33;
        case 3u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPFeedbackFormFieldIsValid(a1))
            goto LABEL_33;
          PBReaderRecallMark();
          goto LABEL_31;
        case 4u:
          if (v15 == 2)
            goto LABEL_30;
          goto LABEL_33;
        case 5u:
          if (v15 == 2)
            goto LABEL_30;
          goto LABEL_33;
        default:
LABEL_30:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_33:
            PBReaderRecallMark();
            return 0;
          }
LABEL_31:
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_32;
          break;
      }
    }
  }
LABEL_32:
  v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

BOOL GEORPFeedbackFormFieldIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  _BOOL8 v23;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (!a1[*v4])
    {
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0)
            goto LABEL_48;
          v17 = 0;
          do
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
            {
              a1[*v4] = 1;
              goto LABEL_44;
            }
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if ((v21 & 0x80000000) == 0)
              break;
          }
          while (v17++ <= 8);
          goto LABEL_44;
        case 2u:
          if (v15 == 2 && PBReaderPlaceMark() && GEORPFeedbackFieldValueIsValid(a1))
            goto LABEL_35;
          goto LABEL_48;
        case 3u:
          if (v15 == 2)
            goto LABEL_43;
          goto LABEL_48;
        case 4u:
          if (v15 == 2)
            goto LABEL_43;
          goto LABEL_48;
        case 5u:
          if (v15 == 2)
            goto LABEL_43;
          goto LABEL_48;
        case 6u:
          if (v15 == 2)
            goto LABEL_43;
          goto LABEL_48;
        default:
          if ((v8 >> 3) == 1000)
          {
            if (v15 != 2 || !PBReaderPlaceMark() || !GEORPFeedbackFormFieldAnnotationsIsValid(a1))
            {
LABEL_48:
              PBReaderRecallMark();
              return 0;
            }
LABEL_35:
            PBReaderRecallMark();
          }
          else
          {
LABEL_43:
            if ((PBReaderSkipValueWithTag() & 1) == 0)
              goto LABEL_48;
          }
LABEL_44:
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_47;
          break;
      }
    }
  }
LABEL_47:
  v23 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v23;
}

void sub_189373A44(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackDynamicFormIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  v2 = (*(_BYTE *)(a1 + 68) & 0x3F) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return v2;
}

void sub_189374080(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189374608(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackFieldAnnotationsReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  _BOOL4 v15;
  int *v16;
  BOOL v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  int v29;
  unint64_t v31;
  _BOOL4 v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  GEORPFeedbackTextField *v37;
  uint64_t v38;
  void *v39;
  char v40;
  char v41;
  int v42;
  int v43;
  void *v44;
  BOOL v46;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 36);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 32));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int8 *)(a1 + 44) >> 1) & 1) + (*(_BYTE *)(a1 + 44) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v7])
    {
      case -3:
        v8 = 1;
        goto LABEL_6;
      case -2:
        v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v10 & 1 | v11;
        v15 = v14 != 0;
        if ((v14 != 0) | v8 & 1)
          v16 = 0;
        else
          v16 = a3;
        v17 = v16 == 0;
        if (v14)
          v17 = 1;
        v46 = v17;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_6:
        v12 = v9;
        v13 = v10;
LABEL_8:
        ++v7;
        v9 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v19))
      goto LABEL_63;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0)
        goto LABEL_25;
      v21 += 7;
      if (v22++ >= 9)
      {
        v23 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_25:
    v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_27:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_63:
      if (v15)
      {
        v41 = 1;
        goto LABEL_72;
      }
      if (v16)
      {
        do
        {
          while (1)
          {
            v43 = *v16++;
            v42 = v43;
            if (v43 != 1 && v42 != 2)
              break;
            *(_BYTE *)(a1 + 44) |= v42;
          }
        }
        while (v42);
      }
      goto LABEL_73;
    }
    v31 = v23 >> 3;
    v32 = v15;
    if (!v46)
    {
      v33 = v16;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    if ((_DWORD)v31 != 2)
    {
      if ((_DWORD)v31 != 1)
      {
        if (!PBReaderSkipValueWithTag())
          goto LABEL_71;
        goto LABEL_54;
      }
      if (!v32)
        goto LABEL_53;
      if ((*(_BYTE *)(a1 + 44) & 1) != 0)
      {
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_71;
        v7 -= *(_BYTE *)(a1 + 44) & 1;
        goto LABEL_54;
      }
      if ((PBReaderPlaceMark() & 1) == 0)
        goto LABEL_71;
      v37 = objc_alloc_init(GEORPFeedbackTextField);
      if (!GEORPFeedbackTextFieldReadAllFrom((uint64_t)v37, (void *)v3, v9 & 1))
        goto LABEL_78;
      PBReaderRecallMark();
      v38 = 16;
      goto LABEL_50;
    }
    if (!v32)
    {
LABEL_53:
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        goto LABEL_71;
      goto LABEL_54;
    }
    if ((*(_BYTE *)(a1 + 44) & 2) == 0)
      break;
    if ((PBReaderSkipValueWithTag() & 1) == 0)
    {
LABEL_71:
      v41 = 0;
      goto LABEL_72;
    }
    v7 += *(unsigned __int8 *)(a1 + 44) << 30 >> 31;
LABEL_54:
    if (v7)
      v40 = 1;
    else
      v40 = v15;
    if ((v40 & 1) == 0)
      goto LABEL_63;
  }
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_71;
  v37 = objc_alloc_init(GEORPFeedbackTextListField);
  if (GEORPFeedbackTextListFieldReadAllFrom((uint64_t)v37, (void *)v3, v9 & 1))
  {
    PBReaderRecallMark();
    v38 = 24;
LABEL_50:
    v39 = *(void **)(a1 + v38);
    *(_QWORD *)(a1 + v38) = v37;

    --v7;
    v19 = (int *)MEMORY[0x1E0D82BC8];
    goto LABEL_54;
  }
LABEL_78:

  v41 = 0;
  v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_72:
  *(_BYTE *)(a1 + 44) |= 1u;
  *(_BYTE *)(a1 + 44) |= 2u;
  if ((v41 & 1) != 0)
  {
LABEL_73:
    v3 = *(_BYTE *)(v3 + *v19) == 0;
    if (!v15)
      return v3;
    goto LABEL_74;
  }
  v3 = 0;
  if (v15)
  {
LABEL_74:
    v44 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_189374BBC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18937502C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackFieldAnnotationsReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 36))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEORPFeedbackFieldAnnotationsReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 40));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 32) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 36) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEORPFeedbackFieldAnnotationsReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEORPFeedbackFieldAnnotationsReadAllFrom_initialTag;
  Specified = GEORPFeedbackFieldAnnotationsReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    objc_msgSend(*(id *)(a1 + 16), "readAll:", 1);
    objc_msgSend(*(id *)(a1 + 24), "readAll:", 1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return Specified;
}

void sub_1893751E4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackFieldAnnotationsReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORPFeedbackFieldAnnotationsReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189375244(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackFieldAnnotationsIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  _BOOL8 v17;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_30;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        goto LABEL_30;
      if ((v8 >> 3) == 2)
        break;
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEORPFeedbackTextFieldIsValid(a1))
          goto LABEL_31;
LABEL_27:
        PBReaderRecallMark();
        goto LABEL_29;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        goto LABEL_31;
LABEL_29:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_30;
    }
    if (v15 != 2 || !PBReaderPlaceMark() || !GEORPFeedbackTextListFieldIsValid(a1))
    {
LABEL_31:
      PBReaderRecallMark();
      return 0;
    }
    goto LABEL_27;
  }
LABEL_30:
  v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

BOOL GEORPFeedbackTextFieldIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  _BOOL8 v17;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_27;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        goto LABEL_27;
      if ((v8 >> 3) == 2)
        break;
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2)
          goto LABEL_29;
        goto LABEL_23;
      }
      if (!PBReaderSkipValueWithTag())
      {
LABEL_29:
        v17 = 0;
        goto LABEL_28;
      }
LABEL_26:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_27;
    }
    if (v15 != 2)
      goto LABEL_29;
LABEL_23:
    if ((PBReaderSkipValueWithTag() & 1) == 0)
      goto LABEL_29;
    goto LABEL_26;
  }
LABEL_27:
  v17 = a1[*v4] == 0;
LABEL_28:
  PBReaderRecallMark();
  return v17;
}

BOOL GEORPFeedbackTextListFieldIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unint64_t v17;
  _BOOL8 v18;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_30;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        goto LABEL_30;
      v17 = v8 >> 3;
      if ((v8 >> 3) == 3)
        break;
      if ((_DWORD)v17 == 2)
      {
        if (v15 != 2)
          goto LABEL_32;
LABEL_26:
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_32;
        goto LABEL_29;
      }
      if ((_DWORD)v17 == 1)
      {
        if (v15 != 2)
          goto LABEL_32;
        goto LABEL_26;
      }
      if (!PBReaderSkipValueWithTag())
      {
LABEL_32:
        v18 = 0;
        goto LABEL_31;
      }
LABEL_29:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_30;
    }
    if (v15 != 2)
      goto LABEL_32;
    goto LABEL_26;
  }
LABEL_30:
  v18 = a1[*v4] == 0;
LABEL_31:
  PBReaderRecallMark();
  return v18;
}

void sub_189375934(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL _GEORPFeedbackFieldAnnotationsIsDirty(uint64_t a1)
{
  char v2;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  v2 = *(_BYTE *)(a1 + 44);
  if ((v2 & 4) != 0)
    return 1;
  if ((*(_BYTE *)(a1 + 44) & 1) != 0)
  {
    if (GEORPFeedbackTextFieldIsDirty(*(_QWORD *)(a1 + 16)))
      return 1;
    v2 = *(_BYTE *)(a1 + 44);
  }
  return (v2 & 2) != 0 && GEORPFeedbackTextListFieldIsDirty(*(_QWORD *)(a1 + 24));
}

os_unfair_lock_s *GEORPFeedbackFieldAnnotationsIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  _BOOL8 IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEORPFeedbackFieldAnnotationsIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 10);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_189375C30(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189377840(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackFieldOptionReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  int v9;
  unsigned int v10;
  unsigned int v11;
  int v12;
  int *v13;
  GEORPFeedbackFieldOptionAnnotations *v14;
  int *v15;
  int *v16;
  int *v17;
  char v18;
  unsigned int v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  BOOL v25;
  int v26;
  unint64_t v28;
  BOOL v29;
  int *v30;
  int v31;
  int v32;
  BOOL v33;
  char v34;
  unsigned int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  void *v45;
  int v46;
  char v47;
  char v48;
  char v49;
  int v50;
  int v51;
  char v52;
  void *v53;
  int v55;
  char v56;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 52);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 48));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = vaddv_s16((int16x4_t)(*(_QWORD *)&vshl_u16((uint16x4_t)(*(_QWORD *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 64)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFFFFFCFFFDFFFELL) & 0xFF01FF01FF01FF01));
  while (1)
  {
    v11 = a3[v7];
    if (v11 >= 0xFFFFFFFE)
    {
      v9 = 1;
      goto LABEL_9;
    }
    if (v11 != -3)
      break;
    v8 = 1;
LABEL_9:
    ++v7;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  v12 = v9 | (v10 > 2);
  if (((v12 | v8) & 1) != 0)
    v13 = 0;
  else
    v13 = a3;
  LODWORD(v14) = v12;
  v15 = (int *)MEMORY[0x1E0D82BF0];
  v16 = (int *)MEMORY[0x1E0D82BC8];
  v56 = (v13 == 0) | v12;
  v17 = (int *)MEMORY[0x1E0D82BB8];
  while (2)
  {
    if (*(_QWORD *)(v3 + *v15) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v16))
      goto LABEL_82;
    v18 = 0;
    v19 = 0;
    v20 = 0;
    while (1)
    {
      v21 = *v15;
      v22 = *(_QWORD *)(v3 + v21);
      v23 = v22 + 1;
      if (v22 == -1 || v23 > *(_QWORD *)(v3 + *v6))
        break;
      v24 = *(_BYTE *)(*(_QWORD *)(v3 + *v17) + v22);
      *(_QWORD *)(v3 + v21) = v23;
      v20 |= (unint64_t)(v24 & 0x7F) << v18;
      if ((v24 & 0x80) == 0)
        goto LABEL_24;
      v18 += 7;
      v25 = v19++ >= 9;
      if (v25)
      {
        v20 = 0;
        v26 = *(unsigned __int8 *)(v3 + *v16);
        goto LABEL_26;
      }
    }
    *(_BYTE *)(v3 + *v16) = 1;
LABEL_24:
    v26 = *(unsigned __int8 *)(v3 + *v16);
    if (*(_BYTE *)(v3 + *v16))
      v20 = 0;
LABEL_26:
    if (v26 || (v20 & 7) == 4)
    {
LABEL_82:
      if ((v14 & 1) != 0)
      {
        v49 = 1;
        goto LABEL_95;
      }
      if (v13)
      {
        while (1)
        {
          v51 = *v13++;
          v50 = v51;
          v52 = 8;
          switch(v51)
          {
            case 0:
              goto LABEL_96;
            case 1:
              continue;
            case 2:
              goto LABEL_90;
            case 3:
              v52 = 4;
              goto LABEL_90;
            case 4:
              v52 = 16;
              goto LABEL_90;
            default:
              if (v50 != 1000)
                continue;
              v52 = 2;
LABEL_90:
              *(_BYTE *)(a1 + 64) |= v52;
              break;
          }
        }
      }
      goto LABEL_96;
    }
    v28 = v20 >> 3;
    v29 = (char)v14;
    if ((v56 & 1) == 0)
    {
      v30 = v13;
      do
      {
        v32 = *v30++;
        v31 = v32;
        v29 = v32 != 0;
        if (v32)
          v33 = v31 == (_DWORD)v28;
        else
          v33 = 1;
      }
      while (!v33);
    }
    switch((int)v28)
    {
      case 1:
        if ((v8 & 1) == 0)
          goto LABEL_67;
        v34 = 0;
        v35 = 0;
        v36 = 0;
        *(_BYTE *)(a1 + 64) |= 1u;
        while (1)
        {
          v37 = *v15;
          v38 = *(_QWORD *)(v3 + v37);
          v39 = v38 + 1;
          if (v38 == -1 || v39 > *(_QWORD *)(v3 + *v6))
            break;
          v40 = *(_BYTE *)(*(_QWORD *)(v3 + *v17) + v38);
          *(_QWORD *)(v3 + v37) = v39;
          v36 |= (unint64_t)(v40 & 0x7F) << v34;
          if ((v40 & 0x80) == 0)
            goto LABEL_70;
          v34 += 7;
          v25 = v35++ >= 9;
          if (v25)
          {
            LODWORD(v36) = 0;
            goto LABEL_72;
          }
        }
        *(_BYTE *)(v3 + *v16) = 1;
LABEL_70:
        if (*(_BYTE *)(v3 + *v16))
          LODWORD(v36) = 0;
LABEL_72:
        *(_DWORD *)(a1 + 60) = v36;
        goto LABEL_81;
      case 2:
        if (!v29)
          goto LABEL_67;
        if ((*(_BYTE *)(a1 + 64) & 8) == 0)
        {
          PBReaderReadString();
          v42 = objc_claimAutoreleasedReturnValue();
          v43 = 32;
          goto LABEL_58;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_92;
        v48 = 16 * *(_BYTE *)(a1 + 64);
        goto LABEL_79;
      case 3:
        if (!v29)
          goto LABEL_67;
        if ((*(_BYTE *)(a1 + 64) & 4) == 0)
        {
          PBReaderReadString();
          v42 = objc_claimAutoreleasedReturnValue();
          v43 = 24;
LABEL_58:
          v44 = *(void **)(a1 + v43);
          *(_QWORD *)(a1 + v43) = v42;

          --v7;
          goto LABEL_80;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_92:
          v49 = 0;
          goto LABEL_94;
        }
        v48 = 32 * *(_BYTE *)(a1 + 64);
        goto LABEL_79;
      case 4:
        if (!v29 || (*(_BYTE *)(a1 + 64) & 0x10) != 0)
          goto LABEL_67;
        v55 = (int)v14;
        PBReaderReadString();
        v45 = (void *)objc_claimAutoreleasedReturnValue();
        if (v45)
          -[GEORPFeedbackFieldOption _addNoFlagsTag:](a1, v45);

        goto LABEL_64;
      default:
        if ((_DWORD)v28 != 1000)
        {
          v46 = PBReaderSkipValueWithTag();
          v16 = (int *)MEMORY[0x1E0D82BC8];
          if (!v46)
            goto LABEL_91;
LABEL_81:
          if (!(v14 & 1 | (v7 != 0)))
            goto LABEL_82;
          continue;
        }
        if (!v29)
        {
LABEL_67:
          v47 = PBReaderSkipValueWithTag();
          v16 = (int *)MEMORY[0x1E0D82BC8];
          if ((v47 & 1) == 0)
          {
LABEL_91:
            v49 = 0;
            goto LABEL_95;
          }
          goto LABEL_81;
        }
        if ((*(_BYTE *)(a1 + 64) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_92;
          v48 = *(_BYTE *)(a1 + 64) << 6;
LABEL_79:
          v7 += v48 >> 7;
          goto LABEL_80;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_92;
        v55 = (int)v14;
        v14 = objc_alloc_init(GEORPFeedbackFieldOptionAnnotations);
        if (GEORPFeedbackFieldOptionAnnotationsReadAllFrom((uint64_t)v14, (void *)v3))
        {
          PBReaderRecallMark();
          v41 = *(void **)(a1 + 16);
          *(_QWORD *)(a1 + 16) = v14;

          --v7;
LABEL_64:
          LODWORD(v14) = v55;
LABEL_80:
          v16 = (int *)MEMORY[0x1E0D82BC8];
          goto LABEL_81;
        }

        v49 = 0;
        LOBYTE(v14) = v55;
LABEL_94:
        v16 = (int *)MEMORY[0x1E0D82BC8];
LABEL_95:
        *(_BYTE *)(a1 + 64) |= 8u;
        *(_BYTE *)(a1 + 64) |= 4u;
        *(_BYTE *)(a1 + 64) |= 0x10u;
        *(_BYTE *)(a1 + 64) |= 2u;
        if ((v49 & 1) != 0)
        {
LABEL_96:
          v3 = *(_BYTE *)(v3 + *v16) == 0;
          if ((v14 & 1) != 0)
            goto LABEL_97;
        }
        else
        {
          v3 = 0;
          if ((v14 & 1) != 0)
          {
LABEL_97:
            v53 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = 0;

          }
        }
        return v3;
    }
  }
}

void sub_189377F7C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893780C0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893783F4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18937A258(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackFieldOptionReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 52))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEORPFeedbackFieldOptionReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 52) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEORPFeedbackFieldOptionReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEORPFeedbackFieldOptionReadAllFrom_initialTag;
  Specified = GEORPFeedbackFieldOptionReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    objc_msgSend(*(id *)(a1 + 16), "readAll:", 1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_18937A3FC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackFieldOptionReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORPFeedbackFieldOptionReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18937A45C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackFieldOptionIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  _BOOL8 v23;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (!a1[*v4])
    {
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0)
            goto LABEL_43;
          v17 = 0;
          do
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
            {
              a1[*v4] = 1;
              goto LABEL_38;
            }
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if ((v21 & 0x80000000) == 0)
              break;
          }
          while (v17++ <= 8);
          goto LABEL_38;
        case 2u:
          if (v15 == 2)
            goto LABEL_37;
          goto LABEL_43;
        case 3u:
          if (v15 == 2)
            goto LABEL_37;
          goto LABEL_43;
        case 4u:
          if (v15 == 2)
            goto LABEL_37;
          goto LABEL_43;
        default:
          if ((v8 >> 3) == 1000)
          {
            if (v15 != 2 || !PBReaderPlaceMark() || !GEORPFeedbackFieldOptionAnnotationsIsValid(a1))
            {
LABEL_43:
              PBReaderRecallMark();
              return 0;
            }
            PBReaderRecallMark();
          }
          else
          {
LABEL_37:
            if ((PBReaderSkipValueWithTag() & 1) == 0)
              goto LABEL_43;
          }
LABEL_38:
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_41;
          break;
      }
    }
  }
LABEL_41:
  v23 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v23;
}

BOOL GEORPFeedbackFieldOptionAnnotationsIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  _BOOL8 v17;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_26:
          v17 = 0;
          goto LABEL_25;
        }
      }
      else if (!PBReaderSkipValueWithTag())
      {
        goto LABEL_26;
      }
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v17 = a1[*v4] == 0;
LABEL_25:
  PBReaderRecallMark();
  return v17;
}

void sub_18937AB10(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackFieldOptionIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v2 = (*(_BYTE *)(a1 + 64) & 0x3E) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return v2;
}

void sub_18937AF7C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackFieldOptionAnnotationsReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  uint64_t v18;
  void *v19;
  _BOOL8 v20;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 1)
        {
          PBReaderReadString();
          v18 = objc_claimAutoreleasedReturnValue();
          v19 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = v18;

        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_24;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v20 = v3[*v6] == 0;
  }
  else
  {
LABEL_24:
    v20 = 0;
  }
  objc_sync_exit(v3);

  return v20;
}

void sub_18937B750(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackFieldOptionAnnotationsReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORPFeedbackFieldOptionAnnotationsReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18937B7B0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18937BEE4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackFieldValueReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint32x4_t v12;
  int8x16_t v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  unsigned __int8 v17;
  int *v18;
  BOOL v19;
  int *v20;
  int *v21;
  int *v22;
  char v23;
  unsigned int v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  BOOL v30;
  int v31;
  unint64_t v33;
  BOOL v34;
  int *v35;
  int v36;
  int v37;
  BOOL v38;
  char v39;
  unsigned int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  GEORPFeedbackSingleSelectField *v46;
  uint64_t v47;
  int v48;
  void *v49;
  char v50;
  char v51;
  int v52;
  char v53;
  int v54;
  int v55;
  int v56;
  void *v57;
  BOOL v59;
  char v60;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 192));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 188);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 184));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = *(_DWORD *)(a1 + 200);
  v12 = (uint32x4_t)vdupq_n_s32(v11);
  v13.i64[0] = 0x100000001;
  v13.i64[1] = 0x100000001;
  v14 = vaddvq_s32(vaddq_s32(vaddq_s32(vaddq_s32((int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v12, (uint32x4_t)xmmword_189CDACA0), v13), (int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v12, (uint32x4_t)xmmword_189CDACB0), v13)), vaddq_s32((int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v12, (uint32x4_t)xmmword_189CDAC80), v13), (int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v12, (uint32x4_t)xmmword_189CDAC90), v13))), (int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v12, (uint32x4_t)xmmword_189CDACC0), v13)))+ ((v11 >> 2) & 1);
  while (2)
  {
    v15 = 1;
    v16 = 1;
    switch(a3[v7])
    {
      case -3:
        v8 = 1;
        goto LABEL_6;
      case -2:
        v15 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v17 = v10 | (v14 > 0xF);
        if (((v17 | v8) & 1) != 0)
          v18 = 0;
        else
          v18 = a3;
        v19 = v17;
        v20 = (int *)MEMORY[0x1E0D82BF0];
        v21 = (int *)MEMORY[0x1E0D82BC8];
        v60 = (v18 == 0) | v17;
        v22 = (int *)MEMORY[0x1E0D82BB8];
        v59 = v17;
        break;
      default:
        ++v14;
LABEL_6:
        v15 = v9;
        v16 = v10;
LABEL_8:
        ++v7;
        v9 = v15;
        v10 = v16;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v20) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v21))
      goto LABEL_205;
    v23 = 0;
    v24 = 0;
    v25 = 0;
    while (1)
    {
      v26 = *v20;
      v27 = *(_QWORD *)(v3 + v26);
      v28 = v27 + 1;
      if (v27 == -1 || v28 > *(_QWORD *)(v3 + *v6))
        break;
      v29 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v27);
      *(_QWORD *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0)
        goto LABEL_23;
      v23 += 7;
      v30 = v24++ >= 9;
      if (v30)
      {
        v25 = 0;
        v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_25;
      }
    }
    *(_BYTE *)(v3 + *v21) = 1;
LABEL_23:
    v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(_BYTE *)(v3 + *v21))
      v25 = 0;
LABEL_25:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_205:
      if (v19)
      {
        v53 = 1;
        goto LABEL_235;
      }
      if (v18)
      {
        while (1)
        {
          v55 = *v18++;
          v54 = v55;
          v56 = 0x4000;
          switch(v55)
          {
            case 0:
              goto LABEL_236;
            case 1:
            case 9:
              continue;
            case 2:
              goto LABEL_230;
            case 3:
              v56 = 2048;
              goto LABEL_230;
            case 4:
              v56 = 0x8000;
              goto LABEL_230;
            case 5:
              v56 = 0x10000;
              goto LABEL_230;
            case 6:
              v56 = 16;
              goto LABEL_230;
            case 7:
              v56 = 512;
              goto LABEL_230;
            case 8:
              v56 = 8;
              goto LABEL_230;
            case 10:
              v56 = 1024;
              goto LABEL_230;
            case 11:
              v56 = 0x100000;
              goto LABEL_230;
            case 12:
              v56 = 256;
              goto LABEL_230;
            case 13:
              v56 = 0x80000;
              goto LABEL_230;
            case 14:
              v56 = 32;
              goto LABEL_230;
            case 15:
              v56 = 64;
              goto LABEL_230;
            case 16:
              v56 = 128;
              goto LABEL_230;
            case 17:
              v56 = 0x20000;
              goto LABEL_230;
            case 18:
              v56 = 2;
              goto LABEL_230;
            case 19:
              v56 = 0x200000;
              goto LABEL_230;
            case 20:
              v56 = 0x2000;
              goto LABEL_230;
            case 21:
              v56 = 0x40000;
              goto LABEL_230;
            case 22:
              v56 = 4096;
              goto LABEL_230;
            default:
              if (v54 != 1000)
                continue;
              v56 = 4;
LABEL_230:
              *(_DWORD *)(a1 + 200) |= v56;
              break;
          }
        }
      }
      goto LABEL_236;
    }
    v33 = v25 >> 3;
    v34 = v19;
    if ((v60 & 1) == 0)
    {
      v35 = v18;
      do
      {
        v37 = *v35++;
        v36 = v37;
        v34 = v37 != 0;
        if (v37)
          v38 = v36 == (_DWORD)v33;
        else
          v38 = 1;
      }
      while (!v38);
    }
    switch((int)v33)
    {
      case 1:
        if ((v8 & 1) == 0)
          goto LABEL_158;
        v39 = 0;
        v40 = 0;
        v41 = 0;
        *(_DWORD *)(a1 + 200) |= 1u;
        while (1)
        {
          v42 = *v20;
          v43 = *(_QWORD *)(v3 + v42);
          v44 = v43 + 1;
          if (v43 == -1 || v44 > *(_QWORD *)(v3 + *v6))
            break;
          v45 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v43);
          *(_QWORD *)(v3 + v42) = v44;
          v41 |= (unint64_t)(v45 & 0x7F) << v39;
          if ((v45 & 0x80) == 0)
            goto LABEL_161;
          v39 += 7;
          v30 = v40++ >= 9;
          if (v30)
          {
            LODWORD(v41) = 0;
            goto LABEL_163;
          }
        }
        *(_BYTE *)(v3 + *v21) = 1;
LABEL_161:
        if (*(_BYTE *)(v3 + *v21))
          LODWORD(v41) = 0;
LABEL_163:
        *(_DWORD *)(a1 + 196) = v41;
        goto LABEL_204;
      case 2:
        if (!v34)
          goto LABEL_158;
        if ((*(_BYTE *)(a1 + 201) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_232;
          v52 = (int)(*(_DWORD *)(a1 + 200) << 17) >> 31;
          goto LABEL_202;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_232;
        v46 = objc_alloc_init(GEORPFeedbackSingleSelectField);
        if (!GEORPFeedbackSingleSelectFieldReadAllFrom((uint64_t)v46, (void *)v3, v9 & 1))
          goto LABEL_233;
        PBReaderRecallMark();
        v47 = 120;
        goto LABEL_148;
      case 3:
        if (!v34)
          goto LABEL_158;
        if ((*(_BYTE *)(a1 + 201) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_232;
          v52 = (int)(*(_DWORD *)(a1 + 200) << 20) >> 31;
          goto LABEL_202;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_232;
        v46 = objc_alloc_init(GEORPFeedbackMultiSelectField);
        if (!GEORPFeedbackMultiSelectFieldReadAllFrom((uint64_t)v46, (void *)v3, v9 & 1))
          goto LABEL_233;
        PBReaderRecallMark();
        v47 = 96;
        goto LABEL_148;
      case 4:
        if (!v34)
          goto LABEL_158;
        if ((*(_BYTE *)(a1 + 201) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_232;
          v52 = (int)(*(_DWORD *)(a1 + 200) << 16) >> 31;
          goto LABEL_202;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_232;
        v46 = objc_alloc_init(GEORPFeedbackTextField);
        if (!GEORPFeedbackTextFieldReadAllFrom((uint64_t)v46, (void *)v3, v9 & 1))
          goto LABEL_233;
        PBReaderRecallMark();
        v47 = 128;
        goto LABEL_148;
      case 5:
        if (!v34)
          goto LABEL_158;
        if ((*(_BYTE *)(a1 + 202) & 1) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_232;
          v52 = (int)(*(_DWORD *)(a1 + 200) << 15) >> 31;
          goto LABEL_202;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_232;
        v46 = objc_alloc_init(GEORPFeedbackTextListField);
        if (!GEORPFeedbackTextListFieldReadAllFrom((uint64_t)v46, (void *)v3, v9 & 1))
          goto LABEL_233;
        PBReaderRecallMark();
        v47 = 136;
        goto LABEL_148;
      case 6:
        if (!v34)
          goto LABEL_158;
        if ((*(_BYTE *)(a1 + 200) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_232;
          v52 = (int)(*(_DWORD *)(a1 + 200) << 27) >> 31;
          goto LABEL_202;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_232;
        v46 = objc_alloc_init(GEORPFeedbackTimestamp);
        if (!GEORPFeedbackTimestampReadAllFrom((uint64_t)v46, (void *)v3, v9 & 1))
          goto LABEL_233;
        PBReaderRecallMark();
        v47 = 40;
        goto LABEL_148;
      case 7:
        if (!v34)
          goto LABEL_158;
        if ((*(_BYTE *)(a1 + 201) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_232;
          v52 = (int)(*(_DWORD *)(a1 + 200) << 22) >> 31;
          goto LABEL_202;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_232;
        v46 = objc_alloc_init(GEORPFeedbackCoordinateField);
        if (!GEORPFeedbackCoordinateFieldReadAllFrom((uint64_t)v46, (void *)v3, v9 & 1))
          goto LABEL_233;
        PBReaderRecallMark();
        v47 = 80;
        goto LABEL_148;
      case 8:
        if (!v34)
          goto LABEL_158;
        if ((*(_BYTE *)(a1 + 200) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_232;
          v52 = (int)(*(_DWORD *)(a1 + 200) << 28) >> 31;
          goto LABEL_202;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_232;
        v46 = objc_alloc_init(GEORPFeedbackBooleanField);
        if (!GEORPFeedbackBooleanFieldReadAllFrom((uint64_t)v46, (void *)v3))
          goto LABEL_233;
        PBReaderRecallMark();
        v47 = 32;
        goto LABEL_148;
      case 9:
        goto LABEL_51;
      case 10:
        if (!v34)
          goto LABEL_158;
        if ((*(_BYTE *)(a1 + 201) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_232;
          v52 = (int)(*(_DWORD *)(a1 + 200) << 21) >> 31;
          goto LABEL_202;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_232;
        v46 = objc_alloc_init(GEORPFeedbackLongField);
        if (!GEORPFeedbackLongFieldReadAllFrom((uint64_t)v46, (void *)v3))
          goto LABEL_233;
        PBReaderRecallMark();
        v47 = 88;
        goto LABEL_148;
      case 11:
        if (!v34)
          goto LABEL_158;
        if ((*(_BYTE *)(a1 + 202) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_232;
          v52 = (int)(*(_DWORD *)(a1 + 200) << 11) >> 31;
          goto LABEL_202;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_232;
        v46 = objc_alloc_init(GEORPFeedbackULongField);
        if (!GEORPFeedbackULongFieldReadAllFrom((uint64_t)v46, (void *)v3))
          goto LABEL_233;
        PBReaderRecallMark();
        v47 = 168;
        goto LABEL_148;
      case 12:
        if (!v34)
          goto LABEL_158;
        if ((*(_BYTE *)(a1 + 201) & 1) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_232;
          v52 = (int)(*(_DWORD *)(a1 + 200) << 23) >> 31;
          goto LABEL_202;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_232;
        v46 = objc_alloc_init(GEORPFeedbackIntField);
        if (!GEORPFeedbackIntFieldReadAllFrom((uint64_t)v46, (void *)v3))
          goto LABEL_233;
        PBReaderRecallMark();
        v47 = 72;
        goto LABEL_148;
      case 13:
        if (!v34)
          goto LABEL_158;
        if ((*(_BYTE *)(a1 + 202) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_232;
          v52 = (int)(*(_DWORD *)(a1 + 200) << 12) >> 31;
          goto LABEL_202;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_232;
        v46 = objc_alloc_init(GEORPFeedbackUIntField);
        if (!GEORPFeedbackUIntFieldReadAllFrom((uint64_t)v46, (void *)v3))
          goto LABEL_233;
        PBReaderRecallMark();
        v47 = 160;
        goto LABEL_148;
      case 14:
        if (!v34)
          goto LABEL_158;
        if ((*(_BYTE *)(a1 + 200) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_232;
          v52 = (int)(*(_DWORD *)(a1 + 200) << 26) >> 31;
          goto LABEL_202;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_232;
        v46 = objc_alloc_init(GEORPFeedbackDoubleField);
        if (!GEORPFeedbackDoubleFieldReadAllFrom((uint64_t)v46, (void *)v3))
          goto LABEL_233;
        PBReaderRecallMark();
        v47 = 48;
        goto LABEL_148;
      case 15:
        if (!v34)
          goto LABEL_158;
        if ((*(_BYTE *)(a1 + 200) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_232;
          v52 = (int)(*(_DWORD *)(a1 + 200) << 25) >> 31;
          goto LABEL_202;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_232;
        v46 = objc_alloc_init(GEORPFeedbackFloatField);
        if (!GEORPFeedbackFloatFieldReadAllFrom((uint64_t)v46, (void *)v3))
          goto LABEL_233;
        PBReaderRecallMark();
        v47 = 56;
        goto LABEL_148;
      case 16:
        if (!v34 || (*(_BYTE *)(a1 + 200) & 0x80) != 0)
          goto LABEL_156;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_232;
        v46 = objc_alloc_init(GEORPFeedbackBusinessHours);
        if (!GEORPFeedbackBusinessHoursReadAllFrom((uint64_t)v46, (void *)v3, v9 & 1))
          goto LABEL_233;
        PBReaderRecallMark();
        -[GEORPFeedbackFieldValue _addNoFlagsHoursField:](a1, v46);
        goto LABEL_155;
      case 17:
        if (!v34)
          goto LABEL_158;
        if ((*(_BYTE *)(a1 + 202) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_232;
          v52 = (int)(*(_DWORD *)(a1 + 200) << 14) >> 31;
          goto LABEL_202;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_232;
        v46 = objc_alloc_init(GEORPFeedbackTileFeatureInfo);
        if (!GEORPFeedbackTileFeatureInfoReadAllFrom((uint64_t)v46, (void *)v3, v9 & 1))
          goto LABEL_233;
        PBReaderRecallMark();
        v47 = 144;
        goto LABEL_148;
      case 18:
        if (!v34)
          goto LABEL_158;
        if ((*(_BYTE *)(a1 + 200) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_232;
          v52 = (int)(*(_DWORD *)(a1 + 200) << 30) >> 31;
          goto LABEL_202;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_232;
        v46 = objc_alloc_init(GEORPAmenityCorrections);
        if (!GEORPAmenityCorrectionsReadAllFrom((uint64_t)v46, (void *)v3, v9 & 1))
          goto LABEL_233;
        PBReaderRecallMark();
        v47 = 16;
        goto LABEL_148;
      case 19:
        if (!v34)
          goto LABEL_158;
        if ((*(_BYTE *)(a1 + 202) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_232;
          v52 = (int)(*(_DWORD *)(a1 + 200) << 10) >> 31;
          goto LABEL_202;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_232;
        v46 = objc_alloc_init(GEORPFeedbackULongListField);
        if (!GEORPFeedbackULongListFieldReadAllFrom((uint64_t)v46, (void *)v3, v9 & 1))
          goto LABEL_233;
        PBReaderRecallMark();
        v47 = 176;
        goto LABEL_148;
      case 20:
        if (!v34)
          goto LABEL_158;
        if ((*(_BYTE *)(a1 + 201) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_232;
          v52 = (int)(*(_DWORD *)(a1 + 200) << 18) >> 31;
          goto LABEL_202;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_232;
        v46 = objc_alloc_init(GEORPFeedbackRouteStep);
        if (!GEORPFeedbackRouteStepReadAllFrom((uint64_t)v46, (void *)v3, v9 & 1))
          goto LABEL_233;
        PBReaderRecallMark();
        v47 = 112;
        goto LABEL_148;
      case 21:
        if (!v34)
          goto LABEL_158;
        if ((*(_BYTE *)(a1 + 202) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_232;
          v52 = (int)(*(_DWORD *)(a1 + 200) << 13) >> 31;
          goto LABEL_202;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_232;
        v46 = objc_alloc_init(GEORPFeedbackTransitLine);
        if (!GEORPFeedbackTransitLineReadAllFrom((uint64_t)v46, (void *)v3, v9 & 1))
          goto LABEL_233;
        PBReaderRecallMark();
        v47 = 152;
        goto LABEL_148;
      case 22:
        if (!v34 || (*(_BYTE *)(a1 + 201) & 0x10) != 0)
        {
LABEL_156:
          v50 = PBReaderSkipValueWithTag();
          v21 = (int *)MEMORY[0x1E0D82BC8];
          v22 = (int *)MEMORY[0x1E0D82BB8];
          if ((v50 & 1) == 0)
            goto LABEL_231;
          goto LABEL_204;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_232;
        v46 = objc_alloc_init(GEORPFeedbackPhotoMetadata);
        if (GEORPFeedbackPhotoMetadataReadAllFrom((uint64_t)v46, (void *)v3, v9 & 1))
        {
          PBReaderRecallMark();
          -[GEORPFeedbackFieldValue _addNoFlagsPhotoMetadata:](a1, v46);
LABEL_155:

LABEL_149:
          v19 = v59;
LABEL_203:
          v21 = (int *)MEMORY[0x1E0D82BC8];
          v22 = (int *)MEMORY[0x1E0D82BB8];
LABEL_204:
          if (!v19 && v7 == 0)
            goto LABEL_205;
          continue;
        }
LABEL_233:

        v53 = 0;
        v19 = v59;
LABEL_234:
        v21 = (int *)MEMORY[0x1E0D82BC8];
LABEL_235:
        *(_DWORD *)(a1 + 200) |= 0x4000u;
        *(_DWORD *)(a1 + 200) |= 0x800u;
        *(_DWORD *)(a1 + 200) |= 0x8000u;
        *(_DWORD *)(a1 + 200) |= 0x10000u;
        *(_DWORD *)(a1 + 200) |= 0x10u;
        *(_DWORD *)(a1 + 200) |= 0x200u;
        *(_DWORD *)(a1 + 200) |= 8u;
        *(_DWORD *)(a1 + 200) |= 0x400u;
        *(_DWORD *)(a1 + 200) |= 0x100000u;
        *(_DWORD *)(a1 + 200) |= 0x100u;
        *(_DWORD *)(a1 + 200) |= 0x80000u;
        *(_DWORD *)(a1 + 200) |= 0x20u;
        *(_DWORD *)(a1 + 200) |= 0x40u;
        *(_DWORD *)(a1 + 200) |= 0x80u;
        *(_DWORD *)(a1 + 200) |= 0x20000u;
        *(_DWORD *)(a1 + 200) |= 2u;
        *(_DWORD *)(a1 + 200) |= 0x200000u;
        *(_DWORD *)(a1 + 200) |= 0x2000u;
        *(_DWORD *)(a1 + 200) |= 0x40000u;
        *(_DWORD *)(a1 + 200) |= 0x1000u;
        *(_DWORD *)(a1 + 200) |= 4u;
        if ((v53 & 1) != 0)
        {
LABEL_236:
          v3 = *(_BYTE *)(v3 + *v21) == 0;
          if (v19)
            goto LABEL_237;
        }
        else
        {
          v3 = 0;
          if (v19)
          {
LABEL_237:
            v57 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = 0;

          }
        }
        return v3;
      default:
        if ((_DWORD)v33 != 1000)
        {
LABEL_51:
          v48 = PBReaderSkipValueWithTag();
          v22 = (int *)MEMORY[0x1E0D82BB8];
          v21 = (int *)MEMORY[0x1E0D82BC8];
          if (!v48)
            goto LABEL_231;
          goto LABEL_204;
        }
        if (!v34)
        {
LABEL_158:
          v51 = PBReaderSkipValueWithTag();
          v22 = (int *)MEMORY[0x1E0D82BB8];
          v21 = (int *)MEMORY[0x1E0D82BC8];
          if ((v51 & 1) == 0)
          {
LABEL_231:
            v53 = 0;
            goto LABEL_235;
          }
          goto LABEL_204;
        }
        if ((*(_BYTE *)(a1 + 200) & 4) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_232;
          v46 = objc_alloc_init(GEORPFeedbackFieldAnnotations);
          if (!GEORPFeedbackFieldAnnotationsReadAllFrom((uint64_t)v46, (void *)v3, v9 & 1))
            goto LABEL_233;
          PBReaderRecallMark();
          v47 = 24;
LABEL_148:
          v49 = *(void **)(a1 + v47);
          *(_QWORD *)(a1 + v47) = v46;

          --v7;
          goto LABEL_149;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_232:
          v53 = 0;
          goto LABEL_234;
        }
        v52 = (int)(*(_DWORD *)(a1 + 200) << 29) >> 31;
LABEL_202:
        v7 += v52;
        goto LABEL_203;
    }
  }
}

void sub_18937D20C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18937D358(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18937D4A4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18937D5E8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18937D734(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18937D87C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18937D9C8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18937DB14(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18937DC5C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18937DDA8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18937DEEC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18937E034(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18937E174(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18937E4AC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18937E5F0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18937E73C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18937E880(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18937E9CC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18937EB14(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18937EE48(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893809C4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORPFeedbackFieldValueCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  _BYTE v21[128];
  _BYTE v22[128];
  uint64_t v23;

  v23 = *MEMORY[0x1E0C80C00];
  objc_msgSend(a1[15], "readAll:", 1);
  objc_msgSend(a1[12], "readAll:", 1);
  objc_msgSend(a1[16], "readAll:", 1);
  objc_msgSend(a1[17], "readAll:", 1);
  objc_msgSend(a1[5], "readAll:", 1);
  objc_msgSend(a1[10], "readAll:", 1);
  objc_msgSend(a1[4], "readAll:", 1);
  objc_msgSend(a1[11], "readAll:", 1);
  objc_msgSend(a1[21], "readAll:", 1);
  objc_msgSend(a1[9], "readAll:", 1);
  objc_msgSend(a1[20], "readAll:", 1);
  objc_msgSend(a1[6], "readAll:", 1);
  objc_msgSend(a1[7], "readAll:", 1);
  v19 = 0u;
  v20 = 0u;
  v17 = 0u;
  v18 = 0u;
  v2 = a1[8];
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v17, v22, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v18;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v18 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v17 + 1) + 8 * v6++), "readAll:", 1);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v17, v22, 16);
    }
    while (v4);
  }

  objc_msgSend(a1[18], "readAll:", 1);
  objc_msgSend(a1[2], "readAll:", 1);
  objc_msgSend(a1[22], "readAll:", 1);
  objc_msgSend(a1[14], "readAll:", 1);
  objc_msgSend(a1[19], "readAll:", 1);
  v15 = 0u;
  v16 = 0u;
  v13 = 0u;
  v14 = 0u;
  v7 = a1[13];
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v13, v21, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v14;
    do
    {
      v11 = 0;
      do
      {
        if (*(_QWORD *)v14 != v10)
          objc_enumerationMutation(v7);
        objc_msgSend(*(id *)(*((_QWORD *)&v13 + 1) + 8 * v11++), "readAll:", 1, (_QWORD)v13);
      }
      while (v9 != v11);
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v13, v21, 16);
    }
    while (v9);
  }

  return objc_msgSend(a1[3], "readAll:", 1);
}

unint64_t GEORPFeedbackFieldValueReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 188))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEORPFeedbackFieldValueReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 192));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 184) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 188) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEORPFeedbackFieldValueReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEORPFeedbackFieldValueReadAllFrom_initialTag;
  Specified = GEORPFeedbackFieldValueReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEORPFeedbackFieldValueCallReadAllRecursiveWithoutSynchronized((id *)a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 192));
  return Specified;
}

void sub_189380E28(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackFieldValueReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORPFeedbackFieldValueReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189380E88(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackFieldValueIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  _BOOL8 v23;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (!a1[*v4])
    {
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0)
            goto LABEL_118;
          v17 = 0;
          do
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
            {
              a1[*v4] = 1;
              goto LABEL_114;
            }
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if ((v21 & 0x80000000) == 0)
              break;
          }
          while (v17++ <= 8);
          goto LABEL_114;
        case 2u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPFeedbackSingleSelectFieldIsValid(a1))
            goto LABEL_118;
          goto LABEL_113;
        case 3u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPFeedbackMultiSelectFieldIsValid(a1))
            goto LABEL_118;
          goto LABEL_113;
        case 4u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPFeedbackTextFieldIsValid(a1))
            goto LABEL_118;
          goto LABEL_113;
        case 5u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPFeedbackTextListFieldIsValid(a1))
            goto LABEL_118;
          goto LABEL_113;
        case 6u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPFeedbackTimestampIsValid(a1))
            goto LABEL_118;
          goto LABEL_113;
        case 7u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPFeedbackCoordinateFieldIsValid(a1))
            goto LABEL_118;
          goto LABEL_113;
        case 8u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPFeedbackBooleanFieldIsValid(a1))
            goto LABEL_118;
          goto LABEL_113;
        case 9u:
          goto LABEL_32;
        case 0xAu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPFeedbackLongFieldIsValid(a1))
            goto LABEL_118;
          goto LABEL_113;
        case 0xBu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPFeedbackULongFieldIsValid(a1))
            goto LABEL_118;
          goto LABEL_113;
        case 0xCu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPFeedbackIntFieldIsValid(a1))
            goto LABEL_118;
          goto LABEL_113;
        case 0xDu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPFeedbackUIntFieldIsValid(a1))
            goto LABEL_118;
          goto LABEL_113;
        case 0xEu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPFeedbackDoubleFieldIsValid(a1))
            goto LABEL_118;
          goto LABEL_113;
        case 0xFu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPFeedbackFloatFieldIsValid(a1))
            goto LABEL_118;
          goto LABEL_113;
        case 0x10u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPFeedbackBusinessHoursIsValid(a1))
            goto LABEL_118;
          goto LABEL_113;
        case 0x11u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPFeedbackTileFeatureInfoIsValid(a1))
            goto LABEL_118;
          goto LABEL_113;
        case 0x12u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPAmenityCorrectionsIsValid(a1))
            goto LABEL_118;
          goto LABEL_113;
        case 0x13u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPFeedbackULongListFieldIsValid(a1))
            goto LABEL_118;
          goto LABEL_113;
        case 0x14u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPFeedbackRouteStepIsValid(a1))
            goto LABEL_118;
          goto LABEL_113;
        case 0x15u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPFeedbackTransitLineIsValid(a1))
            goto LABEL_118;
          goto LABEL_113;
        case 0x16u:
          if (v15 == 2 && PBReaderPlaceMark() && GEORPFeedbackPhotoMetadataIsValid(a1))
            goto LABEL_113;
          goto LABEL_118;
        default:
          if ((v8 >> 3) == 1000)
          {
            if (v15 != 2 || !PBReaderPlaceMark() || !GEORPFeedbackFieldAnnotationsIsValid(a1))
            {
LABEL_118:
              PBReaderRecallMark();
              return 0;
            }
LABEL_113:
            PBReaderRecallMark();
          }
          else
          {
LABEL_32:
            if ((PBReaderSkipValueWithTag() & 1) == 0)
              goto LABEL_118;
          }
LABEL_114:
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_117;
          break;
      }
    }
  }
LABEL_117:
  v23 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v23;
}

BOOL GEORPFeedbackSingleSelectFieldIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  _BOOL8 v17;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      if ((v8 >> 3) == 2 || (v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEORPFeedbackFieldOptionIsValid(a1))
        {
LABEL_27:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_27;
      }
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

BOOL GEORPFeedbackMultiSelectFieldIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  _BOOL8 v17;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      if ((v8 >> 3) == 2 || (v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEORPFeedbackFieldOptionIsValid(a1))
        {
LABEL_27:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_27;
      }
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

BOOL GEORPFeedbackTimestampIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  _BOOL8 v17;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      if ((v8 >> 3) == 2 || (v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEORPTimestampIsValid(a1))
        {
LABEL_27:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_27;
      }
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

BOOL GEORPFeedbackLongFieldIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int v20;
  BOOL v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  int v26;
  _BOOL8 v27;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_39;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      if (v14 || (v8 & 7) == 4)
        goto LABEL_39;
      if ((v8 >> 3) == 2)
        break;
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0)
          goto LABEL_41;
        v16 = 0;
        while (1)
        {
          v17 = *v2;
          v18 = *(_QWORD *)&a1[v17];
          v19 = v18 + 1;
          if (v18 == -1 || v19 > *(_QWORD *)&a1[*v3])
            break;
          v20 = *(char *)(*(_QWORD *)&a1[*v5] + v18);
          *(_QWORD *)&a1[v17] = v19;
          if (v20 < 0)
          {
            v21 = v16++ > 8;
            if (!v21)
              continue;
          }
          goto LABEL_38;
        }
LABEL_36:
        a1[*v4] = 1;
        goto LABEL_38;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_41:
        v27 = 0;
        goto LABEL_40;
      }
LABEL_38:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_39;
    }
    if ((v8 & 7) != 0)
      goto LABEL_41;
    v22 = 0;
    while (1)
    {
      v23 = *v2;
      v24 = *(_QWORD *)&a1[v23];
      v25 = v24 + 1;
      if (v24 == -1 || v25 > *(_QWORD *)&a1[*v3])
        goto LABEL_36;
      v26 = *(char *)(*(_QWORD *)&a1[*v5] + v24);
      *(_QWORD *)&a1[v23] = v25;
      if (v26 < 0)
      {
        v21 = v22++ > 8;
        if (!v21)
          continue;
      }
      goto LABEL_38;
    }
  }
LABEL_39:
  v27 = a1[*v4] == 0;
LABEL_40:
  PBReaderRecallMark();
  return v27;
}

BOOL GEORPFeedbackULongFieldIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int v20;
  BOOL v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  int v26;
  _BOOL8 v27;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_39;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      if (v14 || (v8 & 7) == 4)
        goto LABEL_39;
      if ((v8 >> 3) == 2)
        break;
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0)
          goto LABEL_41;
        v16 = 0;
        while (1)
        {
          v17 = *v2;
          v18 = *(_QWORD *)&a1[v17];
          v19 = v18 + 1;
          if (v18 == -1 || v19 > *(_QWORD *)&a1[*v3])
            break;
          v20 = *(char *)(*(_QWORD *)&a1[*v5] + v18);
          *(_QWORD *)&a1[v17] = v19;
          if (v20 < 0)
          {
            v21 = v16++ > 8;
            if (!v21)
              continue;
          }
          goto LABEL_38;
        }
LABEL_36:
        a1[*v4] = 1;
        goto LABEL_38;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_41:
        v27 = 0;
        goto LABEL_40;
      }
LABEL_38:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_39;
    }
    if ((v8 & 7) != 0)
      goto LABEL_41;
    v22 = 0;
    while (1)
    {
      v23 = *v2;
      v24 = *(_QWORD *)&a1[v23];
      v25 = v24 + 1;
      if (v24 == -1 || v25 > *(_QWORD *)&a1[*v3])
        goto LABEL_36;
      v26 = *(char *)(*(_QWORD *)&a1[*v5] + v24);
      *(_QWORD *)&a1[v23] = v25;
      if (v26 < 0)
      {
        v21 = v22++ > 8;
        if (!v21)
          continue;
      }
      goto LABEL_38;
    }
  }
LABEL_39:
  v27 = a1[*v4] == 0;
LABEL_40:
  PBReaderRecallMark();
  return v27;
}

BOOL GEORPFeedbackIntFieldIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int v20;
  BOOL v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  int v26;
  _BOOL8 v27;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_39;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      if (v14 || (v8 & 7) == 4)
        goto LABEL_39;
      if ((v8 >> 3) == 2)
        break;
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0)
          goto LABEL_41;
        v16 = 0;
        while (1)
        {
          v17 = *v2;
          v18 = *(_QWORD *)&a1[v17];
          v19 = v18 + 1;
          if (v18 == -1 || v19 > *(_QWORD *)&a1[*v3])
            break;
          v20 = *(char *)(*(_QWORD *)&a1[*v5] + v18);
          *(_QWORD *)&a1[v17] = v19;
          if (v20 < 0)
          {
            v21 = v16++ > 8;
            if (!v21)
              continue;
          }
          goto LABEL_38;
        }
LABEL_36:
        a1[*v4] = 1;
        goto LABEL_38;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_41:
        v27 = 0;
        goto LABEL_40;
      }
LABEL_38:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_39;
    }
    if ((v8 & 7) != 0)
      goto LABEL_41;
    v22 = 0;
    while (1)
    {
      v23 = *v2;
      v24 = *(_QWORD *)&a1[v23];
      v25 = v24 + 1;
      if (v24 == -1 || v25 > *(_QWORD *)&a1[*v3])
        goto LABEL_36;
      v26 = *(char *)(*(_QWORD *)&a1[*v5] + v24);
      *(_QWORD *)&a1[v23] = v25;
      if (v26 < 0)
      {
        v21 = v22++ > 8;
        if (!v21)
          continue;
      }
      goto LABEL_38;
    }
  }
LABEL_39:
  v27 = a1[*v4] == 0;
LABEL_40:
  PBReaderRecallMark();
  return v27;
}

BOOL GEORPFeedbackUIntFieldIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int v20;
  BOOL v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  int v26;
  _BOOL8 v27;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_39;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      if (v14 || (v8 & 7) == 4)
        goto LABEL_39;
      if ((v8 >> 3) == 2)
        break;
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0)
          goto LABEL_41;
        v16 = 0;
        while (1)
        {
          v17 = *v2;
          v18 = *(_QWORD *)&a1[v17];
          v19 = v18 + 1;
          if (v18 == -1 || v19 > *(_QWORD *)&a1[*v3])
            break;
          v20 = *(char *)(*(_QWORD *)&a1[*v5] + v18);
          *(_QWORD *)&a1[v17] = v19;
          if (v20 < 0)
          {
            v21 = v16++ > 8;
            if (!v21)
              continue;
          }
          goto LABEL_38;
        }
LABEL_36:
        a1[*v4] = 1;
        goto LABEL_38;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_41:
        v27 = 0;
        goto LABEL_40;
      }
LABEL_38:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_39;
    }
    if ((v8 & 7) != 0)
      goto LABEL_41;
    v22 = 0;
    while (1)
    {
      v23 = *v2;
      v24 = *(_QWORD *)&a1[v23];
      v25 = v24 + 1;
      if (v24 == -1 || v25 > *(_QWORD *)&a1[*v3])
        goto LABEL_36;
      v26 = *(char *)(*(_QWORD *)&a1[*v5] + v24);
      *(_QWORD *)&a1[v23] = v25;
      if (v26 < 0)
      {
        v21 = v22++ > 8;
        if (!v21)
          continue;
      }
      goto LABEL_38;
    }
  }
LABEL_39:
  v27 = a1[*v4] == 0;
LABEL_40:
  PBReaderRecallMark();
  return v27;
}

BOOL GEORPFeedbackFloatFieldIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v14;
  int v15;
  int v16;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  _BOOL8 v21;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = *v4;
          v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = *v4;
      v15 = a1[v14];
      if (a1[v14])
        v8 = 0;
LABEL_14:
      v16 = v8 & 7;
      if (v15 || v16 == 4)
        break;
      if ((v8 >> 3) == 2 || (v8 >> 3) == 1)
      {
        if (v16 != 5)
          goto LABEL_30;
        v18 = *v2;
        v19 = *(_QWORD *)&a1[v18];
        if (v19 <= 0xFFFFFFFFFFFFFFFBLL && (v20 = v19 + 4, v20 <= *(_QWORD *)&a1[*v3]))
          *(_QWORD *)&a1[v18] = v20;
        else
          a1[v14] = 1;
      }
      else if (!PBReaderSkipValueWithTag())
      {
LABEL_30:
        v21 = 0;
        goto LABEL_29;
      }
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v21 = a1[*v4] == 0;
LABEL_29:
  PBReaderRecallMark();
  return v21;
}

BOOL GEORPFeedbackULongListFieldIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  BOOL v13;
  int v14;
  int v15;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  int v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  int v31;
  unsigned int v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  int v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  int v42;
  unsigned int v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  int v47;
  _BOOL8 v48;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_77;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        v13 = v7++ >= 9;
        if (v13)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        goto LABEL_77;
      v17 = v8 >> 3;
      if ((v8 >> 3) == 3)
      {
        if (v15 == 2)
        {
          if (!PBReaderPlaceMark())
            goto LABEL_79;
LABEL_56:
          while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
          {
            v38 = a1[*v4];
            if (a1[*v4])
              break;
            while (1)
            {
              v39 = *v2;
              v40 = *(_QWORD *)&a1[v39];
              v41 = v40 + 1;
              if (v40 == -1 || v41 > *(_QWORD *)&a1[*v3])
                break;
              v42 = *(char *)(*(_QWORD *)&a1[*v5] + v40);
              *(_QWORD *)&a1[v39] = v41;
              if (v42 < 0)
              {
                v13 = v38++ >= 9;
                if (!v13)
                  continue;
              }
              goto LABEL_56;
            }
            a1[*v4] = 1;
          }
          goto LABEL_75;
        }
        if ((v8 & 7) != 0)
          goto LABEL_79;
        while (1)
        {
          v23 = *v2;
          v24 = *(_QWORD *)&a1[v23];
          v25 = v24 + 1;
          if (v24 == -1 || v25 > *(_QWORD *)&a1[*v3])
            goto LABEL_44;
          v26 = *(char *)(*(_QWORD *)&a1[*v5] + v24);
          *(_QWORD *)&a1[v23] = v25;
          if (v26 < 0)
          {
            v27 = v15++;
            if (v27 <= 8)
              continue;
          }
          goto LABEL_76;
        }
      }
      if ((_DWORD)v17 == 2)
        break;
      if ((_DWORD)v17 == 1)
      {
        if (v15 == 2)
        {
          if (!PBReaderPlaceMark())
            goto LABEL_79;
LABEL_46:
          while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
          {
            v33 = a1[*v4];
            if (a1[*v4])
              break;
            while (1)
            {
              v34 = *v2;
              v35 = *(_QWORD *)&a1[v34];
              v36 = v35 + 1;
              if (v35 == -1 || v36 > *(_QWORD *)&a1[*v3])
                break;
              v37 = *(char *)(*(_QWORD *)&a1[*v5] + v35);
              *(_QWORD *)&a1[v34] = v36;
              if (v37 < 0)
              {
                v13 = v33++ >= 9;
                if (!v13)
                  continue;
              }
              goto LABEL_46;
            }
            a1[*v4] = 1;
          }
LABEL_75:
          PBReaderRecallMark();
          goto LABEL_76;
        }
        if ((v8 & 7) != 0)
          goto LABEL_79;
        while (1)
        {
          v18 = *v2;
          v19 = *(_QWORD *)&a1[v18];
          v20 = v19 + 1;
          if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
            goto LABEL_44;
          v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
          *(_QWORD *)&a1[v18] = v20;
          if (v21 < 0)
          {
            v22 = v15++;
            if (v22 <= 8)
              continue;
          }
          goto LABEL_76;
        }
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        goto LABEL_79;
LABEL_76:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_77;
    }
    if (v15 == 2)
    {
      if (!PBReaderPlaceMark())
      {
LABEL_79:
        PBReaderRecallMark();
        return 0;
      }
LABEL_66:
      while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
      {
        v43 = a1[*v4];
        if (a1[*v4])
          break;
        while (1)
        {
          v44 = *v2;
          v45 = *(_QWORD *)&a1[v44];
          v46 = v45 + 1;
          if (v45 == -1 || v46 > *(_QWORD *)&a1[*v3])
            break;
          v47 = *(char *)(*(_QWORD *)&a1[*v5] + v45);
          *(_QWORD *)&a1[v44] = v46;
          if (v47 < 0)
          {
            v13 = v43++ >= 9;
            if (!v13)
              continue;
          }
          goto LABEL_66;
        }
        a1[*v4] = 1;
      }
      goto LABEL_75;
    }
    if ((v8 & 7) != 0)
      goto LABEL_79;
    while (1)
    {
      v28 = *v2;
      v29 = *(_QWORD *)&a1[v28];
      v30 = v29 + 1;
      if (v29 == -1 || v30 > *(_QWORD *)&a1[*v3])
        break;
      v31 = *(char *)(*(_QWORD *)&a1[*v5] + v29);
      *(_QWORD *)&a1[v28] = v30;
      if (v31 < 0)
      {
        v32 = v15++;
        if (v32 <= 8)
          continue;
      }
      goto LABEL_76;
    }
LABEL_44:
    a1[*v4] = 1;
    goto LABEL_76;
  }
LABEL_77:
  v48 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v48;
}

BOOL GEORPFeedbackRouteStepIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  int v32;
  _BOOL8 v33;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0)
            goto LABEL_51;
          v17 = 0;
          while (1)
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
              goto LABEL_43;
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if (v21 < 0)
            {
              v22 = v17++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_48;
          }
        case 2u:
          if ((v8 & 7) != 0)
            goto LABEL_51;
          v23 = 0;
          while (1)
          {
            v24 = *v2;
            v25 = *(_QWORD *)&a1[v24];
            v26 = v25 + 1;
            if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
              goto LABEL_43;
            v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
            *(_QWORD *)&a1[v24] = v26;
            if (v27 < 0)
            {
              v22 = v23++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_48;
          }
        case 3u:
          if ((v8 & 7) != 0)
            goto LABEL_51;
          v28 = 0;
          break;
        case 4u:
          if (v15 == 2)
            goto LABEL_47;
          goto LABEL_51;
        case 5u:
          if (v15 == 2)
            goto LABEL_47;
          goto LABEL_51;
        default:
LABEL_47:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_51:
          v33 = 0;
          goto LABEL_50;
      }
      while (1)
      {
        v29 = *v2;
        v30 = *(_QWORD *)&a1[v29];
        v31 = v30 + 1;
        if (v30 == -1 || v31 > *(_QWORD *)&a1[*v3])
          break;
        v32 = *(char *)(*(_QWORD *)&a1[*v5] + v30);
        *(_QWORD *)&a1[v29] = v31;
        if (v32 < 0)
        {
          v22 = v28++ > 8;
          if (!v22)
            continue;
        }
        goto LABEL_48;
      }
LABEL_43:
      a1[*v4] = 1;
LABEL_48:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v33 = a1[*v4] == 0;
LABEL_50:
  PBReaderRecallMark();
  return v33;
}

BOOL GEORPFeedbackTransitLineIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unint64_t v17;
  _BOOL8 v18;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_30;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        goto LABEL_30;
      v17 = v8 >> 3;
      if ((v8 >> 3) == 3)
        break;
      if ((_DWORD)v17 == 2)
      {
        if (v15 != 2)
          goto LABEL_32;
LABEL_26:
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_32;
        goto LABEL_29;
      }
      if ((_DWORD)v17 == 1)
      {
        if (v15 != 2)
          goto LABEL_32;
        goto LABEL_26;
      }
      if (!PBReaderSkipValueWithTag())
      {
LABEL_32:
        v18 = 0;
        goto LABEL_31;
      }
LABEL_29:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_30;
    }
    if (v15 != 2)
      goto LABEL_32;
    goto LABEL_26;
  }
LABEL_30:
  v18 = a1[*v4] == 0;
LABEL_31:
  PBReaderRecallMark();
  return v18;
}

BOOL GEORPFeedbackPhotoMetadataIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  _BOOL8 v17;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_27;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        goto LABEL_27;
      if ((v8 >> 3) == 2)
        break;
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2)
          goto LABEL_29;
        goto LABEL_23;
      }
      if (!PBReaderSkipValueWithTag())
      {
LABEL_29:
        v17 = 0;
        goto LABEL_28;
      }
LABEL_26:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_27;
    }
    if (v15 != 2)
      goto LABEL_29;
LABEL_23:
    if ((PBReaderSkipValueWithTag() & 1) == 0)
      goto LABEL_29;
    goto LABEL_26;
  }
LABEL_27:
  v17 = a1[*v4] == 0;
LABEL_28:
  PBReaderRecallMark();
  return v17;
}

void sub_1893833C8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORPFeedbackFieldValueIsDirty(uint64_t a1)
{
  int v2;
  uint64_t v3;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  _BYTE v20[128];
  _BYTE v21[128];
  uint64_t v22;

  v22 = *MEMORY[0x1E0C80C00];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 192));
  v2 = *(_DWORD *)(a1 + 200);
  if ((v2 & 0x400000) != 0)
    return 1;
  if ((v2 & 0x4000) != 0)
  {
    if ((GEORPFeedbackSingleSelectFieldIsDirty(*(os_unfair_lock_s **)(a1 + 120)) & 1) != 0)
      return 1;
    v2 = *(_DWORD *)(a1 + 200);
  }
  if ((v2 & 0x800) != 0)
  {
    if ((GEORPFeedbackMultiSelectFieldIsDirty(*(os_unfair_lock_s **)(a1 + 96)) & 1) != 0)
      return 1;
    v2 = *(_DWORD *)(a1 + 200);
  }
  if ((v2 & 0x8000) != 0)
  {
    if (GEORPFeedbackTextFieldIsDirty(*(_QWORD *)(a1 + 128)))
      return 1;
    v2 = *(_DWORD *)(a1 + 200);
  }
  if ((v2 & 0x10000) != 0)
  {
    if (GEORPFeedbackTextListFieldIsDirty(*(_QWORD *)(a1 + 136)))
      return 1;
    v2 = *(_DWORD *)(a1 + 200);
  }
  if ((v2 & 0x10) != 0)
  {
    if (GEORPFeedbackTimestampIsDirty(*(_QWORD *)(a1 + 40)))
      return 1;
    v2 = *(_DWORD *)(a1 + 200);
  }
  if ((v2 & 0x200) == 0)
    goto LABEL_20;
  if ((GEORPFeedbackCoordinateFieldIsDirty(*(os_unfair_lock_s **)(a1 + 80)) & 1) == 0)
  {
    v2 = *(_DWORD *)(a1 + 200);
LABEL_20:
    if ((v2 & 0x1805E8) != 0)
      return 1;
    if ((v2 & 0x20000) != 0)
    {
      if (GEORPFeedbackTileFeatureInfoIsDirty(*(_QWORD *)(a1 + 144)))
        return 1;
      v2 = *(_DWORD *)(a1 + 200);
    }
    if ((v2 & 2) != 0)
    {
      if (GEORPAmenityCorrectionsIsDirty(*(_QWORD *)(a1 + 16)))
        return 1;
      v2 = *(_DWORD *)(a1 + 200);
    }
    if ((v2 & 0x200000) != 0)
    {
      if (GEORPFeedbackULongListFieldIsDirty(*(_QWORD *)(a1 + 176)))
        return 1;
      v2 = *(_DWORD *)(a1 + 200);
    }
    if ((v2 & 0x2000) != 0)
    {
      if (GEORPFeedbackRouteStepIsDirty(*(_QWORD *)(a1 + 112)))
        return 1;
      v2 = *(_DWORD *)(a1 + 200);
    }
    if ((v2 & 0x40000) != 0)
    {
      if (GEORPFeedbackTransitLineIsDirty(*(_QWORD *)(a1 + 152)))
        return 1;
      v2 = *(_DWORD *)(a1 + 200);
    }
    if ((v2 & 0x1000) != 0)
      return 1;
    if ((v2 & 4) != 0)
    {
      if ((GEORPFeedbackFieldAnnotationsIsDirty(*(os_unfair_lock_s **)(a1 + 24)) & 1) != 0)
        return 1;
      v2 = *(_DWORD *)(a1 + 200);
    }
    if ((v2 & 0x80) != 0)
    {
      v18 = 0u;
      v19 = 0u;
      v16 = 0u;
      v17 = 0u;
      v5 = *(id *)(a1 + 64);
      v6 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v16, v21, 16);
      if (v6)
      {
        v7 = v6;
        v8 = *(_QWORD *)v17;
LABEL_45:
        v9 = 0;
        while (1)
        {
          if (*(_QWORD *)v17 != v8)
            objc_enumerationMutation(v5);
          if ((GEORPFeedbackBusinessHoursIsDirty(*(os_unfair_lock_s **)(*((_QWORD *)&v16 + 1) + 8 * v9)) & 1) != 0)
            goto LABEL_63;
          if (v7 == ++v9)
          {
            v7 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v16, v21, 16);
            if (v7)
              goto LABEL_45;
            break;
          }
        }
      }

      v2 = *(_DWORD *)(a1 + 200);
    }
    if ((v2 & 0x1000) == 0)
      return 0;
    v14 = 0u;
    v15 = 0u;
    v12 = 0u;
    v13 = 0u;
    v5 = *(id *)(a1 + 104);
    v3 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v12, v20, 16);
    if (!v3)
    {
LABEL_64:

      return v3;
    }
    v10 = *(_QWORD *)v13;
LABEL_56:
    v11 = 0;
    while (1)
    {
      if (*(_QWORD *)v13 != v10)
        objc_enumerationMutation(v5);
      if (GEORPFeedbackPhotoMetadataIsDirty(*(_QWORD *)(*((_QWORD *)&v12 + 1) + 8 * v11)))
        break;
      if (v3 == ++v11)
      {
        v3 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v12, v20, 16);
        if (v3)
          goto LABEL_56;
        goto LABEL_64;
      }
    }
LABEL_63:
    v3 = 1;
    goto LABEL_64;
  }
  return 1;
}

os_unfair_lock_s *GEORPFeedbackFieldValueIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEORPFeedbackFieldValueIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 48);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_189384058(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackFloatFieldReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  uint64_t v18;
  unint64_t v19;
  int v20;
  uint64_t v21;
  unint64_t v22;
  int *v23;
  _BOOL8 v24;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 2)
        {
          *(_BYTE *)(a1 + 16) |= 1u;
          v21 = *v4;
          v22 = *(_QWORD *)&v3[v21];
          if (v22 <= 0xFFFFFFFFFFFFFFFBLL && v22 + 4 <= *(_QWORD *)&v3[*v5])
          {
            v20 = *(_DWORD *)(*(_QWORD *)&v3[*v7] + v22);
            *(_QWORD *)&v3[v21] = v22 + 4;
          }
          else
          {
            v3[*v6] = 1;
            v20 = 0;
          }
          v23 = &OBJC_IVAR___GEORPFeedbackFloatField__edited;
        }
        else
        {
          if ((v10 >> 3) != 1)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0)
              goto LABEL_36;
            continue;
          }
          *(_BYTE *)(a1 + 16) |= 2u;
          v18 = *v4;
          v19 = *(_QWORD *)&v3[v18];
          if (v19 <= 0xFFFFFFFFFFFFFFFBLL && v19 + 4 <= *(_QWORD *)&v3[*v5])
          {
            v20 = *(_DWORD *)(*(_QWORD *)&v3[*v7] + v19);
            *(_QWORD *)&v3[v18] = v19 + 4;
          }
          else
          {
            v3[*v6] = 1;
            v20 = 0;
          }
          v23 = &OBJC_IVAR___GEORPFeedbackFloatField__original;
        }
        *(_DWORD *)(a1 + *v23) = v20;
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v24 = v3[*v6] == 0;
  }
  else
  {
LABEL_36:
    v24 = 0;
  }
  objc_sync_exit(v3);

  return v24;
}

void sub_1893851BC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackFloatFieldReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORPFeedbackFloatFieldReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18938521C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189386110(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackFormFieldReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  char v15;
  int *v16;
  int *v17;
  int *v18;
  int *v19;
  char v20;
  unsigned int v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  BOOL v27;
  int v28;
  unint64_t v30;
  BOOL v31;
  int *v32;
  int v33;
  int v34;
  BOOL v35;
  char v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  int v48;
  char v49;
  char v50;
  char v51;
  int v52;
  int v53;
  char v54;
  void *v55;
  GEORPFeedbackFieldValue *v57;
  void *v58;
  char v59;
  char v60;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 68);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 64));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = (vaddv_s16((int16x4_t)(*(_QWORD *)&vshl_u16((uint16x4_t)(*(_QWORD *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 80)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFCFFFEFFFAFFFDLL) & 0xFF01FF01FF01FF01))+ ((*(_BYTE *)(a1 + 80) & 0x20) != 0)+ ((*(_BYTE *)(a1 + 80) & 2) != 0));
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v7])
    {
      case -3:
        v8 = 1;
        goto LABEL_6;
      case -2:
        v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v11 > 3;
        v15 = v10 | v14;
        if ((((v10 | v14) | v8) & 1) != 0)
          v16 = 0;
        else
          v16 = a3;
        v60 = (v16 == 0) | v15;
        v17 = (int *)MEMORY[0x1E0D82BF0];
        v18 = (int *)MEMORY[0x1E0D82BC8];
        v19 = (int *)MEMORY[0x1E0D82BB8];
        v59 = v10 | v14;
        break;
      default:
        ++v11;
LABEL_6:
        v12 = v9;
        v13 = v10;
LABEL_8:
        ++v7;
        v9 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v17) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v18))
      goto LABEL_94;
    v20 = 0;
    v21 = 0;
    v22 = 0;
    while (1)
    {
      v23 = *v17;
      v24 = *(_QWORD *)(v3 + v23);
      v25 = v24 + 1;
      if (v24 == -1 || v25 > *(_QWORD *)(v3 + *v6))
        break;
      v26 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v24);
      *(_QWORD *)(v3 + v23) = v25;
      v22 |= (unint64_t)(v26 & 0x7F) << v20;
      if ((v26 & 0x80) == 0)
        goto LABEL_23;
      v20 += 7;
      v27 = v21++ >= 9;
      if (v27)
      {
        v22 = 0;
        v28 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(_BYTE *)(v3 + *v18) = 1;
LABEL_23:
    v28 = *(unsigned __int8 *)(v3 + *v18);
    if (*(_BYTE *)(v3 + *v18))
      v22 = 0;
LABEL_25:
    if (v28 || (v22 & 7) == 4)
    {
LABEL_94:
      if ((v15 & 1) != 0)
      {
        v51 = 1;
        goto LABEL_108;
      }
      if (v16)
      {
        while (1)
        {
          v53 = *v16++;
          v52 = v53;
          v54 = 64;
          switch(v53)
          {
            case 0:
              goto LABEL_109;
            case 1:
              continue;
            case 2:
              goto LABEL_104;
            case 3:
              v54 = 8;
              goto LABEL_104;
            case 4:
              v54 = 4;
              goto LABEL_104;
            case 5:
              v54 = 16;
              goto LABEL_104;
            case 6:
              v54 = 32;
              goto LABEL_104;
            default:
              if (v52 != 1000)
                continue;
              v54 = 2;
LABEL_104:
              *(_BYTE *)(a1 + 80) |= v54;
              break;
          }
        }
      }
      goto LABEL_109;
    }
    v30 = v22 >> 3;
    v31 = v15;
    if ((v60 & 1) == 0)
    {
      v32 = v16;
      do
      {
        v34 = *v32++;
        v33 = v34;
        v31 = v34 != 0;
        if (v34)
          v35 = v33 == (_DWORD)v30;
        else
          v35 = 1;
      }
      while (!v35);
    }
    switch((int)v30)
    {
      case 1:
        if ((v8 & 1) == 0)
          goto LABEL_75;
        v36 = 0;
        v37 = 0;
        v38 = 0;
        *(_BYTE *)(a1 + 80) |= 1u;
        while (1)
        {
          v39 = *v17;
          v40 = *(_QWORD *)(v3 + v39);
          v41 = v40 + 1;
          if (v40 == -1 || v41 > *(_QWORD *)(v3 + *v6))
            break;
          v42 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v40);
          *(_QWORD *)(v3 + v39) = v41;
          v38 |= (unint64_t)(v42 & 0x7F) << v36;
          if ((v42 & 0x80) == 0)
            goto LABEL_78;
          v36 += 7;
          v27 = v37++ >= 9;
          if (v27)
          {
            LODWORD(v38) = 0;
            goto LABEL_80;
          }
        }
        *(_BYTE *)(v3 + *v18) = 1;
LABEL_78:
        if (*(_BYTE *)(v3 + *v18))
          LODWORD(v38) = 0;
LABEL_80:
        *(_DWORD *)(a1 + 76) = v38;
        goto LABEL_93;
      case 2:
        if (!v31)
          goto LABEL_75;
        if ((*(_BYTE *)(a1 + 80) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_107;
          v50 = 2 * *(_BYTE *)(a1 + 80);
LABEL_91:
          v7 += v50 >> 7;
          goto LABEL_92;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_107;
        v57 = objc_alloc_init(GEORPFeedbackFieldValue);
        if (GEORPFeedbackFieldValueReadAllFrom((uint64_t)v57, (void *)v3, v9 & 1))
        {
          PBReaderRecallMark();
          v43 = 56;
LABEL_56:
          v44 = *(void **)(a1 + v43);
          *(_QWORD *)(a1 + v43) = v57;
LABEL_67:

          --v7;
LABEL_92:
          v15 = v59;
          v18 = (int *)MEMORY[0x1E0D82BC8];
LABEL_93:
          if (!(v15 & 1 | (v7 != 0)))
            goto LABEL_94;
          continue;
        }
LABEL_106:

LABEL_107:
        v51 = 0;
        v15 = v59;
        v18 = (int *)MEMORY[0x1E0D82BC8];
LABEL_108:
        *(_BYTE *)(a1 + 80) |= 0x40u;
        *(_BYTE *)(a1 + 80) |= 8u;
        *(_BYTE *)(a1 + 80) |= 4u;
        *(_BYTE *)(a1 + 80) |= 0x10u;
        *(_BYTE *)(a1 + 80) |= 0x20u;
        *(_BYTE *)(a1 + 80) |= 2u;
        if ((v51 & 1) != 0)
        {
LABEL_109:
          v3 = *(_BYTE *)(v3 + *v18) == 0;
          if ((v15 & 1) != 0)
            goto LABEL_110;
        }
        else
        {
          v3 = 0;
          if ((v15 & 1) != 0)
          {
LABEL_110:
            v55 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = 0;

          }
        }
        return v3;
      case 3:
        if (!v31)
          goto LABEL_75;
        if ((*(_BYTE *)(a1 + 80) & 8) == 0)
        {
          PBReaderReadString();
          v45 = objc_claimAutoreleasedReturnValue();
          v46 = 32;
          goto LABEL_66;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_107;
        v50 = 16 * *(_BYTE *)(a1 + 80);
        goto LABEL_91;
      case 4:
        if (!v31)
          goto LABEL_75;
        if ((*(_BYTE *)(a1 + 80) & 4) == 0)
        {
          PBReaderReadString();
          v45 = objc_claimAutoreleasedReturnValue();
          v46 = 24;
          goto LABEL_66;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_107;
        v50 = 32 * *(_BYTE *)(a1 + 80);
        goto LABEL_91;
      case 5:
        if (!v31)
          goto LABEL_75;
        if ((*(_BYTE *)(a1 + 80) & 0x10) == 0)
        {
          PBReaderReadString();
          v45 = objc_claimAutoreleasedReturnValue();
          v46 = 40;
LABEL_66:
          v44 = *(void **)(a1 + v46);
          *(_QWORD *)(a1 + v46) = v45;
          goto LABEL_67;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_107;
        v50 = 8 * *(_BYTE *)(a1 + 80);
        goto LABEL_91;
      case 6:
        if (!v31 || (*(_BYTE *)(a1 + 80) & 0x20) != 0)
          goto LABEL_75;
        PBReaderReadString();
        v47 = (void *)objc_claimAutoreleasedReturnValue();
        if (v47)
        {
          v58 = v47;
          -[GEORPFeedbackFormField _addNoFlagsTag:](a1, v47);
          v47 = v58;
        }

        goto LABEL_92;
      default:
        if ((_DWORD)v30 != 1000)
        {
          v48 = PBReaderSkipValueWithTag();
          v18 = (int *)MEMORY[0x1E0D82BC8];
          v15 = v59;
          if (!v48)
            goto LABEL_105;
          goto LABEL_93;
        }
        if (!v31)
        {
LABEL_75:
          v49 = PBReaderSkipValueWithTag();
          v18 = (int *)MEMORY[0x1E0D82BC8];
          v15 = v59;
          if ((v49 & 1) == 0)
          {
LABEL_105:
            v51 = 0;
            goto LABEL_108;
          }
          goto LABEL_93;
        }
        if ((*(_BYTE *)(a1 + 80) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_107;
          v50 = *(_BYTE *)(a1 + 80) << 6;
          goto LABEL_91;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_107;
        v57 = objc_alloc_init(GEORPFeedbackFormFieldAnnotations);
        if (!GEORPFeedbackFormFieldAnnotationsReadAllFrom((uint64_t)v57, (void *)v3))
          goto LABEL_106;
        PBReaderRecallMark();
        v43 = 16;
        goto LABEL_56;
    }
  }
}

void sub_18938698C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189386ACC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189386C10(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189386D54(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189387088(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189388110(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackFormFieldReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 68))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEORPFeedbackFormFieldReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 72));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 64) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 68) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEORPFeedbackFormFieldReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEORPFeedbackFormFieldReadAllFrom_initialTag;
  Specified = GEORPFeedbackFormFieldReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    objc_msgSend(*(id *)(a1 + 56), "readAll:", 1);
    objc_msgSend(*(id *)(a1 + 16), "readAll:", 1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return Specified;
}

void sub_1893882C8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackFormFieldReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORPFeedbackFormFieldReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189388328(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackFormFieldAnnotationsIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  _BOOL8 v17;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_26:
          v17 = 0;
          goto LABEL_25;
        }
      }
      else if (!PBReaderSkipValueWithTag())
      {
        goto LABEL_26;
      }
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v17 = a1[*v4] == 0;
LABEL_25:
  PBReaderRecallMark();
  return v17;
}

void sub_18938877C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORPFeedbackFormFieldIsDirty(uint64_t a1)
{
  unsigned int v2;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  if (*(char *)(a1 + 80) < 0)
    return 1;
  v2 = *(unsigned __int8 *)(a1 + 80);
  if ((v2 & 0x40) != 0)
  {
    if ((GEORPFeedbackFieldValueIsDirty(*(os_unfair_lock_s **)(a1 + 56)) & 1) != 0)
      return 1;
    v2 = *(unsigned __int8 *)(a1 + 80);
  }
  if ((v2 & 0x3C) != 0)
    return 1;
  return (v2 >> 1) & 1;
}

os_unfair_lock_s *GEORPFeedbackFormFieldIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEORPFeedbackFormFieldIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 18);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_189388CEC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackFormFieldAnnotationsReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  uint64_t v18;
  void *v19;
  _BOOL8 v20;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 1)
        {
          PBReaderReadString();
          v18 = objc_claimAutoreleasedReturnValue();
          v19 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = v18;

        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_24;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v20 = v3[*v6] == 0;
  }
  else
  {
LABEL_24:
    v20 = 0;
  }
  objc_sync_exit(v3);

  return v20;
}

void sub_189389448(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackFormFieldAnnotationsReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORPFeedbackFormFieldAnnotationsReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1893894A8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackIntFieldReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  BOOL v25;
  int *v26;
  char v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  _BOOL8 v33;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 2)
        {
          v27 = 0;
          v28 = 0;
          v20 = 0;
          *(_BYTE *)(a1 + 16) |= 1u;
          while (1)
          {
            v29 = *v4;
            v30 = *(_QWORD *)&v3[v29];
            v31 = v30 + 1;
            if (v30 == -1 || v31 > *(_QWORD *)&v3[*v5])
              break;
            v32 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v30);
            *(_QWORD *)&v3[v29] = v31;
            v20 |= (unint64_t)(v32 & 0x7F) << v27;
            if ((v32 & 0x80) == 0)
            {
              v26 = &OBJC_IVAR___GEORPFeedbackIntField__edited;
              goto LABEL_40;
            }
            v27 += 7;
            v25 = v28++ > 8;
            if (v25)
            {
              LODWORD(v20) = 0;
              v26 = &OBJC_IVAR___GEORPFeedbackIntField__edited;
              goto LABEL_42;
            }
          }
          v26 = &OBJC_IVAR___GEORPFeedbackIntField__edited;
LABEL_39:
          v3[*v6] = 1;
        }
        else
        {
          if ((v10 >> 3) != 1)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0)
              goto LABEL_48;
            continue;
          }
          v18 = 0;
          v19 = 0;
          v20 = 0;
          *(_BYTE *)(a1 + 16) |= 2u;
          while (1)
          {
            v21 = *v4;
            v22 = *(_QWORD *)&v3[v21];
            v23 = v22 + 1;
            if (v22 == -1 || v23 > *(_QWORD *)&v3[*v5])
            {
              v26 = &OBJC_IVAR___GEORPFeedbackIntField__original;
              goto LABEL_39;
            }
            v24 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v22);
            *(_QWORD *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0)
              break;
            v18 += 7;
            v25 = v19++ > 8;
            if (v25)
            {
              LODWORD(v20) = 0;
              v26 = &OBJC_IVAR___GEORPFeedbackIntField__original;
              goto LABEL_42;
            }
          }
          v26 = &OBJC_IVAR___GEORPFeedbackIntField__original;
        }
LABEL_40:
        if (v3[*v6])
          LODWORD(v20) = 0;
LABEL_42:
        *(_DWORD *)(a1 + *v26) = v20;
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v33 = v3[*v6] == 0;
  }
  else
  {
LABEL_48:
    v33 = 0;
  }
  objc_sync_exit(v3);

  return v33;
}

void sub_189389CFC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackIntFieldReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORPFeedbackIntFieldReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189389D5C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackLongFieldReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  BOOL v25;
  int *v26;
  char v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  _BOOL8 v33;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 2)
        {
          v27 = 0;
          v28 = 0;
          v20 = 0;
          *(_BYTE *)(a1 + 24) |= 1u;
          while (1)
          {
            v29 = *v4;
            v30 = *(_QWORD *)&v3[v29];
            v31 = v30 + 1;
            if (v30 == -1 || v31 > *(_QWORD *)&v3[*v5])
              break;
            v32 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v30);
            *(_QWORD *)&v3[v29] = v31;
            v20 |= (unint64_t)(v32 & 0x7F) << v27;
            if ((v32 & 0x80) == 0)
            {
              v26 = &OBJC_IVAR___GEORPFeedbackLongField__edited;
              goto LABEL_40;
            }
            v27 += 7;
            v25 = v28++ > 8;
            if (v25)
            {
              v20 = 0;
              v26 = &OBJC_IVAR___GEORPFeedbackLongField__edited;
              goto LABEL_42;
            }
          }
          v26 = &OBJC_IVAR___GEORPFeedbackLongField__edited;
LABEL_39:
          v3[*v6] = 1;
        }
        else
        {
          if ((v10 >> 3) != 1)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0)
              goto LABEL_48;
            continue;
          }
          v18 = 0;
          v19 = 0;
          v20 = 0;
          *(_BYTE *)(a1 + 24) |= 2u;
          while (1)
          {
            v21 = *v4;
            v22 = *(_QWORD *)&v3[v21];
            v23 = v22 + 1;
            if (v22 == -1 || v23 > *(_QWORD *)&v3[*v5])
            {
              v26 = &OBJC_IVAR___GEORPFeedbackLongField__original;
              goto LABEL_39;
            }
            v24 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v22);
            *(_QWORD *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0)
              break;
            v18 += 7;
            v25 = v19++ > 8;
            if (v25)
            {
              v20 = 0;
              v26 = &OBJC_IVAR___GEORPFeedbackLongField__original;
              goto LABEL_42;
            }
          }
          v26 = &OBJC_IVAR___GEORPFeedbackLongField__original;
        }
LABEL_40:
        if (v3[*v6])
          v20 = 0;
LABEL_42:
        *(_QWORD *)(a1 + *v26) = v20;
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v33 = v3[*v6] == 0;
  }
  else
  {
LABEL_48:
    v33 = 0;
  }
  objc_sync_exit(v3);

  return v33;
}

void sub_18938A6FC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackLongFieldReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORPFeedbackLongFieldReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18938A75C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18938AC3C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackMultiSelectFieldReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  BOOL v15;
  char v16;
  int *v17;
  uint64_t v18;
  BOOL v19;
  int *v20;
  int *v21;
  int *v22;
  int *v23;
  char v24;
  unsigned int v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  int v32;
  unint64_t v34;
  _BOOL4 v35;
  int *v36;
  int v37;
  int v38;
  BOOL v39;
  int *v40;
  GEORPFeedbackFieldOption *v41;
  char v42;
  int v43;
  int v44;
  void *v45;
  BOOL v47;
  BOOL v48;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 36);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 32));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int8 *)(a1 + 44) >> 1) & 1) + (*(_BYTE *)(a1 + 44) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v7])
    {
      case -3:
        v8 = 1;
        goto LABEL_6;
      case -2:
        v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v10 & 1 | v11;
        v15 = v7 != 0;
        v16 = (v14 != 0) | v8;
        if (v14)
          v15 = 1;
        v47 = v15;
        if ((v16 & 1) != 0)
          v17 = 0;
        else
          v17 = a3;
        v18 = v14 != 0;
        v19 = v17 == 0;
        v20 = (int *)MEMORY[0x1E0D82BF0];
        v21 = (int *)MEMORY[0x1E0D82BC8];
        if (v14)
          v19 = 1;
        v48 = v19;
        v22 = &OBJC_IVAR___GEORouteDetails__isNearCurrentlyDisplayedStep;
        v23 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_6:
        v12 = v9;
        v13 = v10;
LABEL_8:
        ++v7;
        v9 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v20) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v21))
      goto LABEL_57;
    v24 = 0;
    v25 = 0;
    v26 = 0;
    while (1)
    {
      v27 = *v20;
      v28 = *(_QWORD *)(v3 + v27);
      v29 = v28 + 1;
      if (v28 == -1 || v29 > *(_QWORD *)(v3 + *v6))
        break;
      v30 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v28);
      *(_QWORD *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0)
        goto LABEL_27;
      v24 += 7;
      if (v25++ >= 9)
      {
        v26 = 0;
        v32 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_29;
      }
    }
    *(_BYTE *)(v3 + *v21) = 1;
LABEL_27:
    v32 = *(unsigned __int8 *)(v3 + *v21);
    if (*(_BYTE *)(v3 + *v21))
      v26 = 0;
LABEL_29:
    if (v32 || (v26 & 7) == 4)
    {
LABEL_57:
      if ((v18 & 1) != 0)
      {
        v42 = 1;
        goto LABEL_66;
      }
      if (v17)
      {
        do
        {
          while (1)
          {
            v44 = *v17++;
            v43 = v44;
            if (v44 != 1 && v43 != 2)
              break;
            *(_BYTE *)(a1 + v22[785]) |= v43;
          }
        }
        while (v43);
      }
      goto LABEL_67;
    }
    v34 = v26 >> 3;
    v35 = v18;
    if (!v48)
    {
      v36 = v17;
      do
      {
        v38 = *v36++;
        v37 = v38;
        v35 = v38 != 0;
        if (v38)
          v39 = v37 == (_DWORD)v34;
        else
          v39 = 1;
      }
      while (!v39);
    }
    if ((_DWORD)v34 == 2)
      break;
    if ((_DWORD)v34 != 1)
    {
      if (!PBReaderSkipValueWithTag())
        goto LABEL_65;
      goto LABEL_56;
    }
    if (v35 && (*(_BYTE *)(a1 + v22[785]) & 1) == 0)
    {
      if ((PBReaderPlaceMark() & 1) == 0)
        goto LABEL_65;
      v40 = v21;
      v41 = (GEORPFeedbackFieldOption *)v18;
      v18 = objc_alloc_init(GEORPFeedbackFieldOption);
      if (!GEORPFeedbackFieldOptionReadAllFrom(v18, (void *)v3, v9 & 1))
        goto LABEL_72;
      PBReaderRecallMark();
      -[GEORPFeedbackMultiSelectField _addNoFlagsOptions:](a1, (void *)v18);
      goto LABEL_52;
    }
LABEL_55:
    if ((PBReaderSkipValueWithTag() & 1) == 0)
    {
LABEL_65:
      v42 = 0;
      goto LABEL_66;
    }
LABEL_56:
    if (!v47)
      goto LABEL_57;
  }
  if (!v35 || (*(_BYTE *)(a1 + v22[785]) & 2) != 0)
    goto LABEL_55;
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_65;
  v40 = v21;
  v41 = (GEORPFeedbackFieldOption *)v18;
  v18 = objc_alloc_init(GEORPFeedbackFieldOption);
  if (GEORPFeedbackFieldOptionReadAllFrom(v18, (void *)v3, v9 & 1))
  {
    PBReaderRecallMark();
    -[GEORPFeedbackMultiSelectField _addNoFlagsSelected:](a1, (void *)v18);
LABEL_52:

    v18 = (uint64_t)v41;
    v21 = v40;
    v22 = &OBJC_IVAR___GEORouteDetails__isNearCurrentlyDisplayedStep;
    goto LABEL_56;
  }
LABEL_72:

  v42 = 0;
  LODWORD(v18) = (_DWORD)v41;
  v21 = v40;
  v22 = &OBJC_IVAR___GEORouteDetails__isNearCurrentlyDisplayedStep;
LABEL_66:
  *(_BYTE *)(a1 + v22[785]) |= 1u;
  *(_BYTE *)(a1 + v22[785]) |= 2u;
  if ((v42 & 1) != 0)
  {
LABEL_67:
    v3 = *(_BYTE *)(v3 + *v21) == 0;
    if (!(_DWORD)v18)
      return v3;
    goto LABEL_68;
  }
  v3 = 0;
  if ((_DWORD)v18)
  {
LABEL_68:
    v45 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_18938B3A0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18938BD00(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEORPFeedbackMultiSelectFieldCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  _BYTE v20[128];
  _BYTE v21[128];
  uint64_t v22;

  v22 = *MEMORY[0x1E0C80C00];
  v16 = 0u;
  v17 = 0u;
  v18 = 0u;
  v19 = 0u;
  v2 = *(id *)(a1 + 16);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v16, v21, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v17;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v17 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v16 + 1) + 8 * v6++), "readAll:", 1);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v16, v21, 16);
    }
    while (v4);
  }

  v14 = 0u;
  v15 = 0u;
  v12 = 0u;
  v13 = 0u;
  v7 = *(id *)(a1 + 24);
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v12, v20, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v13;
    do
    {
      v11 = 0;
      do
      {
        if (*(_QWORD *)v13 != v10)
          objc_enumerationMutation(v7);
        objc_msgSend(*(id *)(*((_QWORD *)&v12 + 1) + 8 * v11++), "readAll:", 1, (_QWORD)v12);
      }
      while (v9 != v11);
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v12, v20, 16);
    }
    while (v9);
  }

}

unint64_t GEORPFeedbackMultiSelectFieldReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 36))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEORPFeedbackMultiSelectFieldReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 40));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 32) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 36) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEORPFeedbackMultiSelectFieldReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEORPFeedbackMultiSelectFieldReadAllFrom_initialTag;
  Specified = GEORPFeedbackMultiSelectFieldReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEORPFeedbackMultiSelectFieldCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return Specified;
}

void sub_18938C028(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackMultiSelectFieldReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORPFeedbackMultiSelectFieldReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18938C088(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18938C328(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORPFeedbackMultiSelectFieldIsDirty(uint64_t a1)
{
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t i;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _BYTE v11[128];
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  if ((*(_BYTE *)(a1 + 44) & 7) != 0)
    return 1;
  if ((*(_BYTE *)(a1 + 44) & 2) == 0)
    return 0;
  v9 = 0u;
  v10 = 0u;
  v7 = 0u;
  v8 = 0u;
  v3 = *(id *)(a1 + 24);
  v2 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
  if (v2)
  {
    v4 = *(_QWORD *)v8;
    while (2)
    {
      for (i = 0; i != v2; ++i)
      {
        if (*(_QWORD *)v8 != v4)
          objc_enumerationMutation(v3);
        if (GEORPFeedbackFieldOptionIsDirty(*(_QWORD *)(*((_QWORD *)&v7 + 1) + 8 * i)))
        {
          v2 = 1;
          goto LABEL_15;
        }
      }
      v2 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
      if (v2)
        continue;
      break;
    }
  }
LABEL_15:

  return v2;
}

os_unfair_lock_s *GEORPFeedbackMultiSelectFieldIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEORPFeedbackMultiSelectFieldIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 10);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_18938C8C4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18938CD40(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackPhotoMetadataReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  char v7;
  char v8;
  uint64_t v9;
  int v10;
  unsigned int v11;
  int v12;
  _BOOL4 v13;
  int *v14;
  BOOL v15;
  int *v16;
  int *v17;
  int *v18;
  char v19;
  unsigned int v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  int v27;
  unint64_t v29;
  _BOOL4 v30;
  int *v31;
  int v32;
  int v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  int v38;
  char v39;
  char v40;
  char v41;
  int v42;
  int v43;
  void *v44;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 36);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 32));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = ((*(unsigned __int8 *)(a1 + 44) >> 1) & 1) + (*(_BYTE *)(a1 + 44) & 1);
  while (1)
  {
    v11 = a3[v9];
    if (v11 >= 0xFFFFFFFE)
    {
      v7 = 1;
      goto LABEL_9;
    }
    if (v11 != -3)
      break;
    v8 = 1;
LABEL_9:
    ++v9;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  v12 = v7 & 1 | v10;
  v13 = v12 != 0;
  if ((v12 != 0) | v8 & 1)
    v14 = 0;
  else
    v14 = a3;
  if (v12)
    v15 = 1;
  else
    v15 = v14 == 0;
  v16 = (int *)MEMORY[0x1E0D82BF0];
  v17 = (int *)MEMORY[0x1E0D82BC8];
  v18 = (int *)MEMORY[0x1E0D82BB8];
  while (2)
  {
    if (*(_QWORD *)(v3 + *v16) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v17))
      goto LABEL_62;
    v19 = 0;
    v20 = 0;
    v21 = 0;
    while (1)
    {
      v22 = *v16;
      v23 = *(_QWORD *)(v3 + v22);
      v24 = v23 + 1;
      if (v23 == -1 || v24 > *(_QWORD *)(v3 + *v6))
        break;
      v25 = *(_BYTE *)(*(_QWORD *)(v3 + *v18) + v23);
      *(_QWORD *)(v3 + v22) = v24;
      v21 |= (unint64_t)(v25 & 0x7F) << v19;
      if ((v25 & 0x80) == 0)
        goto LABEL_27;
      v19 += 7;
      if (v20++ >= 9)
      {
        v21 = 0;
        v27 = *(unsigned __int8 *)(v3 + *v17);
        goto LABEL_29;
      }
    }
    *(_BYTE *)(v3 + *v17) = 1;
LABEL_27:
    v27 = *(unsigned __int8 *)(v3 + *v17);
    if (*(_BYTE *)(v3 + *v17))
      v21 = 0;
LABEL_29:
    if (v27 || (v21 & 7) == 4)
    {
LABEL_62:
      if (v13)
      {
        v41 = 1;
        goto LABEL_72;
      }
      if (v14)
      {
        do
        {
          while (1)
          {
            v43 = *v14++;
            v42 = v43;
            if (v43 != 1 && v42 != 2)
              break;
            *(_BYTE *)(a1 + 44) |= v42;
          }
        }
        while (v42);
      }
      goto LABEL_73;
    }
    v29 = v21 >> 3;
    v30 = v13;
    if (!v15)
    {
      v31 = v14;
      do
      {
        v33 = *v31++;
        v32 = v33;
        v30 = v33 != 0;
        if (v33)
          v34 = v32 == (_DWORD)v29;
        else
          v34 = 1;
      }
      while (!v34);
    }
    if ((_DWORD)v29 != 2)
    {
      if ((_DWORD)v29 != 1)
      {
        v38 = PBReaderSkipValueWithTag();
        v17 = (int *)MEMORY[0x1E0D82BC8];
        if (!v38)
          goto LABEL_70;
        goto LABEL_58;
      }
      if (v30)
      {
        if ((*(_BYTE *)(a1 + 44) & 1) == 0)
        {
          PBReaderReadString();
          v35 = objc_claimAutoreleasedReturnValue();
          v36 = 16;
          goto LABEL_48;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_71;
        v9 -= *(_BYTE *)(a1 + 44) & 1;
LABEL_57:
        v17 = (int *)MEMORY[0x1E0D82BC8];
LABEL_58:
        if (v9)
          v40 = 1;
        else
          v40 = v13;
        if ((v40 & 1) == 0)
          goto LABEL_62;
        continue;
      }
LABEL_51:
      v39 = PBReaderSkipValueWithTag();
      v17 = (int *)MEMORY[0x1E0D82BC8];
      if ((v39 & 1) == 0)
      {
LABEL_70:
        v41 = 0;
        goto LABEL_72;
      }
      goto LABEL_58;
    }
    break;
  }
  if (!v30)
    goto LABEL_51;
  if ((*(_BYTE *)(a1 + 44) & 2) == 0)
  {
    PBReaderReadString();
    v35 = objc_claimAutoreleasedReturnValue();
    v36 = 24;
LABEL_48:
    v37 = *(void **)(a1 + v36);
    *(_QWORD *)(a1 + v36) = v35;

    v17 = (int *)MEMORY[0x1E0D82BC8];
    --v9;
    goto LABEL_58;
  }
  if ((PBReaderSkipValueWithTag() & 1) != 0)
  {
    v9 += *(unsigned __int8 *)(a1 + 44) << 30 >> 31;
    goto LABEL_57;
  }
LABEL_71:
  v41 = 0;
  v17 = (int *)MEMORY[0x1E0D82BC8];
LABEL_72:
  *(_BYTE *)(a1 + 44) |= 1u;
  *(_BYTE *)(a1 + 44) |= 2u;
  if ((v41 & 1) != 0)
  {
LABEL_73:
    v3 = *(_BYTE *)(v3 + *v17) == 0;
    if (!v13)
      return v3;
    goto LABEL_74;
  }
  v3 = 0;
  if (v13)
  {
LABEL_74:
    v44 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_18938D250(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18938D5C4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackPhotoMetadataReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 36))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEORPFeedbackPhotoMetadataReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 40));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 32) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 36) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEORPFeedbackPhotoMetadataReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEORPFeedbackPhotoMetadataReadAllFrom_initialTag;
  Specified = GEORPFeedbackPhotoMetadataReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return Specified;
}

void sub_18938D750(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackPhotoMetadataReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORPFeedbackPhotoMetadataReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18938D7B0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18938D92C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackPhotoMetadataIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  v2 = (*(_BYTE *)(a1 + 44) & 7) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return v2;
}

void sub_18938DBB0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18938E040(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackRouteStepReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  char v7;
  char v8;
  uint64_t v9;
  int v10;
  unsigned int v11;
  int v12;
  _BOOL4 v13;
  int *v14;
  int *v15;
  int *v16;
  BOOL v17;
  int *v18;
  char v19;
  unsigned int v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  BOOL v26;
  int v27;
  unint64_t v29;
  _BOOL4 v30;
  int *v31;
  int v32;
  int v33;
  BOOL v34;
  char v35;
  unsigned int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  char v41;
  int v42;
  char v43;
  unsigned int v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  char v48;
  char v49;
  unsigned int v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  char v58;
  uint64_t v59;
  char v60;
  char v61;
  char v62;
  int v63;
  int v64;
  char v65;
  void *v66;
  BOOL v68;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 36);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 32));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = ((*(unsigned __int8 *)(a1 + 56) >> 3) & 1) + ((*(unsigned __int8 *)(a1 + 56) >> 4) & 1);
  while (1)
  {
    v11 = a3[v9];
    if (v11 >= 0xFFFFFFFE)
    {
      v7 = 1;
      goto LABEL_9;
    }
    if (v11 != -3)
      break;
    v8 = 1;
LABEL_9:
    ++v9;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  v12 = v7 & 1 | v10;
  v13 = v12 != 0;
  if ((v12 != 0) | v8 & 1)
    v14 = 0;
  else
    v14 = a3;
  v15 = (int *)MEMORY[0x1E0D82BF0];
  v16 = (int *)MEMORY[0x1E0D82BC8];
  if (v12)
    v17 = 1;
  else
    v17 = v14 == 0;
  v68 = v17;
  v18 = (int *)MEMORY[0x1E0D82BB8];
  while (2)
  {
    if (*(_QWORD *)(v3 + *v15) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v16))
      goto LABEL_99;
    v19 = 0;
    v20 = 0;
    v21 = 0;
    while (1)
    {
      v22 = *v15;
      v23 = *(_QWORD *)(v3 + v22);
      v24 = v23 + 1;
      if (v23 == -1 || v24 > *(_QWORD *)(v3 + *v6))
        break;
      v25 = *(_BYTE *)(*(_QWORD *)(v3 + *v18) + v23);
      *(_QWORD *)(v3 + v22) = v24;
      v21 |= (unint64_t)(v25 & 0x7F) << v19;
      if ((v25 & 0x80) == 0)
        goto LABEL_27;
      v19 += 7;
      v26 = v20++ >= 9;
      if (v26)
      {
        v21 = 0;
        v27 = *(unsigned __int8 *)(v3 + *v16);
        goto LABEL_29;
      }
    }
    *(_BYTE *)(v3 + *v16) = 1;
LABEL_27:
    v27 = *(unsigned __int8 *)(v3 + *v16);
    if (*(_BYTE *)(v3 + *v16))
      v21 = 0;
LABEL_29:
    if (v27 || (v21 & 7) == 4)
    {
LABEL_99:
      if (v13)
      {
        v62 = 1;
        goto LABEL_110;
      }
      if (!v14)
        goto LABEL_111;
      while (1)
      {
        v64 = *v14++;
        v63 = v64;
        if (v64 == 4)
          break;
        if (v63 == 5)
        {
          v65 = 16;
LABEL_108:
          *(_BYTE *)(a1 + 56) |= v65;
        }
        else if (!v63)
        {
          goto LABEL_111;
        }
      }
      v65 = 8;
      goto LABEL_108;
    }
    v29 = v21 >> 3;
    v30 = v13;
    if (!v68)
    {
      v31 = v14;
      do
      {
        v33 = *v31++;
        v32 = v33;
        v30 = v33 != 0;
        if (v33)
          v34 = v32 == (_DWORD)v29;
        else
          v34 = 1;
      }
      while (!v34);
    }
    switch((int)v29)
    {
      case 1:
        if ((v8 & 1) == 0)
          goto LABEL_74;
        v35 = 0;
        v36 = 0;
        v37 = 0;
        *(_BYTE *)(a1 + 56) |= 1u;
        while (1)
        {
          v38 = *v15;
          v39 = *(_QWORD *)(v3 + v38);
          v40 = v39 + 1;
          if (v39 == -1 || v40 > *(_QWORD *)(v3 + *v6))
            break;
          v41 = *(_BYTE *)(*(_QWORD *)(v3 + *v18) + v39);
          *(_QWORD *)(v3 + v38) = v40;
          v37 |= (unint64_t)(v41 & 0x7F) << v35;
          if ((v41 & 0x80) == 0)
            goto LABEL_77;
          v35 += 7;
          v26 = v36++ >= 9;
          if (v26)
          {
            LODWORD(v37) = 0;
            goto LABEL_79;
          }
        }
        *(_BYTE *)(v3 + *v16) = 1;
LABEL_77:
        if (*(_BYTE *)(v3 + *v16))
          LODWORD(v37) = 0;
LABEL_79:
        v59 = 44;
        goto LABEL_88;
      case 2:
        if ((v8 & 1) == 0)
          goto LABEL_74;
        v43 = 0;
        v44 = 0;
        v37 = 0;
        *(_BYTE *)(a1 + 56) |= 2u;
        while (2)
        {
          v45 = *v15;
          v46 = *(_QWORD *)(v3 + v45);
          v47 = v46 + 1;
          if (v46 == -1 || v47 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v16) = 1;
          }
          else
          {
            v48 = *(_BYTE *)(*(_QWORD *)(v3 + *v18) + v46);
            *(_QWORD *)(v3 + v45) = v47;
            v37 |= (unint64_t)(v48 & 0x7F) << v43;
            if (v48 < 0)
            {
              v43 += 7;
              v26 = v44++ >= 9;
              if (v26)
              {
                LODWORD(v37) = 0;
                goto LABEL_83;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v16))
          LODWORD(v37) = 0;
LABEL_83:
        v59 = 48;
        goto LABEL_88;
      case 3:
        if ((v8 & 1) == 0)
          goto LABEL_74;
        v49 = 0;
        v50 = 0;
        v37 = 0;
        *(_BYTE *)(a1 + 56) |= 4u;
        while (2)
        {
          v51 = *v15;
          v52 = *(_QWORD *)(v3 + v51);
          v53 = v52 + 1;
          if (v52 == -1 || v53 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v16) = 1;
          }
          else
          {
            v54 = *(_BYTE *)(*(_QWORD *)(v3 + *v18) + v52);
            *(_QWORD *)(v3 + v51) = v53;
            v37 |= (unint64_t)(v54 & 0x7F) << v49;
            if (v54 < 0)
            {
              v49 += 7;
              v26 = v50++ >= 9;
              if (v26)
              {
                LODWORD(v37) = 0;
                goto LABEL_87;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v16))
          LODWORD(v37) = 0;
LABEL_87:
        v59 = 52;
LABEL_88:
        *(_DWORD *)(a1 + v59) = v37;
        goto LABEL_95;
      case 4:
        if (!v30)
          goto LABEL_74;
        if ((*(_BYTE *)(a1 + 56) & 8) == 0)
        {
          PBReaderReadString();
          v55 = objc_claimAutoreleasedReturnValue();
          v56 = 16;
          goto LABEL_73;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_116;
        v60 = 16 * *(_BYTE *)(a1 + 56);
        goto LABEL_93;
      case 5:
        if (!v30)
        {
LABEL_74:
          v58 = PBReaderSkipValueWithTag();
          v16 = (int *)MEMORY[0x1E0D82BC8];
          if ((v58 & 1) == 0)
          {
LABEL_109:
            v62 = 0;
            goto LABEL_110;
          }
          goto LABEL_95;
        }
        if ((*(_BYTE *)(a1 + 56) & 0x10) == 0)
        {
          PBReaderReadString();
          v55 = objc_claimAutoreleasedReturnValue();
          v56 = 24;
LABEL_73:
          v57 = *(void **)(a1 + v56);
          *(_QWORD *)(a1 + v56) = v55;

          --v9;
LABEL_94:
          v16 = (int *)MEMORY[0x1E0D82BC8];
LABEL_95:
          if (v9)
            v61 = 1;
          else
            v61 = v13;
          if ((v61 & 1) == 0)
            goto LABEL_99;
          continue;
        }
        if ((PBReaderSkipValueWithTag() & 1) != 0)
        {
          v60 = 8 * *(_BYTE *)(a1 + 56);
LABEL_93:
          v9 += v60 >> 7;
          goto LABEL_94;
        }
LABEL_116:
        v62 = 0;
        v16 = (int *)MEMORY[0x1E0D82BC8];
LABEL_110:
        *(_BYTE *)(a1 + 56) |= 8u;
        *(_BYTE *)(a1 + 56) |= 0x10u;
        if ((v62 & 1) != 0)
        {
LABEL_111:
          v3 = *(_BYTE *)(v3 + *v16) == 0;
          if (v13)
            goto LABEL_112;
        }
        else
        {
          v3 = 0;
          if (v13)
          {
LABEL_112:
            v66 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = 0;

          }
        }
        return v3;
      default:
        v42 = PBReaderSkipValueWithTag();
        v16 = (int *)MEMORY[0x1E0D82BC8];
        if (!v42)
          goto LABEL_109;
        goto LABEL_95;
    }
  }
}

void sub_18938E788(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18938ED74(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackRouteStepReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 36))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEORPFeedbackRouteStepReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 40));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 32) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 36) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEORPFeedbackRouteStepReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEORPFeedbackRouteStepReadAllFrom_initialTag;
  Specified = GEORPFeedbackRouteStepReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return Specified;
}

void sub_18938EF00(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackRouteStepReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORPFeedbackRouteStepReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18938EF60(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18938F14C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackRouteStepIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  v2 = (*(_BYTE *)(a1 + 56) & 0x38) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return v2;
}

void sub_18938F4F4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18938F9A4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackSingleSelectFieldReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  _BOOL4 v15;
  int *v16;
  BOOL v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  int v29;
  unint64_t v31;
  _BOOL4 v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  GEORPFeedbackFieldOption *v37;
  void *v38;
  char v39;
  char v40;
  int v41;
  int v42;
  void *v43;
  BOOL v45;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 36);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 32));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int8 *)(a1 + 44) >> 1) & 1) + (*(_BYTE *)(a1 + 44) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v7])
    {
      case -3:
        v8 = 1;
        goto LABEL_6;
      case -2:
        v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v10 & 1 | v11;
        v15 = v14 != 0;
        if ((v14 != 0) | v8 & 1)
          v16 = 0;
        else
          v16 = a3;
        v17 = v16 == 0;
        if (v14)
          v17 = 1;
        v45 = v17;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_6:
        v12 = v9;
        v13 = v10;
LABEL_8:
        ++v7;
        v9 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v19))
      goto LABEL_61;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0)
        goto LABEL_25;
      v21 += 7;
      if (v22++ >= 9)
      {
        v23 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_25:
    v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_27:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_61:
      if (v15)
      {
        v40 = 1;
        goto LABEL_70;
      }
      if (v16)
      {
        do
        {
          while (1)
          {
            v42 = *v16++;
            v41 = v42;
            if (v42 != 1 && v41 != 2)
              break;
            *(_BYTE *)(a1 + 44) |= v41;
          }
        }
        while (v41);
      }
      goto LABEL_71;
    }
    v31 = v23 >> 3;
    v32 = v15;
    if (!v45)
    {
      v33 = v16;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    if ((_DWORD)v31 != 2)
    {
      if ((_DWORD)v31 != 1)
      {
        if (!PBReaderSkipValueWithTag())
          goto LABEL_69;
        goto LABEL_54;
      }
      if (!v32 || (*(_BYTE *)(a1 + 44) & 1) != 0)
      {
LABEL_53:
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_69;
        goto LABEL_54;
      }
      if ((PBReaderPlaceMark() & 1) == 0)
        goto LABEL_69;
      v37 = objc_alloc_init(GEORPFeedbackFieldOption);
      if (!GEORPFeedbackFieldOptionReadAllFrom((uint64_t)v37, (void *)v3, v9 & 1))
        goto LABEL_76;
      PBReaderRecallMark();
      -[GEORPFeedbackSingleSelectField _addNoFlagsOptions:](a1, v37);

      goto LABEL_50;
    }
    if (!v32)
      goto LABEL_53;
    if ((*(_BYTE *)(a1 + 44) & 2) == 0)
      break;
    if ((PBReaderSkipValueWithTag() & 1) == 0)
    {
LABEL_69:
      v40 = 0;
      goto LABEL_70;
    }
    v7 += *(unsigned __int8 *)(a1 + 44) << 30 >> 31;
LABEL_54:
    if (v7)
      v39 = 1;
    else
      v39 = v15;
    if ((v39 & 1) == 0)
      goto LABEL_61;
  }
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_69;
  v37 = objc_alloc_init(GEORPFeedbackFieldOption);
  if (GEORPFeedbackFieldOptionReadAllFrom((uint64_t)v37, (void *)v3, v9 & 1))
  {
    PBReaderRecallMark();
    v38 = *(void **)(a1 + 24);
    *(_QWORD *)(a1 + 24) = v37;

    --v7;
LABEL_50:
    v19 = (int *)MEMORY[0x1E0D82BC8];
    goto LABEL_54;
  }
LABEL_76:

  v40 = 0;
  v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_70:
  *(_BYTE *)(a1 + 44) |= 1u;
  *(_BYTE *)(a1 + 44) |= 2u;
  if ((v40 & 1) != 0)
  {
LABEL_71:
    v3 = *(_BYTE *)(v3 + *v19) == 0;
    if (!v15)
      return v3;
    goto LABEL_72;
  }
  v3 = 0;
  if (v15)
  {
LABEL_72:
    v43 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_189390128(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189390730(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORPFeedbackSingleSelectFieldCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _BYTE v12[128];
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  v8 = 0u;
  v9 = 0u;
  v10 = 0u;
  v11 = 0u;
  v2 = *(id *)(a1 + 16);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v9;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v9 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v8 + 1) + 8 * v6++), "readAll:", 1, (_QWORD)v8);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
    }
    while (v4);
  }

  return objc_msgSend(*(id *)(a1 + 24), "readAll:", 1);
}

unint64_t GEORPFeedbackSingleSelectFieldReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 36))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEORPFeedbackSingleSelectFieldReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 40));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 32) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 36) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEORPFeedbackSingleSelectFieldReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEORPFeedbackSingleSelectFieldReadAllFrom_initialTag;
  Specified = GEORPFeedbackSingleSelectFieldReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEORPFeedbackSingleSelectFieldCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return Specified;
}

void sub_1893909D4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackSingleSelectFieldReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORPFeedbackSingleSelectFieldReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189390A34(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189390C54(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORPFeedbackSingleSelectFieldIsDirty(uint64_t a1)
{
  char v2;
  uint64_t v3;
  id v5;
  uint64_t v6;
  uint64_t i;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _BYTE v12[128];
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  v2 = *(_BYTE *)(a1 + 44);
  if ((v2 & 5) != 0)
    return 1;
  if ((*(_BYTE *)(a1 + 44) & 2) != 0)
  {
    if (GEORPFeedbackFieldOptionIsDirty(*(_QWORD *)(a1 + 24)))
      return 1;
    v2 = *(_BYTE *)(a1 + 44);
  }
  if ((v2 & 1) == 0)
    return 0;
  v10 = 0u;
  v11 = 0u;
  v8 = 0u;
  v9 = 0u;
  v5 = *(id *)(a1 + 16);
  v3 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
  if (v3)
  {
    v6 = *(_QWORD *)v9;
    while (2)
    {
      for (i = 0; i != v3; ++i)
      {
        if (*(_QWORD *)v9 != v6)
          objc_enumerationMutation(v5);
        if (GEORPFeedbackFieldOptionIsDirty(*(_QWORD *)(*((_QWORD *)&v8 + 1) + 8 * i)))
        {
          v3 = 1;
          goto LABEL_19;
        }
      }
      v3 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
      if (v3)
        continue;
      break;
    }
  }
LABEL_19:

  return v3;
}

os_unfair_lock_s *GEORPFeedbackSingleSelectFieldIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEORPFeedbackSingleSelectFieldIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 10);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_18939114C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18939155C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackTextFieldReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  char v7;
  char v8;
  uint64_t v9;
  int v10;
  unsigned int v11;
  int v12;
  _BOOL4 v13;
  int *v14;
  BOOL v15;
  int *v16;
  int *v17;
  int *v18;
  char v19;
  unsigned int v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  int v27;
  unint64_t v29;
  _BOOL4 v30;
  int *v31;
  int v32;
  int v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  int v38;
  char v39;
  char v40;
  char v41;
  int v42;
  int v43;
  char v44;
  void *v45;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 36);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 32));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = ((*(unsigned __int8 *)(a1 + 44) >> 1) & 1) + (*(_BYTE *)(a1 + 44) & 1);
  while (1)
  {
    v11 = a3[v9];
    if (v11 >= 0xFFFFFFFE)
    {
      v7 = 1;
      goto LABEL_9;
    }
    if (v11 != -3)
      break;
    v8 = 1;
LABEL_9:
    ++v9;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  v12 = v7 & 1 | v10;
  v13 = v12 != 0;
  if ((v12 != 0) | v8 & 1)
    v14 = 0;
  else
    v14 = a3;
  if (v12)
    v15 = 1;
  else
    v15 = v14 == 0;
  v16 = (int *)MEMORY[0x1E0D82BF0];
  v17 = (int *)MEMORY[0x1E0D82BC8];
  v18 = (int *)MEMORY[0x1E0D82BB8];
  while (2)
  {
    if (*(_QWORD *)(v3 + *v16) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v17))
      goto LABEL_62;
    v19 = 0;
    v20 = 0;
    v21 = 0;
    while (1)
    {
      v22 = *v16;
      v23 = *(_QWORD *)(v3 + v22);
      v24 = v23 + 1;
      if (v23 == -1 || v24 > *(_QWORD *)(v3 + *v6))
        break;
      v25 = *(_BYTE *)(*(_QWORD *)(v3 + *v18) + v23);
      *(_QWORD *)(v3 + v22) = v24;
      v21 |= (unint64_t)(v25 & 0x7F) << v19;
      if ((v25 & 0x80) == 0)
        goto LABEL_27;
      v19 += 7;
      if (v20++ >= 9)
      {
        v21 = 0;
        v27 = *(unsigned __int8 *)(v3 + *v17);
        goto LABEL_29;
      }
    }
    *(_BYTE *)(v3 + *v17) = 1;
LABEL_27:
    v27 = *(unsigned __int8 *)(v3 + *v17);
    if (*(_BYTE *)(v3 + *v17))
      v21 = 0;
LABEL_29:
    if (v27 || (v21 & 7) == 4)
    {
LABEL_62:
      if (v13)
      {
        v41 = 1;
        goto LABEL_74;
      }
      if (!v14)
        goto LABEL_75;
      while (1)
      {
        v43 = *v14++;
        v42 = v43;
        if (v43 == 1)
          break;
        if (v42 == 2)
        {
          v44 = 1;
LABEL_71:
          *(_BYTE *)(a1 + 44) |= v44;
        }
        else if (!v42)
        {
          goto LABEL_75;
        }
      }
      v44 = 2;
      goto LABEL_71;
    }
    v29 = v21 >> 3;
    v30 = v13;
    if (!v15)
    {
      v31 = v14;
      do
      {
        v33 = *v31++;
        v32 = v33;
        v30 = v33 != 0;
        if (v33)
          v34 = v32 == (_DWORD)v29;
        else
          v34 = 1;
      }
      while (!v34);
    }
    if ((_DWORD)v29 != 2)
    {
      if ((_DWORD)v29 != 1)
      {
        v38 = PBReaderSkipValueWithTag();
        v17 = (int *)MEMORY[0x1E0D82BC8];
        if (!v38)
          goto LABEL_72;
        goto LABEL_58;
      }
      if (v30)
      {
        if ((*(_BYTE *)(a1 + 44) & 2) == 0)
        {
          PBReaderReadString();
          v35 = objc_claimAutoreleasedReturnValue();
          v36 = 24;
          goto LABEL_48;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_73;
        v9 += *(unsigned __int8 *)(a1 + 44) << 30 >> 31;
LABEL_57:
        v17 = (int *)MEMORY[0x1E0D82BC8];
LABEL_58:
        if (v9)
          v40 = 1;
        else
          v40 = v13;
        if ((v40 & 1) == 0)
          goto LABEL_62;
        continue;
      }
LABEL_51:
      v39 = PBReaderSkipValueWithTag();
      v17 = (int *)MEMORY[0x1E0D82BC8];
      if ((v39 & 1) == 0)
      {
LABEL_72:
        v41 = 0;
        goto LABEL_74;
      }
      goto LABEL_58;
    }
    break;
  }
  if (!v30)
    goto LABEL_51;
  if ((*(_BYTE *)(a1 + 44) & 1) == 0)
  {
    PBReaderReadString();
    v35 = objc_claimAutoreleasedReturnValue();
    v36 = 16;
LABEL_48:
    v37 = *(void **)(a1 + v36);
    *(_QWORD *)(a1 + v36) = v35;

    v17 = (int *)MEMORY[0x1E0D82BC8];
    --v9;
    goto LABEL_58;
  }
  if ((PBReaderSkipValueWithTag() & 1) != 0)
  {
    v9 -= *(_BYTE *)(a1 + 44) & 1;
    goto LABEL_57;
  }
LABEL_73:
  v41 = 0;
  v17 = (int *)MEMORY[0x1E0D82BC8];
LABEL_74:
  *(_BYTE *)(a1 + 44) |= 2u;
  *(_BYTE *)(a1 + 44) |= 1u;
  if ((v41 & 1) != 0)
  {
LABEL_75:
    v3 = *(_BYTE *)(v3 + *v17) == 0;
    if (v13)
      goto LABEL_76;
  }
  else
  {
    v3 = 0;
    if (v13)
    {
LABEL_76:
      v45 = *(void **)(a1 + 8);
      *(_QWORD *)(a1 + 8) = 0;

    }
  }
  return v3;
}

void sub_189391A74(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189391DEC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackTextFieldReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 36))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEORPFeedbackTextFieldReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 40));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 32) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 36) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEORPFeedbackTextFieldReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEORPFeedbackTextFieldReadAllFrom_initialTag;
  Specified = GEORPFeedbackTextFieldReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return Specified;
}

void sub_189391F78(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackTextFieldReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORPFeedbackTextFieldReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189391FD8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189392154(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackTextFieldIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  v2 = (*(_BYTE *)(a1 + 44) & 7) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return v2;
}

void sub_1893923D8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189392710(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackTextListFieldReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  int v7;
  char v8;
  uint64_t v9;
  unsigned int v10;
  unsigned int v11;
  _BOOL4 v12;
  int v13;
  int *v14;
  uint64_t v15;
  int *v16;
  int *v17;
  int *v18;
  char v19;
  unsigned int v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  int v27;
  unint64_t v29;
  BOOL v30;
  int *v31;
  int v32;
  int v33;
  BOOL v34;
  uint64_t v35;
  void *v36;
  char v37;
  int v38;
  char v39;
  void *v40;
  char v42;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1)
      + (*(_BYTE *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1);
  while (1)
  {
    v11 = a3[v9];
    if (v11 >= 0xFFFFFFFE)
    {
      v7 = 1;
      goto LABEL_9;
    }
    if (v11 != -3)
      break;
    v8 = 1;
LABEL_9:
    ++v9;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  v12 = v10 > 1;
  v13 = v7 | v12;
  if ((((v7 | v12) | v8) & 1) != 0)
    v14 = 0;
  else
    v14 = a3;
  v15 = (v14 == 0) | v13;
  v42 = (v9 != 0) | v13;
  v16 = (int *)MEMORY[0x1E0D82BF0];
  v17 = (int *)MEMORY[0x1E0D82BC8];
  v18 = (int *)MEMORY[0x1E0D82BB8];
  while (2)
  {
    if (*(_QWORD *)(v3 + *v16) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v17))
      goto LABEL_55;
    v19 = 0;
    v20 = 0;
    v21 = 0;
    while (1)
    {
      v22 = *v16;
      v23 = *(_QWORD *)(v3 + v22);
      v24 = v23 + 1;
      if (v23 == -1 || v24 > *(_QWORD *)(v3 + *v6))
        break;
      v25 = *(_BYTE *)(*(_QWORD *)(v3 + *v18) + v23);
      *(_QWORD *)(v3 + v22) = v24;
      v21 |= (unint64_t)(v25 & 0x7F) << v19;
      if ((v25 & 0x80) == 0)
        goto LABEL_24;
      v19 += 7;
      if (v20++ >= 9)
      {
        v21 = 0;
        v27 = *(unsigned __int8 *)(v3 + *v17);
        goto LABEL_26;
      }
    }
    *(_BYTE *)(v3 + *v17) = 1;
LABEL_24:
    v27 = *(unsigned __int8 *)(v3 + *v17);
    if (*(_BYTE *)(v3 + *v17))
      v21 = 0;
LABEL_26:
    if (v27 || (v21 & 7) == 4)
    {
LABEL_55:
      if ((v13 & 1) != 0)
      {
        v37 = 1;
        goto LABEL_63;
      }
      if (v14)
      {
        while (1)
        {
          v38 = *v14++;
          v39 = 1;
          switch(v38)
          {
            case 0:
              goto LABEL_64;
            case 1:
              goto LABEL_61;
            case 2:
              v39 = 4;
              goto LABEL_61;
            case 3:
              v39 = 2;
LABEL_61:
              *(_BYTE *)(a1 + 52) |= v39;
              break;
            default:
              continue;
          }
        }
      }
LABEL_64:
      v3 = *(_BYTE *)(v3 + *v17) == 0;
      if ((v13 & 1) == 0)
        return v3;
      goto LABEL_65;
    }
    v29 = v21 >> 3;
    v30 = v13;
    if ((v15 & 1) == 0)
    {
      v31 = v14;
      do
      {
        v33 = *v31++;
        v32 = v33;
        v30 = v33 != 0;
        if (v33)
          v34 = v32 == (_DWORD)v29;
        else
          v34 = 1;
      }
      while (!v34);
    }
    if ((_DWORD)v29 == 3)
    {
      if (!v30 || (*(_BYTE *)(a1 + 52) & 2) != 0)
        goto LABEL_53;
      v35 = v15;
      PBReaderReadString();
      v36 = (void *)objc_claimAutoreleasedReturnValue();
      if (v36)
        -[GEORPFeedbackTextListField _addNoFlagsOriginal:](a1, v36);
      goto LABEL_52;
    }
    if ((_DWORD)v29 == 2)
    {
      if (!v30 || (*(_BYTE *)(a1 + 52) & 4) != 0)
        goto LABEL_53;
      v35 = v15;
      PBReaderReadString();
      v36 = (void *)objc_claimAutoreleasedReturnValue();
      if (v36)
        -[GEORPFeedbackTextListField _addNoFlagsRemoved:](a1, v36);
LABEL_52:

      v15 = v35;
      v17 = (int *)MEMORY[0x1E0D82BC8];
      goto LABEL_54;
    }
    if ((_DWORD)v29 == 1 && v30 && (*(_BYTE *)(a1 + 52) & 1) == 0)
    {
      v35 = v15;
      PBReaderReadString();
      v36 = (void *)objc_claimAutoreleasedReturnValue();
      if (v36)
        -[GEORPFeedbackTextListField _addNoFlagsAdded:](a1, v36);
      goto LABEL_52;
    }
LABEL_53:
    if ((PBReaderSkipValueWithTag() & 1) != 0)
    {
LABEL_54:
      if ((v42 & 1) == 0)
        goto LABEL_55;
      continue;
    }
    break;
  }
  v37 = 0;
LABEL_63:
  *(_BYTE *)(a1 + 52) |= 1u;
  *(_BYTE *)(a1 + 52) |= 4u;
  *(_BYTE *)(a1 + 52) |= 2u;
  if ((v37 & 1) != 0)
    goto LABEL_64;
  v3 = 0;
  if ((v13 & 1) != 0)
  {
LABEL_65:
    v40 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_189392E34(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189393168(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189393994(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackTextListFieldReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEORPFeedbackTextListFieldReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEORPFeedbackTextListFieldReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEORPFeedbackTextListFieldReadAllFrom_initialTag;
  Specified = GEORPFeedbackTextListFieldReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_189393B20(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackTextListFieldReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORPFeedbackTextListFieldReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189393B80(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189393ECC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackTextListFieldIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v2 = (*(_BYTE *)(a1 + 52) & 0xF) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return v2;
}

void sub_189394440(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189394994(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackTileFeatureInfoReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  _BOOL4 v15;
  int *v16;
  BOOL v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  int v29;
  unint64_t v31;
  _BOOL4 v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  GEORPFeatureHandle *v37;
  uint64_t v38;
  void *v39;
  char v40;
  char v41;
  int v42;
  int v43;
  void *v44;
  BOOL v46;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 36);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 32));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int8 *)(a1 + 44) >> 1) & 1) + (*(_BYTE *)(a1 + 44) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v9])
    {
      case -3:
        v8 = 1;
        goto LABEL_6;
      case -2:
        v12 = v7;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v10 & 1 | v11;
        v15 = v14 != 0;
        if ((v14 != 0) | v8 & 1)
          v16 = 0;
        else
          v16 = a3;
        v17 = v16 == 0;
        if (v14)
          v17 = 1;
        v46 = v17;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_6:
        v12 = v7;
        v13 = v10;
LABEL_8:
        ++v9;
        v7 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v19))
      goto LABEL_58;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0)
        goto LABEL_25;
      v21 += 7;
      if (v22++ >= 9)
      {
        v23 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_25:
    v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_27:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_58:
      if (v15)
      {
        v41 = 1;
        goto LABEL_68;
      }
      if (v16)
      {
        do
        {
          while (1)
          {
            v43 = *v16++;
            v42 = v43;
            if (v43 != 1 && v42 != 2)
              break;
            *(_BYTE *)(a1 + 44) |= v42;
          }
        }
        while (v42);
      }
      goto LABEL_69;
    }
    v31 = v23 >> 3;
    v32 = v15;
    if (!v46)
    {
      v33 = v16;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    if ((_DWORD)v31 != 2)
      break;
    if (!v32)
      goto LABEL_50;
    if ((*(_BYTE *)(a1 + 44) & 2) != 0)
    {
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_67:
        v41 = 0;
        goto LABEL_68;
      }
      v9 += *(unsigned __int8 *)(a1 + 44) << 30 >> 31;
    }
    else
    {
      PBReaderReadString();
      v38 = objc_claimAutoreleasedReturnValue();
      v39 = *(void **)(a1 + 24);
      *(_QWORD *)(a1 + 24) = v38;

      --v9;
    }
LABEL_51:
    if (v9)
      v40 = 1;
    else
      v40 = v15;
    if ((v40 & 1) == 0)
      goto LABEL_58;
  }
  if ((_DWORD)v31 != 1)
  {
    if (!PBReaderSkipValueWithTag())
      goto LABEL_67;
    goto LABEL_51;
  }
  if (!v32 || (*(_BYTE *)(a1 + 44) & 1) != 0)
  {
LABEL_50:
    if ((PBReaderSkipValueWithTag() & 1) == 0)
      goto LABEL_67;
    goto LABEL_51;
  }
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_67;
  v37 = objc_alloc_init(GEORPFeatureHandle);
  if (GEORPFeatureHandleReadAllFrom((uint64_t)v37, (void *)v3))
  {
    PBReaderRecallMark();
    -[GEORPFeedbackTileFeatureInfo _addNoFlagsFeatureHandle:](a1, v37);

    v19 = (int *)MEMORY[0x1E0D82BC8];
    goto LABEL_51;
  }

  v41 = 0;
  v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_68:
  *(_BYTE *)(a1 + 44) |= 1u;
  *(_BYTE *)(a1 + 44) |= 2u;
  if ((v41 & 1) != 0)
  {
LABEL_69:
    v3 = *(_BYTE *)(v3 + *v19) == 0;
    if (!v15)
      return v3;
    goto LABEL_70;
  }
  v3 = 0;
  if (v15)
  {
LABEL_70:
    v44 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_1893950E4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893956F4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEORPFeedbackTileFeatureInfoCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _BYTE v10[128];
  uint64_t v11;

  v11 = *MEMORY[0x1E0C80C00];
  v6 = 0u;
  v7 = 0u;
  v8 = 0u;
  v9 = 0u;
  v1 = *(id *)(a1 + 16);
  v2 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
  if (v2)
  {
    v3 = v2;
    v4 = *(_QWORD *)v7;
    do
    {
      v5 = 0;
      do
      {
        if (*(_QWORD *)v7 != v4)
          objc_enumerationMutation(v1);
        objc_msgSend(*(id *)(*((_QWORD *)&v6 + 1) + 8 * v5++), "readAll:", 1, (_QWORD)v6);
      }
      while (v3 != v5);
      v3 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
    }
    while (v3);
  }

}

unint64_t GEORPFeedbackTileFeatureInfoReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 36))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEORPFeedbackTileFeatureInfoReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 40));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 32) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 36) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEORPFeedbackTileFeatureInfoReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEORPFeedbackTileFeatureInfoReadAllFrom_initialTag;
  Specified = GEORPFeedbackTileFeatureInfoReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEORPFeedbackTileFeatureInfoCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return Specified;
}

void sub_189395980(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackTileFeatureInfoReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORPFeedbackTileFeatureInfoReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1893959E0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189395C10(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackTileFeatureInfoIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  v2 = (*(_BYTE *)(a1 + 44) & 7) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return v2;
}

void sub_189395FB4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893963B0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackTimestampReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  _BOOL4 v15;
  int *v16;
  BOOL v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  int v29;
  unint64_t v31;
  _BOOL4 v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  GEORPTimestamp *v37;
  uint64_t v38;
  void *v39;
  char v40;
  char v41;
  int v42;
  int v43;
  char v44;
  void *v45;
  BOOL v47;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 36);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 32));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int8 *)(a1 + 44) >> 1) & 1) + (*(_BYTE *)(a1 + 44) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v7])
    {
      case -3:
        v8 = 1;
        goto LABEL_6;
      case -2:
        v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v10 & 1 | v11;
        v15 = v14 != 0;
        if ((v14 != 0) | v8 & 1)
          v16 = 0;
        else
          v16 = a3;
        v17 = v16 == 0;
        if (v14)
          v17 = 1;
        v47 = v17;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_6:
        v12 = v9;
        v13 = v10;
LABEL_8:
        ++v7;
        v9 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v19))
      goto LABEL_63;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0)
        goto LABEL_25;
      v21 += 7;
      if (v22++ >= 9)
      {
        v23 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_25:
    v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_27:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_63:
      if (v15)
      {
        v41 = 1;
        goto LABEL_74;
      }
      if (!v16)
        goto LABEL_75;
      while (1)
      {
        v43 = *v16++;
        v42 = v43;
        if (v43 == 1)
          break;
        if (v42 == 2)
        {
          v44 = 1;
LABEL_72:
          *(_BYTE *)(a1 + 44) |= v44;
        }
        else if (!v42)
        {
          goto LABEL_75;
        }
      }
      v44 = 2;
      goto LABEL_72;
    }
    v31 = v23 >> 3;
    v32 = v15;
    if (!v47)
    {
      v33 = v16;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    if ((_DWORD)v31 != 2)
    {
      if ((_DWORD)v31 != 1)
      {
        if (!PBReaderSkipValueWithTag())
          goto LABEL_73;
        goto LABEL_54;
      }
      if (!v32)
        goto LABEL_53;
      if ((*(_BYTE *)(a1 + 44) & 2) != 0)
      {
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_73;
        v7 += *(unsigned __int8 *)(a1 + 44) << 30 >> 31;
        goto LABEL_54;
      }
      if ((PBReaderPlaceMark() & 1) == 0)
        goto LABEL_73;
      v37 = objc_alloc_init(GEORPTimestamp);
      if (!GEORPTimestampReadAllFrom((uint64_t)v37, (void *)v3))
        goto LABEL_80;
      PBReaderRecallMark();
      v38 = 24;
      goto LABEL_50;
    }
    if (!v32)
    {
LABEL_53:
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        goto LABEL_73;
      goto LABEL_54;
    }
    if ((*(_BYTE *)(a1 + 44) & 1) == 0)
      break;
    if ((PBReaderSkipValueWithTag() & 1) == 0)
    {
LABEL_73:
      v41 = 0;
      goto LABEL_74;
    }
    v7 -= *(_BYTE *)(a1 + 44) & 1;
LABEL_54:
    if (v7)
      v40 = 1;
    else
      v40 = v15;
    if ((v40 & 1) == 0)
      goto LABEL_63;
  }
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_73;
  v37 = objc_alloc_init(GEORPTimestamp);
  if (GEORPTimestampReadAllFrom((uint64_t)v37, (void *)v3))
  {
    PBReaderRecallMark();
    v38 = 16;
LABEL_50:
    v39 = *(void **)(a1 + v38);
    *(_QWORD *)(a1 + v38) = v37;

    --v7;
    v19 = (int *)MEMORY[0x1E0D82BC8];
    goto LABEL_54;
  }
LABEL_80:

  v41 = 0;
  v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_74:
  *(_BYTE *)(a1 + 44) |= 2u;
  *(_BYTE *)(a1 + 44) |= 1u;
  if ((v41 & 1) != 0)
  {
LABEL_75:
    v3 = *(_BYTE *)(v3 + *v19) == 0;
    if (v15)
      goto LABEL_76;
  }
  else
  {
    v3 = 0;
    if (v15)
    {
LABEL_76:
      v45 = *(void **)(a1 + 8);
      *(_QWORD *)(a1 + 8) = 0;

    }
  }
  return v3;
}

void sub_18939696C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189396DAC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackTimestampReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 36))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEORPFeedbackTimestampReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 40));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 32) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 36) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEORPFeedbackTimestampReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEORPFeedbackTimestampReadAllFrom_initialTag;
  Specified = GEORPFeedbackTimestampReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    objc_msgSend(*(id *)(a1 + 24), "readAll:", 1);
    objc_msgSend(*(id *)(a1 + 16), "readAll:", 1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return Specified;
}

void sub_189396F64(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackTimestampReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORPFeedbackTimestampReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189396FC4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189397140(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackTimestampIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  v2 = (*(_BYTE *)(a1 + 44) & 7) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return v2;
}

void sub_1893973C4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189397724(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackTransitLineReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  char v7;
  char v8;
  uint64_t v9;
  unsigned int v10;
  unsigned int v11;
  char v12;
  int *v13;
  int *v14;
  int *v15;
  int *v16;
  char v17;
  unsigned int v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  int v25;
  unint64_t v27;
  BOOL v28;
  int *v29;
  int v30;
  int v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  int v36;
  char v37;
  char v38;
  char v39;
  int v40;
  char v41;
  void *v42;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1)
      + (*(_BYTE *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1);
  while (1)
  {
    v11 = a3[v9];
    if (v11 >= 0xFFFFFFFE)
    {
      v7 = 1;
      goto LABEL_9;
    }
    if (v11 != -3)
      break;
    v8 = 1;
LABEL_9:
    ++v9;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  v12 = v7 | (v10 > 1);
  if (v7 & 1 | (v10 > 1) | v8 & 1)
    v13 = 0;
  else
    v13 = a3;
  v14 = (int *)MEMORY[0x1E0D82BF0];
  v15 = (int *)MEMORY[0x1E0D82BC8];
  v16 = (int *)MEMORY[0x1E0D82BB8];
  while (2)
  {
    if (*(_QWORD *)(v3 + *v14) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v15))
      goto LABEL_63;
    v17 = 0;
    v18 = 0;
    v19 = 0;
    while (1)
    {
      v20 = *v14;
      v21 = *(_QWORD *)(v3 + v20);
      v22 = v21 + 1;
      if (v21 == -1 || v22 > *(_QWORD *)(v3 + *v6))
        break;
      v23 = *(_BYTE *)(*(_QWORD *)(v3 + *v16) + v21);
      *(_QWORD *)(v3 + v20) = v22;
      v19 |= (unint64_t)(v23 & 0x7F) << v17;
      if ((v23 & 0x80) == 0)
        goto LABEL_24;
      v17 += 7;
      if (v18++ >= 9)
      {
        v19 = 0;
        v25 = *(unsigned __int8 *)(v3 + *v15);
        goto LABEL_26;
      }
    }
    *(_BYTE *)(v3 + *v15) = 1;
LABEL_24:
    v25 = *(unsigned __int8 *)(v3 + *v15);
    if (*(_BYTE *)(v3 + *v15))
      v19 = 0;
LABEL_26:
    if (v25 || (v19 & 7) == 4)
    {
LABEL_63:
      if ((v12 & 1) != 0)
      {
        v39 = 1;
        goto LABEL_72;
      }
      if (v13)
      {
        while (1)
        {
          v40 = *v13++;
          v41 = 1;
          switch(v40)
          {
            case 0:
              goto LABEL_73;
            case 1:
              goto LABEL_69;
            case 2:
              v41 = 2;
              goto LABEL_69;
            case 3:
              v41 = 4;
LABEL_69:
              *(_BYTE *)(a1 + 52) |= v41;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_73;
    }
    v27 = v19 >> 3;
    v28 = v12;
    if (!((v13 == 0) | v12 & 1))
    {
      v29 = v13;
      do
      {
        v31 = *v29++;
        v30 = v31;
        v28 = v31 != 0;
        if (v31)
          v32 = v30 == (_DWORD)v27;
        else
          v32 = 1;
      }
      while (!v32);
    }
    if ((_DWORD)v27 == 3)
    {
      if (!v28)
        goto LABEL_52;
      if ((*(_BYTE *)(a1 + 52) & 4) == 0)
      {
        PBReaderReadString();
        v33 = objc_claimAutoreleasedReturnValue();
        v34 = 32;
LABEL_49:
        v35 = *(void **)(a1 + v34);
        *(_QWORD *)(a1 + v34) = v33;

        --v9;
        goto LABEL_61;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        goto LABEL_71;
      v38 = 32 * *(_BYTE *)(a1 + 52);
LABEL_60:
      v9 += v38 >> 7;
      goto LABEL_61;
    }
    if ((_DWORD)v27 != 2)
    {
      if ((_DWORD)v27 != 1)
      {
        v36 = PBReaderSkipValueWithTag();
        v15 = (int *)MEMORY[0x1E0D82BC8];
        if (!v36)
          goto LABEL_70;
        goto LABEL_62;
      }
      if (v28)
      {
        if ((*(_BYTE *)(a1 + 52) & 1) == 0)
        {
          PBReaderReadString();
          v33 = objc_claimAutoreleasedReturnValue();
          v34 = 16;
          goto LABEL_49;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_71;
        v9 -= *(_BYTE *)(a1 + 52) & 1;
LABEL_61:
        v15 = (int *)MEMORY[0x1E0D82BC8];
LABEL_62:
        if (!(v12 & 1 | (v9 != 0)))
          goto LABEL_63;
        continue;
      }
LABEL_52:
      v37 = PBReaderSkipValueWithTag();
      v15 = (int *)MEMORY[0x1E0D82BC8];
      if ((v37 & 1) == 0)
      {
LABEL_70:
        v39 = 0;
        goto LABEL_72;
      }
      goto LABEL_62;
    }
    break;
  }
  if (!v28)
    goto LABEL_52;
  if ((*(_BYTE *)(a1 + 52) & 2) == 0)
  {
    PBReaderReadString();
    v33 = objc_claimAutoreleasedReturnValue();
    v34 = 24;
    goto LABEL_49;
  }
  if ((PBReaderSkipValueWithTag() & 1) != 0)
  {
    v38 = *(_BYTE *)(a1 + 52) << 6;
    goto LABEL_60;
  }
LABEL_71:
  v39 = 0;
  v15 = (int *)MEMORY[0x1E0D82BC8];
LABEL_72:
  *(_BYTE *)(a1 + 52) |= 1u;
  *(_BYTE *)(a1 + 52) |= 2u;
  *(_BYTE *)(a1 + 52) |= 4u;
  if ((v39 & 1) != 0)
  {
LABEL_73:
    v3 = *(_BYTE *)(v3 + *v15) == 0;
    if ((v12 & 1) == 0)
      return v3;
    goto LABEL_74;
  }
  v3 = 0;
  if ((v12 & 1) != 0)
  {
LABEL_74:
    v42 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_189397CB4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189397DF8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189398260(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackTransitLineReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEORPFeedbackTransitLineReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEORPFeedbackTransitLineReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEORPFeedbackTransitLineReadAllFrom_initialTag;
  Specified = GEORPFeedbackTransitLineReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_1893983EC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackTransitLineReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORPFeedbackTransitLineReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18939844C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893985E4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackTransitLineIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v2 = (*(_BYTE *)(a1 + 52) & 0xF) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return v2;
}

void sub_1893988A0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackUIntFieldReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  BOOL v25;
  int *v26;
  char v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  _BOOL8 v33;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 2)
        {
          v27 = 0;
          v28 = 0;
          v20 = 0;
          *(_BYTE *)(a1 + 16) |= 1u;
          while (1)
          {
            v29 = *v4;
            v30 = *(_QWORD *)&v3[v29];
            v31 = v30 + 1;
            if (v30 == -1 || v31 > *(_QWORD *)&v3[*v5])
              break;
            v32 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v30);
            *(_QWORD *)&v3[v29] = v31;
            v20 |= (unint64_t)(v32 & 0x7F) << v27;
            if ((v32 & 0x80) == 0)
            {
              v26 = &OBJC_IVAR___GEORPFeedbackUIntField__edited;
              goto LABEL_40;
            }
            v27 += 7;
            v25 = v28++ > 8;
            if (v25)
            {
              LODWORD(v20) = 0;
              v26 = &OBJC_IVAR___GEORPFeedbackUIntField__edited;
              goto LABEL_42;
            }
          }
          v26 = &OBJC_IVAR___GEORPFeedbackUIntField__edited;
LABEL_39:
          v3[*v6] = 1;
        }
        else
        {
          if ((v10 >> 3) != 1)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0)
              goto LABEL_48;
            continue;
          }
          v18 = 0;
          v19 = 0;
          v20 = 0;
          *(_BYTE *)(a1 + 16) |= 2u;
          while (1)
          {
            v21 = *v4;
            v22 = *(_QWORD *)&v3[v21];
            v23 = v22 + 1;
            if (v22 == -1 || v23 > *(_QWORD *)&v3[*v5])
            {
              v26 = &OBJC_IVAR___GEORPFeedbackUIntField__original;
              goto LABEL_39;
            }
            v24 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v22);
            *(_QWORD *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0)
              break;
            v18 += 7;
            v25 = v19++ > 8;
            if (v25)
            {
              LODWORD(v20) = 0;
              v26 = &OBJC_IVAR___GEORPFeedbackUIntField__original;
              goto LABEL_42;
            }
          }
          v26 = &OBJC_IVAR___GEORPFeedbackUIntField__original;
        }
LABEL_40:
        if (v3[*v6])
          LODWORD(v20) = 0;
LABEL_42:
        *(_DWORD *)(a1 + *v26) = v20;
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v33 = v3[*v6] == 0;
  }
  else
  {
LABEL_48:
    v33 = 0;
  }
  objc_sync_exit(v3);

  return v33;
}

void sub_1893990F4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackUIntFieldReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORPFeedbackUIntFieldReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189399154(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackULongFieldReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  BOOL v25;
  int *v26;
  char v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  _BOOL8 v33;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 2)
        {
          v27 = 0;
          v28 = 0;
          v20 = 0;
          *(_BYTE *)(a1 + 24) |= 1u;
          while (1)
          {
            v29 = *v4;
            v30 = *(_QWORD *)&v3[v29];
            v31 = v30 + 1;
            if (v30 == -1 || v31 > *(_QWORD *)&v3[*v5])
              break;
            v32 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v30);
            *(_QWORD *)&v3[v29] = v31;
            v20 |= (unint64_t)(v32 & 0x7F) << v27;
            if ((v32 & 0x80) == 0)
            {
              v26 = &OBJC_IVAR___GEORPFeedbackULongField__edited;
              goto LABEL_40;
            }
            v27 += 7;
            v25 = v28++ > 8;
            if (v25)
            {
              v20 = 0;
              v26 = &OBJC_IVAR___GEORPFeedbackULongField__edited;
              goto LABEL_42;
            }
          }
          v26 = &OBJC_IVAR___GEORPFeedbackULongField__edited;
LABEL_39:
          v3[*v6] = 1;
        }
        else
        {
          if ((v10 >> 3) != 1)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0)
              goto LABEL_48;
            continue;
          }
          v18 = 0;
          v19 = 0;
          v20 = 0;
          *(_BYTE *)(a1 + 24) |= 2u;
          while (1)
          {
            v21 = *v4;
            v22 = *(_QWORD *)&v3[v21];
            v23 = v22 + 1;
            if (v22 == -1 || v23 > *(_QWORD *)&v3[*v5])
            {
              v26 = &OBJC_IVAR___GEORPFeedbackULongField__original;
              goto LABEL_39;
            }
            v24 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v22);
            *(_QWORD *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0)
              break;
            v18 += 7;
            v25 = v19++ > 8;
            if (v25)
            {
              v20 = 0;
              v26 = &OBJC_IVAR___GEORPFeedbackULongField__original;
              goto LABEL_42;
            }
          }
          v26 = &OBJC_IVAR___GEORPFeedbackULongField__original;
        }
LABEL_40:
        if (v3[*v6])
          v20 = 0;
LABEL_42:
        *(_QWORD *)(a1 + *v26) = v20;
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v33 = v3[*v6] == 0;
  }
  else
  {
LABEL_48:
    v33 = 0;
  }
  objc_sync_exit(v3);

  return v33;
}

void sub_189399AF4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackULongFieldReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORPFeedbackULongFieldReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189399B54(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18939A0A0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackULongListFieldReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  char v9;
  unsigned int v10;
  unsigned int v11;
  char v12;
  int *v13;
  int *v14;
  int *v15;
  int *v16;
  char v17;
  unsigned int v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  BOOL v24;
  int v25;
  int v26;
  unint64_t v28;
  BOOL v29;
  int *v30;
  int v31;
  int v32;
  BOOL v33;
  char v34;
  unsigned int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  char v41;
  unsigned int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  char v47;
  char v48;
  unsigned int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  char v55;
  unsigned int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  char v61;
  char v62;
  unsigned int v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  char v68;
  char v69;
  unsigned int v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  char v75;
  char v76;
  int v77;
  char v78;
  void *v79;
  char v81;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 96));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 92);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 88));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = ((*(unsigned __int8 *)(a1 + 100) >> 2) & 1)
      + (*(_BYTE *)(a1 + 100) & 1)
      + ((*(unsigned __int8 *)(a1 + 100) >> 1) & 1);
  while (1)
  {
    v11 = a3[v7];
    if (v11 >= 0xFFFFFFFE)
    {
      v9 = 1;
      goto LABEL_9;
    }
    if (v11 != -3)
      break;
    v8 = 1;
LABEL_9:
    ++v7;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  v12 = v9 | (v10 > 1);
  if (v9 & 1 | (v10 > 1) | v8 & 1)
    v13 = 0;
  else
    v13 = a3;
  v14 = (int *)MEMORY[0x1E0D82BF0];
  v15 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(v3 + *v6))
  {
    v81 = (v7 != 0) | v12;
    v16 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (*(_BYTE *)(v3 + *v15))
        break;
      v17 = 0;
      v18 = 0;
      v19 = 0;
      while (1)
      {
        v20 = *v14;
        v21 = *(_QWORD *)(v3 + v20);
        v22 = v21 + 1;
        if (v21 == -1 || v22 > *(_QWORD *)(v3 + *v6))
          break;
        v23 = *(_BYTE *)(*(_QWORD *)(v3 + *v16) + v21);
        *(_QWORD *)(v3 + v20) = v22;
        v19 |= (unint64_t)(v23 & 0x7F) << v17;
        if ((v23 & 0x80) == 0)
          goto LABEL_24;
        v17 += 7;
        v24 = v18++ >= 9;
        if (v24)
        {
          v19 = 0;
          v25 = *(unsigned __int8 *)(v3 + *v15);
          goto LABEL_26;
        }
      }
      *(_BYTE *)(v3 + *v15) = 1;
LABEL_24:
      v25 = *(unsigned __int8 *)(v3 + *v15);
      if (*(_BYTE *)(v3 + *v15))
        v19 = 0;
LABEL_26:
      v26 = v19 & 7;
      if (v25 || v26 == 4)
        break;
      v28 = v19 >> 3;
      v29 = v12;
      if (!((v13 == 0) | v12 & 1))
      {
        v30 = v13;
        do
        {
          v32 = *v30++;
          v31 = v32;
          v29 = v32 != 0;
          if (v32)
            v33 = v31 == (_DWORD)v28;
          else
            v33 = 1;
        }
        while (!v33);
      }
      switch((_DWORD)v28)
      {
        case 3:
          if (v29 && (*(_BYTE *)(a1 + 100) & 2) == 0)
          {
            if (v26 != 2)
            {
              v62 = 0;
              v63 = 0;
              v64 = 0;
              while (1)
              {
                v65 = *v14;
                v66 = *(_QWORD *)(v3 + v65);
                v67 = v66 + 1;
                if (v66 == -1 || v67 > *(_QWORD *)(v3 + *v6))
                  goto LABEL_113;
                v68 = *(_BYTE *)(*(_QWORD *)(v3 + *v16) + v66);
                *(_QWORD *)(v3 + v65) = v67;
                v64 |= (unint64_t)(v68 & 0x7F) << v62;
                if (v68 < 0)
                {
                  v62 += 7;
                  v24 = v63++ >= 9;
                  if (!v24)
                    continue;
                }
                goto LABEL_114;
              }
            }
            if (!PBReaderPlaceMark())
              goto LABEL_128;
            while (*(_QWORD *)(v3 + *v14) < *(_QWORD *)(v3 + *v6) && !*(_BYTE *)(v3 + *v15))
            {
              v41 = 0;
              v42 = 0;
              v43 = 0;
              while (1)
              {
                v44 = *v14;
                v45 = *(_QWORD *)(v3 + v44);
                v46 = v45 + 1;
                if (v45 == -1 || v46 > *(_QWORD *)(v3 + *v6))
                  break;
                v47 = *(_BYTE *)(*(_QWORD *)(v3 + *v16) + v45);
                *(_QWORD *)(v3 + v44) = v46;
                v43 |= (unint64_t)(v47 & 0x7F) << v41;
                if (v47 < 0)
                {
                  v41 += 7;
                  v24 = v42++ >= 9;
                  if (!v24)
                    continue;
                }
                goto LABEL_69;
              }
              *(_BYTE *)(v3 + *v15) = 1;
LABEL_69:
              PBRepeatedUInt64Add();
            }
LABEL_91:
            PBReaderRecallMark();
            continue;
          }
          break;
        case 2:
          if (v29 && (*(_BYTE *)(a1 + 100) & 4) == 0)
          {
            if (v26 != 2)
            {
              v69 = 0;
              v70 = 0;
              v71 = 0;
              while (1)
              {
                v72 = *v14;
                v73 = *(_QWORD *)(v3 + v72);
                v74 = v73 + 1;
                if (v73 == -1 || v74 > *(_QWORD *)(v3 + *v6))
                  break;
                v75 = *(_BYTE *)(*(_QWORD *)(v3 + *v16) + v73);
                *(_QWORD *)(v3 + v72) = v74;
                v71 |= (unint64_t)(v75 & 0x7F) << v69;
                if (v75 < 0)
                {
                  v69 += 7;
                  v24 = v70++ >= 9;
                  if (!v24)
                    continue;
                }
                goto LABEL_114;
              }
LABEL_113:
              *(_BYTE *)(v3 + *v15) = 1;
LABEL_114:
              PBRepeatedUInt64Add();
              continue;
            }
            if (!PBReaderPlaceMark())
              goto LABEL_128;
            while (*(_QWORD *)(v3 + *v14) < *(_QWORD *)(v3 + *v6) && !*(_BYTE *)(v3 + *v15))
            {
              v48 = 0;
              v49 = 0;
              v50 = 0;
              while (1)
              {
                v51 = *v14;
                v52 = *(_QWORD *)(v3 + v51);
                v53 = v52 + 1;
                if (v52 == -1 || v53 > *(_QWORD *)(v3 + *v6))
                  break;
                v54 = *(_BYTE *)(*(_QWORD *)(v3 + *v16) + v52);
                *(_QWORD *)(v3 + v51) = v53;
                v50 |= (unint64_t)(v54 & 0x7F) << v48;
                if (v54 < 0)
                {
                  v48 += 7;
                  v24 = v49++ >= 9;
                  if (!v24)
                    continue;
                }
                goto LABEL_84;
              }
              *(_BYTE *)(v3 + *v15) = 1;
LABEL_84:
              PBRepeatedUInt64Add();
            }
            goto LABEL_91;
          }
          break;
        case 1:
          if (v29 && (*(_BYTE *)(a1 + 100) & 1) == 0)
          {
            if (v26 != 2)
            {
              v55 = 0;
              v56 = 0;
              v57 = 0;
              while (1)
              {
                v58 = *v14;
                v59 = *(_QWORD *)(v3 + v58);
                v60 = v59 + 1;
                if (v59 == -1 || v60 > *(_QWORD *)(v3 + *v6))
                  goto LABEL_113;
                v61 = *(_BYTE *)(*(_QWORD *)(v3 + *v16) + v59);
                *(_QWORD *)(v3 + v58) = v60;
                v57 |= (unint64_t)(v61 & 0x7F) << v55;
                if (v61 < 0)
                {
                  v55 += 7;
                  v24 = v56++ >= 9;
                  if (!v24)
                    continue;
                }
                goto LABEL_114;
              }
            }
            if (!PBReaderPlaceMark())
              goto LABEL_128;
            while (*(_QWORD *)(v3 + *v14) < *(_QWORD *)(v3 + *v6) && !*(_BYTE *)(v3 + *v15))
            {
              v34 = 0;
              v35 = 0;
              v36 = 0;
              while (1)
              {
                v37 = *v14;
                v38 = *(_QWORD *)(v3 + v37);
                v39 = v38 + 1;
                if (v38 == -1 || v39 > *(_QWORD *)(v3 + *v6))
                  break;
                v40 = *(_BYTE *)(*(_QWORD *)(v3 + *v16) + v38);
                *(_QWORD *)(v3 + v37) = v39;
                v36 |= (unint64_t)(v40 & 0x7F) << v34;
                if (v40 < 0)
                {
                  v34 += 7;
                  v24 = v35++ >= 9;
                  if (!v24)
                    continue;
                }
                goto LABEL_54;
              }
              *(_BYTE *)(v3 + *v15) = 1;
LABEL_54:
              PBRepeatedUInt64Add();
            }
            goto LABEL_91;
          }
          break;
        default:
          if (!PBReaderSkipValueWithTag())
            goto LABEL_128;
          continue;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_128:
        v76 = 0;
        goto LABEL_117;
      }
    }
    while ((v81 & 1) != 0 && *(_QWORD *)(v3 + *v14) < *(_QWORD *)(v3 + *v6));
  }
  if ((v12 & 1) == 0)
  {
    if (v13)
    {
      while (1)
      {
        v77 = *v13++;
        v78 = 1;
        switch(v77)
        {
          case 0:
            goto LABEL_125;
          case 1:
            goto LABEL_124;
          case 2:
            v78 = 4;
            goto LABEL_124;
          case 3:
            v78 = 2;
LABEL_124:
            *(_BYTE *)(a1 + 100) |= v78;
            break;
          default:
            continue;
        }
      }
    }
    goto LABEL_125;
  }
  v76 = 1;
LABEL_117:
  *(_BYTE *)(a1 + 100) |= 1u;
  *(_BYTE *)(a1 + 100) |= 4u;
  *(_BYTE *)(a1 + 100) |= 2u;
  if ((v76 & 1) != 0)
  {
LABEL_125:
    v3 = *(_BYTE *)(v3 + *v15) == 0;
    if ((v12 & 1) != 0)
      goto LABEL_126;
    return v3;
  }
  v3 = 0;
  if ((v12 & 1) == 0)
    return v3;
LABEL_126:
  v79 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = 0;

  return v3;
}

void sub_18939AB7C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18939AEBC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18939B6DC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackULongListFieldReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 92))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEORPFeedbackULongListFieldReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 96));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 88) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 92) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEORPFeedbackULongListFieldReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEORPFeedbackULongListFieldReadAllFrom_initialTag;
  Specified = GEORPFeedbackULongListFieldReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 96));
  return Specified;
}

void sub_18939B868(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackULongListFieldReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORPFeedbackULongListFieldReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18939B8C8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18939BAD0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackULongListFieldIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 96));
  v2 = (*(_BYTE *)(a1 + 100) & 0xF) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 96));
  return v2;
}

void sub_18939BE14(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18939C390(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPAddressReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  int *v15;
  int *v16;
  int *v17;
  int *v18;
  char v19;
  unsigned int v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  int v27;
  unint64_t v29;
  BOOL v30;
  int *v31;
  int v32;
  int v33;
  BOOL v34;
  GEOAddress *v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  void *v39;
  char v40;
  char v41;
  int v42;
  char v43;
  void *v44;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1)
      + (*(_BYTE *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v7])
    {
      case -3:
        v8 = 1;
        goto LABEL_6;
      case -2:
        v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v10 | (v11 > 1);
        if (v10 & 1 | (v11 > 1) | v8 & 1)
          v15 = 0;
        else
          v15 = a3;
        v16 = (int *)MEMORY[0x1E0D82BF0];
        v17 = (int *)MEMORY[0x1E0D82BC8];
        v18 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_6:
        v12 = v9;
        v13 = v10;
LABEL_8:
        ++v7;
        v9 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v16) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v17))
      goto LABEL_65;
    v19 = 0;
    v20 = 0;
    v21 = 0;
    while (1)
    {
      v22 = *v16;
      v23 = *(_QWORD *)(v3 + v22);
      v24 = v23 + 1;
      if (v23 == -1 || v24 > *(_QWORD *)(v3 + *v6))
        break;
      v25 = *(_BYTE *)(*(_QWORD *)(v3 + *v18) + v23);
      *(_QWORD *)(v3 + v22) = v24;
      v21 |= (unint64_t)(v25 & 0x7F) << v19;
      if ((v25 & 0x80) == 0)
        goto LABEL_23;
      v19 += 7;
      if (v20++ >= 9)
      {
        v21 = 0;
        v27 = *(unsigned __int8 *)(v3 + *v17);
        goto LABEL_25;
      }
    }
    *(_BYTE *)(v3 + *v17) = 1;
LABEL_23:
    v27 = *(unsigned __int8 *)(v3 + *v17);
    if (*(_BYTE *)(v3 + *v17))
      v21 = 0;
LABEL_25:
    if (v27 || (v21 & 7) == 4)
    {
LABEL_65:
      if ((v14 & 1) != 0)
      {
        v41 = 1;
        goto LABEL_73;
      }
      if (v15)
      {
        while (1)
        {
          v42 = *v15++;
          v43 = 4;
          switch(v42)
          {
            case 0:
              goto LABEL_74;
            case 1:
              goto LABEL_71;
            case 2:
              v43 = 2;
              goto LABEL_71;
            case 3:
              v43 = 1;
LABEL_71:
              *(_BYTE *)(a1 + 52) |= v43;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_74;
    }
    v29 = v21 >> 3;
    v30 = v14;
    if (!((v15 == 0) | v14 & 1))
    {
      v31 = v15;
      do
      {
        v33 = *v31++;
        v32 = v33;
        v30 = v33 != 0;
        if (v33)
          v34 = v32 == (_DWORD)v29;
        else
          v34 = 1;
      }
      while (!v34);
    }
    if ((_DWORD)v29 == 3)
      break;
    if ((_DWORD)v29 != 2)
    {
      if ((_DWORD)v29 != 1)
      {
        if (!PBReaderSkipValueWithTag())
          goto LABEL_72;
        goto LABEL_64;
      }
      if (!v30)
        goto LABEL_55;
      if ((*(_BYTE *)(a1 + 52) & 4) != 0)
      {
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_72;
        v40 = 32 * *(_BYTE *)(a1 + 52);
LABEL_63:
        v7 += v40 >> 7;
        goto LABEL_64;
      }
      if ((PBReaderPlaceMark() & 1) == 0)
        goto LABEL_72;
      v35 = objc_alloc_init(GEOAddress);
      if (!GEOAddressReadAllFrom((uint64_t)v35, (void *)v3, v9 & 1))
        goto LABEL_79;
      PBReaderRecallMark();
      v36 = 32;
      goto LABEL_49;
    }
    if (!v30)
    {
LABEL_55:
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        goto LABEL_72;
      goto LABEL_64;
    }
    if ((*(_BYTE *)(a1 + 52) & 2) != 0)
    {
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_72:
        v41 = 0;
        goto LABEL_73;
      }
      v40 = *(_BYTE *)(a1 + 52) << 6;
      goto LABEL_63;
    }
    PBReaderReadString();
    v38 = objc_claimAutoreleasedReturnValue();
    v39 = *(void **)(a1 + 24);
    *(_QWORD *)(a1 + 24) = v38;

    --v7;
LABEL_64:
    if (!(v14 & 1 | (v7 != 0)))
      goto LABEL_65;
  }
  if (!v30)
    goto LABEL_55;
  if ((*(_BYTE *)(a1 + 52) & 1) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0)
      goto LABEL_72;
    v7 -= *(_BYTE *)(a1 + 52) & 1;
    goto LABEL_64;
  }
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_72;
  v35 = objc_alloc_init(GEOPDAddressObject);
  if (GEOPDAddressObjectReadAllFrom((uint64_t)v35, (void *)v3))
  {
    PBReaderRecallMark();
    v36 = 16;
LABEL_49:
    v37 = *(void **)(a1 + v36);
    *(_QWORD *)(a1 + v36) = v35;

    --v7;
    v17 = (int *)MEMORY[0x1E0D82BC8];
    goto LABEL_64;
  }
LABEL_79:

  v41 = 0;
  v17 = (int *)MEMORY[0x1E0D82BC8];
LABEL_73:
  *(_BYTE *)(a1 + 52) |= 4u;
  *(_BYTE *)(a1 + 52) |= 2u;
  *(_BYTE *)(a1 + 52) |= 1u;
  if ((v41 & 1) != 0)
  {
LABEL_74:
    v3 = *(_BYTE *)(v3 + *v17) == 0;
    if ((v14 & 1) == 0)
      return v3;
    goto LABEL_75;
  }
  v3 = 0;
  if ((v14 & 1) != 0)
  {
LABEL_75:
    v44 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_18939C9DC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18939CB20(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18939D024(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPAddressReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEORPAddressReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEORPAddressReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEORPAddressReadAllFrom_initialTag;
  Specified = GEORPAddressReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    objc_msgSend(*(id *)(a1 + 32), "readAll:", 1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_18939D1C8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPAddressReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORPAddressReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18939D228(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPAddressIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unint64_t v17;
  _BOOL8 v18;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_32;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        goto LABEL_32;
      v17 = v8 >> 3;
      if ((v8 >> 3) == 3)
        break;
      if ((_DWORD)v17 == 2)
      {
        if (v15 != 2)
          goto LABEL_33;
      }
      else if ((_DWORD)v17 == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOAddressIsValid(a1))
          goto LABEL_33;
LABEL_28:
        PBReaderRecallMark();
        goto LABEL_31;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        goto LABEL_33;
LABEL_31:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_32;
    }
    if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDAdamAppIdentifierIsValid(a1))
    {
LABEL_33:
      PBReaderRecallMark();
      return 0;
    }
    goto LABEL_28;
  }
LABEL_32:
  v18 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v18;
}

void sub_18939D5C4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORPAddressIsDirty(uint64_t a1)
{
  char v2;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v2 = *(_BYTE *)(a1 + 52);
  if ((v2 & 8) != 0)
    return 1;
  if ((*(_BYTE *)(a1 + 52) & 4) != 0)
  {
    if (GEOAddressIsDirty(*(_QWORD *)(a1 + 32)))
      return 1;
    v2 = *(_BYTE *)(a1 + 52);
  }
  if ((v2 & 2) == 0)
    return v2 & 1;
  return 1;
}

os_unfair_lock_s *GEORPAddressIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEORPAddressIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 12);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_18939D8E0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18939DCA8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPAuxiliaryControlReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  _BOOL4 v15;
  int *v16;
  BOOL v17;
  int *v18;
  int *v19;
  int *v20;
  int *v21;
  char v22;
  unsigned int v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  int v30;
  unint64_t v32;
  _BOOL4 v33;
  int *v34;
  int v35;
  int v36;
  BOOL v37;
  GEORPWatchAuxiliaryControl *v38;
  uint64_t v39;
  void *v40;
  int v41;
  char v42;
  char v43;
  char v44;
  int v45;
  int v46;
  char v47;
  void *v48;
  BOOL v50;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 36);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 32));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int8 *)(a1 + 44) >> 1) & 1) + (*(_BYTE *)(a1 + 44) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v7])
    {
      case -3:
        v8 = 1;
        goto LABEL_6;
      case -2:
        v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v10 & 1 | v11;
        v15 = v14 != 0;
        if ((v14 != 0) | v8 & 1)
          v16 = 0;
        else
          v16 = a3;
        v17 = v16 == 0;
        if (v14)
          v17 = 1;
        v50 = v17;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v20 = (int *)MEMORY[0x1E0D82BB8];
        v21 = &OBJC_IVAR___GEOPDRelatedEntitySection__reader;
        break;
      default:
        ++v11;
LABEL_6:
        v12 = v9;
        v13 = v10;
LABEL_8:
        ++v7;
        v9 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v19))
      goto LABEL_64;
    v22 = 0;
    v23 = 0;
    v24 = 0;
    while (1)
    {
      v25 = *v18;
      v26 = *(_QWORD *)(v3 + v25);
      v27 = v26 + 1;
      if (v26 == -1 || v27 > *(_QWORD *)(v3 + *v6))
        break;
      v28 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v26);
      *(_QWORD *)(v3 + v25) = v27;
      v24 |= (unint64_t)(v28 & 0x7F) << v22;
      if ((v28 & 0x80) == 0)
        goto LABEL_25;
      v22 += 7;
      if (v23++ >= 9)
      {
        v24 = 0;
        v30 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_25:
    v30 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v24 = 0;
LABEL_27:
    if (v30 || (v24 & 7) == 4)
    {
LABEL_64:
      if (v15)
      {
        v44 = 1;
        goto LABEL_78;
      }
      if (!v16)
        goto LABEL_79;
      while (1)
      {
        v46 = *v16++;
        v45 = v46;
        if (v46 == 1)
          break;
        if (v45 == 2)
        {
          v47 = 1;
LABEL_73:
          *(_BYTE *)(a1 + v21[347]) |= v47;
        }
        else if (!v45)
        {
          goto LABEL_79;
        }
      }
      v47 = 2;
      goto LABEL_73;
    }
    v32 = v24 >> 3;
    v33 = v15;
    if (!v50)
    {
      v34 = v16;
      do
      {
        v36 = *v34++;
        v35 = v36;
        v33 = v36 != 0;
        if (v36)
          v37 = v35 == (_DWORD)v32;
        else
          v37 = 1;
      }
      while (!v37);
    }
    if ((_DWORD)v32 == 2)
      break;
    if ((_DWORD)v32 != 1)
    {
      v41 = PBReaderSkipValueWithTag();
      v19 = (int *)MEMORY[0x1E0D82BC8];
      if (!v41)
        goto LABEL_74;
      goto LABEL_60;
    }
    if (v33)
    {
      if ((*(_BYTE *)(a1 + v21[347]) & 2) != 0)
      {
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_75;
        v7 += *(unsigned __int8 *)(a1 + v21[347]) << 30 >> 31;
      }
      else
      {
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_75;
        v38 = objc_alloc_init(GEORPWatchAuxiliaryControl);
        if (!GEORPWatchAuxiliaryControlReadAllFrom((uint64_t)v38, (void *)v3, v9 & 1))
          goto LABEL_76;
        PBReaderRecallMark();
        v39 = 24;
LABEL_50:
        v40 = *(void **)(a1 + v39);
        *(_QWORD *)(a1 + v39) = v38;

        --v7;
        v21 = &OBJC_IVAR___GEOPDRelatedEntitySection__reader;
      }
LABEL_59:
      v19 = (int *)MEMORY[0x1E0D82BC8];
      goto LABEL_60;
    }
LABEL_53:
    v42 = PBReaderSkipValueWithTag();
    v19 = (int *)MEMORY[0x1E0D82BC8];
    if ((v42 & 1) == 0)
    {
LABEL_74:
      v44 = 0;
      goto LABEL_78;
    }
LABEL_60:
    if (v7)
      v43 = 1;
    else
      v43 = v15;
    if ((v43 & 1) == 0)
      goto LABEL_64;
  }
  if (!v33)
    goto LABEL_53;
  if ((*(_BYTE *)(a1 + v21[347]) & 1) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0)
    {
LABEL_75:
      v44 = 0;
      goto LABEL_77;
    }
    v7 -= *(_BYTE *)(a1 + v21[347]) & 1;
    goto LABEL_59;
  }
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_75;
  v38 = objc_alloc_init(GEORPCarPlayAuxiliaryControl);
  if (GEORPCarPlayAuxiliaryControlReadAllFrom((uint64_t)v38, (void *)v3, v9 & 1))
  {
    PBReaderRecallMark();
    v39 = 16;
    goto LABEL_50;
  }
LABEL_76:

  v44 = 0;
  v21 = &OBJC_IVAR___GEOPDRelatedEntitySection__reader;
LABEL_77:
  v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_78:
  *(_BYTE *)(a1 + v21[347]) |= 2u;
  *(_BYTE *)(a1 + v21[347]) |= 1u;
  if ((v44 & 1) != 0)
  {
LABEL_79:
    v3 = *(_BYTE *)(v3 + *v19) == 0;
    if (v15)
      goto LABEL_80;
  }
  else
  {
    v3 = 0;
    if (v15)
    {
LABEL_80:
      v48 = *(void **)(a1 + 8);
      *(_QWORD *)(a1 + 8) = 0;

    }
  }
  return v3;
}

void sub_18939E270(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18939E6AC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPAuxiliaryControlReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 36))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEORPAuxiliaryControlReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 40));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 32) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 36) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEORPAuxiliaryControlReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEORPAuxiliaryControlReadAllFrom_initialTag;
  Specified = GEORPAuxiliaryControlReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    objc_msgSend(*(id *)(a1 + 24), "readAll:", 1);
    objc_msgSend(*(id *)(a1 + 16), "readAll:", 1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return Specified;
}

void sub_18939E860(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPAuxiliaryControlReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORPAuxiliaryControlReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18939E8C0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPAuxiliaryControlIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  _BOOL8 v17;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_30;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        goto LABEL_30;
      if ((v8 >> 3) == 2)
        break;
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEORPWatchAuxiliaryControlIsValid(a1))
          goto LABEL_31;
LABEL_27:
        PBReaderRecallMark();
        goto LABEL_29;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        goto LABEL_31;
LABEL_29:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_30;
    }
    if (v15 != 2 || !PBReaderPlaceMark() || !GEORPCarPlayAuxiliaryControlIsValid(a1))
    {
LABEL_31:
      PBReaderRecallMark();
      return 0;
    }
    goto LABEL_27;
  }
LABEL_30:
  v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

BOOL GEORPWatchAuxiliaryControlIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unint64_t v17;
  _BOOL8 v18;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_30;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        goto LABEL_30;
      v17 = v8 >> 3;
      if ((v8 >> 3) == 3)
        break;
      if ((_DWORD)v17 == 2)
      {
        if (v15 != 2)
          goto LABEL_32;
LABEL_26:
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_32;
        goto LABEL_29;
      }
      if ((_DWORD)v17 == 1)
      {
        if (v15 != 2)
          goto LABEL_32;
        goto LABEL_26;
      }
      if (!PBReaderSkipValueWithTag())
      {
LABEL_32:
        v18 = 0;
        goto LABEL_31;
      }
LABEL_29:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_30;
    }
    if (v15 != 2)
      goto LABEL_32;
    goto LABEL_26;
  }
LABEL_30:
  v18 = a1[*v4] == 0;
LABEL_31:
  PBReaderRecallMark();
  return v18;
}

BOOL GEORPCarPlayAuxiliaryControlIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  _BOOL8 v17;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOCarInfoIsValid(a1))
        {
LABEL_27:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_27;
      }
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

void sub_18939EFBC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORPAuxiliaryControlIsDirty(uint64_t a1)
{
  char v2;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  v2 = *(_BYTE *)(a1 + 44);
  if ((v2 & 4) != 0)
    return 1;
  if ((*(_BYTE *)(a1 + 44) & 2) != 0)
  {
    if (GEORPWatchAuxiliaryControlIsDirty(*(_QWORD *)(a1 + 24)))
      return 1;
    v2 = *(_BYTE *)(a1 + 44);
  }
  return v2 & 1;
}

os_unfair_lock_s *GEORPAuxiliaryControlIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEORPAuxiliaryControlIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 10);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_18939F2A0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPButtonReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  uint64_t v18;
  void *v19;
  char v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  _BOOL8 v27;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 2)
        {
          v20 = 0;
          v21 = 0;
          v22 = 0;
          *(_BYTE *)(a1 + 20) |= 1u;
          while (1)
          {
            v23 = *v4;
            v24 = *(_QWORD *)&v3[v23];
            v25 = v24 + 1;
            if (v24 == -1 || v25 > *(_QWORD *)&v3[*v5])
              break;
            v26 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v24);
            *(_QWORD *)&v3[v23] = v25;
            v22 |= (unint64_t)(v26 & 0x7F) << v20;
            if ((v26 & 0x80) == 0)
              goto LABEL_32;
            v20 += 7;
            v15 = v21++ >= 9;
            if (v15)
            {
              LODWORD(v22) = 0;
              goto LABEL_34;
            }
          }
          v3[*v6] = 1;
LABEL_32:
          if (v3[*v6])
            LODWORD(v22) = 0;
LABEL_34:
          *(_DWORD *)(a1 + 16) = v22;
        }
        else if ((v10 >> 3) == 1)
        {
          PBReaderReadString();
          v18 = objc_claimAutoreleasedReturnValue();
          v19 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = v18;

        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_37;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v27 = v3[*v6] == 0;
  }
  else
  {
LABEL_37:
    v27 = 0;
  }
  objc_sync_exit(v3);

  return v27;
}

void sub_18939FBA0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPButtonReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORPButtonReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18939FC00(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPButtonIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  _BOOL8 v23;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      if ((v8 >> 3) == 2)
      {
        if ((v8 & 7) != 0)
          goto LABEL_37;
        v17 = 0;
        while (1)
        {
          v18 = *v2;
          v19 = *(_QWORD *)&a1[v18];
          v20 = v19 + 1;
          if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
            break;
          v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
          *(_QWORD *)&a1[v18] = v20;
          if (v21 < 0 && v17++ <= 8)
            continue;
          goto LABEL_34;
        }
        a1[*v4] = 1;
      }
      else if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_37:
          v23 = 0;
          goto LABEL_36;
        }
      }
      else if (!PBReaderSkipValueWithTag())
      {
        goto LABEL_37;
      }
LABEL_34:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v23 = a1[*v4] == 0;
LABEL_36:
  PBReaderRecallMark();
  return v23;
}

BOOL GEORPCarPlayAuxiliaryControlReadAllFrom(uint64_t a1, void *a2, int a3)
{
  char *v5;
  int *v6;
  int *v7;
  int *v8;
  int *v9;
  char v10;
  unsigned int v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  int v18;
  GEOCarInfo *v20;
  void *v21;
  _BOOL8 v22;

  v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    v6 = (int *)MEMORY[0x1E0D82BF0];
    v7 = (int *)MEMORY[0x1E0D82BD8];
    v8 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v5[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v5[*MEMORY[0x1E0D82BD8]])
    {
      v9 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v5[*v8])
          break;
        v10 = 0;
        v11 = 0;
        v12 = 0;
        while (1)
        {
          v13 = *v6;
          v14 = *(_QWORD *)&v5[v13];
          v15 = v14 + 1;
          if (v14 == -1 || v15 > *(_QWORD *)&v5[*v7])
            break;
          v16 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v14);
          *(_QWORD *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0)
            goto LABEL_13;
          v10 += 7;
          if (v11++ >= 9)
          {
            v12 = 0;
            v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        v18 = v5[*v8];
        if (v5[*v8])
          v12 = 0;
LABEL_15:
        if (v18 || (v12 & 7) == 4)
          break;
        if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_27;
          v20 = objc_alloc_init(GEOCarInfo);
          if (!GEOCarInfoReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_27;
          }
          PBReaderRecallMark();
          v21 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = v20;

        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_27;
        }
      }
      while (*(_QWORD *)&v5[*v6] < *(_QWORD *)&v5[*v7]);
    }
    v22 = v5[*v8] == 0;
  }
  else
  {
LABEL_27:
    v22 = 0;
  }
  objc_sync_exit(v5);

  return v22;
}

void sub_1893A05DC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPCarPlayAuxiliaryControlReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORPCarPlayAuxiliaryControlReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1893A063C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPClientCapabilitiesReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  char v25;
  unsigned int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  char v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  char v38;
  char v39;
  unsigned int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  char v46;
  unsigned int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  char v52;
  BOOL v53;
  uint64_t v54;
  _BOOL8 v55;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        switch((v10 >> 3))
        {
          case 1u:
            v18 = 0;
            v19 = 0;
            v20 = 0;
            *(_BYTE *)(a1 + 16) |= 2u;
            while (1)
            {
              v21 = *v4;
              v22 = *(_QWORD *)&v3[v21];
              v23 = v22 + 1;
              if (v22 == -1 || v23 > *(_QWORD *)&v3[*v5])
                break;
              v24 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v22);
              *(_QWORD *)&v3[v21] = v23;
              v20 |= (unint64_t)(v24 & 0x7F) << v18;
              if ((v24 & 0x80) == 0)
                goto LABEL_58;
              v18 += 7;
              v15 = v19++ >= 9;
              if (v15)
              {
                v20 = 0;
                goto LABEL_60;
              }
            }
            v3[*v6] = 1;
LABEL_58:
            if (v3[*v6])
              v20 = 0;
LABEL_60:
            v53 = v20 != 0;
            v54 = 12;
            goto LABEL_73;
          case 2u:
            v25 = 0;
            v26 = 0;
            v27 = 0;
            *(_BYTE *)(a1 + 16) |= 8u;
            while (2)
            {
              v28 = *v4;
              v29 = *(_QWORD *)&v3[v28];
              v30 = v29 + 1;
              if (v29 == -1 || v30 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v31 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v29);
                *(_QWORD *)&v3[v28] = v30;
                v27 |= (unint64_t)(v31 & 0x7F) << v25;
                if (v31 < 0)
                {
                  v25 += 7;
                  v15 = v26++ >= 9;
                  if (v15)
                  {
                    v27 = 0;
                    goto LABEL_64;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              v27 = 0;
LABEL_64:
            v53 = v27 != 0;
            v54 = 14;
            goto LABEL_73;
          case 3u:
            v32 = 0;
            v33 = 0;
            v34 = 0;
            *(_BYTE *)(a1 + 16) |= 4u;
            while (2)
            {
              v35 = *v4;
              v36 = *(_QWORD *)&v3[v35];
              v37 = v36 + 1;
              if (v36 == -1 || v37 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v38 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v36);
                *(_QWORD *)&v3[v35] = v37;
                v34 |= (unint64_t)(v38 & 0x7F) << v32;
                if (v38 < 0)
                {
                  v32 += 7;
                  v15 = v33++ >= 9;
                  if (v15)
                  {
                    v34 = 0;
                    goto LABEL_68;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              v34 = 0;
LABEL_68:
            v53 = v34 != 0;
            v54 = 13;
            goto LABEL_73;
          case 4u:
            v39 = 0;
            v40 = 0;
            v41 = 0;
            *(_BYTE *)(a1 + 16) |= 0x10u;
            while (2)
            {
              v42 = *v4;
              v43 = *(_QWORD *)&v3[v42];
              v44 = v43 + 1;
              if (v43 == -1 || v44 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v45 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v43);
                *(_QWORD *)&v3[v42] = v44;
                v41 |= (unint64_t)(v45 & 0x7F) << v39;
                if (v45 < 0)
                {
                  v39 += 7;
                  v15 = v40++ >= 9;
                  if (v15)
                  {
                    v41 = 0;
                    goto LABEL_72;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              v41 = 0;
LABEL_72:
            v53 = v41 != 0;
            v54 = 15;
LABEL_73:
            *(_BYTE *)(a1 + v54) = v53;
            continue;
          case 5u:
            v46 = 0;
            v47 = 0;
            v48 = 0;
            *(_BYTE *)(a1 + 16) |= 1u;
            break;
          default:
            if (!PBReaderSkipValueWithTag())
              goto LABEL_81;
            continue;
        }
        while (1)
        {
          v49 = *v4;
          v50 = *(_QWORD *)&v3[v49];
          v51 = v50 + 1;
          if (v50 == -1 || v51 > *(_QWORD *)&v3[*v5])
            break;
          v52 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v50);
          *(_QWORD *)&v3[v49] = v51;
          v48 |= (unint64_t)(v52 & 0x7F) << v46;
          if ((v52 & 0x80) == 0)
            goto LABEL_77;
          v46 += 7;
          v15 = v47++ >= 9;
          if (v15)
          {
            LODWORD(v48) = 0;
            goto LABEL_79;
          }
        }
        v3[*v6] = 1;
LABEL_77:
        if (v3[*v6])
          LODWORD(v48) = 0;
LABEL_79:
        *(_DWORD *)(a1 + 8) = v48;
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v55 = v3[*v6] == 0;
  }
  else
  {
LABEL_81:
    v55 = 0;
  }
  objc_sync_exit(v3);

  return v55;
}

void sub_1893A1604(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPClientCapabilitiesReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORPClientCapabilitiesReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1893A1664(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPClientCapabilitiesIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int v20;
  BOOL v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  int v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  int v31;
  unsigned int v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  int v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  int v41;
  _BOOL8 v42;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      if (v14 || (v8 & 7) == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0)
            goto LABEL_65;
          v16 = 0;
          while (1)
          {
            v17 = *v2;
            v18 = *(_QWORD *)&a1[v17];
            v19 = v18 + 1;
            if (v18 == -1 || v19 > *(_QWORD *)&a1[*v3])
              goto LABEL_61;
            v20 = *(char *)(*(_QWORD *)&a1[*v5] + v18);
            *(_QWORD *)&a1[v17] = v19;
            if (v20 < 0)
            {
              v21 = v16++ > 8;
              if (!v21)
                continue;
            }
            goto LABEL_62;
          }
        case 2u:
          if ((v8 & 7) != 0)
            goto LABEL_65;
          v22 = 0;
          while (1)
          {
            v23 = *v2;
            v24 = *(_QWORD *)&a1[v23];
            v25 = v24 + 1;
            if (v24 == -1 || v25 > *(_QWORD *)&a1[*v3])
              goto LABEL_61;
            v26 = *(char *)(*(_QWORD *)&a1[*v5] + v24);
            *(_QWORD *)&a1[v23] = v25;
            if (v26 < 0)
            {
              v21 = v22++ > 8;
              if (!v21)
                continue;
            }
            goto LABEL_62;
          }
        case 3u:
          if ((v8 & 7) != 0)
            goto LABEL_65;
          v27 = 0;
          while (1)
          {
            v28 = *v2;
            v29 = *(_QWORD *)&a1[v28];
            v30 = v29 + 1;
            if (v29 == -1 || v30 > *(_QWORD *)&a1[*v3])
              goto LABEL_61;
            v31 = *(char *)(*(_QWORD *)&a1[*v5] + v29);
            *(_QWORD *)&a1[v28] = v30;
            if (v31 < 0)
            {
              v21 = v27++ > 8;
              if (!v21)
                continue;
            }
            goto LABEL_62;
          }
        case 4u:
          if ((v8 & 7) != 0)
            goto LABEL_65;
          v32 = 0;
          while (1)
          {
            v33 = *v2;
            v34 = *(_QWORD *)&a1[v33];
            v35 = v34 + 1;
            if (v34 == -1 || v35 > *(_QWORD *)&a1[*v3])
              goto LABEL_61;
            v36 = *(char *)(*(_QWORD *)&a1[*v5] + v34);
            *(_QWORD *)&a1[v33] = v35;
            if (v36 < 0)
            {
              v21 = v32++ > 8;
              if (!v21)
                continue;
            }
            goto LABEL_62;
          }
        case 5u:
          if ((v8 & 7) != 0)
            goto LABEL_65;
          v37 = 0;
          break;
        default:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_65:
          v42 = 0;
          goto LABEL_64;
      }
      while (1)
      {
        v38 = *v2;
        v39 = *(_QWORD *)&a1[v38];
        v40 = v39 + 1;
        if (v39 == -1 || v40 > *(_QWORD *)&a1[*v3])
          break;
        v41 = *(char *)(*(_QWORD *)&a1[*v5] + v39);
        *(_QWORD *)&a1[v38] = v40;
        if (v41 < 0)
        {
          v21 = v37++ > 8;
          if (!v21)
            continue;
        }
        goto LABEL_62;
      }
LABEL_61:
      a1[*v4] = 1;
LABEL_62:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v42 = a1[*v4] == 0;
LABEL_64:
  PBReaderRecallMark();
  return v42;
}

void sub_1893A2168(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPCorrectedCoordinateReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  _BOOL4 v15;
  int *v16;
  BOOL v17;
  int *v18;
  int *v19;
  int *v20;
  int *v21;
  char v22;
  unsigned int v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  int v30;
  unint64_t v32;
  _BOOL4 v33;
  int *v34;
  int v35;
  int v36;
  BOOL v37;
  GEOLatLng *v38;
  uint64_t v39;
  void *v40;
  int v41;
  char v42;
  char v43;
  char v44;
  int v45;
  int v46;
  char v47;
  void *v48;
  BOOL v50;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 36);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 32));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int8 *)(a1 + 44) >> 1) & 1) + (*(_BYTE *)(a1 + 44) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v7])
    {
      case -3:
        v8 = 1;
        goto LABEL_6;
      case -2:
        v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v10 & 1 | v11;
        v15 = v14 != 0;
        if ((v14 != 0) | v8 & 1)
          v16 = 0;
        else
          v16 = a3;
        v17 = v16 == 0;
        if (v14)
          v17 = 1;
        v50 = v17;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v20 = (int *)MEMORY[0x1E0D82BB8];
        v21 = &OBJC_IVAR___GEOPDRelatedEntitySection__reader;
        break;
      default:
        ++v11;
LABEL_6:
        v12 = v9;
        v13 = v10;
LABEL_8:
        ++v7;
        v9 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v19))
      goto LABEL_64;
    v22 = 0;
    v23 = 0;
    v24 = 0;
    while (1)
    {
      v25 = *v18;
      v26 = *(_QWORD *)(v3 + v25);
      v27 = v26 + 1;
      if (v26 == -1 || v27 > *(_QWORD *)(v3 + *v6))
        break;
      v28 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v26);
      *(_QWORD *)(v3 + v25) = v27;
      v24 |= (unint64_t)(v28 & 0x7F) << v22;
      if ((v28 & 0x80) == 0)
        goto LABEL_25;
      v22 += 7;
      if (v23++ >= 9)
      {
        v24 = 0;
        v30 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_25:
    v30 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v24 = 0;
LABEL_27:
    if (v30 || (v24 & 7) == 4)
    {
LABEL_64:
      if (v15)
      {
        v44 = 1;
        goto LABEL_78;
      }
      if (!v16)
        goto LABEL_79;
      while (1)
      {
        v46 = *v16++;
        v45 = v46;
        if (v46 == 1)
          break;
        if (v45 == 2)
        {
          v47 = 1;
LABEL_73:
          *(_BYTE *)(a1 + v21[351]) |= v47;
        }
        else if (!v45)
        {
          goto LABEL_79;
        }
      }
      v47 = 2;
      goto LABEL_73;
    }
    v32 = v24 >> 3;
    v33 = v15;
    if (!v50)
    {
      v34 = v16;
      do
      {
        v36 = *v34++;
        v35 = v36;
        v33 = v36 != 0;
        if (v36)
          v37 = v35 == (_DWORD)v32;
        else
          v37 = 1;
      }
      while (!v37);
    }
    if ((_DWORD)v32 == 2)
      break;
    if ((_DWORD)v32 != 1)
    {
      v41 = PBReaderSkipValueWithTag();
      v19 = (int *)MEMORY[0x1E0D82BC8];
      if (!v41)
        goto LABEL_74;
      goto LABEL_60;
    }
    if (v33)
    {
      if ((*(_BYTE *)(a1 + v21[351]) & 2) != 0)
      {
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_75;
        v7 += *(unsigned __int8 *)(a1 + v21[351]) << 30 >> 31;
      }
      else
      {
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_75;
        v38 = objc_alloc_init(GEOLatLng);
        if (!GEOLatLngReadAllFrom((uint64_t)v38, (void *)v3))
          goto LABEL_76;
        PBReaderRecallMark();
        v39 = 24;
LABEL_50:
        v40 = *(void **)(a1 + v39);
        *(_QWORD *)(a1 + v39) = v38;

        --v7;
        v21 = &OBJC_IVAR___GEOPDRelatedEntitySection__reader;
      }
LABEL_59:
      v19 = (int *)MEMORY[0x1E0D82BC8];
      goto LABEL_60;
    }
LABEL_53:
    v42 = PBReaderSkipValueWithTag();
    v19 = (int *)MEMORY[0x1E0D82BC8];
    if ((v42 & 1) == 0)
    {
LABEL_74:
      v44 = 0;
      goto LABEL_78;
    }
LABEL_60:
    if (v7)
      v43 = 1;
    else
      v43 = v15;
    if ((v43 & 1) == 0)
      goto LABEL_64;
  }
  if (!v33)
    goto LABEL_53;
  if ((*(_BYTE *)(a1 + v21[351]) & 1) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0)
    {
LABEL_75:
      v44 = 0;
      goto LABEL_77;
    }
    v7 -= *(_BYTE *)(a1 + v21[351]) & 1;
    goto LABEL_59;
  }
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_75;
  v38 = objc_alloc_init(GEOLatLng);
  if (GEOLatLngReadAllFrom((uint64_t)v38, (void *)v3))
  {
    PBReaderRecallMark();
    v39 = 16;
    goto LABEL_50;
  }
LABEL_76:

  v44 = 0;
  v21 = &OBJC_IVAR___GEOPDRelatedEntitySection__reader;
LABEL_77:
  v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_78:
  *(_BYTE *)(a1 + v21[351]) |= 2u;
  *(_BYTE *)(a1 + v21[351]) |= 1u;
  if ((v44 & 1) != 0)
  {
LABEL_79:
    v3 = *(_BYTE *)(v3 + *v19) == 0;
    if (v15)
      goto LABEL_80;
  }
  else
  {
    v3 = 0;
    if (v15)
    {
LABEL_80:
      v48 = *(void **)(a1 + 8);
      *(_QWORD *)(a1 + 8) = 0;

    }
  }
  return v3;
}

void sub_1893A2730(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893A2BA8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPCorrectedCoordinateReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 36))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEORPCorrectedCoordinateReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 40));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 32) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 36) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEORPCorrectedCoordinateReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEORPCorrectedCoordinateReadAllFrom_initialTag;
  Specified = GEORPCorrectedCoordinateReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    objc_msgSend(*(id *)(a1 + 24), "readAll:", 1);
    objc_msgSend(*(id *)(a1 + 16), "readAll:", 1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return Specified;
}

void sub_1893A2D5C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPCorrectedCoordinateReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORPCorrectedCoordinateReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1893A2DBC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPCorrectedCoordinateIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  _BOOL8 v17;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      if ((v8 >> 3) == 2 || (v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOLatLngIsValid(a1))
        {
LABEL_27:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_27;
      }
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

void sub_1893A3104(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPCorrectedCoordinateIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  v2 = (*(_BYTE *)(a1 + 44) & 7) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return v2;
}

void sub_1893A33FC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893A39E8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPCorrectedFieldReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  char v7;
  char v8;
  uint64_t v9;
  unsigned int v10;
  unsigned int v11;
  char v12;
  int *v13;
  int *v14;
  int *v15;
  int *v16;
  char v17;
  unsigned int v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  BOOL v24;
  int v25;
  unint64_t v27;
  BOOL v28;
  int *v29;
  int v30;
  int v31;
  BOOL v32;
  char v33;
  unsigned int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  char v44;
  unsigned int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  char v50;
  char v51;
  char v52;
  char v53;
  int v54;
  char v55;
  void *v56;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = ((*(unsigned __int8 *)(a1 + 60) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 4) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 2) & 1);
  while (1)
  {
    v11 = a3[v9];
    if (v11 >= 0xFFFFFFFE)
    {
      v7 = 1;
      goto LABEL_9;
    }
    if (v11 != -3)
      break;
    v8 = 1;
LABEL_9:
    ++v9;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  v12 = v7 | (v10 > 1);
  if (v7 & 1 | (v10 > 1) | v8 & 1)
    v13 = 0;
  else
    v13 = a3;
  v14 = (int *)MEMORY[0x1E0D82BF0];
  v15 = (int *)MEMORY[0x1E0D82BC8];
  v16 = (int *)MEMORY[0x1E0D82BB8];
  while (2)
  {
    if (*(_QWORD *)(v3 + *v14) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v15))
      goto LABEL_85;
    v17 = 0;
    v18 = 0;
    v19 = 0;
    while (1)
    {
      v20 = *v14;
      v21 = *(_QWORD *)(v3 + v20);
      v22 = v21 + 1;
      if (v21 == -1 || v22 > *(_QWORD *)(v3 + *v6))
        break;
      v23 = *(_BYTE *)(*(_QWORD *)(v3 + *v16) + v21);
      *(_QWORD *)(v3 + v20) = v22;
      v19 |= (unint64_t)(v23 & 0x7F) << v17;
      if ((v23 & 0x80) == 0)
        goto LABEL_24;
      v17 += 7;
      v24 = v18++ >= 9;
      if (v24)
      {
        v19 = 0;
        v25 = *(unsigned __int8 *)(v3 + *v15);
        goto LABEL_26;
      }
    }
    *(_BYTE *)(v3 + *v15) = 1;
LABEL_24:
    v25 = *(unsigned __int8 *)(v3 + *v15);
    if (*(_BYTE *)(v3 + *v15))
      v19 = 0;
LABEL_26:
    if (v25 || (v19 & 7) == 4)
    {
LABEL_85:
      if ((v12 & 1) != 0)
      {
        v53 = 1;
        goto LABEL_93;
      }
      if (v13)
      {
        while (1)
        {
          v54 = *v13++;
          v55 = 8;
          switch(v54)
          {
            case 0:
              goto LABEL_94;
            case 2:
              goto LABEL_91;
            case 3:
              v55 = 16;
              goto LABEL_91;
            case 4:
              v55 = 4;
LABEL_91:
              *(_BYTE *)(a1 + 60) |= v55;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_94;
    }
    v27 = v19 >> 3;
    v28 = v12;
    if (!((v13 == 0) | v12 & 1))
    {
      v29 = v13;
      do
      {
        v31 = *v29++;
        v30 = v31;
        v28 = v31 != 0;
        if (v31)
          v32 = v30 == (_DWORD)v27;
        else
          v32 = 1;
      }
      while (!v32);
    }
    switch((int)v27)
    {
      case 1:
        if ((v8 & 1) == 0)
          goto LABEL_66;
        v33 = 0;
        v34 = 0;
        v35 = 0;
        *(_BYTE *)(a1 + 60) |= 1u;
        while (1)
        {
          v36 = *v14;
          v37 = *(_QWORD *)(v3 + v36);
          v38 = v37 + 1;
          if (v37 == -1 || v38 > *(_QWORD *)(v3 + *v6))
            break;
          v39 = *(_BYTE *)(*(_QWORD *)(v3 + *v16) + v37);
          *(_QWORD *)(v3 + v36) = v38;
          v35 |= (unint64_t)(v39 & 0x7F) << v33;
          if ((v39 & 0x80) == 0)
            goto LABEL_69;
          v33 += 7;
          v24 = v34++ >= 9;
          if (v24)
          {
            LODWORD(v35) = 0;
            goto LABEL_71;
          }
        }
        *(_BYTE *)(v3 + *v15) = 1;
LABEL_69:
        if (*(_BYTE *)(v3 + *v15))
          LODWORD(v35) = 0;
LABEL_71:
        *(_DWORD *)(a1 + 52) = v35;
        goto LABEL_84;
      case 2:
        if (!v28)
          goto LABEL_66;
        if ((*(_BYTE *)(a1 + 60) & 8) == 0)
        {
          PBReaderReadString();
          v41 = objc_claimAutoreleasedReturnValue();
          v42 = 24;
          goto LABEL_57;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_99;
        v52 = 16 * *(_BYTE *)(a1 + 60);
        goto LABEL_82;
      case 3:
        if (!v28)
          goto LABEL_66;
        if ((*(_BYTE *)(a1 + 60) & 0x10) == 0)
        {
          PBReaderReadString();
          v41 = objc_claimAutoreleasedReturnValue();
          v42 = 32;
          goto LABEL_57;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_99;
        v52 = 8 * *(_BYTE *)(a1 + 60);
        goto LABEL_82;
      case 4:
        if (!v28)
          goto LABEL_66;
        if ((*(_BYTE *)(a1 + 60) & 4) == 0)
        {
          PBReaderReadString();
          v41 = objc_claimAutoreleasedReturnValue();
          v42 = 16;
LABEL_57:
          v43 = *(void **)(a1 + v42);
          *(_QWORD *)(a1 + v42) = v41;

          --v9;
          goto LABEL_83;
        }
        if ((PBReaderSkipValueWithTag() & 1) != 0)
        {
          v52 = 32 * *(_BYTE *)(a1 + 60);
LABEL_82:
          v9 += v52 >> 7;
LABEL_83:
          v15 = (int *)MEMORY[0x1E0D82BC8];
LABEL_84:
          if (!(v12 & 1 | (v9 != 0)))
            goto LABEL_85;
          continue;
        }
LABEL_99:
        v53 = 0;
        v15 = (int *)MEMORY[0x1E0D82BC8];
LABEL_93:
        *(_BYTE *)(a1 + 60) |= 8u;
        *(_BYTE *)(a1 + 60) |= 0x10u;
        *(_BYTE *)(a1 + 60) |= 4u;
        if ((v53 & 1) != 0)
        {
LABEL_94:
          v3 = *(_BYTE *)(v3 + *v15) == 0;
          if ((v12 & 1) != 0)
            goto LABEL_95;
        }
        else
        {
          v3 = 0;
          if ((v12 & 1) != 0)
          {
LABEL_95:
            v56 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = 0;

          }
        }
        return v3;
      case 5:
        if ((v8 & 1) != 0)
        {
          v44 = 0;
          v45 = 0;
          v46 = 0;
          *(_BYTE *)(a1 + 60) |= 2u;
          while (1)
          {
            v47 = *v14;
            v48 = *(_QWORD *)(v3 + v47);
            v49 = v48 + 1;
            if (v48 == -1 || v49 > *(_QWORD *)(v3 + *v6))
              break;
            v50 = *(_BYTE *)(*(_QWORD *)(v3 + *v16) + v48);
            *(_QWORD *)(v3 + v47) = v49;
            v46 |= (unint64_t)(v50 & 0x7F) << v44;
            if ((v50 & 0x80) == 0)
              goto LABEL_73;
            v44 += 7;
            v24 = v45++ >= 9;
            if (v24)
            {
              v46 = 0;
              goto LABEL_75;
            }
          }
          *(_BYTE *)(v3 + *v15) = 1;
LABEL_73:
          if (*(_BYTE *)(v3 + *v15))
            v46 = 0;
LABEL_75:
          *(_BYTE *)(a1 + 56) = v46 != 0;
        }
        else
        {
LABEL_66:
          v51 = PBReaderSkipValueWithTag();
          v15 = (int *)MEMORY[0x1E0D82BC8];
          if ((v51 & 1) == 0)
          {
LABEL_92:
            v53 = 0;
            goto LABEL_93;
          }
        }
        goto LABEL_84;
      default:
        v40 = PBReaderSkipValueWithTag();
        v15 = (int *)MEMORY[0x1E0D82BC8];
        if (!v40)
          goto LABEL_92;
        goto LABEL_84;
    }
  }
}

void sub_1893A4100(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893A4240(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893A4A14(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPCorrectedFieldReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEORPCorrectedFieldReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEORPCorrectedFieldReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEORPCorrectedFieldReadAllFrom_initialTag;
  Specified = GEORPCorrectedFieldReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_1893A4BA0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPCorrectedFieldReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORPCorrectedFieldReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1893A4C00(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPCorrectedFieldIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  _BOOL8 v28;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0)
            goto LABEL_46;
          v17 = 0;
          while (1)
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
              goto LABEL_42;
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if (v21 < 0)
            {
              v22 = v17++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_43;
          }
        case 2u:
          if (v15 == 2)
            goto LABEL_32;
          goto LABEL_46;
        case 3u:
          if (v15 == 2)
            goto LABEL_32;
          goto LABEL_46;
        case 4u:
          if (v15 == 2)
            goto LABEL_32;
          goto LABEL_46;
        case 5u:
          if ((v8 & 7) != 0)
            goto LABEL_46;
          v23 = 0;
          break;
        default:
LABEL_32:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_46:
          v28 = 0;
          goto LABEL_45;
      }
      while (1)
      {
        v24 = *v2;
        v25 = *(_QWORD *)&a1[v24];
        v26 = v25 + 1;
        if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
          break;
        v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
        *(_QWORD *)&a1[v24] = v26;
        if (v27 < 0)
        {
          v22 = v23++ > 8;
          if (!v22)
            continue;
        }
        goto LABEL_43;
      }
LABEL_42:
      a1[*v4] = 1;
LABEL_43:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v28 = a1[*v4] == 0;
LABEL_45:
  PBReaderRecallMark();
  return v28;
}

void sub_1893A5068(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPCorrectedFieldIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v2 = (*(_BYTE *)(a1 + 60) & 0x3C) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return v2;
}

void sub_1893A53DC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPCorrectedFlagReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  unint64_t v18;
  char v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  char v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  char v33;
  unsigned int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  BOOL v40;
  uint64_t v41;
  _BOOL8 v42;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        v18 = v10 >> 3;
        if ((v10 >> 3) == 3)
        {
          v26 = 0;
          v27 = 0;
          v28 = 0;
          *(_BYTE *)(a1 + 16) |= 2u;
          while (1)
          {
            v29 = *v4;
            v30 = *(_QWORD *)&v3[v29];
            v31 = v30 + 1;
            if (v30 == -1 || v31 > *(_QWORD *)&v3[*v5])
              break;
            v32 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v30);
            *(_QWORD *)&v3[v29] = v31;
            v28 |= (unint64_t)(v32 & 0x7F) << v26;
            if ((v32 & 0x80) == 0)
              goto LABEL_50;
            v26 += 7;
            v15 = v27++ >= 9;
            if (v15)
            {
              v28 = 0;
              goto LABEL_52;
            }
          }
          v3[*v6] = 1;
LABEL_50:
          if (v3[*v6])
            v28 = 0;
LABEL_52:
          v40 = v28 != 0;
          v41 = 12;
        }
        else
        {
          if ((_DWORD)v18 != 2)
          {
            if ((_DWORD)v18 == 1)
            {
              v19 = 0;
              v20 = 0;
              v21 = 0;
              *(_BYTE *)(a1 + 16) |= 1u;
              while (1)
              {
                v22 = *v4;
                v23 = *(_QWORD *)&v3[v22];
                v24 = v23 + 1;
                if (v23 == -1 || v24 > *(_QWORD *)&v3[*v5])
                  break;
                v25 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v23);
                *(_QWORD *)&v3[v22] = v24;
                v21 |= (unint64_t)(v25 & 0x7F) << v19;
                if ((v25 & 0x80) == 0)
                  goto LABEL_46;
                v19 += 7;
                v15 = v20++ >= 9;
                if (v15)
                {
                  LODWORD(v21) = 0;
                  goto LABEL_48;
                }
              }
              v3[*v6] = 1;
LABEL_46:
              if (v3[*v6])
                LODWORD(v21) = 0;
LABEL_48:
              *(_DWORD *)(a1 + 8) = v21;
            }
            else if (!PBReaderSkipValueWithTag())
            {
              goto LABEL_60;
            }
            continue;
          }
          v33 = 0;
          v34 = 0;
          v35 = 0;
          *(_BYTE *)(a1 + 16) |= 4u;
          while (1)
          {
            v36 = *v4;
            v37 = *(_QWORD *)&v3[v36];
            v38 = v37 + 1;
            if (v37 == -1 || v38 > *(_QWORD *)&v3[*v5])
              break;
            v39 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v37);
            *(_QWORD *)&v3[v36] = v38;
            v35 |= (unint64_t)(v39 & 0x7F) << v33;
            if ((v39 & 0x80) == 0)
              goto LABEL_54;
            v33 += 7;
            v15 = v34++ >= 9;
            if (v15)
            {
              v35 = 0;
              goto LABEL_56;
            }
          }
          v3[*v6] = 1;
LABEL_54:
          if (v3[*v6])
            v35 = 0;
LABEL_56:
          v40 = v35 != 0;
          v41 = 13;
        }
        *(_BYTE *)(a1 + v41) = v40;
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v42 = v3[*v6] == 0;
  }
  else
  {
LABEL_60:
    v42 = 0;
  }
  objc_sync_exit(v3);

  return v42;
}

void sub_1893A60C4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPCorrectedFlagReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORPCorrectedFlagReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1893A6124(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPCorrectedFlagIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  unint64_t v16;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  int v32;
  _BOOL8 v33;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_48;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      if (v14 || (v8 & 7) == 4)
        goto LABEL_48;
      v16 = v8 >> 3;
      if ((v8 >> 3) == 3)
        break;
      if ((_DWORD)v16 == 2)
      {
        if ((v8 & 7) != 0)
          goto LABEL_50;
        v28 = 0;
        while (1)
        {
          v29 = *v2;
          v30 = *(_QWORD *)&a1[v29];
          v31 = v30 + 1;
          if (v30 == -1 || v31 > *(_QWORD *)&a1[*v3])
            goto LABEL_45;
          v32 = *(char *)(*(_QWORD *)&a1[*v5] + v30);
          *(_QWORD *)&a1[v29] = v31;
          if (v32 < 0)
          {
            v22 = v28++ > 8;
            if (!v22)
              continue;
          }
          goto LABEL_47;
        }
      }
      if ((_DWORD)v16 == 1)
      {
        if ((v8 & 7) != 0)
          goto LABEL_50;
        v17 = 0;
        while (1)
        {
          v18 = *v2;
          v19 = *(_QWORD *)&a1[v18];
          v20 = v19 + 1;
          if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
            break;
          v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
          *(_QWORD *)&a1[v18] = v20;
          if (v21 < 0)
          {
            v22 = v17++ > 8;
            if (!v22)
              continue;
          }
          goto LABEL_47;
        }
LABEL_45:
        a1[*v4] = 1;
        goto LABEL_47;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_50:
        v33 = 0;
        goto LABEL_49;
      }
LABEL_47:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_48;
    }
    if ((v8 & 7) != 0)
      goto LABEL_50;
    v23 = 0;
    while (1)
    {
      v24 = *v2;
      v25 = *(_QWORD *)&a1[v24];
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
        goto LABEL_45;
      v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
      *(_QWORD *)&a1[v24] = v26;
      if (v27 < 0)
      {
        v22 = v23++ > 8;
        if (!v22)
          continue;
      }
      goto LABEL_47;
    }
  }
LABEL_48:
  v33 = a1[*v4] == 0;
LABEL_49:
  PBReaderRecallMark();
  return v33;
}

void sub_1893A69A4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPCorrectedLabelReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  char v15;
  int *v16;
  int *v17;
  int *v18;
  int *v19;
  char v20;
  unsigned int v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  BOOL v27;
  int v28;
  unint64_t v30;
  BOOL v31;
  int *v32;
  int v33;
  int v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  void *v39;
  uint64_t v40;
  char v41;
  unsigned int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  char v47;
  char v48;
  unsigned int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  char v55;
  char v56;
  char v57;
  int v58;
  char v59;
  void *v60;
  GEOMapRegion *v62;
  char v63;
  char v64;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 68);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 64));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = (vaddv_s16((int16x4_t)(*(_QWORD *)&vshl_u16((uint16x4_t)(*(_QWORD *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 80)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFCFFFBFFFAFFFDLL) & 0xFF01FF01FF01FF01))+ ((*(_BYTE *)(a1 + 80) & 4) != 0));
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v7])
    {
      case -3:
        v8 = 1;
        goto LABEL_6;
      case -2:
        v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v11 > 3;
        v15 = v10 | v14;
        if ((((v10 | v14) | v8) & 1) != 0)
          v16 = 0;
        else
          v16 = a3;
        v64 = (v16 == 0) | v15;
        v17 = (int *)MEMORY[0x1E0D82BF0];
        v18 = (int *)MEMORY[0x1E0D82BC8];
        v19 = (int *)MEMORY[0x1E0D82BB8];
        v63 = v10 | v14;
        break;
      default:
        ++v11;
LABEL_6:
        v12 = v9;
        v13 = v10;
LABEL_8:
        ++v7;
        v9 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v17) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v18))
      goto LABEL_100;
    v20 = 0;
    v21 = 0;
    v22 = 0;
    while (1)
    {
      v23 = *v17;
      v24 = *(_QWORD *)(v3 + v23);
      v25 = v24 + 1;
      if (v24 == -1 || v25 > *(_QWORD *)(v3 + *v6))
        break;
      v26 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v24);
      *(_QWORD *)(v3 + v23) = v25;
      v22 |= (unint64_t)(v26 & 0x7F) << v20;
      if ((v26 & 0x80) == 0)
        goto LABEL_23;
      v20 += 7;
      v27 = v21++ >= 9;
      if (v27)
      {
        v22 = 0;
        v28 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(_BYTE *)(v3 + *v18) = 1;
LABEL_23:
    v28 = *(unsigned __int8 *)(v3 + *v18);
    if (*(_BYTE *)(v3 + *v18))
      v22 = 0;
LABEL_25:
    if (v28 || (v22 & 7) == 4)
    {
LABEL_100:
      if ((v15 & 1) != 0)
      {
        v57 = 1;
        goto LABEL_112;
      }
      if (v16)
      {
        while (1)
        {
          v58 = *v16++;
          v59 = 64;
          switch(v58)
          {
            case 0:
              goto LABEL_113;
            case 1:
              goto LABEL_108;
            case 2:
              v59 = 8;
              goto LABEL_108;
            case 3:
              v59 = 32;
              goto LABEL_108;
            case 4:
              v59 = 16;
              goto LABEL_108;
            case 5:
              v59 = 4;
LABEL_108:
              *(_BYTE *)(a1 + 80) |= v59;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_113;
    }
    v30 = v22 >> 3;
    v31 = v15;
    if ((v64 & 1) == 0)
    {
      v32 = v16;
      do
      {
        v34 = *v32++;
        v33 = v34;
        v31 = v34 != 0;
        if (v34)
          v35 = v33 == (_DWORD)v30;
        else
          v35 = 1;
      }
      while (!v35);
    }
    switch((int)v30)
    {
      case 1:
        if (!v31)
          goto LABEL_79;
        if ((*(_BYTE *)(a1 + 80) & 0x40) == 0)
        {
          PBReaderReadString();
          v36 = objc_claimAutoreleasedReturnValue();
          v37 = 48;
          goto LABEL_45;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_111;
        v56 = 2 * *(_BYTE *)(a1 + 80);
        goto LABEL_97;
      case 2:
        if (!v31)
          goto LABEL_79;
        if ((*(_BYTE *)(a1 + 80) & 8) == 0)
        {
          PBReaderReadString();
          v36 = objc_claimAutoreleasedReturnValue();
          v37 = 24;
LABEL_45:
          v39 = *(void **)(a1 + v37);
          *(_QWORD *)(a1 + v37) = v36;
          goto LABEL_62;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_111;
        v56 = 16 * *(_BYTE *)(a1 + 80);
        goto LABEL_97;
      case 3:
        if (!v31)
          goto LABEL_79;
        if ((*(_BYTE *)(a1 + 80) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_111;
          v56 = 4 * *(_BYTE *)(a1 + 80);
          goto LABEL_97;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_111;
        v62 = objc_alloc_init(GEOMapRegion);
        if (!GEOMapRegionReadAllFrom((uint64_t)v62, (void *)v3))
          goto LABEL_110;
        PBReaderRecallMark();
        v40 = 40;
        goto LABEL_61;
      case 4:
        if (!v31 || (*(_BYTE *)(a1 + 80) & 0x10) != 0)
          goto LABEL_79;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_111;
        v62 = objc_alloc_init(GEORPFeatureHandle);
        if (!GEORPFeatureHandleReadAllFrom((uint64_t)v62, (void *)v3))
          goto LABEL_110;
        PBReaderRecallMark();
        -[GEORPCorrectedLabel _addNoFlagsFeatureHandle:](a1, v62);

        goto LABEL_98;
      case 5:
        if (!v31)
          goto LABEL_79;
        if ((*(_BYTE *)(a1 + 80) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_111;
          v56 = 32 * *(_BYTE *)(a1 + 80);
LABEL_97:
          v7 += v56 >> 7;
LABEL_98:
          v15 = v63;
          v18 = (int *)MEMORY[0x1E0D82BC8];
LABEL_99:
          if (!(v15 & 1 | (v7 != 0)))
            goto LABEL_100;
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_111;
        v62 = objc_alloc_init(GEOLatLng);
        if (GEOLatLngReadAllFrom((uint64_t)v62, (void *)v3))
        {
          PBReaderRecallMark();
          v40 = 16;
LABEL_61:
          v39 = *(void **)(a1 + v40);
          *(_QWORD *)(a1 + v40) = v62;
LABEL_62:

          --v7;
          goto LABEL_98;
        }
LABEL_110:

LABEL_111:
        v57 = 0;
        v15 = v63;
        v18 = (int *)MEMORY[0x1E0D82BC8];
LABEL_112:
        *(_BYTE *)(a1 + 80) |= 0x40u;
        *(_BYTE *)(a1 + 80) |= 8u;
        *(_BYTE *)(a1 + 80) |= 0x20u;
        *(_BYTE *)(a1 + 80) |= 0x10u;
        *(_BYTE *)(a1 + 80) |= 4u;
        if ((v57 & 1) != 0)
        {
LABEL_113:
          v3 = *(_BYTE *)(v3 + *v18) == 0;
          if ((v15 & 1) != 0)
            goto LABEL_114;
        }
        else
        {
          v3 = 0;
          if ((v15 & 1) != 0)
          {
LABEL_114:
            v60 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = 0;

          }
        }
        return v3;
      case 6:
        if ((v8 & 1) == 0)
          goto LABEL_79;
        v41 = 0;
        v42 = 0;
        v43 = 0;
        *(_BYTE *)(a1 + 80) |= 1u;
        while (2)
        {
          v44 = *v17;
          v45 = *(_QWORD *)(v3 + v44);
          v46 = v45 + 1;
          if (v45 == -1 || v46 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v47 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v45);
            *(_QWORD *)(v3 + v44) = v46;
            v43 |= (unint64_t)(v47 & 0x7F) << v41;
            if (v47 < 0)
            {
              v41 += 7;
              v27 = v42++ >= 9;
              if (v27)
              {
                v43 = 0;
                goto LABEL_84;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          v43 = 0;
LABEL_84:
        *(_QWORD *)(a1 + 56) = v43;
        goto LABEL_99;
      case 7:
        if ((v8 & 1) != 0)
        {
          v48 = 0;
          v49 = 0;
          v50 = 0;
          *(_BYTE *)(a1 + 80) |= 2u;
          while (1)
          {
            v51 = *v17;
            v52 = *(_QWORD *)(v3 + v51);
            v53 = v52 + 1;
            if (v52 == -1 || v53 > *(_QWORD *)(v3 + *v6))
              break;
            v54 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v52);
            *(_QWORD *)(v3 + v51) = v53;
            v50 |= (unint64_t)(v54 & 0x7F) << v48;
            if ((v54 & 0x80) == 0)
              goto LABEL_86;
            v48 += 7;
            v27 = v49++ >= 9;
            if (v27)
            {
              v50 = 0;
              goto LABEL_88;
            }
          }
          *(_BYTE *)(v3 + *v18) = 1;
LABEL_86:
          if (*(_BYTE *)(v3 + *v18))
            v50 = 0;
LABEL_88:
          *(_BYTE *)(a1 + 76) = v50 != 0;
        }
        else
        {
LABEL_79:
          v55 = PBReaderSkipValueWithTag();
          v18 = (int *)MEMORY[0x1E0D82BC8];
          v15 = v63;
          if ((v55 & 1) == 0)
          {
LABEL_109:
            v57 = 0;
            goto LABEL_112;
          }
        }
        goto LABEL_99;
      default:
        v38 = PBReaderSkipValueWithTag();
        v18 = (int *)MEMORY[0x1E0D82BC8];
        v15 = v63;
        if (!v38)
          goto LABEL_109;
        goto LABEL_99;
    }
  }
}

void sub_1893A7280(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893A73BC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893A74FC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893A782C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893A8284(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORPCorrectedLabelCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _BYTE v12[128];
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  objc_msgSend(a1[5], "readAll:", 1);
  v10 = 0u;
  v11 = 0u;
  v8 = 0u;
  v9 = 0u;
  v2 = a1[4];
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v9;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v9 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v8 + 1) + 8 * v6++), "readAll:", 1, (_QWORD)v8);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
    }
    while (v4);
  }

  return objc_msgSend(a1[2], "readAll:", 1);
}

unint64_t GEORPCorrectedLabelReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 68))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEORPCorrectedLabelReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 72));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 64) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 68) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEORPCorrectedLabelReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEORPCorrectedLabelReadAllFrom_initialTag;
  Specified = GEORPCorrectedLabelReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEORPCorrectedLabelCallReadAllRecursiveWithoutSynchronized((id *)a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return Specified;
}

void sub_1893A8538(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPCorrectedLabelReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORPCorrectedLabelReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1893A8598(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPCorrectedLabelIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  _BOOL8 v28;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2)
            goto LABEL_55;
          goto LABEL_22;
        case 2u:
          if (v15 == 2)
            goto LABEL_22;
          goto LABEL_55;
        case 3u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOMapRegionIsValid(a1))
            goto LABEL_55;
          goto LABEL_35;
        case 4u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPFeatureHandleIsValid(a1))
            goto LABEL_55;
          goto LABEL_35;
        case 5u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOLatLngIsValid(a1))
            goto LABEL_55;
LABEL_35:
          PBReaderRecallMark();
          continue;
        case 6u:
          if ((v8 & 7) != 0)
            goto LABEL_55;
          v17 = 0;
          while (1)
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
              goto LABEL_52;
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if (v21 < 0)
            {
              v22 = v17++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_53;
          }
        case 7u:
          if ((v8 & 7) != 0)
            goto LABEL_55;
          v23 = 0;
          break;
        default:
LABEL_22:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_55:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v24 = *v2;
        v25 = *(_QWORD *)&a1[v24];
        v26 = v25 + 1;
        if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
          break;
        v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
        *(_QWORD *)&a1[v24] = v26;
        if (v27 < 0)
        {
          v22 = v23++ > 8;
          if (!v22)
            continue;
        }
        goto LABEL_53;
      }
LABEL_52:
      a1[*v4] = 1;
LABEL_53:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v28 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v28;
}

BOOL GEORPFeatureHandleIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  int v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  int v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  int v42;
  unsigned int v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  int v47;
  unsigned int v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  int v52;
  _BOOL8 v53;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0)
            goto LABEL_86;
          v17 = 0;
          while (1)
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
              goto LABEL_77;
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if (v21 < 0)
            {
              v22 = v17++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_78;
          }
        case 2u:
          if ((v8 & 7) != 0)
            goto LABEL_86;
          v23 = 0;
          while (1)
          {
            v24 = *v2;
            v25 = *(_QWORD *)&a1[v24];
            v26 = v25 + 1;
            if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
              goto LABEL_77;
            v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
            *(_QWORD *)&a1[v24] = v26;
            if (v27 < 0)
            {
              v22 = v23++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_78;
          }
        case 3u:
          if ((v8 & 7) != 0)
            goto LABEL_86;
          v28 = 0;
          while (1)
          {
            v29 = *v2;
            v30 = *(_QWORD *)&a1[v29];
            v31 = v30 + 1;
            if (v30 == -1 || v31 > *(_QWORD *)&a1[*v3])
              goto LABEL_77;
            v32 = *(char *)(*(_QWORD *)&a1[*v5] + v30);
            *(_QWORD *)&a1[v29] = v31;
            if (v32 < 0)
            {
              v22 = v28++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_78;
          }
        case 4u:
          if ((v8 & 7) != 0)
            goto LABEL_86;
          v33 = 0;
          while (1)
          {
            v34 = *v2;
            v35 = *(_QWORD *)&a1[v34];
            v36 = v35 + 1;
            if (v35 == -1 || v36 > *(_QWORD *)&a1[*v3])
              goto LABEL_77;
            v37 = *(char *)(*(_QWORD *)&a1[*v5] + v35);
            *(_QWORD *)&a1[v34] = v36;
            if (v37 < 0)
            {
              v22 = v33++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_78;
          }
        case 5u:
          if ((v8 & 7) != 0)
            goto LABEL_86;
          v38 = 0;
          while (1)
          {
            v39 = *v2;
            v40 = *(_QWORD *)&a1[v39];
            v41 = v40 + 1;
            if (v40 == -1 || v41 > *(_QWORD *)&a1[*v3])
              goto LABEL_77;
            v42 = *(char *)(*(_QWORD *)&a1[*v5] + v40);
            *(_QWORD *)&a1[v39] = v41;
            if (v42 < 0)
            {
              v22 = v38++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_78;
          }
        case 6u:
          if ((v8 & 7) != 0)
            goto LABEL_86;
          v43 = 0;
          while (1)
          {
            v44 = *v2;
            v45 = *(_QWORD *)&a1[v44];
            v46 = v45 + 1;
            if (v45 == -1 || v46 > *(_QWORD *)&a1[*v3])
              goto LABEL_77;
            v47 = *(char *)(*(_QWORD *)&a1[*v5] + v45);
            *(_QWORD *)&a1[v44] = v46;
            if (v47 < 0)
            {
              v22 = v43++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_78;
          }
        case 7u:
          if ((v8 & 7) != 0)
            goto LABEL_86;
          v48 = 0;
          break;
        case 8u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPFeatureHandleStyleAttributeIsValid(a1))
            goto LABEL_86;
          PBReaderRecallMark();
          continue;
        default:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_86:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v49 = *v2;
        v50 = *(_QWORD *)&a1[v49];
        v51 = v50 + 1;
        if (v50 == -1 || v51 > *(_QWORD *)&a1[*v3])
          break;
        v52 = *(char *)(*(_QWORD *)&a1[*v5] + v50);
        *(_QWORD *)&a1[v49] = v51;
        if (v52 < 0)
        {
          v22 = v48++ > 8;
          if (!v22)
            continue;
        }
        goto LABEL_78;
      }
LABEL_77:
      a1[*v4] = 1;
LABEL_78:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v53 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v53;
}

void sub_1893A8F9C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPCorrectedLabelIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  v2 = *(unsigned __int8 *)(a1 + 80) > 3u;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return v2;
}

void sub_1893A94F8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893A9B50(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPCorrectedSearchReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  char v15;
  int *v16;
  int *v17;
  int *v18;
  int *v19;
  char v20;
  unsigned int v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  BOOL v27;
  int v28;
  unint64_t v30;
  BOOL v31;
  int *v32;
  int v33;
  int v34;
  BOOL v35;
  uint64_t v36;
  int v37;
  char v38;
  unsigned int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  char v45;
  unsigned int v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  char v50;
  uint64_t v51;
  void *v52;
  char v53;
  uint64_t v54;
  char v55;
  char v56;
  int v57;
  char v58;
  void *v59;
  GEOPlaceSearchRequest *v61;
  char v62;
  char v63;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 60);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 56));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = (vaddv_s16((int16x4_t)(*(_QWORD *)&vshl_u16((uint16x4_t)(*(_QWORD *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 76)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFEFFFAFFFCFFFBLL) & 0xFF01FF01FF01FF01))+ ((*(_BYTE *)(a1 + 76) & 8) != 0));
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v7])
    {
      case -3:
        v8 = 1;
        goto LABEL_6;
      case -2:
        v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v11 > 3;
        v15 = v10 | v14;
        if ((((v10 | v14) | v8) & 1) != 0)
          v16 = 0;
        else
          v16 = a3;
        v17 = (int *)MEMORY[0x1E0D82BF0];
        v18 = (int *)MEMORY[0x1E0D82BC8];
        v63 = (v16 == 0) | v15;
        v19 = (int *)MEMORY[0x1E0D82BB8];
        v62 = v10 | v14;
        break;
      default:
        ++v11;
LABEL_6:
        v12 = v9;
        v13 = v10;
LABEL_8:
        ++v7;
        v9 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v17) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v18))
      goto LABEL_104;
    v20 = 0;
    v21 = 0;
    v22 = 0;
    while (1)
    {
      v23 = *v17;
      v24 = *(_QWORD *)(v3 + v23);
      v25 = v24 + 1;
      if (v24 == -1 || v25 > *(_QWORD *)(v3 + *v6))
        break;
      v26 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v24);
      *(_QWORD *)(v3 + v23) = v25;
      v22 |= (unint64_t)(v26 & 0x7F) << v20;
      if ((v26 & 0x80) == 0)
        goto LABEL_23;
      v20 += 7;
      v27 = v21++ >= 9;
      if (v27)
      {
        v22 = 0;
        v28 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(_BYTE *)(v3 + *v18) = 1;
LABEL_23:
    v28 = *(unsigned __int8 *)(v3 + *v18);
    if (*(_BYTE *)(v3 + *v18))
      v22 = 0;
LABEL_25:
    if (v28 || (v22 & 7) == 4)
    {
LABEL_104:
      if ((v15 & 1) != 0)
      {
        v56 = 1;
        goto LABEL_116;
      }
      if (v16)
      {
        while (1)
        {
          v57 = *v16++;
          v58 = 16;
          switch(v57)
          {
            case 0:
              goto LABEL_117;
            case 1:
              goto LABEL_112;
            case 2:
              v58 = 32;
              goto LABEL_112;
            case 5:
              v58 = 64;
              goto LABEL_112;
            case 6:
              v58 = 4;
              goto LABEL_112;
            case 7:
              v58 = 8;
LABEL_112:
              *(_BYTE *)(a1 + 76) |= v58;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_117;
    }
    v30 = v22 >> 3;
    v31 = v15;
    if ((v63 & 1) == 0)
    {
      v32 = v16;
      do
      {
        v34 = *v32++;
        v33 = v34;
        v31 = v34 != 0;
        if (v34)
          v35 = v33 == (_DWORD)v30;
        else
          v35 = 1;
      }
      while (!v35);
    }
    switch((int)v30)
    {
      case 1:
        if (!v31)
          goto LABEL_80;
        if ((*(_BYTE *)(a1 + 76) & 0x10) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_115;
          v61 = objc_alloc_init(GEOPlaceSearchRequest);
          if (GEOPlaceSearchRequestReadAllFrom((uint64_t)v61, (void *)v3, v9 & 1))
          {
            PBReaderRecallMark();
            v36 = 32;
            goto LABEL_78;
          }
          goto LABEL_114;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_115;
        v55 = 8 * *(_BYTE *)(a1 + 76);
        goto LABEL_101;
      case 2:
        if (!v31)
          goto LABEL_80;
        if ((*(_BYTE *)(a1 + 76) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_115;
          v55 = 4 * *(_BYTE *)(a1 + 76);
          goto LABEL_101;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_115;
        v61 = objc_alloc_init(GEOPlaceSearchResponse);
        if (!GEOPlaceSearchResponseReadAllFrom((uint64_t)v61, (void *)v3, v9 & 1))
          goto LABEL_114;
        PBReaderRecallMark();
        v36 = 40;
        goto LABEL_78;
      case 3:
        if ((v8 & 1) == 0)
          goto LABEL_80;
        v38 = 0;
        v39 = 0;
        v40 = 0;
        *(_BYTE *)(a1 + 76) |= 2u;
        while (2)
        {
          v41 = *v17;
          v42 = *(_QWORD *)(v3 + v41);
          v43 = v42 + 1;
          if (v42 == -1 || v43 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v44 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v42);
            *(_QWORD *)(v3 + v41) = v43;
            v40 |= (unint64_t)(v44 & 0x7F) << v38;
            if (v44 < 0)
            {
              v38 += 7;
              v27 = v39++ >= 9;
              if (v27)
              {
                LODWORD(v40) = 0;
                goto LABEL_85;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          LODWORD(v40) = 0;
LABEL_85:
        v54 = 72;
        goto LABEL_90;
      case 4:
        if ((v8 & 1) == 0)
          goto LABEL_80;
        v45 = 0;
        v46 = 0;
        v40 = 0;
        *(_BYTE *)(a1 + 76) |= 1u;
        while (2)
        {
          v47 = *v17;
          v48 = *(_QWORD *)(v3 + v47);
          v49 = v48 + 1;
          if (v48 == -1 || v49 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v50 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v48);
            *(_QWORD *)(v3 + v47) = v49;
            v40 |= (unint64_t)(v50 & 0x7F) << v45;
            if (v50 < 0)
            {
              v45 += 7;
              v27 = v46++ >= 9;
              if (v27)
              {
                LODWORD(v40) = 0;
                goto LABEL_89;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          LODWORD(v40) = 0;
LABEL_89:
        v54 = 68;
LABEL_90:
        *(_DWORD *)(a1 + v54) = v40;
        goto LABEL_103;
      case 5:
        if (!v31)
          goto LABEL_80;
        if ((*(_BYTE *)(a1 + 76) & 0x40) == 0)
        {
          PBReaderReadString();
          v51 = objc_claimAutoreleasedReturnValue();
          v52 = *(void **)(a1 + 48);
          *(_QWORD *)(a1 + 48) = v51;
          goto LABEL_79;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_115;
        v55 = 2 * *(_BYTE *)(a1 + 76);
        goto LABEL_101;
      case 6:
        if (!v31)
          goto LABEL_80;
        if ((*(_BYTE *)(a1 + 76) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_115;
          v55 = 32 * *(_BYTE *)(a1 + 76);
          goto LABEL_101;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_115;
        v61 = objc_alloc_init(GEOPDPlaceRequest);
        if (!GEOPDPlaceRequestReadAllFrom((uint64_t)v61, (void *)v3, v9 & 1))
          goto LABEL_114;
        PBReaderRecallMark();
        v36 = 16;
        goto LABEL_78;
      case 7:
        if (!v31)
        {
LABEL_80:
          v53 = PBReaderSkipValueWithTag();
          v18 = (int *)MEMORY[0x1E0D82BC8];
          v15 = v62;
          if ((v53 & 1) == 0)
          {
LABEL_113:
            v56 = 0;
            goto LABEL_116;
          }
LABEL_103:
          if (!(v15 & 1 | (v7 != 0)))
            goto LABEL_104;
          continue;
        }
        if ((*(_BYTE *)(a1 + 76) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_115;
          v55 = 16 * *(_BYTE *)(a1 + 76);
LABEL_101:
          v7 += v55 >> 7;
LABEL_102:
          v15 = v62;
          v18 = (int *)MEMORY[0x1E0D82BC8];
          goto LABEL_103;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_115;
        v61 = objc_alloc_init(GEOPDPlaceResponse);
        if (GEOPDPlaceResponseReadAllFrom((uint64_t)v61, (void *)v3, v9 & 1))
        {
          PBReaderRecallMark();
          v36 = 24;
LABEL_78:
          v52 = *(void **)(a1 + v36);
          *(_QWORD *)(a1 + v36) = v61;
LABEL_79:

          --v7;
          goto LABEL_102;
        }
LABEL_114:

LABEL_115:
        v56 = 0;
        v15 = v62;
        v18 = (int *)MEMORY[0x1E0D82BC8];
LABEL_116:
        *(_BYTE *)(a1 + 76) |= 0x10u;
        *(_BYTE *)(a1 + 76) |= 0x20u;
        *(_BYTE *)(a1 + 76) |= 0x40u;
        *(_BYTE *)(a1 + 76) |= 4u;
        *(_BYTE *)(a1 + 76) |= 8u;
        if ((v56 & 1) != 0)
        {
LABEL_117:
          v3 = *(_BYTE *)(v3 + *v18) == 0;
          if ((v15 & 1) != 0)
            goto LABEL_118;
        }
        else
        {
          v3 = 0;
          if ((v15 & 1) != 0)
          {
LABEL_118:
            v59 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = 0;

          }
        }
        return v3;
      default:
        v37 = PBReaderSkipValueWithTag();
        v18 = (int *)MEMORY[0x1E0D82BC8];
        v15 = v62;
        if (!v37)
          goto LABEL_113;
        goto LABEL_103;
    }
  }
}

void sub_1893AA46C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893AA690(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893AA7D0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893AA914(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893AB110(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORPCorrectedSearchCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  objc_msgSend(a1[4], "readAll:", 1);
  objc_msgSend(a1[5], "readAll:", 1);
  objc_msgSend(a1[2], "readAll:", 1);
  return objc_msgSend(a1[3], "readAll:", 1);
}

unint64_t GEORPCorrectedSearchReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 60))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEORPCorrectedSearchReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 60) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEORPCorrectedSearchReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEORPCorrectedSearchReadAllFrom_initialTag;
  Specified = GEORPCorrectedSearchReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEORPCorrectedSearchCallReadAllRecursiveWithoutSynchronized((id *)a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_1893AB308(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPCorrectedSearchReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORPCorrectedSearchReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1893AB368(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPCorrectedSearchIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  _BOOL8 v28;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 == 2 && PBReaderPlaceMark() && GEOPlaceSearchRequestIsValid(a1))
            goto LABEL_54;
          goto LABEL_57;
        case 2u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPlaceSearchResponseIsValid(a1))
            goto LABEL_57;
          goto LABEL_54;
        case 3u:
          if ((v8 & 7) != 0)
            goto LABEL_57;
          v17 = 0;
          while (1)
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
              goto LABEL_43;
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if (v21 < 0)
            {
              v22 = v17++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_55;
          }
        case 4u:
          if ((v8 & 7) != 0)
            goto LABEL_57;
          v23 = 0;
          break;
        case 5u:
          if (v15 == 2)
            goto LABEL_45;
          goto LABEL_57;
        case 6u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDPlaceRequestIsValid(a1))
            goto LABEL_57;
          goto LABEL_54;
        case 7u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDPlaceResponseIsValid(a1))
            goto LABEL_57;
LABEL_54:
          PBReaderRecallMark();
          continue;
        default:
LABEL_45:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_57:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v24 = *v2;
        v25 = *(_QWORD *)&a1[v24];
        v26 = v25 + 1;
        if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
          break;
        v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
        *(_QWORD *)&a1[v24] = v26;
        if (v27 < 0)
        {
          v22 = v23++ > 8;
          if (!v22)
            continue;
        }
        goto LABEL_55;
      }
LABEL_43:
      a1[*v4] = 1;
LABEL_55:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v28 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v28;
}

void sub_1893AB89C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORPCorrectedSearchIsDirty(uint64_t a1)
{
  int v2;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  v2 = *(char *)(a1 + 76);
  if (v2 < 0)
    return 1;
  if ((v2 & 0x10) != 0)
  {
    if ((GEOPlaceSearchRequestIsDirty(*(os_unfair_lock_s **)(a1 + 32)) & 1) != 0)
      return 1;
    LOBYTE(v2) = *(_BYTE *)(a1 + 76);
  }
  if ((v2 & 0x20) == 0)
    goto LABEL_8;
  if ((GEOPlaceSearchResponseIsDirty(*(os_unfair_lock_s **)(a1 + 40)) & 1) != 0)
    return 1;
  LOBYTE(v2) = *(_BYTE *)(a1 + 76);
LABEL_8:
  if ((v2 & 0x40) != 0)
    return 1;
  if ((v2 & 4) != 0)
  {
    if ((GEOPDPlaceRequestIsDirty(*(os_unfair_lock_s **)(a1 + 16)) & 1) != 0)
      return 1;
    LOBYTE(v2) = *(_BYTE *)(a1 + 76);
  }
  if ((v2 & 8) != 0)
    return (uint64_t)GEOPDPlaceResponseIsDirty(*(os_unfair_lock_s **)(a1 + 24));
  else
    return 0;
}

os_unfair_lock_s *GEORPCorrectedSearchIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEORPCorrectedSearchIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 16);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void GEORPCorrectedSearchClearSensitiveFields(void *a1, uint64_t a2, int a3)
{
  void *v6;
  unsigned int v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  int HasSensitiveFields;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  int v18;
  void *v19;
  id v20;

  if (a3)
  {
    if (objc_msgSend(a1, "hasPlaceSearchRequest")
      && (objc_msgSend(a1, "placeSearchRequest"),
          v6 = (void *)objc_claimAutoreleasedReturnValue(),
          v7 = GEOPlaceSearchRequestHasSensitiveFields(v6),
          v6,
          v7))
    {
      objc_msgSend(a1, "placeSearchRequest");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      v9 = (void *)objc_msgSend(v8, "copy");

      objc_msgSend(v9, "location");
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v10, "clearSensitiveFields:", a2);

      objc_msgSend(a1, "setPlaceSearchRequest:", v9);
    }
    else
    {
      objc_msgSend(a1, "placeSearchRequest");
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v9, "clearSensitiveFields:", a2);
    }

    if (objc_msgSend(a1, "hasPlaceSearchResponse"))
    {
      objc_msgSend(a1, "placeSearchResponse");
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      HasSensitiveFields = GEOPlaceSearchResponseHasSensitiveFields(v12);

      if (HasSensitiveFields)
      {
        objc_msgSend(a1, "placeSearchResponse");
        v14 = (void *)objc_claimAutoreleasedReturnValue();
        v15 = (void *)objc_msgSend(v14, "copy");

        GEOPlaceSearchResponseClearSensitiveFields((uint64_t)v15, a2, 0);
        objc_msgSend(a1, "setPlaceSearchResponse:", v15);

        goto LABEL_11;
      }
    }
  }
  else
  {
    objc_msgSend(a1, "placeSearchRequest");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "clearSensitiveFields:", a2);

  }
  objc_msgSend(a1, "placeSearchResponse");
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v16, "clearSensitiveFields:", a2);

  if (!a3)
  {
LABEL_14:
    objc_msgSend(a1, "placeRequest");
    v20 = (id)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v20, "clearSensitiveFields:", a2);
    goto LABEL_15;
  }
LABEL_11:
  if (!objc_msgSend(a1, "hasPlaceRequest"))
    goto LABEL_14;
  objc_msgSend(a1, "placeRequest");
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  v18 = GEOPDPlaceRequestHasSensitiveFields(v17, a2);

  if (!v18)
    goto LABEL_14;
  objc_msgSend(a1, "placeRequest");
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  v20 = (id)objc_msgSend(v19, "copy");

  GEOPDPlaceRequestClearSensitiveFields(v20, a2, 0);
  objc_msgSend(a1, "setPlaceRequest:", v20);
LABEL_15:

}

uint64_t GEORPCorrectedSearchHasSensitiveFields(void *a1, uint64_t a2)
{
  void *v4;
  uint64_t HasSensitiveFields;
  void *v6;
  void *v7;

  if (!a1)
    return 0;
  objc_msgSend(a1, "placeSearchRequest");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  if ((GEOPlaceSearchRequestHasSensitiveFields(v4) & 1) != 0)
  {
    HasSensitiveFields = 1;
  }
  else
  {
    objc_msgSend(a1, "placeSearchResponse");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    if ((GEOPlaceSearchResponseHasSensitiveFields(v6) & 1) != 0)
    {
      HasSensitiveFields = 1;
    }
    else
    {
      objc_msgSend(a1, "placeRequest");
      v7 = (void *)objc_claimAutoreleasedReturnValue();
      HasSensitiveFields = GEOPDPlaceRequestHasSensitiveFields(v7, a2);

    }
  }

  return HasSensitiveFields;
}

void sub_1893AC098(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893AC63C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPCurrentEnvironmentManifestURLsReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  int *v15;
  int *v16;
  int *v17;
  int *v18;
  int *v19;
  char v20;
  unsigned int v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  int v28;
  unint64_t v30;
  BOOL v31;
  int *v32;
  int v33;
  int v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  GEORPManifestURL *v38;
  void *v39;
  int v40;
  char v41;
  char v42;
  int v43;
  char v44;
  void *v45;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1)
      + (*(_BYTE *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v8])
    {
      case -3:
        v7 = 1;
        goto LABEL_6;
      case -2:
        v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v10 | (v11 > 1);
        if (v10 & 1 | (v11 > 1) | v7 & 1)
          v15 = 0;
        else
          v15 = a3;
        v16 = (int *)MEMORY[0x1E0D82BF0];
        v17 = (int *)MEMORY[0x1E0D82BC8];
        v18 = (int *)MEMORY[0x1E0D82BB8];
        v19 = &OBJC_IVAR___GEOPDRelatedEntitySection__reader;
        break;
      default:
        ++v11;
LABEL_6:
        v12 = v9;
        v13 = v10;
LABEL_8:
        ++v8;
        v9 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v16) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v17))
      goto LABEL_61;
    v20 = 0;
    v21 = 0;
    v22 = 0;
    while (1)
    {
      v23 = *v16;
      v24 = *(_QWORD *)(v3 + v23);
      v25 = v24 + 1;
      if (v24 == -1 || v25 > *(_QWORD *)(v3 + *v6))
        break;
      v26 = *(_BYTE *)(*(_QWORD *)(v3 + *v18) + v24);
      *(_QWORD *)(v3 + v23) = v25;
      v22 |= (unint64_t)(v26 & 0x7F) << v20;
      if ((v26 & 0x80) == 0)
        goto LABEL_23;
      v20 += 7;
      if (v21++ >= 9)
      {
        v22 = 0;
        v28 = *(unsigned __int8 *)(v3 + *v17);
        goto LABEL_25;
      }
    }
    *(_BYTE *)(v3 + *v17) = 1;
LABEL_23:
    v28 = *(unsigned __int8 *)(v3 + *v17);
    if (*(_BYTE *)(v3 + *v17))
      v22 = 0;
LABEL_25:
    if (v28 || (v22 & 7) == 4)
    {
LABEL_61:
      if ((v14 & 1) != 0)
      {
        v42 = 1;
        goto LABEL_72;
      }
      if (v15)
      {
        while (1)
        {
          v43 = *v15++;
          v44 = 1;
          switch(v43)
          {
            case 0:
              goto LABEL_73;
            case 1:
              goto LABEL_67;
            case 2:
              v44 = 2;
              goto LABEL_67;
            case 3:
              v44 = 4;
LABEL_67:
              *(_BYTE *)(a1 + v19[355]) |= v44;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_73;
    }
    v30 = v22 >> 3;
    v31 = v14;
    if (!((v15 == 0) | v14 & 1))
    {
      v32 = v15;
      do
      {
        v34 = *v32++;
        v33 = v34;
        v31 = v34 != 0;
        if (v34)
          v35 = v33 == (_DWORD)v30;
        else
          v35 = 1;
      }
      while (!v35);
    }
    if ((_DWORD)v30 == 3)
      break;
    if ((_DWORD)v30 == 2)
    {
      if (v31)
      {
        if ((*(_BYTE *)(a1 + v19[355]) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_69:
            v42 = 0;
            goto LABEL_71;
          }
          v8 += *(unsigned __int8 *)(a1 + v19[355]) << 30 >> 31;
        }
        else
        {
          PBReaderReadString();
          v36 = objc_claimAutoreleasedReturnValue();
          v37 = 24;
LABEL_50:
          v39 = *(void **)(a1 + v37);
          *(_QWORD *)(a1 + v37) = v36;

          --v8;
        }
        goto LABEL_59;
      }
    }
    else
    {
      if ((_DWORD)v30 != 1)
      {
        v40 = PBReaderSkipValueWithTag();
        v17 = (int *)MEMORY[0x1E0D82BC8];
        if (!v40)
          goto LABEL_68;
        goto LABEL_60;
      }
      if (v31)
      {
        if ((*(_BYTE *)(a1 + v19[355]) & 1) == 0)
        {
          PBReaderReadString();
          v36 = objc_claimAutoreleasedReturnValue();
          v37 = 16;
          goto LABEL_50;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_69;
        v8 -= *(_BYTE *)(a1 + v19[355]) & 1;
LABEL_59:
        v17 = (int *)MEMORY[0x1E0D82BC8];
        goto LABEL_60;
      }
    }
LABEL_53:
    v41 = PBReaderSkipValueWithTag();
    v17 = (int *)MEMORY[0x1E0D82BC8];
    if ((v41 & 1) == 0)
    {
LABEL_68:
      v42 = 0;
      goto LABEL_72;
    }
LABEL_60:
    if (!(v14 & 1 | (v8 != 0)))
      goto LABEL_61;
  }
  if (!v31 || (*(_BYTE *)(a1 + v19[355]) & 4) != 0)
    goto LABEL_53;
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_69;
  v38 = objc_alloc_init(GEORPManifestURL);
  if (GEORPManifestURLReadAllFrom((uint64_t)v38, (void *)v3, v9 & 1))
  {
    PBReaderRecallMark();
    -[GEORPCurrentEnvironmentManifestURLs _addNoFlagsUrl:](a1, v38);

    v19 = &OBJC_IVAR___GEOPDRelatedEntitySection__reader;
    goto LABEL_59;
  }

  v42 = 0;
  v19 = &OBJC_IVAR___GEOPDRelatedEntitySection__reader;
LABEL_71:
  v17 = (int *)MEMORY[0x1E0D82BC8];
LABEL_72:
  *(_BYTE *)(a1 + v19[355]) |= 1u;
  *(_BYTE *)(a1 + v19[355]) |= 2u;
  *(_BYTE *)(a1 + v19[355]) |= 4u;
  if ((v42 & 1) != 0)
  {
LABEL_73:
    v3 = *(_BYTE *)(v3 + *v17) == 0;
    if ((v14 & 1) == 0)
      return v3;
    goto LABEL_74;
  }
  v3 = 0;
  if ((v14 & 1) != 0)
  {
LABEL_74:
    v45 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_1893ACC38(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893ACD78(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893AD5F8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEORPCurrentEnvironmentManifestURLsCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _BYTE v10[128];
  uint64_t v11;

  v11 = *MEMORY[0x1E0C80C00];
  v6 = 0u;
  v7 = 0u;
  v8 = 0u;
  v9 = 0u;
  v1 = *(id *)(a1 + 32);
  v2 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
  if (v2)
  {
    v3 = v2;
    v4 = *(_QWORD *)v7;
    do
    {
      v5 = 0;
      do
      {
        if (*(_QWORD *)v7 != v4)
          objc_enumerationMutation(v1);
        objc_msgSend(*(id *)(*((_QWORD *)&v6 + 1) + 8 * v5++), "readAll:", 1, (_QWORD)v6);
      }
      while (v3 != v5);
      v3 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
    }
    while (v3);
  }

}

unint64_t GEORPCurrentEnvironmentManifestURLsReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEORPCurrentEnvironmentManifestURLsReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEORPCurrentEnvironmentManifestURLsReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEORPCurrentEnvironmentManifestURLsReadAllFrom_initialTag;
  Specified = GEORPCurrentEnvironmentManifestURLsReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEORPCurrentEnvironmentManifestURLsCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_1893AD880(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPCurrentEnvironmentManifestURLsReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORPCurrentEnvironmentManifestURLsReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1893AD8E0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPCurrentEnvironmentManifestURLsIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unint64_t v17;
  _BOOL8 v18;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      v17 = v8 >> 3;
      if ((v8 >> 3) == 3)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEORPManifestURLIsValid(a1))
        {
LABEL_31:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else
      {
        if ((_DWORD)v17 == 2)
        {
          if (v15 != 2)
            goto LABEL_31;
        }
        else if ((_DWORD)v17 == 1 && v15 != 2)
        {
          goto LABEL_31;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_31;
      }
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v18 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v18;
}

BOOL GEORPManifestURLIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  _BOOL8 v17;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_27;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        goto LABEL_27;
      if ((v8 >> 3) == 2)
        break;
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2)
          goto LABEL_29;
        goto LABEL_23;
      }
      if (!PBReaderSkipValueWithTag())
      {
LABEL_29:
        v17 = 0;
        goto LABEL_28;
      }
LABEL_26:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_27;
    }
    if (v15 != 2)
      goto LABEL_29;
LABEL_23:
    if ((PBReaderSkipValueWithTag() & 1) == 0)
      goto LABEL_29;
    goto LABEL_26;
  }
LABEL_27:
  v17 = a1[*v4] == 0;
LABEL_28:
  PBReaderRecallMark();
  return v17;
}

void sub_1893ADED0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORPCurrentEnvironmentManifestURLsIsDirty(uint64_t a1)
{
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t i;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _BYTE v11[128];
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  if ((*(_BYTE *)(a1 + 52) & 0xF) != 0)
    return 1;
  if ((*(_BYTE *)(a1 + 52) & 4) == 0)
    return 0;
  v9 = 0u;
  v10 = 0u;
  v7 = 0u;
  v8 = 0u;
  v3 = *(id *)(a1 + 32);
  v2 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
  if (v2)
  {
    v4 = *(_QWORD *)v8;
    while (2)
    {
      for (i = 0; i != v2; ++i)
      {
        if (*(_QWORD *)v8 != v4)
          objc_enumerationMutation(v3);
        if (GEORPManifestURLIsDirty(*(_QWORD *)(*((_QWORD *)&v7 + 1) + 8 * i)))
        {
          v2 = 1;
          goto LABEL_15;
        }
      }
      v2 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
      if (v2)
        continue;
      break;
    }
  }
LABEL_15:

  return v2;
}

os_unfair_lock_s *GEORPCurrentEnvironmentManifestURLsIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEORPCurrentEnvironmentManifestURLsIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 12);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_1893AE3D0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893AEA0C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPDetailsReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  char v15;
  int *v16;
  int *v17;
  int *v18;
  int *v19;
  char v20;
  unsigned int v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  BOOL v27;
  int v28;
  unint64_t v30;
  BOOL v31;
  int *v32;
  int v33;
  int v34;
  BOOL v35;
  char v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  int v47;
  char v48;
  unsigned int v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  char v53;
  char v54;
  unsigned int v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  char v59;
  char v60;
  uint64_t v61;
  __int16 v62;
  char v63;
  int v64;
  __int16 v65;
  void *v66;
  GEOMapRegion *v68;
  char v69;
  char v70;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 68);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 64));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 88)), (uint16x4_t)0xFFF8FFFCFFF9FFFALL), (int8x8_t)0x1000100010001))+ ((*(_WORD *)(a1 + 88) >> 5) & 1)+ ((*(_WORD *)(a1 + 88) >> 3) & 1));
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v7])
    {
      case -3:
        v8 = 1;
        goto LABEL_6;
      case -2:
        v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v11 > 3;
        v15 = v10 | v14;
        if ((((v10 | v14) | v8) & 1) != 0)
          v16 = 0;
        else
          v16 = a3;
        v70 = (v16 == 0) | v15;
        v17 = (int *)MEMORY[0x1E0D82BF0];
        v18 = (int *)MEMORY[0x1E0D82BC8];
        v19 = (int *)MEMORY[0x1E0D82BB8];
        v69 = v10 | v14;
        break;
      default:
        ++v11;
LABEL_6:
        v12 = v9;
        v13 = v10;
LABEL_8:
        ++v7;
        v9 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v17) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v18))
      goto LABEL_120;
    v20 = 0;
    v21 = 0;
    v22 = 0;
    while (1)
    {
      v23 = *v17;
      v24 = *(_QWORD *)(v3 + v23);
      v25 = v24 + 1;
      if (v24 == -1 || v25 > *(_QWORD *)(v3 + *v6))
        break;
      v26 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v24);
      *(_QWORD *)(v3 + v23) = v25;
      v22 |= (unint64_t)(v26 & 0x7F) << v20;
      if ((v26 & 0x80) == 0)
        goto LABEL_23;
      v20 += 7;
      v27 = v21++ >= 9;
      if (v27)
      {
        v22 = 0;
        v28 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(_BYTE *)(v3 + *v18) = 1;
LABEL_23:
    v28 = *(unsigned __int8 *)(v3 + *v18);
    if (*(_BYTE *)(v3 + *v18))
      v22 = 0;
LABEL_25:
    if (v28 || (v22 & 7) == 4)
    {
LABEL_120:
      if ((v15 & 1) != 0)
      {
        v63 = 1;
        goto LABEL_133;
      }
      if (v16)
      {
        while (1)
        {
          v64 = *v16++;
          v65 = 128;
          switch(v64)
          {
            case 0:
              goto LABEL_134;
            case 2:
              goto LABEL_129;
            case 3:
              v65 = 64;
              goto LABEL_129;
            case 4:
              v65 = 16;
              goto LABEL_129;
            case 6:
              v65 = 256;
              goto LABEL_129;
            case 7:
              v65 = 32;
              goto LABEL_129;
            case 10:
              v65 = 8;
LABEL_129:
              *(_WORD *)(a1 + 88) |= v65;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_134;
    }
    v30 = v22 >> 3;
    v31 = v15;
    if ((v70 & 1) == 0)
    {
      v32 = v16;
      do
      {
        v34 = *v32++;
        v33 = v34;
        v31 = v34 != 0;
        if (v34)
          v35 = v33 == (_DWORD)v30;
        else
          v35 = 1;
      }
      while (!v35);
    }
    switch((int)v30)
    {
      case 1:
        if ((v8 & 1) == 0)
          goto LABEL_92;
        v36 = 0;
        v37 = 0;
        v38 = 0;
        *(_WORD *)(a1 + 88) |= 2u;
        while (1)
        {
          v39 = *v17;
          v40 = *(_QWORD *)(v3 + v39);
          v41 = v40 + 1;
          if (v40 == -1 || v41 > *(_QWORD *)(v3 + *v6))
            break;
          v42 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v40);
          *(_QWORD *)(v3 + v39) = v41;
          v38 |= (unint64_t)(v42 & 0x7F) << v36;
          if ((v42 & 0x80) == 0)
            goto LABEL_95;
          v36 += 7;
          v27 = v37++ >= 9;
          if (v27)
          {
            LODWORD(v38) = 0;
            goto LABEL_97;
          }
        }
        *(_BYTE *)(v3 + *v18) = 1;
LABEL_95:
        if (*(_BYTE *)(v3 + *v18))
          LODWORD(v38) = 0;
LABEL_97:
        v61 = 80;
        goto LABEL_106;
      case 2:
        if (!v31)
          goto LABEL_92;
        if ((*(_WORD *)(a1 + 88) & 0x80) == 0)
        {
          PBReaderReadString();
          v43 = objc_claimAutoreleasedReturnValue();
          v44 = 48;
          goto LABEL_51;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_132;
        v62 = *(_WORD *)(a1 + 88) << 8;
        goto LABEL_117;
      case 3:
        if (!v31)
          goto LABEL_92;
        if ((*(_WORD *)(a1 + 88) & 0x40) == 0)
        {
          PBReaderReadString();
          v43 = objc_claimAutoreleasedReturnValue();
          v44 = 40;
LABEL_51:
          v45 = *(void **)(a1 + v44);
          *(_QWORD *)(a1 + v44) = v43;
          goto LABEL_91;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_132;
        v62 = *(_WORD *)(a1 + 88) << 9;
        goto LABEL_117;
      case 4:
        if (!v31)
          goto LABEL_92;
        if ((*(_WORD *)(a1 + 88) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_132;
          v62 = *(_WORD *)(a1 + 88) << 11;
          goto LABEL_117;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_132;
        v68 = objc_alloc_init(GEOMapRegion);
        if (!GEOMapRegionReadAllFrom((uint64_t)v68, (void *)v3))
          goto LABEL_131;
        PBReaderRecallMark();
        v46 = 24;
        goto LABEL_90;
      case 6:
        if (!v31 || (*(_WORD *)(a1 + 88) & 0x100) != 0)
          goto LABEL_92;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_132;
        v68 = objc_alloc_init(GEOPDPlace);
        if (!GEOPDPlaceReadAllFrom((uint64_t)v68, (void *)v3, v9 & 1))
          goto LABEL_131;
        PBReaderRecallMark();
        -[GEORPDetails _addNoFlagsPlace:](a1, v68);

        goto LABEL_118;
      case 7:
        if (!v31)
          goto LABEL_92;
        if ((*(_WORD *)(a1 + 88) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_132;
          v62 = *(_WORD *)(a1 + 88) << 10;
          goto LABEL_117;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_132;
        v68 = objc_alloc_init(GEORPUpdatedLabel);
        if (!GEORPUpdatedLabelReadAllFrom((uint64_t)v68, (void *)v3, v9 & 1))
          goto LABEL_131;
        PBReaderRecallMark();
        v46 = 32;
        goto LABEL_90;
      case 8:
        if ((v8 & 1) == 0)
          goto LABEL_92;
        v48 = 0;
        v49 = 0;
        v38 = 0;
        *(_WORD *)(a1 + 88) |= 1u;
        while (2)
        {
          v50 = *v17;
          v51 = *(_QWORD *)(v3 + v50);
          v52 = v51 + 1;
          if (v51 == -1 || v52 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v53 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v51);
            *(_QWORD *)(v3 + v50) = v52;
            v38 |= (unint64_t)(v53 & 0x7F) << v48;
            if (v53 < 0)
            {
              v48 += 7;
              v27 = v49++ >= 9;
              if (v27)
              {
                LODWORD(v38) = 0;
                goto LABEL_101;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          LODWORD(v38) = 0;
LABEL_101:
        v61 = 76;
        goto LABEL_106;
      case 9:
        if ((v8 & 1) == 0)
          goto LABEL_92;
        v54 = 0;
        v55 = 0;
        v38 = 0;
        *(_WORD *)(a1 + 88) |= 4u;
        while (2)
        {
          v56 = *v17;
          v57 = *(_QWORD *)(v3 + v56);
          v58 = v57 + 1;
          if (v57 == -1 || v58 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v59 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v57);
            *(_QWORD *)(v3 + v56) = v58;
            v38 |= (unint64_t)(v59 & 0x7F) << v54;
            if (v59 < 0)
            {
              v54 += 7;
              v27 = v55++ >= 9;
              if (v27)
              {
                LODWORD(v38) = 0;
                goto LABEL_105;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          LODWORD(v38) = 0;
LABEL_105:
        v61 = 84;
LABEL_106:
        *(_DWORD *)(a1 + v61) = v38;
        goto LABEL_119;
      case 10:
        if (!v31)
        {
LABEL_92:
          v60 = PBReaderSkipValueWithTag();
          v18 = (int *)MEMORY[0x1E0D82BC8];
          v15 = v69;
          if ((v60 & 1) == 0)
          {
LABEL_130:
            v63 = 0;
            goto LABEL_133;
          }
LABEL_119:
          if (!(v15 & 1 | (v7 != 0)))
            goto LABEL_120;
          continue;
        }
        if ((*(_WORD *)(a1 + 88) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_132;
          v62 = *(_WORD *)(a1 + 88) << 12;
LABEL_117:
          v7 += v62 >> 15;
LABEL_118:
          v15 = v69;
          v18 = (int *)MEMORY[0x1E0D82BC8];
          goto LABEL_119;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_132;
        v68 = objc_alloc_init(GEORPButton);
        if (GEORPButtonReadAllFrom((uint64_t)v68, (void *)v3))
        {
          PBReaderRecallMark();
          v46 = 16;
LABEL_90:
          v45 = *(void **)(a1 + v46);
          *(_QWORD *)(a1 + v46) = v68;
LABEL_91:

          --v7;
          goto LABEL_118;
        }
LABEL_131:

LABEL_132:
        v63 = 0;
        v15 = v69;
        v18 = (int *)MEMORY[0x1E0D82BC8];
LABEL_133:
        *(_WORD *)(a1 + 88) |= 0x80u;
        *(_WORD *)(a1 + 88) |= 0x40u;
        *(_WORD *)(a1 + 88) |= 0x10u;
        *(_WORD *)(a1 + 88) |= 0x100u;
        *(_WORD *)(a1 + 88) |= 0x20u;
        *(_WORD *)(a1 + 88) |= 8u;
        if ((v63 & 1) != 0)
        {
LABEL_134:
          v3 = *(_BYTE *)(v3 + *v18) == 0;
          if ((v15 & 1) != 0)
            goto LABEL_135;
        }
        else
        {
          v3 = 0;
          if ((v15 & 1) != 0)
          {
LABEL_135:
            v66 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = 0;

          }
        }
        return v3;
      default:
        v47 = PBReaderSkipValueWithTag();
        v18 = (int *)MEMORY[0x1E0D82BC8];
        v15 = v69;
        if (!v47)
          goto LABEL_130;
        goto LABEL_119;
    }
  }
}

void sub_1893AF438(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893AF57C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893AF6C0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893AF9F4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893AFF0C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893B0CC8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORPDetailsCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _BYTE v12[128];
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  objc_msgSend(a1[3], "readAll:", 1);
  v10 = 0u;
  v11 = 0u;
  v8 = 0u;
  v9 = 0u;
  v2 = a1[7];
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v9;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v9 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v8 + 1) + 8 * v6++), "readAll:", 1, (_QWORD)v8);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
    }
    while (v4);
  }

  objc_msgSend(a1[4], "readAll:", 1);
  return objc_msgSend(a1[2], "readAll:", 1);
}

unint64_t GEORPDetailsReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 68))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEORPDetailsReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 72));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 64) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 68) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEORPDetailsReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEORPDetailsReadAllFrom_initialTag;
  Specified = GEORPDetailsReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEORPDetailsCallReadAllRecursiveWithoutSynchronized((id *)a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return Specified;
}

void sub_1893B0F94(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPDetailsReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORPDetailsReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1893B0FF4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPDetailsIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  int v32;
  _BOOL8 v33;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0)
            goto LABEL_68;
          v17 = 0;
          while (1)
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
              goto LABEL_61;
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if (v21 < 0)
            {
              v22 = v17++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_66;
          }
        case 2u:
          if (v15 == 2)
            goto LABEL_35;
          goto LABEL_68;
        case 3u:
          if (v15 == 2)
            goto LABEL_35;
          goto LABEL_68;
        case 4u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOMapRegionIsValid(a1))
            goto LABEL_68;
          goto LABEL_65;
        case 6u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDPlaceIsValid(a1))
            goto LABEL_68;
          goto LABEL_65;
        case 7u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPUpdatedLabelIsValid(a1))
            goto LABEL_68;
          goto LABEL_65;
        case 8u:
          if ((v8 & 7) != 0)
            goto LABEL_68;
          v23 = 0;
          while (1)
          {
            v24 = *v2;
            v25 = *(_QWORD *)&a1[v24];
            v26 = v25 + 1;
            if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
              goto LABEL_61;
            v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
            *(_QWORD *)&a1[v24] = v26;
            if (v27 < 0)
            {
              v22 = v23++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_66;
          }
        case 9u:
          if ((v8 & 7) != 0)
            goto LABEL_68;
          v28 = 0;
          break;
        case 0xAu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPButtonIsValid(a1))
            goto LABEL_68;
LABEL_65:
          PBReaderRecallMark();
          continue;
        default:
LABEL_35:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_68:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v29 = *v2;
        v30 = *(_QWORD *)&a1[v29];
        v31 = v30 + 1;
        if (v30 == -1 || v31 > *(_QWORD *)&a1[*v3])
          break;
        v32 = *(char *)(*(_QWORD *)&a1[*v5] + v30);
        *(_QWORD *)&a1[v29] = v31;
        if (v32 < 0)
        {
          v22 = v28++ > 8;
          if (!v22)
            continue;
        }
        goto LABEL_66;
      }
LABEL_61:
      a1[*v4] = 1;
LABEL_66:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v33 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v33;
}

BOOL GEORPUpdatedLabelIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  _BOOL8 v17;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      if ((v8 >> 3) == 2)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOLatLngIsValid(a1))
          goto LABEL_29;
        PBReaderRecallMark();
      }
      else if ((v8 >> 3) == 1 && v15 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_29:
        PBReaderRecallMark();
        return 0;
      }
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

void sub_1893B185C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORPDetailsIsDirty(uint64_t a1)
{
  __int16 v2;
  uint64_t v3;
  id v5;
  uint64_t v6;
  uint64_t i;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _BYTE v12[128];
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  v2 = *(_WORD *)(a1 + 88);
  if ((v2 & 0x3D0) != 0)
    return 1;
  if ((v2 & 0x20) != 0)
  {
    if (GEORPUpdatedLabelIsDirty(*(_QWORD *)(a1 + 32)))
      return 1;
    v2 = *(_WORD *)(a1 + 88);
  }
  if ((v2 & 8) != 0)
    return 1;
  if ((v2 & 0x100) == 0)
    return 0;
  v10 = 0u;
  v11 = 0u;
  v8 = 0u;
  v9 = 0u;
  v5 = *(id *)(a1 + 56);
  v3 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
  if (v3)
  {
    v6 = *(_QWORD *)v9;
    while (2)
    {
      for (i = 0; i != v3; ++i)
      {
        if (*(_QWORD *)v9 != v6)
          objc_enumerationMutation(v5);
        if ((GEOPDPlaceIsDirty(*(os_unfair_lock_s **)(*((_QWORD *)&v8 + 1) + 8 * i)) & 1) != 0)
        {
          v3 = 1;
          goto LABEL_20;
        }
      }
      v3 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
      if (v3)
        continue;
      break;
    }
  }
LABEL_20:

  return v3;
}

os_unfair_lock_s *GEORPDetailsIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEORPDetailsIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 18);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_1893B2084(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893B29E0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPDirectionsEventReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  char v15;
  int *v16;
  int *v17;
  int *v18;
  int *v19;
  char v20;
  unsigned int v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  BOOL v27;
  int v28;
  unint64_t v30;
  BOOL v31;
  int *v32;
  int v33;
  int v34;
  BOOL v35;
  char v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  char v43;
  unsigned int v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  unsigned int v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  char v56;
  void *v57;
  int v58;
  char v59;
  unsigned int v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  char v64;
  char v65;
  unsigned int v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  char v70;
  char v71;
  unsigned int v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  char v77;
  char v78;
  uint64_t v79;
  __int16 v80;
  char v81;
  int v82;
  __int16 v83;
  void *v84;
  GEOLatLng *v86;
  char v87;
  char v88;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 68);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 64));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 96)), (uint16x4_t)0xFFF6FFF7FFF8FFF9), (int8x8_t)0x1000100010001))+ ((*(_WORD *)(a1 + 96) >> 6) & 1));
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v7])
    {
      case -3:
        v8 = 1;
        goto LABEL_6;
      case -2:
        v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v11 > 3;
        v15 = v10 | v14;
        if ((((v10 | v14) | v8) & 1) != 0)
          v16 = 0;
        else
          v16 = a3;
        v88 = (v16 == 0) | v15;
        v17 = (int *)MEMORY[0x1E0D82BF0];
        v18 = (int *)MEMORY[0x1E0D82BC8];
        v19 = (int *)MEMORY[0x1E0D82BB8];
        v87 = v10 | v14;
        break;
      default:
        ++v11;
LABEL_6:
        v12 = v9;
        v13 = v10;
LABEL_8:
        ++v7;
        v9 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v17) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v18))
      goto LABEL_146;
    v20 = 0;
    v21 = 0;
    v22 = 0;
    while (1)
    {
      v23 = *v17;
      v24 = *(_QWORD *)(v3 + v23);
      v25 = v24 + 1;
      if (v24 == -1 || v25 > *(_QWORD *)(v3 + *v6))
        break;
      v26 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v24);
      *(_QWORD *)(v3 + v23) = v25;
      v22 |= (unint64_t)(v26 & 0x7F) << v20;
      if ((v26 & 0x80) == 0)
        goto LABEL_23;
      v20 += 7;
      v27 = v21++ >= 9;
      if (v27)
      {
        v22 = 0;
        v28 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(_BYTE *)(v3 + *v18) = 1;
LABEL_23:
    v28 = *(unsigned __int8 *)(v3 + *v18);
    if (*(_BYTE *)(v3 + *v18))
      v22 = 0;
LABEL_25:
    if (v28 || (v22 & 7) == 4)
    {
LABEL_146:
      if ((v15 & 1) != 0)
      {
        v81 = 1;
        goto LABEL_158;
      }
      if (v16)
      {
        while (1)
        {
          v82 = *v16++;
          v83 = 256;
          switch(v82)
          {
            case 0:
              goto LABEL_159;
            case 3:
              goto LABEL_154;
            case 5:
              v83 = 128;
              goto LABEL_154;
            case 8:
              v83 = 512;
              goto LABEL_154;
            case 10:
              v83 = 1024;
              goto LABEL_154;
            case 11:
              v83 = 64;
LABEL_154:
              *(_WORD *)(a1 + 96) |= v83;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_159;
    }
    v30 = v22 >> 3;
    v31 = v15;
    if ((v88 & 1) == 0)
    {
      v32 = v16;
      do
      {
        v34 = *v32++;
        v33 = v34;
        v31 = v34 != 0;
        if (v34)
          v35 = v33 == (_DWORD)v30;
        else
          v35 = 1;
      }
      while (!v35);
    }
    switch((int)v30)
    {
      case 1:
        if ((v8 & 1) == 0)
          goto LABEL_106;
        v36 = 0;
        v37 = 0;
        v38 = 0;
        *(_WORD *)(a1 + 96) |= 0x20u;
        while (1)
        {
          v39 = *v17;
          v40 = *(_QWORD *)(v3 + v39);
          v41 = v40 + 1;
          if (v40 == -1 || v41 > *(_QWORD *)(v3 + *v6))
            break;
          v42 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v40);
          *(_QWORD *)(v3 + v39) = v41;
          v38 |= (unint64_t)(v42 & 0x7F) << v36;
          if ((v42 & 0x80) == 0)
            goto LABEL_109;
          v36 += 7;
          v27 = v37++ >= 9;
          if (v27)
          {
            LODWORD(v38) = 0;
            goto LABEL_111;
          }
        }
        *(_BYTE *)(v3 + *v18) = 1;
LABEL_109:
        if (*(_BYTE *)(v3 + *v18))
          LODWORD(v38) = 0;
LABEL_111:
        v79 = 92;
        goto LABEL_128;
      case 2:
        if ((v8 & 1) == 0)
          goto LABEL_106;
        v43 = 0;
        v44 = 0;
        v38 = 0;
        *(_WORD *)(a1 + 96) |= 2u;
        while (2)
        {
          v45 = *v17;
          v46 = *(_QWORD *)(v3 + v45);
          v47 = v46 + 1;
          if (v46 == -1 || v47 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v48 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v46);
            *(_QWORD *)(v3 + v45) = v47;
            v38 |= (unint64_t)(v48 & 0x7F) << v43;
            if (v48 < 0)
            {
              v43 += 7;
              v27 = v44++ >= 9;
              if (v27)
              {
                LODWORD(v38) = 0;
                goto LABEL_115;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          LODWORD(v38) = 0;
LABEL_115:
        v79 = 76;
        goto LABEL_128;
      case 3:
        if (!v31)
          goto LABEL_106;
        if ((*(_WORD *)(a1 + 96) & 0x100) == 0)
        {
          PBReaderReadData();
          v49 = objc_claimAutoreleasedReturnValue();
          v50 = 40;
          goto LABEL_96;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_157;
        v80 = *(_WORD *)(a1 + 96) << 7;
        goto LABEL_143;
      case 4:
        if ((v8 & 1) == 0)
          goto LABEL_106;
        v51 = 0;
        v52 = 0;
        v38 = 0;
        *(_WORD *)(a1 + 96) |= 4u;
        while (2)
        {
          v53 = *v17;
          v54 = *(_QWORD *)(v3 + v53);
          v55 = v54 + 1;
          if (v54 == -1 || v55 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v56 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v54);
            *(_QWORD *)(v3 + v53) = v55;
            v38 |= (unint64_t)(v56 & 0x7F) << v51;
            if (v56 < 0)
            {
              v51 += 7;
              v27 = v52++ >= 9;
              if (v27)
              {
                LODWORD(v38) = 0;
                goto LABEL_119;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          LODWORD(v38) = 0;
LABEL_119:
        v79 = 80;
        goto LABEL_128;
      case 5:
        if (!v31)
          goto LABEL_106;
        if ((*(_WORD *)(a1 + 96) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_157;
          v80 = *(_WORD *)(a1 + 96) << 8;
LABEL_143:
          v7 += v80 >> 15;
          goto LABEL_144;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_157;
        v86 = objc_alloc_init(GEOLatLng);
        if (GEOLatLngReadAllFrom((uint64_t)v86, (void *)v3))
        {
          PBReaderRecallMark();
          v57 = *(void **)(a1 + 32);
          *(_QWORD *)(a1 + 32) = v86;
LABEL_97:

          --v7;
LABEL_144:
          v15 = v87;
          v18 = (int *)MEMORY[0x1E0D82BC8];
LABEL_145:
          if (!(v15 & 1 | (v7 != 0)))
            goto LABEL_146;
          continue;
        }

LABEL_157:
        v81 = 0;
        v15 = v87;
        v18 = (int *)MEMORY[0x1E0D82BC8];
LABEL_158:
        *(_WORD *)(a1 + 96) |= 0x100u;
        *(_WORD *)(a1 + 96) |= 0x80u;
        *(_WORD *)(a1 + 96) |= 0x200u;
        *(_WORD *)(a1 + 96) |= 0x400u;
        *(_WORD *)(a1 + 96) |= 0x40u;
        if ((v81 & 1) != 0)
        {
LABEL_159:
          v3 = *(_BYTE *)(v3 + *v18) == 0;
          if ((v15 & 1) != 0)
            goto LABEL_160;
        }
        else
        {
          v3 = 0;
          if ((v15 & 1) != 0)
          {
LABEL_160:
            v84 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = 0;

          }
        }
        return v3;
      case 7:
        if ((v8 & 1) == 0)
          goto LABEL_106;
        v59 = 0;
        v60 = 0;
        v38 = 0;
        *(_WORD *)(a1 + 96) |= 8u;
        while (2)
        {
          v61 = *v17;
          v62 = *(_QWORD *)(v3 + v61);
          v63 = v62 + 1;
          if (v62 == -1 || v63 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v64 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v62);
            *(_QWORD *)(v3 + v61) = v63;
            v38 |= (unint64_t)(v64 & 0x7F) << v59;
            if (v64 < 0)
            {
              v59 += 7;
              v27 = v60++ >= 9;
              if (v27)
              {
                LODWORD(v38) = 0;
                goto LABEL_123;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          LODWORD(v38) = 0;
LABEL_123:
        v79 = 84;
        goto LABEL_128;
      case 8:
        if (!v31)
          goto LABEL_106;
        if ((*(_WORD *)(a1 + 96) & 0x200) == 0)
        {
          PBReaderReadData();
          v49 = objc_claimAutoreleasedReturnValue();
          v50 = 48;
          goto LABEL_96;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_157;
        v80 = *(_WORD *)(a1 + 96) << 6;
        goto LABEL_143;
      case 9:
        if ((v8 & 1) == 0)
          goto LABEL_106;
        v65 = 0;
        v66 = 0;
        v38 = 0;
        *(_WORD *)(a1 + 96) |= 0x10u;
        while (2)
        {
          v67 = *v17;
          v68 = *(_QWORD *)(v3 + v67);
          v69 = v68 + 1;
          if (v68 == -1 || v69 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v70 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v68);
            *(_QWORD *)(v3 + v67) = v69;
            v38 |= (unint64_t)(v70 & 0x7F) << v65;
            if (v70 < 0)
            {
              v65 += 7;
              v27 = v66++ >= 9;
              if (v27)
              {
                LODWORD(v38) = 0;
                goto LABEL_127;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          LODWORD(v38) = 0;
LABEL_127:
        v79 = 88;
LABEL_128:
        *(_DWORD *)(a1 + v79) = v38;
        goto LABEL_145;
      case 10:
        if (!v31)
          goto LABEL_106;
        if ((*(_WORD *)(a1 + 96) & 0x400) == 0)
        {
          PBReaderReadString();
          v49 = objc_claimAutoreleasedReturnValue();
          v50 = 56;
          goto LABEL_96;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_157;
        v80 = 32 * *(_WORD *)(a1 + 96);
        goto LABEL_143;
      case 11:
        if (!v31)
          goto LABEL_106;
        if ((*(_WORD *)(a1 + 96) & 0x40) == 0)
        {
          PBReaderReadString();
          v49 = objc_claimAutoreleasedReturnValue();
          v50 = 24;
LABEL_96:
          v57 = *(void **)(a1 + v50);
          *(_QWORD *)(a1 + v50) = v49;
          goto LABEL_97;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_157;
        v80 = *(_WORD *)(a1 + 96) << 9;
        goto LABEL_143;
      case 12:
        if ((v8 & 1) != 0)
        {
          v71 = 0;
          v72 = 0;
          v73 = 0;
          *(_WORD *)(a1 + 96) |= 1u;
          while (1)
          {
            v74 = *v17;
            v75 = *(_QWORD *)(v3 + v74);
            v76 = v75 + 1;
            if (v75 == -1 || v76 > *(_QWORD *)(v3 + *v6))
              break;
            v77 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v75);
            *(_QWORD *)(v3 + v74) = v76;
            v73 |= (unint64_t)(v77 & 0x7F) << v71;
            if ((v77 & 0x80) == 0)
              goto LABEL_130;
            v71 += 7;
            v27 = v72++ >= 9;
            if (v27)
            {
              v73 = 0;
              goto LABEL_132;
            }
          }
          *(_BYTE *)(v3 + *v18) = 1;
LABEL_130:
          if (*(_BYTE *)(v3 + *v18))
            v73 = 0;
LABEL_132:
          *(_QWORD *)(a1 + 16) = v73;
        }
        else
        {
LABEL_106:
          v78 = PBReaderSkipValueWithTag();
          v18 = (int *)MEMORY[0x1E0D82BC8];
          v15 = v87;
          if ((v78 & 1) == 0)
          {
LABEL_155:
            v81 = 0;
            goto LABEL_158;
          }
        }
        goto LABEL_145;
      default:
        v58 = PBReaderSkipValueWithTag();
        v18 = (int *)MEMORY[0x1E0D82BC8];
        v15 = v87;
        if (!v58)
          goto LABEL_155;
        goto LABEL_145;
    }
  }
}

void sub_1893B359C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893B3754(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893B43C0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893B4500(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893B5A98(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPDirectionsEventReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 68))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEORPDirectionsEventReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 72));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 64) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 68) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEORPDirectionsEventReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEORPDirectionsEventReadAllFrom_initialTag;
  Specified = GEORPDirectionsEventReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    objc_msgSend(*(id *)(a1 + 32), "readAll:", 1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return Specified;
}

void sub_1893B5C3C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPDirectionsEventReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORPDirectionsEventReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1893B5C9C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPDirectionsEventIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  int v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  int v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  int v42;
  unsigned int v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  int v47;
  _BOOL8 v48;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0)
            goto LABEL_84;
          v17 = 0;
          while (1)
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
              goto LABEL_80;
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if (v21 < 0)
            {
              v22 = v17++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_81;
          }
        case 2u:
          if ((v8 & 7) != 0)
            goto LABEL_84;
          v23 = 0;
          while (1)
          {
            v24 = *v2;
            v25 = *(_QWORD *)&a1[v24];
            v26 = v25 + 1;
            if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
              goto LABEL_80;
            v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
            *(_QWORD *)&a1[v24] = v26;
            if (v27 < 0)
            {
              v22 = v23++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_81;
          }
        case 3u:
          if (v15 == 2)
            goto LABEL_70;
          goto LABEL_84;
        case 4u:
          if ((v8 & 7) != 0)
            goto LABEL_84;
          v28 = 0;
          while (1)
          {
            v29 = *v2;
            v30 = *(_QWORD *)&a1[v29];
            v31 = v30 + 1;
            if (v30 == -1 || v31 > *(_QWORD *)&a1[*v3])
              goto LABEL_80;
            v32 = *(char *)(*(_QWORD *)&a1[*v5] + v30);
            *(_QWORD *)&a1[v29] = v31;
            if (v32 < 0)
            {
              v22 = v28++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_81;
          }
        case 5u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOLatLngIsValid(a1))
            goto LABEL_84;
          PBReaderRecallMark();
          continue;
        case 7u:
          if ((v8 & 7) != 0)
            goto LABEL_84;
          v33 = 0;
          while (1)
          {
            v34 = *v2;
            v35 = *(_QWORD *)&a1[v34];
            v36 = v35 + 1;
            if (v35 == -1 || v36 > *(_QWORD *)&a1[*v3])
              goto LABEL_80;
            v37 = *(char *)(*(_QWORD *)&a1[*v5] + v35);
            *(_QWORD *)&a1[v34] = v36;
            if (v37 < 0)
            {
              v22 = v33++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_81;
          }
        case 8u:
          if (v15 == 2)
            goto LABEL_70;
          goto LABEL_84;
        case 9u:
          if ((v8 & 7) != 0)
            goto LABEL_84;
          v38 = 0;
          while (1)
          {
            v39 = *v2;
            v40 = *(_QWORD *)&a1[v39];
            v41 = v40 + 1;
            if (v40 == -1 || v41 > *(_QWORD *)&a1[*v3])
              goto LABEL_80;
            v42 = *(char *)(*(_QWORD *)&a1[*v5] + v40);
            *(_QWORD *)&a1[v39] = v41;
            if (v42 < 0)
            {
              v22 = v38++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_81;
          }
        case 0xAu:
          if (v15 == 2)
            goto LABEL_70;
          goto LABEL_84;
        case 0xBu:
          if (v15 == 2)
            goto LABEL_70;
          goto LABEL_84;
        case 0xCu:
          if ((v8 & 7) != 0)
            goto LABEL_84;
          v43 = 0;
          break;
        default:
LABEL_70:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_84:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v44 = *v2;
        v45 = *(_QWORD *)&a1[v44];
        v46 = v45 + 1;
        if (v45 == -1 || v46 > *(_QWORD *)&a1[*v3])
          break;
        v47 = *(char *)(*(_QWORD *)&a1[*v5] + v45);
        *(_QWORD *)&a1[v44] = v46;
        if (v47 < 0)
        {
          v22 = v43++ > 8;
          if (!v22)
            continue;
        }
        goto LABEL_81;
      }
LABEL_80:
      a1[*v4] = 1;
LABEL_81:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v48 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v48;
}

void sub_1893B6354(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPDirectionsEventIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  v2 = (*(_WORD *)(a1 + 96) & 0xFC0) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return v2;
}

void sub_1893B68A0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893B7040(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPDirectionsProblemReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  char v15;
  int *v16;
  int *v17;
  int *v18;
  int *v19;
  char v20;
  unsigned int v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  BOOL v27;
  int v28;
  unint64_t v30;
  BOOL v31;
  int *v32;
  int v33;
  int v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  int v39;
  char v40;
  unsigned int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  char v46;
  char v47;
  unsigned int v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  char v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  __int16 v56;
  char v57;
  int v58;
  __int16 v59;
  void *v60;
  GEOTransitSuggestedRoute *v62;
  char v63;
  char v64;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 76);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 72));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 92)), (uint16x4_t)0xFFF9FFFEFFFDFFFALL), (int8x8_t)0x1000100010001))+ (HIBYTE(*(_WORD *)(a1 + 92)) & 1)+ ((*(_WORD *)(a1 + 92) >> 4) & 1)+ ((*(_WORD *)(a1 + 92) >> 5) & 1));
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v7])
    {
      case -3:
        v8 = 1;
        goto LABEL_6;
      case -2:
        v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v11 > 4;
        v15 = v10 | v14;
        if ((((v10 | v14) | v8) & 1) != 0)
          v16 = 0;
        else
          v16 = a3;
        v64 = (v16 == 0) | v15;
        v17 = (int *)MEMORY[0x1E0D82BF0];
        v18 = (int *)MEMORY[0x1E0D82BC8];
        v19 = (int *)MEMORY[0x1E0D82BB8];
        v63 = v10 | v14;
        break;
      default:
        ++v11;
LABEL_6:
        v12 = v9;
        v13 = v10;
LABEL_8:
        ++v7;
        v9 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v17) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v18))
      goto LABEL_112;
    v20 = 0;
    v21 = 0;
    v22 = 0;
    while (1)
    {
      v23 = *v17;
      v24 = *(_QWORD *)(v3 + v23);
      v25 = v24 + 1;
      if (v24 == -1 || v25 > *(_QWORD *)(v3 + *v6))
        break;
      v26 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v24);
      *(_QWORD *)(v3 + v23) = v25;
      v22 |= (unint64_t)(v26 & 0x7F) << v20;
      if ((v26 & 0x80) == 0)
        goto LABEL_23;
      v20 += 7;
      v27 = v21++ >= 9;
      if (v27)
      {
        v22 = 0;
        v28 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(_BYTE *)(v3 + *v18) = 1;
LABEL_23:
    v28 = *(unsigned __int8 *)(v3 + *v18);
    if (*(_BYTE *)(v3 + *v18))
      v22 = 0;
LABEL_25:
    if (v28 || (v22 & 7) == 4)
    {
LABEL_112:
      if ((v15 & 1) != 0)
      {
        v57 = 1;
        goto LABEL_126;
      }
      if (v16)
      {
        while (1)
        {
          v58 = *v16++;
          v59 = 8;
          switch(v58)
          {
            case 0:
              goto LABEL_127;
            case 3:
              goto LABEL_122;
            case 4:
              v59 = 64;
              goto LABEL_122;
            case 10:
              v59 = 4;
              goto LABEL_122;
            case 11:
              v59 = 128;
              goto LABEL_122;
            case 14:
              v59 = 256;
              goto LABEL_122;
            case 15:
              v59 = 16;
              goto LABEL_122;
            case 16:
              v59 = 32;
LABEL_122:
              *(_WORD *)(a1 + 92) |= v59;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_127;
    }
    v30 = v22 >> 3;
    v31 = v15;
    if ((v64 & 1) == 0)
    {
      v32 = v16;
      do
      {
        v34 = *v32++;
        v33 = v34;
        v31 = v34 != 0;
        if (v34)
          v35 = v33 == (_DWORD)v30;
        else
          v35 = 1;
      }
      while (!v35);
    }
    switch((int)v30)
    {
      case 3:
        if (!v31)
          goto LABEL_90;
        if ((*(_WORD *)(a1 + 92) & 8) == 0)
        {
          PBReaderReadData();
          v36 = objc_claimAutoreleasedReturnValue();
          v37 = 24;
          goto LABEL_43;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_125;
        v56 = *(_WORD *)(a1 + 92) << 12;
        goto LABEL_109;
      case 4:
        if (!v31)
          goto LABEL_90;
        if ((*(_WORD *)(a1 + 92) & 0x40) == 0)
        {
          PBReaderReadData();
          v36 = objc_claimAutoreleasedReturnValue();
          v37 = 48;
LABEL_43:
          v38 = *(void **)(a1 + v37);
          *(_QWORD *)(a1 + v37) = v36;
          goto LABEL_83;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_125;
        v56 = *(_WORD *)(a1 + 92) << 9;
        goto LABEL_109;
      case 8:
        if ((v8 & 1) == 0)
          goto LABEL_90;
        v40 = 0;
        v41 = 0;
        v42 = 0;
        *(_WORD *)(a1 + 92) |= 2u;
        while (2)
        {
          v43 = *v17;
          v44 = *(_QWORD *)(v3 + v43);
          v45 = v44 + 1;
          if (v44 == -1 || v45 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v46 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v44);
            *(_QWORD *)(v3 + v43) = v45;
            v42 |= (unint64_t)(v46 & 0x7F) << v40;
            if (v46 < 0)
            {
              v40 += 7;
              v27 = v41++ >= 9;
              if (v27)
              {
                LODWORD(v42) = 0;
                goto LABEL_95;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          LODWORD(v42) = 0;
LABEL_95:
        v55 = 88;
        goto LABEL_100;
      case 10:
        if (!v31 || (*(_WORD *)(a1 + 92) & 4) != 0)
          goto LABEL_90;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_125;
        v62 = objc_alloc_init(GEOTransitSuggestedRoute);
        if (!GEOTransitSuggestedRouteReadAllFrom((uint64_t)v62, (void *)v3, v9 & 1))
          goto LABEL_124;
        PBReaderRecallMark();
        -[GEORPDirectionsProblem _addNoFlagsClientSuggestedRoute:](a1, v62);
        goto LABEL_89;
      case 11:
        if (!v31 || (*(_WORD *)(a1 + 92) & 0x80) != 0)
          goto LABEL_90;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_125;
        v62 = objc_alloc_init(GEORPSuggestedRouteIndex);
        if (!GEORPSuggestedRouteIndexReadAllFrom((uint64_t)v62, (void *)v3))
          goto LABEL_124;
        PBReaderRecallMark();
        -[GEORPDirectionsProblem _addNoFlagsProblematicRouteIndex:](a1, v62);
        goto LABEL_89;
      case 13:
        if ((v8 & 1) == 0)
          goto LABEL_90;
        v47 = 0;
        v48 = 0;
        v42 = 0;
        *(_WORD *)(a1 + 92) |= 1u;
        while (2)
        {
          v49 = *v17;
          v50 = *(_QWORD *)(v3 + v49);
          v51 = v50 + 1;
          if (v50 == -1 || v51 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v52 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v50);
            *(_QWORD *)(v3 + v49) = v51;
            v42 |= (unint64_t)(v52 & 0x7F) << v47;
            if (v52 < 0)
            {
              v47 += 7;
              v27 = v48++ >= 9;
              if (v27)
              {
                LODWORD(v42) = 0;
                goto LABEL_99;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          LODWORD(v42) = 0;
LABEL_99:
        v55 = 84;
LABEL_100:
        *(_DWORD *)(a1 + v55) = v42;
        goto LABEL_111;
      case 14:
        if (!v31)
          goto LABEL_90;
        if ((*(_WORD *)(a1 + 92) & 0x100) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_125;
          v56 = *(_WORD *)(a1 + 92) << 7;
          goto LABEL_109;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_125;
        v62 = objc_alloc_init(GEORPUserSearchInput);
        if (!GEORPUserSearchInputReadAllFrom((uint64_t)v62, (void *)v3, v9 & 1))
          goto LABEL_124;
        PBReaderRecallMark();
        v53 = 64;
        goto LABEL_82;
      case 15:
        if (!v31)
          goto LABEL_90;
        if ((*(_WORD *)(a1 + 92) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_125;
          v56 = *(_WORD *)(a1 + 92) << 11;
LABEL_109:
          v7 += v56 >> 15;
        }
        else
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_125;
          v62 = objc_alloc_init(GEORPUserSearchInput);
          if (!GEORPUserSearchInputReadAllFrom((uint64_t)v62, (void *)v3, v9 & 1))
            goto LABEL_124;
          PBReaderRecallMark();
          v53 = 32;
LABEL_82:
          v38 = *(void **)(a1 + v53);
          *(_QWORD *)(a1 + v53) = v62;
LABEL_83:

          --v7;
        }
        goto LABEL_110;
      case 16:
        if (!v31 || (*(_WORD *)(a1 + 92) & 0x20) != 0)
        {
LABEL_90:
          v54 = PBReaderSkipValueWithTag();
          v18 = (int *)MEMORY[0x1E0D82BC8];
          v15 = v63;
          if ((v54 & 1) == 0)
          {
LABEL_123:
            v57 = 0;
            goto LABEL_126;
          }
LABEL_111:
          if (!(v15 & 1 | (v7 != 0)))
            goto LABEL_112;
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_125;
        v62 = objc_alloc_init(GEORPInstructionCorrection);
        if (GEORPInstructionCorrectionReadAllFrom((uint64_t)v62, (void *)v3, v9 & 1))
        {
          PBReaderRecallMark();
          -[GEORPDirectionsProblem _addNoFlagsInstructionCorrection:](a1, v62);
LABEL_89:

LABEL_110:
          v15 = v63;
          v18 = (int *)MEMORY[0x1E0D82BC8];
          goto LABEL_111;
        }
LABEL_124:

LABEL_125:
        v57 = 0;
        v15 = v63;
        v18 = (int *)MEMORY[0x1E0D82BC8];
LABEL_126:
        *(_WORD *)(a1 + 92) |= 8u;
        *(_WORD *)(a1 + 92) |= 0x40u;
        *(_WORD *)(a1 + 92) |= 4u;
        *(_WORD *)(a1 + 92) |= 0x80u;
        *(_WORD *)(a1 + 92) |= 0x100u;
        *(_WORD *)(a1 + 92) |= 0x10u;
        *(_WORD *)(a1 + 92) |= 0x20u;
        if ((v57 & 1) != 0)
        {
LABEL_127:
          v3 = *(_BYTE *)(v3 + *v18) == 0;
          if ((v15 & 1) != 0)
            goto LABEL_128;
        }
        else
        {
          v3 = 0;
          if ((v15 & 1) != 0)
          {
LABEL_128:
            v60 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = 0;

          }
        }
        return v3;
      default:
        v39 = PBReaderSkipValueWithTag();
        v18 = (int *)MEMORY[0x1E0D82BC8];
        v15 = v63;
        if (!v39)
          goto LABEL_123;
        goto LABEL_111;
    }
  }
}

void sub_1893B7A2C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893B7BE4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893B7F18(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893B82B8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893B83F8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893B853C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893B95D4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEORPDirectionsProblemCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  _BYTE v29[128];
  _BYTE v30[128];
  _BYTE v31[128];
  uint64_t v32;

  v32 = *MEMORY[0x1E0C80C00];
  v25 = 0u;
  v26 = 0u;
  v27 = 0u;
  v28 = 0u;
  v2 = a1[2];
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v25, v31, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v26;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v26 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v25 + 1) + 8 * v6++), "readAll:", 1);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v25, v31, 16);
    }
    while (v4);
  }

  v23 = 0u;
  v24 = 0u;
  v21 = 0u;
  v22 = 0u;
  v7 = a1[7];
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v21, v30, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v22;
    do
    {
      v11 = 0;
      do
      {
        if (*(_QWORD *)v22 != v10)
          objc_enumerationMutation(v7);
        objc_msgSend(*(id *)(*((_QWORD *)&v21 + 1) + 8 * v11++), "readAll:", 1);
      }
      while (v9 != v11);
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v21, v30, 16);
    }
    while (v9);
  }

  objc_msgSend(a1[8], "readAll:", 1);
  objc_msgSend(a1[4], "readAll:", 1);
  v19 = 0u;
  v20 = 0u;
  v17 = 0u;
  v18 = 0u;
  v12 = a1[5];
  v13 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v17, v29, 16);
  if (v13)
  {
    v14 = v13;
    v15 = *(_QWORD *)v18;
    do
    {
      v16 = 0;
      do
      {
        if (*(_QWORD *)v18 != v15)
          objc_enumerationMutation(v12);
        objc_msgSend(*(id *)(*((_QWORD *)&v17 + 1) + 8 * v16++), "readAll:", 1, (_QWORD)v17);
      }
      while (v14 != v16);
      v14 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v17, v29, 16);
    }
    while (v14);
  }

}

unint64_t GEORPDirectionsProblemReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 76))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEORPDirectionsProblemReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 80));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 72) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 76) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEORPDirectionsProblemReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEORPDirectionsProblemReadAllFrom_initialTag;
  Specified = GEORPDirectionsProblemReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEORPDirectionsProblemCallReadAllRecursiveWithoutSynchronized((id *)a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 80));
  return Specified;
}

void sub_1893B99B8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPDirectionsProblemReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORPDirectionsProblemReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1893B9A18(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPDirectionsProblemIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  _BOOL8 v28;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 3u:
          if (v15 != 2)
            goto LABEL_59;
          goto LABEL_26;
        case 4u:
          if (v15 == 2)
            goto LABEL_26;
          goto LABEL_59;
        case 8u:
          if ((v8 & 7) != 0)
            goto LABEL_59;
          v17 = 0;
          while (1)
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
              goto LABEL_52;
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if (v21 < 0)
            {
              v22 = v17++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_57;
          }
        case 0xAu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOTransitSuggestedRouteIsValid(a1))
            goto LABEL_59;
          goto LABEL_56;
        case 0xBu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPSuggestedRouteIndexIsValid(a1))
            goto LABEL_59;
          goto LABEL_56;
        case 0xDu:
          if ((v8 & 7) != 0)
            goto LABEL_59;
          v23 = 0;
          break;
        case 0xEu:
        case 0xFu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPUserSearchInputIsValid(a1))
            goto LABEL_59;
          goto LABEL_56;
        case 0x10u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPInstructionCorrectionIsValid(a1))
            goto LABEL_59;
LABEL_56:
          PBReaderRecallMark();
          continue;
        default:
LABEL_26:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_59:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v24 = *v2;
        v25 = *(_QWORD *)&a1[v24];
        v26 = v25 + 1;
        if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
          break;
        v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
        *(_QWORD *)&a1[v24] = v26;
        if (v27 < 0)
        {
          v22 = v23++ > 8;
          if (!v22)
            continue;
        }
        goto LABEL_57;
      }
LABEL_52:
      a1[*v4] = 1;
LABEL_57:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v28 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v28;
}

BOOL GEORPSuggestedRouteIndexIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  BOOL v13;
  int v14;
  int v15;
  unint64_t v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  unsigned int v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  int v33;
  unsigned int v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  int v38;
  _BOOL8 v39;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        v13 = v7++ >= 9;
        if (v13)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      v17 = v8 >> 3;
      if ((v8 >> 3) == 5)
      {
        if (v15 != 2)
        {
          if ((v8 & 7) != 0)
            goto LABEL_61;
          while (1)
          {
            v24 = *v2;
            v25 = *(_QWORD *)&a1[v24];
            v26 = v25 + 1;
            if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
              goto LABEL_44;
            v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
            *(_QWORD *)&a1[v24] = v26;
            if (v27 < 0)
            {
              v28 = v15++;
              if (v28 <= 8)
                continue;
            }
            goto LABEL_58;
          }
        }
        if (!PBReaderPlaceMark())
        {
LABEL_61:
          PBReaderRecallMark();
          return 0;
        }
LABEL_48:
        while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
        {
          v34 = a1[*v4];
          if (a1[*v4])
            break;
          while (1)
          {
            v35 = *v2;
            v36 = *(_QWORD *)&a1[v35];
            v37 = v36 + 1;
            if (v36 == -1 || v37 > *(_QWORD *)&a1[*v3])
              break;
            v38 = *(char *)(*(_QWORD *)&a1[*v5] + v36);
            *(_QWORD *)&a1[v35] = v37;
            if (v38 < 0)
            {
              v13 = v34++ >= 9;
              if (!v13)
                continue;
            }
            goto LABEL_48;
          }
          a1[*v4] = 1;
        }
        PBReaderRecallMark();
      }
      else
      {
        if ((_DWORD)v17 == 3)
        {
          if ((v8 & 7) != 0)
            goto LABEL_61;
          v29 = 0;
          while (1)
          {
            v30 = *v2;
            v31 = *(_QWORD *)&a1[v30];
            v32 = v31 + 1;
            if (v31 == -1 || v32 > *(_QWORD *)&a1[*v3])
              goto LABEL_44;
            v33 = *(char *)(*(_QWORD *)&a1[*v5] + v31);
            *(_QWORD *)&a1[v30] = v32;
            if (v33 < 0)
            {
              v23 = v29++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_58;
          }
        }
        if ((_DWORD)v17 == 2)
        {
          if ((v8 & 7) != 0)
            goto LABEL_61;
          v18 = 0;
          while (1)
          {
            v19 = *v2;
            v20 = *(_QWORD *)&a1[v19];
            v21 = v20 + 1;
            if (v20 == -1 || v21 > *(_QWORD *)&a1[*v3])
              break;
            v22 = *(char *)(*(_QWORD *)&a1[*v5] + v20);
            *(_QWORD *)&a1[v19] = v21;
            if (v22 < 0)
            {
              v23 = v18++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_58;
          }
LABEL_44:
          a1[*v4] = 1;
          continue;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_61;
      }
LABEL_58:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v39 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v39;
}

