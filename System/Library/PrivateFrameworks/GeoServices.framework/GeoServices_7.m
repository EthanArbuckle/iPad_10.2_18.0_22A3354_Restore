void sub_188A20128(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A2026C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A203B0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A204F4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A20D2C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORPAddressCorrectionsCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  objc_msgSend(a1[4], "readAll:", 1);
  objc_msgSend(a1[5], "readAll:", 1);
  objc_msgSend(a1[6], "readAll:", 1);
  objc_msgSend(a1[3], "readAll:", 1);
  return objc_msgSend(a1[7], "readAll:", 1);
}

unint64_t GEORPAddressCorrectionsReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 68))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEORPAddressCorrectionsReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 72));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 64) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 68) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEORPAddressCorrectionsReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEORPAddressCorrectionsReadAllFrom_initialTag;
  Specified = GEORPAddressCorrectionsReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEORPAddressCorrectionsCallReadAllRecursiveWithoutSynchronized((id *)a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return Specified;
}

void sub_188A20F34(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPAddressCorrectionsReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORPAddressCorrectionsReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188A20F94(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPAddressCorrectionsIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  _BOOL8 v17;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (!a1[*v4])
    {
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 2u:
        case 6u:
          if (v15 == 2 && PBReaderPlaceMark() && GEORPFeedbackAddressFieldsIsValid(a1))
            goto LABEL_36;
          goto LABEL_39;
        case 3u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPCorrectedCoordinateIsValid(a1))
            goto LABEL_39;
          goto LABEL_36;
        case 4u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPMapLocationIsValid(a1))
            goto LABEL_39;
          goto LABEL_36;
        case 5u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPAccessPointCorrectionsIsValid(a1))
            goto LABEL_39;
LABEL_36:
          PBReaderRecallMark();
          goto LABEL_37;
        default:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_39:
            PBReaderRecallMark();
            return 0;
          }
LABEL_37:
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_38;
          break;
      }
    }
  }
LABEL_38:
  v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

void sub_188A213E4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL _GEORPAddressCorrectionsIsDirty(uint64_t a1)
{
  char v2;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  v2 = *(_BYTE *)(a1 + 76);
  if ((v2 & 0x40) != 0)
    return 1;
  if ((*(_BYTE *)(a1 + 76) & 4) != 0)
  {
    if (GEORPFeedbackAddressFieldsIsDirty(*(_QWORD *)(a1 + 32)))
      return 1;
    v2 = *(_BYTE *)(a1 + 76);
  }
  if ((v2 & 8) != 0)
  {
    if (GEORPCorrectedCoordinateIsDirty(*(_QWORD *)(a1 + 40)))
      return 1;
    v2 = *(_BYTE *)(a1 + 76);
  }
  if ((v2 & 0x10) == 0)
    goto LABEL_11;
  if (GEORPMapLocationIsDirty(*(_QWORD *)(a1 + 48)))
    return 1;
  v2 = *(_BYTE *)(a1 + 76);
LABEL_11:
  if ((v2 & 2) != 0)
  {
    if ((GEORPAccessPointCorrectionsIsDirty(*(os_unfair_lock_s **)(a1 + 24)) & 1) != 0)
      return 1;
    v2 = *(_BYTE *)(a1 + 76);
  }
  return (v2 & 0x20) != 0 && GEORPFeedbackAddressFieldsIsDirty(*(_QWORD *)(a1 + 56));
}

os_unfair_lock_s *GEORPAddressCorrectionsIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  _BOOL8 IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEORPAddressCorrectionsIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 18);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_188A2188C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A21BFC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A21E9C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPAddressFeedbackReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  int *v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  int *v18;
  int *v19;
  int *v20;
  int *v21;
  char v22;
  unsigned int v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  BOOL v29;
  int v30;
  unint64_t v32;
  BOOL v33;
  int *v34;
  int v35;
  int v36;
  BOOL v37;
  GEORPAddressCorrections *v38;
  uint64_t v39;
  id v40;
  void *v41;
  int v42;
  char v43;
  unsigned int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  void *v50;
  char v51;
  char v52;
  int v53;
  char v54;
  void *v55;
  int v57;
  int *v58;
  char v59;
  char v60;
  char v61;
  char v62;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 60);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 56));
  v7 = v6;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = (vaddv_s16((int16x4_t)(*(_QWORD *)&vshl_u16((uint16x4_t)(*(_QWORD *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 72)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFCFFFDFFFEFFFBLL) & 0xFF01FF01FF01FF01))+ ((*(_BYTE *)(a1 + 72) & 2) != 0));
  while (2)
  {
    v14 = 1;
    v15 = 1;
    v16 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v13;
        goto LABEL_8;
      case -3:
        v9 = 1;
        goto LABEL_7;
      case -2:
        v15 = v11;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v17 = v13 > 2;
        v59 = v17 & ~(_BYTE)v12 | v10;
        v60 = v17 | v12 | v59;
        if ((((v17 | v12) | v9) & 1) != 0)
          v18 = 0;
        else
          v18 = a3;
        v19 = (int *)MEMORY[0x1E0D82BF0];
        v20 = (int *)MEMORY[0x1E0D82BC8];
        v61 = (v18 == 0) | v17 | v12;
        v62 = v17 | v12;
        v21 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v13;
LABEL_7:
        v14 = v10;
LABEL_8:
        v15 = v11;
        v16 = v12;
LABEL_10:
        ++v8;
        v10 = v14;
        v11 = v15;
        v12 = v16;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v19) >= *(_QWORD *)(v3 + *v7) || *(_BYTE *)(v3 + *v20))
      goto LABEL_91;
    v22 = 0;
    v23 = 0;
    v24 = 0;
    while (1)
    {
      v25 = *v19;
      v26 = *(_QWORD *)(v3 + v25);
      v27 = v26 + 1;
      if (v26 == -1 || v27 > *(_QWORD *)(v3 + *v7))
        break;
      v28 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v26);
      *(_QWORD *)(v3 + v25) = v27;
      v24 |= (unint64_t)(v28 & 0x7F) << v22;
      if ((v28 & 0x80) == 0)
        goto LABEL_25;
      v22 += 7;
      v29 = v23++ >= 9;
      if (v29)
      {
        v24 = 0;
        v30 = *(unsigned __int8 *)(v3 + *v20);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v20) = 1;
LABEL_25:
    v30 = *(unsigned __int8 *)(v3 + *v20);
    if (*(_BYTE *)(v3 + *v20))
      v24 = 0;
LABEL_27:
    if (v30 || (v24 & 7) == 4)
    {
LABEL_91:
      v57 = 1;
      goto LABEL_92;
    }
    v32 = v24 >> 3;
    v33 = v62;
    if ((v61 & 1) == 0)
    {
      v34 = v18;
      do
      {
        v36 = *v34++;
        v35 = v36;
        v33 = v36 != 0;
        if (v36)
          v37 = v35 == (_DWORD)v32;
        else
          v37 = 1;
      }
      while (!v37);
    }
    switch((int)v32)
    {
      case 1:
        if (!v33)
          goto LABEL_74;
        if ((*(_BYTE *)(a1 + 72) & 4) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_109;
          v38 = objc_alloc_init(GEORPAddressCorrections);
          if (GEORPAddressCorrectionsReadAllFrom((uint64_t)v38, (void *)v3, v11 & 1))
          {
            PBReaderRecallMark();
            v39 = 24;
            goto LABEL_73;
          }
          goto LABEL_108;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_109;
        v52 = 32 * *(_BYTE *)(a1 + 72);
        goto LABEL_88;
      case 2:
        if (!v33)
          goto LABEL_74;
        if ((*(_BYTE *)(a1 + 72) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_109;
          v52 = 4 * *(_BYTE *)(a1 + 72);
          goto LABEL_88;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_109;
        v38 = objc_alloc_init(GEOPDPlace);
        if (!GEOPDPlaceReadAllFrom((uint64_t)v38, (void *)v3, v11 & 1))
          goto LABEL_108;
        PBReaderRecallMark();
        v39 = 48;
        goto LABEL_73;
      case 3:
        if ((v9 & 1) == 0)
          goto LABEL_74;
        v43 = 0;
        v44 = 0;
        v45 = 0;
        *(_BYTE *)(a1 + 72) |= 1u;
        while (2)
        {
          v46 = *v19;
          v47 = *(_QWORD *)(v3 + v46);
          v48 = v47 + 1;
          if (v47 == -1 || v48 > *(_QWORD *)(v3 + *v7))
          {
            *(_BYTE *)(v3 + *v20) = 1;
          }
          else
          {
            v49 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v47);
            *(_QWORD *)(v3 + v46) = v48;
            v45 |= (unint64_t)(v49 & 0x7F) << v43;
            if (v49 < 0)
            {
              v43 += 7;
              v29 = v44++ >= 9;
              if (v29)
              {
                LODWORD(v45) = 0;
                goto LABEL_79;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v20))
          LODWORD(v45) = 0;
LABEL_79:
        *(_DWORD *)(a1 + 68) = v45;
        goto LABEL_90;
      case 4:
        if (!v33)
          goto LABEL_74;
        if ((*(_BYTE *)(a1 + 72) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_109;
          v52 = 16 * *(_BYTE *)(a1 + 72);
          goto LABEL_88;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_109;
        v38 = objc_alloc_init(GEORPPersonalizedMapsContext);
        if (!GEORPPersonalizedMapsContextReadAllFrom((uint64_t)v38, (void *)v3))
          goto LABEL_108;
        PBReaderRecallMark();
        v39 = 32;
        goto LABEL_73;
      case 5:
        if (!v33)
          goto LABEL_74;
        if ((*(_BYTE *)(a1 + 72) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_109;
          v52 = 8 * *(_BYTE *)(a1 + 72);
LABEL_88:
          v8 += v52 >> 7;
LABEL_89:
          v20 = (int *)MEMORY[0x1E0D82BC8];
          v7 = (int *)MEMORY[0x1E0D82BD8];
LABEL_90:
          if (!(v60 & 1 | (v8 != 0)))
            goto LABEL_91;
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_109;
        v38 = objc_alloc_init(GEOPDPlaceRequest);
        if (GEOPDPlaceRequestReadAllFrom((uint64_t)v38, (void *)v3, v11 & 1))
        {
          PBReaderRecallMark();
          v39 = 40;
LABEL_73:
          v50 = *(void **)(a1 + v39);
          *(_QWORD *)(a1 + v39) = v38;

          --v8;
          goto LABEL_89;
        }
LABEL_108:

LABEL_109:
        v57 = 0;
        v20 = (int *)MEMORY[0x1E0D82BC8];
LABEL_92:
        v58 = &OBJC_IVAR___GEOTransitVehicleInfo__pickupDropoffType;
        if ((v59 & 1) != 0)
LABEL_93:
          *(_BYTE *)(a1 + v58[202]) |= 2u;
        if (v62 & 1 | ((v57 & 1) == 0))
        {
          *(_BYTE *)(a1 + v58[202]) |= 4u;
          *(_BYTE *)(a1 + v58[202]) |= 0x20u;
          *(_BYTE *)(a1 + v58[202]) |= 8u;
          *(_BYTE *)(a1 + v58[202]) |= 0x10u;
        }
        else if (v18)
        {
          while (1)
          {
            v53 = *v18++;
            v54 = 4;
            switch(v53)
            {
              case 0:
                goto LABEL_102;
              case 1:
                goto LABEL_101;
              case 2:
                v54 = 32;
                goto LABEL_101;
              case 4:
                v54 = 8;
                goto LABEL_101;
              case 5:
                v54 = 16;
LABEL_101:
                *(_BYTE *)(a1 + v58[202]) |= v54;
                break;
              default:
                continue;
            }
          }
        }
LABEL_102:
        if (v57)
          v3 = *(_BYTE *)(v3 + *v20) == 0;
        else
          v3 = 0;
        if ((v62 & 1) != 0)
        {
          v55 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      default:
        if ((v59 & 1) == 0 || (*(_BYTE *)(a1 + 72) & 2) != 0)
        {
LABEL_74:
          v51 = PBReaderSkipValueWithTag();
          v7 = (int *)MEMORY[0x1E0D82BD8];
          v20 = (int *)MEMORY[0x1E0D82BC8];
          if ((v51 & 1) == 0)
          {
            v57 = 0;
            goto LABEL_92;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v40 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v41 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v40;

          }
          v42 = PBUnknownFieldAdd();
          v20 = (int *)MEMORY[0x1E0D82BC8];
          v7 = (int *)MEMORY[0x1E0D82BD8];
          if (!v42)
          {
            v57 = 0;
            v58 = &OBJC_IVAR___GEOTransitVehicleInfo__pickupDropoffType;
            goto LABEL_93;
          }
        }
        goto LABEL_90;
    }
  }
}

void sub_188A22788(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A22A58(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A22B9C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A23424(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORPAddressFeedbackCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  objc_msgSend(a1[3], "readAll:", 1);
  objc_msgSend(a1[6], "readAll:", 1);
  objc_msgSend(a1[4], "readAll:", 1);
  return objc_msgSend(a1[5], "readAll:", 1);
}

unint64_t GEORPAddressFeedbackReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 60))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEORPAddressFeedbackReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 60) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEORPAddressFeedbackReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEORPAddressFeedbackReadAllFrom_initialTag;
  Specified = GEORPAddressFeedbackReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEORPAddressFeedbackCallReadAllRecursiveWithoutSynchronized((id *)a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_188A2361C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPAddressFeedbackReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORPAddressFeedbackReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188A2367C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPAddressFeedbackIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  _BOOL8 v23;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 == 2 && PBReaderPlaceMark() && GEORPAddressCorrectionsIsValid(a1))
            goto LABEL_44;
          goto LABEL_49;
        case 2u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDPlaceIsValid(a1))
            goto LABEL_49;
          goto LABEL_44;
        case 3u:
          if ((v8 & 7) != 0)
            goto LABEL_49;
          v17 = 0;
          break;
        case 4u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPPersonalizedMapsContextIsValid(a1))
            goto LABEL_49;
          goto LABEL_44;
        case 5u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDPlaceRequestIsValid(a1))
            goto LABEL_49;
LABEL_44:
          PBReaderRecallMark();
          continue;
        default:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_49:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v18 = *v2;
        v19 = *(_QWORD *)&a1[v18];
        v20 = v19 + 1;
        if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
          break;
        v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
        *(_QWORD *)&a1[v18] = v20;
        if (v21 < 0 && v17++ <= 8)
          continue;
        goto LABEL_45;
      }
      a1[*v4] = 1;
LABEL_45:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v23 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v23;
}

BOOL GEORPPersonalizedMapsContextIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int v20;
  BOOL v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  int v26;
  _BOOL8 v27;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_39;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      if (v14 || (v8 & 7) == 4)
        goto LABEL_39;
      if ((v8 >> 3) == 2)
        break;
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0)
          goto LABEL_41;
        v16 = 0;
        while (1)
        {
          v17 = *v2;
          v18 = *(_QWORD *)&a1[v17];
          v19 = v18 + 1;
          if (v18 == -1 || v19 > *(_QWORD *)&a1[*v3])
            break;
          v20 = *(char *)(*(_QWORD *)&a1[*v5] + v18);
          *(_QWORD *)&a1[v17] = v19;
          if (v20 < 0)
          {
            v21 = v16++ > 8;
            if (!v21)
              continue;
          }
          goto LABEL_38;
        }
LABEL_36:
        a1[*v4] = 1;
        goto LABEL_38;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_41:
        v27 = 0;
        goto LABEL_40;
      }
LABEL_38:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_39;
    }
    if ((v8 & 7) != 0)
      goto LABEL_41;
    v22 = 0;
    while (1)
    {
      v23 = *v2;
      v24 = *(_QWORD *)&a1[v23];
      v25 = v24 + 1;
      if (v24 == -1 || v25 > *(_QWORD *)&a1[*v3])
        goto LABEL_36;
      v26 = *(char *)(*(_QWORD *)&a1[*v5] + v24);
      *(_QWORD *)&a1[v23] = v25;
      if (v26 < 0)
      {
        v21 = v22++ > 8;
        if (!v21)
          continue;
      }
      goto LABEL_38;
    }
  }
LABEL_39:
  v27 = a1[*v4] == 0;
LABEL_40:
  PBReaderRecallMark();
  return v27;
}

void sub_188A23D6C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORPAddressFeedbackIsDirty(uint64_t a1)
{
  char v2;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  v2 = *(_BYTE *)(a1 + 72);
  if ((v2 & 0x40) != 0)
    return 1;
  if ((*(_BYTE *)(a1 + 72) & 4) != 0)
  {
    if ((GEORPAddressCorrectionsIsDirty(*(os_unfair_lock_s **)(a1 + 24)) & 1) != 0)
      return 1;
    v2 = *(_BYTE *)(a1 + 72);
  }
  if ((v2 & 0x20) == 0)
    goto LABEL_8;
  if ((GEOPDPlaceIsDirty(*(os_unfair_lock_s **)(a1 + 48)) & 1) != 0)
    return 1;
  v2 = *(_BYTE *)(a1 + 72);
LABEL_8:
  if ((v2 & 8) != 0)
    return 1;
  if ((v2 & 0x10) != 0)
    return (uint64_t)GEOPDPlaceRequestIsDirty(*(os_unfair_lock_s **)(a1 + 40));
  else
    return 0;
}

os_unfair_lock_s *GEORPAddressFeedbackIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEORPAddressFeedbackIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 16);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void GEORPAddressFeedbackClearSensitiveFields(void *a1, uint64_t a2, int a3)
{
  void *v5;
  int HasSensitiveFields;
  void *v7;
  id v8;

  if (a3
    && objc_msgSend(a1, "hasPlaceRequest")
    && (objc_msgSend(a1, "placeRequest"),
        v5 = (void *)objc_claimAutoreleasedReturnValue(),
        HasSensitiveFields = GEOPDPlaceRequestHasSensitiveFields(v5, a2),
        v5,
        HasSensitiveFields))
  {
    objc_msgSend(a1, "placeRequest");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = (id)objc_msgSend(v7, "copy");

    GEOPDPlaceRequestClearSensitiveFields(v8, a2, 0);
    objc_msgSend(a1, "setPlaceRequest:", v8);
  }
  else
  {
    objc_msgSend(a1, "placeRequest");
    v8 = (id)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "clearSensitiveFields:", a2);
  }

}

void *GEORPAddressFeedbackHasSensitiveFields(void *result, uint64_t a2)
{
  void *v3;
  uint64_t HasSensitiveFields;

  if (result)
  {
    objc_msgSend(result, "placeRequest");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    HasSensitiveFields = GEOPDPlaceRequestHasSensitiveFields(v3, a2);

    return (void *)HasSensitiveFields;
  }
  return result;
}

void sub_188A2430C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A246B4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A24978(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPAppAttestInfoReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  char v15;
  unsigned __int8 v16;
  int *v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  int v29;
  unint64_t v31;
  BOOL v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  void *v40;
  int v41;
  void *v42;
  char v43;
  char v44;
  int v45;
  char v46;
  void *v47;
  int v49;
  char v50;
  char v51;
  char v52;
  BOOL v53;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 60);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 56));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = (vaddv_s16((int16x4_t)(*(_QWORD *)&vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int8 *)(a1 + 68)), (uint16x4_t)0xFFFCFFFEFFFFFFFDLL) & 0xFF01FF01FF01FF01))+ (*(_BYTE *)(a1 + 68) & 1));
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v9])
    {
      case -4:
        ++v11;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_9;
      case 0:
        v14 = v11 > 2;
        v15 = v14 & ~(_BYTE)v10 | v7;
        v16 = v14 | v10;
        v50 = v15;
        v51 = v16 | v15;
        if (((v16 | v8) & 1) != 0)
          v17 = 0;
        else
          v17 = a3;
        v52 = (v17 == 0) | v16;
        v53 = v16;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_7:
        v12 = v7;
LABEL_8:
        v13 = v10;
LABEL_9:
        ++v9;
        v7 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v19))
      goto LABEL_69;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0)
        goto LABEL_24;
      v21 += 7;
      if (v22++ >= 9)
      {
        v23 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_26;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_24:
    v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_26:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_69:
      v49 = 1;
      goto LABEL_70;
    }
    v31 = v23 >> 3;
    v32 = v53;
    if ((v52 & 1) == 0)
    {
      v33 = v17;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if (!v32)
          goto LABEL_57;
        if ((*(_BYTE *)(a1 + 68) & 2) == 0)
        {
          PBReaderReadString();
          v37 = objc_claimAutoreleasedReturnValue();
          v38 = 24;
          goto LABEL_56;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_86;
        v44 = *(_BYTE *)(a1 + 68) << 6;
        goto LABEL_67;
      case 2:
        if (!v32)
          goto LABEL_57;
        if ((*(_BYTE *)(a1 + 68) & 8) == 0)
        {
          PBReaderReadData();
          v37 = objc_claimAutoreleasedReturnValue();
          v38 = 40;
          goto LABEL_56;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_86;
        v44 = 16 * *(_BYTE *)(a1 + 68);
        goto LABEL_67;
      case 3:
        if (!v32)
          goto LABEL_57;
        if ((*(_BYTE *)(a1 + 68) & 4) == 0)
        {
          PBReaderReadData();
          v37 = objc_claimAutoreleasedReturnValue();
          v38 = 32;
          goto LABEL_56;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_86;
        v44 = 32 * *(_BYTE *)(a1 + 68);
        goto LABEL_67;
      case 4:
        if (!v32)
          goto LABEL_57;
        if ((*(_BYTE *)(a1 + 68) & 0x10) == 0)
        {
          PBReaderReadString();
          v37 = objc_claimAutoreleasedReturnValue();
          v38 = 48;
LABEL_56:
          v42 = *(void **)(a1 + v38);
          *(_QWORD *)(a1 + v38) = v37;

          v19 = (int *)MEMORY[0x1E0D82BC8];
          --v9;
LABEL_68:
          if (!(v51 & 1 | (v9 != 0)))
            goto LABEL_69;
          continue;
        }
        if ((PBReaderSkipValueWithTag() & 1) != 0)
        {
          v44 = 8 * *(_BYTE *)(a1 + 68);
LABEL_67:
          v9 += v44 >> 7;
          v19 = (int *)MEMORY[0x1E0D82BC8];
          goto LABEL_68;
        }
LABEL_86:
        v49 = 0;
        v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_70:
        if ((v50 & 1) != 0)
LABEL_71:
          *(_BYTE *)(a1 + 68) |= 1u;
        if (v53 || (v49 & 1) == 0)
        {
          *(_BYTE *)(a1 + 68) |= 2u;
          *(_BYTE *)(a1 + 68) |= 8u;
          *(_BYTE *)(a1 + 68) |= 4u;
          *(_BYTE *)(a1 + 68) |= 0x10u;
        }
        else if (v17)
        {
          while (1)
          {
            v45 = *v17++;
            v46 = 2;
            switch(v45)
            {
              case 0:
                goto LABEL_80;
              case 1:
                goto LABEL_79;
              case 2:
                v46 = 8;
                goto LABEL_79;
              case 3:
                v46 = 4;
                goto LABEL_79;
              case 4:
                v46 = 16;
LABEL_79:
                *(_BYTE *)(a1 + 68) |= v46;
                break;
              default:
                continue;
            }
          }
        }
LABEL_80:
        if (v49)
          v3 = *(_BYTE *)(v3 + *v19) == 0;
        else
          v3 = 0;
        if (v53)
        {
          v47 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      default:
        if ((v50 & 1) == 0 || (*(_BYTE *)(a1 + 68) & 1) != 0)
        {
LABEL_57:
          v43 = PBReaderSkipValueWithTag();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if ((v43 & 1) == 0)
          {
            v49 = 0;
            goto LABEL_70;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v39 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v40 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v39;

          }
          v41 = PBUnknownFieldAdd();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if (!v41)
          {
            v49 = 0;
            goto LABEL_71;
          }
        }
        goto LABEL_68;
    }
  }
}

void sub_188A25080(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A251C4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A25308(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A259E4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPAppAttestInfoReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 60))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEORPAppAttestInfoReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 60) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEORPAppAttestInfoReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEORPAppAttestInfoReadAllFrom_initialTag;
  Specified = GEORPAppAttestInfoReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_188A25B70(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPAppAttestInfoReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORPAppAttestInfoReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188A25BD0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPAppAttestInfoIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  _BOOL8 v17;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (!a1[*v4])
    {
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2)
            goto LABEL_32;
          goto LABEL_28;
        case 2u:
          if (v15 == 2)
            goto LABEL_28;
          goto LABEL_32;
        case 3u:
          if (v15 == 2)
            goto LABEL_28;
          goto LABEL_32;
        case 4u:
          if (v15 != 2)
            goto LABEL_32;
LABEL_28:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_32:
            v17 = 0;
            goto LABEL_31;
          }
LABEL_29:
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_30;
          break;
        default:
          if (!PBReaderSkipValueWithTag())
            goto LABEL_32;
          goto LABEL_29;
      }
    }
  }
LABEL_30:
  v17 = a1[*v4] == 0;
LABEL_31:
  PBReaderRecallMark();
  return v17;
}

void sub_188A25FA0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPAppAttestInfoIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  v2 = (*(_BYTE *)(a1 + 68) & 0x3E) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return v2;
}

void sub_188A262A8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A26568(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A267E4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPCategoryCorrectionsReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  _BOOL4 v14;
  int v15;
  int v16;
  int *v17;
  _BOOL4 v18;
  int *v19;
  int v20;
  int *v21;
  int v22;
  int *v23;
  char v24;
  unsigned int v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  int v32;
  unint64_t v34;
  BOOL v35;
  int *v36;
  int v37;
  int v38;
  BOOL v39;
  void *v40;
  id v41;
  void *v42;
  char v43;
  int v44;
  int v45;
  char v46;
  void *v47;
  char v49;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1)
      + (*(_BYTE *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v11;
        v12 = v7;
        goto LABEL_8;
      case -3:
        v9 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v11 != 0;
        v15 = v14 | v7;
        v16 = v14 & ~(_DWORD)v7 | v8;
        if (((v15 | v9) & 1) != 0)
          v17 = 0;
        else
          v17 = a3;
        v18 = v10 != 0;
        v19 = (int *)MEMORY[0x1E0D82BF0];
        v20 = 1;
        v21 = (int *)MEMORY[0x1E0D82BC8];
        if (*(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(v3 + *v6))
          goto LABEL_58;
        v49 = v16;
        v22 = v15 | v18 | v16;
        v23 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_7:
        v12 = v7;
        v13 = v8;
LABEL_8:
        ++v10;
        v7 = v12;
        v8 = v13;
        continue;
    }
    break;
  }
  do
  {
    if (*(_BYTE *)(v3 + *v21))
      break;
    v24 = 0;
    v25 = 0;
    v26 = 0;
    while (1)
    {
      v27 = *v19;
      v28 = *(_QWORD *)(v3 + v27);
      v29 = v28 + 1;
      if (v28 == -1 || v29 > *(_QWORD *)(v3 + *v6))
        break;
      v30 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v28);
      *(_QWORD *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0)
        goto LABEL_23;
      v24 += 7;
      if (v25++ >= 9)
      {
        v26 = 0;
        v32 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_25;
      }
    }
    *(_BYTE *)(v3 + *v21) = 1;
LABEL_23:
    v32 = *(unsigned __int8 *)(v3 + *v21);
    if (*(_BYTE *)(v3 + *v21))
      v26 = 0;
LABEL_25:
    if (v32 || (v26 & 7) == 4)
      break;
    v34 = v26 >> 3;
    v35 = v15;
    if (!((v17 == 0) | v15 & 1))
    {
      v36 = v17;
      do
      {
        v38 = *v36++;
        v37 = v38;
        v35 = v38 != 0;
        if (v38)
          v39 = v37 == (_DWORD)v34;
        else
          v39 = 1;
      }
      while (!v39);
    }
    if ((_DWORD)v34 == 2)
    {
      if (!v35 || (*(_BYTE *)(a1 + 52) & 4) != 0)
      {
LABEL_54:
        v20 = PBReaderSkipValueWithTag();
        v21 = (int *)MEMORY[0x1E0D82BC8];
        if ((v20 & v22 & 1) == 0)
          goto LABEL_57;
        continue;
      }
      PBReaderReadString();
      v40 = (void *)objc_claimAutoreleasedReturnValue();
      if (v40)
        -[GEORPCategoryCorrections _addNoFlagsRemoved:](a1, v40);
      goto LABEL_46;
    }
    if ((_DWORD)v34 == 1)
    {
      if (!v35 || (*(_BYTE *)(a1 + 52) & 2) != 0)
        goto LABEL_54;
      PBReaderReadString();
      v40 = (void *)objc_claimAutoreleasedReturnValue();
      if (v40)
        -[GEORPCategoryCorrections _addNoFlagsAdded:](a1, v40);
LABEL_46:

      v21 = (int *)MEMORY[0x1E0D82BC8];
      goto LABEL_52;
    }
    if ((v49 & 1) == 0 || (*(_BYTE *)(a1 + 52) & 1) != 0)
      goto LABEL_54;
    if (!*(_QWORD *)(a1 + 16))
    {
      v41 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
      v42 = *(void **)(a1 + 16);
      *(_QWORD *)(a1 + 16) = v41;

    }
    v43 = PBUnknownFieldAdd();
    v21 = (int *)MEMORY[0x1E0D82BC8];
    if ((v43 & 1) == 0)
    {
      v20 = 0;
      goto LABEL_59;
    }
LABEL_52:
    if ((v22 & 1) == 0)
      break;
  }
  while (*(_QWORD *)(v3 + *v19) < *(_QWORD *)(v3 + *v6));
  v20 = 1;
LABEL_57:
  LOBYTE(v16) = v49;
LABEL_58:
  if ((v16 & 1) != 0)
LABEL_59:
    *(_BYTE *)(a1 + 52) |= 1u;
  if (v15 & 1 | ((v20 & 1) == 0))
  {
    *(_BYTE *)(a1 + 52) |= 2u;
    *(_BYTE *)(a1 + 52) |= 4u;
    goto LABEL_70;
  }
  if (v17)
  {
    while (2)
    {
      while (1)
      {
        v45 = *v17++;
        v44 = v45;
        if (v45 == 1)
          break;
        if (v44 == 2)
        {
          v46 = 4;
          goto LABEL_69;
        }
        if (!v44)
          goto LABEL_70;
      }
      v46 = 2;
LABEL_69:
      *(_BYTE *)(a1 + 52) |= v46;
      continue;
    }
  }
LABEL_70:
  if (v20)
  {
    v3 = *(_BYTE *)(v3 + *v21) == 0;
    if ((v15 & 1) == 0)
      return v3;
LABEL_74:
    v47 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  else
  {
    v3 = 0;
    if ((v15 & 1) != 0)
      goto LABEL_74;
  }
  return v3;
}

void sub_188A26FA0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A2783C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPCategoryCorrectionsReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEORPCategoryCorrectionsReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEORPCategoryCorrectionsReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEORPCategoryCorrectionsReadAllFrom_initialTag;
  Specified = GEORPCategoryCorrectionsReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_188A279C8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPCategoryCorrectionsReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORPCategoryCorrectionsReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188A27A28(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPCategoryCorrectionsIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  _BOOL8 v17;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_27;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        goto LABEL_27;
      if ((v8 >> 3) == 2)
        break;
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2)
          goto LABEL_29;
        goto LABEL_23;
      }
      if (!PBReaderSkipValueWithTag())
      {
LABEL_29:
        v17 = 0;
        goto LABEL_28;
      }
LABEL_26:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_27;
    }
    if (v15 != 2)
      goto LABEL_29;
LABEL_23:
    if ((PBReaderSkipValueWithTag() & 1) == 0)
      goto LABEL_29;
    goto LABEL_26;
  }
LABEL_27:
  v17 = a1[*v4] == 0;
LABEL_28:
  PBReaderRecallMark();
  return v17;
}

void sub_188A27EA4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPCategoryCorrectionsIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v2 = (*(_BYTE *)(a1 + 52) & 0xE) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return v2;
}

void sub_188A28328(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A28690(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A28958(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPContainmentCorrectionReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  _BOOL4 v14;
  int v15;
  int v16;
  int *v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  BOOL v28;
  int v29;
  int v30;
  unint64_t v32;
  BOOL v33;
  int *v34;
  int v35;
  int v36;
  BOOL v37;
  char v38;
  unsigned int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  char v45;
  unsigned int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  char v51;
  char v52;
  unsigned int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  char v58;
  id v59;
  void *v60;
  int v61;
  char v62;
  unsigned int v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  char v68;
  char v69;
  unsigned int v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  char v75;
  char v76;
  unsigned int v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  char v82;
  int v83;
  char v84;
  void *v85;
  char v87;
  int v88;
  int v89;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 104));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 100);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 96));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int8 *)(a1 + 108) >> 3) & 1)
      + (*(_BYTE *)(a1 + 108) & 1)
      + ((*(unsigned __int8 *)(a1 + 108) >> 1) & 1)
      + ((*(unsigned __int8 *)(a1 + 108) >> 2) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v11;
        goto LABEL_8;
      case -3:
        v7 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_9;
      case 0:
        v14 = v11 > 1;
        v15 = v14 & ~(_DWORD)v10 | v9;
        v16 = v14 | v10;
        v17 = (int *)MEMORY[0x1E0D82BF0];
        if ((((v14 | v10) | v7) & 1) != 0)
          v18 = 0;
        else
          v18 = a3;
        v88 = 1;
        if (*(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(v3 + *v6))
          goto LABEL_121;
        v87 = v14 & ~(_BYTE)v10 | v9;
        v89 = (v8 != 0) | v16 | v15;
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_7:
        v12 = v9;
LABEL_8:
        v13 = v10;
LABEL_9:
        ++v8;
        v9 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_BYTE *)(v3 + *v19))
      goto LABEL_119;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v17;
      v25 = *(_QWORD *)(v3 + v24);
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0)
        goto LABEL_24;
      v21 += 7;
      v28 = v22++ >= 9;
      if (v28)
      {
        v23 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_26;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_24:
    v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_26:
    v30 = v23 & 7;
    if (v29 || v30 == 4)
    {
LABEL_119:
      v88 = 1;
      goto LABEL_120;
    }
    v32 = v23 >> 3;
    v33 = v16;
    if (!((v18 == 0) | v16 & 1))
    {
      v34 = v18;
      do
      {
        v36 = *v34++;
        v35 = v36;
        v33 = v36 != 0;
        if (v36)
          v37 = v35 == (_DWORD)v32;
        else
          v37 = 1;
      }
      while (!v37);
    }
    if ((_DWORD)v32 != 3)
      break;
    if (v33 && (*(_BYTE *)(a1 + 108) & 4) == 0)
    {
      if (v30 == 2)
      {
        if (!PBReaderPlaceMark())
          goto LABEL_136;
        while (*(_QWORD *)(v3 + *v17) < *(_QWORD *)(v3 + *v6) && !*(_BYTE *)(v3 + *v19))
        {
          v45 = 0;
          v46 = 0;
          v47 = 0;
          while (1)
          {
            v48 = *v17;
            v49 = *(_QWORD *)(v3 + v48);
            v50 = v49 + 1;
            if (v49 == -1 || v50 > *(_QWORD *)(v3 + *v6))
              break;
            v51 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v49);
            *(_QWORD *)(v3 + v48) = v50;
            v47 |= (unint64_t)(v51 & 0x7F) << v45;
            if (v51 < 0)
            {
              v45 += 7;
              v28 = v46++ >= 9;
              if (!v28)
                continue;
            }
            goto LABEL_69;
          }
          *(_BYTE *)(v3 + *v19) = 1;
LABEL_69:
          PBRepeatedUInt64Add();
        }
LABEL_93:
        PBReaderRecallMark();
LABEL_117:
        if ((v89 & 1) == 0)
          goto LABEL_119;
        goto LABEL_118;
      }
      v69 = 0;
      v70 = 0;
      v71 = 0;
      while (1)
      {
        v72 = *v17;
        v73 = *(_QWORD *)(v3 + v72);
        v74 = v73 + 1;
        if (v73 == -1 || v74 > *(_QWORD *)(v3 + *v6))
          break;
        v75 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v73);
        *(_QWORD *)(v3 + v72) = v74;
        v71 |= (unint64_t)(v75 & 0x7F) << v69;
        if (v75 < 0)
        {
          v69 += 7;
          v28 = v70++ >= 9;
          if (!v28)
            continue;
        }
        goto LABEL_116;
      }
LABEL_115:
      *(_BYTE *)(v3 + *v19) = 1;
LABEL_116:
      PBRepeatedUInt64Add();
      goto LABEL_117;
    }
LABEL_91:
    v61 = PBReaderSkipValueWithTag();
    if ((v61 & v89 & 1) == 0)
    {
      v88 = v61;
      goto LABEL_120;
    }
LABEL_118:
    if (*(_QWORD *)(v3 + *v17) >= *(_QWORD *)(v3 + *v6))
      goto LABEL_119;
  }
  if ((_DWORD)v32 != 2)
  {
    if ((_DWORD)v32 == 1)
    {
      if (v33 && (*(_BYTE *)(a1 + 108) & 2) == 0)
      {
        if (v30 == 2)
        {
          if (!PBReaderPlaceMark())
            goto LABEL_136;
          while (*(_QWORD *)(v3 + *v17) < *(_QWORD *)(v3 + *v6) && !*(_BYTE *)(v3 + *v19))
          {
            v38 = 0;
            v39 = 0;
            v40 = 0;
            while (1)
            {
              v41 = *v17;
              v42 = *(_QWORD *)(v3 + v41);
              v43 = v42 + 1;
              if (v42 == -1 || v43 > *(_QWORD *)(v3 + *v6))
                break;
              v44 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v42);
              *(_QWORD *)(v3 + v41) = v43;
              v40 |= (unint64_t)(v44 & 0x7F) << v38;
              if (v44 < 0)
              {
                v38 += 7;
                v28 = v39++ >= 9;
                if (!v28)
                  continue;
              }
              goto LABEL_54;
            }
            *(_BYTE *)(v3 + *v19) = 1;
LABEL_54:
            PBRepeatedUInt64Add();
          }
          goto LABEL_93;
        }
        v62 = 0;
        v63 = 0;
        v64 = 0;
        while (1)
        {
          v65 = *v17;
          v66 = *(_QWORD *)(v3 + v65);
          v67 = v66 + 1;
          if (v66 == -1 || v67 > *(_QWORD *)(v3 + *v6))
            goto LABEL_115;
          v68 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v66);
          *(_QWORD *)(v3 + v65) = v67;
          v64 |= (unint64_t)(v68 & 0x7F) << v62;
          if (v68 < 0)
          {
            v62 += 7;
            v28 = v63++ >= 9;
            if (!v28)
              continue;
          }
          goto LABEL_116;
        }
      }
    }
    else if ((v87 & 1) != 0 && (*(_BYTE *)(a1 + 108) & 1) == 0)
    {
      if (!*(_QWORD *)(a1 + 16))
      {
        v59 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v60 = *(void **)(a1 + 16);
        *(_QWORD *)(a1 + 16) = v59;

      }
      if (!PBUnknownFieldAdd())
      {
        v88 = 0;
LABEL_122:
        *(_BYTE *)(a1 + 108) |= 1u;
        goto LABEL_123;
      }
      goto LABEL_117;
    }
    goto LABEL_91;
  }
  if (!v33 || (*(_BYTE *)(a1 + 108) & 8) != 0)
    goto LABEL_91;
  if (v30 != 2)
  {
    v76 = 0;
    v77 = 0;
    v78 = 0;
    while (1)
    {
      v79 = *v17;
      v80 = *(_QWORD *)(v3 + v79);
      v81 = v80 + 1;
      if (v80 == -1 || v81 > *(_QWORD *)(v3 + *v6))
        goto LABEL_115;
      v82 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v80);
      *(_QWORD *)(v3 + v79) = v81;
      v78 |= (unint64_t)(v82 & 0x7F) << v76;
      if (v82 < 0)
      {
        v76 += 7;
        v28 = v77++ >= 9;
        if (!v28)
          continue;
      }
      goto LABEL_116;
    }
  }
  if (PBReaderPlaceMark())
  {
    while (*(_QWORD *)(v3 + *v17) < *(_QWORD *)(v3 + *v6) && !*(_BYTE *)(v3 + *v19))
    {
      v52 = 0;
      v53 = 0;
      v54 = 0;
      while (1)
      {
        v55 = *v17;
        v56 = *(_QWORD *)(v3 + v55);
        v57 = v56 + 1;
        if (v56 == -1 || v57 > *(_QWORD *)(v3 + *v6))
          break;
        v58 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v56);
        *(_QWORD *)(v3 + v55) = v57;
        v54 |= (unint64_t)(v58 & 0x7F) << v52;
        if (v58 < 0)
        {
          v52 += 7;
          v28 = v53++ >= 9;
          if (!v28)
            continue;
        }
        goto LABEL_84;
      }
      *(_BYTE *)(v3 + *v19) = 1;
LABEL_84:
      PBRepeatedUInt64Add();
    }
    goto LABEL_93;
  }
LABEL_136:
  v88 = 0;
LABEL_120:
  LOBYTE(v15) = v87;
LABEL_121:
  if ((v15 & 1) != 0)
    goto LABEL_122;
LABEL_123:
  if (v16 & 1 | ((v88 & 1) == 0))
  {
    *(_BYTE *)(a1 + 108) |= 2u;
    *(_BYTE *)(a1 + 108) |= 8u;
    *(_BYTE *)(a1 + 108) |= 4u;
  }
  else if (v18)
  {
    while (1)
    {
      v83 = *v18++;
      v84 = 2;
      switch(v83)
      {
        case 0:
          goto LABEL_130;
        case 1:
          goto LABEL_129;
        case 2:
          v84 = 8;
          goto LABEL_129;
        case 3:
          v84 = 4;
LABEL_129:
          *(_BYTE *)(a1 + 108) |= v84;
          break;
        default:
          continue;
      }
    }
  }
LABEL_130:
  if (v88)
  {
    v3 = *(_BYTE *)(v3 + (int)*MEMORY[0x1E0D82BC8]) == 0;
    if ((v16 & 1) == 0)
      return v3;
LABEL_134:
    v85 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  else
  {
    v3 = 0;
    if ((v16 & 1) != 0)
      goto LABEL_134;
  }
  return v3;
}

void sub_188A29548(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A29888(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A2A2B4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPContainmentCorrectionReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 100))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEORPContainmentCorrectionReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 104));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 96) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 100) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEORPContainmentCorrectionReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEORPContainmentCorrectionReadAllFrom_initialTag;
  Specified = GEORPContainmentCorrectionReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 104));
  return Specified;
}

void sub_188A2A440(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPContainmentCorrectionReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORPContainmentCorrectionReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188A2A4A0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPContainmentCorrectionIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  BOOL v13;
  int v14;
  int v15;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  int v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  int v31;
  unsigned int v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  int v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  int v42;
  unsigned int v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  int v47;
  _BOOL8 v48;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_77;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        v13 = v7++ >= 9;
        if (v13)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        goto LABEL_77;
      v17 = v8 >> 3;
      if ((v8 >> 3) == 3)
      {
        if (v15 == 2)
        {
          if (!PBReaderPlaceMark())
            goto LABEL_79;
LABEL_56:
          while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
          {
            v38 = a1[*v4];
            if (a1[*v4])
              break;
            while (1)
            {
              v39 = *v2;
              v40 = *(_QWORD *)&a1[v39];
              v41 = v40 + 1;
              if (v40 == -1 || v41 > *(_QWORD *)&a1[*v3])
                break;
              v42 = *(char *)(*(_QWORD *)&a1[*v5] + v40);
              *(_QWORD *)&a1[v39] = v41;
              if (v42 < 0)
              {
                v13 = v38++ >= 9;
                if (!v13)
                  continue;
              }
              goto LABEL_56;
            }
            a1[*v4] = 1;
          }
          goto LABEL_75;
        }
        if ((v8 & 7) != 0)
          goto LABEL_79;
        while (1)
        {
          v23 = *v2;
          v24 = *(_QWORD *)&a1[v23];
          v25 = v24 + 1;
          if (v24 == -1 || v25 > *(_QWORD *)&a1[*v3])
            goto LABEL_44;
          v26 = *(char *)(*(_QWORD *)&a1[*v5] + v24);
          *(_QWORD *)&a1[v23] = v25;
          if (v26 < 0)
          {
            v27 = v15++;
            if (v27 <= 8)
              continue;
          }
          goto LABEL_76;
        }
      }
      if ((_DWORD)v17 == 2)
        break;
      if ((_DWORD)v17 == 1)
      {
        if (v15 == 2)
        {
          if (!PBReaderPlaceMark())
            goto LABEL_79;
LABEL_46:
          while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
          {
            v33 = a1[*v4];
            if (a1[*v4])
              break;
            while (1)
            {
              v34 = *v2;
              v35 = *(_QWORD *)&a1[v34];
              v36 = v35 + 1;
              if (v35 == -1 || v36 > *(_QWORD *)&a1[*v3])
                break;
              v37 = *(char *)(*(_QWORD *)&a1[*v5] + v35);
              *(_QWORD *)&a1[v34] = v36;
              if (v37 < 0)
              {
                v13 = v33++ >= 9;
                if (!v13)
                  continue;
              }
              goto LABEL_46;
            }
            a1[*v4] = 1;
          }
LABEL_75:
          PBReaderRecallMark();
          goto LABEL_76;
        }
        if ((v8 & 7) != 0)
          goto LABEL_79;
        while (1)
        {
          v18 = *v2;
          v19 = *(_QWORD *)&a1[v18];
          v20 = v19 + 1;
          if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
            goto LABEL_44;
          v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
          *(_QWORD *)&a1[v18] = v20;
          if (v21 < 0)
          {
            v22 = v15++;
            if (v22 <= 8)
              continue;
          }
          goto LABEL_76;
        }
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        goto LABEL_79;
LABEL_76:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_77;
    }
    if (v15 == 2)
    {
      if (!PBReaderPlaceMark())
      {
LABEL_79:
        PBReaderRecallMark();
        return 0;
      }
LABEL_66:
      while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
      {
        v43 = a1[*v4];
        if (a1[*v4])
          break;
        while (1)
        {
          v44 = *v2;
          v45 = *(_QWORD *)&a1[v44];
          v46 = v45 + 1;
          if (v45 == -1 || v46 > *(_QWORD *)&a1[*v3])
            break;
          v47 = *(char *)(*(_QWORD *)&a1[*v5] + v45);
          *(_QWORD *)&a1[v44] = v46;
          if (v47 < 0)
          {
            v13 = v43++ >= 9;
            if (!v13)
              continue;
          }
          goto LABEL_66;
        }
        a1[*v4] = 1;
      }
      goto LABEL_75;
    }
    if ((v8 & 7) != 0)
      goto LABEL_79;
    while (1)
    {
      v28 = *v2;
      v29 = *(_QWORD *)&a1[v28];
      v30 = v29 + 1;
      if (v29 == -1 || v30 > *(_QWORD *)&a1[*v3])
        break;
      v31 = *(char *)(*(_QWORD *)&a1[*v5] + v29);
      *(_QWORD *)&a1[v28] = v30;
      if (v31 < 0)
      {
        v32 = v15++;
        if (v32 <= 8)
          continue;
      }
      goto LABEL_76;
    }
LABEL_44:
    a1[*v4] = 1;
    goto LABEL_76;
  }
LABEL_77:
  v48 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v48;
}

void sub_188A2AB10(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPContainmentCorrectionIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 104));
  v2 = (*(_BYTE *)(a1 + 108) & 0x1E) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 104));
  return v2;
}

void sub_188A2AE64(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A2B110(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A2B348(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPCorrectedStringReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  char v15;
  unsigned __int8 v16;
  char v17;
  int *v18;
  int *v19;
  int *v20;
  int *v21;
  char v22;
  unsigned int v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  int v30;
  unint64_t v32;
  BOOL v33;
  int *v34;
  int v35;
  int v36;
  BOOL v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  id v41;
  void *v42;
  int v43;
  char v44;
  char v45;
  int v46;
  int v47;
  void *v48;
  int v50;
  char v51;
  char v52;
  char v53;
  BOOL v54;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1)
      + (*(_BYTE *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v11;
        v12 = v7;
        goto LABEL_8;
      case -3:
        v9 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v11 != 0;
        v15 = v14 & ~(_BYTE)v7;
        v16 = v14 | v7;
        v51 = v15 | v8;
        v17 = v16 | v15 | v8;
        if (((v16 | v9) & 1) != 0)
          v18 = 0;
        else
          v18 = a3;
        v54 = v16;
        v52 = v17;
        v53 = (v18 == 0) | v16;
        v19 = (int *)MEMORY[0x1E0D82BF0];
        v20 = (int *)MEMORY[0x1E0D82BC8];
        v21 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_7:
        v12 = v7;
        v13 = v8;
LABEL_8:
        ++v10;
        v7 = v12;
        v8 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v19) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v20))
      goto LABEL_59;
    v22 = 0;
    v23 = 0;
    v24 = 0;
    while (1)
    {
      v25 = *v19;
      v26 = *(_QWORD *)(v3 + v25);
      v27 = v26 + 1;
      if (v26 == -1 || v27 > *(_QWORD *)(v3 + *v6))
        break;
      v28 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v26);
      *(_QWORD *)(v3 + v25) = v27;
      v24 |= (unint64_t)(v28 & 0x7F) << v22;
      if ((v28 & 0x80) == 0)
        goto LABEL_23;
      v22 += 7;
      if (v23++ >= 9)
      {
        v24 = 0;
        v30 = *(unsigned __int8 *)(v3 + *v20);
        goto LABEL_25;
      }
    }
    *(_BYTE *)(v3 + *v20) = 1;
LABEL_23:
    v30 = *(unsigned __int8 *)(v3 + *v20);
    if (*(_BYTE *)(v3 + *v20))
      v24 = 0;
LABEL_25:
    if (v30 || (v24 & 7) == 4)
    {
LABEL_59:
      v50 = 1;
      goto LABEL_60;
    }
    v32 = v24 >> 3;
    v33 = v54;
    if ((v53 & 1) == 0)
    {
      v34 = v18;
      do
      {
        v36 = *v34++;
        v35 = v36;
        v33 = v36 != 0;
        if (v36)
          v37 = v35 == (_DWORD)v32;
        else
          v37 = 1;
      }
      while (!v37);
    }
    if ((_DWORD)v32 == 2)
      break;
    if ((_DWORD)v32 == 1)
    {
      if (!v33)
        goto LABEL_51;
      if ((*(_BYTE *)(a1 + 52) & 4) != 0)
      {
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_77;
        v45 = 32 * *(_BYTE *)(a1 + 52);
        goto LABEL_57;
      }
      PBReaderReadString();
      v38 = objc_claimAutoreleasedReturnValue();
      v39 = 32;
      goto LABEL_44;
    }
    if ((v51 & 1) == 0 || (*(_BYTE *)(a1 + 52) & 1) != 0)
    {
LABEL_51:
      v44 = PBReaderSkipValueWithTag();
      v20 = (int *)MEMORY[0x1E0D82BC8];
      if ((v44 & 1) == 0)
      {
        v50 = 0;
        goto LABEL_60;
      }
      goto LABEL_58;
    }
    if (!*(_QWORD *)(a1 + 16))
    {
      v41 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
      v42 = *(void **)(a1 + 16);
      *(_QWORD *)(a1 + 16) = v41;

    }
    v43 = PBUnknownFieldAdd();
    v20 = (int *)MEMORY[0x1E0D82BC8];
    if (!v43)
    {
      v50 = 0;
      goto LABEL_61;
    }
LABEL_58:
    if (!(v52 & 1 | (v10 != 0)))
      goto LABEL_59;
  }
  if (!v33)
    goto LABEL_51;
  if ((*(_BYTE *)(a1 + 52) & 2) == 0)
  {
    PBReaderReadString();
    v38 = objc_claimAutoreleasedReturnValue();
    v39 = 24;
LABEL_44:
    v40 = *(void **)(a1 + v39);
    *(_QWORD *)(a1 + v39) = v38;

    v20 = (int *)MEMORY[0x1E0D82BC8];
    --v10;
    goto LABEL_58;
  }
  if ((PBReaderSkipValueWithTag() & 1) != 0)
  {
    v45 = *(_BYTE *)(a1 + 52) << 6;
LABEL_57:
    v10 += v45 >> 7;
    v20 = (int *)MEMORY[0x1E0D82BC8];
    goto LABEL_58;
  }
LABEL_77:
  v50 = 0;
  v20 = (int *)MEMORY[0x1E0D82BC8];
LABEL_60:
  if ((v51 & 1) == 0)
    goto LABEL_62;
LABEL_61:
  *(_BYTE *)(a1 + 52) |= 1u;
LABEL_62:
  if (v54 || (v50 & 1) == 0)
  {
    *(_BYTE *)(a1 + 52) |= 4u;
    *(_BYTE *)(a1 + 52) |= 2u;
    goto LABEL_71;
  }
  if (v18)
  {
    while (1)
    {
      v47 = *v18++;
      v46 = v47;
      if (v47 == 1)
        break;
      if (v46 == 2)
      {
LABEL_67:
        *(_BYTE *)(a1 + 52) |= v46;
      }
      else if (!v46)
      {
        goto LABEL_71;
      }
    }
    LOBYTE(v46) = 4;
    goto LABEL_67;
  }
LABEL_71:
  if (v50)
    v3 = *(_BYTE *)(v3 + *v20) == 0;
  else
    v3 = 0;
  if (v54)
  {
    v48 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_188A2B940(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A2BE9C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPCorrectedStringReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEORPCorrectedStringReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEORPCorrectedStringReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEORPCorrectedStringReadAllFrom_initialTag;
  Specified = GEORPCorrectedStringReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_188A2C028(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPCorrectedStringReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORPCorrectedStringReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188A2C088(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPCorrectedStringIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  _BOOL8 v17;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_27;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        goto LABEL_27;
      if ((v8 >> 3) == 2)
        break;
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2)
          goto LABEL_29;
        goto LABEL_23;
      }
      if (!PBReaderSkipValueWithTag())
      {
LABEL_29:
        v17 = 0;
        goto LABEL_28;
      }
LABEL_26:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_27;
    }
    if (v15 != 2)
      goto LABEL_29;
LABEL_23:
    if ((PBReaderSkipValueWithTag() & 1) == 0)
      goto LABEL_29;
    goto LABEL_26;
  }
LABEL_27:
  v17 = a1[*v4] == 0;
LABEL_28:
  PBReaderRecallMark();
  return v17;
}

void sub_188A2C3D4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPCorrectedStringIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v2 = (*(_BYTE *)(a1 + 52) & 0xE) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return v2;
}

void sub_188A2C66C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A2C890(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A2CBA4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPCuratedCollectionContextReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  char v17;
  char v18;
  int *v19;
  int *v20;
  int *v21;
  char v22;
  int *v23;
  char v24;
  unsigned int v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  BOOL v31;
  int v32;
  int v33;
  int *v35;
  int *v36;
  unint64_t v37;
  BOOL v38;
  int *v39;
  int v40;
  int v41;
  BOOL v42;
  char v43;
  unsigned int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  id v50;
  void *v51;
  int v52;
  int v53;
  char v54;
  unsigned int v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  GEORPFeedbackClientImageInfo *v64;
  char v65;
  char v66;
  char v67;
  char v68;
  char v69;
  char v70;
  unsigned int v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  char v76;
  int v77;
  char v78;
  void *v79;
  char v81;
  int v82;
  char v83;
  char v84;
  char v85;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 96));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 92);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 88));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = (vaddv_s16((int16x4_t)(*(_QWORD *)&vshl_u16((uint16x4_t)(*(_QWORD *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 100)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFCFFFAFFFEFFFBLL) & 0xFF01FF01FF01FF01))+ ((*(_BYTE *)(a1 + 100) & 8) != 0)+ ((*(_BYTE *)(a1 + 100) & 2) != 0));
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 > 3;
        v17 = v16 & ~(_BYTE)v11 | v9;
        v18 = v16 | v11;
        if ((((v16 | v11) | v8) & 1) != 0)
          v19 = 0;
        else
          v19 = a3;
        v20 = (int *)MEMORY[0x1E0D82BF0];
        v82 = 1;
        v21 = (int *)MEMORY[0x1E0D82BC8];
        v22 = v17;
        if (*(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(v3 + *v6))
          goto LABEL_114;
        v81 = v17;
        v84 = v18 | v17;
        v85 = (v19 == 0) | v18;
        v23 = (int *)MEMORY[0x1E0D82BB8];
        v83 = v18;
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v7;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_BYTE *)(v3 + *v21))
      goto LABEL_112;
    v24 = 0;
    v25 = 0;
    v26 = 0;
    while (1)
    {
      v27 = *v20;
      v28 = *(_QWORD *)(v3 + v27);
      v29 = v28 + 1;
      if (v28 == -1 || v29 > *(_QWORD *)(v3 + *v6))
        break;
      v30 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v28);
      *(_QWORD *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0)
        goto LABEL_25;
      v24 += 7;
      v31 = v25++ >= 9;
      if (v31)
      {
        v26 = 0;
        v32 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v21) = 1;
LABEL_25:
    v32 = *(unsigned __int8 *)(v3 + *v21);
    if (*(_BYTE *)(v3 + *v21))
      v26 = 0;
LABEL_27:
    v33 = v26 & 7;
    if (v32 || v33 == 4)
    {
LABEL_112:
      v82 = 1;
      goto LABEL_113;
    }
    v35 = v6;
    v36 = v21;
    v37 = v26 >> 3;
    v38 = v18;
    if ((v85 & 1) == 0)
    {
      v39 = v19;
      do
      {
        v41 = *v39++;
        v40 = v41;
        v38 = v41 != 0;
        if (v41)
          v42 = v40 == (_DWORD)v37;
        else
          v42 = 1;
      }
      while (!v42);
    }
    switch((int)v37)
    {
      case 1:
        v21 = v36;
        if ((v8 & 1) == 0)
          goto LABEL_85;
        v43 = 0;
        v44 = 0;
        v45 = 0;
        *(_BYTE *)(a1 + 100) |= 1u;
        v6 = v35;
        v20 = (int *)MEMORY[0x1E0D82BF0];
        v23 = (int *)MEMORY[0x1E0D82BB8];
        while (1)
        {
          v46 = *v20;
          v47 = *(_QWORD *)(v3 + v46);
          v48 = v47 + 1;
          if (v47 == -1 || v48 > *(_QWORD *)(v3 + *v6))
            break;
          v49 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v47);
          *(_QWORD *)(v3 + v46) = v48;
          v45 |= (unint64_t)(v49 & 0x7F) << v43;
          if ((v49 & 0x80) == 0)
            goto LABEL_91;
          v43 += 7;
          v31 = v44++ >= 9;
          if (v31)
          {
            v45 = 0;
            goto LABEL_93;
          }
        }
        *(_BYTE *)(v3 + *v21) = 1;
LABEL_91:
        if (*(_BYTE *)(v3 + *v21))
          v45 = 0;
LABEL_93:
        *(_QWORD *)(a1 + 48) = v45;
        goto LABEL_87;
      case 2:
        v21 = v36;
        if (!v38 || (*(_BYTE *)(a1 + 100) & 4) != 0)
          goto LABEL_85;
        v6 = v35;
        if (v33 == 2)
        {
          v53 = PBReaderPlaceMark();
          v20 = (int *)MEMORY[0x1E0D82BF0];
          v23 = (int *)MEMORY[0x1E0D82BB8];
          if (!v53)
            goto LABEL_133;
          while (*(_QWORD *)(v3 + *v20) < *(_QWORD *)(v3 + *v6) && !*(_BYTE *)(v3 + *v21))
          {
            v54 = 0;
            v55 = 0;
            v56 = 0;
            while (1)
            {
              v57 = *v20;
              v58 = *(_QWORD *)(v3 + v57);
              v59 = v58 + 1;
              if (v58 == -1 || v59 > *(_QWORD *)(v3 + *v6))
                break;
              v60 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v58);
              *(_QWORD *)(v3 + v57) = v59;
              v56 |= (unint64_t)(v60 & 0x7F) << v54;
              if (v60 < 0)
              {
                v54 += 7;
                v31 = v55++ >= 9;
                if (!v31)
                  continue;
              }
              goto LABEL_67;
            }
            *(_BYTE *)(v3 + *v21) = 1;
LABEL_67:
            PBRepeatedUInt64Add();
          }
          PBReaderRecallMark();
        }
        else
        {
          v70 = 0;
          v71 = 0;
          v72 = 0;
          v20 = (int *)MEMORY[0x1E0D82BF0];
          v23 = (int *)MEMORY[0x1E0D82BB8];
          while (1)
          {
            v73 = *v20;
            v74 = *(_QWORD *)(v3 + v73);
            v75 = v74 + 1;
            if (v74 == -1 || v75 > *(_QWORD *)(v3 + *v6))
              break;
            v76 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v74);
            *(_QWORD *)(v3 + v73) = v75;
            v72 |= (unint64_t)(v76 & 0x7F) << v70;
            if (v76 < 0)
            {
              v70 += 7;
              v31 = v71++ >= 9;
              if (!v31)
                continue;
            }
            goto LABEL_111;
          }
          *(_BYTE *)(v3 + *v21) = 1;
LABEL_111:
          PBRepeatedUInt64Add();
        }
        goto LABEL_101;
      case 3:
        v21 = v36;
        if (!v38)
          goto LABEL_85;
        v6 = v35;
        if ((*(_BYTE *)(a1 + 100) & 0x20) == 0)
        {
          PBReaderReadString();
          v61 = objc_claimAutoreleasedReturnValue();
          v62 = 72;
          goto LABEL_77;
        }
        v66 = PBReaderSkipValueWithTag();
        v20 = (int *)MEMORY[0x1E0D82BF0];
        v23 = (int *)MEMORY[0x1E0D82BB8];
        if ((v66 & 1) == 0)
          goto LABEL_133;
        v67 = 4 * *(_BYTE *)(a1 + 100);
        goto LABEL_100;
      case 4:
        v21 = v36;
        if (!v38)
          goto LABEL_85;
        v6 = v35;
        if ((*(_BYTE *)(a1 + 100) & 0x40) == 0)
        {
          PBReaderReadString();
          v61 = objc_claimAutoreleasedReturnValue();
          v62 = 80;
          goto LABEL_77;
        }
        v68 = PBReaderSkipValueWithTag();
        v20 = (int *)MEMORY[0x1E0D82BF0];
        v23 = (int *)MEMORY[0x1E0D82BB8];
        if ((v68 & 1) == 0)
          goto LABEL_133;
        v67 = 2 * *(_BYTE *)(a1 + 100);
        goto LABEL_100;
      case 5:
        v21 = v36;
        if (!v38)
          goto LABEL_85;
        v6 = v35;
        if ((*(_BYTE *)(a1 + 100) & 0x10) == 0)
        {
          PBReaderReadString();
          v61 = objc_claimAutoreleasedReturnValue();
          v62 = 64;
LABEL_77:
          v63 = *(void **)(a1 + v62);
          *(_QWORD *)(a1 + v62) = v61;

          --v7;
          goto LABEL_83;
        }
        v69 = PBReaderSkipValueWithTag();
        v20 = (int *)MEMORY[0x1E0D82BF0];
        v23 = (int *)MEMORY[0x1E0D82BB8];
        if ((v69 & 1) == 0)
          goto LABEL_133;
        v67 = 8 * *(_BYTE *)(a1 + 100);
LABEL_100:
        v7 += v67 >> 7;
LABEL_101:
        v18 = v83;
        goto LABEL_87;
      case 6:
        v21 = v36;
        if (!v38 || (*(_BYTE *)(a1 + 100) & 8) != 0)
        {
LABEL_85:
          v65 = PBReaderSkipValueWithTag();
          v18 = v83;
LABEL_86:
          v6 = v35;
          v20 = (int *)MEMORY[0x1E0D82BF0];
          v23 = (int *)MEMORY[0x1E0D82BB8];
          if ((v65 & 1) == 0)
          {
            v82 = 0;
            goto LABEL_113;
          }
LABEL_87:
          if (!(v84 & 1 | (v7 != 0)) || *(_QWORD *)(v3 + *v20) >= *(_QWORD *)(v3 + *v6))
            goto LABEL_112;
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_133;
        v64 = objc_alloc_init(GEORPFeedbackClientImageInfo);
        if (GEORPFeedbackClientImageInfoReadAllFrom((uint64_t)v64, (void *)v3, v10 & 1))
        {
          v6 = v35;
          PBReaderRecallMark();
          -[GEORPCuratedCollectionContext _addNoFlagsImageInfo:](a1, v64);

LABEL_83:
          v18 = v83;
          v20 = (int *)MEMORY[0x1E0D82BF0];
          v23 = (int *)MEMORY[0x1E0D82BB8];
          goto LABEL_87;
        }

LABEL_133:
        v82 = 0;
        v18 = v83;
LABEL_113:
        v22 = v81;
LABEL_114:
        if ((v22 & 1) != 0)
LABEL_115:
          *(_BYTE *)(a1 + 100) |= 2u;
        if (v18 & 1 | ((v82 & 1) == 0))
        {
          *(_BYTE *)(a1 + 100) |= 4u;
          *(_BYTE *)(a1 + 100) |= 0x20u;
          *(_BYTE *)(a1 + 100) |= 0x40u;
          *(_BYTE *)(a1 + 100) |= 0x10u;
          *(_BYTE *)(a1 + 100) |= 8u;
        }
        else if (v19)
        {
          while (1)
          {
            v77 = *v19++;
            v78 = 4;
            switch(v77)
            {
              case 0:
                goto LABEL_125;
              case 2:
                goto LABEL_124;
              case 3:
                v78 = 32;
                goto LABEL_124;
              case 4:
                v78 = 64;
                goto LABEL_124;
              case 5:
                v78 = 16;
                goto LABEL_124;
              case 6:
                v78 = 8;
LABEL_124:
                *(_BYTE *)(a1 + 100) |= v78;
                break;
              default:
                continue;
            }
          }
        }
LABEL_125:
        if (v82)
        {
          v3 = *(_BYTE *)(v3 + *v21) == 0;
          if ((v18 & 1) == 0)
            return v3;
LABEL_129:
          v79 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        else
        {
          v3 = 0;
          if ((v18 & 1) != 0)
            goto LABEL_129;
        }
        return v3;
      default:
        if ((v81 & 1) == 0 || (*(_BYTE *)(a1 + 100) & 2) != 0)
        {
          v65 = PBReaderSkipValueWithTag();
          v18 = v83;
          v21 = v36;
          goto LABEL_86;
        }
        if (!*(_QWORD *)(a1 + 16))
        {
          v50 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
          v51 = *(void **)(a1 + 16);
          *(_QWORD *)(a1 + 16) = v50;

        }
        v52 = PBUnknownFieldAdd();
        v18 = v83;
        v21 = v36;
        v6 = v35;
        v20 = (int *)MEMORY[0x1E0D82BF0];
        v23 = (int *)MEMORY[0x1E0D82BB8];
        if (!v52)
        {
          v82 = 0;
          goto LABEL_115;
        }
        goto LABEL_87;
    }
  }
}

void sub_188A2D884(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A2D9C8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A2DB08(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A2DC4C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A2E8F8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEORPCuratedCollectionContextCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _BYTE v10[128];
  uint64_t v11;

  v11 = *MEMORY[0x1E0C80C00];
  v6 = 0u;
  v7 = 0u;
  v8 = 0u;
  v9 = 0u;
  v1 = *(id *)(a1 + 56);
  v2 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
  if (v2)
  {
    v3 = v2;
    v4 = *(_QWORD *)v7;
    do
    {
      v5 = 0;
      do
      {
        if (*(_QWORD *)v7 != v4)
          objc_enumerationMutation(v1);
        objc_msgSend(*(id *)(*((_QWORD *)&v6 + 1) + 8 * v5++), "readAll:", 1, (_QWORD)v6);
      }
      while (v3 != v5);
      v3 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
    }
    while (v3);
  }

}

unint64_t GEORPCuratedCollectionContextReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 92))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEORPCuratedCollectionContextReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 96));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 88) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 92) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEORPCuratedCollectionContextReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEORPCuratedCollectionContextReadAllFrom_initialTag;
  Specified = GEORPCuratedCollectionContextReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEORPCuratedCollectionContextCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 96));
  return Specified;
}

void sub_188A2EB84(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPCuratedCollectionContextReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORPCuratedCollectionContextReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188A2EBE4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPCuratedCollectionContextIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  BOOL v13;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  int v26;
  unsigned int v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  int v32;
  _BOOL8 v33;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (!a1[*v4])
    {
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        v13 = v7++ >= 9;
        if (v13)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0)
            goto LABEL_60;
          v17 = 0;
          while (1)
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
              goto LABEL_45;
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if (v21 < 0 && v17++ <= 8)
              continue;
            goto LABEL_46;
          }
        case 2u:
          if (v15 == 2)
          {
            if (!PBReaderPlaceMark())
            {
LABEL_60:
              PBReaderRecallMark();
              return 0;
            }
LABEL_49:
            while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
            {
              v28 = a1[*v4];
              if (a1[*v4])
                break;
              while (1)
              {
                v29 = *v2;
                v30 = *(_QWORD *)&a1[v29];
                v31 = v30 + 1;
                if (v30 == -1 || v31 > *(_QWORD *)&a1[*v3])
                  break;
                v32 = *(char *)(*(_QWORD *)&a1[*v5] + v30);
                *(_QWORD *)&a1[v29] = v31;
                if (v32 < 0)
                {
                  v13 = v28++ >= 9;
                  if (!v13)
                    continue;
                }
                goto LABEL_49;
              }
              a1[*v4] = 1;
            }
LABEL_44:
            PBReaderRecallMark();
          }
          else
          {
            if ((v8 & 7) != 0)
              goto LABEL_60;
            while (1)
            {
              v23 = *v2;
              v24 = *(_QWORD *)&a1[v23];
              v25 = v24 + 1;
              if (v24 == -1 || v25 > *(_QWORD *)&a1[*v3])
                break;
              v26 = *(char *)(*(_QWORD *)&a1[*v5] + v24);
              *(_QWORD *)&a1[v23] = v25;
              if (v26 < 0)
              {
                v27 = v15++;
                if (v27 <= 8)
                  continue;
              }
              goto LABEL_46;
            }
LABEL_45:
            a1[*v4] = 1;
          }
LABEL_46:
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_58;
          break;
        case 3u:
          if (v15 == 2)
            goto LABEL_39;
          goto LABEL_60;
        case 4u:
          if (v15 == 2)
            goto LABEL_39;
          goto LABEL_60;
        case 5u:
          if (v15 == 2)
            goto LABEL_39;
          goto LABEL_60;
        case 6u:
          if (v15 == 2 && PBReaderPlaceMark() && GEORPFeedbackClientImageInfoIsValid(a1))
            goto LABEL_44;
          goto LABEL_60;
        default:
LABEL_39:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_60;
          goto LABEL_46;
      }
    }
  }
LABEL_58:
  v33 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v33;
}

BOOL GEORPFeedbackClientImageInfoIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  _BOOL8 v17;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_27;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        goto LABEL_27;
      if ((v8 >> 3) == 2)
        break;
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2)
          goto LABEL_29;
        goto LABEL_23;
      }
      if (!PBReaderSkipValueWithTag())
      {
LABEL_29:
        v17 = 0;
        goto LABEL_28;
      }
LABEL_26:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_27;
    }
    if (v15 != 2)
      goto LABEL_29;
LABEL_23:
    if ((PBReaderSkipValueWithTag() & 1) == 0)
      goto LABEL_29;
    goto LABEL_26;
  }
LABEL_27:
  v17 = a1[*v4] == 0;
LABEL_28:
  PBReaderRecallMark();
  return v17;
}

void sub_188A2F3DC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPCuratedCollectionContextIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 96));
  v2 = *(unsigned __int8 *)(a1 + 100) > 3u;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 96));
  return v2;
}

void sub_188A2F8C8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A2FD38(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPCuratedCollectionCorrectionsReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  id v25;
  void *v26;
  _BOOL8 v27;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 1)
        {
          v18 = 0;
          v19 = 0;
          v20 = 0;
          *(_BYTE *)(a1 + 20) |= 1u;
          while (1)
          {
            v21 = *v4;
            v22 = *(_QWORD *)&v3[v21];
            v23 = v22 + 1;
            if (v22 == -1 || v23 > *(_QWORD *)&v3[*v5])
              break;
            v24 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v22);
            *(_QWORD *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0)
              goto LABEL_32;
            v18 += 7;
            v15 = v19++ >= 9;
            if (v15)
            {
              LODWORD(v20) = 0;
              goto LABEL_34;
            }
          }
          v3[*v6] = 1;
LABEL_32:
          if (v3[*v6])
            LODWORD(v20) = 0;
LABEL_34:
          *(_DWORD *)(a1 + 16) = v20;
        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v25 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v26 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v25;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_37;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v27 = v3[*v6] == 0;
  }
  else
  {
LABEL_37:
    v27 = 0;
  }
  objc_sync_exit(v3);

  return v27;
}

void sub_188A3074C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPCuratedCollectionCorrectionsReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORPCuratedCollectionCorrectionsReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188A307AC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPCuratedCollectionCorrectionsIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int v20;
  _BOOL8 v22;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      if (v14 || (v8 & 7) == 4)
        break;
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0)
          goto LABEL_33;
        v16 = 0;
        while (1)
        {
          v17 = *v2;
          v18 = *(_QWORD *)&a1[v17];
          v19 = v18 + 1;
          if (v18 == -1 || v19 > *(_QWORD *)&a1[*v3])
            break;
          v20 = *(char *)(*(_QWORD *)&a1[*v5] + v18);
          *(_QWORD *)&a1[v17] = v19;
          if (v20 < 0 && v16++ <= 8)
            continue;
          goto LABEL_30;
        }
        a1[*v4] = 1;
      }
      else if (!PBReaderSkipValueWithTag())
      {
LABEL_33:
        v22 = 0;
        goto LABEL_32;
      }
LABEL_30:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v22 = a1[*v4] == 0;
LABEL_32:
  PBReaderRecallMark();
  return v22;
}

void sub_188A30E34(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPCuratedCollectionFeedbackReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  char v17;
  unsigned __int8 v18;
  char v19;
  int *v20;
  int *v21;
  int *v22;
  int *v23;
  char v24;
  unsigned int v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  int v32;
  unint64_t v34;
  BOOL v35;
  int *v36;
  int v37;
  int v38;
  BOOL v39;
  GEORPCuratedCollectionContext *v40;
  uint64_t v41;
  void *v42;
  id v43;
  void *v44;
  int v45;
  char v46;
  char v47;
  char v48;
  int v49;
  int v50;
  void *v51;
  int v53;
  int *v54;
  char v55;
  char v56;
  char v57;
  BOOL v58;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1)
      + (*(_BYTE *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1);
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v7 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 != 0;
        v17 = v16 & ~(_BYTE)v11 | v9;
        v18 = v16 | v11;
        v55 = v17;
        v19 = v18 | v17;
        if (((v18 | v7) & 1) != 0)
          v20 = 0;
        else
          v20 = a3;
        v58 = v18;
        v56 = v19;
        v57 = (v20 == 0) | v18;
        v21 = (int *)MEMORY[0x1E0D82BF0];
        v22 = (int *)MEMORY[0x1E0D82BC8];
        v23 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v8;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v21) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v22))
      goto LABEL_66;
    v24 = 0;
    v25 = 0;
    v26 = 0;
    while (1)
    {
      v27 = *v21;
      v28 = *(_QWORD *)(v3 + v27);
      v29 = v28 + 1;
      if (v28 == -1 || v29 > *(_QWORD *)(v3 + *v6))
        break;
      v30 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v28);
      *(_QWORD *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0)
        goto LABEL_25;
      v24 += 7;
      if (v25++ >= 9)
      {
        v26 = 0;
        v32 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v22) = 1;
LABEL_25:
    v32 = *(unsigned __int8 *)(v3 + *v22);
    if (*(_BYTE *)(v3 + *v22))
      v26 = 0;
LABEL_27:
    if (v32 || (v26 & 7) == 4)
    {
LABEL_66:
      v53 = 1;
      goto LABEL_67;
    }
    v34 = v26 >> 3;
    v35 = v58;
    if ((v57 & 1) == 0)
    {
      v36 = v20;
      do
      {
        v38 = *v36++;
        v37 = v38;
        v35 = v38 != 0;
        if (v38)
          v39 = v37 == (_DWORD)v34;
        else
          v39 = 1;
      }
      while (!v39);
    }
    if ((_DWORD)v34 == 2)
      break;
    if ((_DWORD)v34 == 1)
    {
      if (!v35)
        goto LABEL_57;
      if ((*(_BYTE *)(a1 + 52) & 2) == 0)
      {
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_86;
        v40 = objc_alloc_init(GEORPCuratedCollectionContext);
        if (!GEORPCuratedCollectionContextReadAllFrom((uint64_t)v40, (void *)v3, v10 & 1))
          goto LABEL_85;
        PBReaderRecallMark();
        v41 = 24;
LABEL_50:
        v42 = *(void **)(a1 + v41);
        *(_QWORD *)(a1 + v41) = v40;

        --v8;
LABEL_64:
        v22 = (int *)MEMORY[0x1E0D82BC8];
        goto LABEL_65;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        goto LABEL_86;
      v47 = *(_BYTE *)(a1 + 52) << 6;
LABEL_63:
      v8 += v47 >> 7;
      goto LABEL_64;
    }
    if ((v55 & 1) == 0 || (*(_BYTE *)(a1 + 52) & 1) != 0)
    {
LABEL_57:
      v46 = PBReaderSkipValueWithTag();
      v22 = (int *)MEMORY[0x1E0D82BC8];
      if ((v46 & 1) == 0)
      {
        v53 = 0;
        goto LABEL_67;
      }
      goto LABEL_65;
    }
    if (!*(_QWORD *)(a1 + 16))
    {
      v43 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
      v44 = *(void **)(a1 + 16);
      *(_QWORD *)(a1 + 16) = v43;

    }
    v45 = PBUnknownFieldAdd();
    v22 = (int *)MEMORY[0x1E0D82BC8];
    if (!v45)
    {
      v53 = 0;
      v54 = &OBJC_IVAR___GEOTransitVehicleInfo__pickupDropoffType;
      goto LABEL_68;
    }
LABEL_65:
    if (!(v56 & 1 | (v8 != 0)))
      goto LABEL_66;
  }
  if (!v35)
    goto LABEL_57;
  if ((*(_BYTE *)(a1 + 52) & 4) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0)
      goto LABEL_86;
    v47 = 32 * *(_BYTE *)(a1 + 52);
    goto LABEL_63;
  }
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_86;
  v40 = objc_alloc_init(GEORPCuratedCollectionCorrections);
  if (GEORPCuratedCollectionCorrectionsReadAllFrom((uint64_t)v40, (void *)v3))
  {
    PBReaderRecallMark();
    v41 = 32;
    goto LABEL_50;
  }
LABEL_85:

LABEL_86:
  v53 = 0;
  v22 = (int *)MEMORY[0x1E0D82BC8];
LABEL_67:
  v54 = &OBJC_IVAR___GEOTransitVehicleInfo__pickupDropoffType;
  if ((v55 & 1) == 0)
    goto LABEL_69;
LABEL_68:
  *(_BYTE *)(a1 + v54[263]) |= 1u;
LABEL_69:
  if (v58 || (v53 & 1) == 0)
  {
    *(_BYTE *)(a1 + v54[263]) |= 2u;
    *(_BYTE *)(a1 + v54[263]) |= 4u;
    goto LABEL_79;
  }
  if (v20)
  {
    while (1)
    {
      v50 = *v20++;
      v49 = v50;
      if (v50 == 1)
        break;
      if (v49 == 2)
      {
        v48 = 4;
LABEL_75:
        *(_BYTE *)(a1 + v54[263]) |= v48;
      }
      else if (!v49)
      {
        goto LABEL_79;
      }
    }
    v48 = 2;
    goto LABEL_75;
  }
LABEL_79:
  if (v53)
    v3 = *(_BYTE *)(v3 + *v22) == 0;
  else
    v3 = 0;
  if (v58)
  {
    v51 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_188A314C8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A31ABC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPCuratedCollectionFeedbackReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEORPCuratedCollectionFeedbackReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEORPCuratedCollectionFeedbackReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEORPCuratedCollectionFeedbackReadAllFrom_initialTag;
  Specified = GEORPCuratedCollectionFeedbackReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    objc_msgSend(*(id *)(a1 + 24), "readAll:", 1);
    objc_msgSend(*(id *)(a1 + 32), "readAll:", 1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_188A31C74(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPCuratedCollectionFeedbackReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORPCuratedCollectionFeedbackReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188A31CD4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPCuratedCollectionFeedbackIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  _BOOL8 v17;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_30;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        goto LABEL_30;
      if ((v8 >> 3) == 2)
        break;
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEORPCuratedCollectionContextIsValid(a1))
          goto LABEL_31;
LABEL_27:
        PBReaderRecallMark();
        goto LABEL_29;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        goto LABEL_31;
LABEL_29:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_30;
    }
    if (v15 != 2 || !PBReaderPlaceMark() || !GEORPCuratedCollectionCorrectionsIsValid(a1))
    {
LABEL_31:
      PBReaderRecallMark();
      return 0;
    }
    goto LABEL_27;
  }
LABEL_30:
  v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

void sub_188A32050(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORPCuratedCollectionFeedbackIsDirty(uint64_t a1)
{
  unsigned int v2;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v2 = *(unsigned __int8 *)(a1 + 52);
  if ((v2 & 8) != 0)
    return 1;
  if ((v2 & 2) != 0)
  {
    if (GEORPCuratedCollectionContextIsDirty(*(_QWORD *)(a1 + 24)))
      return 1;
    v2 = *(unsigned __int8 *)(a1 + 52);
  }
  return (v2 >> 2) & 1;
}

os_unfair_lock_s *GEORPCuratedCollectionFeedbackIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEORPCuratedCollectionFeedbackIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 12);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_188A32344(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A32590(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A32814(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPDirectionsCorrectionsReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  int *v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  int *v18;
  int *v19;
  int *v20;
  int *v21;
  char v22;
  unsigned int v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  BOOL v29;
  int v30;
  unint64_t v32;
  BOOL v33;
  int *v34;
  int v35;
  int v36;
  BOOL v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  void *v41;
  int v42;
  GEORPSuggestedRouteIndex *v43;
  void *v44;
  char v45;
  unsigned int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  char v51;
  char v52;
  char v53;
  int v54;
  char v55;
  void *v56;
  int v58;
  int *v59;
  char v60;
  char v61;
  char v62;
  char v63;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 68);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 64));
  v7 = v6;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = (vaddv_s16((int16x4_t)(*(_QWORD *)&vshl_u16((uint16x4_t)(*(_QWORD *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 80)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFBFFFCFFFDFFFALL) & 0xFF01FF01FF01FF01))+ ((*(_BYTE *)(a1 + 80) & 4) != 0)+ ((*(_BYTE *)(a1 + 80) & 2) != 0));
  while (2)
  {
    v14 = 1;
    v15 = 1;
    v16 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v13;
        goto LABEL_8;
      case -3:
        v9 = 1;
        goto LABEL_7;
      case -2:
        v15 = v11;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v17 = v13 > 3;
        v60 = v17 & ~(_BYTE)v12 | v10;
        v61 = v17 | v12 | v60;
        if ((((v17 | v12) | v9) & 1) != 0)
          v18 = 0;
        else
          v18 = a3;
        v19 = (int *)MEMORY[0x1E0D82BF0];
        v62 = (v18 == 0) | v17 | v12;
        v63 = v17 | v12;
        v20 = (int *)MEMORY[0x1E0D82BC8];
        v21 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v13;
LABEL_7:
        v14 = v10;
LABEL_8:
        v15 = v11;
        v16 = v12;
LABEL_10:
        ++v8;
        v10 = v14;
        v11 = v15;
        v12 = v16;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v19) >= *(_QWORD *)(v3 + *v7) || *(_BYTE *)(v3 + *v20))
      goto LABEL_92;
    v22 = 0;
    v23 = 0;
    v24 = 0;
    while (1)
    {
      v25 = *v19;
      v26 = *(_QWORD *)(v3 + v25);
      v27 = v26 + 1;
      if (v26 == -1 || v27 > *(_QWORD *)(v3 + *v7))
        break;
      v28 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v26);
      *(_QWORD *)(v3 + v25) = v27;
      v24 |= (unint64_t)(v28 & 0x7F) << v22;
      if ((v28 & 0x80) == 0)
        goto LABEL_25;
      v22 += 7;
      v29 = v23++ >= 9;
      if (v29)
      {
        v24 = 0;
        v30 = *(unsigned __int8 *)(v3 + *v20);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v20) = 1;
LABEL_25:
    v30 = *(unsigned __int8 *)(v3 + *v20);
    if (*(_BYTE *)(v3 + *v20))
      v24 = 0;
LABEL_27:
    if (v30 || (v24 & 7) == 4)
    {
LABEL_92:
      v58 = 1;
      goto LABEL_93;
    }
    v32 = v24 >> 3;
    v33 = v63;
    if ((v62 & 1) == 0)
    {
      v34 = v18;
      do
      {
        v36 = *v34++;
        v35 = v36;
        v33 = v36 != 0;
        if (v36)
          v37 = v35 == (_DWORD)v32;
        else
          v37 = 1;
      }
      while (!v37);
    }
    switch((int)v32)
    {
      case 1:
        if (!v33)
          goto LABEL_77;
        if ((*(_BYTE *)(a1 + 80) & 8) == 0)
        {
          PBReaderReadData();
          v38 = objc_claimAutoreleasedReturnValue();
          v39 = 32;
          goto LABEL_62;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_111;
        v53 = 16 * *(_BYTE *)(a1 + 80);
        goto LABEL_89;
      case 2:
        if (!v33 || (*(_BYTE *)(a1 + 80) & 0x40) != 0)
          goto LABEL_77;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_111;
        v43 = objc_alloc_init(GEORPSuggestedRouteIndex);
        if (!GEORPSuggestedRouteIndexReadAllFrom((uint64_t)v43, (void *)v3))
          goto LABEL_110;
        PBReaderRecallMark();
        -[GEORPDirectionsCorrections _addNoFlagsProblematicRouteIndex:](a1, v43);
        goto LABEL_58;
      case 3:
        if (!v33 || (*(_BYTE *)(a1 + 80) & 0x10) != 0)
          goto LABEL_77;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_111;
        v43 = objc_alloc_init(GEORPInstructionCorrection);
        if (!GEORPInstructionCorrectionReadAllFrom((uint64_t)v43, (void *)v3, v11 & 1))
          goto LABEL_110;
        PBReaderRecallMark();
        -[GEORPDirectionsCorrections _addNoFlagsInstructionCorrection:](a1, v43);
LABEL_58:

        goto LABEL_90;
      case 4:
        if (!v33)
          goto LABEL_77;
        if ((*(_BYTE *)(a1 + 80) & 0x20) == 0)
        {
          PBReaderReadString();
          v38 = objc_claimAutoreleasedReturnValue();
          v39 = 48;
LABEL_62:
          v44 = *(void **)(a1 + v39);
          *(_QWORD *)(a1 + v39) = v38;
          goto LABEL_68;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_111;
        v53 = 4 * *(_BYTE *)(a1 + 80);
        goto LABEL_89;
      case 5:
        if (!v33)
          goto LABEL_77;
        if ((*(_BYTE *)(a1 + 80) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_111;
          v53 = 32 * *(_BYTE *)(a1 + 80);
LABEL_89:
          v8 += v53 >> 7;
          goto LABEL_90;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_111;
        v43 = objc_alloc_init(GEORPCorrectedCoordinate);
        if (GEORPCorrectedCoordinateReadAllFrom((uint64_t)v43, (void *)v3, v11 & 1))
        {
          PBReaderRecallMark();
          v44 = *(void **)(a1 + 24);
          *(_QWORD *)(a1 + 24) = v43;
LABEL_68:

          --v8;
LABEL_90:
          v20 = (int *)MEMORY[0x1E0D82BC8];
          v7 = (int *)MEMORY[0x1E0D82BD8];
LABEL_91:
          if (!(v61 & 1 | (v8 != 0)))
            goto LABEL_92;
          continue;
        }
LABEL_110:

LABEL_111:
        v58 = 0;
        v20 = (int *)MEMORY[0x1E0D82BC8];
LABEL_93:
        v59 = &OBJC_IVAR___GEOTransitVehicleInfo__pickupDropoffType;
        if ((v60 & 1) != 0)
LABEL_94:
          *(_BYTE *)(a1 + v59[271]) |= 2u;
        if (v63 & 1 | ((v58 & 1) == 0))
        {
          *(_BYTE *)(a1 + v59[271]) |= 8u;
          *(_BYTE *)(a1 + v59[271]) |= 0x40u;
          *(_BYTE *)(a1 + v59[271]) |= 0x10u;
          *(_BYTE *)(a1 + v59[271]) |= 0x20u;
          *(_BYTE *)(a1 + v59[271]) |= 4u;
        }
        else if (v18)
        {
          while (1)
          {
            v54 = *v18++;
            v55 = 8;
            switch(v54)
            {
              case 0:
                goto LABEL_104;
              case 1:
                goto LABEL_103;
              case 2:
                v55 = 64;
                goto LABEL_103;
              case 3:
                v55 = 16;
                goto LABEL_103;
              case 4:
                v55 = 32;
                goto LABEL_103;
              case 5:
                v55 = 4;
LABEL_103:
                *(_BYTE *)(a1 + v59[271]) |= v55;
                break;
              default:
                continue;
            }
          }
        }
LABEL_104:
        if (v58)
          v3 = *(_BYTE *)(v3 + *v20) == 0;
        else
          v3 = 0;
        if ((v63 & 1) != 0)
        {
          v56 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      case 6:
        if ((v9 & 1) == 0)
          goto LABEL_77;
        v45 = 0;
        v46 = 0;
        v47 = 0;
        *(_BYTE *)(a1 + 80) |= 1u;
        while (2)
        {
          v48 = *v19;
          v49 = *(_QWORD *)(v3 + v48);
          v50 = v49 + 1;
          if (v49 == -1 || v50 > *(_QWORD *)(v3 + *v7))
          {
            *(_BYTE *)(v3 + *v20) = 1;
          }
          else
          {
            v51 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v49);
            *(_QWORD *)(v3 + v48) = v50;
            v47 |= (unint64_t)(v51 & 0x7F) << v45;
            if (v51 < 0)
            {
              v45 += 7;
              v29 = v46++ >= 9;
              if (v29)
              {
                v47 = 0;
                goto LABEL_82;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v20))
          v47 = 0;
LABEL_82:
        *(_BYTE *)(a1 + 76) = v47 != 0;
        goto LABEL_91;
      default:
        if ((v60 & 1) == 0 || (*(_BYTE *)(a1 + 80) & 2) != 0)
        {
LABEL_77:
          v52 = PBReaderSkipValueWithTag();
          v7 = (int *)MEMORY[0x1E0D82BD8];
          v20 = (int *)MEMORY[0x1E0D82BC8];
          if ((v52 & 1) == 0)
          {
            v58 = 0;
            goto LABEL_93;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v40 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v41 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v40;

          }
          v42 = PBUnknownFieldAdd();
          v20 = (int *)MEMORY[0x1E0D82BC8];
          v7 = (int *)MEMORY[0x1E0D82BD8];
          if (!v42)
          {
            v58 = 0;
            v59 = &OBJC_IVAR___GEOTransitVehicleInfo__pickupDropoffType;
            goto LABEL_94;
          }
        }
        goto LABEL_91;
    }
  }
}

void sub_188A33118(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A3344C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A33780(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A338C4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A3455C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORPDirectionsCorrectionsCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  _BYTE v21[128];
  _BYTE v22[128];
  uint64_t v23;

  v23 = *MEMORY[0x1E0C80C00];
  v17 = 0u;
  v18 = 0u;
  v19 = 0u;
  v20 = 0u;
  v2 = a1[7];
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v17, v22, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v18;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v18 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v17 + 1) + 8 * v6++), "readAll:", 1);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v17, v22, 16);
    }
    while (v4);
  }

  v15 = 0u;
  v16 = 0u;
  v13 = 0u;
  v14 = 0u;
  v7 = a1[5];
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v13, v21, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v14;
    do
    {
      v11 = 0;
      do
      {
        if (*(_QWORD *)v14 != v10)
          objc_enumerationMutation(v7);
        objc_msgSend(*(id *)(*((_QWORD *)&v13 + 1) + 8 * v11++), "readAll:", 1, (_QWORD)v13);
      }
      while (v9 != v11);
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v13, v21, 16);
    }
    while (v9);
  }

  return objc_msgSend(a1[3], "readAll:", 1);
}

unint64_t GEORPDirectionsCorrectionsReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 68))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEORPDirectionsCorrectionsReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 72));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 64) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 68) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEORPDirectionsCorrectionsReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEORPDirectionsCorrectionsReadAllFrom_initialTag;
  Specified = GEORPDirectionsCorrectionsReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEORPDirectionsCorrectionsCallReadAllRecursiveWithoutSynchronized((id *)a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return Specified;
}

void sub_188A34898(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPDirectionsCorrectionsReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORPDirectionsCorrectionsReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188A348F8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPDirectionsCorrectionsIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  _BOOL8 v23;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2)
            goto LABEL_48;
          goto LABEL_30;
        case 2u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPSuggestedRouteIndexIsValid(a1))
            goto LABEL_48;
          goto LABEL_35;
        case 3u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPInstructionCorrectionIsValid(a1))
            goto LABEL_48;
          goto LABEL_35;
        case 4u:
          if (v15 == 2)
            goto LABEL_30;
          goto LABEL_48;
        case 5u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPCorrectedCoordinateIsValid(a1))
            goto LABEL_48;
LABEL_35:
          PBReaderRecallMark();
          continue;
        case 6u:
          if ((v8 & 7) != 0)
            goto LABEL_48;
          v17 = 0;
          break;
        default:
LABEL_30:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_48:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v18 = *v2;
        v19 = *(_QWORD *)&a1[v18];
        v20 = v19 + 1;
        if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
          break;
        v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
        *(_QWORD *)&a1[v18] = v20;
        if (v21 < 0 && v17++ <= 8)
          continue;
        goto LABEL_36;
      }
      a1[*v4] = 1;
LABEL_36:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v23 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v23;
}

void sub_188A34EF0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORPDirectionsCorrectionsIsDirty(uint64_t a1)
{
  unsigned int v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t i;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _BYTE v12[128];
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  v2 = *(unsigned __int8 *)(a1 + 80);
  if (v2 > 7)
    return 1;
  if ((v2 & 4) != 0)
  {
    if (GEORPCorrectedCoordinateIsDirty(*(_QWORD *)(a1 + 24)))
      return 1;
    LOBYTE(v2) = *(_BYTE *)(a1 + 80);
  }
  if ((v2 & 0x10) == 0)
    return 0;
  v10 = 0u;
  v11 = 0u;
  v8 = 0u;
  v9 = 0u;
  v4 = *(id *)(a1 + 40);
  v3 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
  if (v3)
  {
    v5 = *(_QWORD *)v9;
    while (2)
    {
      for (i = 0; i != v3; ++i)
      {
        if (*(_QWORD *)v9 != v5)
          objc_enumerationMutation(v4);
        if ((GEORPInstructionCorrectionIsDirty(*(os_unfair_lock_s **)(*((_QWORD *)&v8 + 1) + 8 * i)) & 1) != 0)
        {
          v3 = 1;
          goto LABEL_18;
        }
      }
      v3 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
      if (v3)
        continue;
      break;
    }
  }
LABEL_18:

  return v3;
}

os_unfair_lock_s *GEORPDirectionsCorrectionsIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEORPDirectionsCorrectionsIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 18);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_188A3570C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A35C14(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A35EA0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPDirectionsFeedbackReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  int *v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  int *v18;
  int *v19;
  int *v20;
  int *v21;
  char v22;
  unsigned int v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  BOOL v29;
  int v30;
  unint64_t v32;
  BOOL v33;
  int *v34;
  int v35;
  int v36;
  BOOL v37;
  GEORPDirectionsFeedbackContext *v38;
  uint64_t v39;
  char v40;
  unsigned int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  char v46;
  void *v47;
  id v48;
  void *v49;
  int v50;
  char v51;
  char v52;
  int v53;
  int v54;
  char v55;
  void *v56;
  int v58;
  int *v59;
  char v60;
  char v61;
  char v62;
  char v63;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = v6;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = ((*(unsigned __int8 *)(a1 + 56) >> 2) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 1) & 1);
  while (2)
  {
    v14 = 1;
    v15 = 1;
    v16 = 1;
    switch(a3[v9])
    {
      case -4:
        ++v13;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v15 = v11;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v17 = v13 != 0;
        v60 = v17 & ~(_BYTE)v12 | v10;
        v61 = v17 | v12 | v60;
        if ((((v17 | v12) | v8) & 1) != 0)
          v18 = 0;
        else
          v18 = a3;
        v19 = (int *)MEMORY[0x1E0D82BF0];
        v20 = (int *)MEMORY[0x1E0D82BC8];
        v62 = (v18 == 0) | v17 | v12;
        v63 = v17 | v12;
        v21 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v13;
LABEL_7:
        v14 = v10;
LABEL_8:
        v15 = v11;
        v16 = v12;
LABEL_10:
        ++v9;
        v10 = v14;
        v11 = v15;
        v12 = v16;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v19) >= *(_QWORD *)(v3 + *v7) || *(_BYTE *)(v3 + *v20))
      goto LABEL_79;
    v22 = 0;
    v23 = 0;
    v24 = 0;
    while (1)
    {
      v25 = *v19;
      v26 = *(_QWORD *)(v3 + v25);
      v27 = v26 + 1;
      if (v26 == -1 || v27 > *(_QWORD *)(v3 + *v7))
        break;
      v28 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v26);
      *(_QWORD *)(v3 + v25) = v27;
      v24 |= (unint64_t)(v28 & 0x7F) << v22;
      if ((v28 & 0x80) == 0)
        goto LABEL_25;
      v22 += 7;
      v29 = v23++ >= 9;
      if (v29)
      {
        v24 = 0;
        v30 = *(unsigned __int8 *)(v3 + *v20);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v20) = 1;
LABEL_25:
    v30 = *(unsigned __int8 *)(v3 + *v20);
    if (*(_BYTE *)(v3 + *v20))
      v24 = 0;
LABEL_27:
    if (v30 || (v24 & 7) == 4)
    {
LABEL_79:
      v58 = 1;
      goto LABEL_80;
    }
    v32 = v24 >> 3;
    v33 = v63;
    if ((v62 & 1) == 0)
    {
      v34 = v18;
      do
      {
        v36 = *v34++;
        v35 = v36;
        v33 = v36 != 0;
        if (v36)
          v37 = v35 == (_DWORD)v32;
        else
          v37 = 1;
      }
      while (!v37);
    }
    if ((_DWORD)v32 == 3)
    {
      if ((v8 & 1) == 0)
        goto LABEL_66;
      v40 = 0;
      v41 = 0;
      v42 = 0;
      *(_BYTE *)(a1 + 56) |= 1u;
      while (1)
      {
        v43 = *v19;
        v44 = *(_QWORD *)(v3 + v43);
        v45 = v44 + 1;
        if (v44 == -1 || v45 > *(_QWORD *)(v3 + *v7))
          break;
        v46 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v44);
        *(_QWORD *)(v3 + v43) = v45;
        v42 |= (unint64_t)(v46 & 0x7F) << v40;
        if ((v46 & 0x80) == 0)
          goto LABEL_69;
        v40 += 7;
        v29 = v41++ >= 9;
        if (v29)
        {
          LODWORD(v42) = 0;
          goto LABEL_71;
        }
      }
      *(_BYTE *)(v3 + *v20) = 1;
LABEL_69:
      if (*(_BYTE *)(v3 + *v20))
        LODWORD(v42) = 0;
LABEL_71:
      *(_DWORD *)(a1 + 52) = v42;
      goto LABEL_78;
    }
    if ((_DWORD)v32 == 2)
      break;
    if ((_DWORD)v32 == 1)
    {
      if (!v33)
        goto LABEL_66;
      if ((*(_BYTE *)(a1 + 56) & 4) == 0)
      {
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_99;
        v38 = objc_alloc_init(GEORPDirectionsFeedbackContext);
        if (!GEORPDirectionsFeedbackContextReadAllFrom((uint64_t)v38, (void *)v3, v11 & 1))
          goto LABEL_98;
        PBReaderRecallMark();
        v39 = 24;
LABEL_59:
        v47 = *(void **)(a1 + v39);
        *(_QWORD *)(a1 + v39) = v38;

        --v9;
LABEL_77:
        v20 = (int *)MEMORY[0x1E0D82BC8];
        v7 = (int *)MEMORY[0x1E0D82BD8];
        goto LABEL_78;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        goto LABEL_99;
      v52 = 32 * *(_BYTE *)(a1 + 56);
LABEL_76:
      v9 += v52 >> 7;
      goto LABEL_77;
    }
    if ((v60 & 1) == 0 || (*(_BYTE *)(a1 + 56) & 2) != 0)
    {
LABEL_66:
      v51 = PBReaderSkipValueWithTag();
      v7 = (int *)MEMORY[0x1E0D82BD8];
      v20 = (int *)MEMORY[0x1E0D82BC8];
      if ((v51 & 1) == 0)
      {
        v58 = 0;
        goto LABEL_80;
      }
      goto LABEL_78;
    }
    if (!*(_QWORD *)(a1 + 16))
    {
      v48 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
      v49 = *(void **)(a1 + 16);
      *(_QWORD *)(a1 + 16) = v48;

    }
    v50 = PBUnknownFieldAdd();
    v20 = (int *)MEMORY[0x1E0D82BC8];
    v7 = (int *)MEMORY[0x1E0D82BD8];
    if (!v50)
    {
      v58 = 0;
      v59 = &OBJC_IVAR___GEOTransitVehicleInfo__pickupDropoffType;
      goto LABEL_81;
    }
LABEL_78:
    if (!(v61 & 1 | (v9 != 0)))
      goto LABEL_79;
  }
  if (!v33)
    goto LABEL_66;
  if ((*(_BYTE *)(a1 + 56) & 8) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0)
      goto LABEL_99;
    v52 = 16 * *(_BYTE *)(a1 + 56);
    goto LABEL_76;
  }
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_99;
  v38 = objc_alloc_init(GEORPDirectionsCorrections);
  if (GEORPDirectionsCorrectionsReadAllFrom((uint64_t)v38, (void *)v3, v11 & 1))
  {
    PBReaderRecallMark();
    v39 = 32;
    goto LABEL_59;
  }
LABEL_98:

LABEL_99:
  v58 = 0;
  v20 = (int *)MEMORY[0x1E0D82BC8];
LABEL_80:
  v59 = &OBJC_IVAR___GEOTransitVehicleInfo__pickupDropoffType;
  if ((v60 & 1) == 0)
    goto LABEL_82;
LABEL_81:
  *(_BYTE *)(a1 + v59[283]) |= 2u;
LABEL_82:
  if (v63 & 1 | ((v58 & 1) == 0))
  {
    *(_BYTE *)(a1 + v59[283]) |= 4u;
    *(_BYTE *)(a1 + v59[283]) |= 8u;
    goto LABEL_92;
  }
  if (v18)
  {
    while (2)
    {
      while (1)
      {
        v54 = *v18++;
        v53 = v54;
        if (v54 == 1)
          break;
        if (v53 == 2)
        {
          v55 = 8;
          goto LABEL_91;
        }
        if (!v53)
          goto LABEL_92;
      }
      v55 = 4;
LABEL_91:
      *(_BYTE *)(a1 + v59[283]) |= v55;
      continue;
    }
  }
LABEL_92:
  if (v58)
    v3 = *(_BYTE *)(v3 + *v20) == 0;
  else
    v3 = 0;
  if ((v63 & 1) != 0)
  {
    v56 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_188A36610(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A36F90(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPDirectionsFeedbackReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEORPDirectionsFeedbackReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEORPDirectionsFeedbackReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEORPDirectionsFeedbackReadAllFrom_initialTag;
  Specified = GEORPDirectionsFeedbackReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    objc_msgSend(*(id *)(a1 + 24), "readAll:", 1);
    objc_msgSend(*(id *)(a1 + 32), "readAll:", 1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_188A37148(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPDirectionsFeedbackReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORPDirectionsFeedbackReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188A371A8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPDirectionsFeedbackIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unint64_t v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int v22;
  _BOOL8 v24;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      v17 = v8 >> 3;
      if ((v8 >> 3) == 3)
      {
        if ((v8 & 7) != 0)
          goto LABEL_43;
        v18 = 0;
        while (1)
        {
          v19 = *v2;
          v20 = *(_QWORD *)&a1[v19];
          v21 = v20 + 1;
          if (v20 == -1 || v21 > *(_QWORD *)&a1[*v3])
            break;
          v22 = *(char *)(*(_QWORD *)&a1[*v5] + v20);
          *(_QWORD *)&a1[v19] = v21;
          if (v22 < 0 && v18++ <= 8)
            continue;
          goto LABEL_40;
        }
        a1[*v4] = 1;
      }
      else
      {
        if ((_DWORD)v17 == 2)
        {
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPDirectionsCorrectionsIsValid(a1))
          {
LABEL_43:
            PBReaderRecallMark();
            return 0;
          }
          goto LABEL_36;
        }
        if ((_DWORD)v17 == 1)
        {
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPDirectionsFeedbackContextIsValid(a1))
            goto LABEL_43;
LABEL_36:
          PBReaderRecallMark();
          continue;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_43;
      }
LABEL_40:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v24 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v24;
}

BOOL GEORPDirectionsFeedbackContextIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  _BOOL8 v23;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 == 2 && PBReaderPlaceMark() && GEODirectionsRequestIsValid(a1))
            goto LABEL_44;
          goto LABEL_57;
        case 2u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEODirectionsResponseIsValid(a1))
            goto LABEL_57;
          goto LABEL_44;
        case 3u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPPlaceRequestResponseIsValid(a1))
            goto LABEL_57;
          goto LABEL_44;
        case 4u:
        case 5u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPUserSearchInputIsValid(a1))
            goto LABEL_57;
          goto LABEL_44;
        case 7u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOWaypointRouteIsValid(a1))
            goto LABEL_57;
          goto LABEL_44;
        case 8u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOLatLngIsValid(a1))
            goto LABEL_57;
LABEL_44:
          PBReaderRecallMark();
          continue;
        case 9u:
          if ((v8 & 7) != 0)
            goto LABEL_57;
          v17 = 0;
          break;
        default:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_57:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v18 = *v2;
        v19 = *(_QWORD *)&a1[v18];
        v20 = v19 + 1;
        if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
          break;
        v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
        *(_QWORD *)&a1[v18] = v20;
        if (v21 < 0 && v17++ <= 8)
          continue;
        goto LABEL_45;
      }
      a1[*v4] = 1;
LABEL_45:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v23 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v23;
}

void sub_188A378D8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORPDirectionsFeedbackIsDirty(uint64_t a1)
{
  char v2;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v2 = *(_BYTE *)(a1 + 56);
  if ((v2 & 0x10) != 0)
    return 1;
  if ((*(_BYTE *)(a1 + 56) & 4) != 0)
  {
    if ((GEORPDirectionsFeedbackContextIsDirty(*(os_unfair_lock_s **)(a1 + 24)) & 1) != 0)
      return 1;
    v2 = *(_BYTE *)(a1 + 56);
  }
  if ((v2 & 8) != 0)
    return (uint64_t)GEORPDirectionsCorrectionsIsDirty(*(os_unfair_lock_s **)(a1 + 32));
  else
    return 0;
}

os_unfair_lock_s *GEORPDirectionsFeedbackIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEORPDirectionsFeedbackIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 12);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void GEORPDirectionsFeedbackClearSensitiveFields(void *a1, uint64_t a2, int a3)
{
  void *v5;
  int HasSensitiveFields;
  void *v7;
  id *v8;

  if (a3
    && objc_msgSend(a1, "hasDirectionsContext")
    && (objc_msgSend(a1, "directionsContext"),
        v5 = (void *)objc_claimAutoreleasedReturnValue(),
        HasSensitiveFields = GEORPDirectionsFeedbackContextHasSensitiveFields(v5, a2),
        v5,
        HasSensitiveFields))
  {
    objc_msgSend(a1, "directionsContext");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = (id *)objc_msgSend(v7, "copy");

    GEORPDirectionsFeedbackContextClearSensitiveFields(v8, a2, 0);
    objc_msgSend(a1, "setDirectionsContext:", v8);
  }
  else
  {
    objc_msgSend(a1, "directionsContext");
    v8 = (id *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "clearSensitiveFields:", a2);
  }

}

void *GEORPDirectionsFeedbackHasSensitiveFields(void *result, uint64_t a2)
{
  void *v3;
  uint64_t HasSensitiveFields;

  if (result)
  {
    objc_msgSend(result, "directionsContext");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    HasSensitiveFields = GEORPDirectionsFeedbackContextHasSensitiveFields(v3, a2);

    return (void *)HasSensitiveFields;
  }
  return result;
}

uint64_t GEORPDirectionsFeedbackContextHasSensitiveFields(void *a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  _BYTE v31[128];
  _BYTE v32[128];
  _BYTE v33[128];
  uint64_t v34;

  v34 = *MEMORY[0x1E0C80C00];
  if (!a1)
    return 0;
  v29 = 0u;
  v30 = 0u;
  v27 = 0u;
  v28 = 0u;
  objc_msgSend(a1, "directionsRequests");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v27, v33, 16);
  if (v5)
  {
    v6 = v5;
    v7 = *(_QWORD *)v28;
LABEL_4:
    v8 = 0;
    while (1)
    {
      if (*(_QWORD *)v28 != v7)
        objc_enumerationMutation(v4);
      if ((GEODirectionsRequestHasSensitiveFields(*(_QWORD *)(*((_QWORD *)&v27 + 1) + 8 * v8)) & 1) != 0)
        goto LABEL_27;
      if (v6 == ++v8)
      {
        v6 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v27, v33, 16);
        if (v6)
          goto LABEL_4;
        break;
      }
    }
  }

  v25 = 0u;
  v26 = 0u;
  v23 = 0u;
  v24 = 0u;
  objc_msgSend(a1, "directionsResponses");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v23, v32, 16);
  if (v9)
  {
    v10 = v9;
    v11 = *(_QWORD *)v24;
LABEL_12:
    v12 = 0;
    while (1)
    {
      if (*(_QWORD *)v24 != v11)
        objc_enumerationMutation(v4);
      if ((GEODirectionsResponseHasSensitiveFields(*(void **)(*((_QWORD *)&v23 + 1) + 8 * v12)) & 1) != 0)
        goto LABEL_27;
      if (v10 == ++v12)
      {
        v10 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v23, v32, 16);
        if (v10)
          goto LABEL_12;
        break;
      }
    }
  }

  v21 = 0u;
  v22 = 0u;
  v19 = 0u;
  v20 = 0u;
  objc_msgSend(a1, "directionsWaypointPlaceInfos", 0);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v13 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v19, v31, 16);
  if (v13)
  {
    v14 = v13;
    v15 = *(_QWORD *)v20;
LABEL_20:
    v16 = 0;
    while (1)
    {
      if (*(_QWORD *)v20 != v15)
        objc_enumerationMutation(v4);
      if ((GEORPPlaceRequestResponseHasSensitiveFields(*(void **)(*((_QWORD *)&v19 + 1) + 8 * v16), a2) & 1) != 0)break;
      if (v14 == ++v16)
      {
        v14 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v19, v31, 16);
        if (v14)
          goto LABEL_20;
        goto LABEL_26;
      }
    }
LABEL_27:
    v17 = 1;
    goto LABEL_28;
  }
LABEL_26:
  v17 = 0;
LABEL_28:

  return v17;
}

unint64_t GEORPDirectionsFeedbackContextClearSensitiveFields(id *a1, uint64_t a2, int a3)
{
  unint64_t v6;
  uint64_t v7;
  void *v8;
  id *v9;
  unint64_t v10;
  void *v11;
  void *v12;
  void *v13;
  unint64_t result;
  unint64_t i;
  void *v16;
  void *v17;
  void *v18;
  void *v19;

  -[GEORPDirectionsFeedbackContext _readDirectionsRequests]((uint64_t)a1);
  if (objc_msgSend(a1[3], "count"))
  {
    v6 = 0;
    do
    {
      objc_msgSend(a1[3], "objectAtIndexedSubscript:", v6);
      v7 = objc_claimAutoreleasedReturnValue();
      v8 = (void *)v7;
      if (a3 && GEODirectionsRequestHasSensitiveFields(v7))
      {
        v9 = (id *)objc_msgSend(v8, "copy");
        GEODirectionsRequestClearSensitiveFields(v9, a2, 0);
        objc_msgSend(a1[3], "replaceObjectAtIndex:withObject:", v6, v9);

      }
      else
      {
        objc_msgSend(v8, "clearSensitiveFields:", a2);
      }

      ++v6;
    }
    while (v6 < objc_msgSend(a1[3], "count"));
  }
  -[GEORPDirectionsFeedbackContext _readDirectionsResponses]((uint64_t)a1);
  if (objc_msgSend(a1[4], "count"))
  {
    v10 = 0;
    do
    {
      objc_msgSend(a1[4], "objectAtIndexedSubscript:", v10);
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      v12 = v11;
      if (a3 && GEODirectionsResponseHasSensitiveFields(v11))
      {
        v13 = (void *)objc_msgSend(v12, "copy");
        GEODirectionsResponseClearSensitiveFields((uint64_t)v13, a2, 0);
        objc_msgSend(a1[4], "replaceObjectAtIndex:withObject:", v10, v13);

      }
      else
      {
        objc_msgSend(v12, "clearSensitiveFields:", a2);
      }

      ++v10;
    }
    while (v10 < objc_msgSend(a1[4], "count"));
  }
  -[GEORPDirectionsFeedbackContext _readDirectionsWaypointPlaceInfos]((uint64_t)a1);
  result = objc_msgSend(a1[5], "count");
  if (result)
  {
    for (i = 0; i < result; ++i)
    {
      objc_msgSend(a1[5], "objectAtIndexedSubscript:", i);
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      v17 = v16;
      if (a3 && GEORPPlaceRequestResponseHasSensitiveFields(v16, a2))
      {
        v18 = (void *)objc_msgSend(v17, "copy");
        objc_msgSend(v18, "placeRequest");
        v19 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v19, "clearSensitiveFields:", a2);

        objc_msgSend(a1[5], "replaceObjectAtIndex:withObject:", i, v18);
      }
      else
      {
        objc_msgSend(v17, "clearSensitiveFields:", a2);
      }

      result = objc_msgSend(a1[5], "count");
    }
  }
  return result;
}

void sub_188A38244(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A38528(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A387AC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPDirectionsFeedbackContextReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  int *v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  char v18;
  unsigned __int8 v19;
  int *v20;
  int *v21;
  int *v22;
  int *v23;
  char v24;
  unsigned int v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  BOOL v31;
  int v32;
  unint64_t v34;
  BOOL v35;
  int *v36;
  int v37;
  int v38;
  BOOL v39;
  GEODirectionsRequest *v40;
  uint64_t v41;
  void *v42;
  id v43;
  void *v44;
  int v45;
  char v46;
  unsigned int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  char v52;
  char v53;
  __int16 v54;
  int v55;
  __int16 v56;
  void *v57;
  int v59;
  char v60;
  char v61;
  char v62;
  BOOL v63;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 88));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 84);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 80));
  v7 = v6;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = ((*(unsigned __int16 *)(a1 + 96) >> 1) & 1)
      + (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 96)), (uint16x4_t)0xFFF8FFFCFFFEFFFDLL), (int8x8_t)0x1000100010001))+ ((*(_WORD *)(a1 + 96) >> 5) & 1)+ ((*(_WORD *)(a1 + 96) >> 7) & 1)+ ((*(_WORD *)(a1 + 96) >> 6) & 1));
  while (2)
  {
    v14 = 1;
    v15 = 1;
    v16 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v13;
        goto LABEL_8;
      case -3:
        v9 = 1;
        goto LABEL_7;
      case -2:
        v15 = v11;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v17 = v13 > 4;
        v18 = v17 & ~(_BYTE)v12 | v10;
        v19 = v17 | v12;
        v60 = v18;
        v61 = v19 | v18;
        if (((v19 | v9) & 1) != 0)
          v20 = 0;
        else
          v20 = a3;
        v21 = (int *)MEMORY[0x1E0D82BF0];
        v22 = (int *)MEMORY[0x1E0D82BC8];
        v62 = (v20 == 0) | v19;
        v63 = v19;
        v23 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v13;
LABEL_7:
        v14 = v10;
LABEL_8:
        v15 = v11;
        v16 = v12;
LABEL_10:
        ++v8;
        v10 = v14;
        v11 = v15;
        v12 = v16;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v21) >= *(_QWORD *)(v3 + *v7) || *(_BYTE *)(v3 + *v22))
      goto LABEL_103;
    v24 = 0;
    v25 = 0;
    v26 = 0;
    while (1)
    {
      v27 = *v21;
      v28 = *(_QWORD *)(v3 + v27);
      v29 = v28 + 1;
      if (v28 == -1 || v29 > *(_QWORD *)(v3 + *v7))
        break;
      v30 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v28);
      *(_QWORD *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0)
        goto LABEL_25;
      v24 += 7;
      v31 = v25++ >= 9;
      if (v31)
      {
        v26 = 0;
        v32 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v22) = 1;
LABEL_25:
    v32 = *(unsigned __int8 *)(v3 + *v22);
    if (*(_BYTE *)(v3 + *v22))
      v26 = 0;
LABEL_27:
    if (v32 || (v26 & 7) == 4)
    {
LABEL_103:
      v59 = 1;
      goto LABEL_104;
    }
    v34 = v26 >> 3;
    v35 = v63;
    if ((v62 & 1) == 0)
    {
      v36 = v20;
      do
      {
        v38 = *v36++;
        v37 = v38;
        v35 = v38 != 0;
        if (v38)
          v39 = v37 == (_DWORD)v34;
        else
          v39 = 1;
      }
      while (!v39);
    }
    switch((int)v34)
    {
      case 1:
        if (!v35 || (*(_WORD *)(a1 + 96) & 4) != 0)
          goto LABEL_90;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_124;
        v40 = objc_alloc_init(GEODirectionsRequest);
        if (!GEODirectionsRequestReadAllFrom((uint64_t)v40, (void *)v3, v11 & 1))
          goto LABEL_123;
        PBReaderRecallMark();
        -[GEORPDirectionsFeedbackContext _addNoFlagsDirectionsRequest:](a1, v40);
        goto LABEL_81;
      case 2:
        if (!v35 || (*(_WORD *)(a1 + 96) & 8) != 0)
          goto LABEL_90;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_124;
        v40 = objc_alloc_init(GEODirectionsResponse);
        if (!GEODirectionsResponseReadAllFrom((uint64_t)v40, (void *)v3, v11 & 1))
          goto LABEL_123;
        PBReaderRecallMark();
        -[GEORPDirectionsFeedbackContext _addNoFlagsDirectionsResponse:](a1, v40);
        goto LABEL_81;
      case 3:
        if (!v35 || (*(_WORD *)(a1 + 96) & 0x10) != 0)
          goto LABEL_90;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_124;
        v40 = objc_alloc_init(GEORPPlaceRequestResponse);
        if (!GEORPPlaceRequestResponseReadAllFrom((uint64_t)v40, (void *)v3, v11 & 1))
          goto LABEL_123;
        PBReaderRecallMark();
        -[GEORPDirectionsFeedbackContext _addNoFlagsDirectionsWaypointPlaceInfo:](a1, v40);
        goto LABEL_81;
      case 4:
        if (!v35)
          goto LABEL_90;
        if ((*(_WORD *)(a1 + 96) & 0x100) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_124;
          v54 = *(_WORD *)(a1 + 96) << 7;
          goto LABEL_100;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_124;
        v40 = objc_alloc_init(GEORPUserSearchInput);
        if (!GEORPUserSearchInputReadAllFrom((uint64_t)v40, (void *)v3, v11 & 1))
          goto LABEL_123;
        PBReaderRecallMark();
        v41 = 72;
        goto LABEL_64;
      case 5:
        if (!v35)
          goto LABEL_90;
        if ((*(_WORD *)(a1 + 96) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_124;
          v54 = *(_WORD *)(a1 + 96) << 10;
LABEL_100:
          v8 += v54 >> 15;
LABEL_101:
          v22 = (int *)MEMORY[0x1E0D82BC8];
          v7 = (int *)MEMORY[0x1E0D82BD8];
          v23 = (int *)MEMORY[0x1E0D82BB8];
LABEL_102:
          if (!(v61 & 1 | (v8 != 0)))
            goto LABEL_103;
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_124;
        v40 = objc_alloc_init(GEORPUserSearchInput);
        if (GEORPUserSearchInputReadAllFrom((uint64_t)v40, (void *)v3, v11 & 1))
        {
          PBReaderRecallMark();
          v41 = 48;
LABEL_64:
          v42 = *(void **)(a1 + v41);
          *(_QWORD *)(a1 + v41) = v40;

          --v8;
          goto LABEL_101;
        }
LABEL_123:

LABEL_124:
        v59 = 0;
        v22 = (int *)MEMORY[0x1E0D82BC8];
LABEL_104:
        if ((v60 & 1) != 0)
LABEL_105:
          *(_WORD *)(a1 + 96) |= 2u;
        if (v63 || (v59 & 1) == 0)
        {
          *(_WORD *)(a1 + 96) |= 4u;
          *(_WORD *)(a1 + 96) |= 8u;
          *(_WORD *)(a1 + 96) |= 0x10u;
          *(_WORD *)(a1 + 96) |= 0x100u;
          *(_WORD *)(a1 + 96) |= 0x20u;
          *(_WORD *)(a1 + 96) |= 0x80u;
          *(_WORD *)(a1 + 96) |= 0x40u;
        }
        else if (v20)
        {
          while (1)
          {
            v55 = *v20++;
            v56 = 4;
            switch(v55)
            {
              case 0:
                goto LABEL_117;
              case 1:
                goto LABEL_116;
              case 2:
                v56 = 8;
                goto LABEL_116;
              case 3:
                v56 = 16;
                goto LABEL_116;
              case 4:
                v56 = 256;
                goto LABEL_116;
              case 5:
                v56 = 32;
                goto LABEL_116;
              case 7:
                v56 = 128;
                goto LABEL_116;
              case 8:
                v56 = 64;
LABEL_116:
                *(_WORD *)(a1 + 96) |= v56;
                break;
              default:
                continue;
            }
          }
        }
LABEL_117:
        if (v59)
          v3 = *(_BYTE *)(v3 + *v22) == 0;
        else
          v3 = 0;
        if (v63)
        {
          v57 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      case 7:
        if (!v35 || (*(_WORD *)(a1 + 96) & 0x80) != 0)
          goto LABEL_90;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_124;
        v40 = objc_alloc_init(GEOWaypointRoute);
        if (!GEOWaypointRouteReadAllFrom((uint64_t)v40, (void *)v3, v11 & 1))
          goto LABEL_123;
        PBReaderRecallMark();
        -[GEORPDirectionsFeedbackContext _addNoFlagsRoute:](a1, v40);
        goto LABEL_81;
      case 8:
        if (!v35 || (*(_WORD *)(a1 + 96) & 0x40) != 0)
          goto LABEL_90;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_124;
        v40 = objc_alloc_init(GEOLatLng);
        if (!GEOLatLngReadAllFrom((uint64_t)v40, (void *)v3))
          goto LABEL_123;
        PBReaderRecallMark();
        -[GEORPDirectionsFeedbackContext _addNoFlagsRerouteLocation:](a1, v40);
LABEL_81:

        goto LABEL_101;
      case 9:
        if ((v9 & 1) == 0)
          goto LABEL_90;
        v46 = 0;
        v47 = 0;
        v48 = 0;
        *(_WORD *)(a1 + 96) |= 1u;
        while (2)
        {
          v49 = *v21;
          v50 = *(_QWORD *)(v3 + v49);
          v51 = v50 + 1;
          if (v50 == -1 || v51 > *(_QWORD *)(v3 + *v7))
          {
            *(_BYTE *)(v3 + *v22) = 1;
          }
          else
          {
            v52 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v50);
            *(_QWORD *)(v3 + v49) = v51;
            v48 |= (unint64_t)(v52 & 0x7F) << v46;
            if (v52 < 0)
            {
              v46 += 7;
              v31 = v47++ >= 9;
              if (v31)
              {
                v48 = 0;
                goto LABEL_95;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v22))
          v48 = 0;
LABEL_95:
        *(_BYTE *)(a1 + 92) = v48 != 0;
        goto LABEL_102;
      default:
        if ((v60 & 1) == 0 || (*(_WORD *)(a1 + 96) & 2) != 0)
        {
LABEL_90:
          v53 = PBReaderSkipValueWithTag();
          v23 = (int *)MEMORY[0x1E0D82BB8];
          v7 = (int *)MEMORY[0x1E0D82BD8];
          v22 = (int *)MEMORY[0x1E0D82BC8];
          if ((v53 & 1) == 0)
          {
            v59 = 0;
            goto LABEL_104;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v43 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v44 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v43;

          }
          v45 = PBUnknownFieldAdd();
          v22 = (int *)MEMORY[0x1E0D82BC8];
          v7 = (int *)MEMORY[0x1E0D82BD8];
          v23 = (int *)MEMORY[0x1E0D82BB8];
          if (!v45)
          {
            v59 = 0;
            goto LABEL_105;
          }
        }
        goto LABEL_102;
    }
  }
}

void sub_188A393E4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A39718(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A39A4C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A39B8C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A39CD0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A3A004(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A3B464(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEORPDirectionsFeedbackContextCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  _BYTE v47[128];
  _BYTE v48[128];
  _BYTE v49[128];
  _BYTE v50[128];
  _BYTE v51[128];
  uint64_t v52;

  v52 = *MEMORY[0x1E0C80C00];
  v43 = 0u;
  v44 = 0u;
  v45 = 0u;
  v46 = 0u;
  v2 = a1[3];
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v43, v51, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v44;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v44 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v43 + 1) + 8 * v6++), "readAll:", 1);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v43, v51, 16);
    }
    while (v4);
  }

  v41 = 0u;
  v42 = 0u;
  v39 = 0u;
  v40 = 0u;
  v7 = a1[4];
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v39, v50, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v40;
    do
    {
      v11 = 0;
      do
      {
        if (*(_QWORD *)v40 != v10)
          objc_enumerationMutation(v7);
        objc_msgSend(*(id *)(*((_QWORD *)&v39 + 1) + 8 * v11++), "readAll:", 1);
      }
      while (v9 != v11);
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v39, v50, 16);
    }
    while (v9);
  }

  v37 = 0u;
  v38 = 0u;
  v35 = 0u;
  v36 = 0u;
  v12 = a1[5];
  v13 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v35, v49, 16);
  if (v13)
  {
    v14 = v13;
    v15 = *(_QWORD *)v36;
    do
    {
      v16 = 0;
      do
      {
        if (*(_QWORD *)v36 != v15)
          objc_enumerationMutation(v12);
        objc_msgSend(*(id *)(*((_QWORD *)&v35 + 1) + 8 * v16++), "readAll:", 1);
      }
      while (v14 != v16);
      v14 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v35, v49, 16);
    }
    while (v14);
  }

  objc_msgSend(a1[9], "readAll:", 1);
  objc_msgSend(a1[6], "readAll:", 1);
  v33 = 0u;
  v34 = 0u;
  v31 = 0u;
  v32 = 0u;
  v17 = a1[8];
  v18 = objc_msgSend(v17, "countByEnumeratingWithState:objects:count:", &v31, v48, 16);
  if (v18)
  {
    v19 = v18;
    v20 = *(_QWORD *)v32;
    do
    {
      v21 = 0;
      do
      {
        if (*(_QWORD *)v32 != v20)
          objc_enumerationMutation(v17);
        objc_msgSend(*(id *)(*((_QWORD *)&v31 + 1) + 8 * v21++), "readAll:", 1);
      }
      while (v19 != v21);
      v19 = objc_msgSend(v17, "countByEnumeratingWithState:objects:count:", &v31, v48, 16);
    }
    while (v19);
  }

  v29 = 0u;
  v30 = 0u;
  v27 = 0u;
  v28 = 0u;
  v22 = a1[7];
  v23 = objc_msgSend(v22, "countByEnumeratingWithState:objects:count:", &v27, v47, 16);
  if (v23)
  {
    v24 = v23;
    v25 = *(_QWORD *)v28;
    do
    {
      v26 = 0;
      do
      {
        if (*(_QWORD *)v28 != v25)
          objc_enumerationMutation(v22);
        objc_msgSend(*(id *)(*((_QWORD *)&v27 + 1) + 8 * v26++), "readAll:", 1, (_QWORD)v27);
      }
      while (v24 != v26);
      v24 = objc_msgSend(v22, "countByEnumeratingWithState:objects:count:", &v27, v47, 16);
    }
    while (v24);
  }

}

unint64_t GEORPDirectionsFeedbackContextReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 84))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEORPDirectionsFeedbackContextReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 88));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 80) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 84) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEORPDirectionsFeedbackContextReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEORPDirectionsFeedbackContextReadAllFrom_initialTag;
  Specified = GEORPDirectionsFeedbackContextReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEORPDirectionsFeedbackContextCallReadAllRecursiveWithoutSynchronized((id *)a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 88));
  return Specified;
}

void sub_188A3B978(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPDirectionsFeedbackContextReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORPDirectionsFeedbackContextReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188A3B9D8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPPlaceRequestResponseIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  _BOOL8 v17;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_30;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        goto LABEL_30;
      if ((v8 >> 3) == 2)
        break;
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDPlaceRequestIsValid(a1))
          goto LABEL_31;
LABEL_27:
        PBReaderRecallMark();
        goto LABEL_29;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        goto LABEL_31;
LABEL_29:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_30;
    }
    if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDPlaceResponseIsValid(a1))
    {
LABEL_31:
      PBReaderRecallMark();
      return 0;
    }
    goto LABEL_27;
  }
LABEL_30:
  v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

void sub_188A3C0B8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORPDirectionsFeedbackContextIsDirty(uint64_t a1)
{
  __int16 v2;
  uint64_t v3;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  _BYTE v36[128];
  _BYTE v37[128];
  _BYTE v38[128];
  _BYTE v39[128];
  uint64_t v40;

  v40 = *MEMORY[0x1E0C80C00];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 88));
  v2 = *(_WORD *)(a1 + 96);
  if ((v2 & 0x21C) != 0)
    return 1;
  if ((*(_WORD *)(a1 + 96) & 0x100) != 0)
  {
    if ((GEORPUserSearchInputIsDirty(*(os_unfair_lock_s **)(a1 + 72)) & 1) != 0)
      return 1;
    v2 = *(_WORD *)(a1 + 96);
  }
  if ((v2 & 0x20) != 0)
  {
    if ((GEORPUserSearchInputIsDirty(*(os_unfair_lock_s **)(a1 + 48)) & 1) != 0)
      return 1;
    v2 = *(_WORD *)(a1 + 96);
  }
  if ((v2 & 0xC0) == 0)
  {
    if ((v2 & 4) != 0)
    {
      v34 = 0u;
      v35 = 0u;
      v32 = 0u;
      v33 = 0u;
      v5 = *(id *)(a1 + 24);
      v6 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v32, v39, 16);
      if (v6)
      {
        v7 = v6;
        v8 = *(_QWORD *)v33;
LABEL_14:
        v9 = 0;
        while (1)
        {
          if (*(_QWORD *)v33 != v8)
            objc_enumerationMutation(v5);
          if ((GEODirectionsRequestIsDirty(*(os_unfair_lock_s **)(*((_QWORD *)&v32 + 1) + 8 * v9)) & 1) != 0)
            goto LABEL_52;
          if (v7 == ++v9)
          {
            v7 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v32, v39, 16);
            if (v7)
              goto LABEL_14;
            break;
          }
        }
      }

      v2 = *(_WORD *)(a1 + 96);
    }
    if ((v2 & 8) != 0)
    {
      v30 = 0u;
      v31 = 0u;
      v28 = 0u;
      v29 = 0u;
      v5 = *(id *)(a1 + 32);
      v10 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v28, v38, 16);
      if (v10)
      {
        v11 = v10;
        v12 = *(_QWORD *)v29;
LABEL_24:
        v13 = 0;
        while (1)
        {
          if (*(_QWORD *)v29 != v12)
            objc_enumerationMutation(v5);
          if ((GEODirectionsResponseIsDirty(*(os_unfair_lock_s **)(*((_QWORD *)&v28 + 1) + 8 * v13)) & 1) != 0)
            goto LABEL_52;
          if (v11 == ++v13)
          {
            v11 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v28, v38, 16);
            if (v11)
              goto LABEL_24;
            break;
          }
        }
      }

      v2 = *(_WORD *)(a1 + 96);
    }
    if ((v2 & 0x10) != 0)
    {
      v26 = 0u;
      v27 = 0u;
      v24 = 0u;
      v25 = 0u;
      v5 = *(id *)(a1 + 40);
      v14 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v24, v37, 16);
      if (v14)
      {
        v15 = v14;
        v16 = *(_QWORD *)v25;
LABEL_34:
        v17 = 0;
        while (1)
        {
          if (*(_QWORD *)v25 != v16)
            objc_enumerationMutation(v5);
          if ((GEORPPlaceRequestResponseIsDirty(*(os_unfair_lock_s **)(*((_QWORD *)&v24 + 1) + 8 * v17)) & 1) != 0)
            goto LABEL_52;
          if (v15 == ++v17)
          {
            v15 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v24, v37, 16);
            if (v15)
              goto LABEL_34;
            break;
          }
        }
      }

      v2 = *(_WORD *)(a1 + 96);
    }
    if ((v2 & 0x80) == 0)
      return 0;
    v22 = 0u;
    v23 = 0u;
    v20 = 0u;
    v21 = 0u;
    v5 = *(id *)(a1 + 64);
    v3 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v20, v36, 16);
    if (!v3)
    {
LABEL_53:

      return v3;
    }
    v18 = *(_QWORD *)v21;
LABEL_45:
    v19 = 0;
    while (1)
    {
      if (*(_QWORD *)v21 != v18)
        objc_enumerationMutation(v5);
      if ((GEOWaypointRouteIsDirty(*(os_unfair_lock_s **)(*((_QWORD *)&v20 + 1) + 8 * v19)) & 1) != 0)
        break;
      if (v3 == ++v19)
      {
        v3 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v20, v36, 16);
        if (v3)
          goto LABEL_45;
        goto LABEL_53;
      }
    }
LABEL_52:
    v3 = 1;
    goto LABEL_53;
  }
  return 1;
}

os_unfair_lock_s *GEORPDirectionsFeedbackContextIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEORPDirectionsFeedbackContextIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 22);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void *GEORPPlaceRequestResponseHasSensitiveFields(void *result, uint64_t a2)
{
  void *v3;
  uint64_t HasSensitiveFields;

  if (result)
  {
    objc_msgSend(result, "placeRequest");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    HasSensitiveFields = GEOPDPlaceRequestHasSensitiveFields(v3, a2);

    return (void *)HasSensitiveFields;
  }
  return result;
}

void GEORPPlaceRequestResponseClearSensitiveFields(void *a1, uint64_t a2, int a3)
{
  void *v5;
  int HasSensitiveFields;
  void *v7;
  id v8;

  if (a3
    && objc_msgSend(a1, "hasPlaceRequest")
    && (objc_msgSend(a1, "placeRequest"),
        v5 = (void *)objc_claimAutoreleasedReturnValue(),
        HasSensitiveFields = GEOPDPlaceRequestHasSensitiveFields(v5, a2),
        v5,
        HasSensitiveFields))
  {
    objc_msgSend(a1, "placeRequest");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = (id)objc_msgSend(v7, "copy");

    GEOPDPlaceRequestClearSensitiveFields(v8, a2, 0);
    objc_msgSend(a1, "setPlaceRequest:", v8);
  }
  else
  {
    objc_msgSend(a1, "placeRequest");
    v8 = (id)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "clearSensitiveFields:", a2);
  }

}

void sub_188A3D180(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A3D8BC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A3DE8C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPEditedAccessPointReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  char v17;
  unsigned __int8 v18;
  int *v19;
  int *v20;
  int *v21;
  int *v22;
  char v23;
  unsigned int v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  int v31;
  unint64_t v33;
  BOOL v34;
  int *v35;
  int v36;
  int v37;
  BOOL v38;
  GEORPCorrectedString *v39;
  uint64_t v40;
  void *v41;
  id v42;
  void *v43;
  int v44;
  char v45;
  char v46;
  int v47;
  char v48;
  void *v49;
  int v51;
  int *v52;
  char v53;
  char v54;
  char v55;
  BOOL v56;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 52);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 48));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = ((*(unsigned __int8 *)(a1 + 60) >> 1) & 1)
      + (*(_BYTE *)(a1 + 60) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 2) & 1);
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 > 1;
        v17 = v16 & ~(_BYTE)v11 | v9;
        v18 = v16 | v11;
        v53 = v17;
        v54 = v18 | v17;
        if (((v18 | v8) & 1) != 0)
          v19 = 0;
        else
          v19 = a3;
        v20 = (int *)MEMORY[0x1E0D82BF0];
        v21 = (int *)MEMORY[0x1E0D82BC8];
        v55 = (v19 == 0) | v18;
        v56 = v18;
        v22 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v7;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v20) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v21))
      goto LABEL_74;
    v23 = 0;
    v24 = 0;
    v25 = 0;
    while (1)
    {
      v26 = *v20;
      v27 = *(_QWORD *)(v3 + v26);
      v28 = v27 + 1;
      if (v27 == -1 || v28 > *(_QWORD *)(v3 + *v6))
        break;
      v29 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v27);
      *(_QWORD *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0)
        goto LABEL_25;
      v23 += 7;
      if (v24++ >= 9)
      {
        v25 = 0;
        v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v21) = 1;
LABEL_25:
    v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(_BYTE *)(v3 + *v21))
      v25 = 0;
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_74:
      v51 = 1;
      goto LABEL_75;
    }
    v33 = v25 >> 3;
    v34 = v56;
    if ((v55 & 1) == 0)
    {
      v35 = v19;
      do
      {
        v37 = *v35++;
        v36 = v37;
        v34 = v37 != 0;
        if (v37)
          v38 = v36 == (_DWORD)v33;
        else
          v38 = 1;
      }
      while (!v38);
    }
    if ((_DWORD)v33 == 3)
    {
      if (!v34)
        goto LABEL_63;
      if ((*(_BYTE *)(a1 + 60) & 4) != 0)
      {
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_91;
        v46 = 32 * *(_BYTE *)(a1 + 60);
        goto LABEL_71;
      }
      if ((PBReaderPlaceMark() & 1) == 0)
        goto LABEL_91;
      v39 = objc_alloc_init(GEORPCorrectedString);
      if (!GEORPCorrectedStringReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1))
        goto LABEL_90;
      PBReaderRecallMark();
      v40 = 32;
LABEL_56:
      v41 = *(void **)(a1 + v40);
      *(_QWORD *)(a1 + v40) = v39;

      --v7;
      goto LABEL_72;
    }
    if ((_DWORD)v33 == 2)
      break;
    if ((_DWORD)v33 == 1)
    {
      if (!v34)
        goto LABEL_63;
      if ((*(_BYTE *)(a1 + 60) & 8) == 0)
      {
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_91;
        v39 = objc_alloc_init(GEORoadAccessPoint);
        if (!GEORoadAccessPointReadAllFrom((uint64_t)v39, (void *)v3))
          goto LABEL_90;
        PBReaderRecallMark();
        v40 = 40;
        goto LABEL_56;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        goto LABEL_91;
      v46 = 16 * *(_BYTE *)(a1 + 60);
LABEL_71:
      v7 += v46 >> 7;
LABEL_72:
      v21 = (int *)MEMORY[0x1E0D82BC8];
      goto LABEL_73;
    }
    if ((v53 & 1) == 0 || (*(_BYTE *)(a1 + 60) & 1) != 0)
    {
LABEL_63:
      v45 = PBReaderSkipValueWithTag();
      v21 = (int *)MEMORY[0x1E0D82BC8];
      if ((v45 & 1) == 0)
      {
        v51 = 0;
        goto LABEL_75;
      }
      goto LABEL_73;
    }
    if (!*(_QWORD *)(a1 + 16))
    {
      v42 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
      v43 = *(void **)(a1 + 16);
      *(_QWORD *)(a1 + 16) = v42;

    }
    v44 = PBUnknownFieldAdd();
    v21 = (int *)MEMORY[0x1E0D82BC8];
    if (!v44)
    {
      v51 = 0;
      v52 = &OBJC_IVAR___GEOTransitVehicleInfo__pickupDropoffType;
      goto LABEL_76;
    }
LABEL_73:
    if (!(v54 & 1 | (v7 != 0)))
      goto LABEL_74;
  }
  if (!v34)
    goto LABEL_63;
  if ((*(_BYTE *)(a1 + 60) & 2) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0)
      goto LABEL_91;
    v46 = *(_BYTE *)(a1 + 60) << 6;
    goto LABEL_71;
  }
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_91;
  v39 = objc_alloc_init(GEORoadAccessPoint);
  if (GEORoadAccessPointReadAllFrom((uint64_t)v39, (void *)v3))
  {
    PBReaderRecallMark();
    v40 = 24;
    goto LABEL_56;
  }
LABEL_90:

LABEL_91:
  v51 = 0;
  v21 = (int *)MEMORY[0x1E0D82BC8];
LABEL_75:
  v52 = &OBJC_IVAR___GEOTransitVehicleInfo__pickupDropoffType;
  if ((v53 & 1) == 0)
    goto LABEL_77;
LABEL_76:
  *(_BYTE *)(a1 + v52[306]) |= 1u;
LABEL_77:
  if (v56 || (v51 & 1) == 0)
  {
    *(_BYTE *)(a1 + v52[306]) |= 8u;
    *(_BYTE *)(a1 + v52[306]) |= 2u;
    *(_BYTE *)(a1 + v52[306]) |= 4u;
  }
  else if (v19)
  {
    while (1)
    {
      v47 = *v19++;
      v48 = 8;
      switch(v47)
      {
        case 0:
          goto LABEL_84;
        case 1:
          goto LABEL_83;
        case 2:
          v48 = 2;
          goto LABEL_83;
        case 3:
          v48 = 4;
LABEL_83:
          *(_BYTE *)(a1 + v52[306]) |= v48;
          break;
        default:
          continue;
      }
    }
  }
LABEL_84:
  if (v51)
    v3 = *(_BYTE *)(v3 + *v21) == 0;
  else
    v3 = 0;
  if (v56)
  {
    v49 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_188A3E5E0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A3E724(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A3EDB0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPEditedAccessPointReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 52))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEORPEditedAccessPointReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 52) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEORPEditedAccessPointReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEORPEditedAccessPointReadAllFrom_initialTag;
  Specified = GEORPEditedAccessPointReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    objc_msgSend(*(id *)(a1 + 40), "readAll:", 1);
    objc_msgSend(*(id *)(a1 + 24), "readAll:", 1);
    objc_msgSend(*(id *)(a1 + 32), "readAll:", 1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_188A3EF78(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPEditedAccessPointReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORPEditedAccessPointReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188A3EFD8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A3F17C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL _GEORPEditedAccessPointIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  if ((*(_BYTE *)(a1 + 60) & 0x1A) != 0)
    return 1;
  if ((*(_BYTE *)(a1 + 60) & 4) != 0)
    return GEORPCorrectedStringIsDirty(*(_QWORD *)(a1 + 32));
  return 0;
}

os_unfair_lock_s *GEORPEditedAccessPointIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  _BOOL8 IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEORPEditedAccessPointIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 14);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_188A3F50C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A3F7B8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A3FA58(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackClientImageInfoReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  char v15;
  unsigned __int8 v16;
  char v17;
  int *v18;
  int *v19;
  int *v20;
  int *v21;
  char v22;
  unsigned int v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  int v30;
  unint64_t v32;
  BOOL v33;
  int *v34;
  int v35;
  int v36;
  BOOL v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  id v41;
  void *v42;
  int v43;
  char v44;
  char v45;
  int v46;
  int v47;
  void *v48;
  int v50;
  char v51;
  char v52;
  char v53;
  BOOL v54;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1)
      + (*(_BYTE *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v11;
        v12 = v7;
        goto LABEL_8;
      case -3:
        v9 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v11 != 0;
        v15 = v14 & ~(_BYTE)v7;
        v16 = v14 | v7;
        v51 = v15 | v8;
        v17 = v16 | v15 | v8;
        if (((v16 | v9) & 1) != 0)
          v18 = 0;
        else
          v18 = a3;
        v54 = v16;
        v52 = v17;
        v53 = (v18 == 0) | v16;
        v19 = (int *)MEMORY[0x1E0D82BF0];
        v20 = (int *)MEMORY[0x1E0D82BC8];
        v21 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_7:
        v12 = v7;
        v13 = v8;
LABEL_8:
        ++v10;
        v7 = v12;
        v8 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v19) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v20))
      goto LABEL_59;
    v22 = 0;
    v23 = 0;
    v24 = 0;
    while (1)
    {
      v25 = *v19;
      v26 = *(_QWORD *)(v3 + v25);
      v27 = v26 + 1;
      if (v26 == -1 || v27 > *(_QWORD *)(v3 + *v6))
        break;
      v28 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v26);
      *(_QWORD *)(v3 + v25) = v27;
      v24 |= (unint64_t)(v28 & 0x7F) << v22;
      if ((v28 & 0x80) == 0)
        goto LABEL_23;
      v22 += 7;
      if (v23++ >= 9)
      {
        v24 = 0;
        v30 = *(unsigned __int8 *)(v3 + *v20);
        goto LABEL_25;
      }
    }
    *(_BYTE *)(v3 + *v20) = 1;
LABEL_23:
    v30 = *(unsigned __int8 *)(v3 + *v20);
    if (*(_BYTE *)(v3 + *v20))
      v24 = 0;
LABEL_25:
    if (v30 || (v24 & 7) == 4)
    {
LABEL_59:
      v50 = 1;
      goto LABEL_60;
    }
    v32 = v24 >> 3;
    v33 = v54;
    if ((v53 & 1) == 0)
    {
      v34 = v18;
      do
      {
        v36 = *v34++;
        v35 = v36;
        v33 = v36 != 0;
        if (v36)
          v37 = v35 == (_DWORD)v32;
        else
          v37 = 1;
      }
      while (!v37);
    }
    if ((_DWORD)v32 == 2)
      break;
    if ((_DWORD)v32 == 1)
    {
      if (!v33)
        goto LABEL_51;
      if ((*(_BYTE *)(a1 + 52) & 4) != 0)
      {
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_77;
        v45 = 32 * *(_BYTE *)(a1 + 52);
        goto LABEL_57;
      }
      PBReaderReadString();
      v38 = objc_claimAutoreleasedReturnValue();
      v39 = 32;
      goto LABEL_44;
    }
    if ((v51 & 1) == 0 || (*(_BYTE *)(a1 + 52) & 1) != 0)
    {
LABEL_51:
      v44 = PBReaderSkipValueWithTag();
      v20 = (int *)MEMORY[0x1E0D82BC8];
      if ((v44 & 1) == 0)
      {
        v50 = 0;
        goto LABEL_60;
      }
      goto LABEL_58;
    }
    if (!*(_QWORD *)(a1 + 16))
    {
      v41 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
      v42 = *(void **)(a1 + 16);
      *(_QWORD *)(a1 + 16) = v41;

    }
    v43 = PBUnknownFieldAdd();
    v20 = (int *)MEMORY[0x1E0D82BC8];
    if (!v43)
    {
      v50 = 0;
      goto LABEL_61;
    }
LABEL_58:
    if (!(v52 & 1 | (v10 != 0)))
      goto LABEL_59;
  }
  if (!v33)
    goto LABEL_51;
  if ((*(_BYTE *)(a1 + 52) & 2) == 0)
  {
    PBReaderReadString();
    v38 = objc_claimAutoreleasedReturnValue();
    v39 = 24;
LABEL_44:
    v40 = *(void **)(a1 + v39);
    *(_QWORD *)(a1 + v39) = v38;

    v20 = (int *)MEMORY[0x1E0D82BC8];
    --v10;
    goto LABEL_58;
  }
  if ((PBReaderSkipValueWithTag() & 1) != 0)
  {
    v45 = *(_BYTE *)(a1 + 52) << 6;
LABEL_57:
    v10 += v45 >> 7;
    v20 = (int *)MEMORY[0x1E0D82BC8];
    goto LABEL_58;
  }
LABEL_77:
  v50 = 0;
  v20 = (int *)MEMORY[0x1E0D82BC8];
LABEL_60:
  if ((v51 & 1) == 0)
    goto LABEL_62;
LABEL_61:
  *(_BYTE *)(a1 + 52) |= 1u;
LABEL_62:
  if (v54 || (v50 & 1) == 0)
  {
    *(_BYTE *)(a1 + 52) |= 4u;
    *(_BYTE *)(a1 + 52) |= 2u;
    goto LABEL_71;
  }
  if (v18)
  {
    while (1)
    {
      v47 = *v18++;
      v46 = v47;
      if (v47 == 1)
        break;
      if (v46 == 2)
      {
LABEL_67:
        *(_BYTE *)(a1 + 52) |= v46;
      }
      else if (!v46)
      {
        goto LABEL_71;
      }
    }
    LOBYTE(v46) = 4;
    goto LABEL_67;
  }
LABEL_71:
  if (v50)
    v3 = *(_BYTE *)(v3 + *v20) == 0;
  else
    v3 = 0;
  if (v54)
  {
    v48 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_188A40050(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A405AC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackClientImageInfoReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEORPFeedbackClientImageInfoReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEORPFeedbackClientImageInfoReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEORPFeedbackClientImageInfoReadAllFrom_initialTag;
  Specified = GEORPFeedbackClientImageInfoReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_188A40738(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackClientImageInfoReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORPFeedbackClientImageInfoReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188A40798(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A4092C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackClientImageInfoIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v2 = (*(_BYTE *)(a1 + 52) & 0xE) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return v2;
}

void sub_188A40BC4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A40DE8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A41320(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackCommonContextReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint32x4_t v13;
  int8x16_t v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  char v20;
  char v21;
  int *v22;
  int *v23;
  int *v24;
  char v25;
  int *v26;
  char v27;
  unsigned int v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  BOOL v34;
  int v35;
  int v36;
  unint64_t v38;
  BOOL v39;
  int *v40;
  int v41;
  int v42;
  BOOL v43;
  char v44;
  unsigned int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  char v50;
  id v51;
  void *v52;
  int v53;
  GEORPMapLocation *v54;
  uint64_t v55;
  int *v56;
  char v57;
  unsigned int v58;
  uint64_t v59;
  int *v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  char v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  char v68;
  unsigned int v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  char v74;
  char v75;
  unsigned int v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  char v81;
  char v82;
  unsigned int v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  char v88;
  void *v89;
  char v90;
  char v91;
  int v92;
  char v93;
  unsigned int v94;
  uint64_t v95;
  int *v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  char v100;
  int v101;
  int v102;
  void *v103;
  char v105;
  char v106;
  int v107;
  char v108;
  char v109;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 144));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 140);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 136));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = *(_DWORD *)(a1 + 160);
  v13 = (uint32x4_t)vdupq_n_s32(v12);
  v14.i64[0] = 0x100000001;
  v14.i64[1] = 0x100000001;
  v15 = vaddvq_s32(vaddq_s32((int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v13, (uint32x4_t)xmmword_189CC6C90), v14), (int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v13, (uint32x4_t)xmmword_189CC6CA0), v14)))+ ((v12 >> 9) & 1)+ ((v12 >> 8) & 1)+ ((v12 >> 5) & 1);
  while (2)
  {
    v16 = 1;
    v17 = 1;
    v18 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v15;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v17 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v19 = v15 > 7;
        v20 = v19 & ~(_BYTE)v11 | v9;
        v21 = v19 | v11;
        if ((((v19 | v11) | v8) & 1) != 0)
          v22 = 0;
        else
          v22 = a3;
        v23 = (int *)MEMORY[0x1E0D82BF0];
        v107 = 1;
        v24 = (int *)MEMORY[0x1E0D82BC8];
        v25 = v19 & ~(_BYTE)v11 | v9;
        if (*(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(v3 + *v6))
          goto LABEL_201;
        v105 = v20;
        v108 = v21 | v20;
        v109 = (v22 == 0) | v21;
        v26 = (int *)MEMORY[0x1E0D82BB8];
        v106 = v21;
        break;
      default:
        ++v15;
LABEL_7:
        v16 = v9;
LABEL_8:
        v17 = v10;
        v18 = v11;
LABEL_10:
        ++v7;
        v9 = v16;
        v10 = v17;
        v11 = v18;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_BYTE *)(v3 + *v24))
      goto LABEL_199;
    v27 = 0;
    v28 = 0;
    v29 = 0;
    while (1)
    {
      v30 = *v23;
      v31 = *(_QWORD *)(v3 + v30);
      v32 = v31 + 1;
      if (v31 == -1 || v32 > *(_QWORD *)(v3 + *v6))
        break;
      v33 = *(_BYTE *)(*(_QWORD *)(v3 + *v26) + v31);
      *(_QWORD *)(v3 + v30) = v32;
      v29 |= (unint64_t)(v33 & 0x7F) << v27;
      if ((v33 & 0x80) == 0)
        goto LABEL_25;
      v27 += 7;
      v34 = v28++ >= 9;
      if (v34)
      {
        v29 = 0;
        v35 = *(unsigned __int8 *)(v3 + *v24);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v24) = 1;
LABEL_25:
    v35 = *(unsigned __int8 *)(v3 + *v24);
    if (*(_BYTE *)(v3 + *v24))
      v29 = 0;
LABEL_27:
    v36 = v29 & 7;
    if (v35 || v36 == 4)
    {
LABEL_199:
      v107 = 1;
      goto LABEL_200;
    }
    v38 = v29 >> 3;
    v39 = v21;
    if ((v109 & 1) == 0)
    {
      v40 = v22;
      do
      {
        v42 = *v40++;
        v41 = v42;
        v39 = v42 != 0;
        if (v42)
          v43 = v41 == (_DWORD)v38;
        else
          v43 = 1;
      }
      while (!v43);
    }
    switch((int)v38)
    {
      case 1:
        if ((v8 & 1) == 0)
          goto LABEL_149;
        v44 = 0;
        v45 = 0;
        v46 = 0;
        *(_DWORD *)(a1 + 160) |= 8u;
        while (1)
        {
          v47 = *v23;
          v48 = *(_QWORD *)(v3 + v47);
          v49 = v48 + 1;
          if (v48 == -1 || v49 > *(_QWORD *)(v3 + *v6))
            break;
          v50 = *(_BYTE *)(*(_QWORD *)(v3 + *v26) + v48);
          *(_QWORD *)(v3 + v47) = v49;
          v46 |= (unint64_t)(v50 & 0x7F) << v44;
          if ((v50 & 0x80) == 0)
            goto LABEL_152;
          v44 += 7;
          v34 = v45++ >= 9;
          if (v34)
          {
            LODWORD(v46) = 0;
            goto LABEL_154;
          }
        }
        *(_BYTE *)(v3 + *v24) = 1;
LABEL_152:
        if (*(_BYTE *)(v3 + *v24))
          LODWORD(v46) = 0;
LABEL_154:
        *(_DWORD *)(a1 + 152) = v46;
        goto LABEL_184;
      case 2:
        if (!v39)
          goto LABEL_149;
        if ((*(_BYTE *)(a1 + 161) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_225;
          v92 = (int)(*(_DWORD *)(a1 + 160) << 20) >> 31;
          goto LABEL_181;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_225;
        v54 = objc_alloc_init(GEORPMapLocation);
        if (!GEORPMapLocationReadAllFrom((uint64_t)v54, (void *)v3, v10 & 1))
          goto LABEL_224;
        PBReaderRecallMark();
        v55 = 88;
        goto LABEL_142;
      case 3:
        if (!v39 || (*(_BYTE *)(a1 + 161) & 0x80) != 0)
          goto LABEL_146;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_225;
        v54 = objc_alloc_init(GEORPVisibleTileSet);
        if (!GEORPVisibleTileSetReadAllFrom((uint64_t)v54, (void *)v3))
          goto LABEL_224;
        PBReaderRecallMark();
        -[GEORPFeedbackCommonContext _addNoFlagsVisibleTileSet:](a1, v54);
        goto LABEL_87;
      case 4:
        if (!v39 || (*(_BYTE *)(a1 + 160) & 0x40) != 0)
        {
          v90 = PBReaderSkipValueWithTag();
          v24 = (int *)MEMORY[0x1E0D82BC8];
          v21 = v106;
          goto LABEL_147;
        }
        if (v36 != 2)
        {
          v93 = 0;
          v94 = 0;
          v95 = 0;
          v96 = (int *)MEMORY[0x1E0D82BB8];
          while (1)
          {
            v97 = *v23;
            v98 = *(_QWORD *)(v3 + v97);
            v99 = v98 + 1;
            if (v98 == -1 || v99 > *(_QWORD *)(v3 + *v6))
              break;
            v100 = *(_BYTE *)(*(_QWORD *)(v3 + *v96) + v98);
            *(_QWORD *)(v3 + v97) = v99;
            v95 |= (unint64_t)(v100 & 0x7F) << v93;
            if (v100 < 0)
            {
              v93 += 7;
              v34 = v94++ >= 9;
              if (!v34)
                continue;
            }
            goto LABEL_198;
          }
          *(_BYTE *)(v3 + *v24) = 1;
LABEL_198:
          PBRepeatedInt32Add();
          goto LABEL_182;
        }
        if (!PBReaderPlaceMark())
          goto LABEL_225;
        while (1)
        {
          v56 = (int *)MEMORY[0x1E0D82BC8];
          if (*(_QWORD *)(v3 + *v23) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + (int)*MEMORY[0x1E0D82BC8]))
            break;
          v57 = 0;
          v58 = 0;
          v59 = 0;
          v60 = (int *)MEMORY[0x1E0D82BB8];
          while (1)
          {
            v61 = *v23;
            v62 = *(_QWORD *)(v3 + v61);
            v63 = v62 + 1;
            if (v62 == -1 || v63 > *(_QWORD *)(v3 + *v6))
              break;
            v64 = *(_BYTE *)(*(_QWORD *)(v3 + *v60) + v62);
            *(_QWORD *)(v3 + v61) = v63;
            v59 |= (unint64_t)(v64 & 0x7F) << v57;
            if (v64 < 0)
            {
              v57 += 7;
              v34 = v58++ >= 9;
              if (!v34)
                continue;
            }
            goto LABEL_77;
          }
          *(_BYTE *)(v3 + *v56) = 1;
LABEL_77:
          PBRepeatedInt32Add();
        }
        PBReaderRecallMark();
        v24 = (int *)MEMORY[0x1E0D82BC8];
        v21 = v106;
        goto LABEL_183;
      case 5:
        if ((v8 & 1) == 0)
          goto LABEL_149;
        *(_DWORD *)(a1 + 160) |= 1u;
        v65 = *v23;
        v66 = *(_QWORD *)(v3 + v65);
        if (v66 <= 0xFFFFFFFFFFFFFFF7 && v66 + 8 <= *(_QWORD *)(v3 + *v6))
        {
          v67 = *(_QWORD *)(*(_QWORD *)(v3 + *v26) + v66);
          *(_QWORD *)(v3 + v65) = v66 + 8;
        }
        else
        {
          *(_BYTE *)(v3 + *v24) = 1;
          v67 = 0;
        }
        *(_QWORD *)(a1 + 56) = v67;
        goto LABEL_184;
      case 6:
        if (!v39 || (*(_BYTE *)(a1 + 160) & 0x80) != 0)
        {
LABEL_146:
          v90 = PBReaderSkipValueWithTag();
          v21 = v106;
          v24 = (int *)MEMORY[0x1E0D82BC8];
LABEL_147:
          v26 = (int *)MEMORY[0x1E0D82BB8];
          if ((v90 & 1) == 0)
            goto LABEL_223;
          goto LABEL_184;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_225;
        v54 = objc_alloc_init(GEORPAuxiliaryControl);
        if (!GEORPAuxiliaryControlReadAllFrom((uint64_t)v54, (void *)v3, v10 & 1))
          goto LABEL_224;
        PBReaderRecallMark();
        -[GEORPFeedbackCommonContext _addNoFlagsAuxiliaryControl:](a1, v54);
LABEL_87:

        goto LABEL_182;
      case 7:
        if ((v8 & 1) == 0)
          goto LABEL_149;
        v68 = 0;
        v69 = 0;
        v70 = 0;
        *(_DWORD *)(a1 + 160) |= 2u;
        while (2)
        {
          v71 = *v23;
          v72 = *(_QWORD *)(v3 + v71);
          v73 = v72 + 1;
          if (v72 == -1 || v73 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v24) = 1;
          }
          else
          {
            v74 = *(_BYTE *)(*(_QWORD *)(v3 + *v26) + v72);
            *(_QWORD *)(v3 + v71) = v73;
            v70 |= (unint64_t)(v74 & 0x7F) << v68;
            if (v74 < 0)
            {
              v68 += 7;
              v34 = v69++ >= 9;
              if (v34)
              {
                v70 = 0;
                goto LABEL_158;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v24))
          v70 = 0;
LABEL_158:
        *(_QWORD *)(a1 + 104) = v70;
        goto LABEL_184;
      case 8:
        if ((v8 & 1) == 0)
          goto LABEL_149;
        v75 = 0;
        v76 = 0;
        v77 = 0;
        *(_DWORD *)(a1 + 160) |= 4u;
        while (2)
        {
          v78 = *v23;
          v79 = *(_QWORD *)(v3 + v78);
          v80 = v79 + 1;
          if (v79 == -1 || v80 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v24) = 1;
          }
          else
          {
            v81 = *(_BYTE *)(*(_QWORD *)(v3 + *v26) + v79);
            *(_QWORD *)(v3 + v78) = v80;
            v77 |= (unint64_t)(v81 & 0x7F) << v75;
            if (v81 < 0)
            {
              v75 += 7;
              v34 = v76++ >= 9;
              if (v34)
              {
                LODWORD(v77) = 0;
                goto LABEL_162;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v24))
          LODWORD(v77) = 0;
LABEL_162:
        *(_DWORD *)(a1 + 148) = -(v77 & 1) ^ ((int)v77 >> 1);
        goto LABEL_184;
      case 9:
        if (!v39)
          goto LABEL_149;
        if ((*(_BYTE *)(a1 + 161) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_225;
          v92 = (int)(*(_DWORD *)(a1 + 160) << 21) >> 31;
          goto LABEL_181;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_225;
        v54 = objc_alloc_init(GEORPCurrentEnvironmentManifestURLs);
        if (!GEORPCurrentEnvironmentManifestURLsReadAllFrom((uint64_t)v54, (void *)v3, v10 & 1))
          goto LABEL_224;
        PBReaderRecallMark();
        v55 = 80;
        goto LABEL_142;
      case 10:
        if (!v39)
          goto LABEL_149;
        if ((*(_BYTE *)(a1 + 161) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_225;
          v92 = (int)(*(_DWORD *)(a1 + 160) << 19) >> 31;
          goto LABEL_181;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_225;
        v54 = objc_alloc_init(GEORPNavigationSettings);
        if (!GEORPNavigationSettingsReadAllFrom((uint64_t)v54, (void *)v3))
          goto LABEL_224;
        PBReaderRecallMark();
        v55 = 96;
        goto LABEL_142;
      case 11:
        if (!v39)
          goto LABEL_149;
        if ((*(_BYTE *)(a1 + 161) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_225;
          v92 = (int)(*(_DWORD *)(a1 + 160) << 17) >> 31;
          goto LABEL_181;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_225;
        v54 = objc_alloc_init(GEORPSourceInfo);
        if (!GEORPSourceInfoReadAllFrom((uint64_t)v54, (void *)v3, v10 & 1))
          goto LABEL_224;
        PBReaderRecallMark();
        v55 = 120;
        goto LABEL_142;
      case 12:
        if (!v39)
          goto LABEL_149;
        if ((*(_BYTE *)(a1 + 161) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_225;
          v92 = (int)(*(_DWORD *)(a1 + 160) << 18) >> 31;
          goto LABEL_181;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_225;
        v54 = objc_alloc_init(GEORPSearchCommonContext);
        if (!GEORPSearchCommonContextReadAllFrom((uint64_t)v54, (void *)v3, v10 & 1))
          goto LABEL_224;
        PBReaderRecallMark();
        v55 = 112;
        goto LABEL_142;
      case 13:
        if (!v39)
          goto LABEL_149;
        if ((*(_BYTE *)(a1 + 161) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_225;
          v92 = (int)(*(_DWORD *)(a1 + 160) << 22) >> 31;
          goto LABEL_181;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_225;
        v54 = objc_alloc_init(GEOABAssignmentResponse);
        if (!GEOABAssignmentResponseReadAllFrom((uint64_t)v54, (void *)v3, v10 & 1))
          goto LABEL_224;
        PBReaderRecallMark();
        v55 = 72;
        goto LABEL_142;
      case 14:
        if ((v8 & 1) == 0)
          goto LABEL_149;
        v82 = 0;
        v83 = 0;
        v84 = 0;
        *(_DWORD *)(a1 + 160) |= 0x10u;
        while (2)
        {
          v85 = *v23;
          v86 = *(_QWORD *)(v3 + v85);
          v87 = v86 + 1;
          if (v86 == -1 || v87 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v24) = 1;
          }
          else
          {
            v88 = *(_BYTE *)(*(_QWORD *)(v3 + *v26) + v86);
            *(_QWORD *)(v3 + v85) = v87;
            v84 |= (unint64_t)(v88 & 0x7F) << v82;
            if (v88 < 0)
            {
              v82 += 7;
              v34 = v83++ >= 9;
              if (v34)
              {
                v84 = 0;
                goto LABEL_166;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v24))
          v84 = 0;
LABEL_166:
        *(_BYTE *)(a1 + 156) = v84 != 0;
        goto LABEL_184;
      case 15:
        if (!v39)
          goto LABEL_149;
        if ((*(_BYTE *)(a1 + 161) & 1) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_225;
          v92 = (int)(*(_DWORD *)(a1 + 160) << 23) >> 31;
LABEL_181:
          v7 += v92;
LABEL_182:
          v21 = v106;
          v24 = (int *)MEMORY[0x1E0D82BC8];
LABEL_183:
          v26 = (int *)MEMORY[0x1E0D82BB8];
LABEL_184:
          if (!(v108 & 1 | (v7 != 0)) || *(_QWORD *)(v3 + *v23) >= *(_QWORD *)(v3 + *v6))
            goto LABEL_199;
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_225;
        v54 = objc_alloc_init(GEORPUserPath);
        if (GEORPUserPathReadAllFrom((uint64_t)v54, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          v55 = 64;
LABEL_142:
          v89 = *(void **)(a1 + v55);
          *(_QWORD *)(a1 + v55) = v54;

          --v7;
          goto LABEL_182;
        }
LABEL_224:

LABEL_225:
        v107 = 0;
        v21 = v106;
        v24 = (int *)MEMORY[0x1E0D82BC8];
LABEL_200:
        v25 = v105;
LABEL_201:
        if ((v25 & 1) != 0)
LABEL_202:
          *(_DWORD *)(a1 + 160) |= 0x20u;
        if (v21 & 1 | ((v107 & 1) == 0))
        {
          *(_DWORD *)(a1 + 160) |= 0x800u;
          *(_DWORD *)(a1 + 160) |= 0x8000u;
          *(_DWORD *)(a1 + 160) |= 0x40u;
          *(_DWORD *)(a1 + 160) |= 0x80u;
          *(_DWORD *)(a1 + 160) |= 0x400u;
          *(_DWORD *)(a1 + 160) |= 0x1000u;
          *(_DWORD *)(a1 + 160) |= 0x4000u;
          *(_DWORD *)(a1 + 160) |= 0x2000u;
          *(_DWORD *)(a1 + 160) |= 0x200u;
          *(_DWORD *)(a1 + 160) |= 0x100u;
        }
        else if (v22)
        {
          while (1)
          {
            v101 = *v22++;
            v102 = 2048;
            switch(v101)
            {
              case 0:
                goto LABEL_217;
              case 2:
                goto LABEL_216;
              case 3:
                v102 = 0x8000;
                goto LABEL_216;
              case 4:
                v102 = 64;
                goto LABEL_216;
              case 6:
                v102 = 128;
                goto LABEL_216;
              case 9:
                v102 = 1024;
                goto LABEL_216;
              case 10:
                v102 = 4096;
                goto LABEL_216;
              case 11:
                v102 = 0x4000;
                goto LABEL_216;
              case 12:
                v102 = 0x2000;
                goto LABEL_216;
              case 13:
                v102 = 512;
                goto LABEL_216;
              case 15:
                v102 = 256;
LABEL_216:
                *(_DWORD *)(a1 + 160) |= v102;
                break;
              default:
                continue;
            }
          }
        }
LABEL_217:
        if (v107)
        {
          v3 = *(_BYTE *)(v3 + *v24) == 0;
          if ((v21 & 1) == 0)
            return v3;
LABEL_221:
          v103 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        else
        {
          v3 = 0;
          if ((v21 & 1) != 0)
            goto LABEL_221;
        }
        return v3;
      default:
        if ((v105 & 1) == 0 || (*(_BYTE *)(a1 + 160) & 0x20) != 0)
        {
LABEL_149:
          v91 = PBReaderSkipValueWithTag();
          v26 = (int *)MEMORY[0x1E0D82BB8];
          v24 = (int *)MEMORY[0x1E0D82BC8];
          v21 = v106;
          if ((v91 & 1) == 0)
          {
LABEL_223:
            v107 = 0;
            goto LABEL_200;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v51 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v52 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v51;

          }
          v53 = PBUnknownFieldAdd();
          v21 = v106;
          v24 = (int *)MEMORY[0x1E0D82BC8];
          v26 = (int *)MEMORY[0x1E0D82BB8];
          if (!v53)
          {
            v107 = 0;
            goto LABEL_202;
          }
        }
        goto LABEL_184;
    }
  }
}

void sub_188A42480(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A427B4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A431E8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A43620(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A4376C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A438B8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A43A04(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A43B50(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A43D1C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A45938(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORPFeedbackCommonContextCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  _BYTE v21[128];
  _BYTE v22[128];
  uint64_t v23;

  v23 = *MEMORY[0x1E0C80C00];
  objc_msgSend(a1[11], "readAll:", 1);
  v19 = 0u;
  v20 = 0u;
  v17 = 0u;
  v18 = 0u;
  v2 = a1[16];
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v17, v22, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v18;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v18 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v17 + 1) + 8 * v6++), "readAll:", 1);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v17, v22, 16);
    }
    while (v4);
  }

  v15 = 0u;
  v16 = 0u;
  v13 = 0u;
  v14 = 0u;
  v7 = a1[6];
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v13, v21, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v14;
    do
    {
      v11 = 0;
      do
      {
        if (*(_QWORD *)v14 != v10)
          objc_enumerationMutation(v7);
        objc_msgSend(*(id *)(*((_QWORD *)&v13 + 1) + 8 * v11++), "readAll:", 1, (_QWORD)v13);
      }
      while (v9 != v11);
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v13, v21, 16);
    }
    while (v9);
  }

  objc_msgSend(a1[10], "readAll:", 1);
  objc_msgSend(a1[12], "readAll:", 1);
  objc_msgSend(a1[15], "readAll:", 1);
  objc_msgSend(a1[14], "readAll:", 1);
  objc_msgSend(a1[9], "readAll:", 1);
  return objc_msgSend(a1[8], "readAll:", 1);
}

unint64_t GEORPFeedbackCommonContextReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 140))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEORPFeedbackCommonContextReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 144));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 136) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 140) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEORPFeedbackCommonContextReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEORPFeedbackCommonContextReadAllFrom_initialTag;
  Specified = GEORPFeedbackCommonContextReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEORPFeedbackCommonContextCallReadAllRecursiveWithoutSynchronized((id *)a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 144));
  return Specified;
}

void sub_188A45CDC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackCommonContextReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORPFeedbackCommonContextReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188A45D3C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackCommonContextIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  BOOL v13;
  uint64_t v14;
  int v15;
  int v16;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  unsigned int v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unsigned int v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  int v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  int v41;
  unsigned int v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  int v46;
  unsigned int v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  int v51;
  _BOOL8 v52;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (!a1[*v4])
    {
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        v13 = v7++ >= 9;
        if (v13)
        {
          v8 = 0;
          v14 = *v4;
          v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = *v4;
      v15 = a1[v14];
      if (a1[v14])
        v8 = 0;
LABEL_14:
      v16 = v8 & 7;
      if (v15 || v16 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0)
            goto LABEL_115;
          v18 = 0;
          while (1)
          {
            v19 = *v2;
            v20 = *(_QWORD *)&a1[v19];
            v21 = v20 + 1;
            if (v20 == -1 || v21 > *(_QWORD *)&a1[*v3])
              goto LABEL_96;
            v22 = *(char *)(*(_QWORD *)&a1[*v5] + v20);
            *(_QWORD *)&a1[v19] = v21;
            if (v22 < 0)
            {
              v23 = v18++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_102;
          }
        case 2u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEORPMapLocationIsValid(a1))
            goto LABEL_115;
          goto LABEL_101;
        case 3u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEORPVisibleTileSetIsValid(a1))
            goto LABEL_115;
          goto LABEL_101;
        case 4u:
          if (v16 == 2)
          {
            if (!PBReaderPlaceMark())
            {
LABEL_115:
              PBReaderRecallMark();
              return 0;
            }
LABEL_105:
            while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
            {
              v47 = a1[*v4];
              if (a1[*v4])
                break;
              while (1)
              {
                v48 = *v2;
                v49 = *(_QWORD *)&a1[v48];
                v50 = v49 + 1;
                if (v49 == -1 || v50 > *(_QWORD *)&a1[*v3])
                  break;
                v51 = *(char *)(*(_QWORD *)&a1[*v5] + v49);
                *(_QWORD *)&a1[v48] = v50;
                if (v51 < 0)
                {
                  v13 = v47++ >= 9;
                  if (!v13)
                    continue;
                }
                goto LABEL_105;
              }
              a1[*v4] = 1;
            }
LABEL_101:
            PBReaderRecallMark();
          }
          else
          {
            if ((v8 & 7) != 0)
              goto LABEL_115;
            while (1)
            {
              v24 = *v2;
              v25 = *(_QWORD *)&a1[v24];
              v26 = v25 + 1;
              if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
                break;
              v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
              *(_QWORD *)&a1[v24] = v26;
              if (v27 < 0)
              {
                v28 = v16++;
                if (v28 <= 8)
                  continue;
              }
              goto LABEL_102;
            }
LABEL_96:
            v14 = *v4;
LABEL_97:
            a1[v14] = 1;
          }
LABEL_102:
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_114;
          break;
        case 5u:
          if (v16 != 1)
            goto LABEL_115;
          v29 = *v2;
          v30 = *(_QWORD *)&a1[v29];
          if (v30 > 0xFFFFFFFFFFFFFFF7)
            goto LABEL_97;
          v31 = v30 + 8;
          if (v31 > *(_QWORD *)&a1[*v3])
            goto LABEL_97;
          *(_QWORD *)&a1[v29] = v31;
          goto LABEL_102;
        case 6u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEORPAuxiliaryControlIsValid(a1))
            goto LABEL_115;
          goto LABEL_101;
        case 7u:
          if ((v8 & 7) != 0)
            goto LABEL_115;
          v32 = 0;
          while (1)
          {
            v33 = *v2;
            v34 = *(_QWORD *)&a1[v33];
            v35 = v34 + 1;
            if (v34 == -1 || v35 > *(_QWORD *)&a1[*v3])
              goto LABEL_96;
            v36 = *(char *)(*(_QWORD *)&a1[*v5] + v34);
            *(_QWORD *)&a1[v33] = v35;
            if (v36 < 0)
            {
              v23 = v32++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_102;
          }
        case 8u:
          if ((v8 & 7) != 0)
            goto LABEL_115;
          v37 = 0;
          while (1)
          {
            v38 = *v2;
            v39 = *(_QWORD *)&a1[v38];
            v40 = v39 + 1;
            if (v39 == -1 || v40 > *(_QWORD *)&a1[*v3])
              goto LABEL_96;
            v41 = *(char *)(*(_QWORD *)&a1[*v5] + v39);
            *(_QWORD *)&a1[v38] = v40;
            if (v41 < 0)
            {
              v23 = v37++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_102;
          }
        case 9u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEORPCurrentEnvironmentManifestURLsIsValid(a1))
            goto LABEL_115;
          goto LABEL_101;
        case 0xAu:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEORPNavigationSettingsIsValid(a1))
            goto LABEL_115;
          goto LABEL_101;
        case 0xBu:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEORPSourceInfoIsValid(a1))
            goto LABEL_115;
          goto LABEL_101;
        case 0xCu:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEORPSearchCommonContextIsValid(a1))
            goto LABEL_115;
          goto LABEL_101;
        case 0xDu:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOABAssignmentResponseIsValid(a1))
            goto LABEL_115;
          goto LABEL_101;
        case 0xEu:
          if ((v8 & 7) != 0)
            goto LABEL_115;
          v42 = 0;
          while (1)
          {
            v43 = *v2;
            v44 = *(_QWORD *)&a1[v43];
            v45 = v44 + 1;
            if (v44 == -1 || v45 > *(_QWORD *)&a1[*v3])
              goto LABEL_96;
            v46 = *(char *)(*(_QWORD *)&a1[*v5] + v44);
            *(_QWORD *)&a1[v43] = v45;
            if (v46 < 0)
            {
              v23 = v42++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_102;
          }
        case 0xFu:
          if (v16 == 2 && PBReaderPlaceMark() && GEORPUserPathIsValid(a1))
            goto LABEL_101;
          goto LABEL_115;
        default:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_115;
          goto LABEL_102;
      }
    }
  }
LABEL_114:
  v52 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v52;
}

BOOL GEORPSourceInfoIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  _BOOL8 v17;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_27;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        goto LABEL_27;
      if ((v8 >> 3) == 2)
        break;
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2)
          goto LABEL_29;
        goto LABEL_23;
      }
      if (!PBReaderSkipValueWithTag())
      {
LABEL_29:
        v17 = 0;
        goto LABEL_28;
      }
LABEL_26:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_27;
    }
    if (v15 != 2)
      goto LABEL_29;
LABEL_23:
    if ((PBReaderSkipValueWithTag() & 1) == 0)
      goto LABEL_29;
    goto LABEL_26;
  }
LABEL_27:
  v17 = a1[*v4] == 0;
LABEL_28:
  PBReaderRecallMark();
  return v17;
}

BOOL GEORPSearchCommonContextIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  _BOOL8 v17;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_27;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        goto LABEL_27;
      if ((v8 >> 3) == 2)
        break;
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2)
          goto LABEL_29;
        goto LABEL_23;
      }
      if (!PBReaderSkipValueWithTag())
      {
LABEL_29:
        v17 = 0;
        goto LABEL_28;
      }
LABEL_26:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_27;
    }
    if (v15 != 2)
      goto LABEL_29;
LABEL_23:
    if ((PBReaderSkipValueWithTag() & 1) == 0)
      goto LABEL_29;
    goto LABEL_26;
  }
LABEL_27:
  v17 = a1[*v4] == 0;
LABEL_28:
  PBReaderRecallMark();
  return v17;
}

BOOL GEORPUserPathIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  BOOL v13;
  int v14;
  int v15;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int v20;
  unsigned int v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  int v26;
  _BOOL8 v27;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_43;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        v13 = v7++ >= 9;
        if (v13)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        goto LABEL_43;
      if ((v8 >> 3) == 2)
        break;
      if ((v8 >> 3) != 1)
        goto LABEL_28;
      if (v15 == 2)
      {
        if (!PBReaderPlaceMark())
        {
LABEL_45:
          PBReaderRecallMark();
          return 0;
        }
LABEL_31:
        while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
        {
          v22 = a1[*v4];
          if (a1[*v4])
            break;
          while (1)
          {
            v23 = *v2;
            v24 = *(_QWORD *)&a1[v23];
            v25 = v24 + 1;
            if (v24 == -1 || v25 > *(_QWORD *)&a1[*v3])
              break;
            v26 = *(char *)(*(_QWORD *)&a1[*v5] + v24);
            *(_QWORD *)&a1[v23] = v25;
            if (v26 < 0)
            {
              v13 = v22++ >= 9;
              if (!v13)
                continue;
            }
            goto LABEL_31;
          }
          a1[*v4] = 1;
        }
        PBReaderRecallMark();
      }
      else
      {
        if ((v8 & 7) != 0)
          goto LABEL_45;
        while (1)
        {
          v17 = *v2;
          v18 = *(_QWORD *)&a1[v17];
          v19 = v18 + 1;
          if (v18 == -1 || v19 > *(_QWORD *)&a1[*v3])
            break;
          v20 = *(char *)(*(_QWORD *)&a1[*v5] + v18);
          *(_QWORD *)&a1[v17] = v19;
          if (v20 < 0)
          {
            v21 = v15++;
            if (v21 <= 8)
              continue;
          }
          goto LABEL_42;
        }
        a1[*v4] = 1;
      }
LABEL_42:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_43;
    }
    if (v15 != 2)
      goto LABEL_45;
LABEL_28:
    if ((PBReaderSkipValueWithTag() & 1) == 0)
      goto LABEL_45;
    goto LABEL_42;
  }
LABEL_43:
  v27 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v27;
}

void sub_188A46D58(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORPFeedbackCommonContextIsDirty(uint64_t a1)
{
  int v2;
  uint64_t v3;
  id v5;
  uint64_t v6;
  uint64_t i;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _BYTE v12[128];
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 144));
  v2 = *(_DWORD *)(a1 + 160);
  if ((v2 & 0x10000) != 0)
    return 1;
  if ((v2 & 0x800) != 0)
  {
    if (GEORPMapLocationIsDirty(*(_QWORD *)(a1 + 88)))
      return 1;
    v2 = *(_DWORD *)(a1 + 160);
  }
  if ((v2 & 0x80C0) != 0)
    return 1;
  if ((v2 & 0x400) != 0)
  {
    if ((GEORPCurrentEnvironmentManifestURLsIsDirty(*(os_unfair_lock_s **)(a1 + 80)) & 1) != 0)
      return 1;
    v2 = *(_DWORD *)(a1 + 160);
  }
  if ((v2 & 0x1000) != 0)
    return 1;
  if ((v2 & 0x4000) != 0)
  {
    if (GEORPSourceInfoIsDirty(*(_QWORD *)(a1 + 120)))
      return 1;
    v2 = *(_DWORD *)(a1 + 160);
  }
  if ((v2 & 0x2000) != 0)
  {
    if (GEORPSearchCommonContextIsDirty(*(_QWORD *)(a1 + 112)))
      return 1;
    v2 = *(_DWORD *)(a1 + 160);
  }
  if ((v2 & 0x200) != 0)
  {
    if ((GEOABAssignmentResponseIsDirty(*(os_unfair_lock_s **)(a1 + 72)) & 1) != 0)
      return 1;
    v2 = *(_DWORD *)(a1 + 160);
  }
  if ((v2 & 0x100) != 0)
  {
    if (GEORPUserPathIsDirty(*(_QWORD *)(a1 + 64)))
      return 1;
    v2 = *(_DWORD *)(a1 + 160);
  }
  if ((v2 & 0x80) == 0)
    return 0;
  v10 = 0u;
  v11 = 0u;
  v8 = 0u;
  v9 = 0u;
  v5 = *(id *)(a1 + 48);
  v3 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
  if (v3)
  {
    v6 = *(_QWORD *)v9;
    while (2)
    {
      for (i = 0; i != v3; ++i)
      {
        if (*(_QWORD *)v9 != v6)
          objc_enumerationMutation(v5);
        if ((GEORPAuxiliaryControlIsDirty(*(os_unfair_lock_s **)(*((_QWORD *)&v8 + 1) + 8 * i)) & 1) != 0)
        {
          v3 = 1;
          goto LABEL_36;
        }
      }
      v3 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
      if (v3)
        continue;
      break;
    }
  }
LABEL_36:

  return v3;
}

os_unfair_lock_s *GEORPFeedbackCommonContextIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEORPFeedbackCommonContextIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 36);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_188A477B4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A48150(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A48468(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackCommonCorrectionsReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  char v15;
  unsigned __int8 v16;
  char v17;
  int *v18;
  int *v19;
  int *v20;
  int *v21;
  char v22;
  unsigned int v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  int v30;
  unint64_t v32;
  BOOL v33;
  int *v34;
  int v35;
  int v36;
  BOOL v37;
  uint64_t v38;
  void *v39;
  void *v40;
  id v41;
  void *v42;
  int v43;
  char v44;
  char v45;
  int v46;
  int v47;
  void *v48;
  int v50;
  char v51;
  char v52;
  char v53;
  BOOL v54;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1)
      + (*(_BYTE *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v11;
        v12 = v7;
        goto LABEL_8;
      case -3:
        v9 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v11 != 0;
        v15 = v14 & ~(_BYTE)v7;
        v16 = v14 | v7;
        v51 = v15 | v8;
        v17 = v16 | v15 | v8;
        if (((v16 | v9) & 1) != 0)
          v18 = 0;
        else
          v18 = a3;
        v54 = v16;
        v52 = v17;
        v53 = (v18 == 0) | v16;
        v19 = (int *)MEMORY[0x1E0D82BF0];
        v20 = (int *)MEMORY[0x1E0D82BC8];
        v21 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_7:
        v12 = v7;
        v13 = v8;
LABEL_8:
        ++v10;
        v7 = v12;
        v8 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v19) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v20))
      goto LABEL_58;
    v22 = 0;
    v23 = 0;
    v24 = 0;
    while (1)
    {
      v25 = *v19;
      v26 = *(_QWORD *)(v3 + v25);
      v27 = v26 + 1;
      if (v26 == -1 || v27 > *(_QWORD *)(v3 + *v6))
        break;
      v28 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v26);
      *(_QWORD *)(v3 + v25) = v27;
      v24 |= (unint64_t)(v28 & 0x7F) << v22;
      if ((v28 & 0x80) == 0)
        goto LABEL_23;
      v22 += 7;
      if (v23++ >= 9)
      {
        v24 = 0;
        v30 = *(unsigned __int8 *)(v3 + *v20);
        goto LABEL_25;
      }
    }
    *(_BYTE *)(v3 + *v20) = 1;
LABEL_23:
    v30 = *(unsigned __int8 *)(v3 + *v20);
    if (*(_BYTE *)(v3 + *v20))
      v24 = 0;
LABEL_25:
    if (v30 || (v24 & 7) == 4)
    {
LABEL_58:
      v50 = 1;
      goto LABEL_59;
    }
    v32 = v24 >> 3;
    v33 = v54;
    if ((v53 & 1) == 0)
    {
      v34 = v18;
      do
      {
        v36 = *v34++;
        v35 = v36;
        v33 = v36 != 0;
        if (v36)
          v37 = v35 == (_DWORD)v32;
        else
          v37 = 1;
      }
      while (!v37);
    }
    if ((_DWORD)v32 == 2)
    {
      if (!v33 || (*(_BYTE *)(a1 + 52) & 4) != 0)
      {
LABEL_52:
        v44 = PBReaderSkipValueWithTag();
        v20 = (int *)MEMORY[0x1E0D82BC8];
        if ((v44 & 1) == 0)
        {
          v50 = 0;
          goto LABEL_59;
        }
        goto LABEL_57;
      }
      PBReaderReadString();
      v40 = (void *)objc_claimAutoreleasedReturnValue();
      if (v40)
        -[GEORPFeedbackCommonCorrections _addNoFlagsImageId:](a1, v40);

      goto LABEL_56;
    }
    if ((_DWORD)v32 == 1)
      break;
    if ((v51 & 1) == 0 || (*(_BYTE *)(a1 + 52) & 1) != 0)
      goto LABEL_52;
    if (!*(_QWORD *)(a1 + 16))
    {
      v41 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
      v42 = *(void **)(a1 + 16);
      *(_QWORD *)(a1 + 16) = v41;

    }
    v43 = PBUnknownFieldAdd();
    v20 = (int *)MEMORY[0x1E0D82BC8];
    if (!v43)
    {
      v50 = 0;
      goto LABEL_60;
    }
LABEL_57:
    if (!(v52 & 1 | (v10 != 0)))
      goto LABEL_58;
  }
  if (!v33)
    goto LABEL_52;
  if ((*(_BYTE *)(a1 + 52) & 2) == 0)
  {
    PBReaderReadString();
    v38 = objc_claimAutoreleasedReturnValue();
    v39 = *(void **)(a1 + 24);
    *(_QWORD *)(a1 + 24) = v38;

    v20 = (int *)MEMORY[0x1E0D82BC8];
    --v10;
    goto LABEL_57;
  }
  if ((PBReaderSkipValueWithTag() & 1) != 0)
  {
    v10 += *(unsigned __int8 *)(a1 + 52) << 30 >> 31;
LABEL_56:
    v20 = (int *)MEMORY[0x1E0D82BC8];
    goto LABEL_57;
  }
  v50 = 0;
  v20 = (int *)MEMORY[0x1E0D82BC8];
LABEL_59:
  if ((v51 & 1) == 0)
    goto LABEL_61;
LABEL_60:
  *(_BYTE *)(a1 + 52) |= 1u;
LABEL_61:
  if (v54 || (v50 & 1) == 0)
  {
    *(_BYTE *)(a1 + 52) |= 2u;
    *(_BYTE *)(a1 + 52) |= 4u;
    goto LABEL_71;
  }
  if (v18)
  {
    while (1)
    {
      v47 = *v18++;
      v46 = v47;
      if (v47 == 1)
        break;
      if (v46 == 2)
      {
        v45 = 4;
LABEL_67:
        *(_BYTE *)(a1 + 52) |= v45;
      }
      else if (!v46)
      {
        goto LABEL_71;
      }
    }
    v45 = 2;
    goto LABEL_67;
  }
LABEL_71:
  if (v50)
    v3 = *(_BYTE *)(v3 + *v20) == 0;
  else
    v3 = 0;
  if (v54)
  {
    v48 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_188A48A58(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A49274(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackCommonCorrectionsReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEORPFeedbackCommonCorrectionsReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEORPFeedbackCommonCorrectionsReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEORPFeedbackCommonCorrectionsReadAllFrom_initialTag;
  Specified = GEORPFeedbackCommonCorrectionsReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_188A49400(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackCommonCorrectionsReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORPFeedbackCommonCorrectionsReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188A49460(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackCommonCorrectionsIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  _BOOL8 v17;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_27;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        goto LABEL_27;
      if ((v8 >> 3) == 2)
        break;
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2)
          goto LABEL_29;
        goto LABEL_23;
      }
      if (!PBReaderSkipValueWithTag())
      {
LABEL_29:
        v17 = 0;
        goto LABEL_28;
      }
LABEL_26:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_27;
    }
    if (v15 != 2)
      goto LABEL_29;
LABEL_23:
    if ((PBReaderSkipValueWithTag() & 1) == 0)
      goto LABEL_29;
    goto LABEL_26;
  }
LABEL_27:
  v17 = a1[*v4] == 0;
LABEL_28:
  PBReaderRecallMark();
  return v17;
}

void sub_188A4985C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackCommonCorrectionsIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v2 = (*(_BYTE *)(a1 + 52) & 0xE) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return v2;
}

void sub_188A49C10(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A49EF8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A4A158(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackDetailsReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint32x4_t v12;
  int8x16_t v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  char v19;
  unsigned __int8 v20;
  int *v21;
  int *v22;
  int *v23;
  int *v24;
  char v25;
  unsigned int v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  int v33;
  unint64_t v35;
  BOOL v36;
  int *v37;
  int v38;
  int v39;
  BOOL v40;
  GEORPPoiFeedback *v41;
  uint64_t v42;
  id v43;
  void *v44;
  int v45;
  void *v46;
  char v47;
  int v48;
  int v49;
  int v50;
  void *v51;
  int v53;
  char v54;
  char v55;
  char v56;
  BOOL v57;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 192));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 188);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 184));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = (uint32x4_t)vdupq_n_s32(*(_DWORD *)(a1 + 196));
  v13.i64[0] = 0x100000001;
  v13.i64[1] = 0x100000001;
  v14 = vaddvq_s32(vaddq_s32(vaddq_s32(vaddq_s32((int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v12, (uint32x4_t)xmmword_189CC6CD0), v13), (int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v12, (uint32x4_t)xmmword_189CC6CE0), v13)), vaddq_s32((int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v12, (uint32x4_t)xmmword_189CC6CB0), v13), (int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v12, (uint32x4_t)xmmword_189CC6CC0), v13))), (int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v12, (uint32x4_t)xmmword_189CC6CF0), v13)))+ (*(_DWORD *)(a1 + 196) & 1);
  while (2)
  {
    v15 = 1;
    v16 = 1;
    v17 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v14;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v16 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v18 = v14 > 0xF;
        v19 = v18 & ~(_BYTE)v11 | v9;
        v20 = v18 | v11;
        v54 = v19;
        v55 = v20 | v19;
        if (((v20 | v8) & 1) != 0)
          v21 = 0;
        else
          v21 = a3;
        v56 = (v21 == 0) | v20;
        v57 = v20;
        v22 = (int *)MEMORY[0x1E0D82BF0];
        v23 = (int *)MEMORY[0x1E0D82BC8];
        v24 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v14;
LABEL_7:
        v15 = v9;
LABEL_8:
        v16 = v10;
        v17 = v11;
LABEL_10:
        ++v7;
        v9 = v15;
        v10 = v16;
        v11 = v17;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v22) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v23))
      goto LABEL_191;
    v25 = 0;
    v26 = 0;
    v27 = 0;
    while (1)
    {
      v28 = *v22;
      v29 = *(_QWORD *)(v3 + v28);
      v30 = v29 + 1;
      if (v29 == -1 || v30 > *(_QWORD *)(v3 + *v6))
        break;
      v31 = *(_BYTE *)(*(_QWORD *)(v3 + *v24) + v29);
      *(_QWORD *)(v3 + v28) = v30;
      v27 |= (unint64_t)(v31 & 0x7F) << v25;
      if ((v31 & 0x80) == 0)
        goto LABEL_25;
      v25 += 7;
      if (v26++ >= 9)
      {
        v27 = 0;
        v33 = *(unsigned __int8 *)(v3 + *v23);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v23) = 1;
LABEL_25:
    v33 = *(unsigned __int8 *)(v3 + *v23);
    if (*(_BYTE *)(v3 + *v23))
      v27 = 0;
LABEL_27:
    if (v33 || (v27 & 7) == 4)
    {
LABEL_191:
      v53 = 1;
      goto LABEL_192;
    }
    v35 = v27 >> 3;
    v36 = v57;
    if ((v56 & 1) == 0)
    {
      v37 = v21;
      do
      {
        v39 = *v37++;
        v38 = v39;
        v36 = v39 != 0;
        if (v39)
          v40 = v38 == (_DWORD)v35;
        else
          v40 = 1;
      }
      while (!v40);
    }
    switch((int)v35)
    {
      case 1:
        if (!v36)
          goto LABEL_146;
        if ((*(_BYTE *)(a1 + 197) & 0x10) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_225;
          v41 = objc_alloc_init(GEORPPoiFeedback);
          if (GEORPPoiFeedbackReadAllFrom((uint64_t)v41, (void *)v3, v10 & 1))
          {
            PBReaderRecallMark();
            v42 = 112;
            goto LABEL_145;
          }
          goto LABEL_224;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_225;
        v48 = (int)(*(_DWORD *)(a1 + 196) << 19) >> 31;
        goto LABEL_188;
      case 2:
        if (!v36)
          goto LABEL_146;
        if ((*(_BYTE *)(a1 + 198) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_225;
          v48 = (int)(*(_DWORD *)(a1 + 196) << 11) >> 31;
          goto LABEL_188;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_225;
        v41 = objc_alloc_init(GEORPTransitPoiFeedback);
        if (!GEORPTransitPoiFeedbackReadAllFrom((uint64_t)v41, (void *)v3, v10 & 1))
          goto LABEL_224;
        PBReaderRecallMark();
        v42 = 176;
        goto LABEL_145;
      case 3:
        if (!v36)
          goto LABEL_146;
        if ((*(_BYTE *)(a1 + 198) & 1) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_225;
          v48 = (int)(*(_DWORD *)(a1 + 196) << 15) >> 31;
          goto LABEL_188;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_225;
        v41 = objc_alloc_init(GEORPSearchFeedback);
        if (!GEORPSearchFeedbackReadAllFrom((uint64_t)v41, (void *)v3, v10 & 1))
          goto LABEL_224;
        PBReaderRecallMark();
        v42 = 144;
        goto LABEL_145;
      case 4:
        if (!v36)
          goto LABEL_146;
        if ((*(_BYTE *)(a1 + 197) & 1) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_225;
          v48 = (int)(*(_DWORD *)(a1 + 196) << 23) >> 31;
          goto LABEL_188;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_225;
        v41 = objc_alloc_init(GEORPMerchantLookupFeedback);
        if (!GEORPMerchantLookupFeedbackReadAllFrom((uint64_t)v41, (void *)v3, v10 & 1))
          goto LABEL_224;
        PBReaderRecallMark();
        v42 = 80;
        goto LABEL_145;
      case 5:
        if (!v36)
          goto LABEL_146;
        if ((*(_BYTE *)(a1 + 196) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_225;
          v48 = (int)(*(_DWORD *)(a1 + 196) << 27) >> 31;
          goto LABEL_188;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_225;
        v41 = objc_alloc_init(GEORPDirectionsFeedback);
        if (!GEORPDirectionsFeedbackReadAllFrom((uint64_t)v41, (void *)v3, v10 & 1))
          goto LABEL_224;
        PBReaderRecallMark();
        v42 = 48;
        goto LABEL_145;
      case 6:
        if (!v36)
          goto LABEL_146;
        if ((*(_BYTE *)(a1 + 196) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_225;
          v48 = (int)(*(_DWORD *)(a1 + 196) << 29) >> 31;
          goto LABEL_188;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_225;
        v41 = objc_alloc_init(GEORPAddressFeedback);
        if (!GEORPAddressFeedbackReadAllFrom((uint64_t)v41, (void *)v3, v10 & 1))
          goto LABEL_224;
        PBReaderRecallMark();
        v42 = 32;
        goto LABEL_145;
      case 7:
        if (!v36)
          goto LABEL_146;
        if ((*(_BYTE *)(a1 + 198) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_225;
          v48 = (int)(*(_DWORD *)(a1 + 196) << 12) >> 31;
          goto LABEL_188;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_225;
        v41 = objc_alloc_init(GEORPTileFeedback);
        if (!GEORPTileFeedbackReadAllFrom((uint64_t)v41, (void *)v3, v10 & 1))
          goto LABEL_224;
        PBReaderRecallMark();
        v42 = 168;
        goto LABEL_145;
      case 8:
        if (!v36)
          goto LABEL_146;
        if ((*(_BYTE *)(a1 + 196) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_225;
          v48 = (int)(*(_DWORD *)(a1 + 196) << 26) >> 31;
          goto LABEL_188;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_225;
        v41 = objc_alloc_init(GEORPGroundViewFeedback);
        if (!GEORPGroundViewFeedbackReadAllFrom((uint64_t)v41, (void *)v3, v10 & 1))
          goto LABEL_224;
        PBReaderRecallMark();
        v42 = 56;
        goto LABEL_145;
      case 9:
        if (!v36)
          goto LABEL_146;
        if ((*(_BYTE *)(a1 + 197) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_225;
          v48 = (int)(*(_DWORD *)(a1 + 196) << 20) >> 31;
          goto LABEL_188;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_225;
        v41 = objc_alloc_init(GEORPPoiEnrichmentUpdate);
        if (!GEORPPoiEnrichmentUpdateReadAllFrom((uint64_t)v41, (void *)v3, v10 & 1))
          goto LABEL_224;
        PBReaderRecallMark();
        v42 = 104;
        goto LABEL_145;
      case 10:
        if (!v36)
          goto LABEL_146;
        if ((*(_BYTE *)(a1 + 196) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_225;
          v48 = (int)(*(_DWORD *)(a1 + 196) << 25) >> 31;
          goto LABEL_188;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_225;
        v41 = objc_alloc_init(GEORPIncidentFeedback);
        if (!GEORPIncidentFeedbackReadAllFrom((uint64_t)v41, (void *)v3, v10 & 1))
          goto LABEL_224;
        PBReaderRecallMark();
        v42 = 64;
        goto LABEL_145;
      case 11:
        if (!v36)
          goto LABEL_146;
        if ((*(_BYTE *)(a1 + 197) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_225;
          v48 = (int)(*(_DWORD *)(a1 + 196) << 18) >> 31;
          goto LABEL_188;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_225;
        v41 = objc_alloc_init(GEORPPoiImageFeedback);
        if (!GEORPPoiImageFeedbackReadAllFrom((uint64_t)v41, (void *)v3, v10 & 1))
          goto LABEL_224;
        PBReaderRecallMark();
        v42 = 120;
        goto LABEL_145;
      case 12:
        if (!v36)
          goto LABEL_146;
        if ((*(_BYTE *)(a1 + 196) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_225;
          v48 = (int)(*(_DWORD *)(a1 + 196) << 28) >> 31;
          goto LABEL_188;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_225;
        v41 = objc_alloc_init(GEORPCuratedCollectionFeedback);
        if (!GEORPCuratedCollectionFeedbackReadAllFrom((uint64_t)v41, (void *)v3, v10 & 1))
          goto LABEL_224;
        PBReaderRecallMark();
        v42 = 40;
        goto LABEL_145;
      case 13:
        if (!v36)
          goto LABEL_146;
        if ((*(_BYTE *)(a1 + 197) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_225;
          v48 = (int)(*(_DWORD *)(a1 + 196) << 21) >> 31;
          goto LABEL_188;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_225;
        v41 = objc_alloc_init(GEORPPoiActivityFeedback);
        if (!GEORPPoiActivityFeedbackReadAllFrom((uint64_t)v41, (void *)v3, v10 & 1))
          goto LABEL_224;
        PBReaderRecallMark();
        v42 = 96;
        goto LABEL_145;
      case 14:
        if (!v36)
          goto LABEL_146;
        if ((*(_BYTE *)(a1 + 196) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_225;
          v48 = (int)(*(_DWORD *)(a1 + 196) << 30) >> 31;
          goto LABEL_188;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_225;
        v41 = objc_alloc_init(GEORPAddToMapFeedback);
        if (!GEORPAddToMapFeedbackReadAllFrom((uint64_t)v41, (void *)v3))
          goto LABEL_224;
        PBReaderRecallMark();
        v42 = 24;
        goto LABEL_145;
      case 15:
        if (!v36)
          goto LABEL_146;
        if ((*(_BYTE *)(a1 + 196) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_225;
          v48 = (int)(*(_DWORD *)(a1 + 196) << 24) >> 31;
          goto LABEL_188;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_225;
        v41 = objc_alloc_init(GEORPLocalityFeedback);
        if (!GEORPLocalityFeedbackReadAllFrom((uint64_t)v41, (void *)v3, v10 & 1))
          goto LABEL_224;
        PBReaderRecallMark();
        v42 = 72;
        goto LABEL_145;
      case 16:
        if (!v36)
          goto LABEL_146;
        if ((*(_BYTE *)(a1 + 198) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_225;
          v48 = (int)(*(_DWORD *)(a1 + 196) << 14) >> 31;
          goto LABEL_188;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_225;
        v41 = objc_alloc_init(GEORPStreetFeedback);
        if (!GEORPStreetFeedbackReadAllFrom((uint64_t)v41, (void *)v3))
          goto LABEL_224;
        PBReaderRecallMark();
        v42 = 152;
        goto LABEL_145;
      case 17:
        if (!v36)
          goto LABEL_146;
        if ((*(_BYTE *)(a1 + 198) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_225;
          v48 = (int)(*(_DWORD *)(a1 + 196) << 13) >> 31;
          goto LABEL_188;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_225;
        v41 = objc_alloc_init(GEORPThirdPartyPhotoSharingPreferenceUpdate);
        if (!GEORPThirdPartyPhotoSharingPreferenceUpdateReadAllFrom((uint64_t)v41, (void *)v3))
          goto LABEL_224;
        PBReaderRecallMark();
        v42 = 160;
        goto LABEL_145;
      case 18:
        if (!v36)
          goto LABEL_146;
        if ((*(_BYTE *)(a1 + 197) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_225;
          v48 = (int)(*(_DWORD *)(a1 + 196) << 22) >> 31;
          goto LABEL_188;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_225;
        v41 = objc_alloc_init(GEORPPhotoAttributionPreferencesUpdate);
        if (!GEORPPhotoAttributionPreferencesUpdateReadAllFrom((uint64_t)v41, (void *)v3, v10 & 1))
          goto LABEL_224;
        PBReaderRecallMark();
        v42 = 88;
        goto LABEL_145;
      case 19:
        if (!v36)
          goto LABEL_146;
        if ((*(_BYTE *)(a1 + 197) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_225;
          v48 = (int)(*(_DWORD *)(a1 + 196) << 16) >> 31;
          goto LABEL_188;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_225;
        v41 = objc_alloc_init(GEORPRunningTrackFeedback);
        if (!GEORPRunningTrackFeedbackReadAllFrom((uint64_t)v41, (void *)v3))
          goto LABEL_224;
        PBReaderRecallMark();
        v42 = 136;
        goto LABEL_145;
      case 20:
        if (!v36)
          goto LABEL_146;
        if ((*(_BYTE *)(a1 + 197) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_225;
          v48 = (int)(*(_DWORD *)(a1 + 196) << 17) >> 31;
LABEL_188:
          v7 += v48;
LABEL_189:
          v23 = (int *)MEMORY[0x1E0D82BC8];
LABEL_190:
          v24 = (int *)MEMORY[0x1E0D82BB8];
          if (!(v55 & 1 | (v7 != 0)))
            goto LABEL_191;
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_225;
        v41 = objc_alloc_init(GEORPRapUserResponseFeedback);
        if (GEORPRapUserResponseFeedbackReadAllFrom((uint64_t)v41, (void *)v3))
        {
          PBReaderRecallMark();
          v42 = 128;
LABEL_145:
          v46 = *(void **)(a1 + v42);
          *(_QWORD *)(a1 + v42) = v41;

          --v7;
          goto LABEL_189;
        }
LABEL_224:

LABEL_225:
        v53 = 0;
        v23 = (int *)MEMORY[0x1E0D82BC8];
LABEL_192:
        if ((v54 & 1) != 0)
LABEL_193:
          *(_DWORD *)(a1 + 196) |= 1u;
        if (v57 || (v53 & 1) == 0)
        {
          *(_DWORD *)(a1 + 196) |= 0x1000u;
          *(_DWORD *)(a1 + 196) |= 0x100000u;
          *(_DWORD *)(a1 + 196) |= 0x10000u;
          *(_DWORD *)(a1 + 196) |= 0x100u;
          *(_DWORD *)(a1 + 196) |= 0x10u;
          *(_DWORD *)(a1 + 196) |= 4u;
          *(_DWORD *)(a1 + 196) |= 0x80000u;
          *(_DWORD *)(a1 + 196) |= 0x20u;
          *(_DWORD *)(a1 + 196) |= 0x800u;
          *(_DWORD *)(a1 + 196) |= 0x40u;
          *(_DWORD *)(a1 + 196) |= 0x2000u;
          *(_DWORD *)(a1 + 196) |= 8u;
          *(_DWORD *)(a1 + 196) |= 0x400u;
          *(_DWORD *)(a1 + 196) |= 2u;
          *(_DWORD *)(a1 + 196) |= 0x80u;
          *(_DWORD *)(a1 + 196) |= 0x20000u;
          *(_DWORD *)(a1 + 196) |= 0x40000u;
          *(_DWORD *)(a1 + 196) |= 0x200u;
          *(_DWORD *)(a1 + 196) |= 0x8000u;
          *(_DWORD *)(a1 + 196) |= 0x4000u;
        }
        else if (v21)
        {
          while (1)
          {
            v49 = *v21++;
            v50 = 4096;
            switch(v49)
            {
              case 0:
                goto LABEL_218;
              case 1:
                goto LABEL_217;
              case 2:
                v50 = 0x100000;
                goto LABEL_217;
              case 3:
                v50 = 0x10000;
                goto LABEL_217;
              case 4:
                v50 = 256;
                goto LABEL_217;
              case 5:
                v50 = 16;
                goto LABEL_217;
              case 6:
                v50 = 4;
                goto LABEL_217;
              case 7:
                v50 = 0x80000;
                goto LABEL_217;
              case 8:
                v50 = 32;
                goto LABEL_217;
              case 9:
                v50 = 2048;
                goto LABEL_217;
              case 10:
                v50 = 64;
                goto LABEL_217;
              case 11:
                v50 = 0x2000;
                goto LABEL_217;
              case 12:
                v50 = 8;
                goto LABEL_217;
              case 13:
                v50 = 1024;
                goto LABEL_217;
              case 14:
                v50 = 2;
                goto LABEL_217;
              case 15:
                v50 = 128;
                goto LABEL_217;
              case 16:
                v50 = 0x20000;
                goto LABEL_217;
              case 17:
                v50 = 0x40000;
                goto LABEL_217;
              case 18:
                v50 = 512;
                goto LABEL_217;
              case 19:
                v50 = 0x8000;
                goto LABEL_217;
              case 20:
                v50 = 0x4000;
LABEL_217:
                *(_DWORD *)(a1 + 196) |= v50;
                break;
              default:
                continue;
            }
          }
        }
LABEL_218:
        if (v53)
          v3 = *(_BYTE *)(v3 + *v23) == 0;
        else
          v3 = 0;
        if (v57)
        {
          v51 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      default:
        if ((v54 & 1) == 0 || (*(_BYTE *)(a1 + 196) & 1) != 0)
        {
LABEL_146:
          v47 = PBReaderSkipValueWithTag();
          v23 = (int *)MEMORY[0x1E0D82BC8];
          if ((v47 & 1) == 0)
          {
            v53 = 0;
            goto LABEL_192;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v43 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v44 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v43;

          }
          v45 = PBUnknownFieldAdd();
          v23 = (int *)MEMORY[0x1E0D82BC8];
          if (!v45)
          {
            v53 = 0;
            goto LABEL_193;
          }
        }
        goto LABEL_190;
    }
  }
}

void sub_188A4B418(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A4B55C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A4B6A4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A4B7EC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A4B934(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A4BA80(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A4BBC4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A4BD08(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A4BE50(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A4BF9C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A4C0E4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A4C230(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A4C378(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A4C4C0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A4C60C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A4C754(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A4C89C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A4C9E8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A4CB34(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A4E004(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORPFeedbackDetailsCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  objc_msgSend(a1[14], "readAll:", 1);
  objc_msgSend(a1[22], "readAll:", 1);
  objc_msgSend(a1[18], "readAll:", 1);
  objc_msgSend(a1[10], "readAll:", 1);
  objc_msgSend(a1[6], "readAll:", 1);
  objc_msgSend(a1[4], "readAll:", 1);
  objc_msgSend(a1[21], "readAll:", 1);
  objc_msgSend(a1[7], "readAll:", 1);
  objc_msgSend(a1[13], "readAll:", 1);
  objc_msgSend(a1[8], "readAll:", 1);
  objc_msgSend(a1[15], "readAll:", 1);
  objc_msgSend(a1[5], "readAll:", 1);
  objc_msgSend(a1[12], "readAll:", 1);
  objc_msgSend(a1[3], "readAll:", 1);
  objc_msgSend(a1[9], "readAll:", 1);
  objc_msgSend(a1[19], "readAll:", 1);
  objc_msgSend(a1[20], "readAll:", 1);
  objc_msgSend(a1[11], "readAll:", 1);
  objc_msgSend(a1[17], "readAll:", 1);
  return objc_msgSend(a1[16], "readAll:", 1);
}

unint64_t GEORPFeedbackDetailsReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 188))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEORPFeedbackDetailsReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 192));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 184) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 188) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEORPFeedbackDetailsReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEORPFeedbackDetailsReadAllFrom_initialTag;
  Specified = GEORPFeedbackDetailsReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEORPFeedbackDetailsCallReadAllRecursiveWithoutSynchronized((id *)a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 192));
  return Specified;
}

void sub_188A4E2FC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackDetailsReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORPFeedbackDetailsReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188A4E35C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackDetailsIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  _BOOL8 v17;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (!a1[*v4])
    {
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 == 2 && PBReaderPlaceMark() && GEORPPoiFeedbackIsValid(a1))
            goto LABEL_100;
          goto LABEL_103;
        case 2u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPTransitPoiFeedbackIsValid(a1))
            goto LABEL_103;
          goto LABEL_100;
        case 3u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPSearchFeedbackIsValid(a1))
            goto LABEL_103;
          goto LABEL_100;
        case 4u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPMerchantLookupFeedbackIsValid(a1))
            goto LABEL_103;
          goto LABEL_100;
        case 5u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPDirectionsFeedbackIsValid(a1))
            goto LABEL_103;
          goto LABEL_100;
        case 6u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPAddressFeedbackIsValid(a1))
            goto LABEL_103;
          goto LABEL_100;
        case 7u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPTileFeedbackIsValid(a1))
            goto LABEL_103;
          goto LABEL_100;
        case 8u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPGroundViewFeedbackIsValid(a1))
            goto LABEL_103;
          goto LABEL_100;
        case 9u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPPoiEnrichmentUpdateIsValid(a1))
            goto LABEL_103;
          goto LABEL_100;
        case 0xAu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPIncidentFeedbackIsValid(a1))
            goto LABEL_103;
          goto LABEL_100;
        case 0xBu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPPoiImageFeedbackIsValid(a1))
            goto LABEL_103;
          goto LABEL_100;
        case 0xCu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPCuratedCollectionFeedbackIsValid(a1))
            goto LABEL_103;
          goto LABEL_100;
        case 0xDu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPPoiActivityFeedbackIsValid(a1))
            goto LABEL_103;
          goto LABEL_100;
        case 0xEu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPAddToMapFeedbackIsValid(a1))
            goto LABEL_103;
          goto LABEL_100;
        case 0xFu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPLocalityFeedbackIsValid(a1))
            goto LABEL_103;
          goto LABEL_100;
        case 0x10u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPStreetFeedbackIsValid((unsigned __int8 *)a1))
            goto LABEL_103;
          goto LABEL_100;
        case 0x11u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPThirdPartyPhotoSharingPreferenceUpdateIsValid(a1))
            goto LABEL_103;
          goto LABEL_100;
        case 0x12u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPPhotoAttributionPreferencesUpdateIsValid(a1))
            goto LABEL_103;
          goto LABEL_100;
        case 0x13u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPRunningTrackFeedbackIsValid(a1))
            goto LABEL_103;
          goto LABEL_100;
        case 0x14u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPRapUserResponseFeedbackIsValid(a1))
            goto LABEL_103;
LABEL_100:
          PBReaderRecallMark();
          goto LABEL_101;
        default:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_103:
            PBReaderRecallMark();
            return 0;
          }
LABEL_101:
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_102;
          break;
      }
    }
  }
LABEL_102:
  v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

BOOL GEORPPoiFeedbackIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  _BOOL8 v28;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0)
            goto LABEL_56;
          v17 = 0;
          while (1)
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
              goto LABEL_49;
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if (v21 < 0)
            {
              v22 = v17++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_54;
          }
        case 2u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPPoiCorrectionsIsValid(a1))
            goto LABEL_56;
          goto LABEL_53;
        case 3u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDPlaceIsValid(a1))
            goto LABEL_56;
          goto LABEL_53;
        case 4u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDPlaceRequestIsValid(a1))
            goto LABEL_56;
          goto LABEL_53;
        case 5u:
          if ((v8 & 7) != 0)
            goto LABEL_56;
          v23 = 0;
          break;
        case 6u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPCuratedCollectionContextIsValid(a1))
            goto LABEL_56;
LABEL_53:
          PBReaderRecallMark();
          continue;
        default:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_56:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v24 = *v2;
        v25 = *(_QWORD *)&a1[v24];
        v26 = v25 + 1;
        if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
          break;
        v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
        *(_QWORD *)&a1[v24] = v26;
        if (v27 < 0)
        {
          v22 = v23++ > 8;
          if (!v22)
            continue;
        }
        goto LABEL_54;
      }
LABEL_49:
      a1[*v4] = 1;
LABEL_54:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v28 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v28;
}

BOOL GEORPTransitPoiFeedbackIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  _BOOL8 v23;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (!a1[*v4])
    {
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0)
            goto LABEL_57;
          v17 = 0;
          do
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
            {
              a1[*v4] = 1;
              goto LABEL_53;
            }
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if ((v21 & 0x80000000) == 0)
              break;
          }
          while (v17++ <= 8);
          goto LABEL_53;
        case 2u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPTransitPoiCorrectionsIsValid(a1))
            goto LABEL_57;
          goto LABEL_52;
        case 3u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDPlaceIsValid(a1))
            goto LABEL_57;
          goto LABEL_52;
        case 4u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPTransitLineTileInfoIsValid(a1))
            goto LABEL_57;
          goto LABEL_52;
        case 5u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDPlaceRequestIsValid(a1))
            goto LABEL_57;
          goto LABEL_52;
        case 6u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEODirectionsRequestIsValid(a1))
            goto LABEL_57;
          goto LABEL_52;
        case 7u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEODirectionsResponseIsValid(a1))
            goto LABEL_57;
LABEL_52:
          PBReaderRecallMark();
          goto LABEL_53;
        default:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_57:
            PBReaderRecallMark();
            return 0;
          }
LABEL_53:
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_56;
          break;
      }
    }
  }
LABEL_56:
  v23 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v23;
}

BOOL GEORPSearchFeedbackIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  _BOOL8 v17;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_30;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        goto LABEL_30;
      if ((v8 >> 3) == 2)
        break;
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEORPSearchFeedbackContextIsValid(a1))
          goto LABEL_31;
LABEL_27:
        PBReaderRecallMark();
        goto LABEL_29;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        goto LABEL_31;
LABEL_29:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_30;
    }
    if (v15 != 2 || !PBReaderPlaceMark() || !GEORPSearchFeedbackCorrectionsIsValid(a1))
    {
LABEL_31:
      PBReaderRecallMark();
      return 0;
    }
    goto LABEL_27;
  }
LABEL_30:
  v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

BOOL GEORPMerchantLookupFeedbackIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  _BOOL8 v17;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_30;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        goto LABEL_30;
      if ((v8 >> 3) == 2)
        break;
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEORPMerchantLookupContextIsValid(a1))
          goto LABEL_31;
LABEL_27:
        PBReaderRecallMark();
        goto LABEL_29;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        goto LABEL_31;
LABEL_29:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_30;
    }
    if (v15 != 2 || !PBReaderPlaceMark() || !GEORPMerchantLookupCorrectionsIsValid(a1))
    {
LABEL_31:
      PBReaderRecallMark();
      return 0;
    }
    goto LABEL_27;
  }
LABEL_30:
  v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

BOOL GEORPTileFeedbackIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unint64_t v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int v22;
  _BOOL8 v24;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      v17 = v8 >> 3;
      if ((v8 >> 3) == 3)
      {
        if ((v8 & 7) != 0)
          goto LABEL_43;
        v18 = 0;
        while (1)
        {
          v19 = *v2;
          v20 = *(_QWORD *)&a1[v19];
          v21 = v20 + 1;
          if (v20 == -1 || v21 > *(_QWORD *)&a1[*v3])
            break;
          v22 = *(char *)(*(_QWORD *)&a1[*v5] + v20);
          *(_QWORD *)&a1[v19] = v21;
          if (v22 < 0 && v18++ <= 8)
            continue;
          goto LABEL_40;
        }
        a1[*v4] = 1;
      }
      else
      {
        if ((_DWORD)v17 == 2)
        {
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPCorrectedCoordinateIsValid(a1))
          {
LABEL_43:
            PBReaderRecallMark();
            return 0;
          }
          goto LABEL_36;
        }
        if ((_DWORD)v17 == 1)
        {
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPCorrectedLabelIsValid(a1))
            goto LABEL_43;
LABEL_36:
          PBReaderRecallMark();
          continue;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_43;
      }
LABEL_40:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v24 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v24;
}

BOOL GEORPGroundViewFeedbackIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  _BOOL8 v17;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_30;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        goto LABEL_30;
      if ((v8 >> 3) == 2)
        break;
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEORPGroundViewFeedbackContextIsValid(a1))
          goto LABEL_31;
LABEL_27:
        PBReaderRecallMark();
        goto LABEL_29;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        goto LABEL_31;
LABEL_29:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_30;
    }
    if (v15 != 2 || !PBReaderPlaceMark() || !GEORPGroundViewCorrectionsIsValid(a1))
    {
LABEL_31:
      PBReaderRecallMark();
      return 0;
    }
    goto LABEL_27;
  }
LABEL_30:
  v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

BOOL GEORPPoiImageFeedbackIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  _BOOL8 v17;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_30;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        goto LABEL_30;
      if ((v8 >> 3) == 2)
        break;
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEORPPoiImageFeedbackContextIsValid(a1))
          goto LABEL_31;
LABEL_27:
        PBReaderRecallMark();
        goto LABEL_29;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        goto LABEL_31;
LABEL_29:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_30;
    }
    if (v15 != 2 || !PBReaderPlaceMark() || !GEORPPoiImageFeedbackCorrectionsIsValid(a1))
    {
LABEL_31:
      PBReaderRecallMark();
      return 0;
    }
    goto LABEL_27;
  }
LABEL_30:
  v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

BOOL GEORPPoiActivityFeedbackIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  BOOL v13;
  int v14;
  int v15;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int v20;
  unsigned int v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  int v26;
  BOOL v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  int v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  int v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  int v42;
  _BOOL8 v43;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (!a1[*v4])
    {
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        v13 = v7++ >= 9;
        if (v13)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDMapsIdentifierIsValid(a1))
            goto LABEL_71;
          goto LABEL_22;
        case 2u:
          if (v15 == 2)
          {
            if (!PBReaderPlaceMark())
            {
LABEL_71:
              PBReaderRecallMark();
              return 0;
            }
LABEL_60:
            while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
            {
              v38 = a1[*v4];
              if (a1[*v4])
                break;
              while (1)
              {
                v39 = *v2;
                v40 = *(_QWORD *)&a1[v39];
                v41 = v40 + 1;
                if (v40 == -1 || v41 > *(_QWORD *)&a1[*v3])
                  break;
                v42 = *(char *)(*(_QWORD *)&a1[*v5] + v40);
                *(_QWORD *)&a1[v39] = v41;
                if (v42 < 0)
                {
                  v13 = v38++ >= 9;
                  if (!v13)
                    continue;
                }
                goto LABEL_60;
              }
              a1[*v4] = 1;
            }
LABEL_22:
            PBReaderRecallMark();
          }
          else
          {
            if ((v8 & 7) != 0)
              goto LABEL_71;
            while (1)
            {
              v17 = *v2;
              v18 = *(_QWORD *)&a1[v17];
              v19 = v18 + 1;
              if (v18 == -1 || v19 > *(_QWORD *)&a1[*v3])
                break;
              v20 = *(char *)(*(_QWORD *)&a1[*v5] + v18);
              *(_QWORD *)&a1[v17] = v19;
              if (v20 < 0)
              {
                v21 = v15++;
                if (v21 <= 8)
                  continue;
              }
              goto LABEL_57;
            }
LABEL_56:
            a1[*v4] = 1;
          }
LABEL_57:
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_69;
          break;
        case 3u:
          if ((v8 & 7) != 0)
            goto LABEL_71;
          v22 = 0;
          while (1)
          {
            v23 = *v2;
            v24 = *(_QWORD *)&a1[v23];
            v25 = v24 + 1;
            if (v24 == -1 || v25 > *(_QWORD *)&a1[*v3])
              goto LABEL_56;
            v26 = *(char *)(*(_QWORD *)&a1[*v5] + v24);
            *(_QWORD *)&a1[v23] = v25;
            if (v26 < 0)
            {
              v27 = v22++ > 8;
              if (!v27)
                continue;
            }
            goto LABEL_57;
          }
        case 4u:
          if ((v8 & 7) != 0)
            goto LABEL_71;
          v28 = 0;
          while (1)
          {
            v29 = *v2;
            v30 = *(_QWORD *)&a1[v29];
            v31 = v30 + 1;
            if (v30 == -1 || v31 > *(_QWORD *)&a1[*v3])
              goto LABEL_56;
            v32 = *(char *)(*(_QWORD *)&a1[*v5] + v30);
            *(_QWORD *)&a1[v29] = v31;
            if (v32 < 0)
            {
              v27 = v28++ > 8;
              if (!v27)
                continue;
            }
            goto LABEL_57;
          }
        case 5u:
          if ((v8 & 7) != 0)
            goto LABEL_71;
          v33 = 0;
          while (1)
          {
            v34 = *v2;
            v35 = *(_QWORD *)&a1[v34];
            v36 = v35 + 1;
            if (v35 == -1 || v36 > *(_QWORD *)&a1[*v3])
              goto LABEL_56;
            v37 = *(char *)(*(_QWORD *)&a1[*v5] + v35);
            *(_QWORD *)&a1[v34] = v36;
            if (v37 < 0)
            {
              v27 = v33++ > 8;
              if (!v27)
                continue;
            }
            goto LABEL_57;
          }
        default:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_71;
          goto LABEL_57;
      }
    }
  }
LABEL_69:
  v43 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v43;
}

BOOL GEORPLocalityFeedbackIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  _BOOL8 v17;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_30;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        goto LABEL_30;
      if ((v8 >> 3) == 2)
        break;
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDPlaceIsValid(a1))
          goto LABEL_31;
LABEL_27:
        PBReaderRecallMark();
        goto LABEL_29;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        goto LABEL_31;
LABEL_29:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_30;
    }
    if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDPlaceRequestIsValid(a1))
    {
LABEL_31:
      PBReaderRecallMark();
      return 0;
    }
    goto LABEL_27;
  }
LABEL_30:
  v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

BOOL GEORPStreetFeedbackIsValid(unsigned __int8 *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  int v6;
  char v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v15;
  _BOOL8 v16;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  v5 = (int *)MEMORY[0x1E0D82BB8];
  while (1)
  {
    v6 = a1[*v4];
    if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
      break;
    if (a1[*v4])
    {
      v6 = 1;
      break;
    }
    v7 = 0;
    v8 = 0;
    v9 = 0;
    while (1)
    {
      v10 = *v2;
      v11 = *(_QWORD *)&a1[v10];
      v12 = v11 + 1;
      if (v11 == -1 || v12 > *(_QWORD *)&a1[*v3])
        break;
      v13 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v11);
      *(_QWORD *)&a1[v10] = v12;
      v9 |= (unint64_t)(v13 & 0x7F) << v7;
      if ((v13 & 0x80) == 0)
        goto LABEL_12;
      v7 += 7;
      if (v8++ >= 9)
      {
        LOBYTE(v9) = 0;
        v6 = a1[*v4];
        goto LABEL_14;
      }
    }
    a1[*v4] = 1;
LABEL_12:
    v6 = a1[*v4];
    if (a1[*v4])
      LOBYTE(v9) = 0;
LABEL_14:
    if (v6)
      v15 = 1;
    else
      v15 = (v9 & 7) == 4;
    if (v15)
      break;
    if ((PBReaderSkipValueWithTag() & 1) == 0)
    {
      v16 = 0;
      goto LABEL_22;
    }
  }
  v16 = v6 == 0;
LABEL_22:
  PBReaderRecallMark();
  return v16;
}

BOOL GEORPRunningTrackFeedbackIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  _BOOL8 v17;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_26:
          v17 = 0;
          goto LABEL_25;
        }
      }
      else if (!PBReaderSkipValueWithTag())
      {
        goto LABEL_26;
      }
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v17 = a1[*v4] == 0;
LABEL_25:
  PBReaderRecallMark();
  return v17;
}

BOOL GEORPRapUserResponseFeedbackIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  _BOOL8 v17;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_26:
          v17 = 0;
          goto LABEL_25;
        }
      }
      else if (!PBReaderSkipValueWithTag())
      {
        goto LABEL_26;
      }
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v17 = a1[*v4] == 0;
LABEL_25:
  PBReaderRecallMark();
  return v17;
}

void sub_188A50718(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORPFeedbackDetailsIsDirty(uint64_t a1)
{
  unsigned int v2;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 192));
  v2 = *(_DWORD *)(a1 + 196);
  if ((v2 & 0x200000) != 0)
    return 1;
  if ((v2 & 0x1000) != 0)
  {
    if ((GEORPPoiFeedbackIsDirty(*(os_unfair_lock_s **)(a1 + 112)) & 1) != 0)
      return 1;
    v2 = *(_DWORD *)(a1 + 196);
  }
  if ((v2 & 0x100000) != 0)
  {
    if ((GEORPTransitPoiFeedbackIsDirty(*(os_unfair_lock_s **)(a1 + 176)) & 1) != 0)
      return 1;
    v2 = *(_DWORD *)(a1 + 196);
  }
  if ((v2 & 0x10000) != 0)
  {
    if ((GEORPSearchFeedbackIsDirty(*(os_unfair_lock_s **)(a1 + 144)) & 1) != 0)
      return 1;
    v2 = *(_DWORD *)(a1 + 196);
  }
  if ((v2 & 0x100) != 0)
  {
    if ((GEORPMerchantLookupFeedbackIsDirty(*(os_unfair_lock_s **)(a1 + 80)) & 1) != 0)
      return 1;
    v2 = *(_DWORD *)(a1 + 196);
  }
  if ((v2 & 0x10) != 0)
  {
    if ((GEORPDirectionsFeedbackIsDirty(*(os_unfair_lock_s **)(a1 + 48)) & 1) != 0)
      return 1;
    v2 = *(_DWORD *)(a1 + 196);
  }
  if ((v2 & 4) != 0)
  {
    if ((GEORPAddressFeedbackIsDirty(*(os_unfair_lock_s **)(a1 + 32)) & 1) != 0)
      return 1;
    v2 = *(_DWORD *)(a1 + 196);
  }
  if ((v2 & 0x80000) != 0)
  {
    if ((GEORPTileFeedbackIsDirty(*(os_unfair_lock_s **)(a1 + 168)) & 1) != 0)
      return 1;
    v2 = *(_DWORD *)(a1 + 196);
  }
  if ((v2 & 0x20) != 0)
  {
    if ((GEORPGroundViewFeedbackIsDirty(*(os_unfair_lock_s **)(a1 + 56)) & 1) != 0)
      return 1;
    v2 = *(_DWORD *)(a1 + 196);
  }
  if ((v2 & 0x800) != 0)
  {
    if ((GEORPPoiEnrichmentUpdateIsDirty(*(os_unfair_lock_s **)(a1 + 104)) & 1) != 0)
      return 1;
    v2 = *(_DWORD *)(a1 + 196);
  }
  if ((v2 & 0x40) != 0)
  {
    if ((GEORPIncidentFeedbackIsDirty(*(os_unfair_lock_s **)(a1 + 64)) & 1) != 0)
      return 1;
    v2 = *(_DWORD *)(a1 + 196);
  }
  if ((v2 & 0x2000) != 0)
  {
    if ((GEORPPoiImageFeedbackIsDirty(*(os_unfair_lock_s **)(a1 + 120)) & 1) != 0)
      return 1;
    v2 = *(_DWORD *)(a1 + 196);
  }
  if ((v2 & 8) != 0)
  {
    if ((GEORPCuratedCollectionFeedbackIsDirty(*(os_unfair_lock_s **)(a1 + 40)) & 1) != 0)
      return 1;
    v2 = *(_DWORD *)(a1 + 196);
  }
  if ((v2 & 0x400) != 0)
  {
    if (GEORPPoiActivityFeedbackIsDirty(*(_QWORD *)(a1 + 96)))
      return 1;
    v2 = *(_DWORD *)(a1 + 196);
  }
  if ((v2 & 2) != 0)
    return 1;
  if ((v2 & 0x80) == 0)
    goto LABEL_45;
  if ((GEORPLocalityFeedbackIsDirty(*(os_unfair_lock_s **)(a1 + 72)) & 1) != 0)
    return 1;
  v2 = *(_DWORD *)(a1 + 196);
LABEL_45:
  if ((v2 & 0x68200) != 0)
    return 1;
  return (v2 >> 14) & 1;
}

os_unfair_lock_s *GEORPFeedbackDetailsIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEORPFeedbackDetailsIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 48);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void GEORPFeedbackDetailsClearSensitiveFields(void *a1, uint64_t a2, int a3)
{
  void *v6;
  unsigned int v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  int HasSensitiveFields;
  void *v14;
  id *v15;
  void *v16;
  void *v17;
  unsigned int v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  unsigned int v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  unsigned int v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  unsigned int v36;
  void *v37;
  void *v38;
  void *v39;
  void *v40;
  void *v41;
  int v42;
  void *v43;
  void *v44;
  void *v45;
  void *v46;
  int v47;
  void *v48;
  void *v49;
  void *v50;
  void *v51;
  unsigned int v52;
  void *v53;
  void *v54;
  id v55;

  if (a3)
  {
    if (objc_msgSend(a1, "hasPoiFeedback")
      && (objc_msgSend(a1, "poiFeedback"),
          v6 = (void *)objc_claimAutoreleasedReturnValue(),
          v7 = GEORPPoiFeedbackHasSensitiveFields(v6, a2),
          v6,
          v7))
    {
      objc_msgSend(a1, "poiFeedback");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      v9 = (void *)objc_msgSend(v8, "copy");

      objc_msgSend(v9, "placeRequest");
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v10, "clearSensitiveFields:", a2);

      objc_msgSend(a1, "setPoiFeedback:", v9);
    }
    else
    {
      objc_msgSend(a1, "poiFeedback");
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v9, "clearSensitiveFields:", a2);
    }

    if (objc_msgSend(a1, "hasTransitPoiFeedback"))
    {
      objc_msgSend(a1, "transitPoiFeedback");
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      HasSensitiveFields = GEORPTransitPoiFeedbackHasSensitiveFields(v12, a2);

      if (HasSensitiveFields)
      {
        objc_msgSend(a1, "transitPoiFeedback");
        v14 = (void *)objc_claimAutoreleasedReturnValue();
        v15 = (id *)objc_msgSend(v14, "copy");

        GEORPTransitPoiFeedbackClearSensitiveFields(v15, a2, 0);
        objc_msgSend(a1, "setTransitPoiFeedback:", v15);

        goto LABEL_11;
      }
    }
  }
  else
  {
    objc_msgSend(a1, "poiFeedback");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "clearSensitiveFields:", a2);

  }
  objc_msgSend(a1, "transitPoiFeedback");
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v16, "clearSensitiveFields:", a2);

  if (!a3)
  {
    objc_msgSend(a1, "searchFeedback");
    v22 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v22, "clearSensitiveFields:", a2);

    goto LABEL_19;
  }
LABEL_11:
  if (objc_msgSend(a1, "hasSearchFeedback")
    && (objc_msgSend(a1, "searchFeedback"),
        v17 = (void *)objc_claimAutoreleasedReturnValue(),
        v18 = GEORPSearchFeedbackHasSensitiveFields(v17, a2),
        v17,
        v18))
  {
    objc_msgSend(a1, "searchFeedback");
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    v20 = (void *)objc_msgSend(v19, "copy");

    objc_msgSend(v20, "context");
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v21, "clearSensitiveFields:", a2);

    objc_msgSend(a1, "setSearchFeedback:", v20);
  }
  else
  {
    objc_msgSend(a1, "searchFeedback");
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v20, "clearSensitiveFields:", a2);
  }

  if (objc_msgSend(a1, "hasMerchantLookupFeedback"))
  {
    objc_msgSend(a1, "merchantLookupFeedback");
    v23 = (void *)objc_claimAutoreleasedReturnValue();
    v24 = GEORPMerchantLookupFeedbackHasSensitiveFields(v23);

    if (v24)
    {
      objc_msgSend(a1, "merchantLookupFeedback");
      v25 = (void *)objc_claimAutoreleasedReturnValue();
      v26 = (void *)objc_msgSend(v25, "copy");

      objc_msgSend(v26, "context");
      v27 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v27, "clearSensitiveFields:", a2);

      objc_msgSend(a1, "setMerchantLookupFeedback:", v26);
      goto LABEL_20;
    }
  }
LABEL_19:
  objc_msgSend(a1, "merchantLookupFeedback");
  v28 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v28, "clearSensitiveFields:", a2);

  if (!a3)
  {
    objc_msgSend(a1, "directionsFeedback");
    v34 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v34, "clearSensitiveFields:", a2);

    goto LABEL_28;
  }
LABEL_20:
  if (objc_msgSend(a1, "hasDirectionsFeedback")
    && (objc_msgSend(a1, "directionsFeedback"),
        v29 = (void *)objc_claimAutoreleasedReturnValue(),
        v30 = GEORPDirectionsFeedbackHasSensitiveFields(v29, a2),
        v29,
        v30))
  {
    objc_msgSend(a1, "directionsFeedback");
    v31 = (void *)objc_claimAutoreleasedReturnValue();
    v32 = (void *)objc_msgSend(v31, "copy");

    objc_msgSend(v32, "directionsContext");
    v33 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v33, "clearSensitiveFields:", a2);

    objc_msgSend(a1, "setDirectionsFeedback:", v32);
  }
  else
  {
    objc_msgSend(a1, "directionsFeedback");
    v32 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v32, "clearSensitiveFields:", a2);
  }

  if (objc_msgSend(a1, "hasAddressPointFeedback"))
  {
    objc_msgSend(a1, "addressPointFeedback");
    v35 = (void *)objc_claimAutoreleasedReturnValue();
    v36 = GEORPAddressFeedbackHasSensitiveFields(v35, a2);

    if (v36)
    {
      objc_msgSend(a1, "addressPointFeedback");
      v37 = (void *)objc_claimAutoreleasedReturnValue();
      v38 = (void *)objc_msgSend(v37, "copy");

      objc_msgSend(v38, "placeRequest");
      v39 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v39, "clearSensitiveFields:", a2);

      objc_msgSend(a1, "setAddressPointFeedback:", v38);
      goto LABEL_29;
    }
  }
LABEL_28:
  objc_msgSend(a1, "addressPointFeedback");
  v40 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v40, "clearSensitiveFields:", a2);

  if (!a3)
  {
    objc_msgSend(a1, "poiEnrichmentUpdate");
    v45 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v45, "clearSensitiveFields:", a2);

    goto LABEL_37;
  }
LABEL_29:
  if (objc_msgSend(a1, "hasPoiEnrichmentUpdate")
    && (objc_msgSend(a1, "poiEnrichmentUpdate"),
        v41 = (void *)objc_claimAutoreleasedReturnValue(),
        v42 = GEORPPoiEnrichmentUpdateHasSensitiveFields(v41),
        v41,
        v42))
  {
    objc_msgSend(a1, "poiEnrichmentUpdate");
    v43 = (void *)objc_claimAutoreleasedReturnValue();
    v44 = (void *)objc_msgSend(v43, "copy");

    GEORPPoiEnrichmentUpdateClearSensitiveFields((uint64_t)v44, a2, 0);
    objc_msgSend(a1, "setPoiEnrichmentUpdate:", v44);
  }
  else
  {
    objc_msgSend(a1, "poiEnrichmentUpdate");
    v44 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v44, "clearSensitiveFields:", a2);
  }

  if (objc_msgSend(a1, "hasIncidentFeedback"))
  {
    objc_msgSend(a1, "incidentFeedback");
    v46 = (void *)objc_claimAutoreleasedReturnValue();
    v47 = GEORPIncidentFeedbackHasSensitiveFields(v46);

    if (v47)
    {
      objc_msgSend(a1, "incidentFeedback");
      v48 = (void *)objc_claimAutoreleasedReturnValue();
      v49 = (void *)objc_msgSend(v48, "copy");

      GEORPIncidentFeedbackClearSensitiveFields(v49, a2, 0);
      objc_msgSend(a1, "setIncidentFeedback:", v49);

      goto LABEL_38;
    }
  }
LABEL_37:
  objc_msgSend(a1, "incidentFeedback");
  v50 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v50, "clearSensitiveFields:", a2);

  if (!a3)
  {
LABEL_41:
    objc_msgSend(a1, "localityFeedback");
    v55 = (id)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v55, "clearSensitiveFields:", a2);
    goto LABEL_42;
  }
LABEL_38:
  if (!objc_msgSend(a1, "hasLocalityFeedback"))
    goto LABEL_41;
  objc_msgSend(a1, "localityFeedback");
  v51 = (void *)objc_claimAutoreleasedReturnValue();
  v52 = GEORPLocalityFeedbackHasSensitiveFields(v51, a2);

  if (!v52)
    goto LABEL_41;
  objc_msgSend(a1, "localityFeedback");
  v53 = (void *)objc_claimAutoreleasedReturnValue();
  v55 = (id)objc_msgSend(v53, "copy");

  objc_msgSend(v55, "placeRequest");
  v54 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v54, "clearSensitiveFields:", a2);

  objc_msgSend(a1, "setLocalityFeedback:", v55);
LABEL_42:

}

uint64_t GEORPFeedbackDetailsHasSensitiveFields(void *a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;

  if (!a1)
    return 0;
  objc_msgSend(a1, "poiFeedback");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  if ((GEORPPoiFeedbackHasSensitiveFields(v4, a2) & 1) != 0)
  {
    v5 = 1;
  }
  else
  {
    objc_msgSend(a1, "transitPoiFeedback");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    if ((GEORPTransitPoiFeedbackHasSensitiveFields(v6, a2) & 1) != 0)
    {
      v5 = 1;
    }
    else
    {
      objc_msgSend(a1, "searchFeedback");
      v7 = (void *)objc_claimAutoreleasedReturnValue();
      if ((GEORPSearchFeedbackHasSensitiveFields(v7, a2) & 1) != 0)
      {
        v5 = 1;
      }
      else
      {
        objc_msgSend(a1, "merchantLookupFeedback");
        v8 = (void *)objc_claimAutoreleasedReturnValue();
        if ((GEORPMerchantLookupFeedbackHasSensitiveFields(v8) & 1) != 0)
        {
          v5 = 1;
        }
        else
        {
          objc_msgSend(a1, "directionsFeedback");
          v9 = (void *)objc_claimAutoreleasedReturnValue();
          if ((GEORPDirectionsFeedbackHasSensitiveFields(v9, a2) & 1) != 0)
          {
            v5 = 1;
          }
          else
          {
            objc_msgSend(a1, "addressPointFeedback");
            v10 = (void *)objc_claimAutoreleasedReturnValue();
            if ((GEORPAddressFeedbackHasSensitiveFields(v10, a2) & 1) != 0)
            {
              v5 = 1;
            }
            else
            {
              objc_msgSend(a1, "poiEnrichmentUpdate");
              v11 = (void *)objc_claimAutoreleasedReturnValue();
              if ((GEORPPoiEnrichmentUpdateHasSensitiveFields(v11) & 1) != 0)
              {
                v5 = 1;
              }
              else
              {
                objc_msgSend(a1, "incidentFeedback");
                v12 = (void *)objc_claimAutoreleasedReturnValue();
                if ((GEORPIncidentFeedbackHasSensitiveFields(v12) & 1) != 0)
                {
                  v5 = 1;
                }
                else
                {
                  objc_msgSend(a1, "localityFeedback");
                  v13 = (void *)objc_claimAutoreleasedReturnValue();
                  v5 = (uint64_t)GEORPLocalityFeedbackHasSensitiveFields(v13, a2);

                }
              }

            }
          }

        }
      }

    }
  }

  return v5;
}

void *GEORPPoiFeedbackHasSensitiveFields(void *result, uint64_t a2)
{
  void *v3;
  uint64_t HasSensitiveFields;

  if (result)
  {
    objc_msgSend(result, "placeRequest");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    HasSensitiveFields = GEOPDPlaceRequestHasSensitiveFields(v3, a2);

    return (void *)HasSensitiveFields;
  }
  return result;
}

uint64_t GEORPTransitPoiFeedbackHasSensitiveFields(void *a1, uint64_t a2)
{
  void *v4;
  char HasSensitiveFields;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  _BYTE v25[128];
  _BYTE v26[128];
  uint64_t v27;

  v27 = *MEMORY[0x1E0C80C00];
  if (!a1)
    return 0;
  objc_msgSend(a1, "placeRequest");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  HasSensitiveFields = GEOPDPlaceRequestHasSensitiveFields(v4, a2);

  if ((HasSensitiveFields & 1) == 0)
  {
    v23 = 0u;
    v24 = 0u;
    v21 = 0u;
    v22 = 0u;
    objc_msgSend(a1, "directionsRequests");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v21, v26, 16);
    if (v8)
    {
      v9 = v8;
      v10 = *(_QWORD *)v22;
LABEL_7:
      v11 = 0;
      while (1)
      {
        if (*(_QWORD *)v22 != v10)
          objc_enumerationMutation(v7);
        if ((GEODirectionsRequestHasSensitiveFields(*(_QWORD *)(*((_QWORD *)&v21 + 1) + 8 * v11)) & 1) != 0)
          break;
        if (v9 == ++v11)
        {
          v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v21, v26, 16);
          if (v9)
            goto LABEL_7;
          goto LABEL_13;
        }
      }
    }
    else
    {
LABEL_13:

      v19 = 0u;
      v20 = 0u;
      v17 = 0u;
      v18 = 0u;
      objc_msgSend(a1, "directionsResponses", 0);
      v7 = (void *)objc_claimAutoreleasedReturnValue();
      v12 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v17, v25, 16);
      if (!v12)
      {
LABEL_21:
        v6 = 0;
LABEL_23:

        return v6;
      }
      v13 = v12;
      v14 = *(_QWORD *)v18;
LABEL_15:
      v15 = 0;
      while (1)
      {
        if (*(_QWORD *)v18 != v14)
          objc_enumerationMutation(v7);
        if ((GEODirectionsResponseHasSensitiveFields(*(void **)(*((_QWORD *)&v17 + 1) + 8 * v15)) & 1) != 0)
          break;
        if (v13 == ++v15)
        {
          v13 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v17, v25, 16);
          if (v13)
            goto LABEL_15;
          goto LABEL_21;
        }
      }
    }
    v6 = 1;
    goto LABEL_23;
  }
  return 1;
}

void *GEORPSearchFeedbackHasSensitiveFields(void *result, uint64_t a2)
{
  void *v3;
  uint64_t HasSensitiveFields;

  if (result)
  {
    objc_msgSend(result, "context");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    HasSensitiveFields = GEORPSearchFeedbackContextHasSensitiveFields(v3, a2);

    return (void *)HasSensitiveFields;
  }
  return result;
}

void *GEORPMerchantLookupFeedbackHasSensitiveFields(void *result)
{
  void *v1;
  uint64_t HasSensitiveFields;

  if (result)
  {
    objc_msgSend(result, "context");
    v1 = (void *)objc_claimAutoreleasedReturnValue();
    HasSensitiveFields = GEORPMerchantLookupContextHasSensitiveFields(v1);

    return (void *)HasSensitiveFields;
  }
  return result;
}

void *GEORPLocalityFeedbackHasSensitiveFields(void *result, uint64_t a2)
{
  void *v3;
  uint64_t HasSensitiveFields;

  if (result)
  {
    objc_msgSend(result, "placeRequest");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    HasSensitiveFields = GEOPDPlaceRequestHasSensitiveFields(v3, a2);

    return (void *)HasSensitiveFields;
  }
  return result;
}

void GEORPPoiFeedbackClearSensitiveFields(void *a1, uint64_t a2, int a3)
{
  void *v5;
  int HasSensitiveFields;
  void *v7;
  id v8;

  if (a3
    && objc_msgSend(a1, "hasPlaceRequest")
    && (objc_msgSend(a1, "placeRequest"),
        v5 = (void *)objc_claimAutoreleasedReturnValue(),
        HasSensitiveFields = GEOPDPlaceRequestHasSensitiveFields(v5, a2),
        v5,
        HasSensitiveFields))
  {
    objc_msgSend(a1, "placeRequest");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = (id)objc_msgSend(v7, "copy");

    GEOPDPlaceRequestClearSensitiveFields(v8, a2, 0);
    objc_msgSend(a1, "setPlaceRequest:", v8);
  }
  else
  {
    objc_msgSend(a1, "placeRequest");
    v8 = (id)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "clearSensitiveFields:", a2);
  }

}

unint64_t GEORPTransitPoiFeedbackClearSensitiveFields(id *a1, uint64_t a2, int a3)
{
  void *v6;
  int HasSensitiveFields;
  void *v8;
  void *v9;
  unint64_t v10;
  uint64_t v11;
  void *v12;
  id *v13;
  unint64_t result;
  unint64_t i;
  void *v16;
  void *v17;
  void *v18;

  if (a3
    && objc_msgSend(a1, "hasPlaceRequest")
    && (objc_msgSend(a1, "placeRequest"),
        v6 = (void *)objc_claimAutoreleasedReturnValue(),
        HasSensitiveFields = GEOPDPlaceRequestHasSensitiveFields(v6, a2),
        v6,
        HasSensitiveFields))
  {
    objc_msgSend(a1, "placeRequest");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v9 = (void *)objc_msgSend(v8, "copy");

    GEOPDPlaceRequestClearSensitiveFields(v9, a2, 0);
    objc_msgSend(a1, "setPlaceRequest:", v9);
  }
  else
  {
    objc_msgSend(a1, "placeRequest");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "clearSensitiveFields:", a2);
  }

  -[GEORPTransitPoiFeedback _readDirectionsRequests]((uint64_t)a1);
  if (objc_msgSend(a1[4], "count"))
  {
    v10 = 0;
    do
    {
      objc_msgSend(a1[4], "objectAtIndexedSubscript:", v10);
      v11 = objc_claimAutoreleasedReturnValue();
      v12 = (void *)v11;
      if (a3 && GEODirectionsRequestHasSensitiveFields(v11))
      {
        v13 = (id *)objc_msgSend(v12, "copy");
        GEODirectionsRequestClearSensitiveFields(v13, a2, 0);
        objc_msgSend(a1[4], "replaceObjectAtIndex:withObject:", v10, v13);

      }
      else
      {
        objc_msgSend(v12, "clearSensitiveFields:", a2);
      }

      ++v10;
    }
    while (v10 < objc_msgSend(a1[4], "count"));
  }
  -[GEORPTransitPoiFeedback _readDirectionsResponses]((uint64_t)a1);
  result = objc_msgSend(a1[5], "count");
  if (result)
  {
    for (i = 0; i < result; ++i)
    {
      objc_msgSend(a1[5], "objectAtIndexedSubscript:", i);
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      v17 = v16;
      if (a3 && GEODirectionsResponseHasSensitiveFields(v16))
      {
        v18 = (void *)objc_msgSend(v17, "copy");
        GEODirectionsResponseClearSensitiveFields((uint64_t)v18, a2, 0);
        objc_msgSend(a1[5], "replaceObjectAtIndex:withObject:", i, v18);

      }
      else
      {
        objc_msgSend(v17, "clearSensitiveFields:", a2);
      }

      result = objc_msgSend(a1[5], "count");
    }
  }
  return result;
}

void GEORPSearchFeedbackClearSensitiveFields(void *a1, uint64_t a2, int a3)
{
  void *v5;
  int HasSensitiveFields;
  void *v7;
  id *v8;

  if (a3
    && objc_msgSend(a1, "hasContext")
    && (objc_msgSend(a1, "context"),
        v5 = (void *)objc_claimAutoreleasedReturnValue(),
        HasSensitiveFields = GEORPSearchFeedbackContextHasSensitiveFields(v5, a2),
        v5,
        HasSensitiveFields))
  {
    objc_msgSend(a1, "context");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = (id *)objc_msgSend(v7, "copy");

    GEORPSearchFeedbackContextClearSensitiveFields(v8, a2, 0);
    objc_msgSend(a1, "setContext:", v8);
  }
  else
  {
    objc_msgSend(a1, "context");
    v8 = (id *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "clearSensitiveFields:", a2);
  }

}

void GEORPMerchantLookupFeedbackClearSensitiveFields(void *a1, uint64_t a2, int a3)
{
  void *v5;
  int HasSensitiveFields;
  void *v7;
  id v8;

  if (a3
    && objc_msgSend(a1, "hasContext")
    && (objc_msgSend(a1, "context"),
        v5 = (void *)objc_claimAutoreleasedReturnValue(),
        HasSensitiveFields = GEORPMerchantLookupContextHasSensitiveFields(v5),
        v5,
        HasSensitiveFields))
  {
    objc_msgSend(a1, "context");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = (id)objc_msgSend(v7, "copy");

    GEORPMerchantLookupContextClearSensitiveFields(v8, a2, 0);
    objc_msgSend(a1, "setContext:", v8);
  }
  else
  {
    objc_msgSend(a1, "context");
    v8 = (id)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "clearSensitiveFields:", a2);
  }

}

void GEORPLocalityFeedbackClearSensitiveFields(void *a1, uint64_t a2, int a3)
{
  void *v5;
  int HasSensitiveFields;
  void *v7;
  id v8;

  if (a3
    && objc_msgSend(a1, "hasPlaceRequest")
    && (objc_msgSend(a1, "placeRequest"),
        v5 = (void *)objc_claimAutoreleasedReturnValue(),
        HasSensitiveFields = GEOPDPlaceRequestHasSensitiveFields(v5, a2),
        v5,
        HasSensitiveFields))
  {
    objc_msgSend(a1, "placeRequest");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = (id)objc_msgSend(v7, "copy");

    GEOPDPlaceRequestClearSensitiveFields(v8, a2, 0);
    objc_msgSend(a1, "setPlaceRequest:", v8);
  }
  else
  {
    objc_msgSend(a1, "placeRequest");
    v8 = (id)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "clearSensitiveFields:", a2);
  }

}

void sub_188A52114(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A52A34(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A52EBC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackImageIdMapEntryReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  char v15;
  unsigned __int8 v16;
  char v17;
  int *v18;
  int *v19;
  int *v20;
  int *v21;
  char v22;
  unsigned int v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  int v30;
  unint64_t v32;
  BOOL v33;
  int *v34;
  int v35;
  int v36;
  BOOL v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  id v41;
  void *v42;
  int v43;
  char v44;
  char v45;
  char v46;
  int v47;
  int v48;
  void *v49;
  int v51;
  char v52;
  char v53;
  char v54;
  BOOL v55;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1)
      + (*(_BYTE *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v11;
        v12 = v7;
        goto LABEL_8;
      case -3:
        v9 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v11 != 0;
        v15 = v14 & ~(_BYTE)v7;
        v16 = v14 | v7;
        v52 = v15 | v8;
        v17 = v16 | v15 | v8;
        if (((v16 | v9) & 1) != 0)
          v18 = 0;
        else
          v18 = a3;
        v55 = v16;
        v53 = v17;
        v54 = (v18 == 0) | v16;
        v19 = (int *)MEMORY[0x1E0D82BF0];
        v20 = (int *)MEMORY[0x1E0D82BC8];
        v21 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_7:
        v12 = v7;
        v13 = v8;
LABEL_8:
        ++v10;
        v7 = v12;
        v8 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v19) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v20))
      goto LABEL_59;
    v22 = 0;
    v23 = 0;
    v24 = 0;
    while (1)
    {
      v25 = *v19;
      v26 = *(_QWORD *)(v3 + v25);
      v27 = v26 + 1;
      if (v26 == -1 || v27 > *(_QWORD *)(v3 + *v6))
        break;
      v28 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v26);
      *(_QWORD *)(v3 + v25) = v27;
      v24 |= (unint64_t)(v28 & 0x7F) << v22;
      if ((v28 & 0x80) == 0)
        goto LABEL_23;
      v22 += 7;
      if (v23++ >= 9)
      {
        v24 = 0;
        v30 = *(unsigned __int8 *)(v3 + *v20);
        goto LABEL_25;
      }
    }
    *(_BYTE *)(v3 + *v20) = 1;
LABEL_23:
    v30 = *(unsigned __int8 *)(v3 + *v20);
    if (*(_BYTE *)(v3 + *v20))
      v24 = 0;
LABEL_25:
    if (v30 || (v24 & 7) == 4)
    {
LABEL_59:
      v51 = 1;
      goto LABEL_60;
    }
    v32 = v24 >> 3;
    v33 = v55;
    if ((v54 & 1) == 0)
    {
      v34 = v18;
      do
      {
        v36 = *v34++;
        v35 = v36;
        v33 = v36 != 0;
        if (v36)
          v37 = v35 == (_DWORD)v32;
        else
          v37 = 1;
      }
      while (!v37);
    }
    if ((_DWORD)v32 == 2)
      break;
    if ((_DWORD)v32 == 1)
    {
      if (!v33)
        goto LABEL_51;
      if ((*(_BYTE *)(a1 + 52) & 2) != 0)
      {
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_78;
        v45 = *(_BYTE *)(a1 + 52) << 6;
        goto LABEL_57;
      }
      PBReaderReadString();
      v38 = objc_claimAutoreleasedReturnValue();
      v39 = 24;
      goto LABEL_44;
    }
    if ((v52 & 1) == 0 || (*(_BYTE *)(a1 + 52) & 1) != 0)
    {
LABEL_51:
      v44 = PBReaderSkipValueWithTag();
      v20 = (int *)MEMORY[0x1E0D82BC8];
      if ((v44 & 1) == 0)
      {
        v51 = 0;
        goto LABEL_60;
      }
      goto LABEL_58;
    }
    if (!*(_QWORD *)(a1 + 16))
    {
      v41 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
      v42 = *(void **)(a1 + 16);
      *(_QWORD *)(a1 + 16) = v41;

    }
    v43 = PBUnknownFieldAdd();
    v20 = (int *)MEMORY[0x1E0D82BC8];
    if (!v43)
    {
      v51 = 0;
      goto LABEL_61;
    }
LABEL_58:
    if (!(v53 & 1 | (v10 != 0)))
      goto LABEL_59;
  }
  if (!v33)
    goto LABEL_51;
  if ((*(_BYTE *)(a1 + 52) & 4) == 0)
  {
    PBReaderReadString();
    v38 = objc_claimAutoreleasedReturnValue();
    v39 = 32;
LABEL_44:
    v40 = *(void **)(a1 + v39);
    *(_QWORD *)(a1 + v39) = v38;

    v20 = (int *)MEMORY[0x1E0D82BC8];
    --v10;
    goto LABEL_58;
  }
  if ((PBReaderSkipValueWithTag() & 1) != 0)
  {
    v45 = 32 * *(_BYTE *)(a1 + 52);
LABEL_57:
    v10 += v45 >> 7;
    v20 = (int *)MEMORY[0x1E0D82BC8];
    goto LABEL_58;
  }
LABEL_78:
  v51 = 0;
  v20 = (int *)MEMORY[0x1E0D82BC8];
LABEL_60:
  if ((v52 & 1) == 0)
    goto LABEL_62;
LABEL_61:
  *(_BYTE *)(a1 + 52) |= 1u;
LABEL_62:
  if (v55 || (v51 & 1) == 0)
  {
    *(_BYTE *)(a1 + 52) |= 2u;
    *(_BYTE *)(a1 + 52) |= 4u;
    goto LABEL_72;
  }
  if (v18)
  {
    while (1)
    {
      v48 = *v18++;
      v47 = v48;
      if (v48 == 1)
        break;
      if (v47 == 2)
      {
        v46 = 4;
LABEL_68:
        *(_BYTE *)(a1 + 52) |= v46;
      }
      else if (!v47)
      {
        goto LABEL_72;
      }
    }
    v46 = 2;
    goto LABEL_68;
  }
LABEL_72:
  if (v51)
    v3 = *(_BYTE *)(v3 + *v20) == 0;
  else
    v3 = 0;
  if (v55)
  {
    v49 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_188A534C0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A53A18(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackImageIdMapEntryReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEORPFeedbackImageIdMapEntryReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEORPFeedbackImageIdMapEntryReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEORPFeedbackImageIdMapEntryReadAllFrom_initialTag;
  Specified = GEORPFeedbackImageIdMapEntryReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_188A53BA4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackImageIdMapEntryReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORPFeedbackImageIdMapEntryReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188A53C04(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackImageIdMapEntryIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  _BOOL8 v17;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_27;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        goto LABEL_27;
      if ((v8 >> 3) == 2)
        break;
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2)
          goto LABEL_29;
        goto LABEL_23;
      }
      if (!PBReaderSkipValueWithTag())
      {
LABEL_29:
        v17 = 0;
        goto LABEL_28;
      }
LABEL_26:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_27;
    }
    if (v15 != 2)
      goto LABEL_29;
LABEL_23:
    if ((PBReaderSkipValueWithTag() & 1) == 0)
      goto LABEL_29;
    goto LABEL_26;
  }
LABEL_27:
  v17 = a1[*v4] == 0;
LABEL_28:
  PBReaderRecallMark();
  return v17;
}

void sub_188A53F50(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackImageIdMapEntryIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v2 = (*(_BYTE *)(a1 + 52) & 0xE) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return v2;
}

void sub_188A541E8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A5440C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A54668(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackImageUploadInfoReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  char v15;
  unsigned __int8 v16;
  int *v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  int v29;
  unint64_t v31;
  BOOL v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  void *v40;
  int v41;
  void *v42;
  char v43;
  char v44;
  int v45;
  char v46;
  void *v47;
  int v49;
  char v50;
  char v51;
  char v52;
  BOOL v53;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 60);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 56));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = (vaddv_s16((int16x4_t)(*(_QWORD *)&vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int8 *)(a1 + 68)), (uint16x4_t)0xFFFDFFFCFFFEFFFFLL) & 0xFF01FF01FF01FF01))+ (*(_BYTE *)(a1 + 68) & 1));
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v9])
    {
      case -4:
        ++v11;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_9;
      case 0:
        v14 = v11 > 2;
        v15 = v14 & ~(_BYTE)v10 | v7;
        v16 = v14 | v10;
        v50 = v15;
        v51 = v16 | v15;
        if (((v16 | v8) & 1) != 0)
          v17 = 0;
        else
          v17 = a3;
        v52 = (v17 == 0) | v16;
        v53 = v16;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_7:
        v12 = v7;
LABEL_8:
        v13 = v10;
LABEL_9:
        ++v9;
        v7 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v19))
      goto LABEL_69;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0)
        goto LABEL_24;
      v21 += 7;
      if (v22++ >= 9)
      {
        v23 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_26;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_24:
    v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_26:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_69:
      v49 = 1;
      goto LABEL_70;
    }
    v31 = v23 >> 3;
    v32 = v53;
    if ((v52 & 1) == 0)
    {
      v33 = v17;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if (!v32)
          goto LABEL_57;
        if ((*(_BYTE *)(a1 + 68) & 4) == 0)
        {
          PBReaderReadString();
          v37 = objc_claimAutoreleasedReturnValue();
          v38 = 32;
          goto LABEL_56;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_86;
        v44 = 32 * *(_BYTE *)(a1 + 68);
        goto LABEL_67;
      case 2:
        if (!v32)
          goto LABEL_57;
        if ((*(_BYTE *)(a1 + 68) & 2) == 0)
        {
          PBReaderReadString();
          v37 = objc_claimAutoreleasedReturnValue();
          v38 = 24;
          goto LABEL_56;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_86;
        v44 = *(_BYTE *)(a1 + 68) << 6;
        goto LABEL_67;
      case 3:
        if (!v32)
          goto LABEL_57;
        if ((*(_BYTE *)(a1 + 68) & 0x10) == 0)
        {
          PBReaderReadString();
          v37 = objc_claimAutoreleasedReturnValue();
          v38 = 48;
          goto LABEL_56;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_86;
        v44 = 8 * *(_BYTE *)(a1 + 68);
        goto LABEL_67;
      case 4:
        if (!v32)
          goto LABEL_57;
        if ((*(_BYTE *)(a1 + 68) & 8) == 0)
        {
          PBReaderReadString();
          v37 = objc_claimAutoreleasedReturnValue();
          v38 = 40;
LABEL_56:
          v42 = *(void **)(a1 + v38);
          *(_QWORD *)(a1 + v38) = v37;

          v19 = (int *)MEMORY[0x1E0D82BC8];
          --v9;
LABEL_68:
          if (!(v51 & 1 | (v9 != 0)))
            goto LABEL_69;
          continue;
        }
        if ((PBReaderSkipValueWithTag() & 1) != 0)
        {
          v44 = 16 * *(_BYTE *)(a1 + 68);
LABEL_67:
          v9 += v44 >> 7;
          v19 = (int *)MEMORY[0x1E0D82BC8];
          goto LABEL_68;
        }
LABEL_86:
        v49 = 0;
        v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_70:
        if ((v50 & 1) != 0)
LABEL_71:
          *(_BYTE *)(a1 + 68) |= 1u;
        if (v53 || (v49 & 1) == 0)
        {
          *(_BYTE *)(a1 + 68) |= 4u;
          *(_BYTE *)(a1 + 68) |= 2u;
          *(_BYTE *)(a1 + 68) |= 0x10u;
          *(_BYTE *)(a1 + 68) |= 8u;
        }
        else if (v17)
        {
          while (1)
          {
            v45 = *v17++;
            v46 = 4;
            switch(v45)
            {
              case 0:
                goto LABEL_80;
              case 1:
                goto LABEL_79;
              case 2:
                v46 = 2;
                goto LABEL_79;
              case 3:
                v46 = 16;
                goto LABEL_79;
              case 4:
                v46 = 8;
LABEL_79:
                *(_BYTE *)(a1 + 68) |= v46;
                break;
              default:
                continue;
            }
          }
        }
LABEL_80:
        if (v49)
          v3 = *(_BYTE *)(v3 + *v19) == 0;
        else
          v3 = 0;
        if (v53)
        {
          v47 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      default:
        if ((v50 & 1) == 0 || (*(_BYTE *)(a1 + 68) & 1) != 0)
        {
LABEL_57:
          v43 = PBReaderSkipValueWithTag();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if ((v43 & 1) == 0)
          {
            v49 = 0;
            goto LABEL_70;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v39 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v40 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v39;

          }
          v41 = PBUnknownFieldAdd();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if (!v41)
          {
            v49 = 0;
            goto LABEL_71;
          }
        }
        goto LABEL_68;
    }
  }
}

void sub_188A54D74(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A54EB4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A54FF4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A55698(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackImageUploadInfoReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 60))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEORPFeedbackImageUploadInfoReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 60) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEORPFeedbackImageUploadInfoReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEORPFeedbackImageUploadInfoReadAllFrom_initialTag;
  Specified = GEORPFeedbackImageUploadInfoReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_188A55824(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackImageUploadInfoReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORPFeedbackImageUploadInfoReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188A55884(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackImageUploadInfoIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  _BOOL8 v17;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (!a1[*v4])
    {
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2)
            goto LABEL_32;
          goto LABEL_28;
        case 2u:
          if (v15 == 2)
            goto LABEL_28;
          goto LABEL_32;
        case 3u:
          if (v15 == 2)
            goto LABEL_28;
          goto LABEL_32;
        case 4u:
          if (v15 != 2)
            goto LABEL_32;
LABEL_28:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_32:
            v17 = 0;
            goto LABEL_31;
          }
LABEL_29:
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_30;
          break;
        default:
          if (!PBReaderSkipValueWithTag())
            goto LABEL_32;
          goto LABEL_29;
      }
    }
  }
LABEL_30:
  v17 = a1[*v4] == 0;
LABEL_31:
  PBReaderRecallMark();
  return v17;
}

void sub_188A55C54(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackImageUploadInfoIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  v2 = (*(_BYTE *)(a1 + 68) & 0x3E) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return v2;
}

void sub_188A55F5C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A5621C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackImageUploadParametersReadAllFrom(uint64_t a1, void *a2, int a3)
{
  char *v5;
  int *v6;
  int *v7;
  int *v8;
  int *v9;
  char v10;
  unsigned int v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  BOOL v17;
  int v18;
  GEORPPhotoMetadata *v20;
  char v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  id v28;
  void *v29;
  _BOOL8 v30;

  v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    v6 = (int *)MEMORY[0x1E0D82BF0];
    v7 = (int *)MEMORY[0x1E0D82BD8];
    v8 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v5[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v5[*MEMORY[0x1E0D82BD8]])
    {
      v9 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v5[*v8])
          break;
        v10 = 0;
        v11 = 0;
        v12 = 0;
        while (1)
        {
          v13 = *v6;
          v14 = *(_QWORD *)&v5[v13];
          v15 = v14 + 1;
          if (v14 == -1 || v15 > *(_QWORD *)&v5[*v7])
            break;
          v16 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v14);
          *(_QWORD *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0)
            goto LABEL_13;
          v10 += 7;
          v17 = v11++ >= 9;
          if (v17)
          {
            v12 = 0;
            v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        v18 = v5[*v8];
        if (v5[*v8])
          v12 = 0;
LABEL_15:
        if (v18 || (v12 & 7) == 4)
          break;
        if ((v12 >> 3) == 2)
        {
          v21 = 0;
          v22 = 0;
          v23 = 0;
          *(_BYTE *)(a1 + 28) |= 1u;
          while (1)
          {
            v24 = *v6;
            v25 = *(_QWORD *)&v5[v24];
            v26 = v25 + 1;
            if (v25 == -1 || v26 > *(_QWORD *)&v5[*v7])
              break;
            v27 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v25);
            *(_QWORD *)&v5[v24] = v26;
            v23 |= (unint64_t)(v27 & 0x7F) << v21;
            if ((v27 & 0x80) == 0)
              goto LABEL_36;
            v21 += 7;
            v17 = v22++ >= 9;
            if (v17)
            {
              v23 = 0;
              goto LABEL_38;
            }
          }
          v5[*v8] = 1;
LABEL_36:
          if (v5[*v8])
            v23 = 0;
LABEL_38:
          *(_BYTE *)(a1 + 24) = v23 != 0;
        }
        else if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_42;
          v20 = objc_alloc_init(GEORPPhotoMetadata);
          if (!GEORPPhotoMetadataReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_42;
          }
          PBReaderRecallMark();
          objc_msgSend((id)a1, "addImage:", v20, 0, 0);

        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v28 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v29 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v28;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_42;
        }
      }
      while (*(_QWORD *)&v5[*v6] < *(_QWORD *)&v5[*v7]);
    }
    v30 = v5[*v8] == 0;
  }
  else
  {
LABEL_42:
    v30 = 0;
  }
  objc_sync_exit(v5);

  return v30;
}

void sub_188A56D94(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackImageUploadParametersReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORPFeedbackImageUploadParametersReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188A56DF4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackImageUploadParametersIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  _BOOL8 v23;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      if ((v8 >> 3) == 2)
      {
        if ((v8 & 7) != 0)
          goto LABEL_38;
        v17 = 0;
        while (1)
        {
          v18 = *v2;
          v19 = *(_QWORD *)&a1[v18];
          v20 = v19 + 1;
          if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
            break;
          v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
          *(_QWORD *)&a1[v18] = v20;
          if (v21 < 0 && v17++ <= 8)
            continue;
          goto LABEL_35;
        }
        a1[*v4] = 1;
      }
      else if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEORPPhotoMetadataIsValid(a1))
        {
LABEL_38:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_38;
      }
LABEL_35:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v23 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v23;
}

unint64_t GEORPFeedbackImageUploadParametersClearSensitiveFields(uint64_t a1, uint64_t a2, int a3)
{
  unint64_t result;
  unint64_t i;
  void *v8;
  void *v9;
  void *v10;
  void *v11;

  result = objc_msgSend(*(id *)(a1 + 16), "count");
  if (result)
  {
    for (i = 0; i < result; ++i)
    {
      objc_msgSend(*(id *)(a1 + 16), "objectAtIndexedSubscript:", i);
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      v9 = v8;
      if (a3 && GEORPPhotoMetadataHasSensitiveFields(v8))
      {
        v10 = (void *)objc_msgSend(v9, "copy");
        objc_msgSend(v10, "geotag");
        v11 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v11, "clearSensitiveFields:", a2);

        objc_msgSend(*(id *)(a1 + 16), "replaceObjectAtIndex:withObject:", i, v10);
      }
      else
      {
        objc_msgSend(v9, "clearSensitiveFields:", a2);
      }

      result = objc_msgSend(*(id *)(a1 + 16), "count");
    }
  }
  return result;
}

uint64_t GEORPFeedbackImageUploadParametersHasSensitiveFields(void *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _BYTE v12[128];
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  if (!a1)
    return 0;
  v10 = 0u;
  v11 = 0u;
  v8 = 0u;
  v9 = 0u;
  objc_msgSend(a1, "images", 0);
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  v2 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
  if (v2)
  {
    v3 = v2;
    v4 = *(_QWORD *)v9;
    while (2)
    {
      v5 = 0;
      do
      {
        if (*(_QWORD *)v9 != v4)
          objc_enumerationMutation(v1);
        if ((GEORPPhotoMetadataHasSensitiveFields(*(void **)(*((_QWORD *)&v8 + 1) + 8 * v5)) & 1) != 0)
        {
          v6 = 1;
          goto LABEL_12;
        }
        ++v5;
      }
      while (v3 != v5);
      v3 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
      if (v3)
        continue;
      break;
    }
  }
  v6 = 0;
LABEL_12:

  return v6;
}

BOOL GEORPFeedbackImageUploadResultReadAllFrom(_QWORD *a1, void *a2, int a3)
{
  char *v5;
  int *v6;
  int *v7;
  int *v8;
  int *v9;
  char v10;
  unsigned int v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  int v18;
  GEORPFeedbackImageUploadInfo *v20;
  id v21;
  void *v22;
  _BOOL8 v23;

  v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    v6 = (int *)MEMORY[0x1E0D82BF0];
    v7 = (int *)MEMORY[0x1E0D82BD8];
    v8 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v5[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v5[*MEMORY[0x1E0D82BD8]])
    {
      v9 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v5[*v8])
          break;
        v10 = 0;
        v11 = 0;
        v12 = 0;
        while (1)
        {
          v13 = *v6;
          v14 = *(_QWORD *)&v5[v13];
          v15 = v14 + 1;
          if (v14 == -1 || v15 > *(_QWORD *)&v5[*v7])
            break;
          v16 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v14);
          *(_QWORD *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0)
            goto LABEL_13;
          v10 += 7;
          if (v11++ >= 9)
          {
            v12 = 0;
            v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        v18 = v5[*v8];
        if (v5[*v8])
          v12 = 0;
LABEL_15:
        if (v18 || (v12 & 7) == 4)
          break;
        if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_29;
          v20 = objc_alloc_init(GEORPFeedbackImageUploadInfo);
          if (!GEORPFeedbackImageUploadInfoReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          objc_msgSend(a1, "addImageUploadInfo:", v20, 0, 0);

        }
        else
        {
          if (!a1[1])
          {
            v21 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v22 = (void *)a1[1];
            a1[1] = v21;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_29;
        }
      }
      while (*(_QWORD *)&v5[*v6] < *(_QWORD *)&v5[*v7]);
    }
    v23 = v5[*v8] == 0;
  }
  else
  {
LABEL_29:
    v23 = 0;
  }
  objc_sync_exit(v5);

  return v23;
}

void sub_188A582A0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackImageUploadResultReadFrom(_QWORD *a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORPFeedbackImageUploadResultReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188A58300(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackImageUploadResultIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  _BOOL8 v17;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEORPFeedbackImageUploadInfoIsValid(a1))
        {
LABEL_27:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_27;
      }
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

BOOL GEORPFeedbackLogEventDetailsReadAllFrom(uint64_t a1, void *a2, int a3)
{
  char *v5;
  int *v6;
  int *v7;
  int *v8;
  int *v9;
  char v10;
  unsigned int v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  int v18;
  GEORPRapNotificationLogEvent *v20;
  void *v21;
  id v22;
  void *v23;
  _BOOL8 v24;

  v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    v6 = (int *)MEMORY[0x1E0D82BF0];
    v7 = (int *)MEMORY[0x1E0D82BD8];
    v8 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v5[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v5[*MEMORY[0x1E0D82BD8]])
    {
      v9 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v5[*v8])
          break;
        v10 = 0;
        v11 = 0;
        v12 = 0;
        while (1)
        {
          v13 = *v6;
          v14 = *(_QWORD *)&v5[v13];
          v15 = v14 + 1;
          if (v14 == -1 || v15 > *(_QWORD *)&v5[*v7])
            break;
          v16 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v14);
          *(_QWORD *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0)
            goto LABEL_13;
          v10 += 7;
          if (v11++ >= 9)
          {
            v12 = 0;
            v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        v18 = v5[*v8];
        if (v5[*v8])
          v12 = 0;
LABEL_15:
        if (v18 || (v12 & 7) == 4)
          break;
        if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_29;
          v20 = objc_alloc_init(GEORPRapNotificationLogEvent);
          if (!GEORPRapNotificationLogEventReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          v21 = *(void **)(a1 + 16);
          *(_QWORD *)(a1 + 16) = v20;

        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v22 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v23 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v22;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_29;
        }
      }
      while (*(_QWORD *)&v5[*v6] < *(_QWORD *)&v5[*v7]);
    }
    v24 = v5[*v8] == 0;
  }
  else
  {
LABEL_29:
    v24 = 0;
  }
  objc_sync_exit(v5);

  return v24;
}

void sub_188A59168(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackLogEventDetailsReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORPFeedbackLogEventDetailsReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188A591C8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackLogEventDetailsIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  _BOOL8 v17;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEORPRapNotificationLogEventIsValid(a1))
        {
LABEL_27:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_27;
      }
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

BOOL GEORPRapNotificationLogEventIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  _BOOL8 v28;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2)
            goto LABEL_44;
          goto LABEL_22;
        case 2u:
          if (v15 == 2)
            goto LABEL_22;
          goto LABEL_44;
        case 3u:
          if ((v8 & 7) != 0)
            goto LABEL_44;
          v17 = 0;
          while (1)
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
              goto LABEL_40;
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if (v21 < 0)
            {
              v22 = v17++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_41;
          }
        case 4u:
          if ((v8 & 7) != 0)
            goto LABEL_44;
          v23 = 0;
          break;
        default:
LABEL_22:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_44:
          v28 = 0;
          goto LABEL_43;
      }
      while (1)
      {
        v24 = *v2;
        v25 = *(_QWORD *)&a1[v24];
        v26 = v25 + 1;
        if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
          break;
        v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
        *(_QWORD *)&a1[v24] = v26;
        if (v27 < 0)
        {
          v22 = v23++ > 8;
          if (!v22)
            continue;
        }
        goto LABEL_41;
      }
LABEL_40:
      a1[*v4] = 1;
LABEL_41:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v28 = a1[*v4] == 0;
LABEL_43:
  PBReaderRecallMark();
  return v28;
}

void sub_188A59AB8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackLogEventParametersReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  int *v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  int *v18;
  int *v19;
  int *v20;
  int *v21;
  char v22;
  unsigned int v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  BOOL v29;
  int v30;
  unint64_t v32;
  BOOL v33;
  int *v34;
  int v35;
  int v36;
  BOOL v37;
  uint64_t v38;
  void *v39;
  id v40;
  void *v41;
  int v42;
  GEORPTimestamp *v43;
  uint64_t v44;
  char v45;
  unsigned int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  char v51;
  char v52;
  char v53;
  int v54;
  char v55;
  void *v56;
  int v58;
  int *v59;
  char v60;
  char v61;
  char v62;
  char v63;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 52);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 48));
  v7 = v6;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = vaddv_s16((int16x4_t)(*(_QWORD *)&vshl_u16((uint16x4_t)(*(_QWORD *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 64)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFFFFFCFFFEFFFDLL) & 0xFF01FF01FF01FF01));
  while (2)
  {
    v14 = 1;
    v15 = 1;
    v16 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v13;
        goto LABEL_8;
      case -3:
        v9 = 1;
        goto LABEL_7;
      case -2:
        v15 = v11;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v17 = v13 > 1;
        v60 = v17 & ~(_BYTE)v12 | v10;
        v61 = v17 | v12 | v60;
        if ((((v17 | v12) | v9) & 1) != 0)
          v18 = 0;
        else
          v18 = a3;
        v62 = (v18 == 0) | v17 | v12;
        v63 = v17 | v12;
        v19 = (int *)MEMORY[0x1E0D82BF0];
        v20 = (int *)MEMORY[0x1E0D82BC8];
        v21 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v13;
LABEL_7:
        v14 = v10;
LABEL_8:
        v15 = v11;
        v16 = v12;
LABEL_10:
        ++v8;
        v10 = v14;
        v11 = v15;
        v12 = v16;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v19) >= *(_QWORD *)(v3 + *v7) || *(_BYTE *)(v3 + *v20))
      goto LABEL_83;
    v22 = 0;
    v23 = 0;
    v24 = 0;
    while (1)
    {
      v25 = *v19;
      v26 = *(_QWORD *)(v3 + v25);
      v27 = v26 + 1;
      if (v26 == -1 || v27 > *(_QWORD *)(v3 + *v7))
        break;
      v28 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v26);
      *(_QWORD *)(v3 + v25) = v27;
      v24 |= (unint64_t)(v28 & 0x7F) << v22;
      if ((v28 & 0x80) == 0)
        goto LABEL_25;
      v22 += 7;
      v29 = v23++ >= 9;
      if (v29)
      {
        v24 = 0;
        v30 = *(unsigned __int8 *)(v3 + *v20);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v20) = 1;
LABEL_25:
    v30 = *(unsigned __int8 *)(v3 + *v20);
    if (*(_BYTE *)(v3 + *v20))
      v24 = 0;
LABEL_27:
    if (v30 || (v24 & 7) == 4)
    {
LABEL_83:
      v58 = 1;
      goto LABEL_84;
    }
    v32 = v24 >> 3;
    v33 = v63;
    if ((v62 & 1) == 0)
    {
      v34 = v18;
      do
      {
        v36 = *v34++;
        v35 = v36;
        v33 = v36 != 0;
        if (v36)
          v37 = v35 == (_DWORD)v32;
        else
          v37 = 1;
      }
      while (!v37);
    }
    switch((int)v32)
    {
      case 1:
        if (!v33)
          goto LABEL_68;
        if ((*(_BYTE *)(a1 + 64) & 4) == 0)
        {
          PBReaderReadString();
          v38 = objc_claimAutoreleasedReturnValue();
          v39 = *(void **)(a1 + 24);
          *(_QWORD *)(a1 + 24) = v38;
          goto LABEL_67;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_100;
        v53 = 32 * *(_BYTE *)(a1 + 64);
        goto LABEL_80;
      case 2:
        if (!v33)
          goto LABEL_68;
        if ((*(_BYTE *)(a1 + 64) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_100;
          v53 = 16 * *(_BYTE *)(a1 + 64);
          goto LABEL_80;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_100;
        v43 = objc_alloc_init(GEORPTimestamp);
        if (!GEORPTimestampReadAllFrom((uint64_t)v43, (void *)v3))
          goto LABEL_99;
        PBReaderRecallMark();
        v44 = 32;
        goto LABEL_66;
      case 3:
        if ((v9 & 1) == 0)
          goto LABEL_68;
        v45 = 0;
        v46 = 0;
        v47 = 0;
        *(_BYTE *)(a1 + 64) |= 1u;
        while (2)
        {
          v48 = *v19;
          v49 = *(_QWORD *)(v3 + v48);
          v50 = v49 + 1;
          if (v49 == -1 || v50 > *(_QWORD *)(v3 + *v7))
          {
            *(_BYTE *)(v3 + *v20) = 1;
          }
          else
          {
            v51 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v49);
            *(_QWORD *)(v3 + v48) = v50;
            v47 |= (unint64_t)(v51 & 0x7F) << v45;
            if (v51 < 0)
            {
              v45 += 7;
              v29 = v46++ >= 9;
              if (v29)
              {
                LODWORD(v47) = 0;
                goto LABEL_73;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v20))
          LODWORD(v47) = 0;
LABEL_73:
        *(_DWORD *)(a1 + 60) = v47;
        goto LABEL_82;
      case 4:
        if (!v33)
          goto LABEL_68;
        if ((*(_BYTE *)(a1 + 64) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_100;
          v53 = 8 * *(_BYTE *)(a1 + 64);
LABEL_80:
          v8 += v53 >> 7;
LABEL_81:
          v20 = (int *)MEMORY[0x1E0D82BC8];
          v7 = (int *)MEMORY[0x1E0D82BD8];
LABEL_82:
          if (!(v61 & 1 | (v8 != 0)))
            goto LABEL_83;
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_100;
        v43 = objc_alloc_init(GEORPFeedbackLogEventDetails);
        if (GEORPFeedbackLogEventDetailsReadAllFrom((uint64_t)v43, (void *)v3, v11 & 1))
        {
          PBReaderRecallMark();
          v44 = 40;
LABEL_66:
          v39 = *(void **)(a1 + v44);
          *(_QWORD *)(a1 + v44) = v43;
LABEL_67:

          --v8;
          goto LABEL_81;
        }
LABEL_99:

LABEL_100:
        v58 = 0;
        v20 = (int *)MEMORY[0x1E0D82BC8];
LABEL_84:
        v59 = &OBJC_IVAR___GEOTransitVehicleInfo__pickupDropoffType;
        if ((v60 & 1) != 0)
LABEL_85:
          *(_BYTE *)(a1 + v59[404]) |= 2u;
        if (v63 & 1 | ((v58 & 1) == 0))
        {
          *(_BYTE *)(a1 + v59[404]) |= 4u;
          *(_BYTE *)(a1 + v59[404]) |= 8u;
          *(_BYTE *)(a1 + v59[404]) |= 0x10u;
        }
        else if (v18)
        {
          while (1)
          {
            v54 = *v18++;
            v55 = 4;
            switch(v54)
            {
              case 0:
                goto LABEL_93;
              case 1:
                goto LABEL_92;
              case 2:
                v55 = 8;
                goto LABEL_92;
              case 4:
                v55 = 16;
LABEL_92:
                *(_BYTE *)(a1 + v59[404]) |= v55;
                break;
              default:
                continue;
            }
          }
        }
LABEL_93:
        if (v58)
          v3 = *(_BYTE *)(v3 + *v20) == 0;
        else
          v3 = 0;
        if ((v63 & 1) != 0)
        {
          v56 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      default:
        if ((v60 & 1) == 0 || (*(_BYTE *)(a1 + 64) & 2) != 0)
        {
LABEL_68:
          v52 = PBReaderSkipValueWithTag();
          v7 = (int *)MEMORY[0x1E0D82BD8];
          v20 = (int *)MEMORY[0x1E0D82BC8];
          if ((v52 & 1) == 0)
          {
            v58 = 0;
            goto LABEL_84;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v40 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v41 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v40;

          }
          v42 = PBUnknownFieldAdd();
          v20 = (int *)MEMORY[0x1E0D82BC8];
          v7 = (int *)MEMORY[0x1E0D82BD8];
          if (!v42)
          {
            v58 = 0;
            v59 = &OBJC_IVAR___GEOTransitVehicleInfo__pickupDropoffType;
            goto LABEL_85;
          }
        }
        goto LABEL_82;
    }
  }
}

void sub_188A5A2C8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A5A57C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A5AD18(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackLogEventParametersReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 52))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEORPFeedbackLogEventParametersReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 52) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEORPFeedbackLogEventParametersReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEORPFeedbackLogEventParametersReadAllFrom_initialTag;
  Specified = GEORPFeedbackLogEventParametersReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    objc_msgSend(*(id *)(a1 + 32), "readAll:", 1);
    objc_msgSend(*(id *)(a1 + 40), "readAll:", 1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_188A5AED0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackLogEventParametersReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORPFeedbackLogEventParametersReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188A5AF30(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackLogEventParametersIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  _BOOL8 v23;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2)
            goto LABEL_41;
          goto LABEL_20;
        case 2u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPTimestampIsValid(a1))
            goto LABEL_41;
          goto LABEL_37;
        case 3u:
          if ((v8 & 7) != 0)
            goto LABEL_41;
          v17 = 0;
          break;
        case 4u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPFeedbackLogEventDetailsIsValid(a1))
            goto LABEL_41;
LABEL_37:
          PBReaderRecallMark();
          continue;
        default:
LABEL_20:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_41:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v18 = *v2;
        v19 = *(_QWORD *)&a1[v18];
        v20 = v19 + 1;
        if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
          break;
        v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
        *(_QWORD *)&a1[v18] = v20;
        if (v21 < 0 && v17++ <= 8)
          continue;
        goto LABEL_39;
      }
      a1[*v4] = 1;
LABEL_39:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v23 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v23;
}

void sub_188A5B390(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackLogEventParametersIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v2 = (*(_BYTE *)(a1 + 64) & 0x3C) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return v2;
}

void sub_188A5B6CC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A5B9FC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackLogEventResultReadAllFrom(uint64_t a1, void *a2)
{
  unsigned __int8 *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  int v8;
  char v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  char v17;
  BOOL v18;
  id v19;
  void *v20;
  _BOOL8 v21;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    v7 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      v8 = v3[*v6];
      if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
        break;
      if (v3[*v6])
      {
        v8 = 1;
        break;
      }
      v9 = 0;
      v10 = 0;
      v11 = 0;
      while (1)
      {
        v12 = *v4;
        v13 = *(_QWORD *)&v3[v12];
        v14 = v13 + 1;
        if (v13 == -1 || v14 > *(_QWORD *)&v3[*v5])
          break;
        v15 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v13);
        *(_QWORD *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0)
          goto LABEL_13;
        v9 += 7;
        if (v10++ >= 9)
        {
          v17 = 0;
          v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      v8 = v3[*v6];
      if (v3[*v6])
        v17 = 0;
      else
        v17 = v11;
LABEL_16:
      if (v8)
        v18 = 1;
      else
        v18 = (v17 & 7) == 4;
      if (v18)
        break;
      if (!*(_QWORD *)(a1 + 8))
      {
        v19 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v20 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = v19;

      }
      if ((PBUnknownFieldAdd() & 1) == 0)
        goto LABEL_23;
    }
    v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_188A5BF40(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackLogEventResultReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORPFeedbackLogEventResultReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188A5BFA0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackLogEventResultIsValid(unsigned __int8 *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  int v6;
  char v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v15;
  _BOOL8 v16;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  v5 = (int *)MEMORY[0x1E0D82BB8];
  while (1)
  {
    v6 = a1[*v4];
    if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
      break;
    if (a1[*v4])
    {
      v6 = 1;
      break;
    }
    v7 = 0;
    v8 = 0;
    v9 = 0;
    while (1)
    {
      v10 = *v2;
      v11 = *(_QWORD *)&a1[v10];
      v12 = v11 + 1;
      if (v11 == -1 || v12 > *(_QWORD *)&a1[*v3])
        break;
      v13 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v11);
      *(_QWORD *)&a1[v10] = v12;
      v9 |= (unint64_t)(v13 & 0x7F) << v7;
      if ((v13 & 0x80) == 0)
        goto LABEL_12;
      v7 += 7;
      if (v8++ >= 9)
      {
        LOBYTE(v9) = 0;
        v6 = a1[*v4];
        goto LABEL_14;
      }
    }
    a1[*v4] = 1;
LABEL_12:
    v6 = a1[*v4];
    if (a1[*v4])
      LOBYTE(v9) = 0;
LABEL_14:
    if (v6)
      v15 = 1;
    else
      v15 = (v9 & 7) == 4;
    if (v15)
      break;
    if ((PBReaderSkipValueWithTag() & 1) == 0)
    {
      v16 = 0;
      goto LABEL_22;
    }
  }
  v16 = v6 == 0;
LABEL_22:
  PBReaderRecallMark();
  return v16;
}

void sub_188A5C650(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackRequestReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  char v18;
  char v19;
  int *v20;
  int *v21;
  char v22;
  int *v23;
  int *v24;
  char v25;
  unsigned int v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  BOOL v32;
  int v33;
  int v34;
  int *v36;
  unint64_t v37;
  BOOL v38;
  int *v39;
  int v40;
  int v41;
  BOOL v42;
  int v43;
  char v44;
  unsigned int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  char v50;
  GEORPFeedbackRequestParameters *v51;
  void *v52;
  uint64_t v53;
  void *v54;
  void *v55;
  char v56;
  unsigned int v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  char v62;
  id v63;
  void *v64;
  int v65;
  char v66;
  __int16 v67;
  char v68;
  unsigned int v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  char v74;
  int v75;
  int v76;
  __int16 v77;
  void *v78;
  char v80;
  int v81;
  char v82;
  char v83;
  char v84;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 120));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 116);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 112));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = *(unsigned __int16 *)(a1 + 128);
  v13 = ((v12 >> 7) & 1)
      + ((v12 >> 2) & 1)
      + ((v12 >> 1) & 1)
      + (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(v12), (uint16x4_t)0xFFFAFFFCFFF7FFF6), (int8x8_t)0x1000100010001))+ ((v12 >> 5) & 1)+ ((v12 >> 8) & 1)+ ((v12 >> 3) & 1));
  while (2)
  {
    v14 = 1;
    v15 = 1;
    v16 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v13;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v15 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v17 = v13 > 6;
        v18 = v17 & ~(_BYTE)v11 | v9;
        v19 = v17 | v11;
        v20 = (int *)MEMORY[0x1E0D82BF0];
        if ((((v17 | v11) | v8) & 1) != 0)
          v21 = 0;
        else
          v21 = a3;
        v81 = 1;
        v22 = v17 & ~(_BYTE)v11 | v9;
        if (*(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(v3 + *v6))
          goto LABEL_156;
        v80 = v18;
        v83 = v19 | v18;
        v23 = (int *)MEMORY[0x1E0D82BC8];
        v84 = (v21 == 0) | v19;
        v24 = (int *)MEMORY[0x1E0D82BB8];
        v82 = v19;
        break;
      default:
        ++v13;
LABEL_7:
        v14 = v9;
LABEL_8:
        v15 = v10;
        v16 = v11;
LABEL_10:
        ++v7;
        v9 = v14;
        v10 = v15;
        v11 = v16;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_BYTE *)(v3 + *v23))
      goto LABEL_154;
    v25 = 0;
    v26 = 0;
    v27 = 0;
    while (1)
    {
      v28 = *v20;
      v29 = *(_QWORD *)(v3 + v28);
      v30 = v29 + 1;
      if (v29 == -1 || v30 > *(_QWORD *)(v3 + *v6))
        break;
      v31 = *(_BYTE *)(*(_QWORD *)(v3 + *v24) + v29);
      *(_QWORD *)(v3 + v28) = v30;
      v27 |= (unint64_t)(v31 & 0x7F) << v25;
      if ((v31 & 0x80) == 0)
        goto LABEL_25;
      v25 += 7;
      v32 = v26++ >= 9;
      if (v32)
      {
        v27 = 0;
        v33 = *(unsigned __int8 *)(v3 + *v23);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v23) = 1;
LABEL_25:
    v33 = *(unsigned __int8 *)(v3 + *v23);
    if (*(_BYTE *)(v3 + *v23))
      v27 = 0;
LABEL_27:
    v34 = v27 & 7;
    if (v33 || v34 == 4)
    {
LABEL_154:
      v81 = 1;
      goto LABEL_155;
    }
    v36 = v23;
    v37 = v27 >> 3;
    v38 = v19;
    if ((v84 & 1) == 0)
    {
      v39 = v21;
      do
      {
        v41 = *v39++;
        v40 = v41;
        v38 = v41 != 0;
        if (v41)
          v42 = v40 == (_DWORD)v37;
        else
          v42 = 1;
      }
      while (!v42);
    }
    v43 = v37 - 1;
    v23 = v36;
    switch(v43)
    {
      case 0:
        if ((v8 & 1) == 0)
          goto LABEL_116;
        v44 = 0;
        v45 = 0;
        v46 = 0;
        *(_WORD *)(a1 + 128) |= 1u;
        v6 = (int *)MEMORY[0x1E0D82BD8];
        v24 = (int *)MEMORY[0x1E0D82BB8];
        while (1)
        {
          v47 = *v20;
          v48 = *(_QWORD *)(v3 + v47);
          v49 = v48 + 1;
          if (v48 == -1 || v49 > *(_QWORD *)(v3 + *v6))
            break;
          v50 = *(_BYTE *)(*(_QWORD *)(v3 + *v24) + v48);
          *(_QWORD *)(v3 + v47) = v49;
          v46 |= (unint64_t)(v50 & 0x7F) << v44;
          if ((v50 & 0x80) == 0)
            goto LABEL_120;
          v44 += 7;
          v32 = v45++ >= 9;
          if (v32)
          {
            LODWORD(v46) = 0;
            goto LABEL_122;
          }
        }
        *(_BYTE *)(v3 + *v23) = 1;
LABEL_120:
        if (*(_BYTE *)(v3 + *v23))
          LODWORD(v46) = 0;
LABEL_122:
        *(_DWORD *)(a1 + 124) = v46;
        goto LABEL_141;
      case 1:
        if (!v38)
          goto LABEL_116;
        if ((*(_WORD *)(a1 + 128) & 0x200) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_179;
          v67 = *(_WORD *)(a1 + 128) << 6;
          goto LABEL_138;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_179;
        v51 = objc_alloc_init(GEORPFeedbackRequestParameters);
        if (!GEORPFeedbackRequestParametersReadAllFrom((uint64_t)v51, (void *)v3, v10 & 1))
          goto LABEL_178;
        PBReaderRecallMark();
        v53 = 96;
        goto LABEL_88;
      case 2:
        if (!v38)
          goto LABEL_116;
        if ((*(_WORD *)(a1 + 128) & 0x400) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_179;
          v67 = 32 * *(_WORD *)(a1 + 128);
          goto LABEL_138;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_179;
        v51 = objc_alloc_init(GEORPFeedbackUserInfo);
        if (!GEORPFeedbackUserInfoReadAllFrom((uint64_t)v51, (void *)v3, v10 & 1))
          goto LABEL_178;
        PBReaderRecallMark();
        v53 = 104;
        goto LABEL_88;
      case 3:
        if (!v38)
          goto LABEL_116;
        if ((*(_WORD *)(a1 + 128) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_179;
          v67 = *(_WORD *)(a1 + 128) << 11;
          goto LABEL_138;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_179;
        v51 = objc_alloc_init(GEOPDAnalyticMetadata);
        if (!GEOPDAnalyticMetadataReadAllFrom((uint64_t)v51, (void *)v3, v10 & 1))
          goto LABEL_178;
        PBReaderRecallMark();
        v53 = 56;
        goto LABEL_88;
      case 4:
        if (!v38)
          goto LABEL_116;
        if ((*(_WORD *)(a1 + 128) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_179;
          v67 = *(_WORD *)(a1 + 128) << 9;
          goto LABEL_138;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_179;
        v51 = objc_alloc_init(GEOPDClientMetadata);
        if (!GEOPDClientMetadataReadAllFrom((uint64_t)v51, (void *)v3, v10 & 1))
          goto LABEL_178;
        PBReaderRecallMark();
        v53 = 72;
        goto LABEL_88;
      case 5:
        if (!v38)
          goto LABEL_116;
        if ((*(_WORD *)(a1 + 128) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_179;
          v67 = *(_WORD *)(a1 + 128) << 10;
          goto LABEL_138;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_179;
        v51 = objc_alloc_init(GEORPClientCapabilities);
        if (!GEORPClientCapabilitiesReadAllFrom((uint64_t)v51, (void *)v3))
          goto LABEL_178;
        PBReaderRecallMark();
        v53 = 64;
        goto LABEL_88;
      case 6:
        if (!v38 || (*(_WORD *)(a1 + 128) & 0x100) != 0)
          goto LABEL_116;
        PBReaderReadString();
        v54 = (void *)objc_claimAutoreleasedReturnValue();
        if (v54)
          -[GEORPFeedbackRequest _addNoFlagsDisplayLanguage:](a1, v54);

        goto LABEL_139;
      case 7:
        if (!v38)
          goto LABEL_116;
        if ((*(_WORD *)(a1 + 128) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_179;
          v67 = *(_WORD *)(a1 + 128) << 12;
LABEL_138:
          v7 += v67 >> 15;
          goto LABEL_139;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_179;
        v51 = objc_alloc_init(GEOABSecondPartyPlaceRequestClientMetaData);
        if (GEOABSecondPartyPlaceRequestClientMetaDataReadAllFrom((uint64_t)v51, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          v53 = 48;
LABEL_88:
          v55 = *(void **)(a1 + v53);
          *(_QWORD *)(a1 + v53) = v51;

          --v7;
LABEL_139:
          v19 = v82;
LABEL_140:
          v6 = (int *)MEMORY[0x1E0D82BD8];
          v24 = (int *)MEMORY[0x1E0D82BB8];
LABEL_141:
          if (!(v83 & 1 | (v7 != 0)) || *(_QWORD *)(v3 + *v20) >= *(_QWORD *)(v3 + *v6))
            goto LABEL_154;
          continue;
        }
LABEL_178:

LABEL_179:
        v81 = 0;
        v19 = v82;
LABEL_155:
        v22 = v80;
LABEL_156:
        if ((v22 & 1) != 0)
LABEL_157:
          *(_WORD *)(a1 + 128) |= 2u;
        if (v19 & 1 | ((v81 & 1) == 0))
        {
          *(_WORD *)(a1 + 128) |= 0x200u;
          *(_WORD *)(a1 + 128) |= 0x400u;
          *(_WORD *)(a1 + 128) |= 0x10u;
          *(_WORD *)(a1 + 128) |= 0x40u;
          *(_WORD *)(a1 + 128) |= 0x20u;
          *(_WORD *)(a1 + 128) |= 0x100u;
          *(_WORD *)(a1 + 128) |= 8u;
          *(_WORD *)(a1 + 128) |= 4u;
          *(_WORD *)(a1 + 128) |= 0x80u;
        }
        else if (v21)
        {
          while (1)
          {
            v76 = *v21++;
            v75 = v76;
            v77 = 512;
            switch(v76)
            {
              case 0:
                goto LABEL_172;
              case 1:
                continue;
              case 2:
                goto LABEL_171;
              case 3:
                v77 = 1024;
                goto LABEL_171;
              case 4:
                v77 = 16;
                goto LABEL_171;
              case 5:
                v77 = 64;
                goto LABEL_171;
              case 6:
                v77 = 32;
                goto LABEL_171;
              case 7:
                v77 = 256;
                goto LABEL_171;
              case 8:
                v77 = 8;
                goto LABEL_171;
              case 9:
                v77 = 4;
                goto LABEL_171;
              default:
                if (v75 != 201)
                  continue;
                v77 = 128;
LABEL_171:
                *(_WORD *)(a1 + 128) |= v77;
                break;
            }
          }
        }
LABEL_172:
        if (v81)
        {
          v3 = *(_BYTE *)(v3 + (int)*MEMORY[0x1E0D82BC8]) == 0;
          if ((v19 & 1) == 0)
            return v3;
LABEL_176:
          v78 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        else
        {
          v3 = 0;
          if ((v19 & 1) != 0)
            goto LABEL_176;
        }
        return v3;
      case 8:
        if (!v38 || (*(_WORD *)(a1 + 128) & 4) != 0)
        {
LABEL_116:
          v66 = PBReaderSkipValueWithTag();
          v19 = v82;
          goto LABEL_117;
        }
        if (v34 == 2)
        {
          if (!PBReaderPlaceMark())
            goto LABEL_179;
          v6 = (int *)MEMORY[0x1E0D82BD8];
          v24 = (int *)MEMORY[0x1E0D82BB8];
          if (*(_QWORD *)(v3 + *v20) < *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]))
          {
            do
            {
              if (*(_BYTE *)(v3 + *v23))
                break;
              v56 = 0;
              v57 = 0;
              v58 = 0;
              while (1)
              {
                v59 = *v20;
                v60 = *(_QWORD *)(v3 + v59);
                v61 = v60 + 1;
                if (v60 == -1 || v61 > *(_QWORD *)(v3 + *v6))
                  break;
                v62 = *(_BYTE *)(*(_QWORD *)(v3 + *v24) + v60);
                *(_QWORD *)(v3 + v59) = v61;
                v58 |= (unint64_t)(v62 & 0x7F) << v56;
                if (v62 < 0)
                {
                  v56 += 7;
                  v32 = v57++ >= 9;
                  if (!v32)
                    continue;
                }
                goto LABEL_103;
              }
              *(_BYTE *)(v3 + *v23) = 1;
LABEL_103:
              PBRepeatedInt32Add();
            }
            while (*(_QWORD *)(v3 + *v20) < *(_QWORD *)(v3 + *v6));
          }
          PBReaderRecallMark();
        }
        else
        {
          v68 = 0;
          v69 = 0;
          v70 = 0;
          v6 = (int *)MEMORY[0x1E0D82BD8];
          v24 = (int *)MEMORY[0x1E0D82BB8];
          while (1)
          {
            v71 = *v20;
            v72 = *(_QWORD *)(v3 + v71);
            v73 = v72 + 1;
            if (v72 == -1 || v73 > *(_QWORD *)(v3 + *v6))
              break;
            v74 = *(_BYTE *)(*(_QWORD *)(v3 + *v24) + v72);
            *(_QWORD *)(v3 + v71) = v73;
            v70 |= (unint64_t)(v74 & 0x7F) << v68;
            if (v74 < 0)
            {
              v68 += 7;
              v32 = v69++ >= 9;
              if (!v32)
                continue;
            }
            goto LABEL_152;
          }
          *(_BYTE *)(v3 + *v23) = 1;
LABEL_152:
          PBRepeatedInt32Add();
        }
        v19 = v82;
        goto LABEL_141;
      default:
        if ((_DWORD)v36 == 201)
        {
          if (v38)
          {
            if ((*(_WORD *)(a1 + 128) & 0x80) != 0)
            {
              if ((PBReaderSkipValueWithTag() & 1) == 0)
                goto LABEL_179;
              v7 += *(unsigned __int16 *)(a1 + 128) << 24 >> 31;
            }
            else
            {
              if ((PBReaderPlaceMark() & 1) == 0)
                goto LABEL_179;
              v51 = objc_alloc_init(GEORPDebugSettings);
              if (!GEORPDebugSettingsReadAllFrom((uint64_t)v51, (void *)v3))
                goto LABEL_178;
              PBReaderRecallMark();
              v52 = *(void **)(a1 + 80);
              *(_QWORD *)(a1 + 80) = v51;

              --v7;
            }
            v19 = v82;
            v23 = v36;
            goto LABEL_140;
          }
LABEL_115:
          v66 = PBReaderSkipValueWithTag();
          v19 = v82;
          v23 = v36;
LABEL_117:
          v6 = (int *)MEMORY[0x1E0D82BD8];
          v24 = (int *)MEMORY[0x1E0D82BB8];
          if ((v66 & 1) == 0)
          {
            v81 = 0;
            goto LABEL_155;
          }
          goto LABEL_141;
        }
        if ((v80 & 1) == 0 || (*(_WORD *)(a1 + 128) & 2) != 0)
          goto LABEL_115;
        if (!*(_QWORD *)(a1 + 16))
        {
          v63 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
          v64 = *(void **)(a1 + 16);
          *(_QWORD *)(a1 + 16) = v63;

        }
        v65 = PBUnknownFieldAdd();
        v19 = v82;
        v23 = v36;
        v6 = (int *)MEMORY[0x1E0D82BD8];
        v24 = (int *)MEMORY[0x1E0D82BB8];
        if (!v65)
        {
          v81 = 0;
          goto LABEL_157;
        }
        goto LABEL_141;
    }
  }
}

void sub_188A5D460(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A5D5A0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A5D6E4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A5D828(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A5D96C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A5DCA0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A5DDE0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A5E1CC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A5F1C0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORPFeedbackRequestCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  objc_msgSend(a1[12], "readAll:", 1);
  objc_msgSend(a1[13], "readAll:", 1);
  objc_msgSend(a1[7], "readAll:", 1);
  objc_msgSend(a1[9], "readAll:", 1);
  objc_msgSend(a1[8], "readAll:", 1);
  objc_msgSend(a1[6], "readAll:", 1);
  return objc_msgSend(a1[10], "readAll:", 1);
}

unint64_t GEORPFeedbackRequestReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 116))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEORPFeedbackRequestReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 120));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 112) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 116) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEORPFeedbackRequestReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEORPFeedbackRequestReadAllFrom_initialTag;
  Specified = GEORPFeedbackRequestReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEORPFeedbackRequestCallReadAllRecursiveWithoutSynchronized((id *)a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 120));
  return Specified;
}

void sub_188A5F3E8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackRequestReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORPFeedbackRequestReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188A5F448(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackRequestIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  BOOL v13;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  int v26;
  unsigned int v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  int v32;
  _BOOL8 v33;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (!a1[*v4])
    {
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        v13 = v7++ >= 9;
        if (v13)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0)
            goto LABEL_81;
          v17 = 0;
          while (1)
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
              goto LABEL_67;
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if (v21 < 0 && v17++ <= 8)
              continue;
            goto LABEL_68;
          }
        case 2u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPFeedbackRequestParametersIsValid(a1))
            goto LABEL_81;
          goto LABEL_57;
        case 3u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPFeedbackUserInfoIsValid(a1))
            goto LABEL_81;
          goto LABEL_57;
        case 4u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDAnalyticMetadataIsValid(a1))
            goto LABEL_81;
          goto LABEL_57;
        case 5u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDClientMetadataIsValid(a1))
            goto LABEL_81;
          goto LABEL_57;
        case 6u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPClientCapabilitiesIsValid(a1))
            goto LABEL_81;
          goto LABEL_57;
        case 7u:
          if (v15 == 2)
            goto LABEL_65;
          goto LABEL_81;
        case 8u:
          if (v15 == 2 && PBReaderPlaceMark() && GEOABSecondPartyPlaceRequestClientMetaDataIsValid(a1))
            goto LABEL_57;
          goto LABEL_81;
        case 9u:
          if (v15 != 2)
          {
            if ((v8 & 7) != 0)
              goto LABEL_81;
            while (1)
            {
              v23 = *v2;
              v24 = *(_QWORD *)&a1[v23];
              v25 = v24 + 1;
              if (v24 == -1 || v25 > *(_QWORD *)&a1[*v3])
                break;
              v26 = *(char *)(*(_QWORD *)&a1[*v5] + v24);
              *(_QWORD *)&a1[v23] = v25;
              if (v26 < 0)
              {
                v27 = v15++;
                if (v27 <= 8)
                  continue;
              }
              goto LABEL_68;
            }
LABEL_67:
            a1[*v4] = 1;
            goto LABEL_68;
          }
          if (!PBReaderPlaceMark())
            goto LABEL_81;
LABEL_71:
          while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
          {
            v28 = a1[*v4];
            if (a1[*v4])
              break;
            while (1)
            {
              v29 = *v2;
              v30 = *(_QWORD *)&a1[v29];
              v31 = v30 + 1;
              if (v30 == -1 || v31 > *(_QWORD *)&a1[*v3])
                break;
              v32 = *(char *)(*(_QWORD *)&a1[*v5] + v30);
              *(_QWORD *)&a1[v29] = v31;
              if (v32 < 0)
              {
                v13 = v28++ >= 9;
                if (!v13)
                  continue;
              }
              goto LABEL_71;
            }
            a1[*v4] = 1;
          }
          goto LABEL_57;
        default:
          if ((v8 >> 3) == 201)
          {
            if (v15 != 2 || !PBReaderPlaceMark() || !GEORPDebugSettingsIsValid(a1))
            {
LABEL_81:
              PBReaderRecallMark();
              return 0;
            }
LABEL_57:
            PBReaderRecallMark();
          }
          else
          {
LABEL_65:
            if ((PBReaderSkipValueWithTag() & 1) == 0)
              goto LABEL_81;
          }
LABEL_68:
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_80;
          break;
      }
    }
  }
LABEL_80:
  v33 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v33;
}

BOOL GEORPFeedbackRequestParametersIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  _BOOL8 v17;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (!a1[*v4])
    {
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 == 2 && PBReaderPlaceMark() && GEORPFeedbackSubmissionParametersIsValid(a1))
            goto LABEL_48;
          goto LABEL_51;
        case 2u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPFeedbackIdLookupParametersIsValid(a1))
            goto LABEL_51;
          goto LABEL_48;
        case 3u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPFeedbackQueryParametersIsValid(a1))
            goto LABEL_51;
          goto LABEL_48;
        case 4u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPFeedbackImageUploadParametersIsValid(a1))
            goto LABEL_51;
          goto LABEL_48;
        case 5u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPFeedbackLayoutConfigParametersIsValid(a1))
            goto LABEL_51;
          goto LABEL_48;
        case 6u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPTdmFraudNotificationParametersIsValid(a1))
            goto LABEL_51;
          goto LABEL_48;
        case 7u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPFeedbackLogEventParametersIsValid(a1))
            goto LABEL_51;
LABEL_48:
          PBReaderRecallMark();
          goto LABEL_49;
        default:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_51:
            PBReaderRecallMark();
            return 0;
          }
LABEL_49:
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_50;
          break;
      }
    }
  }
LABEL_50:
  v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

BOOL GEORPFeedbackUserInfoIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  _BOOL8 v17;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (!a1[*v4])
    {
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 == 2 && PBReaderPlaceMark() && GEORPUserCredentialsIsValid(a1))
            goto LABEL_39;
          goto LABEL_42;
        case 2u:
          if (v15 == 2)
            goto LABEL_34;
          goto LABEL_42;
        case 3u:
          if (v15 == 2)
            goto LABEL_34;
          goto LABEL_42;
        case 4u:
          if (v15 == 2)
            goto LABEL_34;
          goto LABEL_42;
        case 5u:
          if (v15 == 2)
            goto LABEL_34;
          goto LABEL_42;
        case 6u:
        case 7u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPAppAttestInfoIsValid(a1))
            goto LABEL_42;
          goto LABEL_39;
        case 8u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPTdmInfoIsValid(a1))
            goto LABEL_42;
LABEL_39:
          PBReaderRecallMark();
          goto LABEL_40;
        default:
LABEL_34:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_42:
            PBReaderRecallMark();
            return 0;
          }
LABEL_40:
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_41;
          break;
      }
    }
  }
LABEL_41:
  v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

void sub_188A6017C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORPFeedbackRequestIsDirty(uint64_t a1)
{
  unsigned int v2;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 120));
  v2 = *(unsigned __int16 *)(a1 + 128);
  if ((v2 & 0x800) != 0)
    return 1;
  if ((v2 & 0x200) != 0)
  {
    if ((GEORPFeedbackRequestParametersIsDirty(*(os_unfair_lock_s **)(a1 + 96)) & 1) != 0)
      return 1;
    v2 = *(unsigned __int16 *)(a1 + 128);
  }
  if ((v2 & 0x400) != 0)
  {
    if ((GEORPFeedbackUserInfoIsDirty(*(os_unfair_lock_s **)(a1 + 104)) & 1) != 0)
      return 1;
    v2 = *(unsigned __int16 *)(a1 + 128);
  }
  if ((v2 & 0x10) != 0)
  {
    if (GEOPDAnalyticMetadataIsDirty(*(os_unfair_lock_s **)(a1 + 56)))
      return 1;
    v2 = *(unsigned __int16 *)(a1 + 128);
  }
  if ((v2 & 0x40) == 0)
    goto LABEL_14;
  if ((GEOPDClientMetadataIsDirty(*(os_unfair_lock_s **)(a1 + 72)) & 1) != 0)
    return 1;
  v2 = *(unsigned __int16 *)(a1 + 128);
LABEL_14:
  if ((v2 & 0x120) != 0)
    return 1;
  if ((v2 & 8) != 0)
  {
    if ((GEOABSecondPartyPlaceRequestClientMetaDataIsDirty(*(os_unfair_lock_s **)(a1 + 48)) & 1) != 0)
      return 1;
    v2 = *(unsigned __int16 *)(a1 + 128);
  }
  if ((v2 & 4) != 0)
    return 1;
  return (v2 >> 7) & 1;
}

os_unfair_lock_s *GEORPFeedbackRequestIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEORPFeedbackRequestIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 30);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void GEORPFeedbackRequestClearSensitiveFields(void *a1, uint64_t a2, int a3)
{
  void *v5;
  int HasSensitiveFields;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  int v11;
  void *v12;
  id v13;

  if (!a3)
  {
    objc_msgSend(a1, "feedbackRequestParameters");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "clearSensitiveFields:", a2);

LABEL_10:
    objc_msgSend(a1, "clientMetadata");
    v13 = (id)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v13, "clearSensitiveFields:", a2);
    goto LABEL_11;
  }
  if (objc_msgSend(a1, "hasFeedbackRequestParameters")
    && (objc_msgSend(a1, "feedbackRequestParameters"),
        v5 = (void *)objc_claimAutoreleasedReturnValue(),
        HasSensitiveFields = GEORPFeedbackRequestParametersHasSensitiveFields(v5, a2),
        v5,
        HasSensitiveFields))
  {
    objc_msgSend(a1, "feedbackRequestParameters");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = (void *)objc_msgSend(v7, "copy");

    GEORPFeedbackRequestParametersClearSensitiveFields(v8, a2, 0);
    objc_msgSend(a1, "setFeedbackRequestParameters:", v8);
  }
  else
  {
    objc_msgSend(a1, "feedbackRequestParameters");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "clearSensitiveFields:", a2);
  }

  if (!objc_msgSend(a1, "hasClientMetadata"))
    goto LABEL_10;
  objc_msgSend(a1, "clientMetadata");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v11 = GEOPDClientMetadataHasSensitiveFields(v10);

  if (!v11)
    goto LABEL_10;
  objc_msgSend(a1, "clientMetadata");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v13 = (id)objc_msgSend(v12, "copy");

  GEOPDClientMetadataClearSensitiveFields((id *)v13, a2, 0);
  objc_msgSend(a1, "setClientMetadata:", v13);
LABEL_11:

}

uint64_t GEORPFeedbackRequestHasSensitiveFields(void *a1, uint64_t a2)
{
  void *v4;
  uint64_t HasSensitiveFields;
  void *v6;

  if (!a1)
    return 0;
  objc_msgSend(a1, "feedbackRequestParameters");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  if ((GEORPFeedbackRequestParametersHasSensitiveFields(v4, a2) & 1) != 0)
  {
    HasSensitiveFields = 1;
  }
  else
  {
    objc_msgSend(a1, "clientMetadata");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    HasSensitiveFields = GEOPDClientMetadataHasSensitiveFields(v6);

  }
  return HasSensitiveFields;
}

uint64_t GEORPFeedbackRequestParametersHasSensitiveFields(void *a1, uint64_t a2)
{
  void *v4;
  uint64_t HasSensitiveFields;
  void *v6;

  if (!a1)
    return 0;
  objc_msgSend(a1, "submissionParameters");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  if ((GEORPFeedbackSubmissionParametersHasSensitiveFields(v4, a2) & 1) != 0)
  {
    HasSensitiveFields = 1;
  }
  else
  {
    objc_msgSend(a1, "imageUploadParameters");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    HasSensitiveFields = GEORPFeedbackImageUploadParametersHasSensitiveFields(v6);

  }
  return HasSensitiveFields;
}

void GEORPFeedbackRequestParametersClearSensitiveFields(void *a1, uint64_t a2, int a3)
{
  void *v5;
  unsigned int v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  int HasSensitiveFields;
  void *v13;
  id v14;

  if (!a3)
  {
    objc_msgSend(a1, "submissionParameters");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "clearSensitiveFields:", a2);

LABEL_10:
    objc_msgSend(a1, "imageUploadParameters");
    v14 = (id)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v14, "clearSensitiveFields:", a2);
    goto LABEL_11;
  }
  if (objc_msgSend(a1, "hasSubmissionParameters")
    && (objc_msgSend(a1, "submissionParameters"),
        v5 = (void *)objc_claimAutoreleasedReturnValue(),
        v6 = GEORPFeedbackSubmissionParametersHasSensitiveFields(v5, a2),
        v5,
        v6))
  {
    objc_msgSend(a1, "submissionParameters");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = (void *)objc_msgSend(v7, "copy");

    objc_msgSend(v8, "details");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "clearSensitiveFields:", a2);

    objc_msgSend(a1, "setSubmissionParameters:", v8);
  }
  else
  {
    objc_msgSend(a1, "submissionParameters");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "clearSensitiveFields:", a2);
  }

  if (!objc_msgSend(a1, "hasImageUploadParameters"))
    goto LABEL_10;
  objc_msgSend(a1, "imageUploadParameters");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  HasSensitiveFields = GEORPFeedbackImageUploadParametersHasSensitiveFields(v11);

  if (!HasSensitiveFields)
    goto LABEL_10;
  objc_msgSend(a1, "imageUploadParameters");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v14 = (id)objc_msgSend(v13, "copy");

  GEORPFeedbackImageUploadParametersClearSensitiveFields((uint64_t)v14, a2, 0);
  objc_msgSend(a1, "setImageUploadParameters:", v14);
LABEL_11:

}

void sub_188A60C74(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A61298(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A615AC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackRequestParametersReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  char v16;
  unsigned __int8 v17;
  int *v18;
  int *v19;
  int *v20;
  int *v21;
  int *v22;
  char v23;
  unsigned int v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  int v31;
  unint64_t v33;
  BOOL v34;
  int *v35;
  int v36;
  int v37;
  BOOL v38;
  GEORPFeedbackSubmissionParameters *v39;
  uint64_t v40;
  id v41;
  void *v42;
  int v43;
  void *v44;
  char v45;
  __int16 v46;
  int v47;
  __int16 v48;
  void *v49;
  int v51;
  char v52;
  char v53;
  char v54;
  BOOL v55;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 88));
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 84);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 80));
  v6 = 0;
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = (*(_WORD *)(a1 + 92) & 1)
      + (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 92)), (uint16x4_t)0xFFFEFFFBFFFAFFFFLL), (int8x8_t)0x1000100010001))+ ((*(_WORD *)(a1 + 92) >> 3) & 1)+ ((*(_WORD *)(a1 + 92) >> 7) & 1)+ ((*(_WORD *)(a1 + 92) >> 4) & 1));
  while (2)
  {
    v12 = 1;
    v13 = 1;
    v14 = 1;
    switch(a3[v6])
    {
      case -4:
        ++v11;
        goto LABEL_8;
      case -3:
        v7 = 1;
        goto LABEL_7;
      case -2:
        v13 = v9;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v15 = v11 > 4;
        v16 = v15 & ~(_BYTE)v10 | v8;
        v17 = v15 | v10;
        v52 = v16;
        v53 = v17 | v16;
        if (((v17 | v7) & 1) != 0)
          v18 = 0;
        else
          v18 = a3;
        v54 = (v18 == 0) | v17;
        v55 = v17;
        v19 = (int *)MEMORY[0x1E0D82BF0];
        v20 = (int *)MEMORY[0x1E0D82BC8];
        v21 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_7:
        v12 = v8;
LABEL_8:
        v13 = v9;
        v14 = v10;
LABEL_10:
        ++v6;
        v8 = v12;
        v9 = v13;
        v10 = v14;
        continue;
    }
    break;
  }
  while (2)
  {
    v22 = (int *)MEMORY[0x1E0D82BD8];
    if (*(_QWORD *)(v3 + *v19) >= *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) || *(_BYTE *)(v3 + *v20))
      goto LABEL_100;
    v23 = 0;
    v24 = 0;
    v25 = 0;
    while (1)
    {
      v26 = *v19;
      v27 = *(_QWORD *)(v3 + v26);
      v28 = v27 + 1;
      if (v27 == -1 || v28 > *(_QWORD *)(v3 + *v22))
        break;
      v29 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v27);
      *(_QWORD *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0)
        goto LABEL_25;
      v23 += 7;
      if (v24++ >= 9)
      {
        v25 = 0;
        v31 = *(unsigned __int8 *)(v3 + *v20);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v20) = 1;
LABEL_25:
    v31 = *(unsigned __int8 *)(v3 + *v20);
    if (*(_BYTE *)(v3 + *v20))
      v25 = 0;
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_100:
      v51 = 1;
      goto LABEL_101;
    }
    v33 = v25 >> 3;
    v34 = v55;
    if ((v54 & 1) == 0)
    {
      v35 = v18;
      do
      {
        v37 = *v35++;
        v36 = v37;
        v34 = v37 != 0;
        if (v37)
          v38 = v36 == (_DWORD)v33;
        else
          v38 = 1;
      }
      while (!v38);
    }
    switch((int)v33)
    {
      case 1:
        if (!v34)
          goto LABEL_81;
        if ((*(_WORD *)(a1 + 92) & 0x40) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_121;
          v39 = objc_alloc_init(GEORPFeedbackSubmissionParameters);
          if (GEORPFeedbackSubmissionParametersReadAllFrom((uint64_t)v39, (void *)v3, v9 & 1))
          {
            PBReaderRecallMark();
            v40 = 64;
            goto LABEL_80;
          }
          goto LABEL_120;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_121;
        v46 = *(_WORD *)(a1 + 92) << 9;
        goto LABEL_97;
      case 2:
        if (!v34)
          goto LABEL_81;
        if ((*(_WORD *)(a1 + 92) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_121;
          v46 = *(_WORD *)(a1 + 92) << 14;
          goto LABEL_97;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_121;
        v39 = objc_alloc_init(GEORPFeedbackIdLookupParameters);
        if (!GEORPFeedbackIdLookupParametersReadAllFrom((uint64_t)v39, (void *)v3, v9 & 1))
          goto LABEL_120;
        PBReaderRecallMark();
        v40 = 24;
        goto LABEL_80;
      case 3:
        if (!v34)
          goto LABEL_81;
        if ((*(_WORD *)(a1 + 92) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_121;
          v46 = *(_WORD *)(a1 + 92) << 10;
          goto LABEL_97;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_121;
        v39 = objc_alloc_init(GEORPFeedbackQueryParameters);
        if (!GEORPFeedbackQueryParametersReadAllFrom((uint64_t)v39, (void *)v3, v9 & 1))
          goto LABEL_120;
        PBReaderRecallMark();
        v40 = 56;
        goto LABEL_80;
      case 4:
        if (!v34)
          goto LABEL_81;
        if ((*(_WORD *)(a1 + 92) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_121;
          v46 = *(_WORD *)(a1 + 92) << 13;
          goto LABEL_97;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_121;
        v39 = objc_alloc_init(GEORPFeedbackImageUploadParameters);
        if (!GEORPFeedbackImageUploadParametersReadAllFrom((uint64_t)v39, (void *)v3, v9 & 1))
          goto LABEL_120;
        PBReaderRecallMark();
        v40 = 32;
        goto LABEL_80;
      case 5:
        if (!v34)
          goto LABEL_81;
        if ((*(_WORD *)(a1 + 92) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_121;
          v46 = *(_WORD *)(a1 + 92) << 12;
          goto LABEL_97;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_121;
        v39 = objc_alloc_init(GEORPFeedbackLayoutConfigParameters);
        if (!GEORPFeedbackLayoutConfigParametersReadAllFrom((uint64_t)v39, (void *)v3, v9 & 1))
          goto LABEL_120;
        PBReaderRecallMark();
        v40 = 40;
        goto LABEL_80;
      case 6:
        if (!v34)
          goto LABEL_81;
        if ((*(_WORD *)(a1 + 92) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_121;
          v46 = *(_WORD *)(a1 + 92) << 8;
          goto LABEL_97;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_121;
        v39 = objc_alloc_init(GEORPTdmFraudNotificationParameters);
        if (!GEORPTdmFraudNotificationParametersReadAllFrom((uint64_t)v39, (void *)v3, v9 & 1))
          goto LABEL_120;
        PBReaderRecallMark();
        v40 = 72;
        goto LABEL_80;
      case 7:
        if (!v34)
          goto LABEL_81;
        if ((*(_WORD *)(a1 + 92) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_121;
          v46 = *(_WORD *)(a1 + 92) << 11;
LABEL_97:
          v6 += v46 >> 15;
LABEL_98:
          v20 = (int *)MEMORY[0x1E0D82BC8];
LABEL_99:
          if (!(v53 & 1 | (v6 != 0)))
            goto LABEL_100;
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_121;
        v39 = objc_alloc_init(GEORPFeedbackLogEventParameters);
        if (GEORPFeedbackLogEventParametersReadAllFrom((uint64_t)v39, (void *)v3, v9 & 1))
        {
          PBReaderRecallMark();
          v40 = 48;
LABEL_80:
          v44 = *(void **)(a1 + v40);
          *(_QWORD *)(a1 + v40) = v39;

          --v6;
          goto LABEL_98;
        }
LABEL_120:

LABEL_121:
        v51 = 0;
        v20 = (int *)MEMORY[0x1E0D82BC8];
LABEL_101:
        if ((v52 & 1) != 0)
LABEL_102:
          *(_WORD *)(a1 + 92) |= 1u;
        if (v55 || (v51 & 1) == 0)
        {
          *(_WORD *)(a1 + 92) |= 0x40u;
          *(_WORD *)(a1 + 92) |= 2u;
          *(_WORD *)(a1 + 92) |= 0x20u;
          *(_WORD *)(a1 + 92) |= 4u;
          *(_WORD *)(a1 + 92) |= 8u;
          *(_WORD *)(a1 + 92) |= 0x80u;
          *(_WORD *)(a1 + 92) |= 0x10u;
        }
        else if (v18)
        {
          while (1)
          {
            v47 = *v18++;
            v48 = 64;
            switch(v47)
            {
              case 0:
                goto LABEL_114;
              case 1:
                goto LABEL_113;
              case 2:
                v48 = 2;
                goto LABEL_113;
              case 3:
                v48 = 32;
                goto LABEL_113;
              case 4:
                v48 = 4;
                goto LABEL_113;
              case 5:
                v48 = 8;
                goto LABEL_113;
              case 6:
                v48 = 128;
                goto LABEL_113;
              case 7:
                v48 = 16;
LABEL_113:
                *(_WORD *)(a1 + 92) |= v48;
                break;
              default:
                continue;
            }
          }
        }
LABEL_114:
        if (v51)
          v3 = *(_BYTE *)(v3 + *v20) == 0;
        else
          v3 = 0;
        if (v55)
        {
          v49 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      default:
        if ((v52 & 1) == 0 || (*(_WORD *)(a1 + 92) & 1) != 0)
        {
LABEL_81:
          v45 = PBReaderSkipValueWithTag();
          v20 = (int *)MEMORY[0x1E0D82BC8];
          if ((v45 & 1) == 0)
          {
            v51 = 0;
            goto LABEL_101;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v41 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v42 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v41;

          }
          v43 = PBUnknownFieldAdd();
          v20 = (int *)MEMORY[0x1E0D82BC8];
          if (!v43)
          {
            v51 = 0;
            goto LABEL_102;
          }
        }
        goto LABEL_99;
    }
  }
}

void sub_188A61FA8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A620EC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A62230(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A62374(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A624B8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A625F8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A62FF4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORPFeedbackRequestParametersCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  objc_msgSend(a1[8], "readAll:", 1);
  objc_msgSend(a1[3], "readAll:", 1);
  objc_msgSend(a1[7], "readAll:", 1);
  objc_msgSend(a1[4], "readAll:", 1);
  objc_msgSend(a1[5], "readAll:", 1);
  objc_msgSend(a1[9], "readAll:", 1);
  return objc_msgSend(a1[6], "readAll:", 1);
}

unint64_t GEORPFeedbackRequestParametersReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 84))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEORPFeedbackRequestParametersReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 88));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 80) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 84) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEORPFeedbackRequestParametersReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEORPFeedbackRequestParametersReadAllFrom_initialTag;
  Specified = GEORPFeedbackRequestParametersReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEORPFeedbackRequestParametersCallReadAllRecursiveWithoutSynchronized((id *)a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 88));
  return Specified;
}

void sub_188A6321C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackRequestParametersReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORPFeedbackRequestParametersReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188A6327C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackSubmissionParametersIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  _BOOL8 v23;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2)
            goto LABEL_52;
          goto LABEL_42;
        case 2u:
          if ((v8 & 7) != 0)
            goto LABEL_52;
          v17 = 0;
          break;
        case 3u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPFeedbackDetailsIsValid(a1))
            goto LABEL_52;
          goto LABEL_47;
        case 4u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPFeedbackCommonContextIsValid(a1))
            goto LABEL_52;
          goto LABEL_47;
        case 5u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPFeedbackCommonCorrectionsIsValid(a1))
            goto LABEL_52;
          goto LABEL_47;
        case 6u:
          if (v15 == 2)
            goto LABEL_42;
          goto LABEL_52;
        case 7u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPFeedbackDynamicFormIsValid(a1))
            goto LABEL_52;
LABEL_47:
          PBReaderRecallMark();
          continue;
        default:
LABEL_42:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_52:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v18 = *v2;
        v19 = *(_QWORD *)&a1[v18];
        v20 = v19 + 1;
        if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
          break;
        v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
        *(_QWORD *)&a1[v18] = v20;
        if (v21 < 0 && v17++ <= 8)
          continue;
        goto LABEL_48;
      }
      a1[*v4] = 1;
LABEL_48:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v23 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v23;
}

BOOL GEORPTdmFraudNotificationParametersIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  _BOOL8 v17;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (!a1[*v4])
    {
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2)
            goto LABEL_33;
          goto LABEL_30;
        case 2u:
          if (v15 == 2)
            goto LABEL_30;
          goto LABEL_33;
        case 3u:
          if (v15 == 2)
            goto LABEL_30;
          goto LABEL_33;
        case 4u:
          if (v15 == 2)
            goto LABEL_30;
          goto LABEL_33;
        case 5u:
          if (v15 != 2)
            goto LABEL_33;
LABEL_30:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_33:
            v17 = 0;
            goto LABEL_34;
          }
LABEL_31:
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_32;
          break;
        default:
          if (!PBReaderSkipValueWithTag())
            goto LABEL_33;
          goto LABEL_31;
      }
    }
  }
LABEL_32:
  v17 = a1[*v4] == 0;
LABEL_34:
  PBReaderRecallMark();
  return v17;
}

void sub_188A639A4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL _GEORPFeedbackRequestParametersIsDirty(uint64_t a1)
{
  __int16 v2;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 88));
  v2 = *(_WORD *)(a1 + 92);
  if ((v2 & 0x100) != 0)
    return 1;
  if ((v2 & 0x40) != 0)
  {
    if ((GEORPFeedbackSubmissionParametersIsDirty(*(os_unfair_lock_s **)(a1 + 64)) & 1) != 0)
      return 1;
    v2 = *(_WORD *)(a1 + 92);
  }
  if ((v2 & 2) != 0)
  {
    if (GEORPFeedbackIdLookupParametersIsDirty(*(_QWORD *)(a1 + 24)))
      return 1;
    v2 = *(_WORD *)(a1 + 92);
  }
  if ((v2 & 0x20) != 0)
  {
    if ((GEORPFeedbackQueryParametersIsDirty(*(os_unfair_lock_s **)(a1 + 56)) & 1) != 0)
      return 1;
    v2 = *(_WORD *)(a1 + 92);
  }
  if ((v2 & 4) != 0)
    return 1;
  if ((v2 & 8) == 0)
    goto LABEL_15;
  if (GEORPFeedbackLayoutConfigParametersIsDirty(*(_QWORD *)(a1 + 40)))
    return 1;
  v2 = *(_WORD *)(a1 + 92);
LABEL_15:
  if ((v2 & 0x80) != 0)
  {
    if (GEORPTdmFraudNotificationParametersIsDirty(*(_QWORD *)(a1 + 72)))
      return 1;
    v2 = *(_WORD *)(a1 + 92);
  }
  return (v2 & 0x10) != 0 && GEORPFeedbackLogEventParametersIsDirty(*(_QWORD *)(a1 + 48));
}

os_unfair_lock_s *GEORPFeedbackRequestParametersIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  _BOOL8 IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEORPFeedbackRequestParametersIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 22);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void *GEORPFeedbackSubmissionParametersHasSensitiveFields(void *result, uint64_t a2)
{
  void *v3;
  uint64_t HasSensitiveFields;

  if (result)
  {
    objc_msgSend(result, "details");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    HasSensitiveFields = GEORPFeedbackDetailsHasSensitiveFields(v3, a2);

    return (void *)HasSensitiveFields;
  }
  return result;
}

void GEORPFeedbackSubmissionParametersClearSensitiveFields(void *a1, uint64_t a2, int a3)
{
  void *v5;
  int HasSensitiveFields;
  void *v7;
  id v8;

  if (a3
    && objc_msgSend(a1, "hasDetails")
    && (objc_msgSend(a1, "details"),
        v5 = (void *)objc_claimAutoreleasedReturnValue(),
        HasSensitiveFields = GEORPFeedbackDetailsHasSensitiveFields(v5, a2),
        v5,
        HasSensitiveFields))
  {
    objc_msgSend(a1, "details");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = (id)objc_msgSend(v7, "copy");

    GEORPFeedbackDetailsClearSensitiveFields(v8, a2, 0);
    objc_msgSend(a1, "setDetails:", v8);
  }
  else
  {
    objc_msgSend(a1, "details");
    v8 = (id)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "clearSensitiveFields:", a2);
  }

}

void sub_188A63FEC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A64420(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackResponseReadAllFrom(uint64_t a1, void *a2, int a3)
{
  char *v5;
  int *v6;
  int *v7;
  int *v8;
  int *v9;
  char v10;
  unsigned int v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  BOOL v17;
  int v18;
  char v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  id v27;
  void *v28;
  char v29;
  unsigned int v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  GEORPFeedbackResult *v35;
  void *v36;
  char v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  char v44;
  unsigned int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  char v50;
  uint64_t v51;
  BOOL v52;
  uint64_t v53;
  _BOOL8 v54;

  v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    v6 = (int *)MEMORY[0x1E0D82BF0];
    v7 = (int *)MEMORY[0x1E0D82BD8];
    v8 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v5[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v5[*MEMORY[0x1E0D82BD8]])
    {
      v9 = (int *)MEMORY[0x1E0D82BB8];
      while (!v5[*v8])
      {
        v10 = 0;
        v11 = 0;
        v12 = 0;
        while (1)
        {
          v13 = *v6;
          v14 = *(_QWORD *)&v5[v13];
          v15 = v14 + 1;
          if (v14 == -1 || v15 > *(_QWORD *)&v5[*v7])
            break;
          v16 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v14);
          *(_QWORD *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0)
            goto LABEL_13;
          v10 += 7;
          v17 = v11++ >= 9;
          if (v17)
          {
            v12 = 0;
            v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        v18 = v5[*v8];
        if (v5[*v8])
          v12 = 0;
LABEL_15:
        if (v18 || (v12 & 7) == 4)
          break;
        switch((v12 >> 3))
        {
          case 1u:
            v20 = 0;
            v21 = 0;
            v22 = 0;
            *(_BYTE *)(a1 + 36) |= 2u;
            while (1)
            {
              v23 = *v6;
              v24 = *(_QWORD *)&v5[v23];
              v25 = v24 + 1;
              if (v24 == -1 || v25 > *(_QWORD *)&v5[*v7])
                break;
              v26 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v24);
              *(_QWORD *)&v5[v23] = v25;
              v22 |= (unint64_t)(v26 & 0x7F) << v20;
              if ((v26 & 0x80) == 0)
                goto LABEL_56;
              v20 += 7;
              v17 = v21++ >= 9;
              if (v17)
              {
                LODWORD(v22) = 0;
                goto LABEL_58;
              }
            }
            v5[*v8] = 1;
LABEL_56:
            if (v5[*v8])
              LODWORD(v22) = 0;
LABEL_58:
            v51 = 28;
            goto LABEL_63;
          case 2u:
            v29 = 0;
            v30 = 0;
            v22 = 0;
            *(_BYTE *)(a1 + 36) |= 1u;
            while (2)
            {
              v31 = *v6;
              v32 = *(_QWORD *)&v5[v31];
              v33 = v32 + 1;
              if (v32 == -1 || v33 > *(_QWORD *)&v5[*v7])
              {
                v5[*v8] = 1;
              }
              else
              {
                v34 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v32);
                *(_QWORD *)&v5[v31] = v33;
                v22 |= (unint64_t)(v34 & 0x7F) << v29;
                if (v34 < 0)
                {
                  v29 += 7;
                  v17 = v30++ >= 9;
                  if (v17)
                  {
                    LODWORD(v22) = 0;
                    goto LABEL_62;
                  }
                  continue;
                }
              }
              break;
            }
            if (v5[*v8])
              LODWORD(v22) = 0;
LABEL_62:
            v51 = 24;
LABEL_63:
            *(_DWORD *)(a1 + v51) = v22;
            goto LABEL_73;
          case 3u:
            if ((PBReaderPlaceMark() & 1) == 0)
              goto LABEL_76;
            v35 = objc_alloc_init(GEORPFeedbackResult);
            if (!GEORPFeedbackResultReadAllFrom((uint64_t)v35, v5, a3))
            {

              goto LABEL_76;
            }
            PBReaderRecallMark();
            v36 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v35;

LABEL_73:
            if (*(_QWORD *)&v5[*v6] >= *(_QWORD *)&v5[*v7])
              goto LABEL_74;
            break;
          case 4u:
            v37 = 0;
            v38 = 0;
            v39 = 0;
            *(_BYTE *)(a1 + 36) |= 8u;
            while (2)
            {
              v40 = *v6;
              v41 = *(_QWORD *)&v5[v40];
              v42 = v41 + 1;
              if (v41 == -1 || v42 > *(_QWORD *)&v5[*v7])
              {
                v5[*v8] = 1;
              }
              else
              {
                v43 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v41);
                *(_QWORD *)&v5[v40] = v42;
                v39 |= (unint64_t)(v43 & 0x7F) << v37;
                if (v43 < 0)
                {
                  v37 += 7;
                  v17 = v38++ >= 9;
                  if (v17)
                  {
                    v39 = 0;
                    goto LABEL_67;
                  }
                  continue;
                }
              }
              break;
            }
            if (v5[*v8])
              v39 = 0;
LABEL_67:
            v52 = v39 != 0;
            v53 = 33;
            goto LABEL_72;
          case 5u:
            v44 = 0;
            v45 = 0;
            v46 = 0;
            *(_BYTE *)(a1 + 36) |= 4u;
            while (2)
            {
              v47 = *v6;
              v48 = *(_QWORD *)&v5[v47];
              v49 = v48 + 1;
              if (v48 == -1 || v49 > *(_QWORD *)&v5[*v7])
              {
                v5[*v8] = 1;
              }
              else
              {
                v50 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v48);
                *(_QWORD *)&v5[v47] = v49;
                v46 |= (unint64_t)(v50 & 0x7F) << v44;
                if (v50 < 0)
                {
                  v44 += 7;
                  v17 = v45++ >= 9;
                  if (v17)
                  {
                    v46 = 0;
                    goto LABEL_71;
                  }
                  continue;
                }
              }
              break;
            }
            if (v5[*v8])
              v46 = 0;
LABEL_71:
            v52 = v46 != 0;
            v53 = 32;
LABEL_72:
            *(_BYTE *)(a1 + v53) = v52;
            goto LABEL_73;
          default:
            if (!*(_QWORD *)(a1 + 8))
            {
              v27 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
              v28 = *(void **)(a1 + 8);
              *(_QWORD *)(a1 + 8) = v27;

            }
            if (!PBUnknownFieldAdd())
              goto LABEL_76;
            goto LABEL_73;
        }
      }
    }
LABEL_74:
    v54 = v5[*v8] == 0;
  }
  else
  {
LABEL_76:
    v54 = 0;
  }
  objc_sync_exit(v5);

  return v54;
}

void sub_188A659E4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackResponseReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORPFeedbackResponseReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188A65A44(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackResponseIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  int v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  int v37;
  _BOOL8 v38;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0)
            goto LABEL_61;
          v17 = 0;
          while (1)
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
              goto LABEL_57;
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if (v21 < 0)
            {
              v22 = v17++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_58;
          }
        case 2u:
          if ((v8 & 7) != 0)
            goto LABEL_61;
          v23 = 0;
          while (1)
          {
            v24 = *v2;
            v25 = *(_QWORD *)&a1[v24];
            v26 = v25 + 1;
            if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
              goto LABEL_57;
            v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
            *(_QWORD *)&a1[v24] = v26;
            if (v27 < 0)
            {
              v22 = v23++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_58;
          }
        case 3u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPFeedbackResultIsValid(a1))
            goto LABEL_61;
          PBReaderRecallMark();
          continue;
        case 4u:
          if ((v8 & 7) != 0)
            goto LABEL_61;
          v28 = 0;
          while (1)
          {
            v29 = *v2;
            v30 = *(_QWORD *)&a1[v29];
            v31 = v30 + 1;
            if (v30 == -1 || v31 > *(_QWORD *)&a1[*v3])
              goto LABEL_57;
            v32 = *(char *)(*(_QWORD *)&a1[*v5] + v30);
            *(_QWORD *)&a1[v29] = v31;
            if (v32 < 0)
            {
              v22 = v28++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_58;
          }
        case 5u:
          if ((v8 & 7) != 0)
            goto LABEL_61;
          v33 = 0;
          break;
        default:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_61:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v34 = *v2;
        v35 = *(_QWORD *)&a1[v34];
        v36 = v35 + 1;
        if (v35 == -1 || v36 > *(_QWORD *)&a1[*v3])
          break;
        v37 = *(char *)(*(_QWORD *)&a1[*v5] + v35);
        *(_QWORD *)&a1[v34] = v36;
        if (v37 < 0)
        {
          v22 = v33++ > 8;
          if (!v22)
            continue;
        }
        goto LABEL_58;
      }
LABEL_57:
      a1[*v4] = 1;
LABEL_58:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v38 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v38;
}

BOOL GEORPFeedbackResultIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  _BOOL8 v17;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (!a1[*v4])
    {
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 == 2 && PBReaderPlaceMark() && GEORPFeedbackSubmissionResultIsValid(a1))
            goto LABEL_48;
          goto LABEL_51;
        case 2u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPFeedbackIdLookupResultIsValid(a1))
            goto LABEL_51;
          goto LABEL_48;
        case 3u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPFeedbackQueryResultIsValid(a1))
            goto LABEL_51;
          goto LABEL_48;
        case 4u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPFeedbackImageUploadResultIsValid(a1))
            goto LABEL_51;
          goto LABEL_48;
        case 5u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPFeedbackLayoutConfigResultIsValid(a1))
            goto LABEL_51;
          goto LABEL_48;
        case 6u:
          if (v15 != 2
            || !PBReaderPlaceMark()
            || !GEORPFeedbackTdmFraudNotificationResultIsValid((unsigned __int8 *)a1))
          {
            goto LABEL_51;
          }
          goto LABEL_48;
        case 7u:
          if (v15 != 2
            || !PBReaderPlaceMark()
            || !GEORPFeedbackLogEventResultIsValid((unsigned __int8 *)a1))
          {
            goto LABEL_51;
          }
LABEL_48:
          PBReaderRecallMark();
          goto LABEL_49;
        default:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_51:
            PBReaderRecallMark();
            return 0;
          }
LABEL_49:
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_50;
          break;
      }
    }
  }
LABEL_50:
  v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

void sub_188A668D4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackResultReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  char v16;
  unsigned __int8 v17;
  int *v18;
  int *v19;
  int *v20;
  int *v21;
  int *v22;
  char v23;
  unsigned int v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  int v31;
  unint64_t v33;
  BOOL v34;
  int *v35;
  int v36;
  int v37;
  BOOL v38;
  GEORPFeedbackSubmissionResult *v39;
  uint64_t v40;
  id v41;
  void *v42;
  int v43;
  void *v44;
  char v45;
  __int16 v46;
  int v47;
  __int16 v48;
  void *v49;
  int v51;
  char v52;
  char v53;
  char v54;
  BOOL v55;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 88));
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 84);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 80));
  v6 = 0;
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = (*(_WORD *)(a1 + 92) & 1)
      + (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 92)), (uint16x4_t)0xFFFEFFFBFFFAFFFFLL), (int8x8_t)0x1000100010001))+ ((*(_WORD *)(a1 + 92) >> 3) & 1)+ ((*(_WORD *)(a1 + 92) >> 7) & 1)+ ((*(_WORD *)(a1 + 92) >> 4) & 1));
  while (2)
  {
    v12 = 1;
    v13 = 1;
    v14 = 1;
    switch(a3[v6])
    {
      case -4:
        ++v11;
        goto LABEL_8;
      case -3:
        v7 = 1;
        goto LABEL_7;
      case -2:
        v13 = v9;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v15 = v11 > 4;
        v16 = v15 & ~(_BYTE)v10 | v8;
        v17 = v15 | v10;
        v52 = v16;
        v53 = v17 | v16;
        if (((v17 | v7) & 1) != 0)
          v18 = 0;
        else
          v18 = a3;
        v54 = (v18 == 0) | v17;
        v55 = v17;
        v19 = (int *)MEMORY[0x1E0D82BF0];
        v20 = (int *)MEMORY[0x1E0D82BC8];
        v21 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_7:
        v12 = v8;
LABEL_8:
        v13 = v9;
        v14 = v10;
LABEL_10:
        ++v6;
        v8 = v12;
        v9 = v13;
        v10 = v14;
        continue;
    }
    break;
  }
  while (2)
  {
    v22 = (int *)MEMORY[0x1E0D82BD8];
    if (*(_QWORD *)(v3 + *v19) >= *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) || *(_BYTE *)(v3 + *v20))
      goto LABEL_100;
    v23 = 0;
    v24 = 0;
    v25 = 0;
    while (1)
    {
      v26 = *v19;
      v27 = *(_QWORD *)(v3 + v26);
      v28 = v27 + 1;
      if (v27 == -1 || v28 > *(_QWORD *)(v3 + *v22))
        break;
      v29 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v27);
      *(_QWORD *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0)
        goto LABEL_25;
      v23 += 7;
      if (v24++ >= 9)
      {
        v25 = 0;
        v31 = *(unsigned __int8 *)(v3 + *v20);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v20) = 1;
LABEL_25:
    v31 = *(unsigned __int8 *)(v3 + *v20);
    if (*(_BYTE *)(v3 + *v20))
      v25 = 0;
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_100:
      v51 = 1;
      goto LABEL_101;
    }
    v33 = v25 >> 3;
    v34 = v55;
    if ((v54 & 1) == 0)
    {
      v35 = v18;
      do
      {
        v37 = *v35++;
        v36 = v37;
        v34 = v37 != 0;
        if (v37)
          v38 = v36 == (_DWORD)v33;
        else
          v38 = 1;
      }
      while (!v38);
    }
    switch((int)v33)
    {
      case 1:
        if (!v34)
          goto LABEL_81;
        if ((*(_WORD *)(a1 + 92) & 0x40) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_121;
          v39 = objc_alloc_init(GEORPFeedbackSubmissionResult);
          if (GEORPFeedbackSubmissionResultReadAllFrom((uint64_t)v39, (void *)v3, v9 & 1))
          {
            PBReaderRecallMark();
            v40 = 64;
            goto LABEL_80;
          }
          goto LABEL_120;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_121;
        v46 = *(_WORD *)(a1 + 92) << 9;
        goto LABEL_97;
      case 2:
        if (!v34)
          goto LABEL_81;
        if ((*(_WORD *)(a1 + 92) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_121;
          v46 = *(_WORD *)(a1 + 92) << 14;
          goto LABEL_97;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_121;
        v39 = objc_alloc_init(GEORPFeedbackIdLookupResult);
        if (!GEORPFeedbackIdLookupResultReadAllFrom(v39, (void *)v3, v9 & 1))
          goto LABEL_120;
        PBReaderRecallMark();
        v40 = 24;
        goto LABEL_80;
      case 3:
        if (!v34)
          goto LABEL_81;
        if ((*(_WORD *)(a1 + 92) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_121;
          v46 = *(_WORD *)(a1 + 92) << 10;
          goto LABEL_97;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_121;
        v39 = objc_alloc_init(GEORPFeedbackQueryResult);
        if (!GEORPFeedbackQueryResultReadAllFrom((uint64_t)v39, (void *)v3, v9 & 1))
          goto LABEL_120;
        PBReaderRecallMark();
        v40 = 56;
        goto LABEL_80;
      case 4:
        if (!v34)
          goto LABEL_81;
        if ((*(_WORD *)(a1 + 92) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_121;
          v46 = *(_WORD *)(a1 + 92) << 13;
          goto LABEL_97;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_121;
        v39 = objc_alloc_init(GEORPFeedbackImageUploadResult);
        if (!GEORPFeedbackImageUploadResultReadAllFrom(v39, (void *)v3, v9 & 1))
          goto LABEL_120;
        PBReaderRecallMark();
        v40 = 32;
        goto LABEL_80;
      case 5:
        if (!v34)
          goto LABEL_81;
        if ((*(_WORD *)(a1 + 92) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_121;
          v46 = *(_WORD *)(a1 + 92) << 12;
          goto LABEL_97;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_121;
        v39 = objc_alloc_init(GEORPFeedbackLayoutConfigResult);
        if (!GEORPFeedbackLayoutConfigResultReadAllFrom(v39, (void *)v3, v9 & 1))
          goto LABEL_120;
        PBReaderRecallMark();
        v40 = 40;
        goto LABEL_80;
      case 6:
        if (!v34)
          goto LABEL_81;
        if ((*(_WORD *)(a1 + 92) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_121;
          v46 = *(_WORD *)(a1 + 92) << 8;
          goto LABEL_97;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_121;
        v39 = objc_alloc_init(GEORPFeedbackTdmFraudNotificationResult);
        if (!GEORPFeedbackTdmFraudNotificationResultReadAllFrom((uint64_t)v39, (void *)v3))
          goto LABEL_120;
        PBReaderRecallMark();
        v40 = 72;
        goto LABEL_80;
      case 7:
        if (!v34)
          goto LABEL_81;
        if ((*(_WORD *)(a1 + 92) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_121;
          v46 = *(_WORD *)(a1 + 92) << 11;
LABEL_97:
          v6 += v46 >> 15;
LABEL_98:
          v20 = (int *)MEMORY[0x1E0D82BC8];
LABEL_99:
          if (!(v53 & 1 | (v6 != 0)))
            goto LABEL_100;
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_121;
        v39 = objc_alloc_init(GEORPFeedbackLogEventResult);
        if (GEORPFeedbackLogEventResultReadAllFrom((uint64_t)v39, (void *)v3))
        {
          PBReaderRecallMark();
          v40 = 48;
LABEL_80:
          v44 = *(void **)(a1 + v40);
          *(_QWORD *)(a1 + v40) = v39;

          --v6;
          goto LABEL_98;
        }
LABEL_120:

LABEL_121:
        v51 = 0;
        v20 = (int *)MEMORY[0x1E0D82BC8];
LABEL_101:
        if ((v52 & 1) != 0)
LABEL_102:
          *(_WORD *)(a1 + 92) |= 1u;
        if (v55 || (v51 & 1) == 0)
        {
          *(_WORD *)(a1 + 92) |= 0x40u;
          *(_WORD *)(a1 + 92) |= 2u;
          *(_WORD *)(a1 + 92) |= 0x20u;
          *(_WORD *)(a1 + 92) |= 4u;
          *(_WORD *)(a1 + 92) |= 8u;
          *(_WORD *)(a1 + 92) |= 0x80u;
          *(_WORD *)(a1 + 92) |= 0x10u;
        }
        else if (v18)
        {
          while (1)
          {
            v47 = *v18++;
            v48 = 64;
            switch(v47)
            {
              case 0:
                goto LABEL_114;
              case 1:
                goto LABEL_113;
              case 2:
                v48 = 2;
                goto LABEL_113;
              case 3:
                v48 = 32;
                goto LABEL_113;
              case 4:
                v48 = 4;
                goto LABEL_113;
              case 5:
                v48 = 8;
                goto LABEL_113;
              case 6:
                v48 = 128;
                goto LABEL_113;
              case 7:
                v48 = 16;
LABEL_113:
                *(_WORD *)(a1 + 92) |= v48;
                break;
              default:
                continue;
            }
          }
        }
LABEL_114:
        if (v51)
          v3 = *(_BYTE *)(v3 + *v20) == 0;
        else
          v3 = 0;
        if (v55)
        {
          v49 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      default:
        if ((v52 & 1) == 0 || (*(_WORD *)(a1 + 92) & 1) != 0)
        {
LABEL_81:
          v45 = PBReaderSkipValueWithTag();
          v20 = (int *)MEMORY[0x1E0D82BC8];
          if ((v45 & 1) == 0)
          {
            v51 = 0;
            goto LABEL_101;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v41 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v42 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v41;

          }
          v43 = PBUnknownFieldAdd();
          v20 = (int *)MEMORY[0x1E0D82BC8];
          if (!v43)
          {
            v51 = 0;
            goto LABEL_102;
          }
        }
        goto LABEL_99;
    }
  }
}

void sub_188A672D0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A67414(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A67558(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A6769C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A677E0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A67920(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A6831C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORPFeedbackResultCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  objc_msgSend(a1[8], "readAll:", 1);
  objc_msgSend(a1[3], "readAll:", 1);
  objc_msgSend(a1[7], "readAll:", 1);
  objc_msgSend(a1[4], "readAll:", 1);
  objc_msgSend(a1[5], "readAll:", 1);
  objc_msgSend(a1[9], "readAll:", 1);
  return objc_msgSend(a1[6], "readAll:", 1);
}

unint64_t GEORPFeedbackResultReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 84))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEORPFeedbackResultReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 88));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 80) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 84) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEORPFeedbackResultReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEORPFeedbackResultReadAllFrom_initialTag;
  Specified = GEORPFeedbackResultReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEORPFeedbackResultCallReadAllRecursiveWithoutSynchronized((id *)a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 88));
  return Specified;
}

void sub_188A68544(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackResultReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORPFeedbackResultReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188A685A4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackSubmissionResultIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  _BOOL8 v17;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (!a1[*v4])
    {
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2)
            goto LABEL_44;
          goto LABEL_20;
        case 2u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPFeedbackImageIdMapEntryIsValid(a1))
            goto LABEL_44;
          goto LABEL_41;
        case 3u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPRapProfileInfoIsValid(a1))
            goto LABEL_44;
          goto LABEL_41;
        case 4u:
          if (v15 != 2
            || !PBReaderPlaceMark()
            || !GEORPThirdPartyPhotoSharingPreferenceUpdateResultIsValid(a1))
          {
            goto LABEL_44;
          }
          goto LABEL_41;
        case 5u:
          if (v15 != 2
            || !PBReaderPlaceMark()
            || !GEORPPhotoAttributionPreferencesUpdateResultIsValid(a1))
          {
            goto LABEL_44;
          }
          goto LABEL_41;
        case 6u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPTdmFraudRequestInfoIsValid(a1))
            goto LABEL_44;
LABEL_41:
          PBReaderRecallMark();
          goto LABEL_42;
        default:
LABEL_20:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_44:
            PBReaderRecallMark();
            return 0;
          }
LABEL_42:
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_43;
          break;
      }
    }
  }
LABEL_43:
  v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

BOOL GEORPFeedbackTdmFraudNotificationResultIsValid(unsigned __int8 *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  int v6;
  char v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v15;
  _BOOL8 v16;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  v5 = (int *)MEMORY[0x1E0D82BB8];
  while (1)
  {
    v6 = a1[*v4];
    if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
      break;
    if (a1[*v4])
    {
      v6 = 1;
      break;
    }
    v7 = 0;
    v8 = 0;
    v9 = 0;
    while (1)
    {
      v10 = *v2;
      v11 = *(_QWORD *)&a1[v10];
      v12 = v11 + 1;
      if (v11 == -1 || v12 > *(_QWORD *)&a1[*v3])
        break;
      v13 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v11);
      *(_QWORD *)&a1[v10] = v12;
      v9 |= (unint64_t)(v13 & 0x7F) << v7;
      if ((v13 & 0x80) == 0)
        goto LABEL_12;
      v7 += 7;
      if (v8++ >= 9)
      {
        LOBYTE(v9) = 0;
        v6 = a1[*v4];
        goto LABEL_14;
      }
    }
    a1[*v4] = 1;
LABEL_12:
    v6 = a1[*v4];
    if (a1[*v4])
      LOBYTE(v9) = 0;
LABEL_14:
    if (v6)
      v15 = 1;
    else
      v15 = (v9 & 7) == 4;
    if (v15)
      break;
    if ((PBReaderSkipValueWithTag() & 1) == 0)
    {
      v16 = 0;
      goto LABEL_22;
    }
  }
  v16 = v6 == 0;
LABEL_22:
  PBReaderRecallMark();
  return v16;
}

void sub_188A68BD0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORPFeedbackResultIsDirty(uint64_t a1)
{
  unsigned int v2;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 88));
  v2 = *(unsigned __int16 *)(a1 + 92);
  if ((v2 & 0x100) != 0)
    return 1;
  if ((v2 & 0x40) != 0)
  {
    if ((GEORPFeedbackSubmissionResultIsDirty(*(os_unfair_lock_s **)(a1 + 64)) & 1) != 0)
      return 1;
    v2 = *(unsigned __int16 *)(a1 + 92);
  }
  if ((v2 & 0xAE) != 0)
    return 1;
  return (v2 >> 4) & 1;
}

os_unfair_lock_s *GEORPFeedbackResultIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEORPFeedbackResultIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 22);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_188A6904C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A69480(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A69790(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackSubmissionParametersReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  int *v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  int *v18;
  int *v19;
  int *v20;
  int *v21;
  char v22;
  unsigned int v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  BOOL v29;
  int v30;
  unint64_t v32;
  BOOL v33;
  int *v34;
  int v35;
  int v36;
  BOOL v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  void *v41;
  int v42;
  char v43;
  unsigned int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  GEORPFeedbackDetails *v50;
  uint64_t v51;
  void *v52;
  char v53;
  __int16 v54;
  int v55;
  __int16 v56;
  void *v57;
  int v59;
  int *v60;
  char v61;
  char v62;
  char v63;
  char v64;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 76);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 72));
  v7 = v6;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 88)), (uint16x4_t)0xFFFCFFFDFFFEFFFBLL), (int8x8_t)0x1000100010001))+ ((*(_WORD *)(a1 + 88) >> 7) & 1)+ ((*(_WORD *)(a1 + 88) >> 6) & 1)+ ((*(_WORD *)(a1 + 88) >> 1) & 1));
  while (2)
  {
    v14 = 1;
    v15 = 1;
    v16 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v13;
        goto LABEL_8;
      case -3:
        v9 = 1;
        goto LABEL_7;
      case -2:
        v15 = v11;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v17 = v13 > 3;
        v61 = v17 & ~(_BYTE)v12 | v10;
        v62 = v17 | v12 | v61;
        if ((((v17 | v12) | v9) & 1) != 0)
          v18 = 0;
        else
          v18 = a3;
        v63 = (v18 == 0) | v17 | v12;
        v64 = v17 | v12;
        v19 = (int *)MEMORY[0x1E0D82BF0];
        v20 = (int *)MEMORY[0x1E0D82BC8];
        v21 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v13;
LABEL_7:
        v14 = v10;
LABEL_8:
        v15 = v11;
        v16 = v12;
LABEL_10:
        ++v8;
        v10 = v14;
        v11 = v15;
        v12 = v16;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v19) >= *(_QWORD *)(v3 + *v7) || *(_BYTE *)(v3 + *v20))
      goto LABEL_103;
    v22 = 0;
    v23 = 0;
    v24 = 0;
    while (1)
    {
      v25 = *v19;
      v26 = *(_QWORD *)(v3 + v25);
      v27 = v26 + 1;
      if (v26 == -1 || v27 > *(_QWORD *)(v3 + *v7))
        break;
      v28 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v26);
      *(_QWORD *)(v3 + v25) = v27;
      v24 |= (unint64_t)(v28 & 0x7F) << v22;
      if ((v28 & 0x80) == 0)
        goto LABEL_25;
      v22 += 7;
      v29 = v23++ >= 9;
      if (v29)
      {
        v24 = 0;
        v30 = *(unsigned __int8 *)(v3 + *v20);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v20) = 1;
LABEL_25:
    v30 = *(unsigned __int8 *)(v3 + *v20);
    if (*(_BYTE *)(v3 + *v20))
      v24 = 0;
LABEL_27:
    if (v30 || (v24 & 7) == 4)
    {
LABEL_103:
      v59 = 1;
      goto LABEL_104;
    }
    v32 = v24 >> 3;
    v33 = v64;
    if ((v63 & 1) == 0)
    {
      v34 = v18;
      do
      {
        v36 = *v34++;
        v35 = v36;
        v33 = v36 != 0;
        if (v36)
          v37 = v35 == (_DWORD)v32;
        else
          v37 = 1;
      }
      while (!v37);
    }
    switch((int)v32)
    {
      case 1:
        if (!v33)
          goto LABEL_82;
        if ((*(_WORD *)(a1 + 88) & 4) == 0)
        {
          PBReaderReadString();
          v38 = objc_claimAutoreleasedReturnValue();
          v39 = 24;
          goto LABEL_74;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_123;
        v54 = *(_WORD *)(a1 + 88) << 13;
        goto LABEL_100;
      case 2:
        if ((v9 & 1) == 0)
          goto LABEL_82;
        v43 = 0;
        v44 = 0;
        v45 = 0;
        *(_WORD *)(a1 + 88) |= 1u;
        while (2)
        {
          v46 = *v19;
          v47 = *(_QWORD *)(v3 + v46);
          v48 = v47 + 1;
          if (v47 == -1 || v48 > *(_QWORD *)(v3 + *v7))
          {
            *(_BYTE *)(v3 + *v20) = 1;
          }
          else
          {
            v49 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v47);
            *(_QWORD *)(v3 + v46) = v48;
            v45 |= (unint64_t)(v49 & 0x7F) << v43;
            if (v49 < 0)
            {
              v43 += 7;
              v29 = v44++ >= 9;
              if (v29)
              {
                LODWORD(v45) = 0;
                goto LABEL_87;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v20))
          LODWORD(v45) = 0;
LABEL_87:
        *(_DWORD *)(a1 + 84) = v45;
        goto LABEL_102;
      case 3:
        if (!v33)
          goto LABEL_82;
        if ((*(_WORD *)(a1 + 88) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_123;
          v54 = *(_WORD *)(a1 + 88) << 10;
          goto LABEL_100;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_123;
        v50 = objc_alloc_init(GEORPFeedbackDetails);
        if (!GEORPFeedbackDetailsReadAllFrom((uint64_t)v50, (void *)v3, v11 & 1))
          goto LABEL_122;
        PBReaderRecallMark();
        v51 = 48;
        goto LABEL_80;
      case 4:
        if (!v33)
          goto LABEL_82;
        if ((*(_WORD *)(a1 + 88) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_123;
          v54 = *(_WORD *)(a1 + 88) << 12;
          goto LABEL_100;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_123;
        v50 = objc_alloc_init(GEORPFeedbackCommonContext);
        if (!GEORPFeedbackCommonContextReadAllFrom((uint64_t)v50, (void *)v3, v11 & 1))
          goto LABEL_122;
        PBReaderRecallMark();
        v51 = 32;
        goto LABEL_80;
      case 5:
        if (!v33)
          goto LABEL_82;
        if ((*(_WORD *)(a1 + 88) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_123;
          v54 = *(_WORD *)(a1 + 88) << 11;
          goto LABEL_100;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_123;
        v50 = objc_alloc_init(GEORPFeedbackCommonCorrections);
        if (!GEORPFeedbackCommonCorrectionsReadAllFrom((uint64_t)v50, (void *)v3, v11 & 1))
          goto LABEL_122;
        PBReaderRecallMark();
        v51 = 40;
        goto LABEL_80;
      case 6:
        if (!v33)
          goto LABEL_82;
        if ((*(_WORD *)(a1 + 88) & 0x80) == 0)
        {
          PBReaderReadString();
          v38 = objc_claimAutoreleasedReturnValue();
          v39 = 64;
LABEL_74:
          v52 = *(void **)(a1 + v39);
          *(_QWORD *)(a1 + v39) = v38;
          goto LABEL_81;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_123;
        v54 = *(_WORD *)(a1 + 88) << 8;
        goto LABEL_100;
      case 7:
        if (!v33)
          goto LABEL_82;
        if ((*(_WORD *)(a1 + 88) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_123;
          v54 = *(_WORD *)(a1 + 88) << 9;
LABEL_100:
          v8 += v54 >> 15;
LABEL_101:
          v20 = (int *)MEMORY[0x1E0D82BC8];
          v7 = (int *)MEMORY[0x1E0D82BD8];
LABEL_102:
          if (!(v62 & 1 | (v8 != 0)))
            goto LABEL_103;
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_123;
        v50 = objc_alloc_init(GEORPFeedbackDynamicForm);
        if (GEORPFeedbackDynamicFormReadAllFrom((uint64_t)v50, (void *)v3, v11 & 1))
        {
          PBReaderRecallMark();
          v51 = 56;
LABEL_80:
          v52 = *(void **)(a1 + v51);
          *(_QWORD *)(a1 + v51) = v50;
LABEL_81:

          --v8;
          goto LABEL_101;
        }
LABEL_122:

LABEL_123:
        v59 = 0;
        v20 = (int *)MEMORY[0x1E0D82BC8];
LABEL_104:
        v60 = &OBJC_IVAR___GEOTransitVehicleInfo__pickupDropoffType;
        if ((v61 & 1) != 0)
LABEL_105:
          *(_WORD *)(a1 + v60[463]) |= 2u;
        if (v64 & 1 | ((v59 & 1) == 0))
        {
          *(_WORD *)(a1 + v60[463]) |= 4u;
          *(_WORD *)(a1 + v60[463]) |= 0x20u;
          *(_WORD *)(a1 + v60[463]) |= 8u;
          *(_WORD *)(a1 + v60[463]) |= 0x10u;
          *(_WORD *)(a1 + v60[463]) |= 0x80u;
          *(_WORD *)(a1 + v60[463]) |= 0x40u;
        }
        else if (v18)
        {
          while (1)
          {
            v55 = *v18++;
            v56 = 4;
            switch(v55)
            {
              case 0:
                goto LABEL_116;
              case 1:
                goto LABEL_115;
              case 3:
                v56 = 32;
                goto LABEL_115;
              case 4:
                v56 = 8;
                goto LABEL_115;
              case 5:
                v56 = 16;
                goto LABEL_115;
              case 6:
                v56 = 128;
                goto LABEL_115;
              case 7:
                v56 = 64;
LABEL_115:
                *(_WORD *)(a1 + v60[463]) |= v56;
                break;
              default:
                continue;
            }
          }
        }
LABEL_116:
        if (v59)
          v3 = *(_BYTE *)(v3 + *v20) == 0;
        else
          v3 = 0;
        if ((v64 & 1) != 0)
        {
          v57 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      default:
        if ((v61 & 1) == 0 || (*(_WORD *)(a1 + 88) & 2) != 0)
        {
LABEL_82:
          v53 = PBReaderSkipValueWithTag();
          v7 = (int *)MEMORY[0x1E0D82BD8];
          v20 = (int *)MEMORY[0x1E0D82BC8];
          if ((v53 & 1) == 0)
          {
            v59 = 0;
            goto LABEL_104;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v40 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v41 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v40;

          }
          v42 = PBUnknownFieldAdd();
          v20 = (int *)MEMORY[0x1E0D82BC8];
          v7 = (int *)MEMORY[0x1E0D82BD8];
          if (!v42)
          {
            v59 = 0;
            v60 = &OBJC_IVAR___GEOTransitVehicleInfo__pickupDropoffType;
            goto LABEL_105;
          }
        }
        goto LABEL_102;
    }
  }
}

void sub_188A6A528(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A6A66C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A6A7B0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A6A8F4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A6AA34(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A6B624(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORPFeedbackSubmissionParametersCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  objc_msgSend(a1[6], "readAll:", 1);
  objc_msgSend(a1[4], "readAll:", 1);
  objc_msgSend(a1[5], "readAll:", 1);
  return objc_msgSend(a1[7], "readAll:", 1);
}

unint64_t GEORPFeedbackSubmissionParametersReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 76))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEORPFeedbackSubmissionParametersReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 80));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 72) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 76) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEORPFeedbackSubmissionParametersReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEORPFeedbackSubmissionParametersReadAllFrom_initialTag;
  Specified = GEORPFeedbackSubmissionParametersReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEORPFeedbackSubmissionParametersCallReadAllRecursiveWithoutSynchronized((id *)a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 80));
  return Specified;
}

void sub_188A6B81C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackSubmissionParametersReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORPFeedbackSubmissionParametersReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188A6B87C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A6BAAC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL _GEORPFeedbackSubmissionParametersIsDirty(uint64_t a1)
{
  __int16 v2;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  v2 = *(_WORD *)(a1 + 88);
  if ((v2 & 0x104) != 0)
    return 1;
  if ((v2 & 0x20) != 0)
  {
    if ((GEORPFeedbackDetailsIsDirty(*(os_unfair_lock_s **)(a1 + 48)) & 1) != 0)
      return 1;
    v2 = *(_WORD *)(a1 + 88);
  }
  if ((v2 & 8) != 0)
  {
    if ((GEORPFeedbackCommonContextIsDirty(*(os_unfair_lock_s **)(a1 + 32)) & 1) != 0)
      return 1;
    v2 = *(_WORD *)(a1 + 88);
  }
  if ((v2 & 0x10) == 0)
    goto LABEL_12;
  if (GEORPFeedbackCommonCorrectionsIsDirty(*(_QWORD *)(a1 + 40)))
    return 1;
  v2 = *(_WORD *)(a1 + 88);
LABEL_12:
  if ((v2 & 0x80) != 0)
    return 1;
  return (v2 & 0x40) != 0 && GEORPFeedbackDynamicFormIsDirty(*(_QWORD *)(a1 + 56));
}

os_unfair_lock_s *GEORPFeedbackSubmissionParametersIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  _BOOL8 IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEORPFeedbackSubmissionParametersIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 20);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_188A6BFF0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A6C434(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A6C708(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackSubmissionResultReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  char v17;
  unsigned __int8 v18;
  char v19;
  int *v20;
  int *v21;
  int *v22;
  int *v23;
  char v24;
  unsigned int v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  int v32;
  unint64_t v34;
  BOOL v35;
  int *v36;
  int v37;
  int v38;
  BOOL v39;
  uint64_t v40;
  void *v41;
  id v42;
  void *v43;
  int v44;
  GEORPFeedbackImageIdMapEntry *v45;
  uint64_t v46;
  char v47;
  char v48;
  int v49;
  char v50;
  void *v51;
  int v53;
  int *v54;
  char v55;
  char v56;
  char v57;
  BOOL v58;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 76);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 72));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = (vaddv_s16((int16x4_t)(*(_QWORD *)&vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int8 *)(a1 + 84)), (uint16x4_t)0xFFFAFFFCFFFFFFFELL) & 0xFF01FF01FF01FF01))+ (*(_BYTE *)(a1 + 84) & 1)+ ((*(_BYTE *)(a1 + 84) & 8) != 0)+ ((*(_BYTE *)(a1 + 84) & 0x20) != 0));
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 > 3;
        v17 = v16 & ~(_BYTE)v11 | v9;
        v18 = v16 | v11;
        v55 = v17;
        v19 = v18 | v17;
        if (((v18 | v8) & 1) != 0)
          v20 = 0;
        else
          v20 = a3;
        v58 = v18;
        v56 = v19;
        v57 = (v20 == 0) | v18;
        v21 = (int *)MEMORY[0x1E0D82BF0];
        v22 = (int *)MEMORY[0x1E0D82BC8];
        v23 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v7;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v21) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v22))
      goto LABEL_90;
    v24 = 0;
    v25 = 0;
    v26 = 0;
    while (1)
    {
      v27 = *v21;
      v28 = *(_QWORD *)(v3 + v27);
      v29 = v28 + 1;
      if (v28 == -1 || v29 > *(_QWORD *)(v3 + *v6))
        break;
      v30 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v28);
      *(_QWORD *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0)
        goto LABEL_25;
      v24 += 7;
      if (v25++ >= 9)
      {
        v26 = 0;
        v32 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v22) = 1;
LABEL_25:
    v32 = *(unsigned __int8 *)(v3 + *v22);
    if (*(_BYTE *)(v3 + *v22))
      v26 = 0;
LABEL_27:
    if (v32 || (v26 & 7) == 4)
    {
LABEL_90:
      v53 = 1;
      goto LABEL_91;
    }
    v34 = v26 >> 3;
    v35 = v58;
    if ((v57 & 1) == 0)
    {
      v36 = v20;
      do
      {
        v38 = *v36++;
        v37 = v38;
        v35 = v38 != 0;
        if (v38)
          v39 = v37 == (_DWORD)v34;
        else
          v39 = 1;
      }
      while (!v39);
    }
    switch((int)v34)
    {
      case 1:
        if (!v35)
          goto LABEL_75;
        if ((*(_BYTE *)(a1 + 84) & 2) == 0)
        {
          PBReaderReadString();
          v40 = objc_claimAutoreleasedReturnValue();
          v41 = *(void **)(a1 + 24);
          *(_QWORD *)(a1 + 24) = v40;
          goto LABEL_74;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_110;
        v48 = *(_BYTE *)(a1 + 84) << 6;
        goto LABEL_87;
      case 2:
        if (!v35 || (*(_BYTE *)(a1 + 84) & 4) != 0)
          goto LABEL_75;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_110;
        v45 = objc_alloc_init(GEORPFeedbackImageIdMapEntry);
        if (!GEORPFeedbackImageIdMapEntryReadAllFrom((uint64_t)v45, (void *)v3, v10 & 1))
          goto LABEL_109;
        PBReaderRecallMark();
        -[GEORPFeedbackSubmissionResult _addNoFlagsImageIdMapEntry:](a1, v45);

        goto LABEL_88;
      case 3:
        if (!v35)
          goto LABEL_75;
        if ((*(_BYTE *)(a1 + 84) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_110;
          v48 = 8 * *(_BYTE *)(a1 + 84);
          goto LABEL_87;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_110;
        v45 = objc_alloc_init(GEORPRapProfileInfo);
        if (!GEORPRapProfileInfoReadAllFrom((uint64_t)v45, (void *)v3, v10 & 1))
          goto LABEL_109;
        PBReaderRecallMark();
        v46 = 48;
        goto LABEL_73;
      case 4:
        if (!v35)
          goto LABEL_75;
        if ((*(_BYTE *)(a1 + 84) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_110;
          v48 = 2 * *(_BYTE *)(a1 + 84);
          goto LABEL_87;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_110;
        v45 = objc_alloc_init(GEORPThirdPartyPhotoSharingPreferenceUpdateResult);
        if (!GEORPThirdPartyPhotoSharingPreferenceUpdateResultReadAllFrom((uint64_t)v45, (void *)v3, v10 & 1))goto LABEL_109;
        PBReaderRecallMark();
        v46 = 64;
        goto LABEL_73;
      case 5:
        if (!v35)
          goto LABEL_75;
        if ((*(_BYTE *)(a1 + 84) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_110;
          v48 = 16 * *(_BYTE *)(a1 + 84);
          goto LABEL_87;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_110;
        v45 = objc_alloc_init(GEORPPhotoAttributionPreferencesUpdateResult);
        if (!GEORPPhotoAttributionPreferencesUpdateResultReadAllFrom((uint64_t)v45, (void *)v3, v10 & 1))
          goto LABEL_109;
        PBReaderRecallMark();
        v46 = 40;
        goto LABEL_73;
      case 6:
        if (!v35)
          goto LABEL_75;
        if ((*(_BYTE *)(a1 + 84) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_110;
          v48 = 4 * *(_BYTE *)(a1 + 84);
LABEL_87:
          v7 += v48 >> 7;
LABEL_88:
          v22 = (int *)MEMORY[0x1E0D82BC8];
LABEL_89:
          if (!(v56 & 1 | (v7 != 0)))
            goto LABEL_90;
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_110;
        v45 = objc_alloc_init(GEORPTdmFraudRequestInfo);
        if (GEORPTdmFraudRequestInfoReadAllFrom((uint64_t)v45, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          v46 = 56;
LABEL_73:
          v41 = *(void **)(a1 + v46);
          *(_QWORD *)(a1 + v46) = v45;
LABEL_74:

          --v7;
          goto LABEL_88;
        }
LABEL_109:

LABEL_110:
        v53 = 0;
        v22 = (int *)MEMORY[0x1E0D82BC8];
LABEL_91:
        v54 = &OBJC_IVAR___GEOTransitVehicleInfo__pickupDropoffType;
        if ((v55 & 1) != 0)
LABEL_92:
          *(_BYTE *)(a1 + v54[476]) |= 1u;
        if (v58 || (v53 & 1) == 0)
        {
          *(_BYTE *)(a1 + v54[476]) |= 2u;
          *(_BYTE *)(a1 + v54[476]) |= 4u;
          *(_BYTE *)(a1 + v54[476]) |= 0x10u;
          *(_BYTE *)(a1 + v54[476]) |= 0x40u;
          *(_BYTE *)(a1 + v54[476]) |= 8u;
          *(_BYTE *)(a1 + v54[476]) |= 0x20u;
        }
        else if (v20)
        {
          while (1)
          {
            v49 = *v20++;
            v50 = 2;
            switch(v49)
            {
              case 0:
                goto LABEL_103;
              case 1:
                goto LABEL_102;
              case 2:
                v50 = 4;
                goto LABEL_102;
              case 3:
                v50 = 16;
                goto LABEL_102;
              case 4:
                v50 = 64;
                goto LABEL_102;
              case 5:
                v50 = 8;
                goto LABEL_102;
              case 6:
                v50 = 32;
LABEL_102:
                *(_BYTE *)(a1 + v54[476]) |= v50;
                break;
              default:
                continue;
            }
          }
        }
LABEL_103:
        if (v53)
          v3 = *(_BYTE *)(v3 + *v22) == 0;
        else
          v3 = 0;
        if (v58)
        {
          v51 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      default:
        if ((v55 & 1) == 0 || (*(_BYTE *)(a1 + 84) & 1) != 0)
        {
LABEL_75:
          v47 = PBReaderSkipValueWithTag();
          v22 = (int *)MEMORY[0x1E0D82BC8];
          if ((v47 & 1) == 0)
          {
            v53 = 0;
            goto LABEL_91;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v42 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v43 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v42;

          }
          v44 = PBUnknownFieldAdd();
          v22 = (int *)MEMORY[0x1E0D82BC8];
          if (!v44)
          {
            v53 = 0;
            v54 = &OBJC_IVAR___GEOTransitVehicleInfo__pickupDropoffType;
            goto LABEL_92;
          }
        }
        goto LABEL_89;
    }
  }
}

void sub_188A6D040(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A6D374(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A6D4B8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A6D5F8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A6D738(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A6E218(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORPFeedbackSubmissionResultCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _BYTE v12[128];
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  v8 = 0u;
  v9 = 0u;
  v10 = 0u;
  v11 = 0u;
  v2 = a1[4];
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v9;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v9 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v8 + 1) + 8 * v6++), "readAll:", 1, (_QWORD)v8);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
    }
    while (v4);
  }

  objc_msgSend(a1[6], "readAll:", 1);
  objc_msgSend(a1[8], "readAll:", 1);
  objc_msgSend(a1[5], "readAll:", 1);
  return objc_msgSend(a1[7], "readAll:", 1);
}

unint64_t GEORPFeedbackSubmissionResultReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 76))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEORPFeedbackSubmissionResultReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 80));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 72) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 76) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEORPFeedbackSubmissionResultReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEORPFeedbackSubmissionResultReadAllFrom_initialTag;
  Specified = GEORPFeedbackSubmissionResultReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEORPFeedbackSubmissionResultCallReadAllRecursiveWithoutSynchronized((id *)a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 80));
  return Specified;
}

void sub_188A6E4F0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackSubmissionResultReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORPFeedbackSubmissionResultReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188A6E550(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPRapProfileInfoIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  _BOOL8 v17;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      if ((v8 >> 3) == 2 || (v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOLocalizedStringIsValid(a1))
        {
LABEL_27:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_27;
      }
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

BOOL GEORPTdmFraudRequestInfoIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  _BOOL8 v17;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (!a1[*v4])
    {
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2)
            goto LABEL_37;
          goto LABEL_28;
        case 2u:
          if (v15 == 2)
            goto LABEL_28;
          goto LABEL_37;
        case 3u:
          if (v15 == 2)
            goto LABEL_28;
          goto LABEL_37;
        case 4u:
          if (v15 == 2)
            goto LABEL_28;
          goto LABEL_37;
        case 5u:
          if (v15 == 2)
            goto LABEL_28;
          goto LABEL_37;
        case 6u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPTdmUserMapsStatusIsValid(a1))
            goto LABEL_37;
          PBReaderRecallMark();
          goto LABEL_29;
        default:
LABEL_28:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_37:
            PBReaderRecallMark();
            return 0;
          }
LABEL_29:
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_35;
          break;
      }
    }
  }
LABEL_35:
  v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

void sub_188A6EC10(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORPFeedbackSubmissionResultIsDirty(uint64_t a1)
{
  char v2;
  uint64_t v3;
  id v5;
  uint64_t v6;
  uint64_t i;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _BYTE v12[128];
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  v2 = *(_BYTE *)(a1 + 84);
  if ((v2 & 0x86) != 0)
    return 1;
  if ((*(_BYTE *)(a1 + 84) & 0x10) != 0)
  {
    if ((GEORPRapProfileInfoIsDirty(*(os_unfair_lock_s **)(a1 + 48)) & 1) != 0)
      return 1;
    v2 = *(_BYTE *)(a1 + 84);
  }
  if ((v2 & 0x40) != 0)
  {
    if (GEORPThirdPartyPhotoSharingPreferenceUpdateResultIsDirty(*(_QWORD *)(a1 + 64)))
      return 1;
    v2 = *(_BYTE *)(a1 + 84);
  }
  if ((v2 & 8) != 0)
  {
    if ((GEORPPhotoAttributionPreferencesUpdateResultIsDirty(*(os_unfair_lock_s **)(a1 + 40)) & 1) != 0)
      return 1;
    v2 = *(_BYTE *)(a1 + 84);
  }
  if ((v2 & 0x20) == 0)
    goto LABEL_16;
  if (GEORPTdmFraudRequestInfoIsDirty(*(_QWORD *)(a1 + 56)))
    return 1;
  v2 = *(_BYTE *)(a1 + 84);
LABEL_16:
  if ((v2 & 4) == 0)
    return 0;
  v10 = 0u;
  v11 = 0u;
  v8 = 0u;
  v9 = 0u;
  v5 = *(id *)(a1 + 32);
  v3 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
  if (v3)
  {
    v6 = *(_QWORD *)v9;
    while (2)
    {
      for (i = 0; i != v3; ++i)
      {
        if (*(_QWORD *)v9 != v6)
          objc_enumerationMutation(v5);
        if (GEORPFeedbackImageIdMapEntryIsDirty(*(_QWORD *)(*((_QWORD *)&v8 + 1) + 8 * i)))
        {
          v3 = 1;
          goto LABEL_28;
        }
      }
      v3 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
      if (v3)
        continue;
      break;
    }
  }
LABEL_28:

  return v3;
}

os_unfair_lock_s *GEORPFeedbackSubmissionResultIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEORPFeedbackSubmissionResultIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 20);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_188A6F270(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A6F6D0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackTdmFraudNotificationResultReadAllFrom(uint64_t a1, void *a2)
{
  unsigned __int8 *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  int v8;
  char v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  char v17;
  BOOL v18;
  id v19;
  void *v20;
  _BOOL8 v21;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    v7 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      v8 = v3[*v6];
      if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
        break;
      if (v3[*v6])
      {
        v8 = 1;
        break;
      }
      v9 = 0;
      v10 = 0;
      v11 = 0;
      while (1)
      {
        v12 = *v4;
        v13 = *(_QWORD *)&v3[v12];
        v14 = v13 + 1;
        if (v13 == -1 || v14 > *(_QWORD *)&v3[*v5])
          break;
        v15 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v13);
        *(_QWORD *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0)
          goto LABEL_13;
        v9 += 7;
        if (v10++ >= 9)
        {
          v17 = 0;
          v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      v8 = v3[*v6];
      if (v3[*v6])
        v17 = 0;
      else
        v17 = v11;
LABEL_16:
      if (v8)
        v18 = 1;
      else
        v18 = (v17 & 7) == 4;
      if (v18)
        break;
      if (!*(_QWORD *)(a1 + 8))
      {
        v19 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v20 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = v19;

      }
      if ((PBUnknownFieldAdd() & 1) == 0)
        goto LABEL_23;
    }
    v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_188A6FD20(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackTdmFraudNotificationResultReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORPFeedbackTdmFraudNotificationResultReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188A6FD80(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A70068(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackUserInfoReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  char v17;
  unsigned __int8 v18;
  int *v19;
  int *v20;
  int *v21;
  int *v22;
  int *v23;
  char v24;
  unsigned int v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  int v32;
  unint64_t v34;
  BOOL v35;
  int *v36;
  int v37;
  int v38;
  BOOL v39;
  GEORPUserCredentials *v40;
  uint64_t v41;
  id v42;
  void *v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  char v48;
  __int16 v49;
  int v50;
  __int16 v51;
  void *v52;
  int v54;
  char v55;
  char v56;
  char v57;
  BOOL v58;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 96));
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 92);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 88));
  v6 = 0;
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = *(unsigned __int16 *)(a1 + 100);
  v12 = ((v11 >> 5) & 1)
      + (v11 & 1)
      + (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(v11), (uint16x4_t)0xFFFDFFF8FFF9FFFELL), (int8x8_t)0x1000100010001))+ ((v11 >> 6) & 1)+ ((v11 >> 1) & 1)+ ((v11 >> 4) & 1));
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v6])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v7 = 1;
        goto LABEL_7;
      case -2:
        v14 = v9;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 > 5;
        v17 = v16 & ~(_BYTE)v10 | v8;
        v18 = v16 | v10;
        v55 = v17;
        v56 = v18 | v17;
        if (((v18 | v7) & 1) != 0)
          v19 = 0;
        else
          v19 = a3;
        v57 = (v19 == 0) | v18;
        v58 = v18;
        v20 = (int *)MEMORY[0x1E0D82BF0];
        v21 = (int *)MEMORY[0x1E0D82BC8];
        v22 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v8;
LABEL_8:
        v14 = v9;
        v15 = v10;
LABEL_10:
        ++v6;
        v8 = v13;
        v9 = v14;
        v10 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    v23 = (int *)MEMORY[0x1E0D82BD8];
    if (*(_QWORD *)(v3 + *v20) >= *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) || *(_BYTE *)(v3 + *v21))
      goto LABEL_101;
    v24 = 0;
    v25 = 0;
    v26 = 0;
    while (1)
    {
      v27 = *v20;
      v28 = *(_QWORD *)(v3 + v27);
      v29 = v28 + 1;
      if (v28 == -1 || v29 > *(_QWORD *)(v3 + *v23))
        break;
      v30 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v28);
      *(_QWORD *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0)
        goto LABEL_25;
      v24 += 7;
      if (v25++ >= 9)
      {
        v26 = 0;
        v32 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v21) = 1;
LABEL_25:
    v32 = *(unsigned __int8 *)(v3 + *v21);
    if (*(_BYTE *)(v3 + *v21))
      v26 = 0;
LABEL_27:
    if (v32 || (v26 & 7) == 4)
    {
LABEL_101:
      v54 = 1;
      goto LABEL_102;
    }
    v34 = v26 >> 3;
    v35 = v58;
    if ((v57 & 1) == 0)
    {
      v36 = v19;
      do
      {
        v38 = *v36++;
        v37 = v38;
        v35 = v38 != 0;
        if (v38)
          v39 = v37 == (_DWORD)v34;
        else
          v39 = 1;
      }
      while (!v39);
    }
    switch((int)v34)
    {
      case 1:
        if (!v35)
          goto LABEL_80;
        if ((*(_WORD *)(a1 + 100) & 0x80) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_123;
          v40 = objc_alloc_init(GEORPUserCredentials);
          if (GEORPUserCredentialsReadAllFrom((uint64_t)v40, (void *)v3, v9 & 1))
          {
            PBReaderRecallMark();
            v41 = 72;
            goto LABEL_78;
          }
          goto LABEL_122;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_123;
        v49 = *(_WORD *)(a1 + 100) << 8;
        goto LABEL_98;
      case 2:
        if (!v35)
          goto LABEL_80;
        if ((*(_WORD *)(a1 + 100) & 4) == 0)
        {
          PBReaderReadData();
          v45 = objc_claimAutoreleasedReturnValue();
          v46 = 32;
          goto LABEL_62;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_123;
        v49 = *(_WORD *)(a1 + 100) << 13;
        goto LABEL_98;
      case 3:
        if (!v35)
          goto LABEL_80;
        if ((*(_WORD *)(a1 + 100) & 0x100) == 0)
        {
          PBReaderReadString();
          v45 = objc_claimAutoreleasedReturnValue();
          v46 = 80;
          goto LABEL_62;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_123;
        v49 = *(_WORD *)(a1 + 100) << 7;
        goto LABEL_98;
      case 4:
        if (!v35)
          goto LABEL_80;
        if ((*(_WORD *)(a1 + 100) & 8) == 0)
        {
          PBReaderReadString();
          v45 = objc_claimAutoreleasedReturnValue();
          v46 = 40;
          goto LABEL_62;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_123;
        v49 = *(_WORD *)(a1 + 100) << 12;
        goto LABEL_98;
      case 5:
        if (!v35)
          goto LABEL_80;
        if ((*(_WORD *)(a1 + 100) & 0x40) == 0)
        {
          PBReaderReadString();
          v45 = objc_claimAutoreleasedReturnValue();
          v46 = 64;
LABEL_62:
          v47 = *(void **)(a1 + v46);
          *(_QWORD *)(a1 + v46) = v45;
          goto LABEL_79;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_123;
        v49 = *(_WORD *)(a1 + 100) << 9;
        goto LABEL_98;
      case 6:
        if (!v35)
          goto LABEL_80;
        if ((*(_WORD *)(a1 + 100) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_123;
          v49 = *(_WORD *)(a1 + 100) << 14;
          goto LABEL_98;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_123;
        v40 = objc_alloc_init(GEORPAppAttestInfo);
        if (!GEORPAppAttestInfoReadAllFrom((uint64_t)v40, (void *)v3, v9 & 1))
          goto LABEL_122;
        PBReaderRecallMark();
        v41 = 24;
        goto LABEL_78;
      case 7:
        if (!v35)
          goto LABEL_80;
        if ((*(_WORD *)(a1 + 100) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_123;
          v49 = *(_WORD *)(a1 + 100) << 11;
          goto LABEL_98;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_123;
        v40 = objc_alloc_init(GEORPAppAttestInfo);
        if (!GEORPAppAttestInfoReadAllFrom((uint64_t)v40, (void *)v3, v9 & 1))
          goto LABEL_122;
        PBReaderRecallMark();
        v41 = 48;
        goto LABEL_78;
      case 8:
        if (!v35)
          goto LABEL_80;
        if ((*(_WORD *)(a1 + 100) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_123;
          v49 = *(_WORD *)(a1 + 100) << 10;
LABEL_98:
          v6 += v49 >> 15;
LABEL_99:
          v21 = (int *)MEMORY[0x1E0D82BC8];
LABEL_100:
          if (!(v56 & 1 | (v6 != 0)))
            goto LABEL_101;
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_123;
        v40 = objc_alloc_init(GEORPTdmInfo);
        if (GEORPTdmInfoReadAllFrom((uint64_t)v40, (void *)v3, v9 & 1))
        {
          PBReaderRecallMark();
          v41 = 56;
LABEL_78:
          v47 = *(void **)(a1 + v41);
          *(_QWORD *)(a1 + v41) = v40;
LABEL_79:

          --v6;
          goto LABEL_99;
        }
LABEL_122:

LABEL_123:
        v54 = 0;
        v21 = (int *)MEMORY[0x1E0D82BC8];
LABEL_102:
        if ((v55 & 1) != 0)
LABEL_103:
          *(_WORD *)(a1 + 100) |= 1u;
        if (v58 || (v54 & 1) == 0)
        {
          *(_WORD *)(a1 + 100) |= 0x80u;
          *(_WORD *)(a1 + 100) |= 4u;
          *(_WORD *)(a1 + 100) |= 0x100u;
          *(_WORD *)(a1 + 100) |= 8u;
          *(_WORD *)(a1 + 100) |= 0x40u;
          *(_WORD *)(a1 + 100) |= 2u;
          *(_WORD *)(a1 + 100) |= 0x10u;
          *(_WORD *)(a1 + 100) |= 0x20u;
        }
        else if (v19)
        {
          while (1)
          {
            v50 = *v19++;
            v51 = 128;
            switch(v50)
            {
              case 0:
                goto LABEL_116;
              case 1:
                goto LABEL_115;
              case 2:
                v51 = 4;
                goto LABEL_115;
              case 3:
                v51 = 256;
                goto LABEL_115;
              case 4:
                v51 = 8;
                goto LABEL_115;
              case 5:
                v51 = 64;
                goto LABEL_115;
              case 6:
                v51 = 2;
                goto LABEL_115;
              case 7:
                v51 = 16;
                goto LABEL_115;
              case 8:
                v51 = 32;
LABEL_115:
                *(_WORD *)(a1 + 100) |= v51;
                break;
              default:
                continue;
            }
          }
        }
LABEL_116:
        if (v54)
          v3 = *(_BYTE *)(v3 + *v21) == 0;
        else
          v3 = 0;
        if (v58)
        {
          v52 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      default:
        if ((v55 & 1) == 0 || (*(_WORD *)(a1 + 100) & 1) != 0)
        {
LABEL_80:
          v48 = PBReaderSkipValueWithTag();
          v21 = (int *)MEMORY[0x1E0D82BC8];
          if ((v48 & 1) == 0)
          {
            v54 = 0;
            goto LABEL_102;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v42 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v43 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v42;

          }
          v44 = PBUnknownFieldAdd();
          v21 = (int *)MEMORY[0x1E0D82BC8];
          if (!v44)
          {
            v54 = 0;
            goto LABEL_103;
          }
        }
        goto LABEL_100;
    }
  }
}

void sub_188A70A48(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A70B8C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A70CCC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A70E10(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A70F54(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A71094(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A711D8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A71C04(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORPFeedbackUserInfoCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  objc_msgSend(a1[9], "readAll:", 1);
  objc_msgSend(a1[3], "readAll:", 1);
  objc_msgSend(a1[6], "readAll:", 1);
  return objc_msgSend(a1[7], "readAll:", 1);
}

unint64_t GEORPFeedbackUserInfoReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 92))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEORPFeedbackUserInfoReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 96));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 88) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 92) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEORPFeedbackUserInfoReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEORPFeedbackUserInfoReadAllFrom_initialTag;
  Specified = GEORPFeedbackUserInfoReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEORPFeedbackUserInfoCallReadAllRecursiveWithoutSynchronized((id *)a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 96));
  return Specified;
}

void sub_188A71DFC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackUserInfoReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORPFeedbackUserInfoReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188A71E5C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPTdmInfoIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  _BOOL8 v28;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2)
            goto LABEL_46;
          goto LABEL_32;
        case 2u:
          if ((v8 & 7) != 0)
            goto LABEL_46;
          v17 = 0;
          while (1)
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
              goto LABEL_42;
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if (v21 < 0)
            {
              v22 = v17++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_43;
          }
        case 3u:
          if (v15 == 2)
            goto LABEL_32;
          goto LABEL_46;
        case 4u:
          if (v15 == 2)
            goto LABEL_32;
          goto LABEL_46;
        case 5u:
          if ((v8 & 7) != 0)
            goto LABEL_46;
          v23 = 0;
          break;
        default:
LABEL_32:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_46:
          v28 = 0;
          goto LABEL_45;
      }
      while (1)
      {
        v24 = *v2;
        v25 = *(_QWORD *)&a1[v24];
        v26 = v25 + 1;
        if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
          break;
        v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
        *(_QWORD *)&a1[v24] = v26;
        if (v27 < 0)
        {
          v22 = v23++ > 8;
          if (!v22)
            continue;
        }
        goto LABEL_43;
      }
LABEL_42:
      a1[*v4] = 1;
LABEL_43:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v28 = a1[*v4] == 0;
LABEL_45:
  PBReaderRecallMark();
  return v28;
}

void sub_188A7232C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL _GEORPFeedbackUserInfoIsDirty(uint64_t a1)
{
  __int16 v2;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 96));
  v2 = *(_WORD *)(a1 + 100);
  if ((v2 & 0x200) != 0)
    return 1;
  if ((v2 & 0x80) != 0)
  {
    if (GEORPUserCredentialsIsDirty(*(_QWORD *)(a1 + 72)))
      return 1;
    v2 = *(_WORD *)(a1 + 100);
  }
  if ((v2 & 0x14C) != 0)
    return 1;
  if ((v2 & 2) != 0)
  {
    if (GEORPAppAttestInfoIsDirty(*(_QWORD *)(a1 + 24)))
      return 1;
    v2 = *(_WORD *)(a1 + 100);
  }
  if ((v2 & 0x10) != 0)
  {
    if (GEORPAppAttestInfoIsDirty(*(_QWORD *)(a1 + 48)))
      return 1;
    v2 = *(_WORD *)(a1 + 100);
  }
  return (v2 & 0x20) != 0 && GEORPTdmInfoIsDirty(*(_QWORD *)(a1 + 56));
}

os_unfair_lock_s *GEORPFeedbackUserInfoIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  _BOOL8 IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEORPFeedbackUserInfoIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 24);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_188A727E0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A72C24(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPGroundViewCorrectionsReadAllFrom(uint64_t a1, void *a2, int a3)
{
  char *v5;
  int *v6;
  int *v7;
  int *v8;
  int *v9;
  char v10;
  unsigned int v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  BOOL v17;
  int v18;
  char v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  GEORPFeedbackAddressFields *v27;
  void *v28;
  id v29;
  void *v30;
  _BOOL8 v31;

  v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    v6 = (int *)MEMORY[0x1E0D82BF0];
    v7 = (int *)MEMORY[0x1E0D82BD8];
    v8 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v5[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v5[*MEMORY[0x1E0D82BD8]])
    {
      v9 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v5[*v8])
          break;
        v10 = 0;
        v11 = 0;
        v12 = 0;
        while (1)
        {
          v13 = *v6;
          v14 = *(_QWORD *)&v5[v13];
          v15 = v14 + 1;
          if (v14 == -1 || v15 > *(_QWORD *)&v5[*v7])
            break;
          v16 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v14);
          *(_QWORD *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0)
            goto LABEL_13;
          v10 += 7;
          v17 = v11++ >= 9;
          if (v17)
          {
            v12 = 0;
            v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        v18 = v5[*v8];
        if (v5[*v8])
          v12 = 0;
LABEL_15:
        if (v18 || (v12 & 7) == 4)
          break;
        if ((v12 >> 3) == 2)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_42;
          v27 = objc_alloc_init(GEORPFeedbackAddressFields);
          if (!GEORPFeedbackAddressFieldsReadAllFrom((uint64_t)v27, v5, a3))
          {

            goto LABEL_42;
          }
          PBReaderRecallMark();
          v28 = *(void **)(a1 + 16);
          *(_QWORD *)(a1 + 16) = v27;

        }
        else if ((v12 >> 3) == 1)
        {
          v20 = 0;
          v21 = 0;
          v22 = 0;
          *(_BYTE *)(a1 + 28) |= 1u;
          while (1)
          {
            v23 = *v6;
            v24 = *(_QWORD *)&v5[v23];
            v25 = v24 + 1;
            if (v24 == -1 || v25 > *(_QWORD *)&v5[*v7])
              break;
            v26 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v24);
            *(_QWORD *)&v5[v23] = v25;
            v22 |= (unint64_t)(v26 & 0x7F) << v20;
            if ((v26 & 0x80) == 0)
              goto LABEL_36;
            v20 += 7;
            v17 = v21++ >= 9;
            if (v17)
            {
              LODWORD(v22) = 0;
              goto LABEL_38;
            }
          }
          v5[*v8] = 1;
LABEL_36:
          if (v5[*v8])
            LODWORD(v22) = 0;
LABEL_38:
          *(_DWORD *)(a1 + 24) = v22;
        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v29 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v30 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v29;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_42;
        }
      }
      while (*(_QWORD *)&v5[*v6] < *(_QWORD *)&v5[*v7]);
    }
    v31 = v5[*v8] == 0;
  }
  else
  {
LABEL_42:
    v31 = 0;
  }
  objc_sync_exit(v5);

  return v31;
}

void sub_188A7381C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPGroundViewCorrectionsReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORPGroundViewCorrectionsReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188A7387C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPGroundViewCorrectionsIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  _BOOL8 v23;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      if ((v8 >> 3) == 2)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEORPFeedbackAddressFieldsIsValid(a1))
        {
LABEL_38:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0)
          goto LABEL_38;
        v17 = 0;
        while (1)
        {
          v18 = *v2;
          v19 = *(_QWORD *)&a1[v18];
          v20 = v19 + 1;
          if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
            break;
          v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
          *(_QWORD *)&a1[v18] = v20;
          if (v21 < 0 && v17++ <= 8)
            continue;
          goto LABEL_35;
        }
        a1[*v4] = 1;
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_38;
      }
LABEL_35:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v23 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v23;
}

void sub_188A74048(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPGroundViewFeedbackReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  char v17;
  unsigned __int8 v18;
  char v19;
  int *v20;
  int *v21;
  int *v22;
  int *v23;
  char v24;
  unsigned int v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  int v32;
  unint64_t v34;
  BOOL v35;
  int *v36;
  int v37;
  int v38;
  BOOL v39;
  GEORPGroundViewFeedbackContext *v40;
  uint64_t v41;
  void *v42;
  id v43;
  void *v44;
  int v45;
  char v46;
  char v47;
  char v48;
  int v49;
  int v50;
  void *v51;
  int v53;
  int *v54;
  char v55;
  char v56;
  char v57;
  BOOL v58;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1)
      + (*(_BYTE *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1);
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v7 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 != 0;
        v17 = v16 & ~(_BYTE)v11 | v9;
        v18 = v16 | v11;
        v55 = v17;
        v19 = v18 | v17;
        if (((v18 | v7) & 1) != 0)
          v20 = 0;
        else
          v20 = a3;
        v58 = v18;
        v56 = v19;
        v57 = (v20 == 0) | v18;
        v21 = (int *)MEMORY[0x1E0D82BF0];
        v22 = (int *)MEMORY[0x1E0D82BC8];
        v23 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v8;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v21) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v22))
      goto LABEL_66;
    v24 = 0;
    v25 = 0;
    v26 = 0;
    while (1)
    {
      v27 = *v21;
      v28 = *(_QWORD *)(v3 + v27);
      v29 = v28 + 1;
      if (v28 == -1 || v29 > *(_QWORD *)(v3 + *v6))
        break;
      v30 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v28);
      *(_QWORD *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0)
        goto LABEL_25;
      v24 += 7;
      if (v25++ >= 9)
      {
        v26 = 0;
        v32 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v22) = 1;
LABEL_25:
    v32 = *(unsigned __int8 *)(v3 + *v22);
    if (*(_BYTE *)(v3 + *v22))
      v26 = 0;
LABEL_27:
    if (v32 || (v26 & 7) == 4)
    {
LABEL_66:
      v53 = 1;
      goto LABEL_67;
    }
    v34 = v26 >> 3;
    v35 = v58;
    if ((v57 & 1) == 0)
    {
      v36 = v20;
      do
      {
        v38 = *v36++;
        v37 = v38;
        v35 = v38 != 0;
        if (v38)
          v39 = v37 == (_DWORD)v34;
        else
          v39 = 1;
      }
      while (!v39);
    }
    if ((_DWORD)v34 == 2)
      break;
    if ((_DWORD)v34 == 1)
    {
      if (!v35)
        goto LABEL_57;
      if ((*(_BYTE *)(a1 + 52) & 2) == 0)
      {
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_86;
        v40 = objc_alloc_init(GEORPGroundViewFeedbackContext);
        if (!GEORPGroundViewFeedbackContextReadAllFrom((uint64_t)v40, (void *)v3, v10 & 1))
          goto LABEL_85;
        PBReaderRecallMark();
        v41 = 24;
LABEL_50:
        v42 = *(void **)(a1 + v41);
        *(_QWORD *)(a1 + v41) = v40;

        --v8;
LABEL_64:
        v22 = (int *)MEMORY[0x1E0D82BC8];
        goto LABEL_65;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        goto LABEL_86;
      v47 = *(_BYTE *)(a1 + 52) << 6;
LABEL_63:
      v8 += v47 >> 7;
      goto LABEL_64;
    }
    if ((v55 & 1) == 0 || (*(_BYTE *)(a1 + 52) & 1) != 0)
    {
LABEL_57:
      v46 = PBReaderSkipValueWithTag();
      v22 = (int *)MEMORY[0x1E0D82BC8];
      if ((v46 & 1) == 0)
      {
        v53 = 0;
        goto LABEL_67;
      }
      goto LABEL_65;
    }
    if (!*(_QWORD *)(a1 + 16))
    {
      v43 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
      v44 = *(void **)(a1 + 16);
      *(_QWORD *)(a1 + 16) = v43;

    }
    v45 = PBUnknownFieldAdd();
    v22 = (int *)MEMORY[0x1E0D82BC8];
    if (!v45)
    {
      v53 = 0;
      v54 = &OBJC_IVAR___GEOTransitVehicleInfo__pickupDropoffType;
      goto LABEL_68;
    }
LABEL_65:
    if (!(v56 & 1 | (v8 != 0)))
      goto LABEL_66;
  }
  if (!v35)
    goto LABEL_57;
  if ((*(_BYTE *)(a1 + 52) & 4) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0)
      goto LABEL_86;
    v47 = 32 * *(_BYTE *)(a1 + 52);
    goto LABEL_63;
  }
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_86;
  v40 = objc_alloc_init(GEORPGroundViewCorrections);
  if (GEORPGroundViewCorrectionsReadAllFrom((uint64_t)v40, (void *)v3, v10 & 1))
  {
    PBReaderRecallMark();
    v41 = 32;
    goto LABEL_50;
  }
LABEL_85:

LABEL_86:
  v53 = 0;
  v22 = (int *)MEMORY[0x1E0D82BC8];
LABEL_67:
  v54 = &OBJC_IVAR___GEOTransitVehicleInfo__pickupDropoffType;
  if ((v55 & 1) == 0)
    goto LABEL_69;
LABEL_68:
  *(_BYTE *)(a1 + v54[506]) |= 1u;
LABEL_69:
  if (v58 || (v53 & 1) == 0)
  {
    *(_BYTE *)(a1 + v54[506]) |= 2u;
    *(_BYTE *)(a1 + v54[506]) |= 4u;
    goto LABEL_79;
  }
  if (v20)
  {
    while (1)
    {
      v50 = *v20++;
      v49 = v50;
      if (v50 == 1)
        break;
      if (v49 == 2)
      {
        v48 = 4;
LABEL_75:
        *(_BYTE *)(a1 + v54[506]) |= v48;
      }
      else if (!v49)
      {
        goto LABEL_79;
      }
    }
    v48 = 2;
    goto LABEL_75;
  }
LABEL_79:
  if (v53)
    v3 = *(_BYTE *)(v3 + *v22) == 0;
  else
    v3 = 0;
  if (v58)
  {
    v51 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_188A746DC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A74CD0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPGroundViewFeedbackReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEORPGroundViewFeedbackReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEORPGroundViewFeedbackReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEORPGroundViewFeedbackReadAllFrom_initialTag;
  Specified = GEORPGroundViewFeedbackReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    objc_msgSend(*(id *)(a1 + 24), "readAll:", 1);
    objc_msgSend(*(id *)(a1 + 32), "readAll:", 1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_188A74E88(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPGroundViewFeedbackReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORPGroundViewFeedbackReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188A74EE8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPGroundViewFeedbackContextIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  BOOL v13;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  int v26;
  unsigned int v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  int v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  int v37;
  _BOOL8 v38;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (!a1[*v4])
    {
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        v13 = v7++ >= 9;
        if (v13)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 2u:
          if (v15 == 2 && PBReaderPlaceMark() && GEOPDMuninViewStateIsValid(a1))
            goto LABEL_57;
          goto LABEL_71;
        case 4u:
          if ((v8 & 7) != 0)
            goto LABEL_71;
          v17 = 0;
          while (1)
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
              goto LABEL_50;
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if (v21 < 0)
            {
              v22 = v17++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_58;
          }
        case 5u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPGroundViewImageResourceIsValid(a1))
            goto LABEL_71;
          goto LABEL_57;
        case 6u:
          if (v15 == 2)
          {
            if (!PBReaderPlaceMark())
            {
LABEL_71:
              PBReaderRecallMark();
              return 0;
            }
LABEL_61:
            while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
            {
              v33 = a1[*v4];
              if (a1[*v4])
                break;
              while (1)
              {
                v34 = *v2;
                v35 = *(_QWORD *)&a1[v34];
                v36 = v35 + 1;
                if (v35 == -1 || v36 > *(_QWORD *)&a1[*v3])
                  break;
                v37 = *(char *)(*(_QWORD *)&a1[*v5] + v35);
                *(_QWORD *)&a1[v34] = v36;
                if (v37 < 0)
                {
                  v13 = v33++ >= 9;
                  if (!v13)
                    continue;
                }
                goto LABEL_61;
              }
              a1[*v4] = 1;
            }
LABEL_57:
            PBReaderRecallMark();
          }
          else
          {
            if ((v8 & 7) != 0)
              goto LABEL_71;
            while (1)
            {
              v23 = *v2;
              v24 = *(_QWORD *)&a1[v23];
              v25 = v24 + 1;
              if (v24 == -1 || v25 > *(_QWORD *)&a1[*v3])
                break;
              v26 = *(char *)(*(_QWORD *)&a1[*v5] + v24);
              *(_QWORD *)&a1[v23] = v25;
              if (v26 < 0)
              {
                v27 = v15++;
                if (v27 <= 8)
                  continue;
              }
              goto LABEL_58;
            }
LABEL_50:
            a1[*v4] = 1;
          }
LABEL_58:
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_70;
          break;
        case 7u:
          if ((v8 & 7) != 0)
            goto LABEL_71;
          v28 = 0;
          while (1)
          {
            v29 = *v2;
            v30 = *(_QWORD *)&a1[v29];
            v31 = v30 + 1;
            if (v30 == -1 || v31 > *(_QWORD *)&a1[*v3])
              goto LABEL_50;
            v32 = *(char *)(*(_QWORD *)&a1[*v5] + v30);
            *(_QWORD *)&a1[v29] = v31;
            if (v32 < 0)
            {
              v22 = v28++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_58;
          }
        case 8u:
          if (v15 == 2)
            goto LABEL_52;
          goto LABEL_71;
        case 0xAu:
          if (v15 == 2 && PBReaderPlaceMark() && GEORPFeatureHandleIsValid(a1))
            goto LABEL_57;
          goto LABEL_71;
        default:
LABEL_52:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_71;
          goto LABEL_58;
      }
    }
  }
LABEL_70:
  v38 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v38;
}

void sub_188A75450(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORPGroundViewFeedbackIsDirty(uint64_t a1)
{
  unsigned int v2;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v2 = *(unsigned __int8 *)(a1 + 52);
  if ((v2 & 8) != 0)
    return 1;
  if ((v2 & 2) != 0)
  {
    if ((GEORPGroundViewFeedbackContextIsDirty(*(os_unfair_lock_s **)(a1 + 24)) & 1) != 0)
      return 1;
    v2 = *(unsigned __int8 *)(a1 + 52);
  }
  return (v2 >> 2) & 1;
}

os_unfair_lock_s *GEORPGroundViewFeedbackIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEORPGroundViewFeedbackIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 12);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_188A75744(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A75990(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A75C64(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPGroundViewFeedbackContextReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  char v17;
  char v18;
  int *v19;
  int *v20;
  char v21;
  int *v22;
  int *v23;
  char v24;
  unsigned int v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  BOOL v31;
  int v32;
  int v33;
  unint64_t v35;
  BOOL v36;
  int *v37;
  int v38;
  int v39;
  BOOL v40;
  GEOPDMuninViewState *v41;
  void *v42;
  id v43;
  void *v44;
  int v45;
  char v46;
  unsigned int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  char v52;
  char v53;
  unsigned int v54;
  uint64_t v55;
  int *v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  char v60;
  char v61;
  unsigned int v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  char v67;
  uint64_t v68;
  void *v69;
  char v70;
  __int16 v71;
  char v72;
  unsigned int v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  char v78;
  int v79;
  __int16 v80;
  void *v81;
  char v83;
  char v84;
  int v85;
  char v86;
  char v87;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 96));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 92);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 88));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 104)), (uint16x4_t)0xFFFCFFFDFFFAFFFBLL), (int8x8_t)0x1000100010001))+ ((*(_WORD *)(a1 + 104) >> 7) & 1)+ ((*(_WORD *)(a1 + 104) >> 2) & 1));
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 > 3;
        v17 = v16 & ~(_BYTE)v11 | v9;
        v18 = v16 | v11;
        v19 = (int *)MEMORY[0x1E0D82BF0];
        if ((((v16 | v11) | v8) & 1) != 0)
          v20 = 0;
        else
          v20 = a3;
        v85 = 1;
        v21 = v17;
        if (*(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(v3 + *v6))
          goto LABEL_128;
        v83 = v17;
        v86 = v18 | v17;
        v87 = (v20 == 0) | v18;
        v22 = (int *)MEMORY[0x1E0D82BC8];
        v23 = (int *)MEMORY[0x1E0D82BB8];
        v84 = v18;
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v7;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_BYTE *)(v3 + *v22))
      goto LABEL_126;
    v24 = 0;
    v25 = 0;
    v26 = 0;
    while (1)
    {
      v27 = *v19;
      v28 = *(_QWORD *)(v3 + v27);
      v29 = v28 + 1;
      if (v28 == -1 || v29 > *(_QWORD *)(v3 + *v6))
        break;
      v30 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v28);
      *(_QWORD *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0)
        goto LABEL_25;
      v24 += 7;
      v31 = v25++ >= 9;
      if (v31)
      {
        v26 = 0;
        v32 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v22) = 1;
LABEL_25:
    v32 = *(unsigned __int8 *)(v3 + *v22);
    if (*(_BYTE *)(v3 + *v22))
      v26 = 0;
LABEL_27:
    v33 = v26 & 7;
    if (v32 || v33 == 4)
    {
LABEL_126:
      v85 = 1;
      goto LABEL_127;
    }
    v35 = v26 >> 3;
    v36 = v18;
    if ((v87 & 1) == 0)
    {
      v37 = v20;
      do
      {
        v39 = *v37++;
        v38 = v39;
        v36 = v39 != 0;
        if (v39)
          v40 = v38 == (_DWORD)v35;
        else
          v40 = 1;
      }
      while (!v40);
    }
    switch((int)v35)
    {
      case 2:
        if (!v36)
          goto LABEL_96;
        if ((*(_WORD *)(a1 + 104) & 0x40) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_146;
          v41 = objc_alloc_init(GEOPDMuninViewState);
          if (GEOPDMuninViewStateReadAllFrom((uint64_t)v41, (void *)v3, v10 & 1))
          {
            PBReaderRecallMark();
            v42 = *(void **)(a1 + 72);
            *(_QWORD *)(a1 + 72) = v41;

            --v7;
            goto LABEL_111;
          }
          goto LABEL_145;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_146;
        v71 = *(_WORD *)(a1 + 104) << 9;
        goto LABEL_110;
      case 4:
        if ((v8 & 1) == 0)
          goto LABEL_96;
        v46 = 0;
        v47 = 0;
        v48 = 0;
        *(_WORD *)(a1 + 104) |= 2u;
        v22 = (int *)MEMORY[0x1E0D82BC8];
        while (2)
        {
          v49 = *v19;
          v50 = *(_QWORD *)(v3 + v49);
          v51 = v50 + 1;
          if (v50 == -1 || v51 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v22) = 1;
          }
          else
          {
            v52 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v50);
            *(_QWORD *)(v3 + v49) = v51;
            v48 |= (unint64_t)(v52 & 0x7F) << v46;
            if (v52 < 0)
            {
              v46 += 7;
              v31 = v47++ >= 9;
              if (v31)
              {
                LODWORD(v48) = 0;
                goto LABEL_101;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v22))
          LODWORD(v48) = 0;
LABEL_101:
        *(_DWORD *)(a1 + 100) = v48;
        goto LABEL_113;
      case 5:
        if (!v36 || (*(_WORD *)(a1 + 104) & 0x20) != 0)
          goto LABEL_96;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_146;
        v41 = objc_alloc_init(GEORPGroundViewImageResource);
        if (!GEORPGroundViewImageResourceReadAllFrom((uint64_t)v41, (void *)v3))
          goto LABEL_145;
        PBReaderRecallMark();
        -[GEORPGroundViewFeedbackContext _addNoFlagsOnscreenImageResource:](a1, v41);
        goto LABEL_95;
      case 6:
        if (!v36 || (*(_WORD *)(a1 + 104) & 8) != 0)
          goto LABEL_96;
        if (v33 == 2)
        {
          if (!PBReaderPlaceMark())
            goto LABEL_146;
          v22 = (int *)MEMORY[0x1E0D82BC8];
          while (*(_QWORD *)(v3 + *v19) < *(_QWORD *)(v3 + *v6))
          {
            if (*(_BYTE *)(v3 + *v22))
              break;
            v53 = 0;
            v54 = 0;
            v55 = 0;
            v56 = (int *)MEMORY[0x1E0D82BB8];
            while (1)
            {
              v57 = *v19;
              v58 = *(_QWORD *)(v3 + v57);
              v59 = v58 + 1;
              if (v58 == -1 || v59 > *(_QWORD *)(v3 + *v6))
                break;
              v60 = *(_BYTE *)(*(_QWORD *)(v3 + *v56) + v58);
              *(_QWORD *)(v3 + v57) = v59;
              v55 |= (unint64_t)(v60 & 0x7F) << v53;
              if (v60 < 0)
              {
                v53 += 7;
                v31 = v54++ >= 9;
                if (!v31)
                  continue;
              }
              goto LABEL_77;
            }
            *(_BYTE *)(v3 + *v22) = 1;
LABEL_77:
            PBRepeatedUInt64Add();
          }
          PBReaderRecallMark();
        }
        else
        {
          v72 = 0;
          v73 = 0;
          v74 = 0;
          v22 = (int *)MEMORY[0x1E0D82BC8];
          while (1)
          {
            v75 = *v19;
            v76 = *(_QWORD *)(v3 + v75);
            v77 = v76 + 1;
            if (v76 == -1 || v77 > *(_QWORD *)(v3 + *v6))
              break;
            v78 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v76);
            *(_QWORD *)(v3 + v75) = v77;
            v74 |= (unint64_t)(v78 & 0x7F) << v72;
            if (v78 < 0)
            {
              v72 += 7;
              v31 = v73++ >= 9;
              if (!v31)
                continue;
            }
            goto LABEL_124;
          }
          *(_BYTE *)(v3 + *v22) = 1;
LABEL_124:
          PBRepeatedUInt64Add();
        }
        v18 = v84;
        goto LABEL_112;
      case 7:
        if ((v8 & 1) == 0)
          goto LABEL_96;
        v61 = 0;
        v62 = 0;
        v63 = 0;
        *(_WORD *)(a1 + 104) |= 1u;
        v22 = (int *)MEMORY[0x1E0D82BC8];
        while (2)
        {
          v64 = *v19;
          v65 = *(_QWORD *)(v3 + v64);
          v66 = v65 + 1;
          if (v65 == -1 || v66 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v22) = 1;
          }
          else
          {
            v67 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v65);
            *(_QWORD *)(v3 + v64) = v66;
            v63 |= (unint64_t)(v67 & 0x7F) << v61;
            if (v67 < 0)
            {
              v61 += 7;
              v31 = v62++ >= 9;
              if (v31)
              {
                v63 = 0;
                goto LABEL_105;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v22))
          v63 = 0;
LABEL_105:
        *(_QWORD *)(a1 + 56) = v63;
        goto LABEL_113;
      case 8:
        if (!v36)
          goto LABEL_96;
        if ((*(_WORD *)(a1 + 104) & 0x10) == 0)
        {
          PBReaderReadString();
          v68 = objc_claimAutoreleasedReturnValue();
          v69 = *(void **)(a1 + 48);
          *(_QWORD *)(a1 + 48) = v68;

          v23 = (int *)MEMORY[0x1E0D82BB8];
          v18 = v84;
          --v7;
          v22 = (int *)MEMORY[0x1E0D82BC8];
          goto LABEL_113;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_146;
        v71 = *(_WORD *)(a1 + 104) << 11;
LABEL_110:
        v7 += v71 >> 15;
        goto LABEL_111;
      case 10:
        if (!v36 || (*(_WORD *)(a1 + 104) & 0x80) != 0)
          goto LABEL_96;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_146;
        v41 = objc_alloc_init(GEORPFeatureHandle);
        if (GEORPFeatureHandleReadAllFrom((uint64_t)v41, (void *)v3))
        {
          PBReaderRecallMark();
          -[GEORPGroundViewFeedbackContext _addNoFlagsVisibleFeatureHandle:](a1, v41);
LABEL_95:

LABEL_111:
          v18 = v84;
          v22 = (int *)MEMORY[0x1E0D82BC8];
LABEL_112:
          v23 = (int *)MEMORY[0x1E0D82BB8];
LABEL_113:
          if (!(v86 & 1 | (v7 != 0)) || *(_QWORD *)(v3 + *v19) >= *(_QWORD *)(v3 + *v6))
            goto LABEL_126;
          continue;
        }
LABEL_145:

LABEL_146:
        v85 = 0;
        v18 = v84;
LABEL_127:
        v21 = v83;
LABEL_128:
        if ((v21 & 1) != 0)
LABEL_129:
          *(_WORD *)(a1 + 104) |= 4u;
        if (v18 & 1 | ((v85 & 1) == 0))
        {
          *(_WORD *)(a1 + 104) |= 0x40u;
          *(_WORD *)(a1 + 104) |= 0x20u;
          *(_WORD *)(a1 + 104) |= 8u;
          *(_WORD *)(a1 + 104) |= 0x10u;
          *(_WORD *)(a1 + 104) |= 0x80u;
        }
        else if (v20)
        {
          while (1)
          {
            v79 = *v20++;
            v80 = 64;
            switch(v79)
            {
              case 0:
                goto LABEL_139;
              case 2:
                goto LABEL_138;
              case 5:
                v80 = 32;
                goto LABEL_138;
              case 6:
                v80 = 8;
                goto LABEL_138;
              case 8:
                v80 = 16;
                goto LABEL_138;
              case 10:
                v80 = 128;
LABEL_138:
                *(_WORD *)(a1 + 104) |= v80;
                break;
              default:
                continue;
            }
          }
        }
LABEL_139:
        if (v85)
        {
          v3 = *(_BYTE *)(v3 + (int)*MEMORY[0x1E0D82BC8]) == 0;
          if ((v18 & 1) == 0)
            return v3;
LABEL_143:
          v81 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        else
        {
          v3 = 0;
          if ((v18 & 1) != 0)
            goto LABEL_143;
        }
        return v3;
      default:
        if ((v83 & 1) == 0 || (*(_WORD *)(a1 + 104) & 4) != 0)
        {
LABEL_96:
          v70 = PBReaderSkipValueWithTag();
          v23 = (int *)MEMORY[0x1E0D82BB8];
          v18 = v84;
          v22 = (int *)MEMORY[0x1E0D82BC8];
          if ((v70 & 1) == 0)
          {
            v85 = 0;
            goto LABEL_127;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v43 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v44 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v43;

          }
          v45 = PBUnknownFieldAdd();
          v18 = v84;
          v22 = (int *)MEMORY[0x1E0D82BC8];
          v23 = (int *)MEMORY[0x1E0D82BB8];
          if (!v45)
          {
            v85 = 0;
            goto LABEL_129;
          }
        }
        goto LABEL_113;
    }
  }
}

void sub_188A7687C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A76BB0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A76F58(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A7709C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A77FDC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEORPGroundViewFeedbackContextCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  _BYTE v20[128];
  _BYTE v21[128];
  uint64_t v22;

  v22 = *MEMORY[0x1E0C80C00];
  objc_msgSend(a1[9], "readAll:", 1);
  v18 = 0u;
  v19 = 0u;
  v16 = 0u;
  v17 = 0u;
  v2 = a1[8];
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v16, v21, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v17;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v17 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v16 + 1) + 8 * v6++), "readAll:", 1);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v16, v21, 16);
    }
    while (v4);
  }

  v14 = 0u;
  v15 = 0u;
  v12 = 0u;
  v13 = 0u;
  v7 = a1[10];
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v12, v20, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v13;
    do
    {
      v11 = 0;
      do
      {
        if (*(_QWORD *)v13 != v10)
          objc_enumerationMutation(v7);
        objc_msgSend(*(id *)(*((_QWORD *)&v12 + 1) + 8 * v11++), "readAll:", 1, (_QWORD)v12);
      }
      while (v9 != v11);
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v12, v20, 16);
    }
    while (v9);
  }

}

unint64_t GEORPGroundViewFeedbackContextReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 92))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEORPGroundViewFeedbackContextReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 96));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 88) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 92) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEORPGroundViewFeedbackContextReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEORPGroundViewFeedbackContextReadAllFrom_initialTag;
  Specified = GEORPGroundViewFeedbackContextReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEORPGroundViewFeedbackContextCallReadAllRecursiveWithoutSynchronized((id *)a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 96));
  return Specified;
}

void sub_188A78318(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPGroundViewFeedbackContextReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORPGroundViewFeedbackContextReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188A78378(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPGroundViewImageResourceIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  unint64_t v16;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  int v32;
  _BOOL8 v33;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_48;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      if (v14 || (v8 & 7) == 4)
        goto LABEL_48;
      v16 = v8 >> 3;
      if ((v8 >> 3) == 3)
        break;
      if ((_DWORD)v16 == 2)
      {
        if ((v8 & 7) != 0)
          goto LABEL_50;
        v28 = 0;
        while (1)
        {
          v29 = *v2;
          v30 = *(_QWORD *)&a1[v29];
          v31 = v30 + 1;
          if (v30 == -1 || v31 > *(_QWORD *)&a1[*v3])
            goto LABEL_45;
          v32 = *(char *)(*(_QWORD *)&a1[*v5] + v30);
          *(_QWORD *)&a1[v29] = v31;
          if (v32 < 0)
          {
            v22 = v28++ > 8;
            if (!v22)
              continue;
          }
          goto LABEL_47;
        }
      }
      if ((_DWORD)v16 == 1)
      {
        if ((v8 & 7) != 0)
          goto LABEL_50;
        v17 = 0;
        while (1)
        {
          v18 = *v2;
          v19 = *(_QWORD *)&a1[v18];
          v20 = v19 + 1;
          if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
            break;
          v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
          *(_QWORD *)&a1[v18] = v20;
          if (v21 < 0)
          {
            v22 = v17++ > 8;
            if (!v22)
              continue;
          }
          goto LABEL_47;
        }
LABEL_45:
        a1[*v4] = 1;
        goto LABEL_47;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_50:
        v33 = 0;
        goto LABEL_49;
      }
LABEL_47:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_48;
    }
    if ((v8 & 7) != 0)
      goto LABEL_50;
    v23 = 0;
    while (1)
    {
      v24 = *v2;
      v25 = *(_QWORD *)&a1[v24];
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
        goto LABEL_45;
      v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
      *(_QWORD *)&a1[v24] = v26;
      if (v27 < 0)
      {
        v22 = v23++ > 8;
        if (!v22)
          continue;
      }
      goto LABEL_47;
    }
  }
LABEL_48:
  v33 = a1[*v4] == 0;
LABEL_49:
  PBReaderRecallMark();
  return v33;
}

void sub_188A78974(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORPGroundViewFeedbackContextIsDirty(uint64_t a1)
{
  unsigned int v2;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 96));
  v2 = *(unsigned __int16 *)(a1 + 104);
  if ((v2 & 0x100) != 0)
    return 1;
  if ((v2 & 0x40) != 0)
  {
    if ((GEOPDMuninViewStateIsDirty(*(os_unfair_lock_s **)(a1 + 72)) & 1) != 0)
      return 1;
    v2 = *(unsigned __int16 *)(a1 + 104);
  }
  if ((v2 & 0x38) != 0)
    return 1;
  return (v2 >> 7) & 1;
}

os_unfair_lock_s *GEORPGroundViewFeedbackContextIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEORPGroundViewFeedbackContextIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 24);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_188A78FE8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A7958C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPGroundViewImageResourceReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  unint64_t v18;
  char v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  BOOL v26;
  int *v27;
  char v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  char v34;
  unsigned int v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  id v40;
  void *v41;
  _BOOL8 v42;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      while (1)
      {
        if (v3[*v6])
          goto LABEL_59;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          goto LABEL_59;
        v18 = v10 >> 3;
        if ((v10 >> 3) == 3)
        {
          v28 = 0;
          v29 = 0;
          v21 = 0;
          *(_BYTE *)(a1 + 28) |= 2u;
          while (1)
          {
            v30 = *v4;
            v31 = *(_QWORD *)&v3[v30];
            v32 = v31 + 1;
            if (v31 == -1 || v32 > *(_QWORD *)&v3[*v5])
              break;
            v33 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v31);
            *(_QWORD *)&v3[v30] = v32;
            v21 |= (unint64_t)(v33 & 0x7F) << v28;
            if ((v33 & 0x80) == 0)
            {
              v27 = &OBJC_IVAR___GEORPGroundViewImageResource__loadStatus;
              goto LABEL_51;
            }
            v28 += 7;
            v26 = v29++ > 8;
            if (v26)
            {
              LODWORD(v21) = 0;
              v27 = &OBJC_IVAR___GEORPGroundViewImageResource__loadStatus;
              goto LABEL_53;
            }
          }
          v27 = &OBJC_IVAR___GEORPGroundViewImageResource__loadStatus;
LABEL_50:
          v3[*v6] = 1;
          goto LABEL_51;
        }
        if ((_DWORD)v18 == 2)
          break;
        if ((_DWORD)v18 == 1)
        {
          v19 = 0;
          v20 = 0;
          v21 = 0;
          *(_BYTE *)(a1 + 28) |= 1u;
          while (1)
          {
            v22 = *v4;
            v23 = *(_QWORD *)&v3[v22];
            v24 = v23 + 1;
            if (v23 == -1 || v24 > *(_QWORD *)&v3[*v5])
            {
              v27 = &OBJC_IVAR___GEORPGroundViewImageResource__cameraNumber;
              goto LABEL_50;
            }
            v25 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v23);
            *(_QWORD *)&v3[v22] = v24;
            v21 |= (unint64_t)(v25 & 0x7F) << v19;
            if ((v25 & 0x80) == 0)
              break;
            v19 += 7;
            v26 = v20++ > 8;
            if (v26)
            {
              LODWORD(v21) = 0;
              v27 = &OBJC_IVAR___GEORPGroundViewImageResource__cameraNumber;
              goto LABEL_53;
            }
          }
          v27 = &OBJC_IVAR___GEORPGroundViewImageResource__cameraNumber;
          goto LABEL_51;
        }
        if (!*(_QWORD *)(a1 + 8))
        {
          v40 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
          v41 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = v40;

        }
        if ((PBUnknownFieldAdd() & 1) == 0)
          goto LABEL_60;
LABEL_54:
        if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
          goto LABEL_59;
      }
      v34 = 0;
      v35 = 0;
      v21 = 0;
      *(_BYTE *)(a1 + 28) |= 4u;
      while (1)
      {
        v36 = *v4;
        v37 = *(_QWORD *)&v3[v36];
        v38 = v37 + 1;
        if (v37 == -1 || v38 > *(_QWORD *)&v3[*v5])
        {
          v27 = &OBJC_IVAR___GEORPGroundViewImageResource__lod;
          goto LABEL_50;
        }
        v39 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v37);
        *(_QWORD *)&v3[v36] = v38;
        v21 |= (unint64_t)(v39 & 0x7F) << v34;
        if ((v39 & 0x80) == 0)
          break;
        v34 += 7;
        v26 = v35++ > 8;
        if (v26)
        {
          LODWORD(v21) = 0;
          v27 = &OBJC_IVAR___GEORPGroundViewImageResource__lod;
          goto LABEL_53;
        }
      }
      v27 = &OBJC_IVAR___GEORPGroundViewImageResource__lod;
LABEL_51:
      if (v3[*v6])
        LODWORD(v21) = 0;
LABEL_53:
      *(_DWORD *)(a1 + *v27) = v21;
      goto LABEL_54;
    }
LABEL_59:
    v42 = v3[*v6] == 0;
  }
  else
  {
LABEL_60:
    v42 = 0;
  }
  objc_sync_exit(v3);

  return v42;
}

void sub_188A7A2FC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPGroundViewImageResourceReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORPGroundViewImageResourceReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188A7A35C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A7A9DC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPLocalityFeedbackReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  char v17;
  unsigned __int8 v18;
  char v19;
  int *v20;
  int *v21;
  int *v22;
  int *v23;
  char v24;
  unsigned int v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  int v32;
  unint64_t v34;
  BOOL v35;
  int *v36;
  int v37;
  int v38;
  BOOL v39;
  GEOPDPlace *v40;
  uint64_t v41;
  void *v42;
  id v43;
  void *v44;
  int v45;
  char v46;
  char v47;
  int v48;
  int v49;
  void *v50;
  int v52;
  int *v53;
  char v54;
  char v55;
  char v56;
  BOOL v57;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1)
      + (*(_BYTE *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1);
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v7 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 != 0;
        v17 = v16 & ~(_BYTE)v11 | v9;
        v18 = v16 | v11;
        v54 = v17;
        v19 = v18 | v17;
        if (((v18 | v7) & 1) != 0)
          v20 = 0;
        else
          v20 = a3;
        v57 = v18;
        v55 = v19;
        v56 = (v20 == 0) | v18;
        v21 = (int *)MEMORY[0x1E0D82BF0];
        v22 = (int *)MEMORY[0x1E0D82BC8];
        v23 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v8;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v21) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v22))
      goto LABEL_66;
    v24 = 0;
    v25 = 0;
    v26 = 0;
    while (1)
    {
      v27 = *v21;
      v28 = *(_QWORD *)(v3 + v27);
      v29 = v28 + 1;
      if (v28 == -1 || v29 > *(_QWORD *)(v3 + *v6))
        break;
      v30 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v28);
      *(_QWORD *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0)
        goto LABEL_25;
      v24 += 7;
      if (v25++ >= 9)
      {
        v26 = 0;
        v32 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v22) = 1;
LABEL_25:
    v32 = *(unsigned __int8 *)(v3 + *v22);
    if (*(_BYTE *)(v3 + *v22))
      v26 = 0;
LABEL_27:
    if (v32 || (v26 & 7) == 4)
    {
LABEL_66:
      v52 = 1;
      goto LABEL_67;
    }
    v34 = v26 >> 3;
    v35 = v57;
    if ((v56 & 1) == 0)
    {
      v36 = v20;
      do
      {
        v38 = *v36++;
        v37 = v38;
        v35 = v38 != 0;
        if (v38)
          v39 = v37 == (_DWORD)v34;
        else
          v39 = 1;
      }
      while (!v39);
    }
    if ((_DWORD)v34 == 2)
      break;
    if ((_DWORD)v34 == 1)
    {
      if (!v35)
        goto LABEL_57;
      if ((*(_BYTE *)(a1 + 52) & 4) == 0)
      {
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_85;
        v40 = objc_alloc_init(GEOPDPlace);
        if (!GEOPDPlaceReadAllFrom((uint64_t)v40, (void *)v3, v10 & 1))
          goto LABEL_84;
        PBReaderRecallMark();
        v41 = 32;
LABEL_50:
        v42 = *(void **)(a1 + v41);
        *(_QWORD *)(a1 + v41) = v40;

        --v8;
LABEL_64:
        v22 = (int *)MEMORY[0x1E0D82BC8];
        goto LABEL_65;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        goto LABEL_85;
      v47 = 32 * *(_BYTE *)(a1 + 52);
LABEL_63:
      v8 += v47 >> 7;
      goto LABEL_64;
    }
    if ((v54 & 1) == 0 || (*(_BYTE *)(a1 + 52) & 1) != 0)
    {
LABEL_57:
      v46 = PBReaderSkipValueWithTag();
      v22 = (int *)MEMORY[0x1E0D82BC8];
      if ((v46 & 1) == 0)
      {
        v52 = 0;
        goto LABEL_67;
      }
      goto LABEL_65;
    }
    if (!*(_QWORD *)(a1 + 16))
    {
      v43 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
      v44 = *(void **)(a1 + 16);
      *(_QWORD *)(a1 + 16) = v43;

    }
    v45 = PBUnknownFieldAdd();
    v22 = (int *)MEMORY[0x1E0D82BC8];
    if (!v45)
    {
      v52 = 0;
      v53 = &OBJC_IVAR___GEOTransitVehicleInfo__pickupDropoffType;
      goto LABEL_68;
    }
LABEL_65:
    if (!(v55 & 1 | (v8 != 0)))
      goto LABEL_66;
  }
  if (!v35)
    goto LABEL_57;
  if ((*(_BYTE *)(a1 + 52) & 2) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0)
      goto LABEL_85;
    v47 = *(_BYTE *)(a1 + 52) << 6;
    goto LABEL_63;
  }
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_85;
  v40 = objc_alloc_init(GEOPDPlaceRequest);
  if (GEOPDPlaceRequestReadAllFrom((uint64_t)v40, (void *)v3, v10 & 1))
  {
    PBReaderRecallMark();
    v41 = 24;
    goto LABEL_50;
  }
LABEL_84:

LABEL_85:
  v52 = 0;
  v22 = (int *)MEMORY[0x1E0D82BC8];
LABEL_67:
  v53 = &OBJC_IVAR___GEOTransitVehicleInfo__pickupDropoffType;
  if ((v54 & 1) == 0)
    goto LABEL_69;
LABEL_68:
  *(_BYTE *)(a1 + v53[532]) |= 1u;
LABEL_69:
  if (v57 || (v52 & 1) == 0)
  {
    *(_BYTE *)(a1 + v53[532]) |= 4u;
    *(_BYTE *)(a1 + v53[532]) |= 2u;
    goto LABEL_78;
  }
  if (v20)
  {
    while (1)
    {
      v49 = *v20++;
      v48 = v49;
      if (v49 == 1)
        break;
      if (v48 == 2)
      {
LABEL_74:
        *(_BYTE *)(a1 + v53[532]) |= v48;
      }
      else if (!v48)
      {
        goto LABEL_78;
      }
    }
    LOBYTE(v48) = 4;
    goto LABEL_74;
  }
LABEL_78:
  if (v52)
    v3 = *(_BYTE *)(v3 + *v22) == 0;
  else
    v3 = 0;
  if (v57)
  {
    v50 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_188A7B064(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A7B640(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPLocalityFeedbackReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEORPLocalityFeedbackReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEORPLocalityFeedbackReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEORPLocalityFeedbackReadAllFrom_initialTag;
  Specified = GEORPLocalityFeedbackReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    objc_msgSend(*(id *)(a1 + 32), "readAll:", 1);
    objc_msgSend(*(id *)(a1 + 24), "readAll:", 1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_188A7B7F8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPLocalityFeedbackReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORPLocalityFeedbackReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188A7B858(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A7B9DC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORPLocalityFeedbackIsDirty(uint64_t a1)
{
  char v2;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v2 = *(_BYTE *)(a1 + 52);
  if ((v2 & 8) != 0)
    return 1;
  if ((*(_BYTE *)(a1 + 52) & 4) != 0)
  {
    if ((GEOPDPlaceIsDirty(*(os_unfair_lock_s **)(a1 + 32)) & 1) != 0)
      return 1;
    v2 = *(_BYTE *)(a1 + 52);
  }
  if ((v2 & 2) != 0)
    return (uint64_t)GEOPDPlaceRequestIsDirty(*(os_unfair_lock_s **)(a1 + 24));
  else
    return 0;
}

os_unfair_lock_s *GEORPLocalityFeedbackIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEORPLocalityFeedbackIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 12);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_188A7BD5C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A7BFA8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A7C22C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPMerchantLookupFeedbackReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  char v17;
  unsigned __int8 v18;
  char v19;
  int *v20;
  int *v21;
  int *v22;
  int *v23;
  char v24;
  unsigned int v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  int v32;
  unint64_t v34;
  BOOL v35;
  int *v36;
  int v37;
  int v38;
  BOOL v39;
  GEORPMerchantLookupContext *v40;
  uint64_t v41;
  void *v42;
  id v43;
  void *v44;
  int v45;
  char v46;
  char v47;
  char v48;
  int v49;
  int v50;
  void *v51;
  int v53;
  int *v54;
  char v55;
  char v56;
  char v57;
  BOOL v58;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1)
      + (*(_BYTE *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1);
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v7 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 != 0;
        v17 = v16 & ~(_BYTE)v11 | v9;
        v18 = v16 | v11;
        v55 = v17;
        v19 = v18 | v17;
        if (((v18 | v7) & 1) != 0)
          v20 = 0;
        else
          v20 = a3;
        v58 = v18;
        v56 = v19;
        v57 = (v20 == 0) | v18;
        v21 = (int *)MEMORY[0x1E0D82BF0];
        v22 = (int *)MEMORY[0x1E0D82BC8];
        v23 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v8;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v21) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v22))
      goto LABEL_66;
    v24 = 0;
    v25 = 0;
    v26 = 0;
    while (1)
    {
      v27 = *v21;
      v28 = *(_QWORD *)(v3 + v27);
      v29 = v28 + 1;
      if (v28 == -1 || v29 > *(_QWORD *)(v3 + *v6))
        break;
      v30 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v28);
      *(_QWORD *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0)
        goto LABEL_25;
      v24 += 7;
      if (v25++ >= 9)
      {
        v26 = 0;
        v32 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v22) = 1;
LABEL_25:
    v32 = *(unsigned __int8 *)(v3 + *v22);
    if (*(_BYTE *)(v3 + *v22))
      v26 = 0;
LABEL_27:
    if (v32 || (v26 & 7) == 4)
    {
LABEL_66:
      v53 = 1;
      goto LABEL_67;
    }
    v34 = v26 >> 3;
    v35 = v58;
    if ((v57 & 1) == 0)
    {
      v36 = v20;
      do
      {
        v38 = *v36++;
        v37 = v38;
        v35 = v38 != 0;
        if (v38)
          v39 = v37 == (_DWORD)v34;
        else
          v39 = 1;
      }
      while (!v39);
    }
    if ((_DWORD)v34 == 2)
      break;
    if ((_DWORD)v34 == 1)
    {
      if (!v35)
        goto LABEL_57;
      if ((*(_BYTE *)(a1 + 52) & 2) == 0)
      {
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_86;
        v40 = objc_alloc_init(GEORPMerchantLookupContext);
        if (!GEORPMerchantLookupContextReadAllFrom((uint64_t)v40, (void *)v3, v10 & 1))
          goto LABEL_85;
        PBReaderRecallMark();
        v41 = 24;
LABEL_50:
        v42 = *(void **)(a1 + v41);
        *(_QWORD *)(a1 + v41) = v40;

        --v8;
LABEL_64:
        v22 = (int *)MEMORY[0x1E0D82BC8];
        goto LABEL_65;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        goto LABEL_86;
      v47 = *(_BYTE *)(a1 + 52) << 6;
LABEL_63:
      v8 += v47 >> 7;
      goto LABEL_64;
    }
    if ((v55 & 1) == 0 || (*(_BYTE *)(a1 + 52) & 1) != 0)
    {
LABEL_57:
      v46 = PBReaderSkipValueWithTag();
      v22 = (int *)MEMORY[0x1E0D82BC8];
      if ((v46 & 1) == 0)
      {
        v53 = 0;
        goto LABEL_67;
      }
      goto LABEL_65;
    }
    if (!*(_QWORD *)(a1 + 16))
    {
      v43 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
      v44 = *(void **)(a1 + 16);
      *(_QWORD *)(a1 + 16) = v43;

    }
    v45 = PBUnknownFieldAdd();
    v22 = (int *)MEMORY[0x1E0D82BC8];
    if (!v45)
    {
      v53 = 0;
      v54 = &OBJC_IVAR___GEOTransitVehicleInfo__pickupDropoffType;
      goto LABEL_68;
    }
LABEL_65:
    if (!(v56 & 1 | (v8 != 0)))
      goto LABEL_66;
  }
  if (!v35)
    goto LABEL_57;
  if ((*(_BYTE *)(a1 + 52) & 4) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0)
      goto LABEL_86;
    v47 = 32 * *(_BYTE *)(a1 + 52);
    goto LABEL_63;
  }
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_86;
  v40 = objc_alloc_init(GEORPMerchantLookupCorrections);
  if (GEORPMerchantLookupCorrectionsReadAllFrom((uint64_t)v40, (void *)v3))
  {
    PBReaderRecallMark();
    v41 = 32;
    goto LABEL_50;
  }
LABEL_85:

LABEL_86:
  v53 = 0;
  v22 = (int *)MEMORY[0x1E0D82BC8];
LABEL_67:
  v54 = &OBJC_IVAR___GEOTransitVehicleInfo__pickupDropoffType;
  if ((v55 & 1) == 0)
    goto LABEL_69;
LABEL_68:
  *(_BYTE *)(a1 + v54[540]) |= 1u;
LABEL_69:
  if (v58 || (v53 & 1) == 0)
  {
    *(_BYTE *)(a1 + v54[540]) |= 2u;
    *(_BYTE *)(a1 + v54[540]) |= 4u;
    goto LABEL_79;
  }
  if (v20)
  {
    while (1)
    {
      v50 = *v20++;
      v49 = v50;
      if (v50 == 1)
        break;
      if (v49 == 2)
      {
        v48 = 4;
LABEL_75:
        *(_BYTE *)(a1 + v54[540]) |= v48;
      }
      else if (!v49)
      {
        goto LABEL_79;
      }
    }
    v48 = 2;
    goto LABEL_75;
  }
LABEL_79:
  if (v53)
    v3 = *(_BYTE *)(v3 + *v22) == 0;
  else
    v3 = 0;
  if (v58)
  {
    v51 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_188A7C8C0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A7CE7C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPMerchantLookupFeedbackReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEORPMerchantLookupFeedbackReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEORPMerchantLookupFeedbackReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEORPMerchantLookupFeedbackReadAllFrom_initialTag;
  Specified = GEORPMerchantLookupFeedbackReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    objc_msgSend(*(id *)(a1 + 24), "readAll:", 1);
    objc_msgSend(*(id *)(a1 + 32), "readAll:", 1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_188A7D034(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPMerchantLookupFeedbackReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORPMerchantLookupFeedbackReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188A7D094(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A7D218(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORPMerchantLookupFeedbackIsDirty(uint64_t a1)
{
  unsigned int v2;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v2 = *(unsigned __int8 *)(a1 + 52);
  if ((v2 & 8) != 0)
    return 1;
  if ((v2 & 2) != 0)
  {
    if ((GEORPMerchantLookupContextIsDirty(*(os_unfair_lock_s **)(a1 + 24)) & 1) != 0)
      return 1;
    v2 = *(unsigned __int8 *)(a1 + 52);
  }
  return (v2 >> 2) & 1;
}

os_unfair_lock_s *GEORPMerchantLookupFeedbackIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEORPMerchantLookupFeedbackIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 12);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_188A7D54C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A7D798(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPPersonalizedMapsContextReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  BOOL v25;
  int *v26;
  char v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  id v33;
  void *v34;
  _BOOL8 v35;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      while (1)
      {
        if (v3[*v6])
          goto LABEL_49;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          goto LABEL_49;
        if ((v10 >> 3) == 2)
          break;
        if ((v10 >> 3) == 1)
        {
          v18 = 0;
          v19 = 0;
          v20 = 0;
          *(_BYTE *)(a1 + 24) |= 1u;
          while (1)
          {
            v21 = *v4;
            v22 = *(_QWORD *)&v3[v21];
            v23 = v22 + 1;
            if (v22 == -1 || v23 > *(_QWORD *)&v3[*v5])
            {
              v26 = &OBJC_IVAR___GEORPPersonalizedMapsContext__addressType;
              goto LABEL_41;
            }
            v24 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v22);
            *(_QWORD *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0)
              break;
            v18 += 7;
            v25 = v19++ > 8;
            if (v25)
            {
              LODWORD(v20) = 0;
              v26 = &OBJC_IVAR___GEORPPersonalizedMapsContext__addressType;
              goto LABEL_44;
            }
          }
          v26 = &OBJC_IVAR___GEORPPersonalizedMapsContext__addressType;
LABEL_42:
          if (v3[*v6])
            LODWORD(v20) = 0;
LABEL_44:
          *(_DWORD *)(a1 + *v26) = v20;
          goto LABEL_45;
        }
        if (!*(_QWORD *)(a1 + 8))
        {
          v33 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
          v34 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = v33;

        }
        if ((PBUnknownFieldAdd() & 1) == 0)
          goto LABEL_50;
LABEL_45:
        if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
          goto LABEL_49;
      }
      v27 = 0;
      v28 = 0;
      v20 = 0;
      *(_BYTE *)(a1 + 24) |= 2u;
      while (1)
      {
        v29 = *v4;
        v30 = *(_QWORD *)&v3[v29];
        v31 = v30 + 1;
        if (v30 == -1 || v31 > *(_QWORD *)&v3[*v5])
          break;
        v32 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v30);
        *(_QWORD *)&v3[v29] = v31;
        v20 |= (unint64_t)(v32 & 0x7F) << v27;
        if ((v32 & 0x80) == 0)
        {
          v26 = &OBJC_IVAR___GEORPPersonalizedMapsContext__placeType;
          goto LABEL_42;
        }
        v27 += 7;
        v25 = v28++ > 8;
        if (v25)
        {
          LODWORD(v20) = 0;
          v26 = &OBJC_IVAR___GEORPPersonalizedMapsContext__placeType;
          goto LABEL_44;
        }
      }
      v26 = &OBJC_IVAR___GEORPPersonalizedMapsContext__placeType;
LABEL_41:
      v3[*v6] = 1;
      goto LABEL_42;
    }
LABEL_49:
    v35 = v3[*v6] == 0;
  }
  else
  {
LABEL_50:
    v35 = 0;
  }
  objc_sync_exit(v3);

  return v35;
}

void sub_188A7E5BC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPPersonalizedMapsContextReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORPPersonalizedMapsContextReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188A7E61C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A7EB98(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPPlaceContainmentCorrectionsReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  char v17;
  unsigned __int8 v18;
  int *v19;
  int *v20;
  int *v21;
  int *v22;
  char v23;
  unsigned int v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  int v31;
  unint64_t v33;
  BOOL v34;
  int *v35;
  int v36;
  int v37;
  BOOL v38;
  GEORPContainmentCorrection *v39;
  uint64_t v40;
  void *v41;
  id v42;
  void *v43;
  int v44;
  char v45;
  char v46;
  int v47;
  int v48;
  void *v49;
  int v51;
  int *v52;
  char v53;
  char v54;
  char v55;
  BOOL v56;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1)
      + (*(_BYTE *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1);
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v7 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 != 0;
        v17 = v16 & ~(_BYTE)v11 | v9;
        v18 = v16 | v11;
        v53 = v17;
        v54 = v18 | v17;
        if (((v18 | v7) & 1) != 0)
          v19 = 0;
        else
          v19 = a3;
        v20 = (int *)MEMORY[0x1E0D82BF0];
        v55 = (v19 == 0) | v18;
        v56 = v18;
        v21 = (int *)MEMORY[0x1E0D82BC8];
        v22 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v8;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v20) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v21))
      goto LABEL_66;
    v23 = 0;
    v24 = 0;
    v25 = 0;
    while (1)
    {
      v26 = *v20;
      v27 = *(_QWORD *)(v3 + v26);
      v28 = v27 + 1;
      if (v27 == -1 || v28 > *(_QWORD *)(v3 + *v6))
        break;
      v29 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v27);
      *(_QWORD *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0)
        goto LABEL_25;
      v23 += 7;
      if (v24++ >= 9)
      {
        v25 = 0;
        v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v21) = 1;
LABEL_25:
    v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(_BYTE *)(v3 + *v21))
      v25 = 0;
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_66:
      v51 = 1;
      goto LABEL_67;
    }
    v33 = v25 >> 3;
    v34 = v56;
    if ((v55 & 1) == 0)
    {
      v35 = v19;
      do
      {
        v37 = *v35++;
        v36 = v37;
        v34 = v37 != 0;
        if (v37)
          v38 = v36 == (_DWORD)v33;
        else
          v38 = 1;
      }
      while (!v38);
    }
    if ((_DWORD)v33 == 2)
      break;
    if ((_DWORD)v33 == 1)
    {
      if (!v34)
        goto LABEL_57;
      if ((*(_BYTE *)(a1 + 52) & 4) == 0)
      {
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_85;
        v39 = objc_alloc_init(GEORPContainmentCorrection);
        if (!GEORPContainmentCorrectionReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1))
          goto LABEL_84;
        PBReaderRecallMark();
        v40 = 32;
LABEL_50:
        v41 = *(void **)(a1 + v40);
        *(_QWORD *)(a1 + v40) = v39;

        --v8;
LABEL_64:
        v21 = (int *)MEMORY[0x1E0D82BC8];
        goto LABEL_65;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        goto LABEL_85;
      v46 = 32 * *(_BYTE *)(a1 + 52);
LABEL_63:
      v8 += v46 >> 7;
      goto LABEL_64;
    }
    if ((v53 & 1) == 0 || (*(_BYTE *)(a1 + 52) & 1) != 0)
    {
LABEL_57:
      v45 = PBReaderSkipValueWithTag();
      v21 = (int *)MEMORY[0x1E0D82BC8];
      if ((v45 & 1) == 0)
      {
        v51 = 0;
        goto LABEL_67;
      }
      goto LABEL_65;
    }
    if (!*(_QWORD *)(a1 + 16))
    {
      v42 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
      v43 = *(void **)(a1 + 16);
      *(_QWORD *)(a1 + 16) = v42;

    }
    v44 = PBUnknownFieldAdd();
    v21 = (int *)MEMORY[0x1E0D82BC8];
    if (!v44)
    {
      v51 = 0;
      v52 = &OBJC_IVAR___GEOTransitVehicleInfo__pickupDropoffType;
      goto LABEL_68;
    }
LABEL_65:
    if (!(v54 & 1 | (v8 != 0)))
      goto LABEL_66;
  }
  if (!v34)
    goto LABEL_57;
  if ((*(_BYTE *)(a1 + 52) & 2) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0)
      goto LABEL_85;
    v46 = *(_BYTE *)(a1 + 52) << 6;
    goto LABEL_63;
  }
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_85;
  v39 = objc_alloc_init(GEORPContainmentCorrection);
  if (GEORPContainmentCorrectionReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1))
  {
    PBReaderRecallMark();
    v40 = 24;
    goto LABEL_50;
  }
LABEL_84:

LABEL_85:
  v51 = 0;
  v21 = (int *)MEMORY[0x1E0D82BC8];
LABEL_67:
  v52 = &OBJC_IVAR___GEOTransitVehicleInfo__pickupDropoffType;
  if ((v53 & 1) == 0)
    goto LABEL_69;
LABEL_68:
  *(_BYTE *)(a1 + v52[552]) |= 1u;
LABEL_69:
  if (v56 || (v51 & 1) == 0)
  {
    *(_BYTE *)(a1 + v52[552]) |= 4u;
    *(_BYTE *)(a1 + v52[552]) |= 2u;
    goto LABEL_78;
  }
  if (v19)
  {
    while (1)
    {
      v48 = *v19++;
      v47 = v48;
      if (v48 == 1)
        break;
      if (v47 == 2)
      {
LABEL_74:
        *(_BYTE *)(a1 + v52[552]) |= v47;
      }
      else if (!v47)
      {
        goto LABEL_78;
      }
    }
    LOBYTE(v47) = 4;
    goto LABEL_74;
  }
LABEL_78:
  if (v51)
    v3 = *(_BYTE *)(v3 + *v21) == 0;
  else
    v3 = 0;
  if (v56)
  {
    v49 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_188A7F220(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A7F7E4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPPlaceContainmentCorrectionsReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEORPPlaceContainmentCorrectionsReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEORPPlaceContainmentCorrectionsReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEORPPlaceContainmentCorrectionsReadAllFrom_initialTag;
  Specified = GEORPPlaceContainmentCorrectionsReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    objc_msgSend(*(id *)(a1 + 32), "readAll:", 1);
    objc_msgSend(*(id *)(a1 + 24), "readAll:", 1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_188A7F99C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPPlaceContainmentCorrectionsReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORPPlaceContainmentCorrectionsReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188A7F9FC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPPlaceContainmentCorrectionsIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  _BOOL8 v17;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      if ((v8 >> 3) == 2 || (v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEORPContainmentCorrectionIsValid(a1))
        {
LABEL_27:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_27;
      }
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

void sub_188A7FD4C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL _GEORPPlaceContainmentCorrectionsIsDirty(uint64_t a1)
{
  char v2;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v2 = *(_BYTE *)(a1 + 52);
  if ((v2 & 8) != 0)
    return 1;
  if ((*(_BYTE *)(a1 + 52) & 4) != 0)
  {
    if (GEORPContainmentCorrectionIsDirty(*(_QWORD *)(a1 + 32)))
      return 1;
    v2 = *(_BYTE *)(a1 + 52);
  }
  return (v2 & 2) != 0 && GEORPContainmentCorrectionIsDirty(*(_QWORD *)(a1 + 24));
}

os_unfair_lock_s *GEORPPlaceContainmentCorrectionsIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  _BOOL8 IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEORPPlaceContainmentCorrectionsIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 12);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_188A8005C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A802A8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A8052C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPPlaceRequestResponseReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  char v17;
  unsigned __int8 v18;
  char v19;
  int *v20;
  int *v21;
  int *v22;
  int *v23;
  char v24;
  unsigned int v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  int v32;
  unint64_t v34;
  BOOL v35;
  int *v36;
  int v37;
  int v38;
  BOOL v39;
  GEOPDPlaceRequest *v40;
  uint64_t v41;
  void *v42;
  id v43;
  void *v44;
  int v45;
  char v46;
  char v47;
  char v48;
  int v49;
  int v50;
  void *v51;
  int v53;
  int *v54;
  char v55;
  char v56;
  char v57;
  BOOL v58;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1)
      + (*(_BYTE *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1);
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v7 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 != 0;
        v17 = v16 & ~(_BYTE)v11 | v9;
        v18 = v16 | v11;
        v55 = v17;
        v19 = v18 | v17;
        if (((v18 | v7) & 1) != 0)
          v20 = 0;
        else
          v20 = a3;
        v58 = v18;
        v56 = v19;
        v57 = (v20 == 0) | v18;
        v21 = (int *)MEMORY[0x1E0D82BF0];
        v22 = (int *)MEMORY[0x1E0D82BC8];
        v23 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v8;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v21) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v22))
      goto LABEL_66;
    v24 = 0;
    v25 = 0;
    v26 = 0;
    while (1)
    {
      v27 = *v21;
      v28 = *(_QWORD *)(v3 + v27);
      v29 = v28 + 1;
      if (v28 == -1 || v29 > *(_QWORD *)(v3 + *v6))
        break;
      v30 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v28);
      *(_QWORD *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0)
        goto LABEL_25;
      v24 += 7;
      if (v25++ >= 9)
      {
        v26 = 0;
        v32 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v22) = 1;
LABEL_25:
    v32 = *(unsigned __int8 *)(v3 + *v22);
    if (*(_BYTE *)(v3 + *v22))
      v26 = 0;
LABEL_27:
    if (v32 || (v26 & 7) == 4)
    {
LABEL_66:
      v53 = 1;
      goto LABEL_67;
    }
    v34 = v26 >> 3;
    v35 = v58;
    if ((v57 & 1) == 0)
    {
      v36 = v20;
      do
      {
        v38 = *v36++;
        v37 = v38;
        v35 = v38 != 0;
        if (v38)
          v39 = v37 == (_DWORD)v34;
        else
          v39 = 1;
      }
      while (!v39);
    }
    if ((_DWORD)v34 == 2)
      break;
    if ((_DWORD)v34 == 1)
    {
      if (!v35)
        goto LABEL_57;
      if ((*(_BYTE *)(a1 + 52) & 2) == 0)
      {
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_86;
        v40 = objc_alloc_init(GEOPDPlaceRequest);
        if (!GEOPDPlaceRequestReadAllFrom((uint64_t)v40, (void *)v3, v10 & 1))
          goto LABEL_85;
        PBReaderRecallMark();
        v41 = 24;
LABEL_50:
        v42 = *(void **)(a1 + v41);
        *(_QWORD *)(a1 + v41) = v40;

        --v8;
LABEL_64:
        v22 = (int *)MEMORY[0x1E0D82BC8];
        goto LABEL_65;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        goto LABEL_86;
      v47 = *(_BYTE *)(a1 + 52) << 6;
LABEL_63:
      v8 += v47 >> 7;
      goto LABEL_64;
    }
    if ((v55 & 1) == 0 || (*(_BYTE *)(a1 + 52) & 1) != 0)
    {
LABEL_57:
      v46 = PBReaderSkipValueWithTag();
      v22 = (int *)MEMORY[0x1E0D82BC8];
      if ((v46 & 1) == 0)
      {
        v53 = 0;
        goto LABEL_67;
      }
      goto LABEL_65;
    }
    if (!*(_QWORD *)(a1 + 16))
    {
      v43 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
      v44 = *(void **)(a1 + 16);
      *(_QWORD *)(a1 + 16) = v43;

    }
    v45 = PBUnknownFieldAdd();
    v22 = (int *)MEMORY[0x1E0D82BC8];
    if (!v45)
    {
      v53 = 0;
      v54 = &OBJC_IVAR___GEOTransitVehicleInfo__pickupDropoffType;
      goto LABEL_68;
    }
LABEL_65:
    if (!(v56 & 1 | (v8 != 0)))
      goto LABEL_66;
  }
  if (!v35)
    goto LABEL_57;
  if ((*(_BYTE *)(a1 + 52) & 4) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0)
      goto LABEL_86;
    v47 = 32 * *(_BYTE *)(a1 + 52);
    goto LABEL_63;
  }
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_86;
  v40 = objc_alloc_init(GEOPDPlaceResponse);
  if (GEOPDPlaceResponseReadAllFrom((uint64_t)v40, (void *)v3, v10 & 1))
  {
    PBReaderRecallMark();
    v41 = 32;
    goto LABEL_50;
  }
LABEL_85:

LABEL_86:
  v53 = 0;
  v22 = (int *)MEMORY[0x1E0D82BC8];
LABEL_67:
  v54 = &OBJC_IVAR___GEOTransitVehicleInfo__pickupDropoffType;
  if ((v55 & 1) == 0)
    goto LABEL_69;
LABEL_68:
  *(_BYTE *)(a1 + v54[560]) |= 1u;
LABEL_69:
  if (v58 || (v53 & 1) == 0)
  {
    *(_BYTE *)(a1 + v54[560]) |= 2u;
    *(_BYTE *)(a1 + v54[560]) |= 4u;
    goto LABEL_79;
  }
  if (v20)
  {
    while (1)
    {
      v50 = *v20++;
      v49 = v50;
      if (v50 == 1)
        break;
      if (v49 == 2)
      {
        v48 = 4;
LABEL_75:
        *(_BYTE *)(a1 + v54[560]) |= v48;
      }
      else if (!v49)
      {
        goto LABEL_79;
      }
    }
    v48 = 2;
    goto LABEL_75;
  }
LABEL_79:
  if (v53)
    v3 = *(_BYTE *)(v3 + *v22) == 0;
  else
    v3 = 0;
  if (v58)
  {
    v51 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_188A80BC0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A811B4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPPlaceRequestResponseReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEORPPlaceRequestResponseReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEORPPlaceRequestResponseReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEORPPlaceRequestResponseReadAllFrom_initialTag;
  Specified = GEORPPlaceRequestResponseReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    objc_msgSend(*(id *)(a1 + 24), "readAll:", 1);
    objc_msgSend(*(id *)(a1 + 32), "readAll:", 1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_188A8136C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPPlaceRequestResponseReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORPPlaceRequestResponseReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188A813CC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A81550(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORPPlaceRequestResponseIsDirty(uint64_t a1)
{
  char v2;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v2 = *(_BYTE *)(a1 + 52);
  if ((v2 & 8) != 0)
    return 1;
  if ((*(_BYTE *)(a1 + 52) & 2) != 0)
  {
    if ((GEOPDPlaceRequestIsDirty(*(os_unfair_lock_s **)(a1 + 24)) & 1) != 0)
      return 1;
    v2 = *(_BYTE *)(a1 + 52);
  }
  if ((v2 & 4) != 0)
    return (uint64_t)GEOPDPlaceResponseIsDirty(*(os_unfair_lock_s **)(a1 + 32));
  else
    return 0;
}

os_unfair_lock_s *GEORPPlaceRequestResponseIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEORPPlaceRequestResponseIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 12);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_188A818D0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A81B1C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A81DF0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPPoiActivityFeedbackReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  char v17;
  char v18;
  int *v19;
  int *v20;
  char v21;
  int *v22;
  int *v23;
  char v24;
  unsigned int v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  BOOL v31;
  int v32;
  int v33;
  unint64_t v35;
  BOOL v36;
  int *v37;
  int v38;
  int v39;
  BOOL v40;
  GEOPDMapsIdentifier *v41;
  void *v42;
  id v43;
  void *v44;
  int v45;
  int *v46;
  char v47;
  unsigned int v48;
  uint64_t v49;
  int *v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  char v55;
  unsigned int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  char v61;
  char v62;
  unsigned int v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  char v68;
  char v69;
  unsigned int v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  char v75;
  char v76;
  BOOL v77;
  uint64_t v78;
  char v79;
  unsigned int v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  char v85;
  int v86;
  int v87;
  char v88;
  void *v89;
  char v91;
  char v92;
  int v93;
  char v94;
  char v95;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 60);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 56));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = ((*(unsigned __int8 *)(a1 + 72) >> 5) & 1)
      + ((*(unsigned __int8 *)(a1 + 72) >> 4) & 1)
      + ((*(unsigned __int8 *)(a1 + 72) >> 3) & 1);
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v9])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 != 0;
        v17 = v16 & ~(_BYTE)v11 | v7;
        v18 = v16 | v11;
        v19 = (int *)MEMORY[0x1E0D82BF0];
        if ((((v16 | v11) | v8) & 1) != 0)
          v20 = 0;
        else
          v20 = a3;
        v93 = 1;
        v21 = v17;
        if (*(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(v3 + *v6))
          goto LABEL_122;
        v91 = v17;
        v94 = v18 | v17;
        v95 = (v20 == 0) | v18;
        v22 = (int *)MEMORY[0x1E0D82BC8];
        v23 = (int *)MEMORY[0x1E0D82BB8];
        v92 = v18;
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v7;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v9;
        v7 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_BYTE *)(v3 + *v22))
      goto LABEL_120;
    v24 = 0;
    v25 = 0;
    v26 = 0;
    while (1)
    {
      v27 = *v19;
      v28 = *(_QWORD *)(v3 + v27);
      v29 = v28 + 1;
      if (v28 == -1 || v29 > *(_QWORD *)(v3 + *v6))
        break;
      v30 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v28);
      *(_QWORD *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0)
        goto LABEL_25;
      v24 += 7;
      v31 = v25++ >= 9;
      if (v31)
      {
        v26 = 0;
        v32 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v22) = 1;
LABEL_25:
    v32 = *(unsigned __int8 *)(v3 + *v22);
    if (*(_BYTE *)(v3 + *v22))
      v26 = 0;
LABEL_27:
    v33 = v26 & 7;
    if (v32 || v33 == 4)
    {
LABEL_120:
      v93 = 1;
      goto LABEL_121;
    }
    v35 = v26 >> 3;
    v36 = v18;
    if ((v95 & 1) == 0)
    {
      v37 = v20;
      do
      {
        v39 = *v37++;
        v38 = v39;
        v36 = v39 != 0;
        if (v39)
          v40 = v38 == (_DWORD)v35;
        else
          v40 = 1;
      }
      while (!v40);
    }
    switch((int)v35)
    {
      case 1:
        if (!v36)
          goto LABEL_89;
        if ((*(_BYTE *)(a1 + 72) & 0x20) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_141;
          v41 = objc_alloc_init(GEOPDMapsIdentifier);
          if (GEOPDMapsIdentifierReadAllFrom((uint64_t)v41, (void *)v3))
          {
            PBReaderRecallMark();
            v42 = *(void **)(a1 + 48);
            *(_QWORD *)(a1 + 48) = v41;

            --v9;
            goto LABEL_116;
          }

          goto LABEL_141;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_141;
        v9 += *(unsigned __int8 *)(a1 + 72) << 26 >> 31;
        goto LABEL_116;
      case 2:
        if (!v36 || (*(_BYTE *)(a1 + 72) & 0x10) != 0)
          goto LABEL_89;
        if (v33 == 2)
        {
          if (!PBReaderPlaceMark())
          {
LABEL_141:
            v93 = 0;
            v18 = v92;
            goto LABEL_121;
          }
          while (1)
          {
            v46 = (int *)MEMORY[0x1E0D82BC8];
            if (*(_QWORD *)(v3 + *v19) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + (int)*MEMORY[0x1E0D82BC8]))
              break;
            v47 = 0;
            v48 = 0;
            v49 = 0;
            v50 = (int *)MEMORY[0x1E0D82BB8];
            while (1)
            {
              v51 = *v19;
              v52 = *(_QWORD *)(v3 + v51);
              v53 = v52 + 1;
              if (v52 == -1 || v53 > *(_QWORD *)(v3 + *v6))
                break;
              v54 = *(_BYTE *)(*(_QWORD *)(v3 + *v50) + v52);
              *(_QWORD *)(v3 + v51) = v53;
              v49 |= (unint64_t)(v54 & 0x7F) << v47;
              if (v54 < 0)
              {
                v47 += 7;
                v31 = v48++ >= 9;
                if (!v31)
                  continue;
              }
              goto LABEL_64;
            }
            *(_BYTE *)(v3 + *v46) = 1;
LABEL_64:
            PBRepeatedUInt32Add();
          }
          PBReaderRecallMark();
          v22 = (int *)MEMORY[0x1E0D82BC8];
          v18 = v92;
        }
        else
        {
          v79 = 0;
          v80 = 0;
          v81 = 0;
          while (1)
          {
            v82 = *v19;
            v83 = *(_QWORD *)(v3 + v82);
            v84 = v83 + 1;
            if (v83 == -1 || v84 > *(_QWORD *)(v3 + *v6))
              break;
            v85 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v83);
            *(_QWORD *)(v3 + v82) = v84;
            v81 |= (unint64_t)(v85 & 0x7F) << v79;
            if (v85 < 0)
            {
              v79 += 7;
              v31 = v80++ >= 9;
              if (!v31)
                continue;
            }
            goto LABEL_115;
          }
          *(_BYTE *)(v3 + *v22) = 1;
LABEL_115:
          PBRepeatedUInt32Add();
LABEL_116:
          v18 = v92;
          v22 = (int *)MEMORY[0x1E0D82BC8];
        }
        v23 = (int *)MEMORY[0x1E0D82BB8];
        goto LABEL_118;
      case 3:
        if ((v8 & 1) == 0)
          goto LABEL_89;
        v55 = 0;
        v56 = 0;
        v57 = 0;
        *(_BYTE *)(a1 + 72) |= 2u;
        while (2)
        {
          v58 = *v19;
          v59 = *(_QWORD *)(v3 + v58);
          v60 = v59 + 1;
          if (v59 == -1 || v60 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v22) = 1;
          }
          else
          {
            v61 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v59);
            *(_QWORD *)(v3 + v58) = v60;
            v57 |= (unint64_t)(v61 & 0x7F) << v55;
            if (v61 < 0)
            {
              v55 += 7;
              v31 = v56++ >= 9;
              if (v31)
              {
                v57 = 0;
                goto LABEL_94;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v22))
          v57 = 0;
LABEL_94:
        v77 = v57 != 0;
        v78 = 69;
        goto LABEL_103;
      case 4:
        if ((v8 & 1) == 0)
          goto LABEL_89;
        v62 = 0;
        v63 = 0;
        v64 = 0;
        *(_BYTE *)(a1 + 72) |= 1u;
        while (2)
        {
          v65 = *v19;
          v66 = *(_QWORD *)(v3 + v65);
          v67 = v66 + 1;
          if (v66 == -1 || v67 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v22) = 1;
          }
          else
          {
            v68 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v66);
            *(_QWORD *)(v3 + v65) = v67;
            v64 |= (unint64_t)(v68 & 0x7F) << v62;
            if (v68 < 0)
            {
              v62 += 7;
              v31 = v63++ >= 9;
              if (v31)
              {
                v64 = 0;
                goto LABEL_98;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v22))
          v64 = 0;
LABEL_98:
        v77 = v64 != 0;
        v78 = 68;
        goto LABEL_103;
      case 5:
        if ((v8 & 1) == 0)
          goto LABEL_89;
        v69 = 0;
        v70 = 0;
        v71 = 0;
        *(_BYTE *)(a1 + 72) |= 4u;
        while (2)
        {
          v72 = *v19;
          v73 = *(_QWORD *)(v3 + v72);
          v74 = v73 + 1;
          if (v73 == -1 || v74 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v22) = 1;
          }
          else
          {
            v75 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v73);
            *(_QWORD *)(v3 + v72) = v74;
            v71 |= (unint64_t)(v75 & 0x7F) << v69;
            if (v75 < 0)
            {
              v69 += 7;
              v31 = v70++ >= 9;
              if (v31)
              {
                v71 = 0;
                goto LABEL_102;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v22))
          v71 = 0;
LABEL_102:
        v77 = v71 != 0;
        v78 = 70;
LABEL_103:
        *(_BYTE *)(a1 + v78) = v77;
        goto LABEL_118;
      default:
        if ((v91 & 1) != 0 && (*(_BYTE *)(a1 + 72) & 8) == 0)
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v43 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v44 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v43;

          }
          v45 = PBUnknownFieldAdd();
          v18 = v92;
          v22 = (int *)MEMORY[0x1E0D82BC8];
          v23 = (int *)MEMORY[0x1E0D82BB8];
          if (!v45)
          {
            v93 = 0;
            goto LABEL_123;
          }
LABEL_118:
          if (!(v94 & 1 | (v9 != 0)) || *(_QWORD *)(v3 + *v19) >= *(_QWORD *)(v3 + *v6))
            goto LABEL_120;
          continue;
        }
LABEL_89:
        v76 = PBReaderSkipValueWithTag();
        v23 = (int *)MEMORY[0x1E0D82BB8];
        v22 = (int *)MEMORY[0x1E0D82BC8];
        v18 = v92;
        if ((v76 & 1) != 0)
          goto LABEL_118;
        v93 = 0;
LABEL_121:
        v21 = v91;
LABEL_122:
        if ((v21 & 1) != 0)
LABEL_123:
          *(_BYTE *)(a1 + 72) |= 8u;
        if (v18 & 1 | ((v93 & 1) == 0))
        {
          *(_BYTE *)(a1 + 72) |= 0x20u;
          *(_BYTE *)(a1 + 72) |= 0x10u;
          goto LABEL_134;
        }
        if (v20)
        {
          while (2)
          {
            while (1)
            {
              v87 = *v20++;
              v86 = v87;
              if (v87 == 1)
                break;
              if (v86 == 2)
              {
                v88 = 16;
                goto LABEL_133;
              }
              if (!v86)
                goto LABEL_134;
            }
            v88 = 32;
LABEL_133:
            *(_BYTE *)(a1 + 72) |= v88;
            continue;
          }
        }
LABEL_134:
        if (v93)
        {
          v3 = *(_BYTE *)(v3 + (int)*MEMORY[0x1E0D82BC8]) == 0;
          if ((v18 & 1) == 0)
            return v3;
LABEL_138:
          v89 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        else
        {
          v3 = 0;
          if ((v18 & 1) != 0)
            goto LABEL_138;
        }
        return v3;
    }
  }
}

void sub_188A82858(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A83460(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPPoiActivityFeedbackReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 60))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEORPPoiActivityFeedbackReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 60) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEORPPoiActivityFeedbackReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEORPPoiActivityFeedbackReadAllFrom_initialTag;
  Specified = GEORPPoiActivityFeedbackReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    objc_msgSend(*(id *)(a1 + 48), "readAll:", 1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_188A83604(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPPoiActivityFeedbackReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORPPoiActivityFeedbackReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188A83664(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A83894(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPPoiActivityFeedbackIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  v2 = (*(_BYTE *)(a1 + 72) & 0x70) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return v2;
}

void sub_188A83CA4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A8408C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A842F0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPPoiCorrectionsReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  int *v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  uint32x4_t v14;
  int8x16_t v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  char v21;
  unsigned __int8 v22;
  int *v23;
  int *v24;
  int *v25;
  int *v26;
  char v27;
  unsigned int v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  BOOL v34;
  int v35;
  unint64_t v37;
  BOOL v38;
  int *v39;
  int v40;
  int v41;
  BOOL v42;
  uint64_t v43;
  uint64_t v44;
  GEORPAddressCorrections *v45;
  uint64_t v46;
  char v47;
  unsigned int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  char v53;
  char v54;
  unsigned int v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  char v60;
  void *v61;
  char v62;
  unsigned int v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  char v68;
  char v69;
  unsigned int v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  char v75;
  id v76;
  void *v77;
  int v78;
  char v79;
  BOOL v80;
  uint64_t v81;
  int v82;
  int v83;
  int v84;
  void *v85;
  int v87;
  char v88;
  char v89;
  char v90;
  BOOL v91;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 128));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 124);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 120));
  v7 = v6;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = *(_DWORD *)(a1 + 136);
  v14 = (uint32x4_t)vdupq_n_s32(v13);
  v15.i64[0] = 0x100000001;
  v15.i64[1] = 0x100000001;
  v16 = vaddvq_s32(vaddq_s32(vaddq_s32((int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v14, (uint32x4_t)xmmword_189CC6D00), v15), (int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v14, (uint32x4_t)xmmword_189CC6D10), v15)), (int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v14, (uint32x4_t)xmmword_189CC6D20), v15)))+ ((v13 >> 4) & 1);
  while (2)
  {
    v17 = 1;
    v18 = 1;
    v19 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v16;
        goto LABEL_8;
      case -3:
        v9 = 1;
        goto LABEL_7;
      case -2:
        v18 = v11;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v20 = v16 > 8;
        v21 = v20 & ~(_BYTE)v12 | v10;
        v22 = v20 | v12;
        v88 = v21;
        v89 = v22 | v21;
        if (((v22 | v9) & 1) != 0)
          v23 = 0;
        else
          v23 = a3;
        v90 = (v23 == 0) | v22;
        v91 = v22;
        v24 = (int *)MEMORY[0x1E0D82BF0];
        v25 = (int *)MEMORY[0x1E0D82BC8];
        v26 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v16;
LABEL_7:
        v17 = v10;
LABEL_8:
        v18 = v11;
        v19 = v12;
LABEL_10:
        ++v8;
        v10 = v17;
        v11 = v18;
        v12 = v19;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v24) >= *(_QWORD *)(v3 + *v7) || *(_BYTE *)(v3 + *v25))
      goto LABEL_170;
    v27 = 0;
    v28 = 0;
    v29 = 0;
    while (1)
    {
      v30 = *v24;
      v31 = *(_QWORD *)(v3 + v30);
      v32 = v31 + 1;
      if (v31 == -1 || v32 > *(_QWORD *)(v3 + *v7))
        break;
      v33 = *(_BYTE *)(*(_QWORD *)(v3 + *v26) + v31);
      *(_QWORD *)(v3 + v30) = v32;
      v29 |= (unint64_t)(v33 & 0x7F) << v27;
      if ((v33 & 0x80) == 0)
        goto LABEL_25;
      v27 += 7;
      v34 = v28++ >= 9;
      if (v34)
      {
        v29 = 0;
        v35 = *(unsigned __int8 *)(v3 + *v25);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v25) = 1;
LABEL_25:
    v35 = *(unsigned __int8 *)(v3 + *v25);
    if (*(_BYTE *)(v3 + *v25))
      v29 = 0;
LABEL_27:
    if (v35 || (v29 & 7) == 4)
    {
LABEL_170:
      v87 = 1;
      goto LABEL_171;
    }
    v37 = v29 >> 3;
    v38 = v91;
    if ((v90 & 1) == 0)
    {
      v39 = v23;
      do
      {
        v41 = *v39++;
        v40 = v41;
        v38 = v41 != 0;
        if (v41)
          v42 = v40 == (_DWORD)v37;
        else
          v42 = 1;
      }
      while (!v42);
    }
    switch((int)v37)
    {
      case 1:
        if (!v38)
          goto LABEL_126;
        if ((*(_BYTE *)(a1 + 137) & 8) == 0)
        {
          PBReaderReadString();
          v43 = objc_claimAutoreleasedReturnValue();
          v44 = 72;
          goto LABEL_96;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_196;
        v82 = (int)(*(_DWORD *)(a1 + 136) << 20) >> 31;
        goto LABEL_167;
      case 2:
        if (!v38)
          goto LABEL_126;
        if ((*(_BYTE *)(a1 + 137) & 0x80) == 0)
        {
          PBReaderReadString();
          v43 = objc_claimAutoreleasedReturnValue();
          v44 = 104;
          goto LABEL_96;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_196;
        v82 = (int)(*(_DWORD *)(a1 + 136) << 16) >> 31;
        goto LABEL_167;
      case 3:
        if (!v38)
          goto LABEL_126;
        if ((*(_BYTE *)(a1 + 136) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_196;
          v82 = (int)(*(_DWORD *)(a1 + 136) << 26) >> 31;
          goto LABEL_167;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_196;
        v45 = objc_alloc_init(GEORPAddressCorrections);
        if (!GEORPAddressCorrectionsReadAllFrom((uint64_t)v45, (void *)v3, v11 & 1))
          goto LABEL_195;
        PBReaderRecallMark();
        v46 = 24;
        goto LABEL_102;
      case 4:
        if (!v38 || (*(_BYTE *)(a1 + 136) & 0x80) != 0)
          goto LABEL_126;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_196;
        v45 = objc_alloc_init(GEORPFeedbackBusinessHours);
        if (!GEORPFeedbackBusinessHoursReadAllFrom((uint64_t)v45, (void *)v3, v11 & 1))
          goto LABEL_195;
        PBReaderRecallMark();
        -[GEORPPoiCorrections _addNoFlagsBusinessHours:](a1, v45);

        goto LABEL_168;
      case 5:
        if (!v38)
          goto LABEL_126;
        if ((*(_BYTE *)(a1 + 138) & 1) == 0)
        {
          PBReaderReadString();
          v43 = objc_claimAutoreleasedReturnValue();
          v44 = 112;
          goto LABEL_96;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_196;
        v82 = (int)(*(_DWORD *)(a1 + 136) << 15) >> 31;
        goto LABEL_167;
      case 6:
        if (!v38)
          goto LABEL_126;
        if ((*(_BYTE *)(a1 + 137) & 1) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_196;
          v82 = (int)(*(_DWORD *)(a1 + 136) << 23) >> 31;
          goto LABEL_167;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_196;
        v45 = objc_alloc_init(GEORPCategoryCorrections);
        if (!GEORPCategoryCorrectionsReadAllFrom((uint64_t)v45, (void *)v3, v11 & 1))
          goto LABEL_195;
        PBReaderRecallMark();
        v46 = 48;
        goto LABEL_102;
      case 7:
        if (!v38)
          goto LABEL_126;
        if ((*(_BYTE *)(a1 + 136) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_196;
          v82 = (int)(*(_DWORD *)(a1 + 136) << 25) >> 31;
          goto LABEL_167;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_196;
        v45 = objc_alloc_init(GEORPAmenityCorrections);
        if (!GEORPAmenityCorrectionsReadAllFrom((uint64_t)v45, (void *)v3, v11 & 1))
          goto LABEL_195;
        PBReaderRecallMark();
        v46 = 32;
        goto LABEL_102;
      case 8:
        if ((v9 & 1) == 0)
          goto LABEL_126;
        v47 = 0;
        v48 = 0;
        v49 = 0;
        *(_DWORD *)(a1 + 136) |= 4u;
        while (2)
        {
          v50 = *v24;
          v51 = *(_QWORD *)(v3 + v50);
          v52 = v51 + 1;
          if (v51 == -1 || v52 > *(_QWORD *)(v3 + *v7))
          {
            *(_BYTE *)(v3 + *v25) = 1;
          }
          else
          {
            v53 = *(_BYTE *)(*(_QWORD *)(v3 + *v26) + v51);
            *(_QWORD *)(v3 + v50) = v52;
            v49 |= (unint64_t)(v53 & 0x7F) << v47;
            if (v53 < 0)
            {
              v47 += 7;
              v34 = v48++ >= 9;
              if (v34)
              {
                v49 = 0;
                goto LABEL_131;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v25))
          v49 = 0;
LABEL_131:
        v80 = v49 != 0;
        v81 = 134;
        goto LABEL_144;
      case 9:
        if ((v9 & 1) == 0)
          goto LABEL_126;
        v54 = 0;
        v55 = 0;
        v56 = 0;
        *(_DWORD *)(a1 + 136) |= 8u;
        while (2)
        {
          v57 = *v24;
          v58 = *(_QWORD *)(v3 + v57);
          v59 = v58 + 1;
          if (v58 == -1 || v59 > *(_QWORD *)(v3 + *v7))
          {
            *(_BYTE *)(v3 + *v25) = 1;
          }
          else
          {
            v60 = *(_BYTE *)(*(_QWORD *)(v3 + *v26) + v58);
            *(_QWORD *)(v3 + v57) = v59;
            v56 |= (unint64_t)(v60 & 0x7F) << v54;
            if (v60 < 0)
            {
              v54 += 7;
              v34 = v55++ >= 9;
              if (v34)
              {
                v56 = 0;
                goto LABEL_135;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v25))
          v56 = 0;
LABEL_135:
        v80 = v56 != 0;
        v81 = 135;
        goto LABEL_144;
      case 10:
        if (!v38)
          goto LABEL_126;
        if ((*(_BYTE *)(a1 + 137) & 0x10) == 0)
        {
          PBReaderReadString();
          v43 = objc_claimAutoreleasedReturnValue();
          v44 = 80;
          goto LABEL_96;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_196;
        v82 = (int)(*(_DWORD *)(a1 + 136) << 19) >> 31;
        goto LABEL_167;
      case 11:
        if (!v38)
          goto LABEL_126;
        if ((*(_BYTE *)(a1 + 137) & 0x20) == 0)
        {
          PBReaderReadString();
          v43 = objc_claimAutoreleasedReturnValue();
          v44 = 88;
          goto LABEL_96;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_196;
        v82 = (int)(*(_DWORD *)(a1 + 136) << 18) >> 31;
        goto LABEL_167;
      case 12:
        if (!v38)
          goto LABEL_126;
        if ((*(_BYTE *)(a1 + 137) & 0x40) == 0)
        {
          PBReaderReadString();
          v43 = objc_claimAutoreleasedReturnValue();
          v44 = 96;
          goto LABEL_96;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_196;
        v82 = (int)(*(_DWORD *)(a1 + 136) << 17) >> 31;
        goto LABEL_167;
      case 13:
        if (!v38)
          goto LABEL_126;
        if ((*(_BYTE *)(a1 + 137) & 4) == 0)
        {
          PBReaderReadString();
          v43 = objc_claimAutoreleasedReturnValue();
          v44 = 64;
LABEL_96:
          v61 = *(void **)(a1 + v44);
          *(_QWORD *)(a1 + v44) = v43;
          goto LABEL_103;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_196;
        v82 = (int)(*(_DWORD *)(a1 + 136) << 21) >> 31;
        goto LABEL_167;
      case 14:
        if (!v38)
          goto LABEL_126;
        if ((*(_BYTE *)(a1 + 137) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_196;
          v82 = (int)(*(_DWORD *)(a1 + 136) << 22) >> 31;
LABEL_167:
          v8 += v82;
LABEL_168:
          v25 = (int *)MEMORY[0x1E0D82BC8];
          v7 = (int *)MEMORY[0x1E0D82BD8];
          v26 = (int *)MEMORY[0x1E0D82BB8];
LABEL_169:
          if (!(v89 & 1 | (v8 != 0)))
            goto LABEL_170;
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_196;
        v45 = objc_alloc_init(GEORPPlaceContainmentCorrections);
        if (GEORPPlaceContainmentCorrectionsReadAllFrom((uint64_t)v45, (void *)v3, v11 & 1))
        {
          PBReaderRecallMark();
          v46 = 56;
LABEL_102:
          v61 = *(void **)(a1 + v46);
          *(_QWORD *)(a1 + v46) = v45;
LABEL_103:

          --v8;
          goto LABEL_168;
        }
LABEL_195:

LABEL_196:
        v87 = 0;
        v25 = (int *)MEMORY[0x1E0D82BC8];
LABEL_171:
        if ((v88 & 1) != 0)
LABEL_172:
          *(_DWORD *)(a1 + 136) |= 0x10u;
        if (v91 || (v87 & 1) == 0)
        {
          *(_DWORD *)(a1 + 136) |= 0x800u;
          *(_DWORD *)(a1 + 136) |= 0x8000u;
          *(_DWORD *)(a1 + 136) |= 0x20u;
          *(_DWORD *)(a1 + 136) |= 0x80u;
          *(_DWORD *)(a1 + 136) |= 0x10000u;
          *(_DWORD *)(a1 + 136) |= 0x100u;
          *(_DWORD *)(a1 + 136) |= 0x40u;
          *(_DWORD *)(a1 + 136) |= 0x1000u;
          *(_DWORD *)(a1 + 136) |= 0x2000u;
          *(_DWORD *)(a1 + 136) |= 0x4000u;
          *(_DWORD *)(a1 + 136) |= 0x400u;
          *(_DWORD *)(a1 + 136) |= 0x200u;
        }
        else if (v23)
        {
          while (1)
          {
            v83 = *v23++;
            v84 = 2048;
            switch(v83)
            {
              case 0:
                goto LABEL_189;
              case 1:
                goto LABEL_188;
              case 2:
                v84 = 0x8000;
                goto LABEL_188;
              case 3:
                v84 = 32;
                goto LABEL_188;
              case 4:
                v84 = 128;
                goto LABEL_188;
              case 5:
                v84 = 0x10000;
                goto LABEL_188;
              case 6:
                v84 = 256;
                goto LABEL_188;
              case 7:
                v84 = 64;
                goto LABEL_188;
              case 10:
                v84 = 4096;
                goto LABEL_188;
              case 11:
                v84 = 0x2000;
                goto LABEL_188;
              case 12:
                v84 = 0x4000;
                goto LABEL_188;
              case 13:
                v84 = 1024;
                goto LABEL_188;
              case 14:
                v84 = 512;
LABEL_188:
                *(_DWORD *)(a1 + 136) |= v84;
                break;
              default:
                continue;
            }
          }
        }
LABEL_189:
        if (v87)
          v3 = *(_BYTE *)(v3 + *v25) == 0;
        else
          v3 = 0;
        if (v91)
        {
          v85 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      case 15:
        if ((v9 & 1) == 0)
          goto LABEL_126;
        v62 = 0;
        v63 = 0;
        v64 = 0;
        *(_DWORD *)(a1 + 136) |= 2u;
        while (2)
        {
          v65 = *v24;
          v66 = *(_QWORD *)(v3 + v65);
          v67 = v66 + 1;
          if (v66 == -1 || v67 > *(_QWORD *)(v3 + *v7))
          {
            *(_BYTE *)(v3 + *v25) = 1;
          }
          else
          {
            v68 = *(_BYTE *)(*(_QWORD *)(v3 + *v26) + v66);
            *(_QWORD *)(v3 + v65) = v67;
            v64 |= (unint64_t)(v68 & 0x7F) << v62;
            if (v68 < 0)
            {
              v62 += 7;
              v34 = v63++ >= 9;
              if (v34)
              {
                v64 = 0;
                goto LABEL_139;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v25))
          v64 = 0;
LABEL_139:
        v80 = v64 != 0;
        v81 = 133;
        goto LABEL_144;
      case 16:
        if ((v9 & 1) == 0)
          goto LABEL_126;
        v69 = 0;
        v70 = 0;
        v71 = 0;
        *(_DWORD *)(a1 + 136) |= 1u;
        while (2)
        {
          v72 = *v24;
          v73 = *(_QWORD *)(v3 + v72);
          v74 = v73 + 1;
          if (v73 == -1 || v74 > *(_QWORD *)(v3 + *v7))
          {
            *(_BYTE *)(v3 + *v25) = 1;
          }
          else
          {
            v75 = *(_BYTE *)(*(_QWORD *)(v3 + *v26) + v73);
            *(_QWORD *)(v3 + v72) = v74;
            v71 |= (unint64_t)(v75 & 0x7F) << v69;
            if (v75 < 0)
            {
              v69 += 7;
              v34 = v70++ >= 9;
              if (v34)
              {
                v71 = 0;
                goto LABEL_143;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v25))
          v71 = 0;
LABEL_143:
        v80 = v71 != 0;
        v81 = 132;
LABEL_144:
        *(_BYTE *)(a1 + v81) = v80;
        goto LABEL_169;
      default:
        if ((v88 & 1) == 0 || (*(_BYTE *)(a1 + 136) & 0x10) != 0)
        {
LABEL_126:
          v79 = PBReaderSkipValueWithTag();
          v26 = (int *)MEMORY[0x1E0D82BB8];
          v7 = (int *)MEMORY[0x1E0D82BD8];
          v25 = (int *)MEMORY[0x1E0D82BC8];
          if ((v79 & 1) == 0)
          {
            v87 = 0;
            goto LABEL_171;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v76 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v77 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v76;

          }
          v78 = PBUnknownFieldAdd();
          v25 = (int *)MEMORY[0x1E0D82BC8];
          v7 = (int *)MEMORY[0x1E0D82BD8];
          v26 = (int *)MEMORY[0x1E0D82BB8];
          if (!v78)
          {
            v87 = 0;
            goto LABEL_172;
          }
        }
        goto LABEL_169;
    }
  }
}

void sub_188A851E8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A85330(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A85478(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A857B0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A858F4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A85A3C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A85C88(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A85DD4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A85F20(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A8606C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A861B8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A87324(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORPPoiCorrectionsCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _BYTE v12[128];
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  objc_msgSend(a1[3], "readAll:", 1);
  v10 = 0u;
  v11 = 0u;
  v8 = 0u;
  v9 = 0u;
  v2 = a1[5];
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v9;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v9 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v8 + 1) + 8 * v6++), "readAll:", 1, (_QWORD)v8);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
    }
    while (v4);
  }

  objc_msgSend(a1[6], "readAll:", 1);
  objc_msgSend(a1[4], "readAll:", 1);
  return objc_msgSend(a1[7], "readAll:", 1);
}

unint64_t GEORPPoiCorrectionsReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 124))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEORPPoiCorrectionsReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 128));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 120) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 124) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEORPPoiCorrectionsReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEORPPoiCorrectionsReadAllFrom_initialTag;
  Specified = GEORPPoiCorrectionsReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEORPPoiCorrectionsCallReadAllRecursiveWithoutSynchronized((id *)a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 128));
  return Specified;
}

void sub_188A87600(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPPoiCorrectionsReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORPPoiCorrectionsReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188A87660(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPPoiCorrectionsIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  int v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  int v37;
  _BOOL8 v38;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2)
            goto LABEL_90;
          goto LABEL_64;
        case 2u:
          if (v15 == 2)
            goto LABEL_64;
          goto LABEL_90;
        case 3u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPAddressCorrectionsIsValid(a1))
            goto LABEL_90;
          goto LABEL_69;
        case 4u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPFeedbackBusinessHoursIsValid(a1))
            goto LABEL_90;
          goto LABEL_69;
        case 5u:
          if (v15 == 2)
            goto LABEL_64;
          goto LABEL_90;
        case 6u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPCategoryCorrectionsIsValid(a1))
            goto LABEL_90;
          goto LABEL_69;
        case 7u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPAmenityCorrectionsIsValid(a1))
            goto LABEL_90;
          goto LABEL_69;
        case 8u:
          if ((v8 & 7) != 0)
            goto LABEL_90;
          v17 = 0;
          while (1)
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
              goto LABEL_86;
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if (v21 < 0)
            {
              v22 = v17++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_87;
          }
        case 9u:
          if ((v8 & 7) != 0)
            goto LABEL_90;
          v23 = 0;
          while (1)
          {
            v24 = *v2;
            v25 = *(_QWORD *)&a1[v24];
            v26 = v25 + 1;
            if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
              goto LABEL_86;
            v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
            *(_QWORD *)&a1[v24] = v26;
            if (v27 < 0)
            {
              v22 = v23++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_87;
          }
        case 0xAu:
          if (v15 == 2)
            goto LABEL_64;
          goto LABEL_90;
        case 0xBu:
          if (v15 == 2)
            goto LABEL_64;
          goto LABEL_90;
        case 0xCu:
          if (v15 == 2)
            goto LABEL_64;
          goto LABEL_90;
        case 0xDu:
          if (v15 == 2)
            goto LABEL_64;
          goto LABEL_90;
        case 0xEu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPPlaceContainmentCorrectionsIsValid(a1))
            goto LABEL_90;
LABEL_69:
          PBReaderRecallMark();
          continue;
        case 0xFu:
          if ((v8 & 7) != 0)
            goto LABEL_90;
          v28 = 0;
          while (1)
          {
            v29 = *v2;
            v30 = *(_QWORD *)&a1[v29];
            v31 = v30 + 1;
            if (v30 == -1 || v31 > *(_QWORD *)&a1[*v3])
              goto LABEL_86;
            v32 = *(char *)(*(_QWORD *)&a1[*v5] + v30);
            *(_QWORD *)&a1[v29] = v31;
            if (v32 < 0)
            {
              v22 = v28++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_87;
          }
        case 0x10u:
          if ((v8 & 7) != 0)
            goto LABEL_90;
          v33 = 0;
          break;
        default:
LABEL_64:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_90:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v34 = *v2;
        v35 = *(_QWORD *)&a1[v34];
        v36 = v35 + 1;
        if (v35 == -1 || v36 > *(_QWORD *)&a1[*v3])
          break;
        v37 = *(char *)(*(_QWORD *)&a1[*v5] + v35);
        *(_QWORD *)&a1[v34] = v36;
        if (v37 < 0)
        {
          v22 = v33++ > 8;
          if (!v22)
            continue;
        }
        goto LABEL_87;
      }
LABEL_86:
      a1[*v4] = 1;
LABEL_87:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v38 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v38;
}

void sub_188A87EA4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORPPoiCorrectionsIsDirty(uint64_t a1)
{
  int v2;
  uint64_t v3;
  id v5;
  uint64_t v6;
  uint64_t i;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _BYTE v12[128];
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 128));
  v2 = *(_DWORD *)(a1 + 136);
  if ((v2 & 0x28800) != 0)
    return 1;
  if ((v2 & 0x20) != 0)
  {
    if ((GEORPAddressCorrectionsIsDirty(*(os_unfair_lock_s **)(a1 + 24)) & 1) != 0)
      return 1;
    v2 = *(_DWORD *)(a1 + 136);
  }
  if ((v2 & 0x10080) != 0)
    return 1;
  if ((v2 & 0x100) != 0)
  {
    if (GEORPCategoryCorrectionsIsDirty(*(_QWORD *)(a1 + 48)))
      return 1;
    v2 = *(_DWORD *)(a1 + 136);
  }
  if ((v2 & 0x40) != 0)
  {
    if (GEORPAmenityCorrectionsIsDirty(*(_QWORD *)(a1 + 32)))
      return 1;
    v2 = *(_DWORD *)(a1 + 136);
  }
  if ((v2 & 0x7400) != 0)
    return 1;
  if ((v2 & 0x200) != 0)
  {
    if ((GEORPPlaceContainmentCorrectionsIsDirty(*(os_unfair_lock_s **)(a1 + 56)) & 1) != 0)
      return 1;
    v2 = *(_DWORD *)(a1 + 136);
  }
  if ((v2 & 0x80) == 0)
    return 0;
  v10 = 0u;
  v11 = 0u;
  v8 = 0u;
  v9 = 0u;
  v5 = *(id *)(a1 + 40);
  v3 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
  if (v3)
  {
    v6 = *(_QWORD *)v9;
    while (2)
    {
      for (i = 0; i != v3; ++i)
      {
        if (*(_QWORD *)v9 != v6)
          objc_enumerationMutation(v5);
        if ((GEORPFeedbackBusinessHoursIsDirty(*(os_unfair_lock_s **)(*((_QWORD *)&v8 + 1) + 8 * i)) & 1) != 0)
        {
          v3 = 1;
          goto LABEL_30;
        }
      }
      v3 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
      if (v3)
        continue;
      break;
    }
  }
LABEL_30:

  return v3;
}

os_unfair_lock_s *GEORPPoiCorrectionsIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEORPPoiCorrectionsIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 32);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_188A887F0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A8906C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A8954C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPPoiFeedbackReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  int *v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  int *v18;
  int *v19;
  int *v20;
  int *v21;
  char v22;
  unsigned int v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  BOOL v29;
  int v30;
  unint64_t v32;
  BOOL v33;
  int *v34;
  int v35;
  int v36;
  BOOL v37;
  char v38;
  unsigned int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  id v45;
  void *v46;
  int v47;
  GEORPPoiCorrections *v48;
  uint64_t v49;
  char v50;
  unsigned int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  char v56;
  void *v57;
  char v58;
  char v59;
  int v60;
  char v61;
  void *v62;
  int v64;
  int *v65;
  char v66;
  char v67;
  char v68;
  char v69;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 60);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 56));
  v7 = v6;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = (vaddv_s16((int16x4_t)(*(_QWORD *)&vshl_u16((uint16x4_t)(*(_QWORD *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 76)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFAFFFCFFFDFFFBLL) & 0xFF01FF01FF01FF01))+ ((*(_BYTE *)(a1 + 76) & 4) != 0));
  while (2)
  {
    v14 = 1;
    v15 = 1;
    v16 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v13;
        goto LABEL_8;
      case -3:
        v9 = 1;
        goto LABEL_7;
      case -2:
        v15 = v11;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v17 = v13 > 2;
        v66 = v17 & ~(_BYTE)v12 | v10;
        v67 = v17 | v12 | v66;
        if ((((v17 | v12) | v9) & 1) != 0)
          v18 = 0;
        else
          v18 = a3;
        v68 = (v18 == 0) | v17 | v12;
        v69 = v17 | v12;
        v19 = (int *)MEMORY[0x1E0D82BF0];
        v20 = (int *)MEMORY[0x1E0D82BC8];
        v21 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v13;
LABEL_7:
        v14 = v10;
LABEL_8:
        v15 = v11;
        v16 = v12;
LABEL_10:
        ++v8;
        v10 = v14;
        v11 = v15;
        v12 = v16;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v19) >= *(_QWORD *)(v3 + *v7) || *(_BYTE *)(v3 + *v20))
      goto LABEL_103;
    v22 = 0;
    v23 = 0;
    v24 = 0;
    while (1)
    {
      v25 = *v19;
      v26 = *(_QWORD *)(v3 + v25);
      v27 = v26 + 1;
      if (v26 == -1 || v27 > *(_QWORD *)(v3 + *v7))
        break;
      v28 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v26);
      *(_QWORD *)(v3 + v25) = v27;
      v24 |= (unint64_t)(v28 & 0x7F) << v22;
      if ((v28 & 0x80) == 0)
        goto LABEL_25;
      v22 += 7;
      v29 = v23++ >= 9;
      if (v29)
      {
        v24 = 0;
        v30 = *(unsigned __int8 *)(v3 + *v20);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v20) = 1;
LABEL_25:
    v30 = *(unsigned __int8 *)(v3 + *v20);
    if (*(_BYTE *)(v3 + *v20))
      v24 = 0;
LABEL_27:
    if (v30 || (v24 & 7) == 4)
    {
LABEL_103:
      v64 = 1;
      goto LABEL_104;
    }
    v32 = v24 >> 3;
    v33 = v69;
    if ((v68 & 1) == 0)
    {
      v34 = v18;
      do
      {
        v36 = *v34++;
        v35 = v36;
        v33 = v36 != 0;
        if (v36)
          v37 = v35 == (_DWORD)v32;
        else
          v37 = 1;
      }
      while (!v37);
    }
    switch((int)v32)
    {
      case 1:
        if ((v9 & 1) == 0)
          goto LABEL_82;
        v38 = 0;
        v39 = 0;
        v40 = 0;
        *(_BYTE *)(a1 + 76) |= 1u;
        while (1)
        {
          v41 = *v19;
          v42 = *(_QWORD *)(v3 + v41);
          v43 = v42 + 1;
          if (v42 == -1 || v43 > *(_QWORD *)(v3 + *v7))
            break;
          v44 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v42);
          *(_QWORD *)(v3 + v41) = v43;
          v40 |= (unint64_t)(v44 & 0x7F) << v38;
          if ((v44 & 0x80) == 0)
            goto LABEL_85;
          v38 += 7;
          v29 = v39++ >= 9;
          if (v29)
          {
            LODWORD(v40) = 0;
            goto LABEL_87;
          }
        }
        *(_BYTE *)(v3 + *v20) = 1;
LABEL_85:
        if (*(_BYTE *)(v3 + *v20))
          LODWORD(v40) = 0;
LABEL_87:
        *(_DWORD *)(a1 + 68) = v40;
        goto LABEL_102;
      case 2:
        if (!v33)
          goto LABEL_82;
        if ((*(_BYTE *)(a1 + 76) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_121;
          v59 = 16 * *(_BYTE *)(a1 + 76);
          goto LABEL_100;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_121;
        v48 = objc_alloc_init(GEORPPoiCorrections);
        if (!GEORPPoiCorrectionsReadAllFrom((uint64_t)v48, (void *)v3, v11 & 1))
          goto LABEL_120;
        PBReaderRecallMark();
        v49 = 24;
        goto LABEL_81;
      case 3:
        if (!v33)
          goto LABEL_82;
        if ((*(_BYTE *)(a1 + 76) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_121;
          v59 = 4 * *(_BYTE *)(a1 + 76);
          goto LABEL_100;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_121;
        v48 = objc_alloc_init(GEOPDPlace);
        if (!GEOPDPlaceReadAllFrom((uint64_t)v48, (void *)v3, v11 & 1))
          goto LABEL_120;
        PBReaderRecallMark();
        v49 = 40;
        goto LABEL_81;
      case 4:
        if (!v33)
          goto LABEL_82;
        if ((*(_BYTE *)(a1 + 76) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_121;
          v59 = 8 * *(_BYTE *)(a1 + 76);
          goto LABEL_100;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_121;
        v48 = objc_alloc_init(GEOPDPlaceRequest);
        if (!GEOPDPlaceRequestReadAllFrom((uint64_t)v48, (void *)v3, v11 & 1))
          goto LABEL_120;
        PBReaderRecallMark();
        v49 = 32;
        goto LABEL_81;
      case 5:
        if ((v9 & 1) == 0)
          goto LABEL_82;
        v50 = 0;
        v51 = 0;
        v52 = 0;
        *(_BYTE *)(a1 + 76) |= 2u;
        while (2)
        {
          v53 = *v19;
          v54 = *(_QWORD *)(v3 + v53);
          v55 = v54 + 1;
          if (v54 == -1 || v55 > *(_QWORD *)(v3 + *v7))
          {
            *(_BYTE *)(v3 + *v20) = 1;
          }
          else
          {
            v56 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v54);
            *(_QWORD *)(v3 + v53) = v55;
            v52 |= (unint64_t)(v56 & 0x7F) << v50;
            if (v56 < 0)
            {
              v50 += 7;
              v29 = v51++ >= 9;
              if (v29)
              {
                v52 = 0;
                goto LABEL_91;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v20))
          v52 = 0;
LABEL_91:
        *(_BYTE *)(a1 + 72) = v52 != 0;
        goto LABEL_102;
      case 6:
        if (!v33)
          goto LABEL_82;
        if ((*(_BYTE *)(a1 + 76) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_121;
          v59 = 2 * *(_BYTE *)(a1 + 76);
LABEL_100:
          v8 += v59 >> 7;
LABEL_101:
          v20 = (int *)MEMORY[0x1E0D82BC8];
          v7 = (int *)MEMORY[0x1E0D82BD8];
LABEL_102:
          if (!(v67 & 1 | (v8 != 0)))
            goto LABEL_103;
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_121;
        v48 = objc_alloc_init(GEORPCuratedCollectionContext);
        if (GEORPCuratedCollectionContextReadAllFrom((uint64_t)v48, (void *)v3, v11 & 1))
        {
          PBReaderRecallMark();
          v49 = 48;
LABEL_81:
          v57 = *(void **)(a1 + v49);
          *(_QWORD *)(a1 + v49) = v48;

          --v8;
          goto LABEL_101;
        }
LABEL_120:

LABEL_121:
        v64 = 0;
        v20 = (int *)MEMORY[0x1E0D82BC8];
LABEL_104:
        v65 = &OBJC_IVAR___GEOTransitVehicleInfo__pickupDropoffType;
        if ((v66 & 1) != 0)
LABEL_105:
          *(_BYTE *)(a1 + v65[601]) |= 4u;
        if (v69 & 1 | ((v64 & 1) == 0))
        {
          *(_BYTE *)(a1 + v65[601]) |= 8u;
          *(_BYTE *)(a1 + v65[601]) |= 0x20u;
          *(_BYTE *)(a1 + v65[601]) |= 0x10u;
          *(_BYTE *)(a1 + v65[601]) |= 0x40u;
        }
        else if (v18)
        {
          while (1)
          {
            v60 = *v18++;
            v61 = 8;
            switch(v60)
            {
              case 0:
                goto LABEL_114;
              case 2:
                goto LABEL_113;
              case 3:
                v61 = 32;
                goto LABEL_113;
              case 4:
                v61 = 16;
                goto LABEL_113;
              case 6:
                v61 = 64;
LABEL_113:
                *(_BYTE *)(a1 + v65[601]) |= v61;
                break;
              default:
                continue;
            }
          }
        }
LABEL_114:
        if (v64)
          v3 = *(_BYTE *)(v3 + *v20) == 0;
        else
          v3 = 0;
        if ((v69 & 1) != 0)
        {
          v62 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      default:
        if ((v66 & 1) == 0 || (*(_BYTE *)(a1 + 76) & 4) != 0)
        {
LABEL_82:
          v58 = PBReaderSkipValueWithTag();
          v7 = (int *)MEMORY[0x1E0D82BD8];
          v20 = (int *)MEMORY[0x1E0D82BC8];
          if ((v58 & 1) == 0)
          {
            v64 = 0;
            goto LABEL_104;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v45 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v46 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v45;

          }
          v47 = PBUnknownFieldAdd();
          v20 = (int *)MEMORY[0x1E0D82BC8];
          v7 = (int *)MEMORY[0x1E0D82BD8];
          if (!v47)
          {
            v64 = 0;
            v65 = &OBJC_IVAR___GEOTransitVehicleInfo__pickupDropoffType;
            goto LABEL_105;
          }
        }
        goto LABEL_102;
    }
  }
}

void sub_188A89EF8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A8A03C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A8A1F8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A8AB6C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORPPoiFeedbackCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  objc_msgSend(a1[3], "readAll:", 1);
  objc_msgSend(a1[5], "readAll:", 1);
  objc_msgSend(a1[4], "readAll:", 1);
  return objc_msgSend(a1[6], "readAll:", 1);
}

unint64_t GEORPPoiFeedbackReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 60))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEORPPoiFeedbackReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 60) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEORPPoiFeedbackReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEORPPoiFeedbackReadAllFrom_initialTag;
  Specified = GEORPPoiFeedbackReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEORPPoiFeedbackCallReadAllRecursiveWithoutSynchronized((id *)a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_188A8AD64(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPPoiFeedbackReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORPPoiFeedbackReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188A8ADC4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A8AFD8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL _GEORPPoiFeedbackIsDirty(uint64_t a1)
{
  int v2;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  v2 = *(char *)(a1 + 76);
  if (v2 < 0)
    return 1;
  if ((v2 & 8) != 0)
  {
    if ((GEORPPoiCorrectionsIsDirty(*(os_unfair_lock_s **)(a1 + 24)) & 1) != 0)
      return 1;
    LOBYTE(v2) = *(_BYTE *)(a1 + 76);
  }
  if ((v2 & 0x20) == 0)
    goto LABEL_8;
  if ((GEOPDPlaceIsDirty(*(os_unfair_lock_s **)(a1 + 40)) & 1) != 0)
    return 1;
  LOBYTE(v2) = *(_BYTE *)(a1 + 76);
LABEL_8:
  if ((v2 & 0x10) != 0)
  {
    if ((GEOPDPlaceRequestIsDirty(*(os_unfair_lock_s **)(a1 + 32)) & 1) != 0)
      return 1;
    LOBYTE(v2) = *(_BYTE *)(a1 + 76);
  }
  return (v2 & 0x40) != 0 && GEORPCuratedCollectionContextIsDirty(*(_QWORD *)(a1 + 48));
}

os_unfair_lock_s *GEORPPoiFeedbackIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  _BOOL8 IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEORPPoiFeedbackIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 16);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_188A8B4F8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A8B93C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A8BC00(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPPoiImageFeedbackReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  char v17;
  unsigned __int8 v18;
  char v19;
  int *v20;
  int *v21;
  int *v22;
  int *v23;
  char v24;
  unsigned int v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  int v32;
  unint64_t v34;
  BOOL v35;
  int *v36;
  int v37;
  int v38;
  BOOL v39;
  GEORPPoiImageFeedbackContext *v40;
  uint64_t v41;
  void *v42;
  id v43;
  void *v44;
  int v45;
  char v46;
  char v47;
  char v48;
  int v49;
  int v50;
  void *v51;
  int v53;
  int *v54;
  char v55;
  char v56;
  char v57;
  BOOL v58;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1)
      + (*(_BYTE *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1);
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v7 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 != 0;
        v17 = v16 & ~(_BYTE)v11 | v9;
        v18 = v16 | v11;
        v55 = v17;
        v19 = v18 | v17;
        if (((v18 | v7) & 1) != 0)
          v20 = 0;
        else
          v20 = a3;
        v58 = v18;
        v56 = v19;
        v57 = (v20 == 0) | v18;
        v21 = (int *)MEMORY[0x1E0D82BF0];
        v22 = (int *)MEMORY[0x1E0D82BC8];
        v23 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v8;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v21) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v22))
      goto LABEL_66;
    v24 = 0;
    v25 = 0;
    v26 = 0;
    while (1)
    {
      v27 = *v21;
      v28 = *(_QWORD *)(v3 + v27);
      v29 = v28 + 1;
      if (v28 == -1 || v29 > *(_QWORD *)(v3 + *v6))
        break;
      v30 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v28);
      *(_QWORD *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0)
        goto LABEL_25;
      v24 += 7;
      if (v25++ >= 9)
      {
        v26 = 0;
        v32 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v22) = 1;
LABEL_25:
    v32 = *(unsigned __int8 *)(v3 + *v22);
    if (*(_BYTE *)(v3 + *v22))
      v26 = 0;
LABEL_27:
    if (v32 || (v26 & 7) == 4)
    {
LABEL_66:
      v53 = 1;
      goto LABEL_67;
    }
    v34 = v26 >> 3;
    v35 = v58;
    if ((v57 & 1) == 0)
    {
      v36 = v20;
      do
      {
        v38 = *v36++;
        v37 = v38;
        v35 = v38 != 0;
        if (v38)
          v39 = v37 == (_DWORD)v34;
        else
          v39 = 1;
      }
      while (!v39);
    }
    if ((_DWORD)v34 == 2)
      break;
    if ((_DWORD)v34 == 1)
    {
      if (!v35)
        goto LABEL_57;
      if ((*(_BYTE *)(a1 + 52) & 2) == 0)
      {
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_86;
        v40 = objc_alloc_init(GEORPPoiImageFeedbackContext);
        if (!GEORPPoiImageFeedbackContextReadAllFrom((uint64_t)v40, (void *)v3, v10 & 1))
          goto LABEL_85;
        PBReaderRecallMark();
        v41 = 24;
LABEL_50:
        v42 = *(void **)(a1 + v41);
        *(_QWORD *)(a1 + v41) = v40;

        --v8;
LABEL_64:
        v22 = (int *)MEMORY[0x1E0D82BC8];
        goto LABEL_65;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        goto LABEL_86;
      v47 = *(_BYTE *)(a1 + 52) << 6;
LABEL_63:
      v8 += v47 >> 7;
      goto LABEL_64;
    }
    if ((v55 & 1) == 0 || (*(_BYTE *)(a1 + 52) & 1) != 0)
    {
LABEL_57:
      v46 = PBReaderSkipValueWithTag();
      v22 = (int *)MEMORY[0x1E0D82BC8];
      if ((v46 & 1) == 0)
      {
        v53 = 0;
        goto LABEL_67;
      }
      goto LABEL_65;
    }
    if (!*(_QWORD *)(a1 + 16))
    {
      v43 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
      v44 = *(void **)(a1 + 16);
      *(_QWORD *)(a1 + 16) = v43;

    }
    v45 = PBUnknownFieldAdd();
    v22 = (int *)MEMORY[0x1E0D82BC8];
    if (!v45)
    {
      v53 = 0;
      v54 = &OBJC_IVAR___GEOTransitVehicleInfo__pickupDropoffType;
      goto LABEL_68;
    }
LABEL_65:
    if (!(v56 & 1 | (v8 != 0)))
      goto LABEL_66;
  }
  if (!v35)
    goto LABEL_57;
  if ((*(_BYTE *)(a1 + 52) & 4) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0)
      goto LABEL_86;
    v47 = 32 * *(_BYTE *)(a1 + 52);
    goto LABEL_63;
  }
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_86;
  v40 = objc_alloc_init(GEORPPoiImageFeedbackCorrections);
  if (GEORPPoiImageFeedbackCorrectionsReadAllFrom((uint64_t)v40, (void *)v3))
  {
    PBReaderRecallMark();
    v41 = 32;
    goto LABEL_50;
  }
LABEL_85:

LABEL_86:
  v53 = 0;
  v22 = (int *)MEMORY[0x1E0D82BC8];
LABEL_67:
  v54 = &OBJC_IVAR___GEOTransitVehicleInfo__pickupDropoffType;
  if ((v55 & 1) == 0)
    goto LABEL_69;
LABEL_68:
  *(_BYTE *)(a1 + v54[613]) |= 1u;
LABEL_69:
  if (v58 || (v53 & 1) == 0)
  {
    *(_BYTE *)(a1 + v54[613]) |= 2u;
    *(_BYTE *)(a1 + v54[613]) |= 4u;
    goto LABEL_79;
  }
  if (v20)
  {
    while (1)
    {
      v50 = *v20++;
      v49 = v50;
      if (v50 == 1)
        break;
      if (v49 == 2)
      {
        v48 = 4;
LABEL_75:
        *(_BYTE *)(a1 + v54[613]) |= v48;
      }
      else if (!v49)
      {
        goto LABEL_79;
      }
    }
    v48 = 2;
    goto LABEL_75;
  }
LABEL_79:
  if (v53)
    v3 = *(_BYTE *)(v3 + *v22) == 0;
  else
    v3 = 0;
  if (v58)
  {
    v51 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_188A8C294(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A8C888(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPPoiImageFeedbackReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEORPPoiImageFeedbackReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEORPPoiImageFeedbackReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEORPPoiImageFeedbackReadAllFrom_initialTag;
  Specified = GEORPPoiImageFeedbackReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    objc_msgSend(*(id *)(a1 + 24), "readAll:", 1);
    objc_msgSend(*(id *)(a1 + 32), "readAll:", 1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_188A8CA40(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPPoiImageFeedbackReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORPPoiImageFeedbackReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188A8CAA0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPPoiImageFeedbackContextIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  _BOOL8 v17;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (!a1[*v4])
    {
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 == 2 && PBReaderPlaceMark() && GEOPDPlaceIsValid(a1))
            goto LABEL_31;
          goto LABEL_34;
        case 2u:
          if (v15 == 2)
            goto LABEL_26;
          goto LABEL_34;
        case 3u:
          if (v15 == 2)
            goto LABEL_26;
          goto LABEL_34;
        case 4u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPFeedbackClientImageInfoIsValid(a1))
            goto LABEL_34;
LABEL_31:
          PBReaderRecallMark();
          goto LABEL_32;
        default:
LABEL_26:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_34:
            PBReaderRecallMark();
            return 0;
          }
LABEL_32:
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_33;
          break;
      }
    }
  }
LABEL_33:
  v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

BOOL GEORPPoiImageFeedbackCorrectionsIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  _BOOL8 v23;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      if ((v8 >> 3) == 2)
      {
        if (v15 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_37:
          v23 = 0;
          goto LABEL_36;
        }
      }
      else if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0)
          goto LABEL_37;
        v17 = 0;
        while (1)
        {
          v18 = *v2;
          v19 = *(_QWORD *)&a1[v18];
          v20 = v19 + 1;
          if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
            break;
          v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
          *(_QWORD *)&a1[v18] = v20;
          if (v21 < 0 && v17++ <= 8)
            continue;
          goto LABEL_34;
        }
        a1[*v4] = 1;
      }
      else if (!PBReaderSkipValueWithTag())
      {
        goto LABEL_37;
      }
LABEL_34:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v23 = a1[*v4] == 0;
LABEL_36:
  PBReaderRecallMark();
  return v23;
}

void sub_188A8D060(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORPPoiImageFeedbackIsDirty(uint64_t a1)
{
  unsigned int v2;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v2 = *(unsigned __int8 *)(a1 + 52);
  if ((v2 & 8) != 0)
    return 1;
  if ((v2 & 2) != 0)
  {
    if ((GEORPPoiImageFeedbackContextIsDirty(*(os_unfair_lock_s **)(a1 + 24)) & 1) != 0)
      return 1;
    v2 = *(unsigned __int8 *)(a1 + 52);
  }
  return (v2 >> 2) & 1;
}

os_unfair_lock_s *GEORPPoiImageFeedbackIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEORPPoiImageFeedbackIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 12);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_188A8D388(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A8D5D4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A8D858(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPPoiImageFeedbackContextReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  char v17;
  unsigned __int8 v18;
  char v19;
  int *v20;
  int *v21;
  int *v22;
  int *v23;
  char v24;
  unsigned int v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  int v32;
  unint64_t v34;
  BOOL v35;
  int *v36;
  int v37;
  int v38;
  BOOL v39;
  GEOPDPlace *v40;
  uint64_t v41;
  id v42;
  void *v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  char v48;
  char v49;
  int v50;
  char v51;
  void *v52;
  int v54;
  int *v55;
  char v56;
  char v57;
  char v58;
  BOOL v59;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 60);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 56));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = (vaddv_s16((int16x4_t)(*(_QWORD *)&vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int8 *)(a1 + 68)), (uint16x4_t)0xFFFFFFFEFFFDFFFCLL) & 0xFF01FF01FF01FF01))+ (*(_BYTE *)(a1 + 68) & 1));
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 > 2;
        v17 = v16 & ~(_BYTE)v11 | v9;
        v18 = v16 | v11;
        v56 = v17;
        v19 = v18 | v17;
        if (((v18 | v8) & 1) != 0)
          v20 = 0;
        else
          v20 = a3;
        v59 = v18;
        v57 = v19;
        v58 = (v20 == 0) | v18;
        v21 = (int *)MEMORY[0x1E0D82BF0];
        v22 = (int *)MEMORY[0x1E0D82BC8];
        v23 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v7;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v21) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v22))
      goto LABEL_77;
    v24 = 0;
    v25 = 0;
    v26 = 0;
    while (1)
    {
      v27 = *v21;
      v28 = *(_QWORD *)(v3 + v27);
      v29 = v28 + 1;
      if (v28 == -1 || v29 > *(_QWORD *)(v3 + *v6))
        break;
      v30 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v28);
      *(_QWORD *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0)
        goto LABEL_25;
      v24 += 7;
      if (v25++ >= 9)
      {
        v26 = 0;
        v32 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v22) = 1;
LABEL_25:
    v32 = *(unsigned __int8 *)(v3 + *v22);
    if (*(_BYTE *)(v3 + *v22))
      v26 = 0;
LABEL_27:
    if (v32 || (v26 & 7) == 4)
    {
LABEL_77:
      v54 = 1;
      goto LABEL_78;
    }
    v34 = v26 >> 3;
    v35 = v59;
    if ((v58 & 1) == 0)
    {
      v36 = v20;
      do
      {
        v38 = *v36++;
        v37 = v38;
        v35 = v38 != 0;
        if (v38)
          v39 = v37 == (_DWORD)v34;
        else
          v39 = 1;
      }
      while (!v39);
    }
    switch((int)v34)
    {
      case 1:
        if (!v35)
          goto LABEL_64;
        if ((*(_BYTE *)(a1 + 68) & 8) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_95;
          v40 = objc_alloc_init(GEOPDPlace);
          if (GEOPDPlaceReadAllFrom((uint64_t)v40, (void *)v3, v10 & 1))
          {
            PBReaderRecallMark();
            v41 = 40;
            goto LABEL_62;
          }
          goto LABEL_94;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_95;
        v49 = 16 * *(_BYTE *)(a1 + 68);
        goto LABEL_74;
      case 2:
        if (!v35)
          goto LABEL_64;
        if ((*(_BYTE *)(a1 + 68) & 0x10) == 0)
        {
          PBReaderReadString();
          v45 = objc_claimAutoreleasedReturnValue();
          v46 = 48;
          goto LABEL_56;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_95;
        v49 = 8 * *(_BYTE *)(a1 + 68);
        goto LABEL_74;
      case 3:
        if (!v35)
          goto LABEL_64;
        if ((*(_BYTE *)(a1 + 68) & 4) == 0)
        {
          PBReaderReadString();
          v45 = objc_claimAutoreleasedReturnValue();
          v46 = 32;
LABEL_56:
          v47 = *(void **)(a1 + v46);
          *(_QWORD *)(a1 + v46) = v45;
          goto LABEL_63;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_95;
        v49 = 32 * *(_BYTE *)(a1 + 68);
        goto LABEL_74;
      case 4:
        if (!v35)
          goto LABEL_64;
        if ((*(_BYTE *)(a1 + 68) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_95;
          v49 = *(_BYTE *)(a1 + 68) << 6;
LABEL_74:
          v7 += v49 >> 7;
          goto LABEL_75;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_95;
        v40 = objc_alloc_init(GEORPFeedbackClientImageInfo);
        if (GEORPFeedbackClientImageInfoReadAllFrom((uint64_t)v40, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          v41 = 24;
LABEL_62:
          v47 = *(void **)(a1 + v41);
          *(_QWORD *)(a1 + v41) = v40;
LABEL_63:

          --v7;
LABEL_75:
          v22 = (int *)MEMORY[0x1E0D82BC8];
LABEL_76:
          if (!(v57 & 1 | (v7 != 0)))
            goto LABEL_77;
          continue;
        }
LABEL_94:

LABEL_95:
        v54 = 0;
        v22 = (int *)MEMORY[0x1E0D82BC8];
LABEL_78:
        v55 = &OBJC_IVAR___GEOTransitVehicleInfo__pickupDropoffType;
        if ((v56 & 1) != 0)
LABEL_79:
          *(_BYTE *)(a1 + v55[621]) |= 1u;
        if (v59 || (v54 & 1) == 0)
        {
          *(_BYTE *)(a1 + v55[621]) |= 8u;
          *(_BYTE *)(a1 + v55[621]) |= 0x10u;
          *(_BYTE *)(a1 + v55[621]) |= 4u;
          *(_BYTE *)(a1 + v55[621]) |= 2u;
        }
        else if (v20)
        {
          while (1)
          {
            v50 = *v20++;
            v51 = 8;
            switch(v50)
            {
              case 0:
                goto LABEL_88;
              case 1:
                goto LABEL_87;
              case 2:
                v51 = 16;
                goto LABEL_87;
              case 3:
                v51 = 4;
                goto LABEL_87;
              case 4:
                v51 = 2;
LABEL_87:
                *(_BYTE *)(a1 + v55[621]) |= v51;
                break;
              default:
                continue;
            }
          }
        }
LABEL_88:
        if (v54)
          v3 = *(_BYTE *)(v3 + *v22) == 0;
        else
          v3 = 0;
        if (v59)
        {
          v52 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      default:
        if ((v56 & 1) == 0 || (*(_BYTE *)(a1 + 68) & 1) != 0)
        {
LABEL_64:
          v48 = PBReaderSkipValueWithTag();
          v22 = (int *)MEMORY[0x1E0D82BC8];
          if ((v48 & 1) == 0)
          {
            v54 = 0;
            goto LABEL_78;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v42 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v43 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v42;

          }
          v44 = PBUnknownFieldAdd();
          v22 = (int *)MEMORY[0x1E0D82BC8];
          if (!v44)
          {
            v54 = 0;
            v55 = &OBJC_IVAR___GEOTransitVehicleInfo__pickupDropoffType;
            goto LABEL_79;
          }
        }
        goto LABEL_76;
    }
  }
}

void sub_188A8E014(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A8E154(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A8E298(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A8E9B4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPPoiImageFeedbackContextReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 60))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEORPPoiImageFeedbackContextReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 60) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEORPPoiImageFeedbackContextReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEORPPoiImageFeedbackContextReadAllFrom_initialTag;
  Specified = GEORPPoiImageFeedbackContextReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    objc_msgSend(*(id *)(a1 + 40), "readAll:", 1);
    objc_msgSend(*(id *)(a1 + 24), "readAll:", 1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_188A8EB6C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPPoiImageFeedbackContextReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORPPoiImageFeedbackContextReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188A8EBCC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A8ED90(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL _GEORPPoiImageFeedbackContextIsDirty(uint64_t a1)
{
  char v2;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  v2 = *(_BYTE *)(a1 + 68);
  if ((v2 & 0x20) != 0)
    return 1;
  if ((*(_BYTE *)(a1 + 68) & 8) != 0)
  {
    if ((GEOPDPlaceIsDirty(*(os_unfair_lock_s **)(a1 + 40)) & 1) != 0)
      return 1;
    v2 = *(_BYTE *)(a1 + 68);
  }
  if ((v2 & 0x14) != 0)
    return 1;
  return (v2 & 2) != 0 && GEORPFeedbackClientImageInfoIsDirty(*(_QWORD *)(a1 + 24));
}

os_unfair_lock_s *GEORPPoiImageFeedbackContextIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  _BOOL8 IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEORPPoiImageFeedbackContextIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 16);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_188A8F150(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A8F438(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPPoiImageFeedbackCorrectionsReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  void *v26;
  id v27;
  void *v28;
  _BOOL8 v29;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 2)
        {
          PBReaderReadString();
          v25 = objc_claimAutoreleasedReturnValue();
          v26 = *(void **)(a1 + 16);
          *(_QWORD *)(a1 + 16) = v25;

        }
        else if ((v10 >> 3) == 1)
        {
          v18 = 0;
          v19 = 0;
          v20 = 0;
          *(_BYTE *)(a1 + 28) |= 1u;
          while (1)
          {
            v21 = *v4;
            v22 = *(_QWORD *)&v3[v21];
            v23 = v22 + 1;
            if (v22 == -1 || v23 > *(_QWORD *)&v3[*v5])
              break;
            v24 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v22);
            *(_QWORD *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0)
              goto LABEL_34;
            v18 += 7;
            v15 = v19++ >= 9;
            if (v15)
            {
              LODWORD(v20) = 0;
              goto LABEL_36;
            }
          }
          v3[*v6] = 1;
LABEL_34:
          if (v3[*v6])
            LODWORD(v20) = 0;
LABEL_36:
          *(_DWORD *)(a1 + 24) = v20;
        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v27 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v28 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v27;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_39;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v29 = v3[*v6] == 0;
  }
  else
  {
LABEL_39:
    v29 = 0;
  }
  objc_sync_exit(v3);

  return v29;
}

void sub_188A8FFA8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPPoiImageFeedbackCorrectionsReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORPPoiImageFeedbackCorrectionsReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188A90008(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A90598(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPRapNotificationLogEventReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  char v15;
  unsigned __int8 v16;
  int *v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  BOOL v28;
  int v29;
  unint64_t v31;
  BOOL v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  void *v40;
  int v41;
  void *v42;
  char v43;
  unsigned int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  char v50;
  unsigned int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  char v56;
  char v57;
  BOOL v58;
  uint64_t v59;
  char v60;
  char v61;
  int v62;
  int v63;
  void *v64;
  int v66;
  int *v67;
  char v68;
  char v69;
  char v70;
  BOOL v71;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int8 *)(a1 + 56) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 4) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 2) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v11;
        v12 = v7;
        goto LABEL_8;
      case -3:
        v9 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v11 != 0;
        v15 = v14 & ~(_BYTE)v7;
        v16 = v14 | v7;
        v68 = v15 | v8;
        v69 = v16 | v15 | v8;
        if (((v16 | v9) & 1) != 0)
          v17 = 0;
        else
          v17 = a3;
        v70 = (v17 == 0) | v16;
        v71 = v16;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_7:
        v12 = v7;
        v13 = v8;
LABEL_8:
        ++v10;
        v7 = v12;
        v8 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v19))
      goto LABEL_83;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0)
        goto LABEL_23;
      v21 += 7;
      v28 = v22++ >= 9;
      if (v28)
      {
        v23 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_25;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_23:
    v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_25:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_83:
      v66 = 1;
      goto LABEL_84;
    }
    v31 = v23 >> 3;
    v32 = v71;
    if ((v70 & 1) == 0)
    {
      v33 = v17;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if (!v32)
          goto LABEL_66;
        if ((*(_BYTE *)(a1 + 56) & 8) == 0)
        {
          PBReaderReadString();
          v37 = objc_claimAutoreleasedReturnValue();
          v38 = 24;
          goto LABEL_49;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_102;
        v60 = 16 * *(_BYTE *)(a1 + 56);
        goto LABEL_81;
      case 2:
        if (!v32)
          goto LABEL_66;
        if ((*(_BYTE *)(a1 + 56) & 0x10) == 0)
        {
          PBReaderReadString();
          v37 = objc_claimAutoreleasedReturnValue();
          v38 = 32;
LABEL_49:
          v42 = *(void **)(a1 + v38);
          *(_QWORD *)(a1 + v38) = v37;

          v19 = (int *)MEMORY[0x1E0D82BC8];
          --v10;
LABEL_82:
          if (!(v69 & 1 | (v10 != 0)))
            goto LABEL_83;
          continue;
        }
        if ((PBReaderSkipValueWithTag() & 1) != 0)
        {
          v60 = 8 * *(_BYTE *)(a1 + 56);
LABEL_81:
          v10 += v60 >> 7;
          v19 = (int *)MEMORY[0x1E0D82BC8];
          goto LABEL_82;
        }
LABEL_102:
        v66 = 0;
        v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_84:
        v67 = &OBJC_IVAR___GEOTransitVehicleInfo__pickupDropoffType;
        if ((v68 & 1) != 0)
LABEL_85:
          *(_BYTE *)(a1 + v67[635]) |= 4u;
        if (v71 || (v66 & 1) == 0)
        {
          *(_BYTE *)(a1 + v67[635]) |= 8u;
          *(_BYTE *)(a1 + v67[635]) |= 0x10u;
          goto LABEL_96;
        }
        if (v17)
        {
          while (1)
          {
            v63 = *v17++;
            v62 = v63;
            if (v63 == 1)
              break;
            if (v62 == 2)
            {
              v61 = 16;
LABEL_92:
              *(_BYTE *)(a1 + v67[635]) |= v61;
            }
            else if (!v62)
            {
              goto LABEL_96;
            }
          }
          v61 = 8;
          goto LABEL_92;
        }
LABEL_96:
        if (v66)
          v3 = *(_BYTE *)(v3 + *v19) == 0;
        else
          v3 = 0;
        if (v71)
        {
          v64 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      case 3:
        if ((v9 & 1) == 0)
          goto LABEL_66;
        v43 = 0;
        v44 = 0;
        v45 = 0;
        *(_BYTE *)(a1 + 56) |= 2u;
        while (2)
        {
          v46 = *v18;
          v47 = *(_QWORD *)(v3 + v46);
          v48 = v47 + 1;
          if (v47 == -1 || v48 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v19) = 1;
          }
          else
          {
            v49 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v47);
            *(_QWORD *)(v3 + v46) = v48;
            v45 |= (unint64_t)(v49 & 0x7F) << v43;
            if (v49 < 0)
            {
              v43 += 7;
              v28 = v44++ >= 9;
              if (v28)
              {
                v45 = 0;
                goto LABEL_71;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v19))
          v45 = 0;
LABEL_71:
        v58 = v45 != 0;
        v59 = 53;
        goto LABEL_76;
      case 4:
        if ((v9 & 1) == 0)
          goto LABEL_66;
        v50 = 0;
        v51 = 0;
        v52 = 0;
        *(_BYTE *)(a1 + 56) |= 1u;
        while (2)
        {
          v53 = *v18;
          v54 = *(_QWORD *)(v3 + v53);
          v55 = v54 + 1;
          if (v54 == -1 || v55 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v19) = 1;
          }
          else
          {
            v56 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v54);
            *(_QWORD *)(v3 + v53) = v55;
            v52 |= (unint64_t)(v56 & 0x7F) << v50;
            if (v56 < 0)
            {
              v50 += 7;
              v28 = v51++ >= 9;
              if (v28)
              {
                v52 = 0;
                goto LABEL_75;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v19))
          v52 = 0;
LABEL_75:
        v58 = v52 != 0;
        v59 = 52;
LABEL_76:
        *(_BYTE *)(a1 + v59) = v58;
        goto LABEL_82;
      default:
        if ((v68 & 1) == 0 || (*(_BYTE *)(a1 + 56) & 4) != 0)
        {
LABEL_66:
          v57 = PBReaderSkipValueWithTag();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if ((v57 & 1) == 0)
          {
            v66 = 0;
            goto LABEL_84;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v39 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v40 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v39;

          }
          v41 = PBUnknownFieldAdd();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if (!v41)
          {
            v66 = 0;
            v67 = &OBJC_IVAR___GEOTransitVehicleInfo__pickupDropoffType;
            goto LABEL_85;
          }
        }
        goto LABEL_82;
    }
  }
}

void sub_188A90D44(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A914E0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPRapNotificationLogEventReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEORPRapNotificationLogEventReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEORPRapNotificationLogEventReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEORPRapNotificationLogEventReadAllFrom_initialTag;
  Specified = GEORPRapNotificationLogEventReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_188A9166C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPRapNotificationLogEventReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORPRapNotificationLogEventReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188A916CC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A918AC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPRapNotificationLogEventIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v2 = (*(_BYTE *)(a1 + 56) & 0x38) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return v2;
}

void sub_188A91BF4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A91F2C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A92188(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPRapProfileInfoReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  char v17;
  unsigned __int8 v18;
  int *v19;
  int *v20;
  int *v21;
  int *v22;
  char v23;
  unsigned int v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  int v31;
  unint64_t v33;
  BOOL v34;
  int *v35;
  int v36;
  int v37;
  BOOL v38;
  GEOLocalizedString *v39;
  uint64_t v40;
  void *v41;
  id v42;
  void *v43;
  int v44;
  char v45;
  char v46;
  int v47;
  int v48;
  void *v49;
  int v51;
  int *v52;
  char v53;
  char v54;
  char v55;
  BOOL v56;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1)
      + (*(_BYTE *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1);
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v7 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 != 0;
        v17 = v16 & ~(_BYTE)v11 | v9;
        v18 = v16 | v11;
        v53 = v17;
        v54 = v18 | v17;
        if (((v18 | v7) & 1) != 0)
          v19 = 0;
        else
          v19 = a3;
        v20 = (int *)MEMORY[0x1E0D82BF0];
        v55 = (v19 == 0) | v18;
        v56 = v18;
        v21 = (int *)MEMORY[0x1E0D82BC8];
        v22 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v8;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v20) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v21))
      goto LABEL_66;
    v23 = 0;
    v24 = 0;
    v25 = 0;
    while (1)
    {
      v26 = *v20;
      v27 = *(_QWORD *)(v3 + v26);
      v28 = v27 + 1;
      if (v27 == -1 || v28 > *(_QWORD *)(v3 + *v6))
        break;
      v29 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v27);
      *(_QWORD *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0)
        goto LABEL_25;
      v23 += 7;
      if (v24++ >= 9)
      {
        v25 = 0;
        v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v21) = 1;
LABEL_25:
    v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(_BYTE *)(v3 + *v21))
      v25 = 0;
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_66:
      v51 = 1;
      goto LABEL_67;
    }
    v33 = v25 >> 3;
    v34 = v56;
    if ((v55 & 1) == 0)
    {
      v35 = v19;
      do
      {
        v37 = *v35++;
        v36 = v37;
        v34 = v37 != 0;
        if (v37)
          v38 = v36 == (_DWORD)v33;
        else
          v38 = 1;
      }
      while (!v38);
    }
    if ((_DWORD)v33 == 2)
      break;
    if ((_DWORD)v33 == 1)
    {
      if (!v34)
        goto LABEL_57;
      if ((*(_BYTE *)(a1 + 52) & 4) == 0)
      {
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_85;
        v39 = objc_alloc_init(GEOLocalizedString);
        if (!GEOLocalizedStringReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1))
          goto LABEL_84;
        PBReaderRecallMark();
        v40 = 32;
LABEL_50:
        v41 = *(void **)(a1 + v40);
        *(_QWORD *)(a1 + v40) = v39;

        --v8;
LABEL_64:
        v21 = (int *)MEMORY[0x1E0D82BC8];
        goto LABEL_65;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        goto LABEL_85;
      v46 = 32 * *(_BYTE *)(a1 + 52);
LABEL_63:
      v8 += v46 >> 7;
      goto LABEL_64;
    }
    if ((v53 & 1) == 0 || (*(_BYTE *)(a1 + 52) & 1) != 0)
    {
LABEL_57:
      v45 = PBReaderSkipValueWithTag();
      v21 = (int *)MEMORY[0x1E0D82BC8];
      if ((v45 & 1) == 0)
      {
        v51 = 0;
        goto LABEL_67;
      }
      goto LABEL_65;
    }
    if (!*(_QWORD *)(a1 + 16))
    {
      v42 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
      v43 = *(void **)(a1 + 16);
      *(_QWORD *)(a1 + 16) = v42;

    }
    v44 = PBUnknownFieldAdd();
    v21 = (int *)MEMORY[0x1E0D82BC8];
    if (!v44)
    {
      v51 = 0;
      v52 = &OBJC_IVAR___GEOTransitVehicleInfo__pickupDropoffType;
      goto LABEL_68;
    }
LABEL_65:
    if (!(v54 & 1 | (v8 != 0)))
      goto LABEL_66;
  }
  if (!v34)
    goto LABEL_57;
  if ((*(_BYTE *)(a1 + 52) & 2) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0)
      goto LABEL_85;
    v46 = *(_BYTE *)(a1 + 52) << 6;
    goto LABEL_63;
  }
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_85;
  v39 = objc_alloc_init(GEOLocalizedString);
  if (GEOLocalizedStringReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1))
  {
    PBReaderRecallMark();
    v40 = 24;
    goto LABEL_50;
  }
LABEL_84:

LABEL_85:
  v51 = 0;
  v21 = (int *)MEMORY[0x1E0D82BC8];
LABEL_67:
  v52 = &OBJC_IVAR___GEOTransitVehicleInfo__pickupDropoffType;
  if ((v53 & 1) == 0)
    goto LABEL_69;
LABEL_68:
  *(_BYTE *)(a1 + v52[645]) |= 1u;
LABEL_69:
  if (v56 || (v51 & 1) == 0)
  {
    *(_BYTE *)(a1 + v52[645]) |= 4u;
    *(_BYTE *)(a1 + v52[645]) |= 2u;
    goto LABEL_78;
  }
  if (v19)
  {
    while (1)
    {
      v48 = *v19++;
      v47 = v48;
      if (v48 == 1)
        break;
      if (v47 == 2)
      {
LABEL_74:
        *(_BYTE *)(a1 + v52[645]) |= v47;
      }
      else if (!v47)
      {
        goto LABEL_78;
      }
    }
    LOBYTE(v47) = 4;
    goto LABEL_74;
  }
LABEL_78:
  if (v51)
    v3 = *(_BYTE *)(v3 + *v21) == 0;
  else
    v3 = 0;
  if (v56)
  {
    v49 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_188A92810(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A92DD4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPRapProfileInfoReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEORPRapProfileInfoReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEORPRapProfileInfoReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEORPRapProfileInfoReadAllFrom_initialTag;
  Specified = GEORPRapProfileInfoReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    objc_msgSend(*(id *)(a1 + 32), "readAll:", 1);
    objc_msgSend(*(id *)(a1 + 24), "readAll:", 1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_188A92F8C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPRapProfileInfoReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORPRapProfileInfoReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188A92FEC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A93170(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL _GEORPRapProfileInfoIsDirty(uint64_t a1)
{
  char v2;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v2 = *(_BYTE *)(a1 + 52);
  if ((v2 & 8) != 0)
    return 1;
  if ((*(_BYTE *)(a1 + 52) & 4) != 0)
  {
    if (GEOLocalizedStringIsDirty(*(_QWORD *)(a1 + 32)))
      return 1;
    v2 = *(_BYTE *)(a1 + 52);
  }
  return (v2 & 2) != 0 && GEOLocalizedStringIsDirty(*(_QWORD *)(a1 + 24));
}

os_unfair_lock_s *GEORPRapProfileInfoIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  _BOOL8 IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEORPRapProfileInfoIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 12);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_188A93480(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A936CC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPRapUserResponseFeedbackReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  uint64_t v18;
  void *v19;
  id v20;
  void *v21;
  _BOOL8 v22;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 1)
        {
          PBReaderReadString();
          v18 = objc_claimAutoreleasedReturnValue();
          v19 = *(void **)(a1 + 16);
          *(_QWORD *)(a1 + 16) = v18;

        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v20 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v21 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v20;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_26;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v22 = v3[*v6] == 0;
  }
  else
  {
LABEL_26:
    v22 = 0;
  }
  objc_sync_exit(v3);

  return v22;
}

void sub_188A93D9C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPRapUserResponseFeedbackReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORPRapUserResponseFeedbackReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188A93DFC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPRunningTrackFeedbackReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  uint64_t v18;
  void *v19;
  id v20;
  void *v21;
  _BOOL8 v22;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 1)
        {
          PBReaderReadString();
          v18 = objc_claimAutoreleasedReturnValue();
          v19 = *(void **)(a1 + 16);
          *(_QWORD *)(a1 + 16) = v18;

        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v20 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v21 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v20;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_26;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v22 = v3[*v6] == 0;
  }
  else
  {
LABEL_26:
    v22 = 0;
  }
  objc_sync_exit(v3);

  return v22;
}

void sub_188A946C4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPRunningTrackFeedbackReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORPRunningTrackFeedbackReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188A94724(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A94BA0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPSearchCommonContextReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  char v15;
  unsigned __int8 v16;
  char v17;
  int *v18;
  int *v19;
  int *v20;
  int *v21;
  char v22;
  unsigned int v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  int v30;
  unint64_t v32;
  BOOL v33;
  int *v34;
  int v35;
  int v36;
  BOOL v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  id v41;
  void *v42;
  int v43;
  char v44;
  char v45;
  char v46;
  int v47;
  int v48;
  void *v49;
  int v51;
  char v52;
  char v53;
  char v54;
  BOOL v55;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1)
      + (*(_BYTE *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v11;
        v12 = v7;
        goto LABEL_8;
      case -3:
        v9 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v11 != 0;
        v15 = v14 & ~(_BYTE)v7;
        v16 = v14 | v7;
        v52 = v15 | v8;
        v17 = v16 | v15 | v8;
        if (((v16 | v9) & 1) != 0)
          v18 = 0;
        else
          v18 = a3;
        v55 = v16;
        v53 = v17;
        v54 = (v18 == 0) | v16;
        v19 = (int *)MEMORY[0x1E0D82BF0];
        v20 = (int *)MEMORY[0x1E0D82BC8];
        v21 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_7:
        v12 = v7;
        v13 = v8;
LABEL_8:
        ++v10;
        v7 = v12;
        v8 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v19) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v20))
      goto LABEL_59;
    v22 = 0;
    v23 = 0;
    v24 = 0;
    while (1)
    {
      v25 = *v19;
      v26 = *(_QWORD *)(v3 + v25);
      v27 = v26 + 1;
      if (v26 == -1 || v27 > *(_QWORD *)(v3 + *v6))
        break;
      v28 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v26);
      *(_QWORD *)(v3 + v25) = v27;
      v24 |= (unint64_t)(v28 & 0x7F) << v22;
      if ((v28 & 0x80) == 0)
        goto LABEL_23;
      v22 += 7;
      if (v23++ >= 9)
      {
        v24 = 0;
        v30 = *(unsigned __int8 *)(v3 + *v20);
        goto LABEL_25;
      }
    }
    *(_BYTE *)(v3 + *v20) = 1;
LABEL_23:
    v30 = *(unsigned __int8 *)(v3 + *v20);
    if (*(_BYTE *)(v3 + *v20))
      v24 = 0;
LABEL_25:
    if (v30 || (v24 & 7) == 4)
    {
LABEL_59:
      v51 = 1;
      goto LABEL_60;
    }
    v32 = v24 >> 3;
    v33 = v55;
    if ((v54 & 1) == 0)
    {
      v34 = v18;
      do
      {
        v36 = *v34++;
        v35 = v36;
        v33 = v36 != 0;
        if (v36)
          v37 = v35 == (_DWORD)v32;
        else
          v37 = 1;
      }
      while (!v37);
    }
    if ((_DWORD)v32 == 2)
      break;
    if ((_DWORD)v32 == 1)
    {
      if (!v33)
        goto LABEL_51;
      if ((*(_BYTE *)(a1 + 52) & 2) != 0)
      {
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_78;
        v45 = *(_BYTE *)(a1 + 52) << 6;
        goto LABEL_57;
      }
      PBReaderReadString();
      v38 = objc_claimAutoreleasedReturnValue();
      v39 = 24;
      goto LABEL_44;
    }
    if ((v52 & 1) == 0 || (*(_BYTE *)(a1 + 52) & 1) != 0)
    {
LABEL_51:
      v44 = PBReaderSkipValueWithTag();
      v20 = (int *)MEMORY[0x1E0D82BC8];
      if ((v44 & 1) == 0)
      {
        v51 = 0;
        goto LABEL_60;
      }
      goto LABEL_58;
    }
    if (!*(_QWORD *)(a1 + 16))
    {
      v41 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
      v42 = *(void **)(a1 + 16);
      *(_QWORD *)(a1 + 16) = v41;

    }
    v43 = PBUnknownFieldAdd();
    v20 = (int *)MEMORY[0x1E0D82BC8];
    if (!v43)
    {
      v51 = 0;
      goto LABEL_61;
    }
LABEL_58:
    if (!(v53 & 1 | (v10 != 0)))
      goto LABEL_59;
  }
  if (!v33)
    goto LABEL_51;
  if ((*(_BYTE *)(a1 + 52) & 4) == 0)
  {
    PBReaderReadString();
    v38 = objc_claimAutoreleasedReturnValue();
    v39 = 32;
LABEL_44:
    v40 = *(void **)(a1 + v39);
    *(_QWORD *)(a1 + v39) = v38;

    v20 = (int *)MEMORY[0x1E0D82BC8];
    --v10;
    goto LABEL_58;
  }
  if ((PBReaderSkipValueWithTag() & 1) != 0)
  {
    v45 = 32 * *(_BYTE *)(a1 + 52);
LABEL_57:
    v10 += v45 >> 7;
    v20 = (int *)MEMORY[0x1E0D82BC8];
    goto LABEL_58;
  }
LABEL_78:
  v51 = 0;
  v20 = (int *)MEMORY[0x1E0D82BC8];
LABEL_60:
  if ((v52 & 1) == 0)
    goto LABEL_62;
LABEL_61:
  *(_BYTE *)(a1 + 52) |= 1u;
LABEL_62:
  if (v55 || (v51 & 1) == 0)
  {
    *(_BYTE *)(a1 + 52) |= 2u;
    *(_BYTE *)(a1 + 52) |= 4u;
    goto LABEL_72;
  }
  if (v18)
  {
    while (1)
    {
      v48 = *v18++;
      v47 = v48;
      if (v48 == 1)
        break;
      if (v47 == 2)
      {
        v46 = 4;
LABEL_68:
        *(_BYTE *)(a1 + 52) |= v46;
      }
      else if (!v47)
      {
        goto LABEL_72;
      }
    }
    v46 = 2;
    goto LABEL_68;
  }
LABEL_72:
  if (v51)
    v3 = *(_BYTE *)(v3 + *v20) == 0;
  else
    v3 = 0;
  if (v55)
  {
    v49 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_188A951A4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A956FC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPSearchCommonContextReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEORPSearchCommonContextReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEORPSearchCommonContextReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEORPSearchCommonContextReadAllFrom_initialTag;
  Specified = GEORPSearchCommonContextReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_188A95888(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPSearchCommonContextReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORPSearchCommonContextReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188A958E8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A95A7C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPSearchCommonContextIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v2 = (*(_BYTE *)(a1 + 52) & 0xE) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return v2;
}

void sub_188A95D14(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A95F38(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A96194(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPSearchFeedbackReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  char v17;
  unsigned __int8 v18;
  char v19;
  int *v20;
  int *v21;
  int *v22;
  int *v23;
  char v24;
  unsigned int v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  int v32;
  unint64_t v34;
  BOOL v35;
  int *v36;
  int v37;
  int v38;
  BOOL v39;
  GEORPSearchFeedbackContext *v40;
  uint64_t v41;
  void *v42;
  id v43;
  void *v44;
  int v45;
  char v46;
  char v47;
  char v48;
  int v49;
  int v50;
  void *v51;
  int v53;
  int *v54;
  char v55;
  char v56;
  char v57;
  BOOL v58;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1)
      + (*(_BYTE *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1);
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v7 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 != 0;
        v17 = v16 & ~(_BYTE)v11 | v9;
        v18 = v16 | v11;
        v55 = v17;
        v19 = v18 | v17;
        if (((v18 | v7) & 1) != 0)
          v20 = 0;
        else
          v20 = a3;
        v58 = v18;
        v56 = v19;
        v57 = (v20 == 0) | v18;
        v21 = (int *)MEMORY[0x1E0D82BF0];
        v22 = (int *)MEMORY[0x1E0D82BC8];
        v23 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v8;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v21) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v22))
      goto LABEL_66;
    v24 = 0;
    v25 = 0;
    v26 = 0;
    while (1)
    {
      v27 = *v21;
      v28 = *(_QWORD *)(v3 + v27);
      v29 = v28 + 1;
      if (v28 == -1 || v29 > *(_QWORD *)(v3 + *v6))
        break;
      v30 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v28);
      *(_QWORD *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0)
        goto LABEL_25;
      v24 += 7;
      if (v25++ >= 9)
      {
        v26 = 0;
        v32 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v22) = 1;
LABEL_25:
    v32 = *(unsigned __int8 *)(v3 + *v22);
    if (*(_BYTE *)(v3 + *v22))
      v26 = 0;
LABEL_27:
    if (v32 || (v26 & 7) == 4)
    {
LABEL_66:
      v53 = 1;
      goto LABEL_67;
    }
    v34 = v26 >> 3;
    v35 = v58;
    if ((v57 & 1) == 0)
    {
      v36 = v20;
      do
      {
        v38 = *v36++;
        v37 = v38;
        v35 = v38 != 0;
        if (v38)
          v39 = v37 == (_DWORD)v34;
        else
          v39 = 1;
      }
      while (!v39);
    }
    if ((_DWORD)v34 == 2)
      break;
    if ((_DWORD)v34 == 1)
    {
      if (!v35)
        goto LABEL_57;
      if ((*(_BYTE *)(a1 + 52) & 2) == 0)
      {
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_86;
        v40 = objc_alloc_init(GEORPSearchFeedbackContext);
        if (!GEORPSearchFeedbackContextReadAllFrom((uint64_t)v40, (void *)v3, v10 & 1))
          goto LABEL_85;
        PBReaderRecallMark();
        v41 = 24;
LABEL_50:
        v42 = *(void **)(a1 + v41);
        *(_QWORD *)(a1 + v41) = v40;

        --v8;
LABEL_64:
        v22 = (int *)MEMORY[0x1E0D82BC8];
        goto LABEL_65;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        goto LABEL_86;
      v47 = *(_BYTE *)(a1 + 52) << 6;
LABEL_63:
      v8 += v47 >> 7;
      goto LABEL_64;
    }
    if ((v55 & 1) == 0 || (*(_BYTE *)(a1 + 52) & 1) != 0)
    {
LABEL_57:
      v46 = PBReaderSkipValueWithTag();
      v22 = (int *)MEMORY[0x1E0D82BC8];
      if ((v46 & 1) == 0)
      {
        v53 = 0;
        goto LABEL_67;
      }
      goto LABEL_65;
    }
    if (!*(_QWORD *)(a1 + 16))
    {
      v43 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
      v44 = *(void **)(a1 + 16);
      *(_QWORD *)(a1 + 16) = v43;

    }
    v45 = PBUnknownFieldAdd();
    v22 = (int *)MEMORY[0x1E0D82BC8];
    if (!v45)
    {
      v53 = 0;
      v54 = &OBJC_IVAR___GEOTransitVehicleInfo__pickupDropoffType;
      goto LABEL_68;
    }
LABEL_65:
    if (!(v56 & 1 | (v8 != 0)))
      goto LABEL_66;
  }
  if (!v35)
    goto LABEL_57;
  if ((*(_BYTE *)(a1 + 52) & 4) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0)
      goto LABEL_86;
    v47 = 32 * *(_BYTE *)(a1 + 52);
    goto LABEL_63;
  }
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_86;
  v40 = objc_alloc_init(GEORPSearchFeedbackCorrections);
  if (GEORPSearchFeedbackCorrectionsReadAllFrom((uint64_t)v40, (void *)v3))
  {
    PBReaderRecallMark();
    v41 = 32;
    goto LABEL_50;
  }
LABEL_85:

LABEL_86:
  v53 = 0;
  v22 = (int *)MEMORY[0x1E0D82BC8];
LABEL_67:
  v54 = &OBJC_IVAR___GEOTransitVehicleInfo__pickupDropoffType;
  if ((v55 & 1) == 0)
    goto LABEL_69;
LABEL_68:
  *(_BYTE *)(a1 + v54[665]) |= 1u;
LABEL_69:
  if (v58 || (v53 & 1) == 0)
  {
    *(_BYTE *)(a1 + v54[665]) |= 2u;
    *(_BYTE *)(a1 + v54[665]) |= 4u;
    goto LABEL_79;
  }
  if (v20)
  {
    while (1)
    {
      v50 = *v20++;
      v49 = v50;
      if (v50 == 1)
        break;
      if (v49 == 2)
      {
        v48 = 4;
LABEL_75:
        *(_BYTE *)(a1 + v54[665]) |= v48;
      }
      else if (!v49)
      {
        goto LABEL_79;
      }
    }
    v48 = 2;
    goto LABEL_75;
  }
LABEL_79:
  if (v53)
    v3 = *(_BYTE *)(v3 + *v22) == 0;
  else
    v3 = 0;
  if (v58)
  {
    v51 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_188A96828(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A96DE4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPSearchFeedbackReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEORPSearchFeedbackReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEORPSearchFeedbackReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEORPSearchFeedbackReadAllFrom_initialTag;
  Specified = GEORPSearchFeedbackReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    objc_msgSend(*(id *)(a1 + 24), "readAll:", 1);
    objc_msgSend(*(id *)(a1 + 32), "readAll:", 1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_188A96F9C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPSearchFeedbackReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORPSearchFeedbackReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188A96FFC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPSearchFeedbackContextIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  _BOOL8 v17;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_30;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        goto LABEL_30;
      if ((v8 >> 3) == 2)
        break;
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEORPSuggestionListIsValid(a1))
          goto LABEL_31;
LABEL_27:
        PBReaderRecallMark();
        goto LABEL_29;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        goto LABEL_31;
LABEL_29:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_30;
    }
    if (v15 != 2 || !PBReaderPlaceMark() || !GEORPPlaceRequestResponseIsValid(a1))
    {
LABEL_31:
      PBReaderRecallMark();
      return 0;
    }
    goto LABEL_27;
  }
LABEL_30:
  v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

BOOL GEORPSearchFeedbackCorrectionsIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int v20;
  _BOOL8 v22;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      if (v14 || (v8 & 7) == 4)
        break;
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0)
          goto LABEL_33;
        v16 = 0;
        while (1)
        {
          v17 = *v2;
          v18 = *(_QWORD *)&a1[v17];
          v19 = v18 + 1;
          if (v18 == -1 || v19 > *(_QWORD *)&a1[*v3])
            break;
          v20 = *(char *)(*(_QWORD *)&a1[*v5] + v18);
          *(_QWORD *)&a1[v17] = v19;
          if (v20 < 0 && v16++ <= 8)
            continue;
          goto LABEL_30;
        }
        a1[*v4] = 1;
      }
      else if (!PBReaderSkipValueWithTag())
      {
LABEL_33:
        v22 = 0;
        goto LABEL_32;
      }
LABEL_30:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v22 = a1[*v4] == 0;
LABEL_32:
  PBReaderRecallMark();
  return v22;
}

void sub_188A97554(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORPSearchFeedbackIsDirty(uint64_t a1)
{
  unsigned int v2;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v2 = *(unsigned __int8 *)(a1 + 52);
  if ((v2 & 8) != 0)
    return 1;
  if ((v2 & 2) != 0)
  {
    if ((GEORPSearchFeedbackContextIsDirty(*(os_unfair_lock_s **)(a1 + 24)) & 1) != 0)
      return 1;
    v2 = *(unsigned __int8 *)(a1 + 52);
  }
  return (v2 >> 2) & 1;
}

os_unfair_lock_s *GEORPSearchFeedbackIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEORPSearchFeedbackIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 12);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

uint64_t GEORPSearchFeedbackContextHasSensitiveFields(void *a1, uint64_t a2)
{
  void *v4;
  unsigned __int8 v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  _BYTE v17[128];
  uint64_t v18;

  v18 = *MEMORY[0x1E0C80C00];
  if (!a1)
    return 0;
  objc_msgSend(a1, "requestContext");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = GEORPPlaceRequestResponseHasSensitiveFields(v4, a2);

  if ((v5 & 1) != 0)
    return 1;
  v15 = 0u;
  v16 = 0u;
  v13 = 0u;
  v14 = 0u;
  objc_msgSend(a1, "autocompleteSuggestionLists", 0);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v13, v17, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v14;
    while (2)
    {
      v11 = 0;
      do
      {
        if (*(_QWORD *)v14 != v10)
          objc_enumerationMutation(v7);
        if ((GEORPSuggestionListHasSensitiveFields(*(void **)(*((_QWORD *)&v13 + 1) + 8 * v11), a2) & 1) != 0)
        {
          v6 = 1;
          goto LABEL_15;
        }
        ++v11;
      }
      while (v9 != v11);
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v13, v17, 16);
      if (v9)
        continue;
      break;
    }
  }
  v6 = 0;
LABEL_15:

  return v6;
}

void GEORPSearchFeedbackContextClearSensitiveFields(id *a1, uint64_t a2, int a3)
{
  unint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  unsigned int v12;
  void *v13;
  void *v14;
  id v15;

  -[GEORPSearchFeedbackContext _readAutocompleteSuggestionLists]((uint64_t)a1);
  if (objc_msgSend(a1[3], "count"))
  {
    v6 = 0;
    do
    {
      objc_msgSend(a1[3], "objectAtIndexedSubscript:", v6);
      v7 = (void *)objc_claimAutoreleasedReturnValue();
      v8 = v7;
      if (a3 && GEORPSuggestionListHasSensitiveFields(v7, a2))
      {
        v9 = (void *)objc_msgSend(v8, "copy");
        objc_msgSend(v9, "autocompleteRequest");
        v10 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v10, "clearSensitiveFields:", a2);

        objc_msgSend(a1[3], "replaceObjectAtIndex:withObject:", v6, v9);
      }
      else
      {
        objc_msgSend(v8, "clearSensitiveFields:", a2);
      }

      ++v6;
    }
    while (v6 < objc_msgSend(a1[3], "count"));
  }
  if ((a3 & 1) != 0
    && objc_msgSend(a1, "hasRequestContext")
    && (objc_msgSend(a1, "requestContext"),
        v11 = (void *)objc_claimAutoreleasedReturnValue(),
        v12 = GEORPPlaceRequestResponseHasSensitiveFields(v11, a2),
        v11,
        v12))
  {
    objc_msgSend(a1, "requestContext");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    v15 = (id)objc_msgSend(v13, "copy");

    objc_msgSend(v15, "placeRequest");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v14, "clearSensitiveFields:", a2);

    objc_msgSend(a1, "setRequestContext:", v15);
  }
  else
  {
    objc_msgSend(a1, "requestContext");
    v15 = (id)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v15, "clearSensitiveFields:", a2);
  }

}

void sub_188A97B54(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A97DA0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A98024(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPSearchFeedbackContextReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  char v17;
  unsigned __int8 v18;
  int *v19;
  int *v20;
  int *v21;
  int *v22;
  char v23;
  unsigned int v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  int v31;
  unint64_t v33;
  BOOL v34;
  int *v35;
  int v36;
  int v37;
  BOOL v38;
  GEORPSuggestionList *v39;
  void *v40;
  id v41;
  void *v42;
  int v43;
  char v44;
  char v45;
  int v46;
  int v47;
  void *v48;
  int v50;
  int *v51;
  char v52;
  char v53;
  char v54;
  BOOL v55;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1)
      + (*(_BYTE *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1);
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v7 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 != 0;
        v17 = v16 & ~(_BYTE)v11 | v9;
        v18 = v16 | v11;
        v52 = v17;
        v53 = v18 | v17;
        if (((v18 | v7) & 1) != 0)
          v19 = 0;
        else
          v19 = a3;
        v20 = (int *)MEMORY[0x1E0D82BF0];
        v54 = (v19 == 0) | v18;
        v55 = v18;
        v21 = (int *)MEMORY[0x1E0D82BC8];
        v22 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v8;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v20) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v21))
      goto LABEL_62;
    v23 = 0;
    v24 = 0;
    v25 = 0;
    while (1)
    {
      v26 = *v20;
      v27 = *(_QWORD *)(v3 + v26);
      v28 = v27 + 1;
      if (v27 == -1 || v28 > *(_QWORD *)(v3 + *v6))
        break;
      v29 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v27);
      *(_QWORD *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0)
        goto LABEL_25;
      v23 += 7;
      if (v24++ >= 9)
      {
        v25 = 0;
        v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v21) = 1;
LABEL_25:
    v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(_BYTE *)(v3 + *v21))
      v25 = 0;
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_62:
      v50 = 1;
      goto LABEL_63;
    }
    v33 = v25 >> 3;
    v34 = v55;
    if ((v54 & 1) == 0)
    {
      v35 = v19;
      do
      {
        v37 = *v35++;
        v36 = v37;
        v34 = v37 != 0;
        if (v37)
          v38 = v36 == (_DWORD)v33;
        else
          v38 = 1;
      }
      while (!v38);
    }
    if ((_DWORD)v33 == 2)
      break;
    if ((_DWORD)v33 == 1)
    {
      if (!v34 || (*(_BYTE *)(a1 + 52) & 2) != 0)
        goto LABEL_56;
      if ((PBReaderPlaceMark() & 1) == 0)
        goto LABEL_82;
      v39 = objc_alloc_init(GEORPSuggestionList);
      if (!GEORPSuggestionListReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1))
        goto LABEL_81;
      PBReaderRecallMark();
      -[GEORPSearchFeedbackContext _addNoFlagsAutocompleteSuggestionList:](a1, v39);

      goto LABEL_60;
    }
    if ((v52 & 1) == 0 || (*(_BYTE *)(a1 + 52) & 1) != 0)
    {
LABEL_56:
      v44 = PBReaderSkipValueWithTag();
      v21 = (int *)MEMORY[0x1E0D82BC8];
      if ((v44 & 1) == 0)
      {
        v50 = 0;
        goto LABEL_63;
      }
      goto LABEL_61;
    }
    if (!*(_QWORD *)(a1 + 16))
    {
      v41 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
      v42 = *(void **)(a1 + 16);
      *(_QWORD *)(a1 + 16) = v41;

    }
    v43 = PBUnknownFieldAdd();
    v21 = (int *)MEMORY[0x1E0D82BC8];
    if (!v43)
    {
      v50 = 0;
      v51 = &OBJC_IVAR___GEOTransitVehicleInfo__pickupDropoffType;
      goto LABEL_64;
    }
LABEL_61:
    if (!(v53 & 1 | (v8 != 0)))
      goto LABEL_62;
  }
  if (!v34)
    goto LABEL_56;
  if ((*(_BYTE *)(a1 + 52) & 4) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0)
      goto LABEL_82;
    v8 += *(unsigned __int8 *)(a1 + 52) << 29 >> 31;
    goto LABEL_60;
  }
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_82;
  v39 = objc_alloc_init(GEORPPlaceRequestResponse);
  if (GEORPPlaceRequestResponseReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1))
  {
    PBReaderRecallMark();
    v40 = *(void **)(a1 + 32);
    *(_QWORD *)(a1 + 32) = v39;

    --v8;
LABEL_60:
    v21 = (int *)MEMORY[0x1E0D82BC8];
    goto LABEL_61;
  }
LABEL_81:

LABEL_82:
  v50 = 0;
  v21 = (int *)MEMORY[0x1E0D82BC8];
LABEL_63:
  v51 = &OBJC_IVAR___GEOTransitVehicleInfo__pickupDropoffType;
  if ((v52 & 1) == 0)
    goto LABEL_65;
LABEL_64:
  *(_BYTE *)(a1 + v51[673]) |= 1u;
LABEL_65:
  if (v55 || (v50 & 1) == 0)
  {
    *(_BYTE *)(a1 + v51[673]) |= 2u;
    *(_BYTE *)(a1 + v51[673]) |= 4u;
    goto LABEL_75;
  }
  if (v19)
  {
    while (1)
    {
      v47 = *v19++;
      v46 = v47;
      if (v47 == 1)
        break;
      if (v46 == 2)
      {
        v45 = 4;
LABEL_71:
        *(_BYTE *)(a1 + v51[673]) |= v45;
      }
      else if (!v46)
      {
        goto LABEL_75;
      }
    }
    v45 = 2;
    goto LABEL_71;
  }
LABEL_75:
  if (v50)
    v3 = *(_BYTE *)(v3 + *v21) == 0;
  else
    v3 = 0;
  if (v55)
  {
    v48 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_188A98888(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A99048(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORPSearchFeedbackContextCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _BYTE v12[128];
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  v8 = 0u;
  v9 = 0u;
  v10 = 0u;
  v11 = 0u;
  v2 = *(id *)(a1 + 24);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v9;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v9 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v8 + 1) + 8 * v6++), "readAll:", 1, (_QWORD)v8);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
    }
    while (v4);
  }

  return objc_msgSend(*(id *)(a1 + 32), "readAll:", 1);
}

unint64_t GEORPSearchFeedbackContextReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEORPSearchFeedbackContextReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEORPSearchFeedbackContextReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEORPSearchFeedbackContextReadAllFrom_initialTag;
  Specified = GEORPSearchFeedbackContextReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEORPSearchFeedbackContextCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_188A992EC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPSearchFeedbackContextReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORPSearchFeedbackContextReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188A9934C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A99580(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORPSearchFeedbackContextIsDirty(uint64_t a1)
{
  char v2;
  uint64_t v3;
  id v5;
  uint64_t v6;
  uint64_t i;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _BYTE v12[128];
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v2 = *(_BYTE *)(a1 + 52);
  if ((v2 & 0xA) != 0)
    return 1;
  if ((*(_BYTE *)(a1 + 52) & 4) != 0)
  {
    if ((GEORPPlaceRequestResponseIsDirty(*(os_unfair_lock_s **)(a1 + 32)) & 1) != 0)
      return 1;
    v2 = *(_BYTE *)(a1 + 52);
  }
  if ((v2 & 2) == 0)
    return 0;
  v10 = 0u;
  v11 = 0u;
  v8 = 0u;
  v9 = 0u;
  v5 = *(id *)(a1 + 24);
  v3 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
  if (v3)
  {
    v6 = *(_QWORD *)v9;
    while (2)
    {
      for (i = 0; i != v3; ++i)
      {
        if (*(_QWORD *)v9 != v6)
          objc_enumerationMutation(v5);
        if ((GEORPSuggestionListIsDirty(*(os_unfair_lock_s **)(*((_QWORD *)&v8 + 1) + 8 * i)) & 1) != 0)
        {
          v3 = 1;
          goto LABEL_19;
        }
      }
      v3 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
      if (v3)
        continue;
      break;
    }
  }
LABEL_19:

  return v3;
}

os_unfair_lock_s *GEORPSearchFeedbackContextIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEORPSearchFeedbackContextIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 12);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_188A99BCC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A99EC8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPSearchFeedbackCorrectionsReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  id v25;
  void *v26;
  _BOOL8 v27;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 1)
        {
          v18 = 0;
          v19 = 0;
          v20 = 0;
          *(_BYTE *)(a1 + 20) |= 1u;
          while (1)
          {
            v21 = *v4;
            v22 = *(_QWORD *)&v3[v21];
            v23 = v22 + 1;
            if (v22 == -1 || v23 > *(_QWORD *)&v3[*v5])
              break;
            v24 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v22);
            *(_QWORD *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0)
              goto LABEL_32;
            v18 += 7;
            v15 = v19++ >= 9;
            if (v15)
            {
              LODWORD(v20) = 0;
              goto LABEL_34;
            }
          }
          v3[*v6] = 1;
LABEL_32:
          if (v3[*v6])
            LODWORD(v20) = 0;
LABEL_34:
          *(_DWORD *)(a1 + 16) = v20;
        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v25 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v26 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v25;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_37;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v27 = v3[*v6] == 0;
  }
  else
  {
LABEL_37:
    v27 = 0;
  }
  objc_sync_exit(v3);

  return v27;
}

void sub_188A9A8E8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPSearchFeedbackCorrectionsReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORPSearchFeedbackCorrectionsReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188A9A948(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A9ADF4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPSourceInfoReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  char v15;
  unsigned __int8 v16;
  char v17;
  int *v18;
  int *v19;
  int *v20;
  int *v21;
  char v22;
  unsigned int v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  int v30;
  unint64_t v32;
  BOOL v33;
  int *v34;
  int v35;
  int v36;
  BOOL v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  id v41;
  void *v42;
  int v43;
  char v44;
  char v45;
  char v46;
  int v47;
  int v48;
  void *v49;
  int v51;
  char v52;
  char v53;
  char v54;
  BOOL v55;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1)
      + (*(_BYTE *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v11;
        v12 = v7;
        goto LABEL_8;
      case -3:
        v9 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v11 != 0;
        v15 = v14 & ~(_BYTE)v7;
        v16 = v14 | v7;
        v52 = v15 | v8;
        v17 = v16 | v15 | v8;
        if (((v16 | v9) & 1) != 0)
          v18 = 0;
        else
          v18 = a3;
        v55 = v16;
        v53 = v17;
        v54 = (v18 == 0) | v16;
        v19 = (int *)MEMORY[0x1E0D82BF0];
        v20 = (int *)MEMORY[0x1E0D82BC8];
        v21 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_7:
        v12 = v7;
        v13 = v8;
LABEL_8:
        ++v10;
        v7 = v12;
        v8 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v19) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v20))
      goto LABEL_59;
    v22 = 0;
    v23 = 0;
    v24 = 0;
    while (1)
    {
      v25 = *v19;
      v26 = *(_QWORD *)(v3 + v25);
      v27 = v26 + 1;
      if (v26 == -1 || v27 > *(_QWORD *)(v3 + *v6))
        break;
      v28 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v26);
      *(_QWORD *)(v3 + v25) = v27;
      v24 |= (unint64_t)(v28 & 0x7F) << v22;
      if ((v28 & 0x80) == 0)
        goto LABEL_23;
      v22 += 7;
      if (v23++ >= 9)
      {
        v24 = 0;
        v30 = *(unsigned __int8 *)(v3 + *v20);
        goto LABEL_25;
      }
    }
    *(_BYTE *)(v3 + *v20) = 1;
LABEL_23:
    v30 = *(unsigned __int8 *)(v3 + *v20);
    if (*(_BYTE *)(v3 + *v20))
      v24 = 0;
LABEL_25:
    if (v30 || (v24 & 7) == 4)
    {
LABEL_59:
      v51 = 1;
      goto LABEL_60;
    }
    v32 = v24 >> 3;
    v33 = v55;
    if ((v54 & 1) == 0)
    {
      v34 = v18;
      do
      {
        v36 = *v34++;
        v35 = v36;
        v33 = v36 != 0;
        if (v36)
          v37 = v35 == (_DWORD)v32;
        else
          v37 = 1;
      }
      while (!v37);
    }
    if ((_DWORD)v32 == 2)
      break;
    if ((_DWORD)v32 == 1)
    {
      if (!v33)
        goto LABEL_51;
      if ((*(_BYTE *)(a1 + 52) & 2) != 0)
      {
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_78;
        v45 = *(_BYTE *)(a1 + 52) << 6;
        goto LABEL_57;
      }
      PBReaderReadString();
      v38 = objc_claimAutoreleasedReturnValue();
      v39 = 24;
      goto LABEL_44;
    }
    if ((v52 & 1) == 0 || (*(_BYTE *)(a1 + 52) & 1) != 0)
    {
LABEL_51:
      v44 = PBReaderSkipValueWithTag();
      v20 = (int *)MEMORY[0x1E0D82BC8];
      if ((v44 & 1) == 0)
      {
        v51 = 0;
        goto LABEL_60;
      }
      goto LABEL_58;
    }
    if (!*(_QWORD *)(a1 + 16))
    {
      v41 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
      v42 = *(void **)(a1 + 16);
      *(_QWORD *)(a1 + 16) = v41;

    }
    v43 = PBUnknownFieldAdd();
    v20 = (int *)MEMORY[0x1E0D82BC8];
    if (!v43)
    {
      v51 = 0;
      goto LABEL_61;
    }
LABEL_58:
    if (!(v53 & 1 | (v10 != 0)))
      goto LABEL_59;
  }
  if (!v33)
    goto LABEL_51;
  if ((*(_BYTE *)(a1 + 52) & 4) == 0)
  {
    PBReaderReadString();
    v38 = objc_claimAutoreleasedReturnValue();
    v39 = 32;
LABEL_44:
    v40 = *(void **)(a1 + v39);
    *(_QWORD *)(a1 + v39) = v38;

    v20 = (int *)MEMORY[0x1E0D82BC8];
    --v10;
    goto LABEL_58;
  }
  if ((PBReaderSkipValueWithTag() & 1) != 0)
  {
    v45 = 32 * *(_BYTE *)(a1 + 52);
LABEL_57:
    v10 += v45 >> 7;
    v20 = (int *)MEMORY[0x1E0D82BC8];
    goto LABEL_58;
  }
LABEL_78:
  v51 = 0;
  v20 = (int *)MEMORY[0x1E0D82BC8];
LABEL_60:
  if ((v52 & 1) == 0)
    goto LABEL_62;
LABEL_61:
  *(_BYTE *)(a1 + 52) |= 1u;
LABEL_62:
  if (v55 || (v51 & 1) == 0)
  {
    *(_BYTE *)(a1 + 52) |= 2u;
    *(_BYTE *)(a1 + 52) |= 4u;
    goto LABEL_72;
  }
  if (v18)
  {
    while (1)
    {
      v48 = *v18++;
      v47 = v48;
      if (v48 == 1)
        break;
      if (v47 == 2)
      {
        v46 = 4;
LABEL_68:
        *(_BYTE *)(a1 + 52) |= v46;
      }
      else if (!v47)
      {
        goto LABEL_72;
      }
    }
    v46 = 2;
    goto LABEL_68;
  }
LABEL_72:
  if (v51)
    v3 = *(_BYTE *)(v3 + *v20) == 0;
  else
    v3 = 0;
  if (v55)
  {
    v49 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_188A9B3F8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A9B950(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPSourceInfoReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEORPSourceInfoReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEORPSourceInfoReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEORPSourceInfoReadAllFrom_initialTag;
  Specified = GEORPSourceInfoReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_188A9BADC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPSourceInfoReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORPSourceInfoReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188A9BB3C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A9BCD0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPSourceInfoIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v2 = (*(_BYTE *)(a1 + 52) & 0xE) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return v2;
}

void sub_188A9BF68(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A9C18C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPStreetFeedbackReadAllFrom(uint64_t a1, void *a2)
{
  unsigned __int8 *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  int v8;
  char v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  char v17;
  BOOL v18;
  id v19;
  void *v20;
  _BOOL8 v21;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    v7 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      v8 = v3[*v6];
      if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
        break;
      if (v3[*v6])
      {
        v8 = 1;
        break;
      }
      v9 = 0;
      v10 = 0;
      v11 = 0;
      while (1)
      {
        v12 = *v4;
        v13 = *(_QWORD *)&v3[v12];
        v14 = v13 + 1;
        if (v13 == -1 || v14 > *(_QWORD *)&v3[*v5])
          break;
        v15 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v13);
        *(_QWORD *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0)
          goto LABEL_13;
        v9 += 7;
        if (v10++ >= 9)
        {
          v17 = 0;
          v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      v8 = v3[*v6];
      if (v3[*v6])
        v17 = 0;
      else
        v17 = v11;
LABEL_16:
      if (v8)
        v18 = 1;
      else
        v18 = (v17 & 7) == 4;
      if (v18)
        break;
      if (!*(_QWORD *)(a1 + 8))
      {
        v19 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v20 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = v19;

      }
      if ((PBUnknownFieldAdd() & 1) == 0)
        goto LABEL_23;
    }
    v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_188A9C6B0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPStreetFeedbackReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORPStreetFeedbackReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188A9C710(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A9C9F8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPTdmFraudNotificationParametersReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  char v15;
  unsigned __int8 v16;
  int *v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  int v29;
  unint64_t v31;
  BOOL v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  void *v40;
  int v41;
  void *v42;
  char v43;
  char v44;
  int v45;
  char v46;
  void *v47;
  int v49;
  char v50;
  char v51;
  char v52;
  BOOL v53;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 68);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 64));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = (vaddv_s16((int16x4_t)(*(_QWORD *)&vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int8 *)(a1 + 76)), (uint16x4_t)0xFFFEFFFCFFFDFFFFLL) & 0xFF01FF01FF01FF01))+ (*(_BYTE *)(a1 + 76) & 1)+ ((*(_BYTE *)(a1 + 76) & 0x20) != 0));
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v9])
    {
      case -4:
        ++v11;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_9;
      case 0:
        v14 = v11 > 3;
        v15 = v14 & ~(_BYTE)v10 | v7;
        v16 = v14 | v10;
        v50 = v15;
        v51 = v16 | v15;
        if (((v16 | v8) & 1) != 0)
          v17 = 0;
        else
          v17 = a3;
        v52 = (v17 == 0) | v16;
        v53 = v16;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_7:
        v12 = v7;
LABEL_8:
        v13 = v10;
LABEL_9:
        ++v9;
        v7 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v19))
      goto LABEL_75;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0)
        goto LABEL_24;
      v21 += 7;
      if (v22++ >= 9)
      {
        v23 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_26;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_24:
    v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_26:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_75:
      v49 = 1;
      goto LABEL_76;
    }
    v31 = v23 >> 3;
    v32 = v53;
    if ((v52 & 1) == 0)
    {
      v33 = v17;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if (!v32)
          goto LABEL_60;
        if ((*(_BYTE *)(a1 + 76) & 8) == 0)
        {
          PBReaderReadString();
          v37 = objc_claimAutoreleasedReturnValue();
          v38 = 40;
          goto LABEL_59;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_93;
        v44 = 16 * *(_BYTE *)(a1 + 76);
        goto LABEL_72;
      case 2:
        if (!v32)
          goto LABEL_60;
        if ((*(_BYTE *)(a1 + 76) & 2) == 0)
        {
          PBReaderReadString();
          v37 = objc_claimAutoreleasedReturnValue();
          v38 = 24;
          goto LABEL_59;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_93;
        v44 = *(_BYTE *)(a1 + 76) << 6;
        goto LABEL_72;
      case 3:
        if (!v32)
          goto LABEL_60;
        if ((*(_BYTE *)(a1 + 76) & 0x10) == 0)
        {
          PBReaderReadString();
          v37 = objc_claimAutoreleasedReturnValue();
          v38 = 48;
          goto LABEL_59;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_93;
        v44 = 8 * *(_BYTE *)(a1 + 76);
        goto LABEL_72;
      case 4:
        if (!v32)
          goto LABEL_60;
        if ((*(_BYTE *)(a1 + 76) & 4) == 0)
        {
          PBReaderReadString();
          v37 = objc_claimAutoreleasedReturnValue();
          v38 = 32;
          goto LABEL_59;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_93;
        v44 = 32 * *(_BYTE *)(a1 + 76);
        goto LABEL_72;
      case 5:
        if (!v32)
          goto LABEL_60;
        if ((*(_BYTE *)(a1 + 76) & 0x20) == 0)
        {
          PBReaderReadString();
          v37 = objc_claimAutoreleasedReturnValue();
          v38 = 56;
LABEL_59:
          v42 = *(void **)(a1 + v38);
          *(_QWORD *)(a1 + v38) = v37;

          --v9;
LABEL_73:
          v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_74:
          if (!(v51 & 1 | (v9 != 0)))
            goto LABEL_75;
          continue;
        }
        if ((PBReaderSkipValueWithTag() & 1) != 0)
        {
          v44 = 4 * *(_BYTE *)(a1 + 76);
LABEL_72:
          v9 += v44 >> 7;
          goto LABEL_73;
        }
LABEL_93:
        v49 = 0;
        v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_76:
        if ((v50 & 1) != 0)
LABEL_77:
          *(_BYTE *)(a1 + 76) |= 1u;
        if (v53 || (v49 & 1) == 0)
        {
          *(_BYTE *)(a1 + 76) |= 8u;
          *(_BYTE *)(a1 + 76) |= 2u;
          *(_BYTE *)(a1 + 76) |= 0x10u;
          *(_BYTE *)(a1 + 76) |= 4u;
          *(_BYTE *)(a1 + 76) |= 0x20u;
        }
        else if (v17)
        {
          while (1)
          {
            v45 = *v17++;
            v46 = 8;
            switch(v45)
            {
              case 0:
                goto LABEL_87;
              case 1:
                goto LABEL_86;
              case 2:
                v46 = 2;
                goto LABEL_86;
              case 3:
                v46 = 16;
                goto LABEL_86;
              case 4:
                v46 = 4;
                goto LABEL_86;
              case 5:
                v46 = 32;
LABEL_86:
                *(_BYTE *)(a1 + 76) |= v46;
                break;
              default:
                continue;
            }
          }
        }
LABEL_87:
        if (v49)
          v3 = *(_BYTE *)(v3 + *v19) == 0;
        else
          v3 = 0;
        if (v53)
        {
          v47 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      default:
        if ((v50 & 1) == 0 || (*(_BYTE *)(a1 + 76) & 1) != 0)
        {
LABEL_60:
          v43 = PBReaderSkipValueWithTag();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if ((v43 & 1) == 0)
          {
            v49 = 0;
            goto LABEL_76;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v39 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v40 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v39;

          }
          v41 = PBUnknownFieldAdd();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if (!v41)
          {
            v49 = 0;
            goto LABEL_77;
          }
        }
        goto LABEL_74;
    }
  }
}

void sub_188A9D174(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A9D2B8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A9D3FC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A9D53C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A9DC48(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPTdmFraudNotificationParametersReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 68))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEORPTdmFraudNotificationParametersReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 72));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 64) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 68) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEORPTdmFraudNotificationParametersReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEORPTdmFraudNotificationParametersReadAllFrom_initialTag;
  Specified = GEORPTdmFraudNotificationParametersReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return Specified;
}

void sub_188A9DDD4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPTdmFraudNotificationParametersReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORPTdmFraudNotificationParametersReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188A9DE34(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A9E028(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPTdmFraudNotificationParametersIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  v2 = (*(_BYTE *)(a1 + 76) & 0x7E) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return v2;
}

void sub_188A9E368(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A9E674(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A9E900(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPTdmFraudRequestInfoReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  char v15;
  unsigned __int8 v16;
  int *v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  int v29;
  unint64_t v31;
  BOOL v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  void *v40;
  int v41;
  void *v42;
  GEORPTdmUserMapsStatus *v43;
  char v44;
  char v45;
  int v46;
  char v47;
  void *v48;
  int v50;
  char v51;
  char v52;
  char v53;
  BOOL v54;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 76);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 72));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = (vaddv_s16((int16x4_t)(*(_QWORD *)&vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int8 *)(a1 + 84)), (uint16x4_t)0xFFFEFFFFFFFCFFFALL) & 0xFF01FF01FF01FF01))+ (*(_BYTE *)(a1 + 84) & 1)+ ((*(_BYTE *)(a1 + 84) & 8) != 0)+ ((*(_BYTE *)(a1 + 84) & 0x20) != 0));
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v11;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_9;
      case 0:
        v14 = v11 > 3;
        v15 = v14 & ~(_BYTE)v10 | v9;
        v16 = v14 | v10;
        v51 = v15;
        v52 = v16 | v15;
        if (((v16 | v8) & 1) != 0)
          v17 = 0;
        else
          v17 = a3;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v53 = (v17 == 0) | v16;
        v54 = v16;
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_7:
        v12 = v9;
LABEL_8:
        v13 = v10;
LABEL_9:
        ++v7;
        v9 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v19))
      goto LABEL_83;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0)
        goto LABEL_24;
      v21 += 7;
      if (v22++ >= 9)
      {
        v23 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_26;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_24:
    v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_26:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_83:
      v50 = 1;
      goto LABEL_84;
    }
    v31 = v23 >> 3;
    v32 = v54;
    if ((v53 & 1) == 0)
    {
      v33 = v17;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if (!v32)
          goto LABEL_66;
        if ((*(_BYTE *)(a1 + 84) & 0x10) == 0)
        {
          PBReaderReadString();
          v37 = objc_claimAutoreleasedReturnValue();
          v38 = 48;
          goto LABEL_59;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_103;
        v45 = 8 * *(_BYTE *)(a1 + 84);
        goto LABEL_80;
      case 2:
        if (!v32)
          goto LABEL_66;
        if ((*(_BYTE *)(a1 + 84) & 0x40) == 0)
        {
          PBReaderReadString();
          v37 = objc_claimAutoreleasedReturnValue();
          v38 = 64;
          goto LABEL_59;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_103;
        v45 = 2 * *(_BYTE *)(a1 + 84);
        goto LABEL_80;
      case 3:
        if (!v32)
          goto LABEL_66;
        if ((*(_BYTE *)(a1 + 84) & 2) == 0)
        {
          PBReaderReadString();
          v37 = objc_claimAutoreleasedReturnValue();
          v38 = 24;
          goto LABEL_59;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_103;
        v45 = *(_BYTE *)(a1 + 84) << 6;
        goto LABEL_80;
      case 4:
        if (!v32)
          goto LABEL_66;
        if ((*(_BYTE *)(a1 + 84) & 4) == 0)
        {
          PBReaderReadString();
          v37 = objc_claimAutoreleasedReturnValue();
          v38 = 32;
          goto LABEL_59;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_103;
        v45 = 32 * *(_BYTE *)(a1 + 84);
        goto LABEL_80;
      case 5:
        if (!v32)
          goto LABEL_66;
        if ((*(_BYTE *)(a1 + 84) & 8) == 0)
        {
          PBReaderReadString();
          v37 = objc_claimAutoreleasedReturnValue();
          v38 = 40;
LABEL_59:
          v42 = *(void **)(a1 + v38);
          *(_QWORD *)(a1 + v38) = v37;
          goto LABEL_60;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_103;
        v45 = 16 * *(_BYTE *)(a1 + 84);
        goto LABEL_80;
      case 6:
        if (!v32)
          goto LABEL_66;
        if ((*(_BYTE *)(a1 + 84) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_103;
          v45 = 4 * *(_BYTE *)(a1 + 84);
LABEL_80:
          v7 += v45 >> 7;
          goto LABEL_81;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_103;
        v43 = objc_alloc_init(GEORPTdmUserMapsStatus);
        if (GEORPTdmUserMapsStatusReadAllFrom((uint64_t)v43, (void *)v3))
        {
          PBReaderRecallMark();
          v42 = *(void **)(a1 + 56);
          *(_QWORD *)(a1 + 56) = v43;
LABEL_60:

          --v7;
LABEL_81:
          v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_82:
          if (!(v52 & 1 | (v7 != 0)))
            goto LABEL_83;
          continue;
        }

LABEL_103:
        v50 = 0;
        v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_84:
        if ((v51 & 1) != 0)
LABEL_85:
          *(_BYTE *)(a1 + 84) |= 1u;
        if (v54 || (v50 & 1) == 0)
        {
          *(_BYTE *)(a1 + 84) |= 0x10u;
          *(_BYTE *)(a1 + 84) |= 0x40u;
          *(_BYTE *)(a1 + 84) |= 2u;
          *(_BYTE *)(a1 + 84) |= 4u;
          *(_BYTE *)(a1 + 84) |= 8u;
          *(_BYTE *)(a1 + 84) |= 0x20u;
        }
        else if (v17)
        {
          while (1)
          {
            v46 = *v17++;
            v47 = 16;
            switch(v46)
            {
              case 0:
                goto LABEL_96;
              case 1:
                goto LABEL_95;
              case 2:
                v47 = 64;
                goto LABEL_95;
              case 3:
                v47 = 2;
                goto LABEL_95;
              case 4:
                v47 = 4;
                goto LABEL_95;
              case 5:
                v47 = 8;
                goto LABEL_95;
              case 6:
                v47 = 32;
LABEL_95:
                *(_BYTE *)(a1 + 84) |= v47;
                break;
              default:
                continue;
            }
          }
        }
LABEL_96:
        if (v50)
          v3 = *(_BYTE *)(v3 + *v19) == 0;
        else
          v3 = 0;
        if (v54)
        {
          v48 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      default:
        if ((v51 & 1) == 0 || (*(_BYTE *)(a1 + 84) & 1) != 0)
        {
LABEL_66:
          v44 = PBReaderSkipValueWithTag();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if ((v44 & 1) == 0)
          {
            v50 = 0;
            goto LABEL_84;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v39 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v40 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v39;

          }
          v41 = PBUnknownFieldAdd();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if (!v41)
          {
            v50 = 0;
            goto LABEL_85;
          }
        }
        goto LABEL_82;
    }
  }
}

void sub_188A9F134(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A9F274(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A9F3B8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A9F4FC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A9F63C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188A9FE5C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPTdmFraudRequestInfoReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 76))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEORPTdmFraudRequestInfoReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 80));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 72) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 76) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEORPTdmFraudRequestInfoReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEORPTdmFraudRequestInfoReadAllFrom_initialTag;
  Specified = GEORPTdmFraudRequestInfoReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    objc_msgSend(*(id *)(a1 + 56), "readAll:", 1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 80));
  return Specified;
}

void sub_188AA0000(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPTdmFraudRequestInfoReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORPTdmFraudRequestInfoReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188AA0060(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPTdmUserMapsStatusIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  unint64_t v16;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  int v32;
  _BOOL8 v33;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_48;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      if (v14 || (v8 & 7) == 4)
        goto LABEL_48;
      v16 = v8 >> 3;
      if ((v8 >> 3) == 3)
        break;
      if ((_DWORD)v16 == 2)
      {
        if ((v8 & 7) != 0)
          goto LABEL_50;
        v28 = 0;
        while (1)
        {
          v29 = *v2;
          v30 = *(_QWORD *)&a1[v29];
          v31 = v30 + 1;
          if (v30 == -1 || v31 > *(_QWORD *)&a1[*v3])
            goto LABEL_45;
          v32 = *(char *)(*(_QWORD *)&a1[*v5] + v30);
          *(_QWORD *)&a1[v29] = v31;
          if (v32 < 0)
          {
            v22 = v28++ > 8;
            if (!v22)
              continue;
          }
          goto LABEL_47;
        }
      }
      if ((_DWORD)v16 == 1)
      {
        if ((v8 & 7) != 0)
          goto LABEL_50;
        v17 = 0;
        while (1)
        {
          v18 = *v2;
          v19 = *(_QWORD *)&a1[v18];
          v20 = v19 + 1;
          if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
            break;
          v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
          *(_QWORD *)&a1[v18] = v20;
          if (v21 < 0)
          {
            v22 = v17++ > 8;
            if (!v22)
              continue;
          }
          goto LABEL_47;
        }
LABEL_45:
        a1[*v4] = 1;
        goto LABEL_47;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_50:
        v33 = 0;
        goto LABEL_49;
      }
LABEL_47:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_48;
    }
    if ((v8 & 7) != 0)
      goto LABEL_50;
    v23 = 0;
    while (1)
    {
      v24 = *v2;
      v25 = *(_QWORD *)&a1[v24];
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
        goto LABEL_45;
      v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
      *(_QWORD *)&a1[v24] = v26;
      if (v27 < 0)
      {
        v22 = v23++ > 8;
        if (!v22)
          continue;
      }
      goto LABEL_47;
    }
  }
LABEL_48:
  v33 = a1[*v4] == 0;
LABEL_49:
  PBReaderRecallMark();
  return v33;
}

void sub_188AA0500(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPTdmFraudRequestInfoIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  v2 = *(unsigned __int8 *)(a1 + 84) > 1u;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 80));
  return v2;
}

void sub_188AA0878(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188AA0BE8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188AA0E94(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPTdmInfoReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  char v15;
  unsigned __int8 v16;
  int *v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  BOOL v28;
  int v29;
  unint64_t v31;
  BOOL v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  void *v40;
  int v41;
  char v42;
  unsigned int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  char v48;
  void *v49;
  void *v50;
  char v51;
  unsigned int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  char v57;
  char v58;
  BOOL v59;
  uint64_t v60;
  char v61;
  int v62;
  char v63;
  void *v64;
  int v66;
  int *v67;
  char v68;
  char v69;
  char v70;
  BOOL v71;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 52);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 48));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = vaddv_s16((int16x4_t)(*(_QWORD *)&vshl_u16((uint16x4_t)(*(_QWORD *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 64)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFEFFFBFFFDFFFCLL) & 0xFF01FF01FF01FF01));
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v11;
        v12 = v7;
        goto LABEL_8;
      case -3:
        v9 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v11 > 1;
        v15 = v14 & ~(_BYTE)v7;
        v16 = v14 | v7;
        v68 = v15 | v8;
        v69 = v16 | v15 | v8;
        if (((v16 | v9) & 1) != 0)
          v17 = 0;
        else
          v17 = a3;
        v70 = (v17 == 0) | v16;
        v71 = v16;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_7:
        v12 = v7;
        v13 = v8;
LABEL_8:
        ++v10;
        v7 = v12;
        v8 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v19))
      goto LABEL_89;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0)
        goto LABEL_23;
      v21 += 7;
      v28 = v22++ >= 9;
      if (v28)
      {
        v23 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_25;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_23:
    v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_25:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_89:
      v66 = 1;
      goto LABEL_90;
    }
    v31 = v23 >> 3;
    v32 = v71;
    if ((v70 & 1) == 0)
    {
      v33 = v17;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if (!v32)
          goto LABEL_71;
        if ((*(_BYTE *)(a1 + 64) & 8) == 0)
        {
          PBReaderReadString();
          v37 = objc_claimAutoreleasedReturnValue();
          v38 = 24;
          goto LABEL_62;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_105;
        v61 = 16 * *(_BYTE *)(a1 + 64);
        goto LABEL_86;
      case 2:
        if ((v9 & 1) == 0)
          goto LABEL_71;
        v42 = 0;
        v43 = 0;
        v44 = 0;
        *(_BYTE *)(a1 + 64) |= 1u;
        while (2)
        {
          v45 = *v18;
          v46 = *(_QWORD *)(v3 + v45);
          v47 = v46 + 1;
          if (v46 == -1 || v47 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v19) = 1;
          }
          else
          {
            v48 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v46);
            *(_QWORD *)(v3 + v45) = v47;
            v44 |= (unint64_t)(v48 & 0x7F) << v42;
            if (v48 < 0)
            {
              v42 += 7;
              v28 = v43++ >= 9;
              if (v28)
              {
                v44 = 0;
                goto LABEL_76;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v19))
          v44 = 0;
LABEL_76:
        v59 = v44 != 0;
        v60 = 60;
        goto LABEL_81;
      case 3:
        if (!v32 || (*(_BYTE *)(a1 + 64) & 0x10) != 0)
          goto LABEL_71;
        PBReaderReadData();
        v49 = (void *)objc_claimAutoreleasedReturnValue();
        if (v49)
          -[GEORPTdmInfo _addNoFlagsBaaCertificates:](a1, v49);

        goto LABEL_87;
      case 4:
        if (!v32)
          goto LABEL_71;
        if ((*(_BYTE *)(a1 + 64) & 0x20) == 0)
        {
          PBReaderReadData();
          v37 = objc_claimAutoreleasedReturnValue();
          v38 = 40;
LABEL_62:
          v50 = *(void **)(a1 + v38);
          *(_QWORD *)(a1 + v38) = v37;

          --v10;
LABEL_87:
          v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_88:
          if (!(v69 & 1 | (v10 != 0)))
            goto LABEL_89;
          continue;
        }
        if ((PBReaderSkipValueWithTag() & 1) != 0)
        {
          v61 = 4 * *(_BYTE *)(a1 + 64);
LABEL_86:
          v10 += v61 >> 7;
          goto LABEL_87;
        }
LABEL_105:
        v66 = 0;
        v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_90:
        v67 = &OBJC_IVAR___GEOTransitVehicleInfo__pickupDropoffType;
        if ((v68 & 1) != 0)
LABEL_91:
          *(_BYTE *)(a1 + v67[715]) |= 4u;
        if (v71 || (v66 & 1) == 0)
        {
          *(_BYTE *)(a1 + v67[715]) |= 8u;
          *(_BYTE *)(a1 + v67[715]) |= 0x10u;
          *(_BYTE *)(a1 + v67[715]) |= 0x20u;
        }
        else if (v17)
        {
          while (1)
          {
            v62 = *v17++;
            v63 = 8;
            switch(v62)
            {
              case 0:
                goto LABEL_99;
              case 1:
                goto LABEL_98;
              case 3:
                v63 = 16;
                goto LABEL_98;
              case 4:
                v63 = 32;
LABEL_98:
                *(_BYTE *)(a1 + v67[715]) |= v63;
                break;
              default:
                continue;
            }
          }
        }
LABEL_99:
        if (v66)
          v3 = *(_BYTE *)(v3 + *v19) == 0;
        else
          v3 = 0;
        if (v71)
        {
          v64 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      case 5:
        if ((v9 & 1) == 0)
          goto LABEL_71;
        v51 = 0;
        v52 = 0;
        v53 = 0;
        *(_BYTE *)(a1 + 64) |= 2u;
        while (2)
        {
          v54 = *v18;
          v55 = *(_QWORD *)(v3 + v54);
          v56 = v55 + 1;
          if (v55 == -1 || v56 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v19) = 1;
          }
          else
          {
            v57 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v55);
            *(_QWORD *)(v3 + v54) = v56;
            v53 |= (unint64_t)(v57 & 0x7F) << v51;
            if (v57 < 0)
            {
              v51 += 7;
              v28 = v52++ >= 9;
              if (v28)
              {
                v53 = 0;
                goto LABEL_80;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v19))
          v53 = 0;
LABEL_80:
        v59 = v53 != 0;
        v60 = 61;
LABEL_81:
        *(_BYTE *)(a1 + v60) = v59;
        goto LABEL_88;
      default:
        if ((v68 & 1) == 0 || (*(_BYTE *)(a1 + 64) & 4) != 0)
        {
LABEL_71:
          v58 = PBReaderSkipValueWithTag();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if ((v58 & 1) == 0)
          {
            v66 = 0;
            goto LABEL_90;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v39 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v40 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v39;

          }
          v41 = PBUnknownFieldAdd();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if (!v41)
          {
            v66 = 0;
            v67 = &OBJC_IVAR___GEOTransitVehicleInfo__pickupDropoffType;
            goto LABEL_91;
          }
        }
        goto LABEL_88;
    }
  }
}

void sub_188AA171C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188AA1A50(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188AA248C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPTdmInfoReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 52))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEORPTdmInfoReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 52) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEORPTdmInfoReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEORPTdmInfoReadAllFrom_initialTag;
  Specified = GEORPTdmInfoReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_188AA2618(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPTdmInfoReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORPTdmInfoReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188AA2678(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188AA291C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPTdmInfoIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v2 = (*(_BYTE *)(a1 + 64) & 0x78) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return v2;
}

void sub_188AA2DC4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188AA3230(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPTdmUserMapsStatusReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  unint64_t v18;
  char v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  char v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  char v33;
  unsigned int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  id v40;
  void *v41;
  BOOL v42;
  uint64_t v43;
  _BOOL8 v44;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      while (1)
      {
        if (v3[*v6])
          goto LABEL_61;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          goto LABEL_61;
        v18 = v10 >> 3;
        if ((v10 >> 3) == 3)
          break;
        if ((_DWORD)v18 == 2)
        {
          v33 = 0;
          v34 = 0;
          v35 = 0;
          *(_BYTE *)(a1 + 28) |= 1u;
          while (1)
          {
            v36 = *v4;
            v37 = *(_QWORD *)&v3[v36];
            v38 = v37 + 1;
            if (v37 == -1 || v38 > *(_QWORD *)&v3[*v5])
              break;
            v39 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v37);
            *(_QWORD *)&v3[v36] = v38;
            v35 |= (unint64_t)(v39 & 0x7F) << v33;
            if ((v39 & 0x80) == 0)
              goto LABEL_57;
            v33 += 7;
            v15 = v34++ >= 9;
            if (v15)
            {
              v35 = 0;
              goto LABEL_59;
            }
          }
          v3[*v6] = 1;
LABEL_57:
          if (v3[*v6])
            v35 = 0;
LABEL_59:
          *(_QWORD *)(a1 + 16) = v35;
          goto LABEL_60;
        }
        if ((_DWORD)v18 == 1)
        {
          v19 = 0;
          v20 = 0;
          v21 = 0;
          *(_BYTE *)(a1 + 28) |= 2u;
          while (1)
          {
            v22 = *v4;
            v23 = *(_QWORD *)&v3[v22];
            v24 = v23 + 1;
            if (v23 == -1 || v24 > *(_QWORD *)&v3[*v5])
              break;
            v25 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v23);
            *(_QWORD *)&v3[v22] = v24;
            v21 |= (unint64_t)(v25 & 0x7F) << v19;
            if ((v25 & 0x80) == 0)
              goto LABEL_48;
            v19 += 7;
            v15 = v20++ >= 9;
            if (v15)
            {
              v21 = 0;
              goto LABEL_50;
            }
          }
          v3[*v6] = 1;
LABEL_48:
          if (v3[*v6])
            v21 = 0;
LABEL_50:
          v42 = v21 != 0;
          v43 = 24;
LABEL_55:
          *(_BYTE *)(a1 + v43) = v42;
          goto LABEL_60;
        }
        if (!*(_QWORD *)(a1 + 8))
        {
          v40 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
          v41 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = v40;

        }
        if (!PBUnknownFieldAdd())
          goto LABEL_62;
LABEL_60:
        if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
          goto LABEL_61;
      }
      v26 = 0;
      v27 = 0;
      v28 = 0;
      *(_BYTE *)(a1 + 28) |= 4u;
      while (1)
      {
        v29 = *v4;
        v30 = *(_QWORD *)&v3[v29];
        v31 = v30 + 1;
        if (v30 == -1 || v31 > *(_QWORD *)&v3[*v5])
          break;
        v32 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v30);
        *(_QWORD *)&v3[v29] = v31;
        v28 |= (unint64_t)(v32 & 0x7F) << v26;
        if ((v32 & 0x80) == 0)
          goto LABEL_52;
        v26 += 7;
        v15 = v27++ >= 9;
        if (v15)
        {
          v28 = 0;
          goto LABEL_54;
        }
      }
      v3[*v6] = 1;
LABEL_52:
      if (v3[*v6])
        v28 = 0;
LABEL_54:
      v42 = v28 != 0;
      v43 = 25;
      goto LABEL_55;
    }
LABEL_61:
    v44 = v3[*v6] == 0;
  }
  else
  {
LABEL_62:
    v44 = 0;
  }
  objc_sync_exit(v3);

  return v44;
}

void sub_188AA3D38(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPTdmUserMapsStatusReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORPTdmUserMapsStatusReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188AA3D98(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188AA4428(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPTileFeedbackReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  int *v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  int *v18;
  int *v19;
  int *v20;
  int *v21;
  char v22;
  unsigned int v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  BOOL v29;
  int v30;
  unint64_t v32;
  BOOL v33;
  int *v34;
  int v35;
  int v36;
  BOOL v37;
  GEORPCorrectedLabel *v38;
  uint64_t v39;
  char v40;
  unsigned int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  char v46;
  void *v47;
  id v48;
  void *v49;
  int v50;
  char v51;
  char v52;
  int v53;
  int v54;
  char v55;
  void *v56;
  int v58;
  int *v59;
  char v60;
  char v61;
  char v62;
  char v63;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = v6;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = ((*(unsigned __int8 *)(a1 + 56) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 2) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 1) & 1);
  while (2)
  {
    v14 = 1;
    v15 = 1;
    v16 = 1;
    switch(a3[v9])
    {
      case -4:
        ++v13;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v15 = v11;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v17 = v13 != 0;
        v60 = v17 & ~(_BYTE)v12 | v10;
        v61 = v17 | v12 | v60;
        if ((((v17 | v12) | v8) & 1) != 0)
          v18 = 0;
        else
          v18 = a3;
        v19 = (int *)MEMORY[0x1E0D82BF0];
        v20 = (int *)MEMORY[0x1E0D82BC8];
        v62 = (v18 == 0) | v17 | v12;
        v63 = v17 | v12;
        v21 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v13;
LABEL_7:
        v14 = v10;
LABEL_8:
        v15 = v11;
        v16 = v12;
LABEL_10:
        ++v9;
        v10 = v14;
        v11 = v15;
        v12 = v16;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v19) >= *(_QWORD *)(v3 + *v7) || *(_BYTE *)(v3 + *v20))
      goto LABEL_79;
    v22 = 0;
    v23 = 0;
    v24 = 0;
    while (1)
    {
      v25 = *v19;
      v26 = *(_QWORD *)(v3 + v25);
      v27 = v26 + 1;
      if (v26 == -1 || v27 > *(_QWORD *)(v3 + *v7))
        break;
      v28 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v26);
      *(_QWORD *)(v3 + v25) = v27;
      v24 |= (unint64_t)(v28 & 0x7F) << v22;
      if ((v28 & 0x80) == 0)
        goto LABEL_25;
      v22 += 7;
      v29 = v23++ >= 9;
      if (v29)
      {
        v24 = 0;
        v30 = *(unsigned __int8 *)(v3 + *v20);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v20) = 1;
LABEL_25:
    v30 = *(unsigned __int8 *)(v3 + *v20);
    if (*(_BYTE *)(v3 + *v20))
      v24 = 0;
LABEL_27:
    if (v30 || (v24 & 7) == 4)
    {
LABEL_79:
      v58 = 1;
      goto LABEL_80;
    }
    v32 = v24 >> 3;
    v33 = v63;
    if ((v62 & 1) == 0)
    {
      v34 = v18;
      do
      {
        v36 = *v34++;
        v35 = v36;
        v33 = v36 != 0;
        if (v36)
          v37 = v35 == (_DWORD)v32;
        else
          v37 = 1;
      }
      while (!v37);
    }
    if ((_DWORD)v32 == 3)
    {
      if ((v8 & 1) == 0)
        goto LABEL_66;
      v40 = 0;
      v41 = 0;
      v42 = 0;
      *(_BYTE *)(a1 + 56) |= 1u;
      while (1)
      {
        v43 = *v19;
        v44 = *(_QWORD *)(v3 + v43);
        v45 = v44 + 1;
        if (v44 == -1 || v45 > *(_QWORD *)(v3 + *v7))
          break;
        v46 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v44);
        *(_QWORD *)(v3 + v43) = v45;
        v42 |= (unint64_t)(v46 & 0x7F) << v40;
        if ((v46 & 0x80) == 0)
          goto LABEL_69;
        v40 += 7;
        v29 = v41++ >= 9;
        if (v29)
        {
          LODWORD(v42) = 0;
          goto LABEL_71;
        }
      }
      *(_BYTE *)(v3 + *v20) = 1;
LABEL_69:
      if (*(_BYTE *)(v3 + *v20))
        LODWORD(v42) = 0;
LABEL_71:
      *(_DWORD *)(a1 + 52) = v42;
      goto LABEL_78;
    }
    if ((_DWORD)v32 == 2)
      break;
    if ((_DWORD)v32 == 1)
    {
      if (!v33)
        goto LABEL_66;
      if ((*(_BYTE *)(a1 + 56) & 8) == 0)
      {
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_99;
        v38 = objc_alloc_init(GEORPCorrectedLabel);
        if (!GEORPCorrectedLabelReadAllFrom((uint64_t)v38, (void *)v3, v11 & 1))
          goto LABEL_98;
        PBReaderRecallMark();
        v39 = 32;
LABEL_59:
        v47 = *(void **)(a1 + v39);
        *(_QWORD *)(a1 + v39) = v38;

        --v9;
LABEL_77:
        v20 = (int *)MEMORY[0x1E0D82BC8];
        v7 = (int *)MEMORY[0x1E0D82BD8];
        goto LABEL_78;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        goto LABEL_99;
      v52 = 16 * *(_BYTE *)(a1 + 56);
LABEL_76:
      v9 += v52 >> 7;
      goto LABEL_77;
    }
    if ((v60 & 1) == 0 || (*(_BYTE *)(a1 + 56) & 2) != 0)
    {
LABEL_66:
      v51 = PBReaderSkipValueWithTag();
      v7 = (int *)MEMORY[0x1E0D82BD8];
      v20 = (int *)MEMORY[0x1E0D82BC8];
      if ((v51 & 1) == 0)
      {
        v58 = 0;
        goto LABEL_80;
      }
      goto LABEL_78;
    }
    if (!*(_QWORD *)(a1 + 16))
    {
      v48 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
      v49 = *(void **)(a1 + 16);
      *(_QWORD *)(a1 + 16) = v48;

    }
    v50 = PBUnknownFieldAdd();
    v20 = (int *)MEMORY[0x1E0D82BC8];
    v7 = (int *)MEMORY[0x1E0D82BD8];
    if (!v50)
    {
      v58 = 0;
      v59 = &OBJC_IVAR___GEOTransitVehicleInfo__pickupDropoffType;
      goto LABEL_81;
    }
LABEL_78:
    if (!(v61 & 1 | (v9 != 0)))
      goto LABEL_79;
  }
  if (!v33)
    goto LABEL_66;
  if ((*(_BYTE *)(a1 + 56) & 4) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0)
      goto LABEL_99;
    v52 = 32 * *(_BYTE *)(a1 + 56);
    goto LABEL_76;
  }
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_99;
  v38 = objc_alloc_init(GEORPCorrectedCoordinate);
  if (GEORPCorrectedCoordinateReadAllFrom((uint64_t)v38, (void *)v3, v11 & 1))
  {
    PBReaderRecallMark();
    v39 = 24;
    goto LABEL_59;
  }
LABEL_98:

LABEL_99:
  v58 = 0;
  v20 = (int *)MEMORY[0x1E0D82BC8];
LABEL_80:
  v59 = &OBJC_IVAR___GEOTransitVehicleInfo__pickupDropoffType;
  if ((v60 & 1) == 0)
    goto LABEL_82;
LABEL_81:
  *(_BYTE *)(a1 + v59[731]) |= 2u;
LABEL_82:
  if (v63 & 1 | ((v58 & 1) == 0))
  {
    *(_BYTE *)(a1 + v59[731]) |= 8u;
    *(_BYTE *)(a1 + v59[731]) |= 4u;
    goto LABEL_92;
  }
  if (v18)
  {
    while (2)
    {
      while (1)
      {
        v54 = *v18++;
        v53 = v54;
        if (v54 == 1)
          break;
        if (v53 == 2)
        {
          v55 = 4;
          goto LABEL_91;
        }
        if (!v53)
          goto LABEL_92;
      }
      v55 = 8;
LABEL_91:
      *(_BYTE *)(a1 + v59[731]) |= v55;
      continue;
    }
  }
LABEL_92:
  if (v58)
    v3 = *(_BYTE *)(v3 + *v20) == 0;
  else
    v3 = 0;
  if ((v63 & 1) != 0)
  {
    v56 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_188AA4B94(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188AA5418(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPTileFeedbackReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEORPTileFeedbackReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEORPTileFeedbackReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEORPTileFeedbackReadAllFrom_initialTag;
  Specified = GEORPTileFeedbackReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    objc_msgSend(*(id *)(a1 + 32), "readAll:", 1);
    objc_msgSend(*(id *)(a1 + 24), "readAll:", 1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_188AA55D0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPTileFeedbackReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORPTileFeedbackReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188AA5630(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188AA57E0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL _GEORPTileFeedbackIsDirty(uint64_t a1)
{
  char v2;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v2 = *(_BYTE *)(a1 + 56);
  if ((v2 & 0x10) != 0)
    return 1;
  if ((*(_BYTE *)(a1 + 56) & 8) != 0)
  {
    if (GEORPCorrectedLabelIsDirty(*(_QWORD *)(a1 + 32)))
      return 1;
    v2 = *(_BYTE *)(a1 + 56);
  }
  return (v2 & 4) != 0 && GEORPCorrectedCoordinateIsDirty(*(_QWORD *)(a1 + 24));
}

os_unfair_lock_s *GEORPTileFeedbackIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  _BOOL8 IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEORPTileFeedbackIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 12);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_188AA5BBC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188AA5EA0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188AA60FC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPTransitPoiCorrectionsReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  int *v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  char v19;
  unsigned __int8 v20;
  int *v21;
  int *v22;
  int *v23;
  int *v24;
  char v25;
  unsigned int v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  BOOL v32;
  int v33;
  unint64_t v35;
  BOOL v36;
  int *v37;
  int v38;
  int v39;
  BOOL v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  void *v44;
  int v45;
  GEORPAmenityCorrections *v46;
  uint64_t v47;
  char v48;
  unsigned int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  char v55;
  unsigned int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  char v61;
  void *v62;
  char v63;
  BOOL v64;
  uint64_t v65;
  __int16 v66;
  int v67;
  __int16 v68;
  void *v69;
  int v71;
  char v72;
  char v73;
  char v74;
  BOOL v75;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 96));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 92);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 88));
  v7 = v6;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = *(unsigned __int16 *)(a1 + 104);
  v14 = ((v13 >> 2) & 1)
      + ((v13 >> 6) & 1)
      + (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(v13), (uint16x4_t)0xFFF9FFFBFFF7FFFCLL), (int8x8_t)0x1000100010001))+ ((v13 >> 8) & 1)+ ((v13 >> 3) & 1)+ ((v13 >> 10) & 1));
  while (2)
  {
    v15 = 1;
    v16 = 1;
    v17 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v14;
        goto LABEL_8;
      case -3:
        v9 = 1;
        goto LABEL_7;
      case -2:
        v16 = v11;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v18 = v14 > 5;
        v19 = v18 & ~(_BYTE)v12 | v10;
        v20 = v18 | v12;
        v72 = v19;
        v73 = v20 | v19;
        if (((v20 | v9) & 1) != 0)
          v21 = 0;
        else
          v21 = a3;
        v22 = (int *)MEMORY[0x1E0D82BF0];
        v23 = (int *)MEMORY[0x1E0D82BC8];
        v74 = (v21 == 0) | v20;
        v75 = v20;
        v24 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v14;
LABEL_7:
        v15 = v10;
LABEL_8:
        v16 = v11;
        v17 = v12;
LABEL_10:
        ++v8;
        v10 = v15;
        v11 = v16;
        v12 = v17;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v22) >= *(_QWORD *)(v3 + *v7) || *(_BYTE *)(v3 + *v23))
      goto LABEL_128;
    v25 = 0;
    v26 = 0;
    v27 = 0;
    while (1)
    {
      v28 = *v22;
      v29 = *(_QWORD *)(v3 + v28);
      v30 = v29 + 1;
      if (v29 == -1 || v30 > *(_QWORD *)(v3 + *v7))
        break;
      v31 = *(_BYTE *)(*(_QWORD *)(v3 + *v24) + v29);
      *(_QWORD *)(v3 + v28) = v30;
      v27 |= (unint64_t)(v31 & 0x7F) << v25;
      if ((v31 & 0x80) == 0)
        goto LABEL_25;
      v25 += 7;
      v32 = v26++ >= 9;
      if (v32)
      {
        v27 = 0;
        v33 = *(unsigned __int8 *)(v3 + *v23);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v23) = 1;
LABEL_25:
    v33 = *(unsigned __int8 *)(v3 + *v23);
    if (*(_BYTE *)(v3 + *v23))
      v27 = 0;
LABEL_27:
    if (v33 || (v27 & 7) == 4)
    {
LABEL_128:
      v71 = 1;
      goto LABEL_129;
    }
    v35 = v27 >> 3;
    v36 = v75;
    if ((v74 & 1) == 0)
    {
      v37 = v21;
      do
      {
        v39 = *v37++;
        v38 = v39;
        v36 = v39 != 0;
        if (v39)
          v40 = v38 == (_DWORD)v35;
        else
          v40 = 1;
      }
      while (!v40);
    }
    switch((int)v35)
    {
      case 1:
        if (!v36)
          goto LABEL_100;
        if ((*(_WORD *)(a1 + 104) & 0x200) == 0)
        {
          PBReaderReadString();
          v41 = objc_claimAutoreleasedReturnValue();
          v42 = 72;
          goto LABEL_92;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_150;
        v66 = *(_WORD *)(a1 + 104) << 6;
        goto LABEL_125;
      case 2:
        if (!v36)
          goto LABEL_100;
        if ((*(_WORD *)(a1 + 104) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_150;
          v66 = *(_WORD *)(a1 + 104) << 11;
          goto LABEL_125;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_150;
        v46 = objc_alloc_init(GEORPAmenityCorrections);
        if (!GEORPAmenityCorrectionsReadAllFrom((uint64_t)v46, (void *)v3, v11 & 1))
          goto LABEL_149;
        PBReaderRecallMark();
        v47 = 32;
        goto LABEL_98;
      case 3:
        if (!v36 || (*(_WORD *)(a1 + 104) & 0x20) != 0)
          goto LABEL_100;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_150;
        v46 = objc_alloc_init(GEORPFeedbackBusinessHours);
        if (!GEORPFeedbackBusinessHoursReadAllFrom((uint64_t)v46, (void *)v3, v11 & 1))
          goto LABEL_149;
        PBReaderRecallMark();
        -[GEORPTransitPoiCorrections _addNoFlagsBusinessHours:](a1, v46);

        goto LABEL_126;
      case 4:
        if (!v36)
          goto LABEL_100;
        if ((*(_WORD *)(a1 + 104) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_150;
          v66 = *(_WORD *)(a1 + 104) << 8;
          goto LABEL_125;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_150;
        v46 = objc_alloc_init(GEORPCorrectedCoordinate);
        if (!GEORPCorrectedCoordinateReadAllFrom((uint64_t)v46, (void *)v3, v11 & 1))
          goto LABEL_149;
        PBReaderRecallMark();
        v47 = 56;
        goto LABEL_98;
      case 5:
        if (!v36)
          goto LABEL_100;
        if ((*(_WORD *)(a1 + 104) & 0x100) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_150;
          v66 = *(_WORD *)(a1 + 104) << 7;
          goto LABEL_125;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_150;
        v46 = objc_alloc_init(GEORPMapLocation);
        if (!GEORPMapLocationReadAllFrom((uint64_t)v46, (void *)v3, v11 & 1))
          goto LABEL_149;
        PBReaderRecallMark();
        v47 = 64;
        goto LABEL_98;
      case 6:
        if ((v9 & 1) == 0)
          goto LABEL_100;
        v48 = 0;
        v49 = 0;
        v50 = 0;
        *(_WORD *)(a1 + 104) |= 2u;
        while (2)
        {
          v51 = *v22;
          v52 = *(_QWORD *)(v3 + v51);
          v53 = v52 + 1;
          if (v52 == -1 || v53 > *(_QWORD *)(v3 + *v7))
          {
            *(_BYTE *)(v3 + *v23) = 1;
          }
          else
          {
            v54 = *(_BYTE *)(*(_QWORD *)(v3 + *v24) + v52);
            *(_QWORD *)(v3 + v51) = v53;
            v50 |= (unint64_t)(v54 & 0x7F) << v48;
            if (v54 < 0)
            {
              v48 += 7;
              v32 = v49++ >= 9;
              if (v32)
              {
                v50 = 0;
                goto LABEL_105;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v23))
          v50 = 0;
LABEL_105:
        v64 = v50 != 0;
        v65 = 101;
        goto LABEL_110;
      case 7:
        if ((v9 & 1) == 0)
          goto LABEL_100;
        v55 = 0;
        v56 = 0;
        v57 = 0;
        *(_WORD *)(a1 + 104) |= 1u;
        while (2)
        {
          v58 = *v22;
          v59 = *(_QWORD *)(v3 + v58);
          v60 = v59 + 1;
          if (v59 == -1 || v60 > *(_QWORD *)(v3 + *v7))
          {
            *(_BYTE *)(v3 + *v23) = 1;
          }
          else
          {
            v61 = *(_BYTE *)(*(_QWORD *)(v3 + *v24) + v59);
            *(_QWORD *)(v3 + v58) = v60;
            v57 |= (unint64_t)(v61 & 0x7F) << v55;
            if (v61 < 0)
            {
              v55 += 7;
              v32 = v56++ >= 9;
              if (v32)
              {
                v57 = 0;
                goto LABEL_109;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v23))
          v57 = 0;
LABEL_109:
        v64 = v57 != 0;
        v65 = 100;
LABEL_110:
        *(_BYTE *)(a1 + v65) = v64;
        goto LABEL_127;
      case 8:
        if (!v36)
          goto LABEL_100;
        if ((*(_WORD *)(a1 + 104) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_150;
          v66 = *(_WORD *)(a1 + 104) << 12;
          goto LABEL_125;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_150;
        v46 = objc_alloc_init(GEORPAccessPointCorrections);
        if (!GEORPAccessPointCorrectionsReadAllFrom((uint64_t)v46, (void *)v3, v11 & 1))
          goto LABEL_149;
        PBReaderRecallMark();
        v47 = 24;
        goto LABEL_98;
      case 9:
        if (!v36)
          goto LABEL_100;
        if ((*(_WORD *)(a1 + 104) & 0x400) == 0)
        {
          PBReaderReadString();
          v41 = objc_claimAutoreleasedReturnValue();
          v42 = 80;
LABEL_92:
          v62 = *(void **)(a1 + v42);
          *(_QWORD *)(a1 + v42) = v41;
          goto LABEL_99;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_150;
        v66 = 32 * *(_WORD *)(a1 + 104);
        goto LABEL_125;
      case 10:
        if (!v36)
          goto LABEL_100;
        if ((*(_WORD *)(a1 + 104) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_150;
          v66 = *(_WORD *)(a1 + 104) << 9;
LABEL_125:
          v8 += v66 >> 15;
LABEL_126:
          v23 = (int *)MEMORY[0x1E0D82BC8];
          v7 = (int *)MEMORY[0x1E0D82BD8];
          v24 = (int *)MEMORY[0x1E0D82BB8];
LABEL_127:
          if (!(v73 & 1 | (v8 != 0)))
            goto LABEL_128;
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_150;
        v46 = objc_alloc_init(GEORPPlaceContainmentCorrections);
        if (GEORPPlaceContainmentCorrectionsReadAllFrom((uint64_t)v46, (void *)v3, v11 & 1))
        {
          PBReaderRecallMark();
          v47 = 48;
LABEL_98:
          v62 = *(void **)(a1 + v47);
          *(_QWORD *)(a1 + v47) = v46;
LABEL_99:

          --v8;
          goto LABEL_126;
        }
LABEL_149:

LABEL_150:
        v71 = 0;
        v23 = (int *)MEMORY[0x1E0D82BC8];
LABEL_129:
        if ((v72 & 1) != 0)
LABEL_130:
          *(_WORD *)(a1 + 104) |= 4u;
        if (v75 || (v71 & 1) == 0)
        {
          *(_WORD *)(a1 + 104) |= 0x200u;
          *(_WORD *)(a1 + 104) |= 0x10u;
          *(_WORD *)(a1 + 104) |= 0x20u;
          *(_WORD *)(a1 + 104) |= 0x80u;
          *(_WORD *)(a1 + 104) |= 0x100u;
          *(_WORD *)(a1 + 104) |= 8u;
          *(_WORD *)(a1 + 104) |= 0x400u;
          *(_WORD *)(a1 + 104) |= 0x40u;
        }
        else if (v21)
        {
          while (1)
          {
            v67 = *v21++;
            v68 = 512;
            switch(v67)
            {
              case 0:
                goto LABEL_143;
              case 1:
                goto LABEL_142;
              case 2:
                v68 = 16;
                goto LABEL_142;
              case 3:
                v68 = 32;
                goto LABEL_142;
              case 4:
                v68 = 128;
                goto LABEL_142;
              case 5:
                v68 = 256;
                goto LABEL_142;
              case 8:
                v68 = 8;
                goto LABEL_142;
              case 9:
                v68 = 1024;
                goto LABEL_142;
              case 10:
                v68 = 64;
LABEL_142:
                *(_WORD *)(a1 + 104) |= v68;
                break;
              default:
                continue;
            }
          }
        }
LABEL_143:
        if (v71)
          v3 = *(_BYTE *)(v3 + *v23) == 0;
        else
          v3 = 0;
        if (v75)
        {
          v69 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      default:
        if ((v72 & 1) == 0 || (*(_WORD *)(a1 + 104) & 4) != 0)
        {
LABEL_100:
          v63 = PBReaderSkipValueWithTag();
          v24 = (int *)MEMORY[0x1E0D82BB8];
          v7 = (int *)MEMORY[0x1E0D82BD8];
          v23 = (int *)MEMORY[0x1E0D82BC8];
          if ((v63 & 1) == 0)
          {
            v71 = 0;
            goto LABEL_129;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v43 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v44 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v43;

          }
          v45 = PBUnknownFieldAdd();
          v23 = (int *)MEMORY[0x1E0D82BC8];
          v7 = (int *)MEMORY[0x1E0D82BD8];
          v24 = (int *)MEMORY[0x1E0D82BB8];
          if (!v45)
          {
            v71 = 0;
            goto LABEL_130;
          }
        }
        goto LABEL_127;
    }
  }
}

void sub_188AA6CC8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188AA6E0C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188AA7140(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188AA7284(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188AA74AC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188AA75EC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188AA772C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188AA8488(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORPTransitPoiCorrectionsCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _BYTE v12[128];
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  objc_msgSend(a1[4], "readAll:", 1);
  v10 = 0u;
  v11 = 0u;
  v8 = 0u;
  v9 = 0u;
  v2 = a1[5];
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v9;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v9 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v8 + 1) + 8 * v6++), "readAll:", 1, (_QWORD)v8);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
    }
    while (v4);
  }

  objc_msgSend(a1[7], "readAll:", 1);
  objc_msgSend(a1[8], "readAll:", 1);
  objc_msgSend(a1[3], "readAll:", 1);
  return objc_msgSend(a1[6], "readAll:", 1);
}

unint64_t GEORPTransitPoiCorrectionsReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 92))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEORPTransitPoiCorrectionsReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 96));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 88) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 92) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEORPTransitPoiCorrectionsReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEORPTransitPoiCorrectionsReadAllFrom_initialTag;
  Specified = GEORPTransitPoiCorrectionsReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEORPTransitPoiCorrectionsCallReadAllRecursiveWithoutSynchronized((id *)a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 96));
  return Specified;
}

void sub_188AA8774(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPTransitPoiCorrectionsReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORPTransitPoiCorrectionsReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188AA87D4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPTransitPoiCorrectionsIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  _BOOL8 v28;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2)
            goto LABEL_67;
          goto LABEL_59;
        case 2u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPAmenityCorrectionsIsValid(a1))
            goto LABEL_67;
          goto LABEL_64;
        case 3u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPFeedbackBusinessHoursIsValid(a1))
            goto LABEL_67;
          goto LABEL_64;
        case 4u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPCorrectedCoordinateIsValid(a1))
            goto LABEL_67;
          goto LABEL_64;
        case 5u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPMapLocationIsValid(a1))
            goto LABEL_67;
          goto LABEL_64;
        case 6u:
          if ((v8 & 7) != 0)
            goto LABEL_67;
          v17 = 0;
          while (1)
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
              goto LABEL_53;
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if (v21 < 0)
            {
              v22 = v17++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_65;
          }
        case 7u:
          if ((v8 & 7) != 0)
            goto LABEL_67;
          v23 = 0;
          break;
        case 8u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPAccessPointCorrectionsIsValid(a1))
            goto LABEL_67;
          goto LABEL_64;
        case 9u:
          if (v15 == 2)
            goto LABEL_59;
          goto LABEL_67;
        case 0xAu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPPlaceContainmentCorrectionsIsValid(a1))
            goto LABEL_67;
LABEL_64:
          PBReaderRecallMark();
          continue;
        default:
LABEL_59:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_67:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v24 = *v2;
        v25 = *(_QWORD *)&a1[v24];
        v26 = v25 + 1;
        if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
          break;
        v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
        *(_QWORD *)&a1[v24] = v26;
        if (v27 < 0)
        {
          v22 = v23++ > 8;
          if (!v22)
            continue;
        }
        goto LABEL_65;
      }
LABEL_53:
      a1[*v4] = 1;
LABEL_65:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v28 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v28;
}

void sub_188AA8E90(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORPTransitPoiCorrectionsIsDirty(uint64_t a1)
{
  __int16 v2;
  uint64_t v3;
  id v5;
  uint64_t v6;
  uint64_t i;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _BYTE v12[128];
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 96));
  v2 = *(_WORD *)(a1 + 104);
  if ((v2 & 0xA00) != 0)
    return 1;
  if ((v2 & 0x10) != 0)
  {
    if (GEORPAmenityCorrectionsIsDirty(*(_QWORD *)(a1 + 32)))
      return 1;
    v2 = *(_WORD *)(a1 + 104);
  }
  if ((v2 & 0x20) != 0)
    return 1;
  if ((v2 & 0x80) != 0)
  {
    if (GEORPCorrectedCoordinateIsDirty(*(_QWORD *)(a1 + 56)))
      return 1;
    v2 = *(_WORD *)(a1 + 104);
  }
  if ((v2 & 0x100) != 0)
  {
    if (GEORPMapLocationIsDirty(*(_QWORD *)(a1 + 64)))
      return 1;
    v2 = *(_WORD *)(a1 + 104);
  }
  if ((v2 & 8) != 0)
  {
    if ((GEORPAccessPointCorrectionsIsDirty(*(os_unfair_lock_s **)(a1 + 24)) & 1) != 0)
      return 1;
    v2 = *(_WORD *)(a1 + 104);
  }
  if ((v2 & 0x400) != 0)
    return 1;
  if ((v2 & 0x40) == 0)
    goto LABEL_21;
  if ((GEORPPlaceContainmentCorrectionsIsDirty(*(os_unfair_lock_s **)(a1 + 48)) & 1) != 0)
    return 1;
  v2 = *(_WORD *)(a1 + 104);
LABEL_21:
  if ((v2 & 0x20) == 0)
    return 0;
  v10 = 0u;
  v11 = 0u;
  v8 = 0u;
  v9 = 0u;
  v5 = *(id *)(a1 + 40);
  v3 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
  if (v3)
  {
    v6 = *(_QWORD *)v9;
    while (2)
    {
      for (i = 0; i != v3; ++i)
      {
        if (*(_QWORD *)v9 != v6)
          objc_enumerationMutation(v5);
        if ((GEORPFeedbackBusinessHoursIsDirty(*(os_unfair_lock_s **)(*((_QWORD *)&v8 + 1) + 8 * i)) & 1) != 0)
        {
          v3 = 1;
          goto LABEL_33;
        }
      }
      v3 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
      if (v3)
        continue;
      break;
    }
  }
LABEL_33:

  return v3;
}

os_unfair_lock_s *GEORPTransitPoiCorrectionsIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEORPTransitPoiCorrectionsIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 24);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_188AA96BC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188AA9CF0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188AAA17C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPTransitPoiFeedbackReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  int *v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  int *v18;
  int *v19;
  int *v20;
  int *v21;
  char v22;
  unsigned int v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  BOOL v29;
  int v30;
  unint64_t v32;
  BOOL v33;
  int *v34;
  int v35;
  int v36;
  BOOL v37;
  char v38;
  unsigned int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  id v45;
  void *v46;
  int v47;
  GEORPTransitPoiCorrections *v48;
  uint64_t v49;
  void *v50;
  char v51;
  __int16 v52;
  int v53;
  __int16 v54;
  void *v55;
  int v57;
  int *v58;
  char v59;
  char v60;
  char v61;
  char v62;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 76);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 72));
  v7 = v6;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 88)), (uint16x4_t)0xFFFBFFF9FFFEFFFALL), (int8x8_t)0x1000100010001))+ ((*(_WORD *)(a1 + 88) >> 3) & 1)+ ((*(_WORD *)(a1 + 88) >> 4) & 1)+ ((*(_WORD *)(a1 + 88) >> 1) & 1));
  while (2)
  {
    v14 = 1;
    v15 = 1;
    v16 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v13;
        goto LABEL_8;
      case -3:
        v9 = 1;
        goto LABEL_7;
      case -2:
        v15 = v11;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v17 = v13 > 3;
        v59 = v17 & ~(_BYTE)v12 | v10;
        v60 = v17 | v12 | v59;
        if ((((v17 | v12) | v9) & 1) != 0)
          v18 = 0;
        else
          v18 = a3;
        v61 = (v18 == 0) | v17 | v12;
        v62 = v17 | v12;
        v19 = (int *)MEMORY[0x1E0D82BF0];
        v20 = (int *)MEMORY[0x1E0D82BC8];
        v21 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v13;
LABEL_7:
        v14 = v10;
LABEL_8:
        v15 = v11;
        v16 = v12;
LABEL_10:
        ++v8;
        v10 = v14;
        v11 = v15;
        v12 = v16;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v19) >= *(_QWORD *)(v3 + *v7) || *(_BYTE *)(v3 + *v20))
      goto LABEL_102;
    v22 = 0;
    v23 = 0;
    v24 = 0;
    while (1)
    {
      v25 = *v19;
      v26 = *(_QWORD *)(v3 + v25);
      v27 = v26 + 1;
      if (v26 == -1 || v27 > *(_QWORD *)(v3 + *v7))
        break;
      v28 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v26);
      *(_QWORD *)(v3 + v25) = v27;
      v24 |= (unint64_t)(v28 & 0x7F) << v22;
      if ((v28 & 0x80) == 0)
        goto LABEL_25;
      v22 += 7;
      v29 = v23++ >= 9;
      if (v29)
      {
        v24 = 0;
        v30 = *(unsigned __int8 *)(v3 + *v20);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v20) = 1;
LABEL_25:
    v30 = *(unsigned __int8 *)(v3 + *v20);
    if (*(_BYTE *)(v3 + *v20))
      v24 = 0;
LABEL_27:
    if (v30 || (v24 & 7) == 4)
    {
LABEL_102:
      v57 = 1;
      goto LABEL_103;
    }
    v32 = v24 >> 3;
    v33 = v62;
    if ((v61 & 1) == 0)
    {
      v34 = v18;
      do
      {
        v36 = *v34++;
        v35 = v36;
        v33 = v36 != 0;
        if (v36)
          v37 = v35 == (_DWORD)v32;
        else
          v37 = 1;
      }
      while (!v37);
    }
    switch((int)v32)
    {
      case 1:
        if ((v9 & 1) == 0)
          goto LABEL_85;
        v38 = 0;
        v39 = 0;
        v40 = 0;
        *(_WORD *)(a1 + 88) |= 1u;
        while (1)
        {
          v41 = *v19;
          v42 = *(_QWORD *)(v3 + v41);
          v43 = v42 + 1;
          if (v42 == -1 || v43 > *(_QWORD *)(v3 + *v7))
            break;
          v44 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v42);
          *(_QWORD *)(v3 + v41) = v43;
          v40 |= (unint64_t)(v44 & 0x7F) << v38;
          if ((v44 & 0x80) == 0)
            goto LABEL_88;
          v38 += 7;
          v29 = v39++ >= 9;
          if (v29)
          {
            LODWORD(v40) = 0;
            goto LABEL_90;
          }
        }
        *(_BYTE *)(v3 + *v20) = 1;
LABEL_88:
        if (*(_BYTE *)(v3 + *v20))
          LODWORD(v40) = 0;
LABEL_90:
        *(_DWORD *)(a1 + 84) = v40;
        goto LABEL_101;
      case 2:
        if (!v33)
          goto LABEL_85;
        if ((*(_WORD *)(a1 + 88) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_122;
          v52 = *(_WORD *)(a1 + 88) << 13;
          goto LABEL_99;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_122;
        v48 = objc_alloc_init(GEORPTransitPoiCorrections);
        if (!GEORPTransitPoiCorrectionsReadAllFrom((uint64_t)v48, (void *)v3, v11 & 1))
          goto LABEL_121;
        PBReaderRecallMark();
        v49 = 24;
        goto LABEL_73;
      case 3:
        if (!v33)
          goto LABEL_85;
        if ((*(_WORD *)(a1 + 88) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_122;
          v52 = *(_WORD *)(a1 + 88) << 9;
          goto LABEL_99;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_122;
        v48 = objc_alloc_init(GEOPDPlace);
        if (!GEOPDPlaceReadAllFrom((uint64_t)v48, (void *)v3, v11 & 1))
          goto LABEL_121;
        PBReaderRecallMark();
        v49 = 56;
        goto LABEL_73;
      case 4:
        if (!v33)
          goto LABEL_85;
        if ((*(_WORD *)(a1 + 88) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_122;
          v52 = *(_WORD *)(a1 + 88) << 8;
          goto LABEL_99;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_122;
        v48 = objc_alloc_init(GEORPTransitLineTileInfo);
        if (!GEORPTransitLineTileInfoReadAllFrom((uint64_t)v48, (void *)v3, v11 & 1))
          goto LABEL_121;
        PBReaderRecallMark();
        v49 = 64;
        goto LABEL_73;
      case 5:
        if (!v33)
          goto LABEL_85;
        if ((*(_WORD *)(a1 + 88) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_122;
          v52 = *(_WORD *)(a1 + 88) << 10;
LABEL_99:
          v8 += v52 >> 15;
LABEL_100:
          v20 = (int *)MEMORY[0x1E0D82BC8];
          v7 = (int *)MEMORY[0x1E0D82BD8];
LABEL_101:
          if (!(v60 & 1 | (v8 != 0)))
            goto LABEL_102;
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_122;
        v48 = objc_alloc_init(GEOPDPlaceRequest);
        if (GEOPDPlaceRequestReadAllFrom((uint64_t)v48, (void *)v3, v11 & 1))
        {
          PBReaderRecallMark();
          v49 = 48;
LABEL_73:
          v50 = *(void **)(a1 + v49);
          *(_QWORD *)(a1 + v49) = v48;

          --v8;
          goto LABEL_100;
        }
LABEL_121:

LABEL_122:
        v57 = 0;
        v20 = (int *)MEMORY[0x1E0D82BC8];
LABEL_103:
        v58 = &OBJC_IVAR___GEOTransitVehicleInfo__pickupDropoffType;
        if ((v59 & 1) != 0)
LABEL_104:
          *(_WORD *)(a1 + v58[756]) |= 2u;
        if (v62 & 1 | ((v57 & 1) == 0))
        {
          *(_WORD *)(a1 + v58[756]) |= 4u;
          *(_WORD *)(a1 + v58[756]) |= 0x40u;
          *(_WORD *)(a1 + v58[756]) |= 0x80u;
          *(_WORD *)(a1 + v58[756]) |= 0x20u;
          *(_WORD *)(a1 + v58[756]) |= 8u;
          *(_WORD *)(a1 + v58[756]) |= 0x10u;
        }
        else if (v18)
        {
          while (1)
          {
            v53 = *v18++;
            v54 = 4;
            switch(v53)
            {
              case 0:
                goto LABEL_115;
              case 2:
                goto LABEL_114;
              case 3:
                v54 = 64;
                goto LABEL_114;
              case 4:
                v54 = 128;
                goto LABEL_114;
              case 5:
                v54 = 32;
                goto LABEL_114;
              case 6:
                v54 = 8;
                goto LABEL_114;
              case 7:
                v54 = 16;
LABEL_114:
                *(_WORD *)(a1 + v58[756]) |= v54;
                break;
              default:
                continue;
            }
          }
        }
LABEL_115:
        if (v57)
          v3 = *(_BYTE *)(v3 + *v20) == 0;
        else
          v3 = 0;
        if ((v62 & 1) != 0)
        {
          v55 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      case 6:
        if (!v33 || (*(_WORD *)(a1 + 88) & 8) != 0)
          goto LABEL_85;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_122;
        v48 = objc_alloc_init(GEODirectionsRequest);
        if (!GEODirectionsRequestReadAllFrom((uint64_t)v48, (void *)v3, v11 & 1))
          goto LABEL_121;
        PBReaderRecallMark();
        -[GEORPTransitPoiFeedback _addNoFlagsDirectionsRequest:](a1, v48);
        goto LABEL_84;
      case 7:
        if (!v33 || (*(_WORD *)(a1 + 88) & 0x10) != 0)
          goto LABEL_85;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_122;
        v48 = objc_alloc_init(GEODirectionsResponse);
        if (!GEODirectionsResponseReadAllFrom((uint64_t)v48, (void *)v3, v11 & 1))
          goto LABEL_121;
        PBReaderRecallMark();
        -[GEORPTransitPoiFeedback _addNoFlagsDirectionsResponse:](a1, v48);
LABEL_84:

        goto LABEL_100;
      default:
        if ((v59 & 1) == 0 || (*(_WORD *)(a1 + 88) & 2) != 0)
        {
LABEL_85:
          v51 = PBReaderSkipValueWithTag();
          v7 = (int *)MEMORY[0x1E0D82BD8];
          v20 = (int *)MEMORY[0x1E0D82BC8];
          if ((v51 & 1) == 0)
          {
            v57 = 0;
            goto LABEL_103;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v45 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v46 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v45;

          }
          v47 = PBUnknownFieldAdd();
          v20 = (int *)MEMORY[0x1E0D82BC8];
          v7 = (int *)MEMORY[0x1E0D82BD8];
          if (!v47)
          {
            v57 = 0;
            v58 = &OBJC_IVAR___GEOTransitVehicleInfo__pickupDropoffType;
            goto LABEL_104;
          }
        }
        goto LABEL_101;
    }
  }
}

void sub_188AAAB90(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188AAACD4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188AAAE14(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188AAAF58(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188AAB28C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188AAC238(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEORPTransitPoiFeedbackCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  _BYTE v20[128];
  _BYTE v21[128];
  uint64_t v22;

  v22 = *MEMORY[0x1E0C80C00];
  objc_msgSend(a1[3], "readAll:", 1);
  objc_msgSend(a1[7], "readAll:", 1);
  objc_msgSend(a1[8], "readAll:", 1);
  objc_msgSend(a1[6], "readAll:", 1);
  v18 = 0u;
  v19 = 0u;
  v16 = 0u;
  v17 = 0u;
  v2 = a1[4];
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v16, v21, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v17;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v17 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v16 + 1) + 8 * v6++), "readAll:", 1);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v16, v21, 16);
    }
    while (v4);
  }

  v14 = 0u;
  v15 = 0u;
  v12 = 0u;
  v13 = 0u;
  v7 = a1[5];
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v12, v20, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v13;
    do
    {
      v11 = 0;
      do
      {
        if (*(_QWORD *)v13 != v10)
          objc_enumerationMutation(v7);
        objc_msgSend(*(id *)(*((_QWORD *)&v12 + 1) + 8 * v11++), "readAll:", 1, (_QWORD)v12);
      }
      while (v9 != v11);
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v12, v20, 16);
    }
    while (v9);
  }

}

unint64_t GEORPTransitPoiFeedbackReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 76))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEORPTransitPoiFeedbackReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 80));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 72) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 76) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEORPTransitPoiFeedbackReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEORPTransitPoiFeedbackReadAllFrom_initialTag;
  Specified = GEORPTransitPoiFeedbackReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEORPTransitPoiFeedbackCallReadAllRecursiveWithoutSynchronized((id *)a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 80));
  return Specified;
}

void sub_188AAC5A4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPTransitPoiFeedbackReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORPTransitPoiFeedbackReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188AAC604(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188AAC950(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORPTransitPoiFeedbackIsDirty(uint64_t a1)
{
  __int16 v2;
  uint64_t v3;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  _BYTE v20[128];
  _BYTE v21[128];
  uint64_t v22;

  v22 = *MEMORY[0x1E0C80C00];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  v2 = *(_WORD *)(a1 + 88);
  if ((v2 & 0x100) != 0)
    return 1;
  if ((v2 & 4) != 0)
  {
    if ((GEORPTransitPoiCorrectionsIsDirty(*(os_unfair_lock_s **)(a1 + 24)) & 1) != 0)
      return 1;
    v2 = *(_WORD *)(a1 + 88);
  }
  if ((v2 & 0x40) != 0)
  {
    if ((GEOPDPlaceIsDirty(*(os_unfair_lock_s **)(a1 + 56)) & 1) != 0)
      return 1;
    v2 = *(_WORD *)(a1 + 88);
  }
  if ((v2 & 0x80) != 0)
  {
    if (GEORPTransitLineTileInfoIsDirty(*(_QWORD *)(a1 + 64)))
      return 1;
    v2 = *(_WORD *)(a1 + 88);
  }
  if ((v2 & 0x20) == 0)
    goto LABEL_14;
  if ((GEOPDPlaceRequestIsDirty(*(os_unfair_lock_s **)(a1 + 48)) & 1) == 0)
  {
    v2 = *(_WORD *)(a1 + 88);
LABEL_14:
    if ((v2 & 0x18) != 0)
      return 1;
    if ((v2 & 8) != 0)
    {
      v18 = 0u;
      v19 = 0u;
      v16 = 0u;
      v17 = 0u;
      v5 = *(id *)(a1 + 32);
      v6 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v16, v21, 16);
      if (v6)
      {
        v7 = v6;
        v8 = *(_QWORD *)v17;
LABEL_20:
        v9 = 0;
        while (1)
        {
          if (*(_QWORD *)v17 != v8)
            objc_enumerationMutation(v5);
          if ((GEODirectionsRequestIsDirty(*(os_unfair_lock_s **)(*((_QWORD *)&v16 + 1) + 8 * v9)) & 1) != 0)
            goto LABEL_38;
          if (v7 == ++v9)
          {
            v7 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v16, v21, 16);
            if (v7)
              goto LABEL_20;
            break;
          }
        }
      }

      v2 = *(_WORD *)(a1 + 88);
    }
    if ((v2 & 0x10) == 0)
      return 0;
    v14 = 0u;
    v15 = 0u;
    v12 = 0u;
    v13 = 0u;
    v5 = *(id *)(a1 + 40);
    v3 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v12, v20, 16);
    if (!v3)
    {
LABEL_39:

      return v3;
    }
    v10 = *(_QWORD *)v13;
LABEL_31:
    v11 = 0;
    while (1)
    {
      if (*(_QWORD *)v13 != v10)
        objc_enumerationMutation(v5);
      if ((GEODirectionsResponseIsDirty(*(os_unfair_lock_s **)(*((_QWORD *)&v12 + 1) + 8 * v11)) & 1) != 0)
        break;
      if (v3 == ++v11)
      {
        v3 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v12, v20, 16);
        if (v3)
          goto LABEL_31;
        goto LABEL_39;
      }
    }
LABEL_38:
    v3 = 1;
    goto LABEL_39;
  }
  return 1;
}

os_unfair_lock_s *GEORPTransitPoiFeedbackIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEORPTransitPoiFeedbackIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 20);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_188AAD398(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188AAD90C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188AADD8C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPUserPathReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  _BOOL4 v14;
  int v15;
  int v16;
  int *v17;
  int *v18;
  int v19;
  int *v20;
  int *v21;
  char v22;
  unsigned int v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  BOOL v29;
  int v30;
  int v31;
  unint64_t v33;
  BOOL v34;
  int *v35;
  int v36;
  int v37;
  BOOL v38;
  char v39;
  unsigned int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  void *v46;
  id v47;
  void *v48;
  char v49;
  unsigned int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  char v55;
  int v56;
  int v57;
  char v58;
  void *v59;
  char v61;
  int v62;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 60);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 56));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int8 *)(a1 + 68) >> 2) & 1)
      + (*(_BYTE *)(a1 + 68) & 1)
      + ((*(unsigned __int8 *)(a1 + 68) >> 1) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v11;
        v12 = v7;
        goto LABEL_8;
      case -3:
        v9 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v11 != 0;
        v15 = v14 | v7;
        v16 = v14 & ~(_DWORD)v7 | v8;
        if ((((v14 | v7) | v9) & 1) != 0)
          v17 = 0;
        else
          v17 = a3;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v19 = 1;
        v20 = (int *)MEMORY[0x1E0D82BC8];
        if (*(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(v3 + *v6))
          goto LABEL_80;
        v61 = v14 & ~(_BYTE)v7 | v8;
        v62 = (v10 != 0) | v15 | v16;
        v21 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_7:
        v12 = v7;
        v13 = v8;
LABEL_8:
        ++v10;
        v7 = v12;
        v8 = v13;
        continue;
    }
    break;
  }
  do
  {
    if (*(_BYTE *)(v3 + *v20))
      break;
    v22 = 0;
    v23 = 0;
    v24 = 0;
    while (1)
    {
      v25 = *v18;
      v26 = *(_QWORD *)(v3 + v25);
      v27 = v26 + 1;
      if (v26 == -1 || v27 > *(_QWORD *)(v3 + *v6))
        break;
      v28 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v26);
      *(_QWORD *)(v3 + v25) = v27;
      v24 |= (unint64_t)(v28 & 0x7F) << v22;
      if ((v28 & 0x80) == 0)
        goto LABEL_23;
      v22 += 7;
      v29 = v23++ >= 9;
      if (v29)
      {
        v24 = 0;
        v30 = *(unsigned __int8 *)(v3 + *v20);
        goto LABEL_25;
      }
    }
    *(_BYTE *)(v3 + *v20) = 1;
LABEL_23:
    v30 = *(unsigned __int8 *)(v3 + *v20);
    if (*(_BYTE *)(v3 + *v20))
      v24 = 0;
LABEL_25:
    v31 = v24 & 7;
    if (v30 || v31 == 4)
      break;
    v33 = v24 >> 3;
    v34 = v15;
    if (!((v17 == 0) | v15 & 1))
    {
      v35 = v17;
      do
      {
        v37 = *v35++;
        v36 = v37;
        v34 = v37 != 0;
        if (v37)
          v38 = v36 == (_DWORD)v33;
        else
          v38 = 1;
      }
      while (!v38);
    }
    if ((_DWORD)v33 == 2)
    {
      if (v34 && (*(_BYTE *)(a1 + 68) & 4) == 0)
      {
        PBReaderReadString();
        v46 = (void *)objc_claimAutoreleasedReturnValue();
        if (v46)
          -[GEORPUserPath _addNoFlagsWebPath:](a1, v46);

        goto LABEL_76;
      }
    }
    else if ((_DWORD)v33 == 1)
    {
      if (v34 && (*(_BYTE *)(a1 + 68) & 2) == 0)
      {
        if (v31 == 2)
        {
          v19 = PBReaderPlaceMark();
          if (!v19)
            goto LABEL_79;
          while (*(_QWORD *)(v3 + *v18) < *(_QWORD *)(v3 + *v6) && !*(_BYTE *)(v3 + *v20))
          {
            v39 = 0;
            v40 = 0;
            v41 = 0;
            while (1)
            {
              v42 = *v18;
              v43 = *(_QWORD *)(v3 + v42);
              v44 = v43 + 1;
              if (v43 == -1 || v44 > *(_QWORD *)(v3 + *v6))
                break;
              v45 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v43);
              *(_QWORD *)(v3 + v42) = v44;
              v41 |= (unint64_t)(v45 & 0x7F) << v39;
              if (v45 < 0)
              {
                v39 += 7;
                v29 = v40++ >= 9;
                if (!v29)
                  continue;
              }
              goto LABEL_52;
            }
            *(_BYTE *)(v3 + *v20) = 1;
LABEL_52:
            PBRepeatedInt32Add();
          }
          PBReaderRecallMark();
        }
        else
        {
          v49 = 0;
          v50 = 0;
          v51 = 0;
          while (1)
          {
            v52 = *v18;
            v53 = *(_QWORD *)(v3 + v52);
            v54 = v53 + 1;
            if (v53 == -1 || v54 > *(_QWORD *)(v3 + *v6))
              break;
            v55 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v53);
            *(_QWORD *)(v3 + v52) = v54;
            v51 |= (unint64_t)(v55 & 0x7F) << v49;
            if (v55 < 0)
            {
              v49 += 7;
              v29 = v50++ >= 9;
              if (!v29)
                continue;
            }
            goto LABEL_75;
          }
          *(_BYTE *)(v3 + *v20) = 1;
LABEL_75:
          PBRepeatedInt32Add();
        }
LABEL_76:
        if ((v62 & 1) == 0)
          break;
        continue;
      }
    }
    else if ((v61 & 1) != 0 && (*(_BYTE *)(a1 + 68) & 1) == 0)
    {
      if (!*(_QWORD *)(a1 + 16))
      {
        v47 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v48 = *(void **)(a1 + 16);
        *(_QWORD *)(a1 + 16) = v47;

      }
      v19 = PBUnknownFieldAdd();
      if (!v19)
        goto LABEL_81;
      goto LABEL_76;
    }
    v19 = PBReaderSkipValueWithTag();
    if ((v19 & v62 & 1) == 0)
      goto LABEL_79;
  }
  while (*(_QWORD *)(v3 + *v18) < *(_QWORD *)(v3 + *v6));
  v19 = 1;
LABEL_79:
  LOBYTE(v16) = v61;
LABEL_80:
  if ((v16 & 1) != 0)
LABEL_81:
    *(_BYTE *)(a1 + 68) |= 1u;
  if (v15 & 1 | ((v19 & 1) == 0))
  {
    *(_BYTE *)(a1 + 68) |= 2u;
    *(_BYTE *)(a1 + 68) |= 4u;
    goto LABEL_92;
  }
  if (v17)
  {
    while (2)
    {
      while (1)
      {
        v57 = *v17++;
        v56 = v57;
        if (v57 == 1)
          break;
        if (v56 == 2)
        {
          v58 = 4;
          goto LABEL_91;
        }
        if (!v56)
          goto LABEL_92;
      }
      v58 = 2;
LABEL_91:
      *(_BYTE *)(a1 + 68) |= v58;
      continue;
    }
  }
LABEL_92:
  if (v19)
  {
    v3 = *(_BYTE *)(v3 + *v20) == 0;
    if ((v15 & 1) == 0)
      return v3;
LABEL_96:
    v59 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  else
  {
    v3 = 0;
    if ((v15 & 1) != 0)
      goto LABEL_96;
  }
  return v3;
}

void sub_188AB36B0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188AB9018(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPUserPathReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 60))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEORPUserPathReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 60) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEORPUserPathReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEORPUserPathReadAllFrom_initialTag;
  Specified = GEORPUserPathReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_188AB91A4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPUserPathReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORPUserPathReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188AB9204(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188AB9468(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPUserPathIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  v2 = (*(_BYTE *)(a1 + 68) & 0xE) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return v2;
}

void sub_188AB9854(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188AB9B54(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188AB9DD4(_Unwind_Exception *exception_object)
{
  _Unwind_Resume(exception_object);
}

void sub_188ABA08C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_188ABA218(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_188ABA8D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id GEOGetSubscriptionsDownloadManagerLog()
{
  if (qword_1ECDBBB08 != -1)
    dispatch_once(&qword_1ECDBBB08, &__block_literal_global_285);
  return (id)_MergedGlobals_197;
}

void sub_188ABB8A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,char a43,uint64_t a44,uint64_t a45,uint64_t a46,char a47)
{
  _Block_object_dispose(&a43, 8);
  _Block_object_dispose(&a47, 8);
  _Unwind_Resume(a1);
}

void sub_188ABBB00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_188ABBCD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_188ABCFC8(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 160), 8);
  _Unwind_Resume(a1);
}

void sub_188ABD4C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  uint64_t v29;

  _Block_object_dispose((const void *)(v29 - 160), 8);
  _Block_object_dispose(&a29, 8);
  _Unwind_Resume(a1);
}

void sub_188ABD8A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,char a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,char a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,char a58)
{
  _Block_object_dispose(&a46, 8);
  _Block_object_dispose(&a52, 8);
  _Block_object_dispose(&a58, 8);
  _Unwind_Resume(a1);
}

void sub_188ABE0E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  va_list va;

  va_start(va, a17);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_188ABE604(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,char a39,uint64_t a40,uint64_t a41,uint64_t a42,char a43,uint64_t a44,uint64_t a45,uint64_t a46,char a47,uint64_t a48,uint64_t a49,uint64_t a50,char a51)
{
  uint64_t v51;

  _Block_object_dispose(&a23, 8);
  _Block_object_dispose(&a27, 8);
  _Block_object_dispose(&a39, 8);
  _Block_object_dispose(&a43, 8);
  _Block_object_dispose(&a47, 8);
  _Block_object_dispose(&a51, 8);
  _Block_object_dispose((const void *)(v51 - 232), 8);
  _Block_object_dispose((const void *)(v51 - 200), 8);
  _Block_object_dispose((const void *)(v51 - 168), 8);
  _Block_object_dispose((const void *)(v51 - 136), 8);
  _Unwind_Resume(a1);
}

void sub_188ABF1DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  uint64_t v12;
  va_list va;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  va_list va1;

  va_start(va1, a11);
  va_start(va, a11);
  v12 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  v15 = va_arg(va1, _QWORD);
  v16 = va_arg(va1, _QWORD);
  v17 = va_arg(va1, _QWORD);
  v18 = va_arg(va1, _QWORD);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void sub_188ABF5C0(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_188ABFBE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,char a40)
{
  _Block_object_dispose(&a40, 8);
  _Unwind_Resume(a1);
}

void sub_188AC049C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

GEOPBOfflineTileMetadata *_getOfflineTileMetadata(void *a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  uint64_t v6;
  GEOOfflineDataKey *v7;
  void *v8;
  GEOOfflineDataKey *v9;
  void *v10;
  void *v11;
  void *v12;
  GEOPBOfflineTileMetadata *v13;
  uint8_t v15[12];
  int v16;

  v3 = a1;
  objc_msgSend(a2, "objectForKeyedSubscript:", &unk_1E1E80D88);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = v4;
  if (v4)
  {
    v6 = objc_msgSend(v4, "unsignedLongLongValue");
    v16 = -1;
    v7 = [GEOOfflineDataKey alloc];
    objc_msgSend(MEMORY[0x1E0C99D50], "dataWithBytes:length:", &v16, 4);
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v9 = -[GEOOfflineDataKey initWithLayer:serviceKey:](v7, "initWithLayer:serviceKey:", 9, v8);

    objc_msgSend(v3, "dataForOfflineKey:version:associatedWithFullyLoadedSubscription:error:", v9, v6, 0, 0);
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    v11 = v10;
    if (v10)
    {
      objc_msgSend(v10, "readDataWithError:", 0);
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      if (v12)
      {
        v13 = -[GEOPBOfflineTileMetadata initWithData:]([GEOPBOfflineTileMetadata alloc], "initWithData:", v12);
      }
      else
      {
        if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
        {
          *(_WORD *)v15 = 0;
          _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Assertion failed: serializedConfig != ((void *)0)", v15, 2u);
        }
        v13 = 0;
      }

    }
    else
    {
      v13 = 0;
    }

  }
  else
  {
    v13 = 0;
  }

  return v13;
}

void sub_188AC0D04(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_188AC1890(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,char a37)
{
  _Block_object_dispose(&a37, 8);
  _Unwind_Resume(a1);
}

void sub_188AC2180(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,char a35)
{
  _Block_object_dispose(&a35, 8);
  _Unwind_Resume(a1);
}

void sub_188AC2924(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 176), 8);
  _Unwind_Resume(a1);
}

void sub_188AC3770(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,char a41)
{
  _Block_object_dispose(&a41, 8);
  _Unwind_Resume(a1);
}

void sub_188AC3BB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 80), 8);
  _Unwind_Resume(a1);
}

void sub_188AC40E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  _Block_object_dispose(&a30, 8);
  _Unwind_Resume(a1);
}

void sub_188AC45C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,char a35)
{
  _Block_object_dispose(&a35, 8);
  _Unwind_Resume(a1);
}

void _configureBackgroundTaskDisallowingCellular(void *a1)
{
  NSObject *v1;
  id v2;
  nw_endpoint_t url;
  id v4;

  v4 = a1;
  if (GEOConfigGetBOOL(GeoOfflineConfig_ResumeOnNonCellRequireInexpensiveNetwork, (uint64_t)off_1EDF4EC48))
  {
    objc_msgSend(v4, "setRequiresInexpensiveNetworkConnectivity:", 1);
  }
  else
  {
    v1 = nw_parameters_create();
    nw_parameters_prohibit_interface_type(v1, nw_interface_type_cellular);
    objc_msgSend(v4, "setNetworkParametersPrimitive:", v1);
    _GEOGetURLWithSource(64, 0, 1, 0);
    v2 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue());
    url = nw_endpoint_create_url((const char *)objc_msgSend(v2, "UTF8String"));
    if (url)
      objc_msgSend(v4, "setNetworkEndpointPrimitive:", url);

  }
}

void sub_188AC51D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

BOOL GEOPDAdamAppIdentifierReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  uint64_t v18;
  void *v19;
  id v20;
  void *v21;
  _BOOL8 v22;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 1)
        {
          PBReaderReadString();
          v18 = objc_claimAutoreleasedReturnValue();
          v19 = *(void **)(a1 + 16);
          *(_QWORD *)(a1 + 16) = v18;

        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v20 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v21 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v20;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_26;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v22 = v3[*v6] == 0;
  }
  else
  {
LABEL_26:
    v22 = 0;
  }
  objc_sync_exit(v3);

  return v22;
}

void sub_188AC5878(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAddressObjectGeocodingParametersReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  int *v18;
  int *v19;
  int *v20;
  int *v21;
  char v22;
  unsigned int v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  BOOL v29;
  int v30;
  unint64_t v32;
  BOOL v33;
  int *v34;
  int v35;
  int v36;
  BOOL v37;
  uint64_t v38;
  void *v39;
  GEOPDViewportInfo *v40;
  char v41;
  unsigned int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  char v47;
  id v48;
  void *v49;
  int v50;
  char v51;
  char v52;
  int v53;
  int v54;
  char v55;
  void *v56;
  int v58;
  int *v59;
  char v60;
  char v61;
  char v62;
  char v63;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = v6;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = ((*(unsigned __int8 *)(a1 + 56) >> 2) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 1) & 1);
  while (2)
  {
    v14 = 1;
    v15 = 1;
    v16 = 1;
    switch(a3[v11])
    {
      case -4:
        ++v13;
        v14 = v8;
        goto LABEL_8;
      case -3:
        v10 = 1;
        goto LABEL_7;
      case -2:
        v14 = v8;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v17 = v13 != 0;
        v60 = v17 & ~(_BYTE)v12 | v9;
        v61 = v17 | v12 | v60;
        if ((((v17 | v12) | v10) & 1) != 0)
          v18 = 0;
        else
          v18 = a3;
        v62 = (v18 == 0) | v17 | v12;
        v63 = v17 | v12;
        v19 = (int *)MEMORY[0x1E0D82BF0];
        v20 = (int *)MEMORY[0x1E0D82BC8];
        v21 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v13;
LABEL_7:
        v14 = v8;
        v15 = v9;
LABEL_8:
        v16 = v12;
LABEL_10:
        ++v11;
        v8 = v14;
        v9 = v15;
        v12 = v16;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v19) >= *(_QWORD *)(v3 + *v7) || *(_BYTE *)(v3 + *v20))
      goto LABEL_77;
    v22 = 0;
    v23 = 0;
    v24 = 0;
    while (1)
    {
      v25 = *v19;
      v26 = *(_QWORD *)(v3 + v25);
      v27 = v26 + 1;
      if (v26 == -1 || v27 > *(_QWORD *)(v3 + *v7))
        break;
      v28 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v26);
      *(_QWORD *)(v3 + v25) = v27;
      v24 |= (unint64_t)(v28 & 0x7F) << v22;
      if ((v28 & 0x80) == 0)
        goto LABEL_25;
      v22 += 7;
      v29 = v23++ >= 9;
      if (v29)
      {
        v24 = 0;
        v30 = *(unsigned __int8 *)(v3 + *v20);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v20) = 1;
LABEL_25:
    v30 = *(unsigned __int8 *)(v3 + *v20);
    if (*(_BYTE *)(v3 + *v20))
      v24 = 0;
LABEL_27:
    if (v30 || (v24 & 7) == 4)
    {
LABEL_77:
      v58 = 1;
      goto LABEL_78;
    }
    v32 = v24 >> 3;
    v33 = v63;
    if ((v62 & 1) == 0)
    {
      v34 = v18;
      do
      {
        v36 = *v34++;
        v35 = v36;
        v33 = v36 != 0;
        if (v36)
          v37 = v35 == (_DWORD)v32;
        else
          v37 = 1;
      }
      while (!v37);
    }
    if ((_DWORD)v32 == 3)
      break;
    if ((_DWORD)v32 == 2)
    {
      if ((v10 & 1) == 0)
        goto LABEL_64;
      v41 = 0;
      v42 = 0;
      v43 = 0;
      *(_BYTE *)(a1 + 56) |= 1u;
      while (1)
      {
        v44 = *v19;
        v45 = *(_QWORD *)(v3 + v44);
        v46 = v45 + 1;
        if (v45 == -1 || v46 > *(_QWORD *)(v3 + *v7))
          break;
        v47 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v45);
        *(_QWORD *)(v3 + v44) = v46;
        v43 |= (unint64_t)(v47 & 0x7F) << v41;
        if ((v47 & 0x80) == 0)
          goto LABEL_67;
        v41 += 7;
        v29 = v42++ >= 9;
        if (v29)
        {
          LODWORD(v43) = 0;
          goto LABEL_69;
        }
      }
      *(_BYTE *)(v3 + *v20) = 1;
LABEL_67:
      if (*(_BYTE *)(v3 + *v20))
        LODWORD(v43) = 0;
LABEL_69:
      *(_DWORD *)(a1 + 52) = v43;
    }
    else
    {
      if ((_DWORD)v32 == 1)
      {
        if (!v33)
          goto LABEL_64;
        if ((*(_BYTE *)(a1 + 56) & 4) == 0)
        {
          PBReaderReadData();
          v38 = objc_claimAutoreleasedReturnValue();
          v39 = *(void **)(a1 + 24);
          *(_QWORD *)(a1 + 24) = v38;
          goto LABEL_49;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_97;
        v52 = 32 * *(_BYTE *)(a1 + 56);
LABEL_74:
        v11 += v52 >> 7;
LABEL_75:
        v20 = (int *)MEMORY[0x1E0D82BC8];
        v7 = (int *)MEMORY[0x1E0D82BD8];
        goto LABEL_76;
      }
      if ((v60 & 1) == 0 || (*(_BYTE *)(a1 + 56) & 2) != 0)
      {
LABEL_64:
        v51 = PBReaderSkipValueWithTag();
        v7 = (int *)MEMORY[0x1E0D82BD8];
        v20 = (int *)MEMORY[0x1E0D82BC8];
        if ((v51 & 1) == 0)
        {
          v58 = 0;
          goto LABEL_78;
        }
        goto LABEL_76;
      }
      if (!*(_QWORD *)(a1 + 16))
      {
        v48 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v49 = *(void **)(a1 + 16);
        *(_QWORD *)(a1 + 16) = v48;

      }
      v50 = PBUnknownFieldAdd();
      v20 = (int *)MEMORY[0x1E0D82BC8];
      v7 = (int *)MEMORY[0x1E0D82BD8];
      if (!v50)
      {
        v58 = 0;
        v59 = &OBJC_IVAR___GEOTransitVehicleInfo__pickupDropoffType;
        goto LABEL_79;
      }
    }
LABEL_76:
    if (!(v61 & 1 | (v11 != 0)))
      goto LABEL_77;
  }
  if (!v33)
    goto LABEL_64;
  if ((*(_BYTE *)(a1 + 56) & 8) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0)
      goto LABEL_97;
    v52 = 16 * *(_BYTE *)(a1 + 56);
    goto LABEL_74;
  }
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_97;
  v40 = objc_alloc_init(GEOPDViewportInfo);
  if (GEOPDViewportInfoReadAllFrom((uint64_t)v40, (void *)v3))
  {
    PBReaderRecallMark();
    v39 = *(void **)(a1 + 32);
    *(_QWORD *)(a1 + 32) = v40;
LABEL_49:

    --v11;
    goto LABEL_75;
  }

LABEL_97:
  v58 = 0;
  v20 = (int *)MEMORY[0x1E0D82BC8];
LABEL_78:
  v59 = &OBJC_IVAR___GEOTransitVehicleInfo__pickupDropoffType;
  if ((v60 & 1) == 0)
    goto LABEL_80;
LABEL_79:
  *(_BYTE *)(a1 + v59[778]) |= 2u;
LABEL_80:
  if (v63 & 1 | ((v58 & 1) == 0))
  {
    *(_BYTE *)(a1 + v59[778]) |= 4u;
    *(_BYTE *)(a1 + v59[778]) |= 8u;
    goto LABEL_90;
  }
  if (v18)
  {
    while (2)
    {
      while (1)
      {
        v54 = *v18++;
        v53 = v54;
        if (v54 == 1)
          break;
        if (v53 == 3)
        {
          v55 = 8;
          goto LABEL_89;
        }
        if (!v53)
          goto LABEL_90;
      }
      v55 = 4;
LABEL_89:
      *(_BYTE *)(a1 + v59[778]) |= v55;
      continue;
    }
  }
LABEL_90:
  if (v58)
    v3 = *(_BYTE *)(v3 + *v20) == 0;
  else
    v3 = 0;
  if ((v63 & 1) != 0)
  {
    v56 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_188AC61F0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188AC65B4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188AC6694(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAddressObjectGeocodingParametersReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDAddressObjectGeocodingParametersReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDAddressObjectGeocodingParametersReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDAddressObjectGeocodingParametersReadAllFrom_initialTag;
  Specified = GEOPDAddressObjectGeocodingParametersReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    objc_msgSend(*(id *)(a1 + 32), "readAll:", 1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_188AC6900(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDViewportInfoIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unint64_t v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int v22;
  BOOL v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  int v28;
  _BOOL8 v29;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_44;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        goto LABEL_44;
      v17 = v8 >> 3;
      if ((v8 >> 3) == 3)
        break;
      if ((_DWORD)v17 == 2)
      {
        if ((v8 & 7) != 0)
          goto LABEL_46;
        v24 = 0;
        while (1)
        {
          v25 = *v2;
          v26 = *(_QWORD *)&a1[v25];
          v27 = v26 + 1;
          if (v26 == -1 || v27 > *(_QWORD *)&a1[*v3])
            goto LABEL_41;
          v28 = *(char *)(*(_QWORD *)&a1[*v5] + v26);
          *(_QWORD *)&a1[v25] = v27;
          if (v28 < 0)
          {
            v23 = v24++ > 8;
            if (!v23)
              continue;
          }
          goto LABEL_43;
        }
      }
      if ((_DWORD)v17 == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOMapRegionIsValid(a1))
        {
LABEL_46:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_46;
      }
LABEL_43:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_44;
    }
    if ((v8 & 7) != 0)
      goto LABEL_46;
    v18 = 0;
    while (1)
    {
      v19 = *v2;
      v20 = *(_QWORD *)&a1[v19];
      v21 = v20 + 1;
      if (v20 == -1 || v21 > *(_QWORD *)&a1[*v3])
        break;
      v22 = *(char *)(*(_QWORD *)&a1[*v5] + v20);
      *(_QWORD *)&a1[v19] = v21;
      if (v22 < 0)
      {
        v23 = v18++ > 8;
        if (!v23)
          continue;
      }
      goto LABEL_43;
    }
LABEL_41:
    a1[*v4] = 1;
    goto LABEL_43;
  }
LABEL_44:
  v29 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v29;
}

void sub_188AC6D34(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDAddressObjectGeocodingParametersIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v2 = (*(_BYTE *)(a1 + 56) & 0x1C) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return v2;
}

void sub_188AC6F48(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDAddressObjectGeocodingResultReadAllFrom(uint64_t a1, void *a2, int a3)
{
  char *v5;
  int *v6;
  int *v7;
  int *v8;
  int *v9;
  char v10;
  unsigned int v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  int v18;
  GEOPDMultiLocalizedString *v20;
  id v21;
  void *v22;
  _BOOL8 v23;

  v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    v6 = (int *)MEMORY[0x1E0D82BF0];
    v7 = (int *)MEMORY[0x1E0D82BD8];
    v8 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v5[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v5[*MEMORY[0x1E0D82BD8]])
    {
      v9 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v5[*v8])
          break;
        v10 = 0;
        v11 = 0;
        v12 = 0;
        while (1)
        {
          v13 = *v6;
          v14 = *(_QWORD *)&v5[v13];
          v15 = v14 + 1;
          if (v14 == -1 || v15 > *(_QWORD *)&v5[*v7])
            break;
          v16 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v14);
          *(_QWORD *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0)
            goto LABEL_13;
          v10 += 7;
          if (v11++ >= 9)
          {
            v12 = 0;
            v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        v18 = v5[*v8];
        if (v5[*v8])
          v12 = 0;
LABEL_15:
        if (v18 || (v12 & 7) == 4)
          break;
        if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_29;
          v20 = objc_alloc_init(GEOPDMultiLocalizedString);
          if (!GEOPDMultiLocalizedStringReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          -[GEOPDAddressObjectGeocodingResult addDisambiguationLabel:](a1, v20);

        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v21 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v22 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v21;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_29;
        }
      }
      while (*(_QWORD *)&v5[*v6] < *(_QWORD *)&v5[*v7]);
    }
    v23 = v5[*v8] == 0;
  }
  else
  {
LABEL_29:
    v23 = 0;
  }
  objc_sync_exit(v5);

  return v23;
}

void sub_188AC779C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDMultiLocalizedStringIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  _BOOL8 v17;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOLocalizedStringIsValid(a1))
        {
LABEL_27:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_27;
      }
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

unint64_t GEOPDAddressRecommendationParametersReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  char v17;
  unsigned __int8 v18;
  int *v19;
  int *v20;
  int *v21;
  int *v22;
  char v23;
  unsigned int v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  int v31;
  unint64_t v33;
  BOOL v34;
  int *v35;
  int v36;
  int v37;
  BOOL v38;
  uint64_t v39;
  void *v40;
  GEOPDAddressWithComponents *v41;
  id v42;
  void *v43;
  int v44;
  char v45;
  char v46;
  int v47;
  int v48;
  void *v49;
  int v51;
  int *v52;
  char v53;
  char v54;
  char v55;
  BOOL v56;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1)
      + (*(_BYTE *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1);
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v12;
        v13 = v7;
        goto LABEL_8;
      case -3:
        v9 = 1;
        goto LABEL_7;
      case -2:
        v13 = v7;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 != 0;
        v17 = v16 & ~(_BYTE)v11 | v8;
        v18 = v16 | v11;
        v53 = v17;
        v54 = v18 | v17;
        if (((v18 | v9) & 1) != 0)
          v19 = 0;
        else
          v19 = a3;
        v20 = (int *)MEMORY[0x1E0D82BF0];
        v55 = (v19 == 0) | v18;
        v56 = v18;
        v21 = (int *)MEMORY[0x1E0D82BC8];
        v22 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v7;
        v14 = v8;
LABEL_8:
        v15 = v11;
LABEL_10:
        ++v10;
        v7 = v13;
        v8 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v20) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v21))
      goto LABEL_64;
    v23 = 0;
    v24 = 0;
    v25 = 0;
    while (1)
    {
      v26 = *v20;
      v27 = *(_QWORD *)(v3 + v26);
      v28 = v27 + 1;
      if (v27 == -1 || v28 > *(_QWORD *)(v3 + *v6))
        break;
      v29 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v27);
      *(_QWORD *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0)
        goto LABEL_25;
      v23 += 7;
      if (v24++ >= 9)
      {
        v25 = 0;
        v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v21) = 1;
LABEL_25:
    v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(_BYTE *)(v3 + *v21))
      v25 = 0;
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_64:
      v51 = 1;
      goto LABEL_65;
    }
    v33 = v25 >> 3;
    v34 = v56;
    if ((v55 & 1) == 0)
    {
      v35 = v19;
      do
      {
        v37 = *v35++;
        v36 = v37;
        v34 = v37 != 0;
        if (v37)
          v38 = v36 == (_DWORD)v33;
        else
          v38 = 1;
      }
      while (!v38);
    }
    if ((_DWORD)v33 == 2)
      break;
    if ((_DWORD)v33 == 1)
    {
      if (!v34)
        goto LABEL_55;
      if ((*(_BYTE *)(a1 + 52) & 4) == 0)
      {
        PBReaderReadString();
        v39 = objc_claimAutoreleasedReturnValue();
        v40 = *(void **)(a1 + 32);
        *(_QWORD *)(a1 + 32) = v39;
        goto LABEL_48;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        goto LABEL_83;
      v46 = 32 * *(_BYTE *)(a1 + 52);
LABEL_61:
      v10 += v46 >> 7;
LABEL_62:
      v21 = (int *)MEMORY[0x1E0D82BC8];
      goto LABEL_63;
    }
    if ((v53 & 1) == 0 || (*(_BYTE *)(a1 + 52) & 1) != 0)
    {
LABEL_55:
      v45 = PBReaderSkipValueWithTag();
      v21 = (int *)MEMORY[0x1E0D82BC8];
      if ((v45 & 1) == 0)
      {
        v51 = 0;
        goto LABEL_65;
      }
      goto LABEL_63;
    }
    if (!*(_QWORD *)(a1 + 16))
    {
      v42 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
      v43 = *(void **)(a1 + 16);
      *(_QWORD *)(a1 + 16) = v42;

    }
    v44 = PBUnknownFieldAdd();
    v21 = (int *)MEMORY[0x1E0D82BC8];
    if (!v44)
    {
      v51 = 0;
      v52 = &OBJC_IVAR___GEOTransitVehicleInfo__pickupDropoffType;
      goto LABEL_66;
    }
LABEL_63:
    if (!(v54 & 1 | (v10 != 0)))
      goto LABEL_64;
  }
  if (!v34)
    goto LABEL_55;
  if ((*(_BYTE *)(a1 + 52) & 2) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0)
      goto LABEL_83;
    v46 = *(_BYTE *)(a1 + 52) << 6;
    goto LABEL_61;
  }
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_83;
  v41 = objc_alloc_init(GEOPDAddressWithComponents);
  if (GEOPDAddressWithComponentsReadAllFrom((uint64_t)v41, (void *)v3, v7 & 1))
  {
    PBReaderRecallMark();
    v40 = *(void **)(a1 + 24);
    *(_QWORD *)(a1 + 24) = v41;
LABEL_48:

    --v10;
    goto LABEL_62;
  }

LABEL_83:
  v51 = 0;
  v21 = (int *)MEMORY[0x1E0D82BC8];
LABEL_65:
  v52 = &OBJC_IVAR___GEOTransitVehicleInfo__pickupDropoffType;
  if ((v53 & 1) == 0)
    goto LABEL_67;
LABEL_66:
  *(_BYTE *)(a1 + v52[789]) |= 1u;
LABEL_67:
  if (v56 || (v51 & 1) == 0)
  {
    *(_BYTE *)(a1 + v52[789]) |= 4u;
    *(_BYTE *)(a1 + v52[789]) |= 2u;
    goto LABEL_76;
  }
  if (v19)
  {
    while (2)
    {
      while (1)
      {
        v48 = *v19++;
        v47 = v48;
        if (v48 == 1)
          break;
        if (v47 == 2)
          goto LABEL_75;
        if (!v47)
          goto LABEL_76;
      }
      LOBYTE(v47) = 4;
LABEL_75:
      *(_BYTE *)(a1 + v52[789]) |= v47;
      continue;
    }
  }
LABEL_76:
  if (v51)
    v3 = *(_BYTE *)(v3 + *v21) == 0;
  else
    v3 = 0;
  if (v56)
  {
    v49 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_188AC87A0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188AC8884(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAddressRecommendationParametersReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDAddressRecommendationParametersReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDAddressRecommendationParametersReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDAddressRecommendationParametersReadAllFrom_initialTag;
  Specified = GEOPDAddressRecommendationParametersReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    -[GEOPDAddressWithComponents readAll:](*(_QWORD *)(a1 + 24), 1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_188AC8AF0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188AC8C6C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

os_unfair_lock_s *_GEOPDAddressRecommendationParametersIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  if ((*(_BYTE *)(a1 + 52) & 0xC) != 0)
    return (os_unfair_lock_s *)1;
  if ((*(_BYTE *)(a1 + 52) & 2) != 0)
    return GEOPDAddressWithComponentsIsDirty(*(os_unfair_lock_s **)(a1 + 24));
  return 0;
}

os_unfair_lock_s *GEOPDAddressRecommendationParametersIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  os_unfair_lock_s *v2;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    v2 = _GEOPDAddressRecommendationParametersIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 12);
    return v2;
  }
  return result;
}

void sub_188AC8E98(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDAddressRecommendationResultReadAllFrom(uint64_t a1, void *a2)
{
  unsigned __int8 *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  int v8;
  char v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  char v17;
  BOOL v18;
  id v19;
  void *v20;
  _BOOL8 v21;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    v7 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      v8 = v3[*v6];
      if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
        break;
      if (v3[*v6])
      {
        v8 = 1;
        break;
      }
      v9 = 0;
      v10 = 0;
      v11 = 0;
      while (1)
      {
        v12 = *v4;
        v13 = *(_QWORD *)&v3[v12];
        v14 = v13 + 1;
        if (v13 == -1 || v14 > *(_QWORD *)&v3[*v5])
          break;
        v15 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v13);
        *(_QWORD *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0)
          goto LABEL_13;
        v9 += 7;
        if (v10++ >= 9)
        {
          v17 = 0;
          v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      v8 = v3[*v6];
      if (v3[*v6])
        v17 = 0;
      else
        v17 = v11;
LABEL_16:
      if (v8)
        v18 = 1;
      else
        v18 = (v17 & 7) == 4;
      if (v18)
        break;
      if (!*(_QWORD *)(a1 + 8))
      {
        v19 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v20 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = v19;

      }
      if ((PBUnknownFieldAdd() & 1) == 0)
        goto LABEL_23;
    }
    v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_188AC941C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAirportEntityPlaceLookupParametersReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  char v15;
  unsigned __int8 v16;
  char v17;
  int *v18;
  int *v19;
  int *v20;
  int *v21;
  char v22;
  unsigned int v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  int v30;
  unint64_t v32;
  BOOL v33;
  int *v34;
  int v35;
  int v36;
  BOOL v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  id v41;
  void *v42;
  char v43;
  int v44;
  char v45;
  void *v46;
  int v48;
  char v49;
  char v50;
  char v51;
  BOOL v52;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 52);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 48));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int8 *)(a1 + 60) >> 3) & 1)
      + (*(_BYTE *)(a1 + 60) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 1) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 2) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v11;
        v12 = v7;
        goto LABEL_8;
      case -3:
        v9 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v11 > 1;
        v15 = v14 & ~(_BYTE)v7;
        v16 = v14 | v7;
        v49 = v15 | v8;
        v17 = v16 | v15 | v8;
        if (((v16 | v9) & 1) != 0)
          v18 = 0;
        else
          v18 = a3;
        v52 = v16;
        v50 = v17;
        v51 = (v18 == 0) | v16;
        v19 = (int *)MEMORY[0x1E0D82BF0];
        v20 = (int *)MEMORY[0x1E0D82BC8];
        v21 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_7:
        v12 = v7;
        v13 = v8;
LABEL_8:
        ++v10;
        v7 = v12;
        v8 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v19) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v20))
      goto LABEL_65;
    v22 = 0;
    v23 = 0;
    v24 = 0;
    while (1)
    {
      v25 = *v19;
      v26 = *(_QWORD *)(v3 + v25);
      v27 = v26 + 1;
      if (v26 == -1 || v27 > *(_QWORD *)(v3 + *v6))
        break;
      v28 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v26);
      *(_QWORD *)(v3 + v25) = v27;
      v24 |= (unint64_t)(v28 & 0x7F) << v22;
      if ((v28 & 0x80) == 0)
        goto LABEL_23;
      v22 += 7;
      if (v23++ >= 9)
      {
        v24 = 0;
        v30 = *(unsigned __int8 *)(v3 + *v20);
        goto LABEL_25;
      }
    }
    *(_BYTE *)(v3 + *v20) = 1;
LABEL_23:
    v30 = *(unsigned __int8 *)(v3 + *v20);
    if (*(_BYTE *)(v3 + *v20))
      v24 = 0;
LABEL_25:
    if (v30 || (v24 & 7) == 4)
    {
LABEL_65:
      v48 = 1;
      goto LABEL_66;
    }
    v32 = v24 >> 3;
    v33 = v52;
    if ((v51 & 1) == 0)
    {
      v34 = v18;
      do
      {
        v36 = *v34++;
        v35 = v36;
        v33 = v36 != 0;
        if (v36)
          v37 = v35 == (_DWORD)v32;
        else
          v37 = 1;
      }
      while (!v37);
    }
    if ((_DWORD)v32 == 6)
    {
      if (!v33)
        goto LABEL_55;
      if ((*(_BYTE *)(a1 + 60) & 4) != 0)
      {
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_81;
        v43 = 32 * *(_BYTE *)(a1 + 60);
        goto LABEL_63;
      }
      PBReaderReadString();
      v38 = objc_claimAutoreleasedReturnValue();
      v39 = 32;
      goto LABEL_48;
    }
    if ((_DWORD)v32 == 5)
      break;
    if ((_DWORD)v32 == 4)
    {
      if (!v33)
        goto LABEL_55;
      if ((*(_BYTE *)(a1 + 60) & 2) != 0)
      {
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_81;
        v43 = *(_BYTE *)(a1 + 60) << 6;
        goto LABEL_63;
      }
      PBReaderReadString();
      v38 = objc_claimAutoreleasedReturnValue();
      v39 = 24;
      goto LABEL_48;
    }
    if ((v49 & 1) == 0 || (*(_BYTE *)(a1 + 60) & 1) != 0)
    {
LABEL_55:
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        goto LABEL_81;
      goto LABEL_64;
    }
    if (!*(_QWORD *)(a1 + 16))
    {
      v41 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
      v42 = *(void **)(a1 + 16);
      *(_QWORD *)(a1 + 16) = v41;

    }
    if (!PBUnknownFieldAdd())
    {
      v48 = 0;
      v20 = (int *)MEMORY[0x1E0D82BC8];
      goto LABEL_67;
    }
LABEL_64:
    v20 = (int *)MEMORY[0x1E0D82BC8];
    if (!(v50 & 1 | (v10 != 0)))
      goto LABEL_65;
  }
  if (!v33)
    goto LABEL_55;
  if ((*(_BYTE *)(a1 + 60) & 8) == 0)
  {
    PBReaderReadString();
    v38 = objc_claimAutoreleasedReturnValue();
    v39 = 40;
LABEL_48:
    v40 = *(void **)(a1 + v39);
    *(_QWORD *)(a1 + v39) = v38;

    --v10;
    goto LABEL_64;
  }
  if ((PBReaderSkipValueWithTag() & 1) != 0)
  {
    v43 = 16 * *(_BYTE *)(a1 + 60);
LABEL_63:
    v10 += v43 >> 7;
    goto LABEL_64;
  }
LABEL_81:
  v48 = 0;
  v20 = (int *)MEMORY[0x1E0D82BC8];
LABEL_66:
  if ((v49 & 1) == 0)
    goto LABEL_68;
LABEL_67:
  *(_BYTE *)(a1 + 60) |= 1u;
LABEL_68:
  if (v52 || (v48 & 1) == 0)
  {
    *(_BYTE *)(a1 + 60) |= 2u;
    *(_BYTE *)(a1 + 60) |= 8u;
    *(_BYTE *)(a1 + 60) |= 4u;
  }
  else if (v18)
  {
    while (1)
    {
      v44 = *v18++;
      v45 = 2;
      switch(v44)
      {
        case 0:
          goto LABEL_75;
        case 4:
          goto LABEL_74;
        case 5:
          v45 = 8;
          goto LABEL_74;
        case 6:
          v45 = 4;
LABEL_74:
          *(_BYTE *)(a1 + 60) |= v45;
          break;
        default:
          continue;
      }
    }
  }
LABEL_75:
  if (v48)
    v3 = *(_BYTE *)(v3 + *v20) == 0;
  else
    v3 = 0;
  if (v52)
  {
    v46 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_188AC9FD8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188ACA0A8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAirportEntityPlaceLookupParametersReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 52))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDAirportEntityPlaceLookupParametersReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 52) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDAirportEntityPlaceLookupParametersReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDAirportEntityPlaceLookupParametersReadAllFrom_initialTag;
  Specified = GEOPDAirportEntityPlaceLookupParametersReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_188ACA2FC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188ACA4A8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDAirportEntityPlaceLookupParametersIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v2 = (*(_BYTE *)(a1 + 60) & 0x1E) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return v2;
}

void sub_188ACA6AC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDAirportEntityPlaceLookupResultReadAllFrom(uint64_t a1, void *a2)
{
  unsigned __int8 *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  int v8;
  char v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  char v17;
  BOOL v18;
  id v19;
  void *v20;
  _BOOL8 v21;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    v7 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      v8 = v3[*v6];
      if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
        break;
      if (v3[*v6])
      {
        v8 = 1;
        break;
      }
      v9 = 0;
      v10 = 0;
      v11 = 0;
      while (1)
      {
        v12 = *v4;
        v13 = *(_QWORD *)&v3[v12];
        v14 = v13 + 1;
        if (v13 == -1 || v14 > *(_QWORD *)&v3[*v5])
          break;
        v15 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v13);
        *(_QWORD *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0)
          goto LABEL_13;
        v9 += 7;
        if (v10++ >= 9)
        {
          v17 = 0;
          v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      v8 = v3[*v6];
      if (v3[*v6])
        v17 = 0;
      else
        v17 = v11;
LABEL_16:
      if (v8)
        v18 = 1;
      else
        v18 = (v17 & 7) == 4;
      if (v18)
        break;
      if (!*(_QWORD *)(a1 + 8))
      {
        v19 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v20 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = v19;

      }
      if ((PBUnknownFieldAdd() & 1) == 0)
        goto LABEL_23;
    }
    v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_188ACAC78(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188ACAE94(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAllCollectionsViewParametersReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  int *v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  int *v18;
  int *v19;
  int *v20;
  int *v21;
  char v22;
  unsigned int v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  BOOL v29;
  int v30;
  unint64_t v32;
  BOOL v33;
  int *v34;
  int v35;
  int v36;
  BOOL v37;
  GEOPDPublisherSuggestionParameters *v38;
  uint64_t v39;
  id v40;
  void *v41;
  int v42;
  char v43;
  unsigned int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  void *v50;
  char v51;
  char v52;
  int v53;
  char v54;
  void *v55;
  int v57;
  int *v58;
  char v59;
  char v60;
  char v61;
  char v62;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 52);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 48));
  v7 = v6;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = vaddv_s16((int16x4_t)(*(_QWORD *)&vshl_u16((uint16x4_t)(*(_QWORD *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 64)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFFFFFCFFFEFFFDLL) & 0xFF01FF01FF01FF01));
  while (2)
  {
    v14 = 1;
    v15 = 1;
    v16 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v13;
        goto LABEL_8;
      case -3:
        v9 = 1;
        goto LABEL_7;
      case -2:
        v15 = v11;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v17 = v13 > 1;
        v59 = v17 & ~(_BYTE)v12 | v10;
        v60 = v17 | v12 | v59;
        if ((((v17 | v12) | v9) & 1) != 0)
          v18 = 0;
        else
          v18 = a3;
        v61 = (v18 == 0) | v17 | v12;
        v62 = v17 | v12;
        v19 = (int *)MEMORY[0x1E0D82BF0];
        v20 = (int *)MEMORY[0x1E0D82BC8];
        v21 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v13;
LABEL_7:
        v14 = v10;
LABEL_8:
        v15 = v11;
        v16 = v12;
LABEL_10:
        ++v8;
        v10 = v14;
        v11 = v15;
        v12 = v16;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v19) >= *(_QWORD *)(v3 + *v7) || *(_BYTE *)(v3 + *v20))
      goto LABEL_84;
    v22 = 0;
    v23 = 0;
    v24 = 0;
    while (1)
    {
      v25 = *v19;
      v26 = *(_QWORD *)(v3 + v25);
      v27 = v26 + 1;
      if (v26 == -1 || v27 > *(_QWORD *)(v3 + *v7))
        break;
      v28 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v26);
      *(_QWORD *)(v3 + v25) = v27;
      v24 |= (unint64_t)(v28 & 0x7F) << v22;
      if ((v28 & 0x80) == 0)
        goto LABEL_25;
      v22 += 7;
      v29 = v23++ >= 9;
      if (v29)
      {
        v24 = 0;
        v30 = *(unsigned __int8 *)(v3 + *v20);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v20) = 1;
LABEL_25:
    v30 = *(unsigned __int8 *)(v3 + *v20);
    if (*(_BYTE *)(v3 + *v20))
      v24 = 0;
LABEL_27:
    if (v30 || (v24 & 7) == 4)
    {
LABEL_84:
      v57 = 1;
      goto LABEL_85;
    }
    v32 = v24 >> 3;
    v33 = v62;
    if ((v61 & 1) == 0)
    {
      v34 = v18;
      do
      {
        v36 = *v34++;
        v35 = v36;
        v33 = v36 != 0;
        if (v36)
          v37 = v35 == (_DWORD)v32;
        else
          v37 = 1;
      }
      while (!v37);
    }
    switch((int)v32)
    {
      case 1:
        if (!v33)
          goto LABEL_69;
        if ((*(_BYTE *)(a1 + 64) & 4) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_102;
          v38 = objc_alloc_init(GEOPDPublisherSuggestionParameters);
          if (GEOPDPublisherSuggestionParametersReadAllFrom((uint64_t)v38, (void *)v3))
          {
            PBReaderRecallMark();
            v39 = 24;
            goto LABEL_68;
          }
          goto LABEL_101;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_102;
        v52 = 32 * *(_BYTE *)(a1 + 64);
        goto LABEL_81;
      case 2:
        if ((v9 & 1) == 0)
          goto LABEL_69;
        v43 = 0;
        v44 = 0;
        v45 = 0;
        *(_BYTE *)(a1 + 64) |= 1u;
        while (2)
        {
          v46 = *v19;
          v47 = *(_QWORD *)(v3 + v46);
          v48 = v47 + 1;
          if (v47 == -1 || v48 > *(_QWORD *)(v3 + *v7))
          {
            *(_BYTE *)(v3 + *v20) = 1;
          }
          else
          {
            v49 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v47);
            *(_QWORD *)(v3 + v46) = v48;
            v45 |= (unint64_t)(v49 & 0x7F) << v43;
            if (v49 < 0)
            {
              v43 += 7;
              v29 = v44++ >= 9;
              if (v29)
              {
                LODWORD(v45) = 0;
                goto LABEL_74;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v20))
          LODWORD(v45) = 0;
LABEL_74:
        *(_DWORD *)(a1 + 60) = v45;
        goto LABEL_83;
      case 3:
        if (!v33)
          goto LABEL_69;
        if ((*(_BYTE *)(a1 + 64) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_102;
          v52 = 16 * *(_BYTE *)(a1 + 64);
          goto LABEL_81;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_102;
        v38 = objc_alloc_init(GEOPDAllCollectionsViewResultFilter);
        if (!GEOPDAllCollectionsViewResultFilterReadAllFrom((uint64_t)v38, (void *)v3, v11 & 1))
          goto LABEL_101;
        PBReaderRecallMark();
        v39 = 32;
        goto LABEL_68;
      case 4:
        if (!v33)
          goto LABEL_69;
        if ((*(_BYTE *)(a1 + 64) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_102;
          v52 = 8 * *(_BYTE *)(a1 + 64);
LABEL_81:
          v8 += v52 >> 7;
LABEL_82:
          v20 = (int *)MEMORY[0x1E0D82BC8];
          v7 = (int *)MEMORY[0x1E0D82BD8];
          goto LABEL_83;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_102;
        v38 = objc_alloc_init(GEOPDViewportInfo);
        if (GEOPDViewportInfoReadAllFrom((uint64_t)v38, (void *)v3))
        {
          PBReaderRecallMark();
          v39 = 40;
LABEL_68:
          v50 = *(void **)(a1 + v39);
          *(_QWORD *)(a1 + v39) = v38;

          --v8;
          goto LABEL_82;
        }
LABEL_101:

LABEL_102:
        v57 = 0;
        v58 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
        v20 = (int *)MEMORY[0x1E0D82BC8];
LABEL_86:
        if ((v59 & 1) != 0)
LABEL_87:
          *(_BYTE *)(a1 + v58[130]) |= 2u;
        if (v62 & 1 | ((v57 & 1) == 0))
        {
          *(_BYTE *)(a1 + v58[130]) |= 4u;
          *(_BYTE *)(a1 + v58[130]) |= 8u;
          *(_BYTE *)(a1 + v58[130]) |= 0x10u;
        }
        else if (v18)
        {
          while (1)
          {
            v53 = *v18++;
            v54 = 4;
            switch(v53)
            {
              case 0:
                goto LABEL_95;
              case 1:
                goto LABEL_94;
              case 3:
                v54 = 8;
                goto LABEL_94;
              case 4:
                v54 = 16;
LABEL_94:
                *(_BYTE *)(a1 + v58[130]) |= v54;
                break;
              default:
                continue;
            }
          }
        }
LABEL_95:
        if (v57)
          v3 = *(_BYTE *)(v3 + *v20) == 0;
        else
          v3 = 0;
        if ((v62 & 1) != 0)
        {
          v55 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      default:
        if ((v59 & 1) == 0 || (*(_BYTE *)(a1 + 64) & 2) != 0)
        {
LABEL_69:
          v51 = PBReaderSkipValueWithTag();
          v7 = (int *)MEMORY[0x1E0D82BD8];
          v20 = (int *)MEMORY[0x1E0D82BC8];
          if ((v51 & 1) == 0)
          {
            v57 = 0;
LABEL_85:
            v58 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
            goto LABEL_86;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v40 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v41 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v40;

          }
          v42 = PBUnknownFieldAdd();
          v20 = (int *)MEMORY[0x1E0D82BC8];
          v7 = (int *)MEMORY[0x1E0D82BD8];
          if (!v42)
          {
            v57 = 0;
            v58 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
            goto LABEL_87;
          }
        }
LABEL_83:
        if (!(v60 & 1 | (v8 != 0)))
          goto LABEL_84;
        continue;
    }
  }
}

void sub_188ACB6A0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188ACB7B0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188ACBC54(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAllCollectionsViewParametersReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 52))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDAllCollectionsViewParametersReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 52) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDAllCollectionsViewParametersReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDAllCollectionsViewParametersReadAllFrom_initialTag;
  Specified = GEOPDAllCollectionsViewParametersReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    -[GEOPDAllCollectionsViewResultFilter readAll:](*(_QWORD *)(a1 + 32), 1);
    objc_msgSend(*(id *)(a1 + 40), "readAll:", 1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_188ACBED4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPublisherSuggestionParametersIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v14;
  int v15;
  int v16;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  _BOOL8 v21;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = *v4;
          v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = *v4;
      v15 = a1[v14];
      if (a1[v14])
        v8 = 0;
LABEL_14:
      v16 = v8 & 7;
      if (v15 || v16 == 4)
        break;
      if ((v8 >> 3) == 2)
      {
        if (v16 != 1)
          goto LABEL_34;
        v18 = *v2;
        v19 = *(_QWORD *)&a1[v18];
        if (v19 <= 0xFFFFFFFFFFFFFFF7 && (v20 = v19 + 8, v20 <= *(_QWORD *)&a1[*v3]))
          *(_QWORD *)&a1[v18] = v20;
        else
          a1[v14] = 1;
      }
      else if ((v8 >> 3) == 1)
      {
        if (v16 != 2 || !PBReaderPlaceMark() || !GEOPDViewportInfoIsValid(a1))
        {
LABEL_34:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_34;
      }
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v21 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v21;
}

BOOL GEOPDAllCollectionsViewResultFilterIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  BOOL v13;
  int v14;
  int v15;
  unint64_t v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int v22;
  char v24;
  unsigned int v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  int v31;
  int v32;
  char v34;
  unsigned int v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  int v41;
  int v42;
  int v44;
  _BOOL8 v45;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_87;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        v13 = v7++ >= 9;
        if (v13)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        goto LABEL_87;
      v17 = v8 >> 3;
      if ((v8 >> 3) == 3)
        break;
      if ((_DWORD)v17 == 2)
      {
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_89;
        objc_msgSend(a1, "position", 0, 0);
        objc_msgSend(a1, "length");
        while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3] && !a1[*v4])
        {
          v34 = 0;
          v35 = 0;
          v36 = 0;
          while (1)
          {
            v37 = *v2;
            v38 = *(_QWORD *)&a1[v37];
            v39 = v38 + 1;
            if (v38 == -1 || v39 > *(_QWORD *)&a1[*v3])
              break;
            v40 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v38);
            *(_QWORD *)&a1[v37] = v39;
            v36 |= (unint64_t)(v40 & 0x7F) << v34;
            if ((v40 & 0x80) == 0)
              goto LABEL_68;
            v34 += 7;
            v13 = v35++ >= 9;
            if (v13)
            {
              v36 = 0;
              v41 = a1[*v4];
              goto LABEL_70;
            }
          }
          a1[*v4] = 1;
LABEL_68:
          v41 = a1[*v4];
          if (a1[*v4])
            v36 = 0;
LABEL_70:
          v42 = v36 & 7;
          if (v41 || v42 == 4)
            break;
          if ((v36 >> 3) == 1)
          {
            if (v42 != 2 || !PBReaderPlaceMark() || !GEOPDMapsIdentifierIsValid(a1))
              goto LABEL_88;
            PBReaderRecallMark();
          }
          else if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
            goto LABEL_88;
          }
        }
LABEL_81:
        v44 = a1[*v4];
        PBReaderRecallMark();
        if (v44)
          goto LABEL_89;
        PBReaderRecallMark();
        goto LABEL_86;
      }
      if ((_DWORD)v17 == 1)
      {
        if ((v8 & 7) != 0)
          goto LABEL_89;
        v18 = 0;
        while (1)
        {
          v19 = *v2;
          v20 = *(_QWORD *)&a1[v19];
          v21 = v20 + 1;
          if (v20 == -1 || v21 > *(_QWORD *)&a1[*v3])
            break;
          v22 = *(char *)(*(_QWORD *)&a1[*v5] + v20);
          *(_QWORD *)&a1[v19] = v21;
          if (v22 < 0 && v18++ <= 8)
            continue;
          goto LABEL_86;
        }
        a1[*v4] = 1;
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_89;
      }
LABEL_86:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_87;
    }
    if (v15 != 2 || !PBReaderPlaceMark())
    {
LABEL_89:
      PBReaderRecallMark();
      return 0;
    }
    objc_msgSend(a1, "position", 0, 0);
    objc_msgSend(a1, "length");
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3] && !a1[*v4])
    {
      v24 = 0;
      v25 = 0;
      v26 = 0;
      while (1)
      {
        v27 = *v2;
        v28 = *(_QWORD *)&a1[v27];
        v29 = v28 + 1;
        if (v28 == -1 || v29 > *(_QWORD *)&a1[*v3])
          break;
        v30 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v28);
        *(_QWORD *)&a1[v27] = v29;
        v26 |= (unint64_t)(v30 & 0x7F) << v24;
        if ((v30 & 0x80) == 0)
          goto LABEL_42;
        v24 += 7;
        v13 = v25++ >= 9;
        if (v13)
        {
          v26 = 0;
          v31 = a1[*v4];
          goto LABEL_44;
        }
      }
      a1[*v4] = 1;
LABEL_42:
      v31 = a1[*v4];
      if (a1[*v4])
        v26 = 0;
LABEL_44:
      v32 = v26 & 7;
      if (v31 || v32 == 4)
        break;
      if ((v26 >> 3) == 1)
      {
        if (v32 != 2 || !PBReaderPlaceMark() || !GEOPDWarsawMerchantIdentifierIsValid(a1))
        {
LABEL_88:
          PBReaderRecallMark();
          goto LABEL_89;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_88;
      }
    }
    goto LABEL_81;
  }
LABEL_87:
  v45 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v45;
}

void sub_188ACC764(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDAllCollectionsViewParametersIsDirty(uint64_t a1)
{
  unsigned int v2;
  uint64_t v4;
  int v5;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v2 = *(unsigned __int8 *)(a1 + 64);
  if ((v2 & 0x24) != 0)
    return 1;
  if ((v2 & 8) != 0)
  {
    v4 = *(_QWORD *)(a1 + 32);
    if (v4)
    {
      os_unfair_lock_lock_with_options();
      os_unfair_lock_assert_owner((const os_unfair_lock *)(v4 + 48));
      v5 = *(_BYTE *)(v4 + 56) & 0x1C;
      os_unfair_lock_unlock((os_unfair_lock_t)(v4 + 48));
      if (v5)
        return 1;
      v2 = *(unsigned __int8 *)(a1 + 64);
    }
  }
  return (v2 >> 4) & 1;
}

os_unfair_lock_s *GEOPDAllCollectionsViewParametersIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOPDAllCollectionsViewParametersIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 14);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_188ACCAA4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188ACCFF4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAllCollectionsViewResultReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  char v17;
  unsigned __int8 v18;
  int *v19;
  int *v20;
  int *v21;
  int *v22;
  char v23;
  unsigned int v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  int v31;
  unint64_t v33;
  BOOL v34;
  int *v35;
  int v36;
  int v37;
  BOOL v38;
  GEOPDMapsIdentifier *v39;
  void *v40;
  id v41;
  void *v42;
  int v43;
  char v44;
  int v45;
  char v46;
  void *v47;
  int v49;
  int *v50;
  char v51;
  char v52;
  char v53;
  BOOL v54;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 52);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 48));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = ((*(unsigned __int8 *)(a1 + 60) >> 3) & 1)
      + (*(_BYTE *)(a1 + 60) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 2) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 1) & 1);
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 > 1;
        v17 = v16 & ~(_BYTE)v11 | v9;
        v18 = v16 | v11;
        v51 = v17;
        v52 = v18 | v17;
        if (((v18 | v8) & 1) != 0)
          v19 = 0;
        else
          v19 = a3;
        v20 = (int *)MEMORY[0x1E0D82BF0];
        v53 = (v19 == 0) | v18;
        v54 = v18;
        v21 = (int *)MEMORY[0x1E0D82BC8];
        v22 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v7;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v20) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v21))
      goto LABEL_69;
    v23 = 0;
    v24 = 0;
    v25 = 0;
    while (1)
    {
      v26 = *v20;
      v27 = *(_QWORD *)(v3 + v26);
      v28 = v27 + 1;
      if (v27 == -1 || v28 > *(_QWORD *)(v3 + *v6))
        break;
      v29 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v27);
      *(_QWORD *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0)
        goto LABEL_25;
      v23 += 7;
      if (v24++ >= 9)
      {
        v25 = 0;
        v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v21) = 1;
LABEL_25:
    v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(_BYTE *)(v3 + *v21))
      v25 = 0;
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_69:
      v49 = 1;
      goto LABEL_70;
    }
    v33 = v25 >> 3;
    v34 = v54;
    if ((v53 & 1) == 0)
    {
      v35 = v19;
      do
      {
        v37 = *v35++;
        v36 = v37;
        v34 = v37 != 0;
        if (v37)
          v38 = v36 == (_DWORD)v33;
        else
          v38 = 1;
      }
      while (!v38);
    }
    if ((_DWORD)v33 != 3)
      break;
    if (v34 && (*(_BYTE *)(a1 + 60) & 2) == 0)
    {
      if ((PBReaderPlaceMark() & 1) == 0)
        goto LABEL_87;
      v39 = objc_alloc_init(GEOPDMapsIdentifier);
      if (!GEOPDMapsIdentifierReadAllFrom((uint64_t)v39, (void *)v3))
        goto LABEL_86;
      PBReaderRecallMark();
      -[GEOPDAllCollectionsViewResult _addNoFlagsCollectionId:](a1, v39);
LABEL_56:

LABEL_67:
      v21 = (int *)MEMORY[0x1E0D82BC8];
      goto LABEL_68;
    }
LABEL_63:
    v44 = PBReaderSkipValueWithTag();
    v21 = (int *)MEMORY[0x1E0D82BC8];
    if ((v44 & 1) == 0)
    {
      v49 = 0;
LABEL_70:
      v50 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
      goto LABEL_71;
    }
LABEL_68:
    if (!(v52 & 1 | (v7 != 0)))
      goto LABEL_69;
  }
  if ((_DWORD)v33 != 2)
  {
    if ((_DWORD)v33 == 1)
    {
      if (v34)
      {
        if ((*(_BYTE *)(a1 + 60) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_87;
          v7 += *(unsigned __int8 *)(a1 + 60) << 29 >> 31;
        }
        else
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_87;
          v39 = objc_alloc_init(GEOPDPublisherSuggestionResult);
          if (!GEOPDPublisherSuggestionResultReadAllFrom((uint64_t)v39, (void *)v3))
            goto LABEL_86;
          PBReaderRecallMark();
          v40 = *(void **)(a1 + 32);
          *(_QWORD *)(a1 + 32) = v39;

          --v7;
        }
        goto LABEL_67;
      }
    }
    else if ((v51 & 1) != 0 && (*(_BYTE *)(a1 + 60) & 1) == 0)
    {
      if (!*(_QWORD *)(a1 + 16))
      {
        v41 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v42 = *(void **)(a1 + 16);
        *(_QWORD *)(a1 + 16) = v41;

      }
      v43 = PBUnknownFieldAdd();
      v21 = (int *)MEMORY[0x1E0D82BC8];
      if (!v43)
      {
        v49 = 0;
        v50 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
        goto LABEL_72;
      }
      goto LABEL_68;
    }
    goto LABEL_63;
  }
  if (!v34 || (*(_BYTE *)(a1 + 60) & 8) != 0)
    goto LABEL_63;
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_87;
  v39 = objc_alloc_init(GEOPDAllCollectionsViewResultFilter);
  if (GEOPDAllCollectionsViewResultFilterReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1))
  {
    PBReaderRecallMark();
    -[GEOPDAllCollectionsViewResult _addNoFlagsResultFilter:](a1, v39);
    goto LABEL_56;
  }
LABEL_86:

LABEL_87:
  v49 = 0;
  v50 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
  v21 = (int *)MEMORY[0x1E0D82BC8];
LABEL_71:
  if ((v51 & 1) == 0)
    goto LABEL_73;
LABEL_72:
  *(_BYTE *)(a1 + v50[135]) |= 1u;
LABEL_73:
  if (v54 || (v49 & 1) == 0)
  {
    *(_BYTE *)(a1 + v50[135]) |= 4u;
    *(_BYTE *)(a1 + v50[135]) |= 8u;
    *(_BYTE *)(a1 + v50[135]) |= 2u;
  }
  else if (v19)
  {
    while (1)
    {
      v45 = *v19++;
      v46 = 4;
      switch(v45)
      {
        case 0:
          goto LABEL_80;
        case 1:
          goto LABEL_79;
        case 2:
          v46 = 8;
          goto LABEL_79;
        case 3:
          v46 = 2;
LABEL_79:
          *(_BYTE *)(a1 + v50[135]) |= v46;
          break;
        default:
          continue;
      }
    }
  }
LABEL_80:
  if (v49)
    v3 = *(_BYTE *)(v3 + *v21) == 0;
  else
    v3 = 0;
  if (v54)
  {
    v47 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_188ACD6F0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188ACD8D8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188ACDF7C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDAllCollectionsViewResultCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  _BYTE v20[128];
  _BYTE v21[128];
  uint64_t v22;

  v22 = *MEMORY[0x1E0C80C00];
  v16 = 0u;
  v17 = 0u;
  v18 = 0u;
  v19 = 0u;
  v2 = *(id *)(a1 + 40);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v16, v21, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v17;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v17 != v5)
          objc_enumerationMutation(v2);
        -[GEOPDAllCollectionsViewResultFilter readAll:](*(_QWORD *)(*((_QWORD *)&v16 + 1) + 8 * v6++), 1);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v16, v21, 16);
    }
    while (v4);
  }

  v14 = 0u;
  v15 = 0u;
  v12 = 0u;
  v13 = 0u;
  v7 = *(id *)(a1 + 24);
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v12, v20, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v13;
    do
    {
      v11 = 0;
      do
      {
        if (*(_QWORD *)v13 != v10)
          objc_enumerationMutation(v7);
        objc_msgSend(*(id *)(*((_QWORD *)&v12 + 1) + 8 * v11++), "readAll:", 1, (_QWORD)v12);
      }
      while (v9 != v11);
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v12, v20, 16);
    }
    while (v9);
  }

}

unint64_t GEOPDAllCollectionsViewResultReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 52))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDAllCollectionsViewResultReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 52) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDAllCollectionsViewResultReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDAllCollectionsViewResultReadAllFrom_initialTag;
  Specified = GEOPDAllCollectionsViewResultReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDAllCollectionsViewResultCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_188ACE368(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPublisherSuggestionResultIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  _BOOL8 v17;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDMapsIdentifierIsValid(a1))
        {
LABEL_27:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_27;
      }
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

void sub_188ACE804(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDAllCollectionsViewResultIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v2 = (*(_BYTE *)(a1 + 60) & 0x1E) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return v2;
}

void sub_188ACEC84(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188ACF124(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAllCollectionsViewResultFilterReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  int *v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  BOOL v28;
  int v29;
  unint64_t v31;
  BOOL v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  char v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  GEOPDAllCollectionsViewResultFilterTypeKeyword *v44;
  uint64_t v45;
  void *v46;
  id v47;
  void *v48;
  int v49;
  char v50;
  char v51;
  int v52;
  int v53;
  char v54;
  void *v55;
  int v57;
  int *v58;
  char v59;
  char v60;
  char v61;
  char v62;
  char v63;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = ((*(unsigned __int8 *)(a1 + 56) >> 2) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 1) & 1);
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v7 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 != 0;
        v60 = v16 & ~(_BYTE)v11 | v9;
        v61 = v16 | v11 | v60;
        v59 = v7;
        if ((((v16 | v11) | v7) & 1) != 0)
          v17 = 0;
        else
          v17 = a3;
        v62 = (v17 == 0) | v16 | v11;
        v63 = v16 | v11;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v8;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v19))
      goto LABEL_79;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0)
        goto LABEL_25;
      v21 += 7;
      v28 = v22++ >= 9;
      if (v28)
      {
        v23 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_25:
    v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_27:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_79:
      v57 = 1;
      goto LABEL_80;
    }
    v31 = v23 >> 3;
    v32 = v63;
    if ((v62 & 1) == 0)
    {
      v33 = v17;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    if ((_DWORD)v31 == 3)
    {
      if (!v32)
        goto LABEL_66;
      if ((*(_BYTE *)(a1 + 56) & 8) == 0)
      {
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_100;
        v44 = objc_alloc_init(GEOPDAllCollectionsViewResultFilterTypeKeyword);
        if (!GEOPDAllCollectionsViewResultFilterTypeKeywordReadAllFrom((uint64_t)v44, (void *)v3, v10 & 1))
          goto LABEL_99;
        PBReaderRecallMark();
        v45 = 32;
LABEL_59:
        v46 = *(void **)(a1 + v45);
        *(_QWORD *)(a1 + v45) = v44;

        --v8;
LABEL_77:
        v19 = (int *)MEMORY[0x1E0D82BC8];
        goto LABEL_78;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        goto LABEL_100;
      v51 = 16 * *(_BYTE *)(a1 + 56);
LABEL_76:
      v8 += v51 >> 7;
      goto LABEL_77;
    }
    if ((_DWORD)v31 == 2)
      break;
    if ((_DWORD)v31 == 1)
    {
      if ((v59 & 1) != 0)
      {
        v37 = 0;
        v38 = 0;
        v39 = 0;
        *(_BYTE *)(a1 + 56) |= 1u;
        while (1)
        {
          v40 = *v18;
          v41 = *(_QWORD *)(v3 + v40);
          v42 = v41 + 1;
          if (v41 == -1 || v42 > *(_QWORD *)(v3 + *v6))
            break;
          v43 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v41);
          *(_QWORD *)(v3 + v40) = v42;
          v39 |= (unint64_t)(v43 & 0x7F) << v37;
          if ((v43 & 0x80) == 0)
            goto LABEL_69;
          v37 += 7;
          v28 = v38++ >= 9;
          if (v28)
          {
            LODWORD(v39) = 0;
            goto LABEL_71;
          }
        }
        *(_BYTE *)(v3 + *v19) = 1;
LABEL_69:
        if (*(_BYTE *)(v3 + *v19))
          LODWORD(v39) = 0;
LABEL_71:
        *(_DWORD *)(a1 + 52) = v39;
        goto LABEL_78;
      }
    }
    else if ((v60 & 1) != 0 && (*(_BYTE *)(a1 + 56) & 2) == 0)
    {
      if (!*(_QWORD *)(a1 + 16))
      {
        v47 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v48 = *(void **)(a1 + 16);
        *(_QWORD *)(a1 + 16) = v47;

      }
      v49 = PBUnknownFieldAdd();
      v19 = (int *)MEMORY[0x1E0D82BC8];
      if (!v49)
      {
        v57 = 0;
        v58 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
        goto LABEL_82;
      }
      goto LABEL_78;
    }
LABEL_66:
    v50 = PBReaderSkipValueWithTag();
    v19 = (int *)MEMORY[0x1E0D82BC8];
    if ((v50 & 1) == 0)
    {
      v57 = 0;
LABEL_80:
      v58 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
      goto LABEL_81;
    }
LABEL_78:
    if (!(v61 & 1 | (v8 != 0)))
      goto LABEL_79;
  }
  if (!v32)
    goto LABEL_66;
  if ((*(_BYTE *)(a1 + 56) & 4) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0)
      goto LABEL_100;
    v51 = 32 * *(_BYTE *)(a1 + 56);
    goto LABEL_76;
  }
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_100;
  v44 = objc_alloc_init(GEOPDAllCollectionsViewResultFilterTypeAddress);
  if (GEOPDAllCollectionsViewResultFilterTypeAddressReadAllFrom((uint64_t)v44, (void *)v3))
  {
    PBReaderRecallMark();
    v45 = 24;
    goto LABEL_59;
  }
LABEL_99:

LABEL_100:
  v57 = 0;
  v58 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
  v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_81:
  if ((v60 & 1) == 0)
    goto LABEL_83;
LABEL_82:
  *(_BYTE *)(a1 + v58[140]) |= 2u;
LABEL_83:
  if (v63 & 1 | ((v57 & 1) == 0))
  {
    *(_BYTE *)(a1 + v58[140]) |= 4u;
    *(_BYTE *)(a1 + v58[140]) |= 8u;
    goto LABEL_93;
  }
  if (v17)
  {
    while (2)
    {
      while (1)
      {
        v53 = *v17++;
        v52 = v53;
        if (v53 == 2)
          break;
        if (v52 == 3)
        {
          v54 = 8;
          goto LABEL_92;
        }
        if (!v52)
          goto LABEL_93;
      }
      v54 = 4;
LABEL_92:
      *(_BYTE *)(a1 + v58[140]) |= v54;
      continue;
    }
  }
LABEL_93:
  if (v57)
    v3 = *(_BYTE *)(v3 + *v19) == 0;
  else
    v3 = 0;
  if ((v63 & 1) != 0)
  {
    v55 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_188ACF8A0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188ACFCF4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAllCollectionsViewResultFilterReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDAllCollectionsViewResultFilterReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDAllCollectionsViewResultFilterReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDAllCollectionsViewResultFilterReadAllFrom_initialTag;
  Specified = GEOPDAllCollectionsViewResultFilterReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_188AD02A4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188AD0458(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188AD0608(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDAllCollectionsViewResultFilterTypeAddressReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  GEOPDMapsIdentifier *v18;
  void *v19;
  id v20;
  void *v21;
  _BOOL8 v22;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_29;
          v18 = objc_alloc_init(GEOPDMapsIdentifier);
          if (!GEOPDMapsIdentifierReadAllFrom((uint64_t)v18, v3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          v19 = *(void **)(a1 + 16);
          *(_QWORD *)(a1 + 16) = v18;

        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v20 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v21 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v20;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_29;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v22 = v3[*v6] == 0;
  }
  else
  {
LABEL_29:
    v22 = 0;
  }
  objc_sync_exit(v3);

  return v22;
}

void sub_188AD0D58(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDAllCollectionsViewResultFilterTypeKeywordReadAllFrom(uint64_t a1, void *a2, int a3)
{
  char *v5;
  int *v6;
  int *v7;
  int *v8;
  int *v9;
  char v10;
  unsigned int v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  int v18;
  GEOPDRelatedSearchSuggestion *v20;
  void *v21;
  id v22;
  void *v23;
  _BOOL8 v24;

  v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    v6 = (int *)MEMORY[0x1E0D82BF0];
    v7 = (int *)MEMORY[0x1E0D82BD8];
    v8 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v5[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v5[*MEMORY[0x1E0D82BD8]])
    {
      v9 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v5[*v8])
          break;
        v10 = 0;
        v11 = 0;
        v12 = 0;
        while (1)
        {
          v13 = *v6;
          v14 = *(_QWORD *)&v5[v13];
          v15 = v14 + 1;
          if (v14 == -1 || v15 > *(_QWORD *)&v5[*v7])
            break;
          v16 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v14);
          *(_QWORD *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0)
            goto LABEL_13;
          v10 += 7;
          if (v11++ >= 9)
          {
            v12 = 0;
            v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        v18 = v5[*v8];
        if (v5[*v8])
          v12 = 0;
LABEL_15:
        if (v18 || (v12 & 7) == 4)
          break;
        if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_29;
          v20 = objc_alloc_init(GEOPDRelatedSearchSuggestion);
          if (!GEOPDRelatedSearchSuggestionReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          v21 = *(void **)(a1 + 16);
          *(_QWORD *)(a1 + 16) = v20;

        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v22 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v23 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v22;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_29;
        }
      }
      while (*(_QWORD *)&v5[*v6] < *(_QWORD *)&v5[*v7]);
    }
    v24 = v5[*v8] == 0;
  }
  else
  {
LABEL_29:
    v24 = 0;
  }
  objc_sync_exit(v5);

  return v24;
}

void sub_188AD1488(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188AD17A4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAllGuidesLocationsSectionReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  char v17;
  unsigned __int8 v18;
  char v19;
  int *v20;
  int *v21;
  int *v22;
  int *v23;
  char v24;
  unsigned int v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  int v32;
  unint64_t v34;
  BOOL v35;
  int *v36;
  int v37;
  int v38;
  BOOL v39;
  GEOPDAllGuidesLocationsSectionHeader *v40;
  void *v41;
  id v42;
  void *v43;
  int v44;
  char v45;
  int v46;
  int v47;
  void *v48;
  int v50;
  int *v51;
  char v52;
  char v53;
  char v54;
  BOOL v55;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1)
      + (*(_BYTE *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1);
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v7 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 != 0;
        v17 = v16 & ~(_BYTE)v11 | v9;
        v18 = v16 | v11;
        v52 = v17;
        v19 = v18 | v17;
        if (((v18 | v7) & 1) != 0)
          v20 = 0;
        else
          v20 = a3;
        v55 = v18;
        v53 = v19;
        v54 = (v20 == 0) | v18;
        v21 = (int *)MEMORY[0x1E0D82BF0];
        v22 = (int *)MEMORY[0x1E0D82BC8];
        v23 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v8;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v21) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v22))
      goto LABEL_62;
    v24 = 0;
    v25 = 0;
    v26 = 0;
    while (1)
    {
      v27 = *v21;
      v28 = *(_QWORD *)(v3 + v27);
      v29 = v28 + 1;
      if (v28 == -1 || v29 > *(_QWORD *)(v3 + *v6))
        break;
      v30 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v28);
      *(_QWORD *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0)
        goto LABEL_25;
      v24 += 7;
      if (v25++ >= 9)
      {
        v26 = 0;
        v32 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v22) = 1;
LABEL_25:
    v32 = *(unsigned __int8 *)(v3 + *v22);
    if (*(_BYTE *)(v3 + *v22))
      v26 = 0;
LABEL_27:
    if (v32 || (v26 & 7) == 4)
    {
LABEL_62:
      v50 = 1;
      goto LABEL_63;
    }
    v34 = v26 >> 3;
    v35 = v55;
    if ((v54 & 1) == 0)
    {
      v36 = v20;
      do
      {
        v38 = *v36++;
        v37 = v38;
        v35 = v38 != 0;
        if (v38)
          v39 = v37 == (_DWORD)v34;
        else
          v39 = 1;
      }
      while (!v39);
    }
    if ((_DWORD)v34 == 2)
      break;
    if ((_DWORD)v34 == 1)
    {
      if (v35)
      {
        if ((*(_BYTE *)(a1 + 52) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_82;
          v8 += *(unsigned __int8 *)(a1 + 52) << 29 >> 31;
        }
        else
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_82;
          v40 = objc_alloc_init(GEOPDAllGuidesLocationsSectionHeader);
          if (!GEOPDAllGuidesLocationsSectionHeaderReadAllFrom((uint64_t)v40, (void *)v3, v10 & 1))
            goto LABEL_81;
          PBReaderRecallMark();
          v41 = *(void **)(a1 + 32);
          *(_QWORD *)(a1 + 32) = v40;

          --v8;
        }
        goto LABEL_60;
      }
    }
    else if ((v52 & 1) != 0 && (*(_BYTE *)(a1 + 52) & 1) == 0)
    {
      if (!*(_QWORD *)(a1 + 16))
      {
        v42 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v43 = *(void **)(a1 + 16);
        *(_QWORD *)(a1 + 16) = v42;

      }
      v44 = PBUnknownFieldAdd();
      v22 = (int *)MEMORY[0x1E0D82BC8];
      if (!v44)
      {
        v50 = 0;
        v51 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
        goto LABEL_65;
      }
      goto LABEL_61;
    }
LABEL_56:
    v45 = PBReaderSkipValueWithTag();
    v22 = (int *)MEMORY[0x1E0D82BC8];
    if ((v45 & 1) == 0)
    {
      v50 = 0;
LABEL_63:
      v51 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
      goto LABEL_64;
    }
LABEL_61:
    if (!(v53 & 1 | (v8 != 0)))
      goto LABEL_62;
  }
  if (!v35 || (*(_BYTE *)(a1 + 52) & 2) != 0)
    goto LABEL_56;
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_82;
  v40 = objc_alloc_init(GEOPDGuidesLocationEntry);
  if (GEOPDGuidesLocationEntryReadAllFrom((uint64_t)v40, (void *)v3, v10 & 1))
  {
    PBReaderRecallMark();
    -[GEOPDAllGuidesLocationsSection _addNoFlagsEntry:](a1, v40);

LABEL_60:
    v22 = (int *)MEMORY[0x1E0D82BC8];
    goto LABEL_61;
  }
LABEL_81:

LABEL_82:
  v50 = 0;
  v51 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
  v22 = (int *)MEMORY[0x1E0D82BC8];
LABEL_64:
  if ((v52 & 1) == 0)
    goto LABEL_66;
LABEL_65:
  *(_BYTE *)(a1 + v51[148]) |= 1u;
LABEL_66:
  if (v55 || (v50 & 1) == 0)
  {
    *(_BYTE *)(a1 + v51[148]) |= 4u;
    *(_BYTE *)(a1 + v51[148]) |= 2u;
    goto LABEL_75;
  }
  if (v20)
  {
    while (1)
    {
      v47 = *v20++;
      v46 = v47;
      if (v47 == 1)
        break;
      if (v46 == 2)
      {
LABEL_71:
        *(_BYTE *)(a1 + v51[148]) |= v46;
      }
      else if (!v46)
      {
        goto LABEL_75;
      }
    }
    LOBYTE(v46) = 4;
    goto LABEL_71;
  }
LABEL_75:
  if (v50)
    v3 = *(_BYTE *)(v3 + *v22) == 0;
  else
    v3 = 0;
  if (v55)
  {
    v48 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_188AD1DC0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188AD2324(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDAllGuidesLocationsSectionCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _BYTE v11[128];
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  -[GEOPDAllGuidesLocationsSectionHeader readAll:](*(_QWORD *)(a1 + 32), 1);
  v9 = 0u;
  v10 = 0u;
  v7 = 0u;
  v8 = 0u;
  v2 = *(id *)(a1 + 24);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v8;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v8 != v5)
          objc_enumerationMutation(v2);
        -[GEOPDGuidesLocationEntry readAll:](*(_QWORD *)(*((_QWORD *)&v7 + 1) + 8 * v6++), 1);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
    }
    while (v4);
  }

}

unint64_t GEOPDAllGuidesLocationsSectionReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDAllGuidesLocationsSectionReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDAllGuidesLocationsSectionReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDAllGuidesLocationsSectionReadAllFrom_initialTag;
  Specified = GEOPDAllGuidesLocationsSectionReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDAllGuidesLocationsSectionCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_188AD268C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188AD28B8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDAllGuidesLocationsSectionIsDirty(uint64_t a1)
{
  unsigned int v2;
  uint64_t v3;
  int v4;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v2 = *(unsigned __int8 *)(a1 + 52);
  if ((v2 & 8) != 0)
    return 1;
  if ((v2 & 4) != 0)
  {
    v3 = *(_QWORD *)(a1 + 32);
    if (v3)
    {
      os_unfair_lock_lock_with_options();
      os_unfair_lock_assert_owner((const os_unfair_lock *)(v3 + 48));
      v4 = *(_BYTE *)(v3 + 56) & 0x1C;
      os_unfair_lock_unlock((os_unfair_lock_t)(v3 + 48));
      if (v4)
        return 1;
      v2 = *(unsigned __int8 *)(a1 + 52);
    }
  }
  return (v2 >> 1) & 1;
}

void sub_188AD2BB4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188AD2EFC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAllGuidesLocationsSectionHeaderReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  int *v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  BOOL v28;
  int v29;
  unint64_t v31;
  BOOL v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  char v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  GEOPDMapsIdentifier *v44;
  void *v45;
  uint64_t v46;
  id v47;
  void *v48;
  int v49;
  char v50;
  char v51;
  int v52;
  int v53;
  char v54;
  void *v55;
  int v57;
  int *v58;
  char v59;
  char v60;
  char v61;
  char v62;
  char v63;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = ((*(unsigned __int8 *)(a1 + 56) >> 2) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 1) & 1);
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v12;
        v13 = v7;
        goto LABEL_8;
      case -3:
        v9 = 1;
        goto LABEL_7;
      case -2:
        v13 = v7;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 != 0;
        v60 = v16 & ~(_BYTE)v11 | v8;
        v61 = v16 | v11 | v60;
        v59 = v9;
        if ((((v16 | v11) | v9) & 1) != 0)
          v17 = 0;
        else
          v17 = a3;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v62 = (v17 == 0) | v16 | v11;
        v63 = v16 | v11;
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v7;
        v14 = v8;
LABEL_8:
        v15 = v11;
LABEL_10:
        ++v10;
        v7 = v13;
        v8 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v19))
      goto LABEL_77;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0)
        goto LABEL_25;
      v21 += 7;
      v28 = v22++ >= 9;
      if (v28)
      {
        v23 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_25:
    v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_27:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_77:
      v57 = 1;
      goto LABEL_78;
    }
    v31 = v23 >> 3;
    v32 = v63;
    if ((v62 & 1) == 0)
    {
      v33 = v17;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    if ((_DWORD)v31 == 3)
      break;
    if ((_DWORD)v31 == 2)
    {
      if (v32)
      {
        if ((*(_BYTE *)(a1 + 56) & 4) == 0)
        {
          PBReaderReadString();
          v46 = objc_claimAutoreleasedReturnValue();
          v45 = *(void **)(a1 + 24);
          *(_QWORD *)(a1 + 24) = v46;
LABEL_57:

          --v10;
LABEL_75:
          v19 = (int *)MEMORY[0x1E0D82BC8];
          goto LABEL_76;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_98;
        v51 = 32 * *(_BYTE *)(a1 + 56);
LABEL_74:
        v10 += v51 >> 7;
        goto LABEL_75;
      }
    }
    else if ((_DWORD)v31 == 1)
    {
      if ((v59 & 1) != 0)
      {
        v37 = 0;
        v38 = 0;
        v39 = 0;
        *(_BYTE *)(a1 + 56) |= 1u;
        while (1)
        {
          v40 = *v18;
          v41 = *(_QWORD *)(v3 + v40);
          v42 = v41 + 1;
          if (v41 == -1 || v42 > *(_QWORD *)(v3 + *v6))
            break;
          v43 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v41);
          *(_QWORD *)(v3 + v40) = v42;
          v39 |= (unint64_t)(v43 & 0x7F) << v37;
          if ((v43 & 0x80) == 0)
            goto LABEL_67;
          v37 += 7;
          v28 = v38++ >= 9;
          if (v28)
          {
            LODWORD(v39) = 0;
            goto LABEL_69;
          }
        }
        *(_BYTE *)(v3 + *v19) = 1;
LABEL_67:
        if (*(_BYTE *)(v3 + *v19))
          LODWORD(v39) = 0;
LABEL_69:
        *(_DWORD *)(a1 + 52) = v39;
        goto LABEL_76;
      }
    }
    else if ((v60 & 1) != 0 && (*(_BYTE *)(a1 + 56) & 2) == 0)
    {
      if (!*(_QWORD *)(a1 + 16))
      {
        v47 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v48 = *(void **)(a1 + 16);
        *(_QWORD *)(a1 + 16) = v47;

      }
      v49 = PBUnknownFieldAdd();
      v19 = (int *)MEMORY[0x1E0D82BC8];
      if (!v49)
      {
        v57 = 0;
        v58 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
        goto LABEL_80;
      }
      goto LABEL_76;
    }
LABEL_64:
    v50 = PBReaderSkipValueWithTag();
    v19 = (int *)MEMORY[0x1E0D82BC8];
    if ((v50 & 1) == 0)
    {
      v57 = 0;
LABEL_78:
      v58 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
      goto LABEL_79;
    }
LABEL_76:
    if (!(v61 & 1 | (v10 != 0)))
      goto LABEL_77;
  }
  if (!v32)
    goto LABEL_64;
  if ((*(_BYTE *)(a1 + 56) & 8) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0)
      goto LABEL_98;
    v51 = 16 * *(_BYTE *)(a1 + 56);
    goto LABEL_74;
  }
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_98;
  v44 = objc_alloc_init(GEOPDMapsIdentifier);
  if (GEOPDMapsIdentifierReadAllFrom((uint64_t)v44, (void *)v3))
  {
    PBReaderRecallMark();
    v45 = *(void **)(a1 + 32);
    *(_QWORD *)(a1 + 32) = v44;
    goto LABEL_57;
  }

LABEL_98:
  v57 = 0;
  v58 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
  v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_79:
  if ((v60 & 1) == 0)
    goto LABEL_81;
LABEL_80:
  *(_BYTE *)(a1 + v58[153]) |= 2u;
LABEL_81:
  if (v63 & 1 | ((v57 & 1) == 0))
  {
    *(_BYTE *)(a1 + v58[153]) |= 4u;
    *(_BYTE *)(a1 + v58[153]) |= 8u;
    goto LABEL_91;
  }
  if (v17)
  {
    while (2)
    {
      while (1)
      {
        v53 = *v17++;
        v52 = v53;
        if (v53 == 2)
          break;
        if (v52 == 3)
        {
          v54 = 8;
          goto LABEL_90;
        }
        if (!v52)
          goto LABEL_91;
      }
      v54 = 4;
LABEL_90:
      *(_BYTE *)(a1 + v58[153]) |= v54;
      continue;
    }
  }
LABEL_91:
  if (v57)
    v3 = *(_BYTE *)(v3 + *v19) == 0;
  else
    v3 = 0;
  if ((v63 & 1) != 0)
  {
    v55 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_188AD35E0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188AD39BC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAllGuidesLocationsSectionHeaderReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDAllGuidesLocationsSectionHeaderReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDAllGuidesLocationsSectionHeaderReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDAllGuidesLocationsSectionHeaderReadAllFrom_initialTag;
  Specified = GEOPDAllGuidesLocationsSectionHeaderReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    objc_msgSend(*(id *)(a1 + 32), "readAll:", 1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_188AD3C24(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188AD3DD8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188AD3F88(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDAllGuidesLocationsViewParametersReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  GEOPDViewportInfo *v18;
  void *v19;
  char v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  id v27;
  void *v28;
  _BOOL8 v29;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 2)
        {
          v20 = 0;
          v21 = 0;
          v22 = 0;
          *(_BYTE *)(a1 + 28) |= 1u;
          while (1)
          {
            v23 = *v4;
            v24 = *(_QWORD *)&v3[v23];
            v25 = v24 + 1;
            if (v24 == -1 || v25 > *(_QWORD *)&v3[*v5])
              break;
            v26 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v24);
            *(_QWORD *)&v3[v23] = v25;
            v22 |= (unint64_t)(v26 & 0x7F) << v20;
            if ((v26 & 0x80) == 0)
              goto LABEL_36;
            v20 += 7;
            v15 = v21++ >= 9;
            if (v15)
            {
              LODWORD(v22) = 0;
              goto LABEL_38;
            }
          }
          v3[*v6] = 1;
LABEL_36:
          if (v3[*v6])
            LODWORD(v22) = 0;
LABEL_38:
          *(_DWORD *)(a1 + 24) = v22;
        }
        else if ((v10 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_42;
          v18 = objc_alloc_init(GEOPDViewportInfo);
          if (!GEOPDViewportInfoReadAllFrom((uint64_t)v18, v3))
          {

            goto LABEL_42;
          }
          PBReaderRecallMark();
          v19 = *(void **)(a1 + 16);
          *(_QWORD *)(a1 + 16) = v18;

        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v27 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v28 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v27;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_42;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v29 = v3[*v6] == 0;
  }
  else
  {
LABEL_42:
    v29 = 0;
  }
  objc_sync_exit(v3);

  return v29;
}

void sub_188AD47C4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188AD4BC4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAllGuidesLocationsViewResultReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  char v17;
  unsigned __int8 v18;
  char v19;
  int *v20;
  int *v21;
  int *v22;
  int *v23;
  char v24;
  unsigned int v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  int v32;
  unint64_t v34;
  BOOL v35;
  int *v36;
  int v37;
  int v38;
  BOOL v39;
  uint64_t v40;
  void *v41;
  GEOPDAllGuidesLocationsSection *v42;
  id v43;
  void *v44;
  int v45;
  char v46;
  int v47;
  int v48;
  void *v49;
  int v51;
  int *v52;
  char v53;
  char v54;
  char v55;
  BOOL v56;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1)
      + (*(_BYTE *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1);
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v12;
        v13 = v7;
        goto LABEL_8;
      case -3:
        v9 = 1;
        goto LABEL_7;
      case -2:
        v13 = v7;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 != 0;
        v17 = v16 & ~(_BYTE)v11 | v8;
        v18 = v16 | v11;
        v53 = v17;
        v19 = v18 | v17;
        if (((v18 | v9) & 1) != 0)
          v20 = 0;
        else
          v20 = a3;
        v56 = v18;
        v54 = v19;
        v55 = (v20 == 0) | v18;
        v21 = (int *)MEMORY[0x1E0D82BF0];
        v22 = (int *)MEMORY[0x1E0D82BC8];
        v23 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v7;
        v14 = v8;
LABEL_8:
        v15 = v11;
LABEL_10:
        ++v10;
        v7 = v13;
        v8 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v21) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v22))
      goto LABEL_60;
    v24 = 0;
    v25 = 0;
    v26 = 0;
    while (1)
    {
      v27 = *v21;
      v28 = *(_QWORD *)(v3 + v27);
      v29 = v28 + 1;
      if (v28 == -1 || v29 > *(_QWORD *)(v3 + *v6))
        break;
      v30 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v28);
      *(_QWORD *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0)
        goto LABEL_25;
      v24 += 7;
      if (v25++ >= 9)
      {
        v26 = 0;
        v32 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v22) = 1;
LABEL_25:
    v32 = *(unsigned __int8 *)(v3 + *v22);
    if (*(_BYTE *)(v3 + *v22))
      v26 = 0;
LABEL_27:
    if (v32 || (v26 & 7) == 4)
    {
LABEL_60:
      v51 = 1;
      goto LABEL_61;
    }
    v34 = v26 >> 3;
    v35 = v56;
    if ((v55 & 1) == 0)
    {
      v36 = v20;
      do
      {
        v38 = *v36++;
        v37 = v38;
        v35 = v38 != 0;
        if (v38)
          v39 = v37 == (_DWORD)v34;
        else
          v39 = 1;
      }
      while (!v39);
    }
    if ((_DWORD)v34 == 2)
      break;
    if ((_DWORD)v34 == 1)
    {
      if (v35)
      {
        if ((*(_BYTE *)(a1 + 52) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_80;
          v10 += *(unsigned __int8 *)(a1 + 52) << 29 >> 31;
        }
        else
        {
          PBReaderReadString();
          v40 = objc_claimAutoreleasedReturnValue();
          v41 = *(void **)(a1 + 32);
          *(_QWORD *)(a1 + 32) = v40;

          --v10;
        }
        goto LABEL_58;
      }
    }
    else if ((v53 & 1) != 0 && (*(_BYTE *)(a1 + 52) & 1) == 0)
    {
      if (!*(_QWORD *)(a1 + 16))
      {
        v43 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v44 = *(void **)(a1 + 16);
        *(_QWORD *)(a1 + 16) = v43;

      }
      v45 = PBUnknownFieldAdd();
      v22 = (int *)MEMORY[0x1E0D82BC8];
      if (!v45)
      {
        v51 = 0;
        v52 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
        goto LABEL_63;
      }
      goto LABEL_59;
    }
LABEL_54:
    v46 = PBReaderSkipValueWithTag();
    v22 = (int *)MEMORY[0x1E0D82BC8];
    if ((v46 & 1) == 0)
    {
      v51 = 0;
LABEL_61:
      v52 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
      goto LABEL_62;
    }
LABEL_59:
    if (!(v54 & 1 | (v10 != 0)))
      goto LABEL_60;
  }
  if (!v35 || (*(_BYTE *)(a1 + 52) & 2) != 0)
    goto LABEL_54;
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_80;
  v42 = objc_alloc_init(GEOPDAllGuidesLocationsSection);
  if (GEOPDAllGuidesLocationsSectionReadAllFrom((uint64_t)v42, (void *)v3, v7 & 1))
  {
    PBReaderRecallMark();
    -[GEOPDAllGuidesLocationsViewResult _addNoFlagsAllGuidesLocationsSection:](a1, v42);

LABEL_58:
    v22 = (int *)MEMORY[0x1E0D82BC8];
    goto LABEL_59;
  }

LABEL_80:
  v51 = 0;
  v52 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
  v22 = (int *)MEMORY[0x1E0D82BC8];
LABEL_62:
  if ((v53 & 1) == 0)
    goto LABEL_64;
LABEL_63:
  *(_BYTE *)(a1 + v52[162]) |= 1u;
LABEL_64:
  if (v56 || (v51 & 1) == 0)
  {
    *(_BYTE *)(a1 + v52[162]) |= 4u;
    *(_BYTE *)(a1 + v52[162]) |= 2u;
    goto LABEL_73;
  }
  if (v20)
  {
    while (1)
    {
      v48 = *v20++;
      v47 = v48;
      if (v48 == 1)
        break;
      if (v47 == 2)
      {
LABEL_69:
        *(_BYTE *)(a1 + v52[162]) |= v47;
      }
      else if (!v47)
      {
        goto LABEL_73;
      }
    }
    LOBYTE(v47) = 4;
    goto LABEL_69;
  }
LABEL_73:
  if (v51)
    v3 = *(_BYTE *)(v3 + *v22) == 0;
  else
    v3 = 0;
  if (v56)
  {
    v49 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_188AD521C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188AD5760(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDAllGuidesLocationsViewResultCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _BYTE v10[128];
  uint64_t v11;

  v11 = *MEMORY[0x1E0C80C00];
  v6 = 0u;
  v7 = 0u;
  v8 = 0u;
  v9 = 0u;
  v1 = *(id *)(a1 + 24);
  v2 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
  if (v2)
  {
    v3 = v2;
    v4 = *(_QWORD *)v7;
    do
    {
      v5 = 0;
      do
      {
        if (*(_QWORD *)v7 != v4)
          objc_enumerationMutation(v1);
        -[GEOPDAllGuidesLocationsSection readAll:](*(_QWORD *)(*((_QWORD *)&v6 + 1) + 8 * v5++), 1);
      }
      while (v3 != v5);
      v3 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
    }
    while (v3);
  }

}

unint64_t GEOPDAllGuidesLocationsViewResultReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDAllGuidesLocationsViewResultReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDAllGuidesLocationsViewResultReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDAllGuidesLocationsViewResultReadAllFrom_initialTag;
  Specified = GEOPDAllGuidesLocationsViewResultReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDAllGuidesLocationsViewResultCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_188AD5AB0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188AD5CDC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDAllGuidesLocationsViewResultIsDirty(uint64_t a1)
{
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t i;
  os_unfair_lock_s *v6;
  char IsDirty;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  _BYTE v13[128];
  uint64_t v14;

  v14 = *MEMORY[0x1E0C80C00];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  if ((*(_BYTE *)(a1 + 52) & 0xE) != 0)
    return 1;
  if ((*(_BYTE *)(a1 + 52) & 2) == 0)
    return 0;
  v11 = 0u;
  v12 = 0u;
  v9 = 0u;
  v10 = 0u;
  v3 = *(id *)(a1 + 24);
  v2 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v9, v13, 16);
  if (v2)
  {
    v4 = *(_QWORD *)v10;
    while (2)
    {
      for (i = 0; i != v2; ++i)
      {
        if (*(_QWORD *)v10 != v4)
          objc_enumerationMutation(v3);
        v6 = *(os_unfair_lock_s **)(*((_QWORD *)&v9 + 1) + 8 * i);
        if (v6)
        {
          os_unfair_lock_lock_with_options();
          IsDirty = _GEOPDAllGuidesLocationsSectionIsDirty((uint64_t)v6);
          os_unfair_lock_unlock(v6 + 12);
          if ((IsDirty & 1) != 0)
          {
            v2 = 1;
            goto LABEL_16;
          }
        }
      }
      v2 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v9, v13, 16);
      if (v2)
        continue;
      break;
    }
  }
LABEL_16:

  return v2;
}

os_unfair_lock_s *GEOPDAllGuidesLocationsViewResultIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOPDAllGuidesLocationsViewResultIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 12);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_188AD60EC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188AD6438(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAutocompleteFilterReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  char v17;
  char v18;
  int *v19;
  int *v20;
  char v21;
  int *v22;
  int *v23;
  char v24;
  unsigned int v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  BOOL v31;
  int v32;
  int v33;
  int *v35;
  unint64_t v36;
  BOOL v37;
  int *v38;
  int v39;
  int v40;
  BOOL v41;
  int v42;
  char v43;
  unsigned int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  char v50;
  GEOPDPoiIconCategoryFilter *v51;
  uint64_t v52;
  int v53;
  char v54;
  unsigned int v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  char v60;
  char v61;
  unsigned int v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  char v67;
  id v68;
  void *v69;
  int v70;
  int v71;
  char v72;
  unsigned int v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  char v78;
  char v79;
  void *v80;
  char v81;
  char v82;
  char v83;
  char v84;
  char v85;
  unsigned int v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  char v91;
  char v92;
  unsigned int v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  char v98;
  char v99;
  unsigned int v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  char v105;
  int v106;
  char v107;
  void *v108;
  char v110;
  int v111;
  char v112;
  char v113;
  char v114;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 120));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 116);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 112));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = (vaddv_s16((int16x4_t)(*(_QWORD *)&vshl_u16((uint16x4_t)(*(_QWORD *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 128)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFCFFFEFFFDFFFALL) & 0xFF01FF01FF01FF01))+ ((*(_BYTE *)(a1 + 128) & 0x20) != 0)+ ((*(_BYTE *)(a1 + 128) & 2) != 0));
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 > 3;
        v17 = v16 & ~(_BYTE)v11 | v9;
        v18 = v16 | v11;
        v19 = (int *)MEMORY[0x1E0D82BF0];
        if ((((v16 | v11) | v8) & 1) != 0)
          v20 = 0;
        else
          v20 = a3;
        v111 = 1;
        v21 = v17;
        if (*(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(v3 + *v6))
          goto LABEL_151;
        v110 = v17;
        v113 = v18 | v17;
        v114 = (v20 == 0) | v18;
        v22 = (int *)MEMORY[0x1E0D82BC8];
        v23 = (int *)MEMORY[0x1E0D82BB8];
        v112 = v18;
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v7;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_BYTE *)(v3 + *v22))
      goto LABEL_149;
    v24 = 0;
    v25 = 0;
    v26 = 0;
    while (1)
    {
      v27 = *v19;
      v28 = *(_QWORD *)(v3 + v27);
      v29 = v28 + 1;
      if (v28 == -1 || v29 > *(_QWORD *)(v3 + *v6))
        break;
      v30 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v28);
      *(_QWORD *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0)
        goto LABEL_25;
      v24 += 7;
      v31 = v25++ >= 9;
      if (v31)
      {
        v26 = 0;
        v32 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v22) = 1;
LABEL_25:
    v32 = *(unsigned __int8 *)(v3 + *v22);
    if (*(_BYTE *)(v3 + *v22))
      v26 = 0;
LABEL_27:
    v33 = v26 & 7;
    if (v32 || v33 == 4)
    {
LABEL_149:
      v111 = 1;
      goto LABEL_150;
    }
    v35 = v22;
    v36 = v26 >> 3;
    v37 = v18;
    if ((v114 & 1) == 0)
    {
      v38 = v20;
      do
      {
        v40 = *v38++;
        v39 = v40;
        v37 = v40 != 0;
        if (v40)
          v41 = v39 == (_DWORD)v36;
        else
          v41 = 1;
      }
      while (!v41);
    }
    switch((int)v36)
    {
      case 1:
        if (!v37 || (*(_BYTE *)(a1 + 128) & 8) != 0)
          goto LABEL_111;
        v22 = v35;
        if (v33 == 2)
        {
          v42 = PBReaderPlaceMark();
          v6 = (int *)MEMORY[0x1E0D82BD8];
          if (!v42)
            goto LABEL_170;
          v23 = (int *)MEMORY[0x1E0D82BB8];
          if (*(_QWORD *)(v3 + *v19) < *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]))
          {
            while (1)
            {
              if (*(_BYTE *)(v3 + *v22))
                goto LABEL_75;
              v43 = 0;
              v44 = 0;
              v45 = 0;
              while (1)
              {
                v46 = *v19;
                v47 = *(_QWORD *)(v3 + v46);
                v48 = v47 + 1;
                if (v47 == -1 || v48 > *(_QWORD *)(v3 + *v6))
                  break;
                v49 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v47);
                *(_QWORD *)(v3 + v46) = v48;
                v45 |= (unint64_t)(v49 & 0x7F) << v43;
                if (v49 < 0)
                {
                  v43 += 7;
                  v31 = v44++ >= 9;
                  if (!v31)
                    continue;
                }
                goto LABEL_53;
              }
              *(_BYTE *)(v3 + *v22) = 1;
LABEL_53:
              PBRepeatedInt32Add();
              if (*(_QWORD *)(v3 + *v19) >= *(_QWORD *)(v3 + *v6))
                goto LABEL_75;
            }
          }
          goto LABEL_75;
        }
        v85 = 0;
        v86 = 0;
        v87 = 0;
        v6 = (int *)MEMORY[0x1E0D82BD8];
        v23 = (int *)MEMORY[0x1E0D82BB8];
        while (1)
        {
          v88 = *v19;
          v89 = *(_QWORD *)(v3 + v88);
          v90 = v89 + 1;
          if (v89 == -1 || v90 > *(_QWORD *)(v3 + *v6))
            goto LABEL_146;
          v91 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v89);
          *(_QWORD *)(v3 + v88) = v90;
          v87 |= (unint64_t)(v91 & 0x7F) << v85;
          if (v91 < 0)
          {
            v85 += 7;
            v31 = v86++ >= 9;
            if (!v31)
              continue;
          }
          goto LABEL_147;
        }
      case 2:
        if (!v37)
          goto LABEL_111;
        v22 = v35;
        if ((*(_BYTE *)(a1 + 128) & 0x40) != 0)
        {
          v82 = PBReaderSkipValueWithTag();
          v6 = (int *)MEMORY[0x1E0D82BD8];
          if ((v82 & 1) == 0)
            goto LABEL_170;
          v83 = 2 * *(_BYTE *)(a1 + 128);
          goto LABEL_123;
        }
        v50 = PBReaderPlaceMark();
        v6 = (int *)MEMORY[0x1E0D82BD8];
        if ((v50 & 1) == 0)
          goto LABEL_170;
        v51 = objc_alloc_init(GEOPDPoiIconCategoryFilter);
        if (!GEOPDPoiIconCategoryFilterReadAllFrom((uint64_t)v51, (void *)v3, v10 & 1))
          goto LABEL_169;
        PBReaderRecallMark();
        v52 = 104;
        goto LABEL_110;
      case 3:
        if (!v37 || (*(_BYTE *)(a1 + 128) & 4) != 0)
          goto LABEL_111;
        v22 = v35;
        if (v33 != 2)
        {
          v92 = 0;
          v93 = 0;
          v94 = 0;
          v6 = (int *)MEMORY[0x1E0D82BD8];
          v23 = (int *)MEMORY[0x1E0D82BB8];
          while (1)
          {
            v95 = *v19;
            v96 = *(_QWORD *)(v3 + v95);
            v97 = v96 + 1;
            if (v96 == -1 || v97 > *(_QWORD *)(v3 + *v6))
              goto LABEL_146;
            v98 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v96);
            *(_QWORD *)(v3 + v95) = v97;
            v94 |= (unint64_t)(v98 & 0x7F) << v92;
            if (v98 < 0)
            {
              v92 += 7;
              v31 = v93++ >= 9;
              if (!v31)
                continue;
            }
            goto LABEL_147;
          }
        }
        v53 = PBReaderPlaceMark();
        v6 = (int *)MEMORY[0x1E0D82BD8];
        if (!v53)
          goto LABEL_170;
        v23 = (int *)MEMORY[0x1E0D82BB8];
        if (*(_QWORD *)(v3 + *v19) < *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]))
        {
          do
          {
            if (*(_BYTE *)(v3 + *v22))
              break;
            v54 = 0;
            v55 = 0;
            v56 = 0;
            while (1)
            {
              v57 = *v19;
              v58 = *(_QWORD *)(v3 + v57);
              v59 = v58 + 1;
              if (v58 == -1 || v59 > *(_QWORD *)(v3 + *v6))
                break;
              v60 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v58);
              *(_QWORD *)(v3 + v57) = v59;
              v56 |= (unint64_t)(v60 & 0x7F) << v54;
              if (v60 < 0)
              {
                v54 += 7;
                v31 = v55++ >= 9;
                if (!v31)
                  continue;
              }
              goto LABEL_74;
            }
            *(_BYTE *)(v3 + *v22) = 1;
LABEL_74:
            PBRepeatedInt32Add();
          }
          while (*(_QWORD *)(v3 + *v19) < *(_QWORD *)(v3 + *v6));
        }
        goto LABEL_75;
      case 4:
        if ((v8 & 1) == 0)
          goto LABEL_111;
        v61 = 0;
        v62 = 0;
        v63 = 0;
        *(_BYTE *)(a1 + 128) |= 1u;
        v22 = v35;
        v6 = (int *)MEMORY[0x1E0D82BD8];
        v23 = (int *)MEMORY[0x1E0D82BB8];
        while (2)
        {
          v64 = *v19;
          v65 = *(_QWORD *)(v3 + v64);
          v66 = v65 + 1;
          if (v65 == -1 || v66 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v22) = 1;
          }
          else
          {
            v67 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v65);
            *(_QWORD *)(v3 + v64) = v66;
            v63 |= (unint64_t)(v67 & 0x7F) << v61;
            if (v67 < 0)
            {
              v61 += 7;
              v31 = v62++ >= 9;
              if (v31)
              {
                v63 = 0;
                goto LABEL_118;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v22))
          v63 = 0;
LABEL_118:
        *(_BYTE *)(a1 + 124) = v63 != 0;
        goto LABEL_112;
      case 8:
        if (!v37 || (*(_BYTE *)(a1 + 128) & 0x10) != 0)
          goto LABEL_111;
        v22 = v35;
        if (v33 == 2)
        {
          v71 = PBReaderPlaceMark();
          v6 = (int *)MEMORY[0x1E0D82BD8];
          v23 = (int *)MEMORY[0x1E0D82BB8];
          if (!v71)
            goto LABEL_170;
          while (*(_QWORD *)(v3 + *v19) < *(_QWORD *)(v3 + *v6) && !*(_BYTE *)(v3 + *v22))
          {
            v72 = 0;
            v73 = 0;
            v74 = 0;
            while (1)
            {
              v75 = *v19;
              v76 = *(_QWORD *)(v3 + v75);
              v77 = v76 + 1;
              if (v76 == -1 || v77 > *(_QWORD *)(v3 + *v6))
                break;
              v78 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v76);
              *(_QWORD *)(v3 + v75) = v77;
              v74 |= (unint64_t)(v78 & 0x7F) << v72;
              if (v78 < 0)
              {
                v72 += 7;
                v31 = v73++ >= 9;
                if (!v31)
                  continue;
              }
              goto LABEL_104;
            }
            *(_BYTE *)(v3 + *v22) = 1;
LABEL_104:
            PBRepeatedInt32Add();
          }
LABEL_75:
          PBReaderRecallMark();
        }
        else
        {
          v99 = 0;
          v100 = 0;
          v101 = 0;
          v6 = (int *)MEMORY[0x1E0D82BD8];
          v23 = (int *)MEMORY[0x1E0D82BB8];
          while (1)
          {
            v102 = *v19;
            v103 = *(_QWORD *)(v3 + v102);
            v104 = v103 + 1;
            if (v103 == -1 || v104 > *(_QWORD *)(v3 + *v6))
              break;
            v105 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v103);
            *(_QWORD *)(v3 + v102) = v104;
            v101 |= (unint64_t)(v105 & 0x7F) << v99;
            if (v105 < 0)
            {
              v99 += 7;
              v31 = v100++ >= 9;
              if (!v31)
                continue;
            }
            goto LABEL_147;
          }
LABEL_146:
          *(_BYTE *)(v3 + *v22) = 1;
LABEL_147:
          PBRepeatedInt32Add();
        }
        v18 = v112;
        goto LABEL_112;
      case 9:
        if (!v37)
          goto LABEL_111;
        v22 = v35;
        if ((*(_BYTE *)(a1 + 128) & 0x20) != 0)
        {
          v84 = PBReaderSkipValueWithTag();
          v6 = (int *)MEMORY[0x1E0D82BD8];
          if ((v84 & 1) == 0)
            goto LABEL_170;
          v83 = 4 * *(_BYTE *)(a1 + 128);
LABEL_123:
          v7 += v83 >> 7;
LABEL_124:
          v18 = v112;
          v23 = (int *)MEMORY[0x1E0D82BB8];
LABEL_112:
          if (!(v113 & 1 | (v7 != 0)) || *(_QWORD *)(v3 + *v19) >= *(_QWORD *)(v3 + *v6))
            goto LABEL_149;
          continue;
        }
        v79 = PBReaderPlaceMark();
        v6 = (int *)MEMORY[0x1E0D82BD8];
        if ((v79 & 1) == 0)
          goto LABEL_170;
        v51 = objc_alloc_init(GEOPDAddressResultSubTypeFilter);
        if (GEOPDAddressResultSubTypeFilterReadAllFrom((uint64_t)v51, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          v52 = 96;
LABEL_110:
          v80 = *(void **)(a1 + v52);
          *(_QWORD *)(a1 + v52) = v51;

          --v7;
          goto LABEL_124;
        }
LABEL_169:

LABEL_170:
        v111 = 0;
        v18 = v112;
LABEL_150:
        v21 = v110;
LABEL_151:
        if ((v21 & 1) != 0)
LABEL_152:
          *(_BYTE *)(a1 + 128) |= 2u;
        if (v18 & 1 | ((v111 & 1) == 0))
        {
          *(_BYTE *)(a1 + 128) |= 8u;
          *(_BYTE *)(a1 + 128) |= 0x40u;
          *(_BYTE *)(a1 + 128) |= 4u;
          *(_BYTE *)(a1 + 128) |= 0x10u;
          *(_BYTE *)(a1 + 128) |= 0x20u;
        }
        else if (v20)
        {
          while (1)
          {
            v106 = *v20++;
            v107 = 8;
            switch(v106)
            {
              case 0:
                goto LABEL_162;
              case 1:
                goto LABEL_161;
              case 2:
                v107 = 64;
                goto LABEL_161;
              case 3:
                v107 = 4;
                goto LABEL_161;
              case 8:
                v107 = 16;
                goto LABEL_161;
              case 9:
                v107 = 32;
LABEL_161:
                *(_BYTE *)(a1 + 128) |= v107;
                break;
              default:
                continue;
            }
          }
        }
LABEL_162:
        if (v111)
        {
          v3 = *(_BYTE *)(v3 + (int)*MEMORY[0x1E0D82BC8]) == 0;
          if ((v18 & 1) == 0)
            return v3;
LABEL_166:
          v108 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        else
        {
          v3 = 0;
          if ((v18 & 1) != 0)
            goto LABEL_166;
        }
        return v3;
      default:
        if ((v110 & 1) == 0 || (*(_BYTE *)(a1 + 128) & 2) != 0)
        {
LABEL_111:
          v81 = PBReaderSkipValueWithTag();
          v18 = v112;
          v22 = v35;
          v6 = (int *)MEMORY[0x1E0D82BD8];
          v23 = (int *)MEMORY[0x1E0D82BB8];
          if ((v81 & 1) == 0)
          {
            v111 = 0;
            goto LABEL_150;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v68 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v69 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v68;

          }
          v70 = PBUnknownFieldAdd();
          v18 = v112;
          v22 = v35;
          v6 = (int *)MEMORY[0x1E0D82BD8];
          v23 = (int *)MEMORY[0x1E0D82BB8];
          if (!v70)
          {
            v111 = 0;
            goto LABEL_152;
          }
        }
        goto LABEL_112;
    }
  }
}

void sub_188AD754C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188AD768C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188AD7E50(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188AD8294(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188AD9514(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAutocompleteFilterReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 116))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDAutocompleteFilterReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 120));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 112) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 116) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDAutocompleteFilterReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDAutocompleteFilterReadAllFrom_initialTag;
  Specified = GEOPDAutocompleteFilterReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    -[GEOPDPoiIconCategoryFilter readAll:](*(_QWORD *)(a1 + 104), 1);
    -[GEOPDAddressResultSubTypeFilter readAll:](*(_QWORD *)(a1 + 96), 1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 120));
  return Specified;
}

void sub_188AD96CC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAutocompleteFilterReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOPDAutocompleteFilterReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188AD972C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDAutocompleteFilterIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  BOOL v13;
  int v14;
  int v15;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  int v25;
  unsigned int v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  int v31;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  int v36;
  unsigned int v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  int v42;
  unsigned int v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  int v47;
  unsigned int v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  int v52;
  _BOOL8 v53;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (!a1[*v4])
    {
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        v13 = v7++ >= 9;
        if (v13)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 == 2)
          {
            if (!PBReaderPlaceMark())
              goto LABEL_93;
            while (1)
            {
LABEL_62:
              if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
                goto LABEL_58;
              v38 = a1[*v4];
              if (a1[*v4])
                goto LABEL_58;
              while (1)
              {
                v39 = *v2;
                v40 = *(_QWORD *)&a1[v39];
                v41 = v40 + 1;
                if (v40 == -1 || v41 > *(_QWORD *)&a1[*v3])
                  break;
                v42 = *(char *)(*(_QWORD *)&a1[*v5] + v40);
                *(_QWORD *)&a1[v39] = v41;
                if (v42 < 0)
                {
                  v13 = v38++ >= 9;
                  if (!v13)
                    continue;
                }
                goto LABEL_62;
              }
              a1[*v4] = 1;
            }
          }
          if ((v8 & 7) != 0)
            goto LABEL_93;
          while (1)
          {
            v17 = *v2;
            v18 = *(_QWORD *)&a1[v17];
            v19 = v18 + 1;
            if (v18 == -1 || v19 > *(_QWORD *)&a1[*v3])
              goto LABEL_54;
            v20 = *(char *)(*(_QWORD *)&a1[*v5] + v18);
            *(_QWORD *)&a1[v17] = v19;
            if (v20 < 0)
            {
              v21 = v15++;
              if (v21 <= 8)
                continue;
            }
            goto LABEL_59;
          }
        case 2u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDAddressResultSubTypeFilterIsValid(a1))
            goto LABEL_93;
          goto LABEL_58;
        case 3u:
          if (v15 != 2)
          {
            if ((v8 & 7) != 0)
              goto LABEL_93;
            while (1)
            {
              v22 = *v2;
              v23 = *(_QWORD *)&a1[v22];
              v24 = v23 + 1;
              if (v23 == -1 || v24 > *(_QWORD *)&a1[*v3])
                goto LABEL_54;
              v25 = *(char *)(*(_QWORD *)&a1[*v5] + v23);
              *(_QWORD *)&a1[v22] = v24;
              if (v25 < 0)
              {
                v26 = v15++;
                if (v26 <= 8)
                  continue;
              }
              goto LABEL_59;
            }
          }
          if (!PBReaderPlaceMark())
            goto LABEL_93;
LABEL_72:
          while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
          {
            v43 = a1[*v4];
            if (a1[*v4])
              break;
            while (1)
            {
              v44 = *v2;
              v45 = *(_QWORD *)&a1[v44];
              v46 = v45 + 1;
              if (v45 == -1 || v46 > *(_QWORD *)&a1[*v3])
                break;
              v47 = *(char *)(*(_QWORD *)&a1[*v5] + v45);
              *(_QWORD *)&a1[v44] = v46;
              if (v47 < 0)
              {
                v13 = v43++ >= 9;
                if (!v13)
                  continue;
              }
              goto LABEL_72;
            }
            a1[*v4] = 1;
          }
          goto LABEL_58;
        case 4u:
          if ((v8 & 7) != 0)
            goto LABEL_93;
          v27 = 0;
          while (1)
          {
            v28 = *v2;
            v29 = *(_QWORD *)&a1[v28];
            v30 = v29 + 1;
            if (v29 == -1 || v30 > *(_QWORD *)&a1[*v3])
              goto LABEL_54;
            v31 = *(char *)(*(_QWORD *)&a1[*v5] + v29);
            *(_QWORD *)&a1[v28] = v30;
            if (v31 < 0 && v27++ <= 8)
              continue;
            goto LABEL_59;
          }
        case 8u:
          if (v15 == 2)
          {
            if (!PBReaderPlaceMark())
            {
LABEL_93:
              PBReaderRecallMark();
              return 0;
            }
LABEL_82:
            while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
            {
              v48 = a1[*v4];
              if (a1[*v4])
                break;
              while (1)
              {
                v49 = *v2;
                v50 = *(_QWORD *)&a1[v49];
                v51 = v50 + 1;
                if (v50 == -1 || v51 > *(_QWORD *)&a1[*v3])
                  break;
                v52 = *(char *)(*(_QWORD *)&a1[*v5] + v50);
                *(_QWORD *)&a1[v49] = v51;
                if (v52 < 0)
                {
                  v13 = v48++ >= 9;
                  if (!v13)
                    continue;
                }
                goto LABEL_82;
              }
              a1[*v4] = 1;
            }
LABEL_58:
            PBReaderRecallMark();
          }
          else
          {
            if ((v8 & 7) != 0)
              goto LABEL_93;
            while (1)
            {
              v33 = *v2;
              v34 = *(_QWORD *)&a1[v33];
              v35 = v34 + 1;
              if (v34 == -1 || v35 > *(_QWORD *)&a1[*v3])
                break;
              v36 = *(char *)(*(_QWORD *)&a1[*v5] + v34);
              *(_QWORD *)&a1[v33] = v35;
              if (v36 < 0)
              {
                v37 = v15++;
                if (v37 <= 8)
                  continue;
              }
              goto LABEL_59;
            }
LABEL_54:
            a1[*v4] = 1;
          }
LABEL_59:
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_91;
          break;
        case 9u:
          if (v15 == 2 && PBReaderPlaceMark() && GEOPDAddressResultSubTypeFilterIsValid(a1))
            goto LABEL_58;
          goto LABEL_93;
        default:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_93;
          goto LABEL_59;
      }
    }
  }
LABEL_91:
  v53 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v53;
}

void sub_188AD9EB4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL _GEOPDAutocompleteFilterIsDirty(uint64_t a1)
{
  int v2;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 120));
  v2 = *(unsigned __int8 *)(a1 + 128);
  if ((v2 & 0x88888888) != 0)
    return 1;
  if ((v2 & 0x40) != 0)
  {
    if (GEOPDPoiIconCategoryFilterIsDirty(*(_QWORD *)(a1 + 104)))
      return 1;
    LOBYTE(v2) = *(_BYTE *)(a1 + 128);
  }
  if ((v2 & 0x14) != 0)
    return 1;
  return (v2 & 0x20) != 0 && GEOPDAddressResultSubTypeFilterIsDirty(*(_QWORD *)(a1 + 96));
}

os_unfair_lock_s *GEOPDAutocompleteFilterIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  _BOOL8 IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOPDAutocompleteFilterIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 30);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_188ADA35C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188ADA784(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDAutocompleteOriginationInfoReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  unint64_t v18;
  char v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  char v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  GEOPDAutocompleteOriginationRoutePlanningParameters *v32;
  void *v33;
  id v34;
  void *v35;
  uint64_t v36;
  _BOOL8 v37;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      while (1)
      {
        if (v3[*v6])
          goto LABEL_53;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          goto LABEL_53;
        v18 = v10 >> 3;
        if ((v10 >> 3) == 3)
          break;
        if ((_DWORD)v18 == 2)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_55;
          v32 = objc_alloc_init(GEOPDAutocompleteOriginationRoutePlanningParameters);
          if (!GEOPDAutocompleteOriginationRoutePlanningParametersReadAllFrom((uint64_t)v32, v3))
          {

            goto LABEL_55;
          }
          PBReaderRecallMark();
          v33 = *(void **)(a1 + 16);
          *(_QWORD *)(a1 + 16) = v32;

        }
        else
        {
          if ((_DWORD)v18 == 1)
          {
            v19 = 0;
            v20 = 0;
            v21 = 0;
            *(_BYTE *)(a1 + 32) |= 1u;
            while (1)
            {
              v22 = *v4;
              v23 = *(_QWORD *)&v3[v22];
              v24 = v23 + 1;
              if (v23 == -1 || v24 > *(_QWORD *)&v3[*v5])
                break;
              v25 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v23);
              *(_QWORD *)&v3[v22] = v24;
              v21 |= (unint64_t)(v25 & 0x7F) << v19;
              if ((v25 & 0x80) == 0)
                goto LABEL_44;
              v19 += 7;
              v15 = v20++ >= 9;
              if (v15)
              {
                LODWORD(v21) = 0;
                goto LABEL_46;
              }
            }
            v3[*v6] = 1;
LABEL_44:
            if (v3[*v6])
              LODWORD(v21) = 0;
LABEL_46:
            v36 = 24;
LABEL_51:
            *(_DWORD *)(a1 + v36) = v21;
            goto LABEL_52;
          }
          if (!*(_QWORD *)(a1 + 8))
          {
            v34 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v35 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v34;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_55;
        }
LABEL_52:
        if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
          goto LABEL_53;
      }
      v26 = 0;
      v27 = 0;
      v21 = 0;
      *(_BYTE *)(a1 + 32) |= 2u;
      while (1)
      {
        v28 = *v4;
        v29 = *(_QWORD *)&v3[v28];
        v30 = v29 + 1;
        if (v29 == -1 || v30 > *(_QWORD *)&v3[*v5])
          break;
        v31 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v29);
        *(_QWORD *)&v3[v28] = v30;
        v21 |= (unint64_t)(v31 & 0x7F) << v26;
        if ((v31 & 0x80) == 0)
          goto LABEL_48;
        v26 += 7;
        v15 = v27++ >= 9;
        if (v15)
        {
          LODWORD(v21) = 0;
          goto LABEL_50;
        }
      }
      v3[*v6] = 1;
LABEL_48:
      if (v3[*v6])
        LODWORD(v21) = 0;
LABEL_50:
      v36 = 28;
      goto LABEL_51;
    }
LABEL_53:
    v37 = v3[*v6] == 0;
  }
  else
  {
LABEL_55:
    v37 = 0;
  }
  objc_sync_exit(v3);

  return v37;
}

void sub_188ADB668(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDAutocompleteOriginationInfoReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOPDAutocompleteOriginationInfoReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188ADB6C8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDAutocompleteOriginationInfoIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unint64_t v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int v22;
  BOOL v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  int v28;
  _BOOL8 v29;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_44;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        goto LABEL_44;
      v17 = v8 >> 3;
      if ((v8 >> 3) == 3)
        break;
      if ((_DWORD)v17 == 2)
      {
        if (v15 != 2
          || !PBReaderPlaceMark()
          || !GEOPDAutocompleteOriginationRoutePlanningParametersIsValid(a1))
        {
LABEL_46:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else
      {
        if ((_DWORD)v17 == 1)
        {
          if ((v8 & 7) != 0)
            goto LABEL_46;
          v18 = 0;
          while (1)
          {
            v19 = *v2;
            v20 = *(_QWORD *)&a1[v19];
            v21 = v20 + 1;
            if (v20 == -1 || v21 > *(_QWORD *)&a1[*v3])
              break;
            v22 = *(char *)(*(_QWORD *)&a1[*v5] + v20);
            *(_QWORD *)&a1[v19] = v21;
            if (v22 < 0)
            {
              v23 = v18++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_43;
          }
LABEL_37:
          a1[*v4] = 1;
          goto LABEL_43;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_46;
      }
LABEL_43:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_44;
    }
    if ((v8 & 7) != 0)
      goto LABEL_46;
    v24 = 0;
    while (1)
    {
      v25 = *v2;
      v26 = *(_QWORD *)&a1[v25];
      v27 = v26 + 1;
      if (v26 == -1 || v27 > *(_QWORD *)&a1[*v3])
        goto LABEL_37;
      v28 = *(char *)(*(_QWORD *)&a1[*v5] + v26);
      *(_QWORD *)&a1[v25] = v27;
      if (v28 < 0)
      {
        v23 = v24++ > 8;
        if (!v23)
          continue;
      }
      goto LABEL_43;
    }
  }
LABEL_44:
  v29 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v29;
}

BOOL GEOPDAutocompleteOriginationRoutePlanningParametersIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unint64_t v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int v22;
  BOOL v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  int v28;
  _BOOL8 v29;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_44;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        goto LABEL_44;
      v17 = v8 >> 3;
      if ((v8 >> 3) == 3)
        break;
      if ((_DWORD)v17 == 2)
      {
        if ((v8 & 7) != 0)
          goto LABEL_46;
        v24 = 0;
        while (1)
        {
          v25 = *v2;
          v26 = *(_QWORD *)&a1[v25];
          v27 = v26 + 1;
          if (v26 == -1 || v27 > *(_QWORD *)&a1[*v3])
            goto LABEL_41;
          v28 = *(char *)(*(_QWORD *)&a1[*v5] + v26);
          *(_QWORD *)&a1[v25] = v27;
          if (v28 < 0)
          {
            v23 = v24++ > 8;
            if (!v23)
              continue;
          }
          goto LABEL_43;
        }
      }
      if ((_DWORD)v17 == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOLatLngIsValid(a1))
        {
LABEL_46:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_46;
      }
LABEL_43:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_44;
    }
    if ((v8 & 7) != 0)
      goto LABEL_46;
    v18 = 0;
    while (1)
    {
      v19 = *v2;
      v20 = *(_QWORD *)&a1[v19];
      v21 = v20 + 1;
      if (v20 == -1 || v21 > *(_QWORD *)&a1[*v3])
        break;
      v22 = *(char *)(*(_QWORD *)&a1[*v5] + v20);
      *(_QWORD *)&a1[v19] = v21;
      if (v22 < 0)
      {
        v23 = v18++ > 8;
        if (!v23)
          continue;
      }
      goto LABEL_43;
    }
LABEL_41:
    a1[*v4] = 1;
    goto LABEL_43;
  }
LABEL_44:
  v29 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v29;
}

BOOL GEOPDAutocompleteOriginationRoutePlanningParametersReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  unint64_t v18;
  GEOLatLng *v19;
  void *v20;
  char v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  char v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  id v35;
  void *v36;
  BOOL v37;
  uint64_t v38;
  _BOOL8 v39;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      while (1)
      {
        if (v3[*v6])
          goto LABEL_53;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          goto LABEL_53;
        v18 = v10 >> 3;
        if ((v10 >> 3) == 3)
          break;
        if ((_DWORD)v18 == 2)
        {
          v28 = 0;
          v29 = 0;
          v30 = 0;
          *(_BYTE *)(a1 + 28) |= 1u;
          while (1)
          {
            v31 = *v4;
            v32 = *(_QWORD *)&v3[v31];
            v33 = v32 + 1;
            if (v32 == -1 || v33 > *(_QWORD *)&v3[*v5])
              break;
            v34 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v32);
            *(_QWORD *)&v3[v31] = v33;
            v30 |= (unint64_t)(v34 & 0x7F) << v28;
            if ((v34 & 0x80) == 0)
              goto LABEL_48;
            v28 += 7;
            v15 = v29++ >= 9;
            if (v15)
            {
              v30 = 0;
              goto LABEL_50;
            }
          }
          v3[*v6] = 1;
LABEL_48:
          if (v3[*v6])
            v30 = 0;
LABEL_50:
          v37 = v30 != 0;
          v38 = 24;
LABEL_51:
          *(_BYTE *)(a1 + v38) = v37;
          goto LABEL_52;
        }
        if ((_DWORD)v18 == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_55;
          v19 = objc_alloc_init(GEOLatLng);
          if (!GEOLatLngReadAllFrom((uint64_t)v19, v3))
          {

            goto LABEL_55;
          }
          PBReaderRecallMark();
          v20 = *(void **)(a1 + 16);
          *(_QWORD *)(a1 + 16) = v19;

        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v35 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v36 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v35;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_55;
        }
LABEL_52:
        if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
          goto LABEL_53;
      }
      v21 = 0;
      v22 = 0;
      v23 = 0;
      *(_BYTE *)(a1 + 28) |= 2u;
      while (1)
      {
        v24 = *v4;
        v25 = *(_QWORD *)&v3[v24];
        v26 = v25 + 1;
        if (v25 == -1 || v26 > *(_QWORD *)&v3[*v5])
          break;
        v27 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v25);
        *(_QWORD *)&v3[v24] = v26;
        v23 |= (unint64_t)(v27 & 0x7F) << v21;
        if ((v27 & 0x80) == 0)
          goto LABEL_44;
        v21 += 7;
        v15 = v22++ >= 9;
        if (v15)
        {
          v23 = 0;
          goto LABEL_46;
        }
      }
      v3[*v6] = 1;
LABEL_44:
      if (v3[*v6])
        v23 = 0;
LABEL_46:
      v37 = v23 != 0;
      v38 = 25;
      goto LABEL_51;
    }
LABEL_53:
    v39 = v3[*v6] == 0;
  }
  else
  {
LABEL_55:
    v39 = 0;
  }
  objc_sync_exit(v3);

  return v39;
}

void sub_188ADCAE8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDAutocompleteOriginationRoutePlanningParametersReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOPDAutocompleteOriginationRoutePlanningParametersReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188ADCB48(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188ADD4C8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAutocompleteParametersReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint32x4_t v13;
  int8x16_t v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  char v20;
  char v21;
  int *v22;
  int *v23;
  int *v24;
  char v25;
  int *v26;
  char v27;
  unsigned int v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  BOOL v34;
  int v35;
  int v36;
  unint64_t v38;
  BOOL v39;
  int *v40;
  int v41;
  int v42;
  BOOL v43;
  char v44;
  unsigned int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  char v50;
  id v51;
  void *v52;
  int v53;
  GEOPDAutocompleteParametersFullEntriesOnly *v54;
  uint64_t v55;
  char v56;
  unsigned int v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  char v62;
  char v63;
  unsigned int v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  char v69;
  void *v70;
  int *v71;
  char v72;
  unsigned int v73;
  uint64_t v74;
  int *v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  char v79;
  char v80;
  BOOL v81;
  uint64_t v82;
  int v83;
  char v84;
  unsigned int v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  char v90;
  int v91;
  int v92;
  void *v93;
  char v95;
  char v96;
  int v97;
  char v98;
  char v99;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 160));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 156);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 152));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = *(_DWORD *)(a1 + 172);
  v13 = (uint32x4_t)vdupq_n_s32(v12);
  v14.i64[0] = 0x100000001;
  v14.i64[1] = 0x100000001;
  v15 = vaddvq_s32(vaddq_s32(vaddq_s32((int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v13, (uint32x4_t)xmmword_189CC9CB0), v14), (int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v13, (uint32x4_t)xmmword_189CC9CC0), v14)), (int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v13, (uint32x4_t)xmmword_189CC9CD0), v14)))+ ((v12 >> 11) & 1)+ ((v12 >> 4) & 1)+ ((v12 >> 3) & 1);
  while (2)
  {
    v16 = 1;
    v17 = 1;
    v18 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v15;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v17 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v19 = v15 > 0xA;
        v20 = v19 & ~(_BYTE)v11 | v9;
        v21 = v19 | v11;
        if ((((v19 | v11) | v8) & 1) != 0)
          v22 = 0;
        else
          v22 = a3;
        v23 = (int *)MEMORY[0x1E0D82BF0];
        v97 = 1;
        v24 = (int *)MEMORY[0x1E0D82BC8];
        v25 = v19 & ~(_BYTE)v11 | v9;
        if (*(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(v3 + *v6))
          goto LABEL_209;
        v95 = v20;
        v98 = v21 | v20;
        v99 = (v22 == 0) | v21;
        v26 = (int *)MEMORY[0x1E0D82BB8];
        v96 = v21;
        break;
      default:
        ++v15;
LABEL_7:
        v16 = v9;
LABEL_8:
        v17 = v10;
        v18 = v11;
LABEL_10:
        ++v7;
        v9 = v16;
        v10 = v17;
        v11 = v18;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_BYTE *)(v3 + *v24))
      goto LABEL_207;
    v27 = 0;
    v28 = 0;
    v29 = 0;
    while (1)
    {
      v30 = *v23;
      v31 = *(_QWORD *)(v3 + v30);
      v32 = v31 + 1;
      if (v31 == -1 || v32 > *(_QWORD *)(v3 + *v6))
        break;
      v33 = *(_BYTE *)(*(_QWORD *)(v3 + *v26) + v31);
      *(_QWORD *)(v3 + v30) = v32;
      v29 |= (unint64_t)(v33 & 0x7F) << v27;
      if ((v33 & 0x80) == 0)
        goto LABEL_25;
      v27 += 7;
      v34 = v28++ >= 9;
      if (v34)
      {
        v29 = 0;
        v35 = *(unsigned __int8 *)(v3 + *v24);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v24) = 1;
LABEL_25:
    v35 = *(unsigned __int8 *)(v3 + *v24);
    if (*(_BYTE *)(v3 + *v24))
      v29 = 0;
LABEL_27:
    v36 = v29 & 7;
    if (v35 || v36 == 4)
    {
LABEL_207:
      v97 = 1;
      goto LABEL_208;
    }
    v38 = v29 >> 3;
    v39 = v21;
    if ((v99 & 1) == 0)
    {
      v40 = v22;
      do
      {
        v42 = *v40++;
        v41 = v42;
        v39 = v42 != 0;
        if (v42)
          v43 = v41 == (_DWORD)v38;
        else
          v43 = 1;
      }
      while (!v43);
    }
    switch((int)v38)
    {
      case 1:
        if ((v8 & 1) == 0)
          goto LABEL_150;
        v44 = 0;
        v45 = 0;
        v46 = 0;
        *(_DWORD *)(a1 + 172) |= 1u;
        while (1)
        {
          v47 = *v23;
          v48 = *(_QWORD *)(v3 + v47);
          v49 = v48 + 1;
          if (v48 == -1 || v49 > *(_QWORD *)(v3 + *v6))
            break;
          v50 = *(_BYTE *)(*(_QWORD *)(v3 + *v26) + v48);
          *(_QWORD *)(v3 + v47) = v49;
          v46 |= (unint64_t)(v50 & 0x7F) << v44;
          if ((v50 & 0x80) == 0)
            goto LABEL_153;
          v44 += 7;
          v34 = v45++ >= 9;
          if (v34)
          {
            LODWORD(v46) = 0;
            goto LABEL_155;
          }
        }
        *(_BYTE *)(v3 + *v24) = 1;
LABEL_153:
        if (*(_BYTE *)(v3 + *v24))
          LODWORD(v46) = 0;
LABEL_155:
        *(_DWORD *)(a1 + 164) = v46;
        goto LABEL_194;
      case 2:
        if (!v39)
          goto LABEL_150;
        if ((*(_BYTE *)(a1 + 173) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_236;
          v83 = (int)(*(_DWORD *)(a1 + 172) << 19) >> 31;
          goto LABEL_191;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_236;
        v54 = objc_alloc_init(GEOPDAutocompleteParametersFullEntriesOnly);
        if (!GEOPDAutocompleteParametersFullEntriesOnlyReadAllFrom((uint64_t)v54, (void *)v3, v10 & 1))
          goto LABEL_235;
        PBReaderRecallMark();
        v55 = 104;
        goto LABEL_134;
      case 3:
        if (!v39)
          goto LABEL_150;
        if ((*(_BYTE *)(a1 + 172) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_236;
          v83 = (int)(*(_DWORD *)(a1 + 172) << 24) >> 31;
          goto LABEL_191;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_236;
        v54 = objc_alloc_init(GEOPDAutocompleteParametersAllEntries);
        if (!GEOPDAutocompleteParametersAllEntriesReadAllFrom((uint64_t)v54, (void *)v3, v10 & 1))
          goto LABEL_235;
        PBReaderRecallMark();
        v55 = 64;
        goto LABEL_134;
      case 4:
        if (!v39)
          goto LABEL_150;
        if ((*(_BYTE *)(a1 + 173) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_236;
          v83 = (int)(*(_DWORD *)(a1 + 172) << 18) >> 31;
          goto LABEL_191;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_236;
        v54 = objc_alloc_init(GEOPDAutocompleteParametersLocalitiesAndLandmarks);
        if (!GEOPDAutocompleteParametersLocalitiesAndLandmarksReadAllFrom((uint64_t)v54, (void *)v3, v10 & 1))goto LABEL_235;
        PBReaderRecallMark();
        v55 = 112;
        goto LABEL_134;
      case 5:
        if (!v39)
          goto LABEL_150;
        if ((*(_BYTE *)(a1 + 172) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_236;
          v83 = (int)(*(_DWORD *)(a1 + 172) << 25) >> 31;
          goto LABEL_191;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_236;
        v54 = objc_alloc_init(GEOPDAutocompleteParametersAllEntriesWithBrowse);
        if (!GEOPDAutocompleteParametersAllEntriesWithBrowseReadAllFrom((uint64_t)v54, (void *)v3, v10 & 1))goto LABEL_235;
        PBReaderRecallMark();
        v55 = 56;
        goto LABEL_134;
      case 6:
        if (!v39)
          goto LABEL_150;
        if ((*(_BYTE *)(a1 + 174) & 1) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_236;
          v83 = (int)(*(_DWORD *)(a1 + 172) << 15) >> 31;
          goto LABEL_191;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_236;
        v54 = objc_alloc_init(GEOPDAutocompleteParametersSiriSearch);
        if (!GEOPDAutocompleteParametersSiriSearchReadAllFrom((uint64_t)v54, (void *)v3, v10 & 1))
          goto LABEL_235;
        PBReaderRecallMark();
        v55 = 136;
        goto LABEL_134;
      case 7:
        if (!v39)
          goto LABEL_150;
        if ((*(_BYTE *)(a1 + 172) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_236;
          v83 = (int)(*(_DWORD *)(a1 + 172) << 26) >> 31;
          goto LABEL_191;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_236;
        v54 = objc_alloc_init(GEOPDAutocompleteParametersAddressOnly);
        if (!GEOPDAutocompleteParametersAddressOnlyReadAllFrom((uint64_t)v54, (void *)v3, v10 & 1))
          goto LABEL_235;
        PBReaderRecallMark();
        v55 = 48;
        goto LABEL_134;
      case 8:
        if (!v39)
          goto LABEL_150;
        if ((*(_BYTE *)(a1 + 174) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_236;
          v83 = (int)(*(_DWORD *)(a1 + 172) << 14) >> 31;
          goto LABEL_191;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_236;
        v54 = objc_alloc_init(GEOPDAutocompleteParametersVenueSearch);
        if (!GEOPDAutocompleteParametersVenueSearchReadAllFrom((uint64_t)v54, (void *)v3, v10 & 1))
          goto LABEL_235;
        PBReaderRecallMark();
        v55 = 144;
        goto LABEL_134;
      case 9:
        if (!v39)
          goto LABEL_150;
        if ((*(_BYTE *)(a1 + 173) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_236;
          v83 = (int)(*(_DWORD *)(a1 + 172) << 21) >> 31;
          goto LABEL_191;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_236;
        v54 = objc_alloc_init(GEOPDAutocompleteParametersBrandProfileSearch);
        if (!GEOPDAutocompleteParametersBrandProfileSearchReadAllFrom((uint64_t)v54, (void *)v3, v10 & 1))
          goto LABEL_235;
        PBReaderRecallMark();
        v55 = 88;
        goto LABEL_134;
      case 10:
        if (!v39)
          goto LABEL_150;
        if ((*(_BYTE *)(a1 + 173) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_236;
          v83 = (int)(*(_DWORD *)(a1 + 172) << 17) >> 31;
          goto LABEL_191;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_236;
        v54 = objc_alloc_init(GEOPDAutocompleteParametersOfflineRegionSearch);
        if (!GEOPDAutocompleteParametersOfflineRegionSearchReadAllFrom((uint64_t)v54, (void *)v3, v10 & 1))
          goto LABEL_235;
        PBReaderRecallMark();
        v55 = 120;
        goto LABEL_134;
      case 11:
        if (!v39)
          goto LABEL_150;
        if ((*(_BYTE *)(a1 + 173) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_236;
          v83 = (int)(*(_DWORD *)(a1 + 172) << 16) >> 31;
          goto LABEL_191;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_236;
        v54 = objc_alloc_init(GEOPDAutocompleteParametersPoiAddressOnly);
        if (!GEOPDAutocompleteParametersPoiAddressOnlyReadAllFrom((uint64_t)v54, (void *)v3, v10 & 1))
          goto LABEL_235;
        PBReaderRecallMark();
        v55 = 128;
        goto LABEL_134;
      case 12:
        if (!v39)
          goto LABEL_150;
        if ((*(_BYTE *)(a1 + 173) & 1) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_236;
          v83 = (int)(*(_DWORD *)(a1 + 172) << 23) >> 31;
          goto LABEL_191;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_236;
        v54 = objc_alloc_init(GEOPDAutocompleteFilter);
        if (!GEOPDAutocompleteFilterReadAllFrom((uint64_t)v54, (void *)v3, v10 & 1))
          goto LABEL_235;
        PBReaderRecallMark();
        v55 = 72;
        goto LABEL_134;
      case 13:
        if ((v8 & 1) == 0)
          goto LABEL_150;
        v56 = 0;
        v57 = 0;
        v58 = 0;
        *(_DWORD *)(a1 + 172) |= 2u;
        while (2)
        {
          v59 = *v23;
          v60 = *(_QWORD *)(v3 + v59);
          v61 = v60 + 1;
          if (v60 == -1 || v61 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v24) = 1;
          }
          else
          {
            v62 = *(_BYTE *)(*(_QWORD *)(v3 + *v26) + v60);
            *(_QWORD *)(v3 + v59) = v61;
            v58 |= (unint64_t)(v62 & 0x7F) << v56;
            if (v62 < 0)
            {
              v56 += 7;
              v34 = v57++ >= 9;
              if (v34)
              {
                v58 = 0;
                goto LABEL_159;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v24))
          v58 = 0;
LABEL_159:
        v81 = v58 != 0;
        v82 = 168;
        goto LABEL_164;
      case 14:
        if ((v8 & 1) == 0)
          goto LABEL_150;
        v63 = 0;
        v64 = 0;
        v65 = 0;
        *(_DWORD *)(a1 + 172) |= 4u;
        while (2)
        {
          v66 = *v23;
          v67 = *(_QWORD *)(v3 + v66);
          v68 = v67 + 1;
          if (v67 == -1 || v68 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v24) = 1;
          }
          else
          {
            v69 = *(_BYTE *)(*(_QWORD *)(v3 + *v26) + v67);
            *(_QWORD *)(v3 + v66) = v68;
            v65 |= (unint64_t)(v69 & 0x7F) << v63;
            if (v69 < 0)
            {
              v63 += 7;
              v34 = v64++ >= 9;
              if (v34)
              {
                v65 = 0;
                goto LABEL_163;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v24))
          v65 = 0;
LABEL_163:
        v81 = v65 != 0;
        v82 = 169;
LABEL_164:
        *(_BYTE *)(a1 + v82) = v81;
        goto LABEL_194;
      case 15:
        if (!v39)
          goto LABEL_150;
        if ((*(_BYTE *)(a1 + 173) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_236;
          v83 = (int)(*(_DWORD *)(a1 + 172) << 22) >> 31;
          goto LABEL_191;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_236;
        v54 = objc_alloc_init(GEOPDAutocompleteSessionData);
        if (!GEOPDAutocompleteSessionDataReadAllFrom((uint64_t)v54, (void *)v3))
          goto LABEL_235;
        PBReaderRecallMark();
        v55 = 80;
        goto LABEL_134;
      case 16:
        if (!v39)
          goto LABEL_150;
        if ((*(_BYTE *)(a1 + 173) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_236;
          v83 = (int)(*(_DWORD *)(a1 + 172) << 20) >> 31;
LABEL_191:
          v7 += v83;
LABEL_192:
          v21 = v96;
          v24 = (int *)MEMORY[0x1E0D82BC8];
LABEL_193:
          v26 = (int *)MEMORY[0x1E0D82BB8];
LABEL_194:
          if (!(v98 & 1 | (v7 != 0)) || *(_QWORD *)(v3 + *v23) >= *(_QWORD *)(v3 + *v6))
            goto LABEL_207;
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_236;
        v54 = objc_alloc_init(GEOPDAutocompleteParametersCollectionOnly);
        if (GEOPDAutocompleteParametersCollectionOnlyReadAllFrom((uint64_t)v54, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          v55 = 96;
LABEL_134:
          v70 = *(void **)(a1 + v55);
          *(_QWORD *)(a1 + v55) = v54;

          --v7;
          goto LABEL_192;
        }
LABEL_235:

LABEL_236:
        v97 = 0;
        v21 = v96;
        v24 = (int *)MEMORY[0x1E0D82BC8];
LABEL_208:
        v25 = v95;
LABEL_209:
        if ((v25 & 1) != 0)
LABEL_210:
          *(_DWORD *)(a1 + 172) |= 8u;
        if (v21 & 1 | ((v97 & 1) == 0))
        {
          *(_DWORD *)(a1 + 172) |= 0x1000u;
          *(_DWORD *)(a1 + 172) |= 0x80u;
          *(_DWORD *)(a1 + 172) |= 0x2000u;
          *(_DWORD *)(a1 + 172) |= 0x40u;
          *(_DWORD *)(a1 + 172) |= 0x10000u;
          *(_DWORD *)(a1 + 172) |= 0x20u;
          *(_DWORD *)(a1 + 172) |= 0x20000u;
          *(_DWORD *)(a1 + 172) |= 0x400u;
          *(_DWORD *)(a1 + 172) |= 0x4000u;
          *(_DWORD *)(a1 + 172) |= 0x8000u;
          *(_DWORD *)(a1 + 172) |= 0x100u;
          *(_DWORD *)(a1 + 172) |= 0x200u;
          *(_DWORD *)(a1 + 172) |= 0x800u;
          *(_DWORD *)(a1 + 172) |= 0x10u;
        }
        else if (v22)
        {
          while (1)
          {
            v91 = *v22++;
            v92 = 4096;
            switch(v91)
            {
              case 0:
                goto LABEL_229;
              case 2:
                goto LABEL_228;
              case 3:
                v92 = 128;
                goto LABEL_228;
              case 4:
                v92 = 0x2000;
                goto LABEL_228;
              case 5:
                v92 = 64;
                goto LABEL_228;
              case 6:
                v92 = 0x10000;
                goto LABEL_228;
              case 7:
                v92 = 32;
                goto LABEL_228;
              case 8:
                v92 = 0x20000;
                goto LABEL_228;
              case 9:
                v92 = 1024;
                goto LABEL_228;
              case 10:
                v92 = 0x4000;
                goto LABEL_228;
              case 11:
                v92 = 0x8000;
                goto LABEL_228;
              case 12:
                v92 = 256;
                goto LABEL_228;
              case 15:
                v92 = 512;
                goto LABEL_228;
              case 16:
                v92 = 2048;
                goto LABEL_228;
              case 17:
                v92 = 16;
LABEL_228:
                *(_DWORD *)(a1 + 172) |= v92;
                break;
              default:
                continue;
            }
          }
        }
LABEL_229:
        if (v97)
        {
          v3 = *(_BYTE *)(v3 + *v24) == 0;
          if ((v21 & 1) == 0)
            return v3;
LABEL_233:
          v93 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        else
        {
          v3 = 0;
          if ((v21 & 1) != 0)
            goto LABEL_233;
        }
        return v3;
      case 17:
        if (!v39 || (*(_BYTE *)(a1 + 172) & 0x10) != 0)
          goto LABEL_150;
        if (v36 != 2)
        {
          v84 = 0;
          v85 = 0;
          v86 = 0;
          while (1)
          {
            v87 = *v23;
            v88 = *(_QWORD *)(v3 + v87);
            v89 = v88 + 1;
            if (v88 == -1 || v89 > *(_QWORD *)(v3 + *v6))
              break;
            v90 = *(_BYTE *)(*(_QWORD *)(v3 + *v26) + v88);
            *(_QWORD *)(v3 + v87) = v89;
            v86 |= (unint64_t)(v90 & 0x7F) << v84;
            if (v90 < 0)
            {
              v84 += 7;
              v34 = v85++ >= 9;
              if (!v34)
                continue;
            }
            goto LABEL_206;
          }
          *(_BYTE *)(v3 + *v24) = 1;
LABEL_206:
          PBRepeatedInt32Add();
          goto LABEL_192;
        }
        if (!PBReaderPlaceMark())
          goto LABEL_236;
        while (1)
        {
          v71 = (int *)MEMORY[0x1E0D82BC8];
          if (*(_QWORD *)(v3 + *v23) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + (int)*MEMORY[0x1E0D82BC8]))
            break;
          v72 = 0;
          v73 = 0;
          v74 = 0;
          v75 = (int *)MEMORY[0x1E0D82BB8];
          while (1)
          {
            v76 = *v23;
            v77 = *(_QWORD *)(v3 + v76);
            v78 = v77 + 1;
            if (v77 == -1 || v78 > *(_QWORD *)(v3 + *v6))
              break;
            v79 = *(_BYTE *)(*(_QWORD *)(v3 + *v75) + v77);
            *(_QWORD *)(v3 + v76) = v78;
            v74 |= (unint64_t)(v79 & 0x7F) << v72;
            if (v79 < 0)
            {
              v72 += 7;
              v34 = v73++ >= 9;
              if (!v34)
                continue;
            }
            goto LABEL_149;
          }
          *(_BYTE *)(v3 + *v71) = 1;
LABEL_149:
          PBRepeatedInt32Add();
        }
        PBReaderRecallMark();
        v24 = (int *)MEMORY[0x1E0D82BC8];
        v21 = v96;
        goto LABEL_193;
      default:
        if ((v95 & 1) == 0 || (*(_BYTE *)(a1 + 172) & 8) != 0)
        {
LABEL_150:
          v80 = PBReaderSkipValueWithTag();
          v26 = (int *)MEMORY[0x1E0D82BB8];
          v24 = (int *)MEMORY[0x1E0D82BC8];
          v21 = v96;
          if ((v80 & 1) == 0)
          {
            v97 = 0;
            goto LABEL_208;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v51 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v52 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v51;

          }
          v53 = PBUnknownFieldAdd();
          v21 = v96;
          v24 = (int *)MEMORY[0x1E0D82BC8];
          v26 = (int *)MEMORY[0x1E0D82BB8];
          if (!v53)
          {
            v97 = 0;
            goto LABEL_210;
          }
        }
        goto LABEL_194;
    }
  }
}

void sub_188ADE7BC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188ADE908(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188ADEA50(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188ADEB9C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188ADECE0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188ADEE2C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188ADEF70(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188ADF0BC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188ADF208(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188ADF354(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188ADF594(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188ADF6E0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188ADF828(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188AE110C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDAutocompleteParametersCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  objc_msgSend(a1[13], "readAll:", 1);
  objc_msgSend(a1[8], "readAll:", 1);
  objc_msgSend(a1[14], "readAll:", 1);
  objc_msgSend(a1[7], "readAll:", 1);
  objc_msgSend(a1[17], "readAll:", 1);
  objc_msgSend(a1[6], "readAll:", 1);
  objc_msgSend(a1[18], "readAll:", 1);
  objc_msgSend(a1[11], "readAll:", 1);
  objc_msgSend(a1[15], "readAll:", 1);
  objc_msgSend(a1[16], "readAll:", 1);
  objc_msgSend(a1[9], "readAll:", 1);
  objc_msgSend(a1[10], "readAll:", 1);
  return objc_msgSend(a1[12], "readAll:", 1);
}

unint64_t GEOPDAutocompleteParametersReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 156))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDAutocompleteParametersReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 160));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 152) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 156) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDAutocompleteParametersReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDAutocompleteParametersReadAllFrom_initialTag;
  Specified = GEOPDAutocompleteParametersReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDAutocompleteParametersCallReadAllRecursiveWithoutSynchronized((id *)a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 160));
  return Specified;
}

void sub_188AE1394(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAutocompleteParametersReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOPDAutocompleteParametersReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188AE13F4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDAutocompleteParametersIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  BOOL v13;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  int v36;
  unsigned int v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  int v42;
  _BOOL8 v43;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (!a1[*v4])
    {
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        v13 = v7++ >= 9;
        if (v13)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0)
            goto LABEL_118;
          v17 = 0;
          while (1)
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
              goto LABEL_106;
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if (v21 < 0)
            {
              v22 = v17++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_97;
          }
        case 2u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDAutocompleteParametersFullEntriesOnlyIsValid(a1))
            goto LABEL_118;
          goto LABEL_96;
        case 3u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDAutocompleteParametersAllEntriesIsValid(a1))
            goto LABEL_118;
          goto LABEL_96;
        case 4u:
          if (v15 != 2
            || !PBReaderPlaceMark()
            || !GEOPDAutocompleteParametersLocalitiesAndLandmarksIsValid(a1))
          {
            goto LABEL_118;
          }
          goto LABEL_96;
        case 5u:
          if (v15 != 2
            || !PBReaderPlaceMark()
            || !GEOPDAutocompleteParametersAllEntriesWithBrowseIsValid(a1))
          {
            goto LABEL_118;
          }
          goto LABEL_96;
        case 6u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDAutocompleteParametersSiriSearchIsValid(a1))
            goto LABEL_118;
          goto LABEL_96;
        case 7u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDAutocompleteParametersAddressOnlyIsValid(a1))
            goto LABEL_118;
          goto LABEL_96;
        case 8u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDAutocompleteParametersVenueSearchIsValid(a1))
            goto LABEL_118;
          goto LABEL_96;
        case 9u:
          if (v15 != 2
            || !PBReaderPlaceMark()
            || !GEOPDAutocompleteParametersBrandProfileSearchIsValid(a1))
          {
            goto LABEL_118;
          }
          goto LABEL_96;
        case 0xAu:
          if (v15 != 2
            || !PBReaderPlaceMark()
            || !GEOPDAutocompleteParametersOfflineRegionSearchIsValid(a1))
          {
            goto LABEL_118;
          }
          goto LABEL_96;
        case 0xBu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDAutocompleteParametersPoiAddressOnlyIsValid(a1))
            goto LABEL_118;
          goto LABEL_96;
        case 0xCu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDAutocompleteFilterIsValid(a1))
            goto LABEL_118;
          goto LABEL_96;
        case 0xDu:
          if ((v8 & 7) != 0)
            goto LABEL_118;
          v23 = 0;
          while (1)
          {
            v24 = *v2;
            v25 = *(_QWORD *)&a1[v24];
            v26 = v25 + 1;
            if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
              goto LABEL_106;
            v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
            *(_QWORD *)&a1[v24] = v26;
            if (v27 < 0)
            {
              v22 = v23++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_97;
          }
        case 0xEu:
          if ((v8 & 7) != 0)
            goto LABEL_118;
          v28 = 0;
          while (1)
          {
            v29 = *v2;
            v30 = *(_QWORD *)&a1[v29];
            v31 = v30 + 1;
            if (v30 == -1 || v31 > *(_QWORD *)&a1[*v3])
              goto LABEL_106;
            v32 = *(char *)(*(_QWORD *)&a1[*v5] + v30);
            *(_QWORD *)&a1[v29] = v31;
            if (v32 < 0)
            {
              v22 = v28++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_97;
          }
        case 0xFu:
          if (v15 != 2
            || !PBReaderPlaceMark()
            || !GEOPDAutocompleteSessionDataIsValid((unsigned __int8 *)a1))
          {
            goto LABEL_118;
          }
          goto LABEL_96;
        case 0x10u:
          if (v15 == 2 && PBReaderPlaceMark() && GEOPDAutocompleteParametersCollectionOnlyIsValid(a1))
            goto LABEL_96;
          goto LABEL_118;
        case 0x11u:
          if (v15 == 2)
          {
            if (!PBReaderPlaceMark())
            {
LABEL_118:
              PBReaderRecallMark();
              return 0;
            }
LABEL_108:
            while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
            {
              v38 = a1[*v4];
              if (a1[*v4])
                break;
              while (1)
              {
                v39 = *v2;
                v40 = *(_QWORD *)&a1[v39];
                v41 = v40 + 1;
                if (v40 == -1 || v41 > *(_QWORD *)&a1[*v3])
                  break;
                v42 = *(char *)(*(_QWORD *)&a1[*v5] + v40);
                *(_QWORD *)&a1[v39] = v41;
                if (v42 < 0)
                {
                  v13 = v38++ >= 9;
                  if (!v13)
                    continue;
                }
                goto LABEL_108;
              }
              a1[*v4] = 1;
            }
LABEL_96:
            PBReaderRecallMark();
          }
          else
          {
            if ((v8 & 7) != 0)
              goto LABEL_118;
            while (1)
            {
              v33 = *v2;
              v34 = *(_QWORD *)&a1[v33];
              v35 = v34 + 1;
              if (v34 == -1 || v35 > *(_QWORD *)&a1[*v3])
                break;
              v36 = *(char *)(*(_QWORD *)&a1[*v5] + v34);
              *(_QWORD *)&a1[v33] = v35;
              if (v36 < 0)
              {
                v37 = v15++;
                if (v37 <= 8)
                  continue;
              }
              goto LABEL_97;
            }
LABEL_106:
            a1[*v4] = 1;
          }
LABEL_97:
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_117;
          break;
        default:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_118;
          goto LABEL_97;
      }
    }
  }
LABEL_117:
  v43 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v43;
}

BOOL GEOPDAutocompleteParametersFullEntriesOnlyIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  _BOOL8 v28;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2)
            goto LABEL_46;
          goto LABEL_20;
        case 2u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDViewportInfoIsValid(a1))
            goto LABEL_46;
          PBReaderRecallMark();
          continue;
        case 3u:
          if ((v8 & 7) != 0)
            goto LABEL_46;
          v17 = 0;
          while (1)
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
              goto LABEL_42;
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if (v21 < 0)
            {
              v22 = v17++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_43;
          }
        case 4u:
          if ((v8 & 7) != 0)
            goto LABEL_46;
          v23 = 0;
          break;
        default:
LABEL_20:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_46:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v24 = *v2;
        v25 = *(_QWORD *)&a1[v24];
        v26 = v25 + 1;
        if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
          break;
        v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
        *(_QWORD *)&a1[v24] = v26;
        if (v27 < 0)
        {
          v22 = v23++ > 8;
          if (!v22)
            continue;
        }
        goto LABEL_43;
      }
LABEL_42:
      a1[*v4] = 1;
LABEL_43:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v28 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v28;
}

BOOL GEOPDAutocompleteParametersAllEntriesIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  _BOOL8 v28;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2)
            goto LABEL_46;
          goto LABEL_20;
        case 2u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDViewportInfoIsValid(a1))
            goto LABEL_46;
          PBReaderRecallMark();
          continue;
        case 3u:
          if ((v8 & 7) != 0)
            goto LABEL_46;
          v17 = 0;
          while (1)
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
              goto LABEL_42;
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if (v21 < 0)
            {
              v22 = v17++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_43;
          }
        case 4u:
          if ((v8 & 7) != 0)
            goto LABEL_46;
          v23 = 0;
          break;
        default:
LABEL_20:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_46:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v24 = *v2;
        v25 = *(_QWORD *)&a1[v24];
        v26 = v25 + 1;
        if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
          break;
        v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
        *(_QWORD *)&a1[v24] = v26;
        if (v27 < 0)
        {
          v22 = v23++ > 8;
          if (!v22)
            continue;
        }
        goto LABEL_43;
      }
LABEL_42:
      a1[*v4] = 1;
LABEL_43:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v28 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v28;
}

BOOL GEOPDAutocompleteParametersLocalitiesAndLandmarksIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  _BOOL8 v28;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2)
            goto LABEL_46;
          goto LABEL_20;
        case 2u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDViewportInfoIsValid(a1))
            goto LABEL_46;
          PBReaderRecallMark();
          continue;
        case 3u:
          if ((v8 & 7) != 0)
            goto LABEL_46;
          v17 = 0;
          while (1)
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
              goto LABEL_42;
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if (v21 < 0)
            {
              v22 = v17++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_43;
          }
        case 4u:
          if ((v8 & 7) != 0)
            goto LABEL_46;
          v23 = 0;
          break;
        default:
LABEL_20:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_46:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v24 = *v2;
        v25 = *(_QWORD *)&a1[v24];
        v26 = v25 + 1;
        if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
          break;
        v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
        *(_QWORD *)&a1[v24] = v26;
        if (v27 < 0)
        {
          v22 = v23++ > 8;
          if (!v22)
            continue;
        }
        goto LABEL_43;
      }
LABEL_42:
      a1[*v4] = 1;
LABEL_43:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v28 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v28;
}

BOOL GEOPDAutocompleteParametersAllEntriesWithBrowseIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  BOOL v13;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  int v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  int v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  int v46;
  unsigned int v47;
  unsigned int v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  int v52;
  unsigned int v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  int v57;
  unsigned int v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  int v66;
  unsigned int v67;
  unsigned int v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  int v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  int v76;
  unsigned int v77;
  unsigned int v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  int v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  int v86;
  unsigned int v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  int v91;
  unsigned int v92;
  unsigned int v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  int v97;
  unsigned int v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  int v102;
  unsigned int v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  int v107;
  unsigned int v108;
  uint64_t v109;
  uint64_t v110;
  unint64_t v111;
  int v112;
  unsigned int v113;
  uint64_t v114;
  uint64_t v115;
  unint64_t v116;
  int v117;
  unsigned int v118;
  uint64_t v119;
  uint64_t v120;
  unint64_t v121;
  int v122;
  unsigned int v123;
  uint64_t v124;
  uint64_t v125;
  unint64_t v126;
  int v127;
  _BOOL8 v128;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (!a1[*v4])
    {
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        v13 = v7++ >= 9;
        if (v13)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2)
            goto LABEL_235;
          goto LABEL_59;
        case 2u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDViewportInfoIsValid(a1))
            goto LABEL_235;
          goto LABEL_163;
        case 3u:
          if ((v8 & 7) != 0)
            goto LABEL_235;
          v17 = 0;
          while (1)
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
              goto LABEL_180;
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if (v21 < 0)
            {
              v22 = v17++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_181;
          }
        case 4u:
          if ((v8 & 7) != 0)
            goto LABEL_235;
          v23 = 0;
          while (1)
          {
            v24 = *v2;
            v25 = *(_QWORD *)&a1[v24];
            v26 = v25 + 1;
            if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
              goto LABEL_180;
            v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
            *(_QWORD *)&a1[v24] = v26;
            if (v27 < 0)
            {
              v22 = v23++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_181;
          }
        case 5u:
          if (v15 == 2)
            goto LABEL_59;
          goto LABEL_235;
        case 6u:
        case 0xEu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDAutocompleteEntryIsValid(a1))
            goto LABEL_235;
          goto LABEL_163;
        case 7u:
          if ((v8 & 7) != 0)
            goto LABEL_235;
          v28 = 0;
          while (1)
          {
            v29 = *v2;
            v30 = *(_QWORD *)&a1[v29];
            v31 = v30 + 1;
            if (v30 == -1 || v31 > *(_QWORD *)&a1[*v3])
              goto LABEL_180;
            v32 = *(char *)(*(_QWORD *)&a1[*v5] + v30);
            *(_QWORD *)&a1[v29] = v31;
            if (v32 < 0)
            {
              v22 = v28++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_181;
          }
        case 8u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDVenueIdentifierIsValid(a1))
            goto LABEL_235;
          goto LABEL_163;
        case 0xAu:
          if ((v8 & 7) != 0)
            goto LABEL_235;
          v33 = 0;
          while (1)
          {
            v34 = *v2;
            v35 = *(_QWORD *)&a1[v34];
            v36 = v35 + 1;
            if (v35 == -1 || v36 > *(_QWORD *)&a1[*v3])
              goto LABEL_180;
            v37 = *(char *)(*(_QWORD *)&a1[*v5] + v35);
            *(_QWORD *)&a1[v34] = v36;
            if (v37 < 0)
            {
              v22 = v33++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_181;
          }
        case 0xBu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDRetainedSearchMetadataIsValid(a1))
            goto LABEL_235;
          goto LABEL_163;
        case 0xCu:
          if ((v8 & 7) != 0)
            goto LABEL_235;
          v38 = 0;
          while (1)
          {
            v39 = *v2;
            v40 = *(_QWORD *)&a1[v39];
            v41 = v40 + 1;
            if (v40 == -1 || v41 > *(_QWORD *)&a1[*v3])
              goto LABEL_180;
            v42 = *(char *)(*(_QWORD *)&a1[*v5] + v40);
            *(_QWORD *)&a1[v39] = v41;
            if (v42 < 0)
            {
              v22 = v38++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_181;
          }
        case 0xDu:
          if (v15 != 2)
          {
            if ((v8 & 7) != 0)
              goto LABEL_235;
            while (1)
            {
              v43 = *v2;
              v44 = *(_QWORD *)&a1[v43];
              v45 = v44 + 1;
              if (v44 == -1 || v45 > *(_QWORD *)&a1[*v3])
                goto LABEL_180;
              v46 = *(char *)(*(_QWORD *)&a1[*v5] + v44);
              *(_QWORD *)&a1[v43] = v45;
              if (v46 < 0)
              {
                v47 = v15++;
                if (v47 <= 8)
                  continue;
              }
              goto LABEL_181;
            }
          }
          if (!PBReaderPlaceMark())
            goto LABEL_235;
LABEL_184:
          while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
          {
            v103 = a1[*v4];
            if (a1[*v4])
              break;
            while (1)
            {
              v104 = *v2;
              v105 = *(_QWORD *)&a1[v104];
              v106 = v105 + 1;
              if (v105 == -1 || v106 > *(_QWORD *)&a1[*v3])
                break;
              v107 = *(char *)(*(_QWORD *)&a1[*v5] + v105);
              *(_QWORD *)&a1[v104] = v106;
              if (v107 < 0)
              {
                v13 = v103++ >= 9;
                if (!v13)
                  continue;
              }
              goto LABEL_184;
            }
            a1[*v4] = 1;
          }
          goto LABEL_163;
        case 0xFu:
          if ((v8 & 7) != 0)
            goto LABEL_235;
          v48 = 0;
          while (1)
          {
            v49 = *v2;
            v50 = *(_QWORD *)&a1[v49];
            v51 = v50 + 1;
            if (v50 == -1 || v51 > *(_QWORD *)&a1[*v3])
              goto LABEL_180;
            v52 = *(char *)(*(_QWORD *)&a1[*v5] + v50);
            *(_QWORD *)&a1[v49] = v51;
            if (v52 < 0)
            {
              v22 = v48++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_181;
          }
        case 0x10u:
          if ((v8 & 7) != 0)
            goto LABEL_235;
          v53 = 0;
          while (1)
          {
            v54 = *v2;
            v55 = *(_QWORD *)&a1[v54];
            v56 = v55 + 1;
            if (v55 == -1 || v56 > *(_QWORD *)&a1[*v3])
              goto LABEL_180;
            v57 = *(char *)(*(_QWORD *)&a1[*v5] + v55);
            *(_QWORD *)&a1[v54] = v56;
            if (v57 < 0)
            {
              v22 = v53++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_181;
          }
        case 0x11u:
          if ((v8 & 7) != 0)
            goto LABEL_235;
          v58 = 0;
          while (1)
          {
            v59 = *v2;
            v60 = *(_QWORD *)&a1[v59];
            v61 = v60 + 1;
            if (v60 == -1 || v61 > *(_QWORD *)&a1[*v3])
              goto LABEL_180;
            v62 = *(char *)(*(_QWORD *)&a1[*v5] + v60);
            *(_QWORD *)&a1[v59] = v61;
            if (v62 < 0)
            {
              v22 = v58++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_181;
          }
        case 0x12u:
          if (v15 != 2)
          {
            if ((v8 & 7) != 0)
              goto LABEL_235;
            while (1)
            {
              v63 = *v2;
              v64 = *(_QWORD *)&a1[v63];
              v65 = v64 + 1;
              if (v64 == -1 || v65 > *(_QWORD *)&a1[*v3])
                goto LABEL_180;
              v66 = *(char *)(*(_QWORD *)&a1[*v5] + v64);
              *(_QWORD *)&a1[v63] = v65;
              if (v66 < 0)
              {
                v67 = v15++;
                if (v67 <= 8)
                  continue;
              }
              goto LABEL_181;
            }
          }
          if (!PBReaderPlaceMark())
            goto LABEL_235;
LABEL_194:
          while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
          {
            v108 = a1[*v4];
            if (a1[*v4])
              break;
            while (1)
            {
              v109 = *v2;
              v110 = *(_QWORD *)&a1[v109];
              v111 = v110 + 1;
              if (v110 == -1 || v111 > *(_QWORD *)&a1[*v3])
                break;
              v112 = *(char *)(*(_QWORD *)&a1[*v5] + v110);
              *(_QWORD *)&a1[v109] = v111;
              if (v112 < 0)
              {
                v13 = v108++ >= 9;
                if (!v13)
                  continue;
              }
              goto LABEL_194;
            }
            a1[*v4] = 1;
          }
          goto LABEL_163;
        case 0x13u:
          if ((v8 & 7) != 0)
            goto LABEL_235;
          v68 = 0;
          while (1)
          {
            v69 = *v2;
            v70 = *(_QWORD *)&a1[v69];
            v71 = v70 + 1;
            if (v70 == -1 || v71 > *(_QWORD *)&a1[*v3])
              goto LABEL_180;
            v72 = *(char *)(*(_QWORD *)&a1[*v5] + v70);
            *(_QWORD *)&a1[v69] = v71;
            if (v72 < 0)
            {
              v22 = v68++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_181;
          }
        case 0x14u:
          if (v15 != 2)
          {
            if ((v8 & 7) != 0)
              goto LABEL_235;
            while (1)
            {
              v73 = *v2;
              v74 = *(_QWORD *)&a1[v73];
              v75 = v74 + 1;
              if (v74 == -1 || v75 > *(_QWORD *)&a1[*v3])
                goto LABEL_180;
              v76 = *(char *)(*(_QWORD *)&a1[*v5] + v74);
              *(_QWORD *)&a1[v73] = v75;
              if (v76 < 0)
              {
                v77 = v15++;
                if (v77 <= 8)
                  continue;
              }
              goto LABEL_181;
            }
          }
          if (!PBReaderPlaceMark())
            goto LABEL_235;
LABEL_204:
          while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
          {
            v113 = a1[*v4];
            if (a1[*v4])
              break;
            while (1)
            {
              v114 = *v2;
              v115 = *(_QWORD *)&a1[v114];
              v116 = v115 + 1;
              if (v115 == -1 || v116 > *(_QWORD *)&a1[*v3])
                break;
              v117 = *(char *)(*(_QWORD *)&a1[*v5] + v115);
              *(_QWORD *)&a1[v114] = v116;
              if (v117 < 0)
              {
                v13 = v113++ >= 9;
                if (!v13)
                  continue;
              }
              goto LABEL_204;
            }
            a1[*v4] = 1;
          }
          goto LABEL_163;
        case 0x15u:
          if ((v8 & 7) != 0)
            goto LABEL_235;
          v78 = 0;
          while (1)
          {
            v79 = *v2;
            v80 = *(_QWORD *)&a1[v79];
            v81 = v80 + 1;
            if (v80 == -1 || v81 > *(_QWORD *)&a1[*v3])
              goto LABEL_180;
            v82 = *(char *)(*(_QWORD *)&a1[*v5] + v80);
            *(_QWORD *)&a1[v79] = v81;
            if (v82 < 0)
            {
              v22 = v78++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_181;
          }
        case 0x16u:
          if (v15 != 2)
          {
            if ((v8 & 7) != 0)
              goto LABEL_235;
            while (1)
            {
              v83 = *v2;
              v84 = *(_QWORD *)&a1[v83];
              v85 = v84 + 1;
              if (v84 == -1 || v85 > *(_QWORD *)&a1[*v3])
                goto LABEL_180;
              v86 = *(char *)(*(_QWORD *)&a1[*v5] + v84);
              *(_QWORD *)&a1[v83] = v85;
              if (v86 < 0)
              {
                v87 = v15++;
                if (v87 <= 8)
                  continue;
              }
              goto LABEL_181;
            }
          }
          if (!PBReaderPlaceMark())
            goto LABEL_235;
LABEL_214:
          while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
          {
            v118 = a1[*v4];
            if (a1[*v4])
              break;
            while (1)
            {
              v119 = *v2;
              v120 = *(_QWORD *)&a1[v119];
              v121 = v120 + 1;
              if (v120 == -1 || v121 > *(_QWORD *)&a1[*v3])
                break;
              v122 = *(char *)(*(_QWORD *)&a1[*v5] + v120);
              *(_QWORD *)&a1[v119] = v121;
              if (v122 < 0)
              {
                v13 = v118++ >= 9;
                if (!v13)
                  continue;
              }
              goto LABEL_214;
            }
            a1[*v4] = 1;
          }
          goto LABEL_163;
        case 0x17u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDSSearchEvChargingParametersIsValid(a1))
            goto LABEL_235;
          goto LABEL_163;
        case 0x18u:
          if (v15 == 2)
          {
            if (!PBReaderPlaceMark())
            {
LABEL_235:
              PBReaderRecallMark();
              return 0;
            }
LABEL_224:
            while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
            {
              v123 = a1[*v4];
              if (a1[*v4])
                break;
              while (1)
              {
                v124 = *v2;
                v125 = *(_QWORD *)&a1[v124];
                v126 = v125 + 1;
                if (v125 == -1 || v126 > *(_QWORD *)&a1[*v3])
                  break;
                v127 = *(char *)(*(_QWORD *)&a1[*v5] + v125);
                *(_QWORD *)&a1[v124] = v126;
                if (v127 < 0)
                {
                  v13 = v123++ >= 9;
                  if (!v13)
                    continue;
                }
                goto LABEL_224;
              }
              a1[*v4] = 1;
            }
LABEL_163:
            PBReaderRecallMark();
          }
          else
          {
            if ((v8 & 7) != 0)
              goto LABEL_235;
            while (1)
            {
              v88 = *v2;
              v89 = *(_QWORD *)&a1[v88];
              v90 = v89 + 1;
              if (v89 == -1 || v90 > *(_QWORD *)&a1[*v3])
                break;
              v91 = *(char *)(*(_QWORD *)&a1[*v5] + v89);
              *(_QWORD *)&a1[v88] = v90;
              if (v91 < 0)
              {
                v92 = v15++;
                if (v92 <= 8)
                  continue;
              }
              goto LABEL_181;
            }
LABEL_180:
            a1[*v4] = 1;
          }
LABEL_181:
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_233;
          break;
        case 0x19u:
          if (v15 == 2 && PBReaderPlaceMark() && GEOPDAutocompleteOriginationInfoIsValid(a1))
            goto LABEL_163;
          goto LABEL_235;
        case 0x1Au:
          if ((v8 & 7) != 0)
            goto LABEL_235;
          v93 = 0;
          while (1)
          {
            v94 = *v2;
            v95 = *(_QWORD *)&a1[v94];
            v96 = v95 + 1;
            if (v95 == -1 || v96 > *(_QWORD *)&a1[*v3])
              goto LABEL_180;
            v97 = *(char *)(*(_QWORD *)&a1[*v5] + v95);
            *(_QWORD *)&a1[v94] = v96;
            if (v97 < 0)
            {
              v22 = v93++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_181;
          }
        case 0x1Bu:
          if ((v8 & 7) != 0)
            goto LABEL_235;
          v98 = 0;
          while (1)
          {
            v99 = *v2;
            v100 = *(_QWORD *)&a1[v99];
            v101 = v100 + 1;
            if (v100 == -1 || v101 > *(_QWORD *)&a1[*v3])
              goto LABEL_180;
            v102 = *(char *)(*(_QWORD *)&a1[*v5] + v100);
            *(_QWORD *)&a1[v99] = v101;
            if (v102 < 0)
            {
              v22 = v98++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_181;
          }
        default:
LABEL_59:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_235;
          goto LABEL_181;
      }
    }
  }
LABEL_233:
  v128 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v128;
}

BOOL GEOPDAutocompleteParametersSiriSearchIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  int v32;
  _BOOL8 v33;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2)
            goto LABEL_56;
          goto LABEL_42;
        case 2u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDViewportInfoIsValid(a1))
            goto LABEL_56;
          PBReaderRecallMark();
          continue;
        case 3u:
          if ((v8 & 7) != 0)
            goto LABEL_56;
          v17 = 0;
          while (1)
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
              goto LABEL_52;
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if (v21 < 0)
            {
              v22 = v17++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_53;
          }
        case 4u:
          if ((v8 & 7) != 0)
            goto LABEL_56;
          v23 = 0;
          while (1)
          {
            v24 = *v2;
            v25 = *(_QWORD *)&a1[v24];
            v26 = v25 + 1;
            if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
              goto LABEL_52;
            v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
            *(_QWORD *)&a1[v24] = v26;
            if (v27 < 0)
            {
              v22 = v23++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_53;
          }
        case 5u:
          if (v15 == 2)
            goto LABEL_42;
          goto LABEL_56;
        case 6u:
          if ((v8 & 7) != 0)
            goto LABEL_56;
          v28 = 0;
          break;
        default:
LABEL_42:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_56:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v29 = *v2;
        v30 = *(_QWORD *)&a1[v29];
        v31 = v30 + 1;
        if (v30 == -1 || v31 > *(_QWORD *)&a1[*v3])
          break;
        v32 = *(char *)(*(_QWORD *)&a1[*v5] + v30);
        *(_QWORD *)&a1[v29] = v31;
        if (v32 < 0)
        {
          v22 = v28++ > 8;
          if (!v22)
            continue;
        }
        goto LABEL_53;
      }
LABEL_52:
      a1[*v4] = 1;
LABEL_53:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v33 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v33;
}

BOOL GEOPDAutocompleteParametersAddressOnlyIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  _BOOL8 v28;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2)
            goto LABEL_46;
          goto LABEL_20;
        case 2u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDViewportInfoIsValid(a1))
            goto LABEL_46;
          PBReaderRecallMark();
          continue;
        case 3u:
          if ((v8 & 7) != 0)
            goto LABEL_46;
          v17 = 0;
          while (1)
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
              goto LABEL_42;
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if (v21 < 0)
            {
              v22 = v17++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_43;
          }
        case 4u:
          if ((v8 & 7) != 0)
            goto LABEL_46;
          v23 = 0;
          break;
        default:
LABEL_20:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_46:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v24 = *v2;
        v25 = *(_QWORD *)&a1[v24];
        v26 = v25 + 1;
        if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
          break;
        v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
        *(_QWORD *)&a1[v24] = v26;
        if (v27 < 0)
        {
          v22 = v23++ > 8;
          if (!v22)
            continue;
        }
        goto LABEL_43;
      }
LABEL_42:
      a1[*v4] = 1;
LABEL_43:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v28 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v28;
}

BOOL GEOPDAutocompleteParametersVenueSearchIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  int v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  int v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  int v42;
  unsigned int v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  int v47;
  _BOOL8 v48;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2)
            goto LABEL_79;
          goto LABEL_75;
        case 2u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDViewportInfoIsValid(a1))
            goto LABEL_79;
          PBReaderRecallMark();
          continue;
        case 3u:
          if ((v8 & 7) != 0)
            goto LABEL_79;
          v17 = 0;
          while (1)
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
              goto LABEL_73;
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if (v21 < 0)
            {
              v22 = v17++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_76;
          }
        case 4u:
          if ((v8 & 7) != 0)
            goto LABEL_79;
          v23 = 0;
          while (1)
          {
            v24 = *v2;
            v25 = *(_QWORD *)&a1[v24];
            v26 = v25 + 1;
            if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
              goto LABEL_73;
            v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
            *(_QWORD *)&a1[v24] = v26;
            if (v27 < 0)
            {
              v22 = v23++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_76;
          }
        case 5u:
          if ((v8 & 7) != 0)
            goto LABEL_79;
          v28 = 0;
          while (1)
          {
            v29 = *v2;
            v30 = *(_QWORD *)&a1[v29];
            v31 = v30 + 1;
            if (v30 == -1 || v31 > *(_QWORD *)&a1[*v3])
              goto LABEL_73;
            v32 = *(char *)(*(_QWORD *)&a1[*v5] + v30);
            *(_QWORD *)&a1[v29] = v31;
            if (v32 < 0)
            {
              v22 = v28++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_76;
          }
        case 6u:
          if ((v8 & 7) != 0)
            goto LABEL_79;
          v33 = 0;
          while (1)
          {
            v34 = *v2;
            v35 = *(_QWORD *)&a1[v34];
            v36 = v35 + 1;
            if (v35 == -1 || v36 > *(_QWORD *)&a1[*v3])
              goto LABEL_73;
            v37 = *(char *)(*(_QWORD *)&a1[*v5] + v35);
            *(_QWORD *)&a1[v34] = v36;
            if (v37 < 0)
            {
              v22 = v33++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_76;
          }
        case 7u:
          if ((v8 & 7) != 0)
            goto LABEL_79;
          v38 = 0;
          while (1)
          {
            v39 = *v2;
            v40 = *(_QWORD *)&a1[v39];
            v41 = v40 + 1;
            if (v40 == -1 || v41 > *(_QWORD *)&a1[*v3])
              goto LABEL_73;
            v42 = *(char *)(*(_QWORD *)&a1[*v5] + v40);
            *(_QWORD *)&a1[v39] = v41;
            if (v42 < 0)
            {
              v22 = v38++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_76;
          }
        case 8u:
          if ((v8 & 7) != 0)
            goto LABEL_79;
          v43 = 0;
          break;
        case 9u:
          if (v15 == 2)
            goto LABEL_75;
          goto LABEL_79;
        default:
LABEL_75:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_79:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v44 = *v2;
        v45 = *(_QWORD *)&a1[v44];
        v46 = v45 + 1;
        if (v45 == -1 || v46 > *(_QWORD *)&a1[*v3])
          break;
        v47 = *(char *)(*(_QWORD *)&a1[*v5] + v45);
        *(_QWORD *)&a1[v44] = v46;
        if (v47 < 0)
        {
          v22 = v43++ > 8;
          if (!v22)
            continue;
        }
        goto LABEL_76;
      }
LABEL_73:
      a1[*v4] = 1;
LABEL_76:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v48 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v48;
}

BOOL GEOPDAutocompleteParametersBrandProfileSearchIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  _BOOL8 v28;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2)
            goto LABEL_46;
          goto LABEL_20;
        case 2u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDViewportInfoIsValid(a1))
            goto LABEL_46;
          PBReaderRecallMark();
          continue;
        case 3u:
          if ((v8 & 7) != 0)
            goto LABEL_46;
          v17 = 0;
          while (1)
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
              goto LABEL_42;
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if (v21 < 0)
            {
              v22 = v17++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_43;
          }
        case 4u:
          if ((v8 & 7) != 0)
            goto LABEL_46;
          v23 = 0;
          break;
        default:
LABEL_20:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_46:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v24 = *v2;
        v25 = *(_QWORD *)&a1[v24];
        v26 = v25 + 1;
        if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
          break;
        v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
        *(_QWORD *)&a1[v24] = v26;
        if (v27 < 0)
        {
          v22 = v23++ > 8;
          if (!v22)
            continue;
        }
        goto LABEL_43;
      }
LABEL_42:
      a1[*v4] = 1;
LABEL_43:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v28 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v28;
}

BOOL GEOPDAutocompleteParametersOfflineRegionSearchIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  _BOOL8 v28;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2)
            goto LABEL_46;
          goto LABEL_20;
        case 2u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDViewportInfoIsValid(a1))
            goto LABEL_46;
          PBReaderRecallMark();
          continue;
        case 3u:
          if ((v8 & 7) != 0)
            goto LABEL_46;
          v17 = 0;
          while (1)
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
              goto LABEL_42;
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if (v21 < 0)
            {
              v22 = v17++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_43;
          }
        case 4u:
          if ((v8 & 7) != 0)
            goto LABEL_46;
          v23 = 0;
          break;
        default:
LABEL_20:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_46:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v24 = *v2;
        v25 = *(_QWORD *)&a1[v24];
        v26 = v25 + 1;
        if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
          break;
        v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
        *(_QWORD *)&a1[v24] = v26;
        if (v27 < 0)
        {
          v22 = v23++ > 8;
          if (!v22)
            continue;
        }
        goto LABEL_43;
      }
LABEL_42:
      a1[*v4] = 1;
LABEL_43:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v28 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v28;
}

BOOL GEOPDAutocompleteParametersPoiAddressOnlyIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  _BOOL8 v28;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2)
            goto LABEL_46;
          goto LABEL_20;
        case 2u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDViewportInfoIsValid(a1))
            goto LABEL_46;
          PBReaderRecallMark();
          continue;
        case 3u:
          if ((v8 & 7) != 0)
            goto LABEL_46;
          v17 = 0;
          while (1)
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
              goto LABEL_42;
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if (v21 < 0)
            {
              v22 = v17++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_43;
          }
        case 4u:
          if ((v8 & 7) != 0)
            goto LABEL_46;
          v23 = 0;
          break;
        default:
LABEL_20:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_46:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v24 = *v2;
        v25 = *(_QWORD *)&a1[v24];
        v26 = v25 + 1;
        if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
          break;
        v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
        *(_QWORD *)&a1[v24] = v26;
        if (v27 < 0)
        {
          v22 = v23++ > 8;
          if (!v22)
            continue;
        }
        goto LABEL_43;
      }
LABEL_42:
      a1[*v4] = 1;
LABEL_43:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v28 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v28;
}

BOOL GEOPDAutocompleteParametersCollectionOnlyIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unint64_t v17;
  _BOOL8 v18;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_33;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        goto LABEL_33;
      v17 = v8 >> 3;
      if ((v8 >> 3) == 3)
        break;
      if ((_DWORD)v17 == 2)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDViewportInfoIsValid(a1))
          goto LABEL_34;
LABEL_30:
        PBReaderRecallMark();
        goto LABEL_32;
      }
      if ((_DWORD)v17 == 1 && v15 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_34:
        PBReaderRecallMark();
        return 0;
      }
LABEL_32:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_33;
    }
    if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDMapsIdentifierIsValid(a1))
      goto LABEL_34;
    goto LABEL_30;
  }
LABEL_33:
  v18 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v18;
}

void sub_188AE444C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDAutocompleteParametersIsDirty(uint64_t a1)
{
  unsigned int v2;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 160));
  v2 = *(_DWORD *)(a1 + 172);
  if ((v2 & 0x40000) != 0)
    return 1;
  if ((v2 & 0x1000) != 0)
  {
    if (GEOPDAutocompleteParametersFullEntriesOnlyIsDirty(*(_QWORD *)(a1 + 104)))
      return 1;
    v2 = *(_DWORD *)(a1 + 172);
  }
  if ((v2 & 0x80) != 0)
  {
    if (GEOPDAutocompleteParametersAllEntriesIsDirty(*(_QWORD *)(a1 + 64)))
      return 1;
    v2 = *(_DWORD *)(a1 + 172);
  }
  if ((v2 & 0x2000) != 0)
  {
    if (GEOPDAutocompleteParametersLocalitiesAndLandmarksIsDirty(*(_QWORD *)(a1 + 112)))
      return 1;
    v2 = *(_DWORD *)(a1 + 172);
  }
  if ((v2 & 0x40) != 0)
  {
    if ((GEOPDAutocompleteParametersAllEntriesWithBrowseIsDirty(*(os_unfair_lock_s **)(a1 + 56)) & 1) != 0)
      return 1;
    v2 = *(_DWORD *)(a1 + 172);
  }
  if ((v2 & 0x10000) != 0)
  {
    if (GEOPDAutocompleteParametersSiriSearchIsDirty(*(_QWORD *)(a1 + 136)))
      return 1;
    v2 = *(_DWORD *)(a1 + 172);
  }
  if ((v2 & 0x20) != 0)
  {
    if (GEOPDAutocompleteParametersAddressOnlyIsDirty(*(_QWORD *)(a1 + 48)))
      return 1;
    v2 = *(_DWORD *)(a1 + 172);
  }
  if ((v2 & 0x20000) != 0)
  {
    if (GEOPDAutocompleteParametersVenueSearchIsDirty(*(_QWORD *)(a1 + 144)))
      return 1;
    v2 = *(_DWORD *)(a1 + 172);
  }
  if ((v2 & 0x400) != 0)
  {
    if (GEOPDAutocompleteParametersBrandProfileSearchIsDirty(*(_QWORD *)(a1 + 88)))
      return 1;
    v2 = *(_DWORD *)(a1 + 172);
  }
  if ((v2 & 0x4000) != 0)
  {
    if (GEOPDAutocompleteParametersOfflineRegionSearchIsDirty(*(_QWORD *)(a1 + 120)))
      return 1;
    v2 = *(_DWORD *)(a1 + 172);
  }
  if ((v2 & 0x8000) != 0)
  {
    if (GEOPDAutocompleteParametersPoiAddressOnlyIsDirty(*(_QWORD *)(a1 + 128)))
      return 1;
    v2 = *(_DWORD *)(a1 + 172);
  }
  if ((v2 & 0x100) == 0)
    goto LABEL_35;
  if ((GEOPDAutocompleteFilterIsDirty(*(os_unfair_lock_s **)(a1 + 72)) & 1) != 0)
    return 1;
  v2 = *(_DWORD *)(a1 + 172);
LABEL_35:
  if ((v2 & 0x200) != 0)
    return 1;
  if ((v2 & 0x800) != 0)
  {
    if (GEOPDAutocompleteParametersCollectionOnlyIsDirty(*(_QWORD *)(a1 + 96)))
      return 1;
    v2 = *(_DWORD *)(a1 + 172);
  }
  return (v2 >> 4) & 1;
}

os_unfair_lock_s *GEOPDAutocompleteParametersIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOPDAutocompleteParametersIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 40);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void GEOPDAutocompleteParametersClearSensitiveFields(void *a1, uint64_t a2, int a3)
{
  void *v5;
  int HasSensitiveFields;
  void *v7;
  id v8;

  if (a3
    && objc_msgSend(a1, "hasAllEntriesWithBrowse")
    && (objc_msgSend(a1, "allEntriesWithBrowse"),
        v5 = (void *)objc_claimAutoreleasedReturnValue(),
        HasSensitiveFields = GEOPDAutocompleteParametersAllEntriesWithBrowseHasSensitiveFields(v5, a2),
        v5,
        HasSensitiveFields))
  {
    objc_msgSend(a1, "allEntriesWithBrowse");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = (id)objc_msgSend(v7, "copy");

    GEOPDAutocompleteParametersAllEntriesWithBrowseClearSensitiveFields(v8, a2, 0);
    objc_msgSend(a1, "setAllEntriesWithBrowse:", v8);
  }
  else
  {
    objc_msgSend(a1, "allEntriesWithBrowse");
    v8 = (id)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "clearSensitiveFields:", a2);
  }

}

uint64_t GEOPDAutocompleteParametersAllEntriesWithBrowseHasSensitiveFields(void *a1, uint64_t a2)
{
  void *v4;
  uint64_t HasSensitiveFields;
  void *v6;

  if (!a1)
    return 0;
  objc_msgSend(a1, "categorySuggestionEntry");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  if ((GEOPDAutocompleteEntryHasSensitiveFields(v4, a2) & 1) != 0)
  {
    HasSensitiveFields = 1;
  }
  else
  {
    objc_msgSend(a1, "querySuggestionEntry");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    HasSensitiveFields = GEOPDAutocompleteEntryHasSensitiveFields(v6, a2);

  }
  return HasSensitiveFields;
}

void GEOPDAutocompleteParametersAllEntriesWithBrowseClearSensitiveFields(void *a1, uint64_t a2, int a3)
{
  void *v5;
  unsigned int v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  unsigned int v12;
  void *v13;
  void *v14;
  id v15;

  if (!a3)
  {
    objc_msgSend(a1, "categorySuggestionEntry");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "clearSensitiveFields:", a2);

LABEL_10:
    objc_msgSend(a1, "querySuggestionEntry");
    v15 = (id)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v15, "clearSensitiveFields:", a2);
    goto LABEL_11;
  }
  if (objc_msgSend(a1, "hasCategorySuggestionEntry")
    && (objc_msgSend(a1, "categorySuggestionEntry"),
        v5 = (void *)objc_claimAutoreleasedReturnValue(),
        v6 = GEOPDAutocompleteEntryHasSensitiveFields(v5, a2),
        v5,
        v6))
  {
    objc_msgSend(a1, "categorySuggestionEntry");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = (void *)objc_msgSend(v7, "copy");

    objc_msgSend(v8, "business");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "clearSensitiveFields:", a2);

    objc_msgSend(a1, "setCategorySuggestionEntry:", v8);
  }
  else
  {
    objc_msgSend(a1, "categorySuggestionEntry");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "clearSensitiveFields:", a2);
  }

  if (!objc_msgSend(a1, "hasQuerySuggestionEntry"))
    goto LABEL_10;
  objc_msgSend(a1, "querySuggestionEntry");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v12 = GEOPDAutocompleteEntryHasSensitiveFields(v11, a2);

  if (!v12)
    goto LABEL_10;
  objc_msgSend(a1, "querySuggestionEntry");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v15 = (id)objc_msgSend(v13, "copy");

  objc_msgSend(v15, "business");
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v14, "clearSensitiveFields:", a2);

  objc_msgSend(a1, "setQuerySuggestionEntry:", v15);
LABEL_11:

}

void sub_188AE50DC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188AE59A8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188AE5D90(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAutocompleteParametersAddressOnlyReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  int *v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  BOOL v28;
  int v29;
  unint64_t v31;
  BOOL v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  uint64_t v37;
  void *v38;
  id v39;
  void *v40;
  int v41;
  GEOPDViewportInfo *v42;
  char v43;
  unsigned int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  char v50;
  unsigned int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  char v56;
  char v57;
  char v58;
  int v59;
  int v60;
  char v61;
  void *v62;
  int v64;
  int *v65;
  char v66;
  char v67;
  char v68;
  char v69;
  char v70;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = ((*(unsigned __int8 *)(a1 + 60) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 4) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 2) & 1);
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v12;
        v13 = v7;
        goto LABEL_8;
      case -3:
        v9 = 1;
        goto LABEL_7;
      case -2:
        v13 = v7;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 != 0;
        v66 = v16 & ~(_BYTE)v11 | v8;
        v67 = v9;
        v68 = v16 | v11 | v66;
        if ((((v16 | v11) | v9) & 1) != 0)
          v17 = 0;
        else
          v17 = a3;
        v69 = (v17 == 0) | v16 | v11;
        v70 = v16 | v11;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v7;
        v14 = v8;
LABEL_8:
        v15 = v11;
LABEL_10:
        ++v10;
        v7 = v13;
        v8 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v19))
      goto LABEL_87;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0)
        goto LABEL_25;
      v21 += 7;
      v28 = v22++ >= 9;
      if (v28)
      {
        v23 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_25:
    v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_27:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_87:
      v64 = 1;
      goto LABEL_88;
    }
    v31 = v23 >> 3;
    v32 = v70;
    if ((v69 & 1) == 0)
    {
      v33 = v17;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if (!v32)
          goto LABEL_70;
        if ((*(_BYTE *)(a1 + 60) & 8) == 0)
        {
          PBReaderReadString();
          v37 = objc_claimAutoreleasedReturnValue();
          v38 = *(void **)(a1 + 24);
          *(_QWORD *)(a1 + 24) = v37;
          goto LABEL_53;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_107;
        v58 = 16 * *(_BYTE *)(a1 + 60);
        goto LABEL_84;
      case 2:
        if (!v32)
          goto LABEL_70;
        if ((*(_BYTE *)(a1 + 60) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_107;
          v58 = 8 * *(_BYTE *)(a1 + 60);
LABEL_84:
          v10 += v58 >> 7;
          goto LABEL_85;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_107;
        v42 = objc_alloc_init(GEOPDViewportInfo);
        if (GEOPDViewportInfoReadAllFrom((uint64_t)v42, (void *)v3))
        {
          PBReaderRecallMark();
          v38 = *(void **)(a1 + 32);
          *(_QWORD *)(a1 + 32) = v42;
LABEL_53:

          --v10;
LABEL_85:
          v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_86:
          if (!(v68 & 1 | (v10 != 0)))
            goto LABEL_87;
          continue;
        }

LABEL_107:
        v64 = 0;
        v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_88:
        v65 = &OBJC_IVAR___GEOTransitVehicleInfo__pickupDropoffType;
        if ((v66 & 1) != 0)
LABEL_89:
          *(_BYTE *)(a1 + v65[874]) |= 4u;
        if (v70 & 1 | ((v64 & 1) == 0))
        {
          *(_BYTE *)(a1 + v65[874]) |= 8u;
          *(_BYTE *)(a1 + v65[874]) |= 0x10u;
          goto LABEL_100;
        }
        if (v17)
        {
          while (2)
          {
            while (1)
            {
              v60 = *v17++;
              v59 = v60;
              if (v60 == 1)
                break;
              if (v59 == 2)
              {
                v61 = 16;
                goto LABEL_99;
              }
              if (!v59)
                goto LABEL_100;
            }
            v61 = 8;
LABEL_99:
            *(_BYTE *)(a1 + v65[874]) |= v61;
            continue;
          }
        }
LABEL_100:
        if (v64)
          v3 = *(_BYTE *)(v3 + *v19) == 0;
        else
          v3 = 0;
        if ((v70 & 1) != 0)
        {
          v62 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      case 3:
        if ((v67 & 1) == 0)
          goto LABEL_70;
        v43 = 0;
        v44 = 0;
        v45 = 0;
        *(_BYTE *)(a1 + 60) |= 1u;
        while (2)
        {
          v46 = *v18;
          v47 = *(_QWORD *)(v3 + v46);
          v48 = v47 + 1;
          if (v47 == -1 || v48 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v19) = 1;
          }
          else
          {
            v49 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v47);
            *(_QWORD *)(v3 + v46) = v48;
            v45 |= (unint64_t)(v49 & 0x7F) << v43;
            if (v49 < 0)
            {
              v43 += 7;
              v28 = v44++ >= 9;
              if (v28)
              {
                LODWORD(v45) = 0;
                goto LABEL_75;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v19))
          LODWORD(v45) = 0;
LABEL_75:
        *(_DWORD *)(a1 + 52) = v45;
        goto LABEL_86;
      case 4:
        if ((v67 & 1) == 0)
          goto LABEL_70;
        v50 = 0;
        v51 = 0;
        v52 = 0;
        *(_BYTE *)(a1 + 60) |= 2u;
        while (2)
        {
          v53 = *v18;
          v54 = *(_QWORD *)(v3 + v53);
          v55 = v54 + 1;
          if (v54 == -1 || v55 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v19) = 1;
          }
          else
          {
            v56 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v54);
            *(_QWORD *)(v3 + v53) = v55;
            v52 |= (unint64_t)(v56 & 0x7F) << v50;
            if (v56 < 0)
            {
              v50 += 7;
              v28 = v51++ >= 9;
              if (v28)
              {
                v52 = 0;
                goto LABEL_79;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v19))
          v52 = 0;
LABEL_79:
        *(_BYTE *)(a1 + 56) = v52 != 0;
        goto LABEL_86;
      default:
        if ((v66 & 1) == 0 || (*(_BYTE *)(a1 + 60) & 4) != 0)
        {
LABEL_70:
          v57 = PBReaderSkipValueWithTag();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if ((v57 & 1) == 0)
          {
            v64 = 0;
            goto LABEL_88;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v39 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v40 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v39;

          }
          v41 = PBUnknownFieldAdd();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if (!v41)
          {
            v64 = 0;
            v65 = &OBJC_IVAR___GEOTransitVehicleInfo__pickupDropoffType;
            goto LABEL_89;
          }
        }
        goto LABEL_86;
    }
  }
}

void sub_188AE6594(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188AE6E1C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAutocompleteParametersAddressOnlyReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDAutocompleteParametersAddressOnlyReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDAutocompleteParametersAddressOnlyReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDAutocompleteParametersAddressOnlyReadAllFrom_initialTag;
  Specified = GEOPDAutocompleteParametersAddressOnlyReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    objc_msgSend(*(id *)(a1 + 32), "readAll:", 1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_188AE6FC0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAutocompleteParametersAddressOnlyReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOPDAutocompleteParametersAddressOnlyReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188AE7020(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188AE7200(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDAutocompleteParametersAddressOnlyIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v2 = (*(_BYTE *)(a1 + 60) & 0x38) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return v2;
}

void sub_188AE757C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188AE78C0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188AE7B30(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAutocompleteParametersAllEntriesReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  int *v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  BOOL v28;
  int v29;
  unint64_t v31;
  BOOL v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  uint64_t v37;
  void *v38;
  id v39;
  void *v40;
  int v41;
  GEOPDViewportInfo *v42;
  char v43;
  unsigned int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  char v50;
  unsigned int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  char v56;
  char v57;
  char v58;
  int v59;
  int v60;
  char v61;
  void *v62;
  int v64;
  int *v65;
  char v66;
  char v67;
  char v68;
  char v69;
  char v70;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = ((*(unsigned __int8 *)(a1 + 60) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 4) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 2) & 1);
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v12;
        v13 = v7;
        goto LABEL_8;
      case -3:
        v9 = 1;
        goto LABEL_7;
      case -2:
        v13 = v7;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 != 0;
        v66 = v16 & ~(_BYTE)v11 | v8;
        v67 = v9;
        v68 = v16 | v11 | v66;
        if ((((v16 | v11) | v9) & 1) != 0)
          v17 = 0;
        else
          v17 = a3;
        v69 = (v17 == 0) | v16 | v11;
        v70 = v16 | v11;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v7;
        v14 = v8;
LABEL_8:
        v15 = v11;
LABEL_10:
        ++v10;
        v7 = v13;
        v8 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v19))
      goto LABEL_87;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0)
        goto LABEL_25;
      v21 += 7;
      v28 = v22++ >= 9;
      if (v28)
      {
        v23 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_25:
    v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_27:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_87:
      v64 = 1;
      goto LABEL_88;
    }
    v31 = v23 >> 3;
    v32 = v70;
    if ((v69 & 1) == 0)
    {
      v33 = v17;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if (!v32)
          goto LABEL_70;
        if ((*(_BYTE *)(a1 + 60) & 8) == 0)
        {
          PBReaderReadString();
          v37 = objc_claimAutoreleasedReturnValue();
          v38 = *(void **)(a1 + 24);
          *(_QWORD *)(a1 + 24) = v37;
          goto LABEL_53;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_107;
        v58 = 16 * *(_BYTE *)(a1 + 60);
        goto LABEL_84;
      case 2:
        if (!v32)
          goto LABEL_70;
        if ((*(_BYTE *)(a1 + 60) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_107;
          v58 = 8 * *(_BYTE *)(a1 + 60);
LABEL_84:
          v10 += v58 >> 7;
          goto LABEL_85;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_107;
        v42 = objc_alloc_init(GEOPDViewportInfo);
        if (GEOPDViewportInfoReadAllFrom((uint64_t)v42, (void *)v3))
        {
          PBReaderRecallMark();
          v38 = *(void **)(a1 + 32);
          *(_QWORD *)(a1 + 32) = v42;
LABEL_53:

          --v10;
LABEL_85:
          v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_86:
          if (!(v68 & 1 | (v10 != 0)))
            goto LABEL_87;
          continue;
        }

LABEL_107:
        v64 = 0;
        v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_88:
        v65 = &OBJC_IVAR___GEOTransitVehicleInfo__pickupDropoffType;
        if ((v66 & 1) != 0)
LABEL_89:
          *(_BYTE *)(a1 + v65[884]) |= 4u;
        if (v70 & 1 | ((v64 & 1) == 0))
        {
          *(_BYTE *)(a1 + v65[884]) |= 8u;
          *(_BYTE *)(a1 + v65[884]) |= 0x10u;
          goto LABEL_100;
        }
        if (v17)
        {
          while (2)
          {
            while (1)
            {
              v60 = *v17++;
              v59 = v60;
              if (v60 == 1)
                break;
              if (v59 == 2)
              {
                v61 = 16;
                goto LABEL_99;
              }
              if (!v59)
                goto LABEL_100;
            }
            v61 = 8;
LABEL_99:
            *(_BYTE *)(a1 + v65[884]) |= v61;
            continue;
          }
        }
LABEL_100:
        if (v64)
          v3 = *(_BYTE *)(v3 + *v19) == 0;
        else
          v3 = 0;
        if ((v70 & 1) != 0)
        {
          v62 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      case 3:
        if ((v67 & 1) == 0)
          goto LABEL_70;
        v43 = 0;
        v44 = 0;
        v45 = 0;
        *(_BYTE *)(a1 + 60) |= 1u;
        while (2)
        {
          v46 = *v18;
          v47 = *(_QWORD *)(v3 + v46);
          v48 = v47 + 1;
          if (v47 == -1 || v48 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v19) = 1;
          }
          else
          {
            v49 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v47);
            *(_QWORD *)(v3 + v46) = v48;
            v45 |= (unint64_t)(v49 & 0x7F) << v43;
            if (v49 < 0)
            {
              v43 += 7;
              v28 = v44++ >= 9;
              if (v28)
              {
                LODWORD(v45) = 0;
                goto LABEL_75;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v19))
          LODWORD(v45) = 0;
LABEL_75:
        *(_DWORD *)(a1 + 52) = v45;
        goto LABEL_86;
      case 4:
        if ((v67 & 1) == 0)
          goto LABEL_70;
        v50 = 0;
        v51 = 0;
        v52 = 0;
        *(_BYTE *)(a1 + 60) |= 2u;
        while (2)
        {
          v53 = *v18;
          v54 = *(_QWORD *)(v3 + v53);
          v55 = v54 + 1;
          if (v54 == -1 || v55 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v19) = 1;
          }
          else
          {
            v56 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v54);
            *(_QWORD *)(v3 + v53) = v55;
            v52 |= (unint64_t)(v56 & 0x7F) << v50;
            if (v56 < 0)
            {
              v50 += 7;
              v28 = v51++ >= 9;
              if (v28)
              {
                v52 = 0;
                goto LABEL_79;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v19))
          v52 = 0;
LABEL_79:
        *(_BYTE *)(a1 + 56) = v52 != 0;
        goto LABEL_86;
      default:
        if ((v66 & 1) == 0 || (*(_BYTE *)(a1 + 60) & 4) != 0)
        {
LABEL_70:
          v57 = PBReaderSkipValueWithTag();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if ((v57 & 1) == 0)
          {
            v64 = 0;
            goto LABEL_88;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v39 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v40 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v39;

          }
          v41 = PBUnknownFieldAdd();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if (!v41)
          {
            v64 = 0;
            v65 = &OBJC_IVAR___GEOTransitVehicleInfo__pickupDropoffType;
            goto LABEL_89;
          }
        }
        goto LABEL_86;
    }
  }
}

void sub_188AE8334(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188AE89E4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAutocompleteParametersAllEntriesReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDAutocompleteParametersAllEntriesReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDAutocompleteParametersAllEntriesReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDAutocompleteParametersAllEntriesReadAllFrom_initialTag;
  Specified = GEOPDAutocompleteParametersAllEntriesReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    objc_msgSend(*(id *)(a1 + 32), "readAll:", 1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_188AE8B88(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAutocompleteParametersAllEntriesReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOPDAutocompleteParametersAllEntriesReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188AE8BE8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188AE8DC8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDAutocompleteParametersAllEntriesIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v2 = (*(_BYTE *)(a1 + 60) & 0x38) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return v2;
}

void sub_188AE9144(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188AE9488(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188AE9780(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAutocompleteParametersAllEntriesWithBrowseReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint32x4_t v13;
  int8x16_t v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  char v20;
  char v21;
  int *v22;
  int *v23;
  int v24;
  char v25;
  int *v26;
  int *v27;
  char v28;
  unsigned int v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  BOOL v35;
  int v36;
  int v37;
  unint64_t v39;
  BOOL v40;
  int *v41;
  int v42;
  int v43;
  BOOL v44;
  uint64_t v45;
  uint64_t v46;
  GEOPDViewportInfo *v47;
  uint64_t v48;
  char v49;
  unsigned int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  char v55;
  char v56;
  unsigned int v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  char v62;
  void *v63;
  char v64;
  unsigned int v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  char v70;
  id v71;
  void *v72;
  int v73;
  char v74;
  unsigned int v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  char v80;
  char v81;
  unsigned int v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  char v87;
  int *v88;
  char v89;
  unsigned int v90;
  uint64_t v91;
  int *v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  char v96;
  char v97;
  unsigned int v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  char v103;
  char v104;
  unsigned int v105;
  uint64_t v106;
  uint64_t v107;
  unint64_t v108;
  char v109;
  char v110;
  unsigned int v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  unint64_t v115;
  char v116;
  int *v117;
  char v118;
  unsigned int v119;
  uint64_t v120;
  int *v121;
  uint64_t v122;
  uint64_t v123;
  unint64_t v124;
  char v125;
  char v126;
  unsigned int v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  unint64_t v131;
  char v132;
  int *v133;
  char v134;
  unsigned int v135;
  uint64_t v136;
  int *v137;
  uint64_t v138;
  uint64_t v139;
  unint64_t v140;
  char v141;
  char v142;
  unsigned int v143;
  uint64_t v144;
  uint64_t v145;
  unint64_t v146;
  char v147;
  int *v148;
  char v149;
  unsigned int v150;
  uint64_t v151;
  int *v152;
  uint64_t v153;
  uint64_t v154;
  unint64_t v155;
  char v156;
  int *v157;
  char v158;
  unsigned int v159;
  uint64_t v160;
  int *v161;
  uint64_t v162;
  uint64_t v163;
  unint64_t v164;
  char v165;
  char v166;
  unsigned int v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  unint64_t v171;
  char v172;
  char v173;
  unsigned int v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  unint64_t v178;
  char v179;
  char v180;
  uint64_t v181;
  BOOL v182;
  uint64_t v183;
  int v184;
  char v185;
  unsigned int v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  unint64_t v190;
  char v191;
  char v192;
  unsigned int v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  unint64_t v197;
  char v198;
  char v199;
  unsigned int v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  unint64_t v204;
  char v205;
  char v206;
  unsigned int v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  unint64_t v211;
  char v212;
  char v213;
  unsigned int v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  unint64_t v218;
  char v219;
  int v220;
  int v221;
  void *v222;
  char v224;
  char v225;
  char v226;
  char v227;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 224));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 220);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 216));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = *(_DWORD *)(a1 + 252);
  v13 = (uint32x4_t)vdupq_n_s32(v12);
  v14.i64[0] = 0x100000001;
  v14.i64[1] = 0x100000001;
  v15 = vaddvq_s32(vaddq_s32(vaddq_s32((int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v13, (uint32x4_t)xmmword_189CC9CE0), v14), (int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v13, (uint32x4_t)xmmword_189CC9CF0), v14)), (int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v13, (uint32x4_t)xmmword_189CC9D00), v14)))+ ((v12 >> 15) & 1)+ ((v12 >> 18) & 1)+ ((v12 >> 12) & 1);
  while (2)
  {
    v16 = 1;
    v17 = 1;
    v18 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v15;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v17 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v19 = v15 > 0xA;
        v20 = v19 & ~(_BYTE)v11 | v9;
        v21 = v19 | v11;
        v22 = (int *)MEMORY[0x1E0D82BF0];
        if ((((v19 | v11) | v8) & 1) != 0)
          v23 = 0;
        else
          v23 = a3;
        v24 = 1;
        v25 = v19 & ~(_BYTE)v11 | v9;
        if (*(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(v3 + *v6))
          goto LABEL_381;
        v224 = v20;
        v226 = v21 | v20;
        v227 = (v23 == 0) | v21;
        v26 = (int *)MEMORY[0x1E0D82BC8];
        v27 = (int *)MEMORY[0x1E0D82BB8];
        v225 = v21;
        break;
      default:
        ++v15;
LABEL_7:
        v16 = v9;
LABEL_8:
        v17 = v10;
        v18 = v11;
LABEL_10:
        ++v7;
        v9 = v16;
        v10 = v17;
        v11 = v18;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_BYTE *)(v3 + *v26))
      goto LABEL_379;
    v28 = 0;
    v29 = 0;
    v30 = 0;
    while (1)
    {
      v31 = *v22;
      v32 = *(_QWORD *)(v3 + v31);
      v33 = v32 + 1;
      if (v32 == -1 || v33 > *(_QWORD *)(v3 + *v6))
        break;
      v34 = *(_BYTE *)(*(_QWORD *)(v3 + *v27) + v32);
      *(_QWORD *)(v3 + v31) = v33;
      v30 |= (unint64_t)(v34 & 0x7F) << v28;
      if ((v34 & 0x80) == 0)
        goto LABEL_25;
      v28 += 7;
      v35 = v29++ >= 9;
      if (v35)
      {
        v30 = 0;
        v36 = *(unsigned __int8 *)(v3 + *v26);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v26) = 1;
LABEL_25:
    v36 = *(unsigned __int8 *)(v3 + *v26);
    if (*(_BYTE *)(v3 + *v26))
      v30 = 0;
LABEL_27:
    v37 = v30 & 7;
    if (v36 || v37 == 4)
    {
LABEL_379:
      v24 = 1;
      goto LABEL_380;
    }
    v39 = v30 >> 3;
    v40 = v21;
    if ((v227 & 1) == 0)
    {
      v41 = v23;
      do
      {
        v43 = *v41++;
        v42 = v43;
        v40 = v43 != 0;
        if (v43)
          v44 = v42 == (_DWORD)v39;
        else
          v44 = 1;
      }
      while (!v44);
    }
    switch((int)v39)
    {
      case 1:
        if (!v40)
          goto LABEL_267;
        if ((*(_BYTE *)(a1 + 254) & 0x80) == 0)
        {
          PBReaderReadString();
          v45 = objc_claimAutoreleasedReturnValue();
          v46 = 184;
          goto LABEL_66;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_408;
        v184 = (int)(*(_DWORD *)(a1 + 252) << 8) >> 31;
        goto LABEL_337;
      case 2:
        if (!v40)
          goto LABEL_267;
        if ((*(_BYTE *)(a1 + 255) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_408;
          v184 = (32 * *(_DWORD *)(a1 + 252)) >> 31;
          goto LABEL_337;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_408;
        v47 = objc_alloc_init(GEOPDViewportInfo);
        if (!GEOPDViewportInfoReadAllFrom((uint64_t)v47, (void *)v3))
          goto LABEL_407;
        PBReaderRecallMark();
        v48 = 208;
        goto LABEL_242;
      case 3:
        if ((v8 & 1) == 0)
          goto LABEL_267;
        v49 = 0;
        v50 = 0;
        v51 = 0;
        *(_DWORD *)(a1 + 252) |= 2u;
        while (2)
        {
          v52 = *v22;
          v53 = *(_QWORD *)(v3 + v52);
          v54 = v53 + 1;
          if (v53 == -1 || v54 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v26) = 1;
          }
          else
          {
            v55 = *(_BYTE *)(*(_QWORD *)(v3 + *v27) + v53);
            *(_QWORD *)(v3 + v52) = v54;
            v51 |= (unint64_t)(v55 & 0x7F) << v49;
            if (v55 < 0)
            {
              v49 += 7;
              v35 = v50++ >= 9;
              if (v35)
              {
                LODWORD(v51) = 0;
                goto LABEL_272;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v26))
          LODWORD(v51) = 0;
LABEL_272:
        v181 = 232;
        goto LABEL_309;
      case 4:
        if ((v8 & 1) == 0)
          goto LABEL_267;
        v56 = 0;
        v57 = 0;
        v58 = 0;
        *(_DWORD *)(a1 + 252) |= 8u;
        while (2)
        {
          v59 = *v22;
          v60 = *(_QWORD *)(v3 + v59);
          v61 = v60 + 1;
          if (v60 == -1 || v61 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v26) = 1;
          }
          else
          {
            v62 = *(_BYTE *)(*(_QWORD *)(v3 + *v27) + v60);
            *(_QWORD *)(v3 + v59) = v61;
            v58 |= (unint64_t)(v62 & 0x7F) << v56;
            if (v62 < 0)
            {
              v56 += 7;
              v35 = v57++ >= 9;
              if (v35)
              {
                v58 = 0;
                goto LABEL_276;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v26))
          v58 = 0;
LABEL_276:
        v182 = v58 != 0;
        v183 = 240;
        goto LABEL_318;
      case 5:
        if (!v40)
          goto LABEL_267;
        if ((*(_BYTE *)(a1 + 254) & 8) == 0)
        {
          PBReaderReadData();
          v45 = objc_claimAutoreleasedReturnValue();
          v46 = 152;
LABEL_66:
          v63 = *(void **)(a1 + v46);
          *(_QWORD *)(a1 + v46) = v45;
          goto LABEL_243;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_408;
        v184 = (int)(*(_DWORD *)(a1 + 252) << 12) >> 31;
        goto LABEL_337;
      case 6:
        if (!v40)
          goto LABEL_267;
        if ((*(_BYTE *)(a1 + 254) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_408;
          v184 = (int)(*(_DWORD *)(a1 + 252) << 11) >> 31;
          goto LABEL_337;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_408;
        v47 = objc_alloc_init(GEOPDAutocompleteEntry);
        if (!GEOPDAutocompleteEntryReadAllFrom((uint64_t)v47, (void *)v3, v10 & 1))
          goto LABEL_407;
        PBReaderRecallMark();
        v48 = 160;
        goto LABEL_242;
      case 7:
        if ((v8 & 1) == 0)
          goto LABEL_267;
        v64 = 0;
        v65 = 0;
        v66 = 0;
        *(_DWORD *)(a1 + 252) |= 0x10u;
        while (2)
        {
          v67 = *v22;
          v68 = *(_QWORD *)(v3 + v67);
          v69 = v68 + 1;
          if (v68 == -1 || v69 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v26) = 1;
          }
          else
          {
            v70 = *(_BYTE *)(*(_QWORD *)(v3 + *v27) + v68);
            *(_QWORD *)(v3 + v67) = v69;
            v66 |= (unint64_t)(v70 & 0x7F) << v64;
            if (v70 < 0)
            {
              v64 += 7;
              v35 = v65++ >= 9;
              if (v35)
              {
                v66 = 0;
                goto LABEL_280;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v26))
          v66 = 0;
LABEL_280:
        v182 = v66 != 0;
        v183 = 241;
        goto LABEL_318;
      case 8:
        if (!v40)
          goto LABEL_267;
        if ((*(_BYTE *)(a1 + 255) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_408;
          v184 = (int)(*(_DWORD *)(a1 + 252) << 6) >> 31;
          goto LABEL_337;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_408;
        v47 = objc_alloc_init(GEOPDVenueIdentifier);
        if (!GEOPDVenueIdentifierReadAllFrom((uint64_t)v47, (void *)v3, v10 & 1))
          goto LABEL_407;
        PBReaderRecallMark();
        v48 = 200;
        goto LABEL_242;
      case 10:
        if ((v8 & 1) == 0)
          goto LABEL_267;
        v74 = 0;
        v75 = 0;
        v76 = 0;
        *(_DWORD *)(a1 + 252) |= 0x80u;
        while (2)
        {
          v77 = *v22;
          v78 = *(_QWORD *)(v3 + v77);
          v79 = v78 + 1;
          if (v78 == -1 || v79 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v26) = 1;
          }
          else
          {
            v80 = *(_BYTE *)(*(_QWORD *)(v3 + *v27) + v78);
            *(_QWORD *)(v3 + v77) = v79;
            v76 |= (unint64_t)(v80 & 0x7F) << v74;
            if (v80 < 0)
            {
              v74 += 7;
              v35 = v75++ >= 9;
              if (v35)
              {
                v76 = 0;
                goto LABEL_284;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v26))
          v76 = 0;
LABEL_284:
        v182 = v76 != 0;
        v183 = 244;
        goto LABEL_318;
      case 11:
        if (!v40)
          goto LABEL_267;
        if ((*(_BYTE *)(a1 + 255) & 1) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_408;
          v184 = (int)(*(_DWORD *)(a1 + 252) << 7) >> 31;
          goto LABEL_337;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_408;
        v47 = objc_alloc_init(GEOPDRetainedSearchMetadata);
        if (!GEOPDRetainedSearchMetadataReadAllFrom((uint64_t)v47, (void *)v3, v10 & 1))
          goto LABEL_407;
        PBReaderRecallMark();
        v48 = 192;
        goto LABEL_242;
      case 12:
        if ((v8 & 1) == 0)
          goto LABEL_267;
        v81 = 0;
        v82 = 0;
        v83 = 0;
        *(_DWORD *)(a1 + 252) |= 0x800u;
        while (2)
        {
          v84 = *v22;
          v85 = *(_QWORD *)(v3 + v84);
          v86 = v85 + 1;
          if (v85 == -1 || v86 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v26) = 1;
          }
          else
          {
            v87 = *(_BYTE *)(*(_QWORD *)(v3 + *v27) + v85);
            *(_QWORD *)(v3 + v84) = v86;
            v83 |= (unint64_t)(v87 & 0x7F) << v81;
            if (v87 < 0)
            {
              v81 += 7;
              v35 = v82++ >= 9;
              if (v35)
              {
                v83 = 0;
                goto LABEL_288;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v26))
          v83 = 0;
LABEL_288:
        v182 = v83 != 0;
        v183 = 248;
        goto LABEL_318;
      case 13:
        if (!v40 || (*(_BYTE *)(a1 + 254) & 1) != 0)
          goto LABEL_267;
        if (v37 != 2)
        {
          v185 = 0;
          v186 = 0;
          v187 = 0;
          while (1)
          {
            v188 = *v22;
            v189 = *(_QWORD *)(v3 + v188);
            v190 = v189 + 1;
            if (v189 == -1 || v190 > *(_QWORD *)(v3 + *v6))
              goto LABEL_373;
            v191 = *(_BYTE *)(*(_QWORD *)(v3 + *v27) + v189);
            *(_QWORD *)(v3 + v188) = v190;
            v187 |= (unint64_t)(v191 & 0x7F) << v185;
            if (v191 < 0)
            {
              v185 += 7;
              v35 = v186++ >= 9;
              if (!v35)
                continue;
            }
            goto LABEL_374;
          }
        }
        if (!PBReaderPlaceMark())
          goto LABEL_408;
        while (1)
        {
          v88 = (int *)MEMORY[0x1E0D82BC8];
          if (*(_QWORD *)(v3 + *v22) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + (int)*MEMORY[0x1E0D82BC8]))
            goto LABEL_266;
          v89 = 0;
          v90 = 0;
          v91 = 0;
          v92 = (int *)MEMORY[0x1E0D82BB8];
          while (1)
          {
            v93 = *v22;
            v94 = *(_QWORD *)(v3 + v93);
            v95 = v94 + 1;
            if (v94 == -1 || v95 > *(_QWORD *)(v3 + *v6))
              break;
            v96 = *(_BYTE *)(*(_QWORD *)(v3 + *v92) + v94);
            *(_QWORD *)(v3 + v93) = v95;
            v91 |= (unint64_t)(v96 & 0x7F) << v89;
            if (v96 < 0)
            {
              v89 += 7;
              v35 = v90++ >= 9;
              if (!v35)
                continue;
            }
            goto LABEL_126;
          }
          *(_BYTE *)(v3 + *v88) = 1;
LABEL_126:
          PBRepeatedInt32Add();
        }
      case 14:
        if (!v40)
          goto LABEL_267;
        if ((*(_BYTE *)(a1 + 254) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_408;
          v184 = (int)(*(_DWORD *)(a1 + 252) << 9) >> 31;
          goto LABEL_337;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_408;
        v47 = objc_alloc_init(GEOPDAutocompleteEntry);
        if (!GEOPDAutocompleteEntryReadAllFrom((uint64_t)v47, (void *)v3, v10 & 1))
          goto LABEL_407;
        PBReaderRecallMark();
        v48 = 176;
        goto LABEL_242;
      case 15:
        if ((v8 & 1) == 0)
          goto LABEL_267;
        v97 = 0;
        v98 = 0;
        v99 = 0;
        *(_DWORD *)(a1 + 252) |= 0x40u;
        while (2)
        {
          v100 = *v22;
          v101 = *(_QWORD *)(v3 + v100);
          v102 = v101 + 1;
          if (v101 == -1 || v102 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v26) = 1;
          }
          else
          {
            v103 = *(_BYTE *)(*(_QWORD *)(v3 + *v27) + v101);
            *(_QWORD *)(v3 + v100) = v102;
            v99 |= (unint64_t)(v103 & 0x7F) << v97;
            if (v103 < 0)
            {
              v97 += 7;
              v35 = v98++ >= 9;
              if (v35)
              {
                v99 = 0;
                goto LABEL_292;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v26))
          v99 = 0;
LABEL_292:
        v182 = v99 != 0;
        v183 = 243;
        goto LABEL_318;
      case 16:
        if ((v8 & 1) == 0)
          goto LABEL_267;
        v104 = 0;
        v105 = 0;
        v51 = 0;
        *(_DWORD *)(a1 + 252) |= 1u;
        while (2)
        {
          v106 = *v22;
          v107 = *(_QWORD *)(v3 + v106);
          v108 = v107 + 1;
          if (v107 == -1 || v108 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v26) = 1;
          }
          else
          {
            v109 = *(_BYTE *)(*(_QWORD *)(v3 + *v27) + v107);
            *(_QWORD *)(v3 + v106) = v108;
            v51 |= (unint64_t)(v109 & 0x7F) << v104;
            if (v109 < 0)
            {
              v104 += 7;
              v35 = v105++ >= 9;
              if (v35)
              {
                LODWORD(v51) = 0;
                goto LABEL_296;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v26))
          LODWORD(v51) = 0;
LABEL_296:
        v181 = 228;
        goto LABEL_309;
      case 17:
        if ((v8 & 1) == 0)
          goto LABEL_267;
        v110 = 0;
        v111 = 0;
        v112 = 0;
        *(_DWORD *)(a1 + 252) |= 0x200u;
        while (2)
        {
          v113 = *v22;
          v114 = *(_QWORD *)(v3 + v113);
          v115 = v114 + 1;
          if (v114 == -1 || v115 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v26) = 1;
          }
          else
          {
            v116 = *(_BYTE *)(*(_QWORD *)(v3 + *v27) + v114);
            *(_QWORD *)(v3 + v113) = v115;
            v112 |= (unint64_t)(v116 & 0x7F) << v110;
            if (v116 < 0)
            {
              v110 += 7;
              v35 = v111++ >= 9;
              if (v35)
              {
                v112 = 0;
                goto LABEL_300;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v26))
          v112 = 0;
LABEL_300:
        v182 = v112 != 0;
        v183 = 246;
        goto LABEL_318;
      case 18:
        if (!v40 || (*(_BYTE *)(a1 + 253) & 0x40) != 0)
          goto LABEL_267;
        if (v37 != 2)
        {
          v192 = 0;
          v193 = 0;
          v194 = 0;
          while (1)
          {
            v195 = *v22;
            v196 = *(_QWORD *)(v3 + v195);
            v197 = v196 + 1;
            if (v196 == -1 || v197 > *(_QWORD *)(v3 + *v6))
              goto LABEL_373;
            v198 = *(_BYTE *)(*(_QWORD *)(v3 + *v27) + v196);
            *(_QWORD *)(v3 + v195) = v197;
            v194 |= (unint64_t)(v198 & 0x7F) << v192;
            if (v198 < 0)
            {
              v192 += 7;
              v35 = v193++ >= 9;
              if (!v35)
                continue;
            }
            goto LABEL_374;
          }
        }
        if (!PBReaderPlaceMark())
          goto LABEL_408;
        while (1)
        {
          v117 = (int *)MEMORY[0x1E0D82BC8];
          if (*(_QWORD *)(v3 + *v22) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + (int)*MEMORY[0x1E0D82BC8]))
            goto LABEL_266;
          v118 = 0;
          v119 = 0;
          v120 = 0;
          v121 = (int *)MEMORY[0x1E0D82BB8];
          while (1)
          {
            v122 = *v22;
            v123 = *(_QWORD *)(v3 + v122);
            v124 = v123 + 1;
            if (v123 == -1 || v124 > *(_QWORD *)(v3 + *v6))
              break;
            v125 = *(_BYTE *)(*(_QWORD *)(v3 + *v121) + v123);
            *(_QWORD *)(v3 + v122) = v124;
            v120 |= (unint64_t)(v125 & 0x7F) << v118;
            if (v125 < 0)
            {
              v118 += 7;
              v35 = v119++ >= 9;
              if (!v35)
                continue;
            }
            goto LABEL_170;
          }
          *(_BYTE *)(v3 + *v117) = 1;
LABEL_170:
          PBRepeatedInt32Add();
        }
      case 19:
        if ((v8 & 1) == 0)
          goto LABEL_267;
        v126 = 0;
        v127 = 0;
        v128 = 0;
        *(_DWORD *)(a1 + 252) |= 0x100u;
        while (2)
        {
          v129 = *v22;
          v130 = *(_QWORD *)(v3 + v129);
          v131 = v130 + 1;
          if (v130 == -1 || v131 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v26) = 1;
          }
          else
          {
            v132 = *(_BYTE *)(*(_QWORD *)(v3 + *v27) + v130);
            *(_QWORD *)(v3 + v129) = v131;
            v128 |= (unint64_t)(v132 & 0x7F) << v126;
            if (v132 < 0)
            {
              v126 += 7;
              v35 = v127++ >= 9;
              if (v35)
              {
                v128 = 0;
                goto LABEL_304;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v26))
          v128 = 0;
LABEL_304:
        v182 = v128 != 0;
        v183 = 245;
        goto LABEL_318;
      case 20:
        if (!v40 || (*(_BYTE *)(a1 + 253) & 0x20) != 0)
          goto LABEL_267;
        if (v37 != 2)
        {
          v199 = 0;
          v200 = 0;
          v201 = 0;
          while (1)
          {
            v202 = *v22;
            v203 = *(_QWORD *)(v3 + v202);
            v204 = v203 + 1;
            if (v203 == -1 || v204 > *(_QWORD *)(v3 + *v6))
              goto LABEL_373;
            v205 = *(_BYTE *)(*(_QWORD *)(v3 + *v27) + v203);
            *(_QWORD *)(v3 + v202) = v204;
            v201 |= (unint64_t)(v205 & 0x7F) << v199;
            if (v205 < 0)
            {
              v199 += 7;
              v35 = v200++ >= 9;
              if (!v35)
                continue;
            }
            goto LABEL_374;
          }
        }
        if (!PBReaderPlaceMark())
          goto LABEL_408;
        while (1)
        {
          v133 = (int *)MEMORY[0x1E0D82BC8];
          if (*(_QWORD *)(v3 + *v22) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + (int)*MEMORY[0x1E0D82BC8]))
            goto LABEL_266;
          v134 = 0;
          v135 = 0;
          v136 = 0;
          v137 = (int *)MEMORY[0x1E0D82BB8];
          while (1)
          {
            v138 = *v22;
            v139 = *(_QWORD *)(v3 + v138);
            v140 = v139 + 1;
            if (v139 == -1 || v140 > *(_QWORD *)(v3 + *v6))
              break;
            v141 = *(_BYTE *)(*(_QWORD *)(v3 + *v137) + v139);
            *(_QWORD *)(v3 + v138) = v140;
            v136 |= (unint64_t)(v141 & 0x7F) << v134;
            if (v141 < 0)
            {
              v134 += 7;
              v35 = v135++ >= 9;
              if (!v35)
                continue;
            }
            goto LABEL_193;
          }
          *(_BYTE *)(v3 + *v133) = 1;
LABEL_193:
          PBRepeatedInt32Add();
        }
      case 21:
        if ((v8 & 1) == 0)
          goto LABEL_267;
        v142 = 0;
        v143 = 0;
        v51 = 0;
        *(_DWORD *)(a1 + 252) |= 4u;
        while (2)
        {
          v144 = *v22;
          v145 = *(_QWORD *)(v3 + v144);
          v146 = v145 + 1;
          if (v145 == -1 || v146 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v26) = 1;
          }
          else
          {
            v147 = *(_BYTE *)(*(_QWORD *)(v3 + *v27) + v145);
            *(_QWORD *)(v3 + v144) = v146;
            v51 |= (unint64_t)(v147 & 0x7F) << v142;
            if (v147 < 0)
            {
              v142 += 7;
              v35 = v143++ >= 9;
              if (v35)
              {
                LODWORD(v51) = 0;
                goto LABEL_308;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v26))
          LODWORD(v51) = 0;
LABEL_308:
        v181 = 236;
LABEL_309:
        *(_DWORD *)(a1 + v181) = v51;
        goto LABEL_377;
      case 22:
        if (!v40 || (*(_BYTE *)(a1 + 254) & 2) != 0)
          goto LABEL_267;
        if (v37 != 2)
        {
          v206 = 0;
          v207 = 0;
          v208 = 0;
          while (1)
          {
            v209 = *v22;
            v210 = *(_QWORD *)(v3 + v209);
            v211 = v210 + 1;
            if (v210 == -1 || v211 > *(_QWORD *)(v3 + *v6))
              goto LABEL_373;
            v212 = *(_BYTE *)(*(_QWORD *)(v3 + *v27) + v210);
            *(_QWORD *)(v3 + v209) = v211;
            v208 |= (unint64_t)(v212 & 0x7F) << v206;
            if (v212 < 0)
            {
              v206 += 7;
              v35 = v207++ >= 9;
              if (!v35)
                continue;
            }
            goto LABEL_374;
          }
        }
        if (!PBReaderPlaceMark())
          goto LABEL_408;
        while (1)
        {
          v148 = (int *)MEMORY[0x1E0D82BC8];
          if (*(_QWORD *)(v3 + *v22) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + (int)*MEMORY[0x1E0D82BC8]))
            goto LABEL_266;
          v149 = 0;
          v150 = 0;
          v151 = 0;
          v152 = (int *)MEMORY[0x1E0D82BB8];
          while (1)
          {
            v153 = *v22;
            v154 = *(_QWORD *)(v3 + v153);
            v155 = v154 + 1;
            if (v154 == -1 || v155 > *(_QWORD *)(v3 + *v6))
              break;
            v156 = *(_BYTE *)(*(_QWORD *)(v3 + *v152) + v154);
            *(_QWORD *)(v3 + v153) = v155;
            v151 |= (unint64_t)(v156 & 0x7F) << v149;
            if (v156 < 0)
            {
              v149 += 7;
              v35 = v150++ >= 9;
              if (!v35)
                continue;
            }
            goto LABEL_216;
          }
          *(_BYTE *)(v3 + *v148) = 1;
LABEL_216:
          PBRepeatedInt32Add();
        }
      case 23:
        if (!v40)
          goto LABEL_267;
        if ((*(_BYTE *)(a1 + 254) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_408;
          v184 = (int)(*(_DWORD *)(a1 + 252) << 10) >> 31;
          goto LABEL_337;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_408;
        v47 = objc_alloc_init(GEOPDSSearchEvChargingParameters);
        if (!GEOPDSSearchEvChargingParametersReadAllFrom((uint64_t)v47, (void *)v3, v10 & 1))
          goto LABEL_407;
        PBReaderRecallMark();
        v48 = 168;
        goto LABEL_242;
      case 24:
        if (!v40 || (*(_BYTE *)(a1 + 253) & 0x80) != 0)
          goto LABEL_267;
        if (v37 != 2)
        {
          v213 = 0;
          v214 = 0;
          v215 = 0;
          while (1)
          {
            v216 = *v22;
            v217 = *(_QWORD *)(v3 + v216);
            v218 = v217 + 1;
            if (v217 == -1 || v218 > *(_QWORD *)(v3 + *v6))
              break;
            v219 = *(_BYTE *)(*(_QWORD *)(v3 + *v27) + v217);
            *(_QWORD *)(v3 + v216) = v218;
            v215 |= (unint64_t)(v219 & 0x7F) << v213;
            if (v219 < 0)
            {
              v213 += 7;
              v35 = v214++ >= 9;
              if (!v35)
                continue;
            }
            goto LABEL_374;
          }
LABEL_373:
          *(_BYTE *)(v3 + *v26) = 1;
LABEL_374:
          PBRepeatedInt32Add();
          goto LABEL_375;
        }
        if (!PBReaderPlaceMark())
          goto LABEL_408;
        while (1)
        {
          v157 = (int *)MEMORY[0x1E0D82BC8];
          if (*(_QWORD *)(v3 + *v22) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + (int)*MEMORY[0x1E0D82BC8]))
            break;
          v158 = 0;
          v159 = 0;
          v160 = 0;
          v161 = (int *)MEMORY[0x1E0D82BB8];
          while (1)
          {
            v162 = *v22;
            v163 = *(_QWORD *)(v3 + v162);
            v164 = v163 + 1;
            if (v163 == -1 || v164 > *(_QWORD *)(v3 + *v6))
              break;
            v165 = *(_BYTE *)(*(_QWORD *)(v3 + *v161) + v163);
            *(_QWORD *)(v3 + v162) = v164;
            v160 |= (unint64_t)(v165 & 0x7F) << v158;
            if (v165 < 0)
            {
              v158 += 7;
              v35 = v159++ >= 9;
              if (!v35)
                continue;
            }
            goto LABEL_236;
          }
          *(_BYTE *)(v3 + *v157) = 1;
LABEL_236:
          PBRepeatedInt32Add();
        }
LABEL_266:
        PBReaderRecallMark();
        v26 = (int *)MEMORY[0x1E0D82BC8];
        v21 = v225;
        goto LABEL_376;
      case 25:
        if (!v40)
          goto LABEL_267;
        if ((*(_BYTE *)(a1 + 254) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_408;
          v184 = (int)(*(_DWORD *)(a1 + 252) << 13) >> 31;
LABEL_337:
          v7 += v184;
LABEL_375:
          v21 = v225;
          v26 = (int *)MEMORY[0x1E0D82BC8];
LABEL_376:
          v27 = (int *)MEMORY[0x1E0D82BB8];
LABEL_377:
          if (!(v226 & 1 | (v7 != 0)) || *(_QWORD *)(v3 + *v22) >= *(_QWORD *)(v3 + *v6))
            goto LABEL_379;
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_408;
        v47 = objc_alloc_init(GEOPDAutocompleteOriginationInfo);
        if (GEOPDAutocompleteOriginationInfoReadAllFrom((uint64_t)v47, (void *)v3))
        {
          PBReaderRecallMark();
          v48 = 144;
LABEL_242:
          v63 = *(void **)(a1 + v48);
          *(_QWORD *)(a1 + v48) = v47;
LABEL_243:

          --v7;
          goto LABEL_375;
        }
LABEL_407:

LABEL_408:
        v24 = 0;
        v21 = v225;
LABEL_380:
        v25 = v224;
LABEL_381:
        if ((v25 & 1) != 0)
LABEL_382:
          *(_DWORD *)(a1 + 252) |= 0x1000u;
        if (v21 & 1 | ((v24 & 1) == 0))
        {
          *(_DWORD *)(a1 + 252) |= 0x800000u;
          *(_DWORD *)(a1 + 252) |= 0x4000000u;
          *(_DWORD *)(a1 + 252) |= 0x80000u;
          *(_DWORD *)(a1 + 252) |= 0x100000u;
          *(_DWORD *)(a1 + 252) |= 0x2000000u;
          *(_DWORD *)(a1 + 252) |= 0x1000000u;
          *(_DWORD *)(a1 + 252) |= 0x10000u;
          *(_DWORD *)(a1 + 252) |= 0x400000u;
          *(_DWORD *)(a1 + 252) |= 0x4000u;
          *(_DWORD *)(a1 + 252) |= 0x2000u;
          *(_DWORD *)(a1 + 252) |= 0x20000u;
          *(_DWORD *)(a1 + 252) |= 0x200000u;
          *(_DWORD *)(a1 + 252) |= 0x8000u;
          *(_DWORD *)(a1 + 252) |= 0x40000u;
        }
        else if (v23)
        {
          while (1)
          {
            v220 = *v23++;
            v221 = 0x800000;
            switch(v220)
            {
              case 0:
                goto LABEL_401;
              case 1:
                goto LABEL_400;
              case 2:
                v221 = 0x4000000;
                goto LABEL_400;
              case 5:
                v221 = 0x80000;
                goto LABEL_400;
              case 6:
                v221 = 0x100000;
                goto LABEL_400;
              case 8:
                v221 = 0x2000000;
                goto LABEL_400;
              case 11:
                v221 = 0x1000000;
                goto LABEL_400;
              case 13:
                v221 = 0x10000;
                goto LABEL_400;
              case 14:
                v221 = 0x400000;
                goto LABEL_400;
              case 18:
                v221 = 0x4000;
                goto LABEL_400;
              case 20:
                v221 = 0x2000;
                goto LABEL_400;
              case 22:
                v221 = 0x20000;
                goto LABEL_400;
              case 23:
                v221 = 0x200000;
                goto LABEL_400;
              case 24:
                v221 = 0x8000;
                goto LABEL_400;
              case 25:
                v221 = 0x40000;
LABEL_400:
                *(_DWORD *)(a1 + 252) |= v221;
                break;
              default:
                continue;
            }
          }
        }
LABEL_401:
        if (v24)
        {
          v3 = *(_BYTE *)(v3 + (int)*MEMORY[0x1E0D82BC8]) == 0;
          if ((v21 & 1) == 0)
            return v3;
LABEL_405:
          v222 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        else
        {
          v3 = 0;
          if ((v21 & 1) != 0)
            goto LABEL_405;
        }
        return v3;
      case 26:
        if ((v8 & 1) == 0)
          goto LABEL_267;
        v166 = 0;
        v167 = 0;
        v168 = 0;
        *(_DWORD *)(a1 + 252) |= 0x20u;
        while (2)
        {
          v169 = *v22;
          v170 = *(_QWORD *)(v3 + v169);
          v171 = v170 + 1;
          if (v170 == -1 || v171 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v26) = 1;
          }
          else
          {
            v172 = *(_BYTE *)(*(_QWORD *)(v3 + *v27) + v170);
            *(_QWORD *)(v3 + v169) = v171;
            v168 |= (unint64_t)(v172 & 0x7F) << v166;
            if (v172 < 0)
            {
              v166 += 7;
              v35 = v167++ >= 9;
              if (v35)
              {
                v168 = 0;
                goto LABEL_313;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v26))
          v168 = 0;
LABEL_313:
        v182 = v168 != 0;
        v183 = 242;
        goto LABEL_318;
      case 27:
        if ((v8 & 1) == 0)
          goto LABEL_267;
        v173 = 0;
        v174 = 0;
        v175 = 0;
        *(_DWORD *)(a1 + 252) |= 0x400u;
        while (2)
        {
          v176 = *v22;
          v177 = *(_QWORD *)(v3 + v176);
          v178 = v177 + 1;
          if (v177 == -1 || v178 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v26) = 1;
          }
          else
          {
            v179 = *(_BYTE *)(*(_QWORD *)(v3 + *v27) + v177);
            *(_QWORD *)(v3 + v176) = v178;
            v175 |= (unint64_t)(v179 & 0x7F) << v173;
            if (v179 < 0)
            {
              v173 += 7;
              v35 = v174++ >= 9;
              if (v35)
              {
                v175 = 0;
                goto LABEL_317;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v26))
          v175 = 0;
LABEL_317:
        v182 = v175 != 0;
        v183 = 247;
LABEL_318:
        *(_BYTE *)(a1 + v183) = v182;
        goto LABEL_377;
      default:
        if ((v224 & 1) == 0 || (*(_BYTE *)(a1 + 253) & 0x10) != 0)
        {
LABEL_267:
          v180 = PBReaderSkipValueWithTag();
          v27 = (int *)MEMORY[0x1E0D82BB8];
          v26 = (int *)MEMORY[0x1E0D82BC8];
          v21 = v225;
          if ((v180 & 1) == 0)
          {
            v24 = 0;
            goto LABEL_380;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v71 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v72 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v71;

          }
          v73 = PBUnknownFieldAdd();
          v21 = v225;
          v26 = (int *)MEMORY[0x1E0D82BC8];
          v27 = (int *)MEMORY[0x1E0D82BB8];
          if (!v73)
          {
            v24 = 0;
            goto LABEL_382;
          }
        }
        goto LABEL_377;
    }
  }
}

void sub_188AEB428(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188AEB724(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188AEB86C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188AEBA34(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188AEBBFC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188AEBDBC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188AEC1CC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188AEC4E0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188AEC9AC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188AED36C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188AED7B4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188AED8FC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188AEDD0C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188AF03A4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDAutocompleteParametersAllEntriesWithBrowseCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 208), "readAll:", 1);
  objc_msgSend(*(id *)(a1 + 160), "readAll:", 1);
  -[GEOPDVenueIdentifier readAll:](*(_QWORD *)(a1 + 200), 1);
  -[GEOPDRetainedSearchMetadata readAll:](*(_QWORD *)(a1 + 192), 1);
  objc_msgSend(*(id *)(a1 + 176), "readAll:", 1);
  -[GEOPDSSearchEvChargingParameters readAll:](*(_QWORD *)(a1 + 168), 1);
  return objc_msgSend(*(id *)(a1 + 144), "readAll:", 1);
}

unint64_t GEOPDAutocompleteParametersAllEntriesWithBrowseReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 220))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDAutocompleteParametersAllEntriesWithBrowseReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 224));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 216) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 220) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDAutocompleteParametersAllEntriesWithBrowseReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDAutocompleteParametersAllEntriesWithBrowseReadAllFrom_initialTag;
  Specified = GEOPDAutocompleteParametersAllEntriesWithBrowseReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDAutocompleteParametersAllEntriesWithBrowseCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 224));
  return Specified;
}

void sub_188AF05CC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAutocompleteParametersAllEntriesWithBrowseReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOPDAutocompleteParametersAllEntriesWithBrowseReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188AF062C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188AF0B9C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDAutocompleteParametersAllEntriesWithBrowseIsDirty(uint64_t a1)
{
  unsigned int v2;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 224));
  v2 = *(_DWORD *)(a1 + 252);
  if ((v2 & 0xC880000) != 0)
    return 1;
  if ((v2 & 0x100000) != 0)
  {
    if ((GEOPDAutocompleteEntryIsDirty(*(os_unfair_lock_s **)(a1 + 160)) & 1) != 0)
      return 1;
    v2 = *(_DWORD *)(a1 + 252);
  }
  if ((v2 & 0x2000000) != 0)
  {
    if (GEOPDVenueIdentifierIsDirty(*(_QWORD *)(a1 + 200)))
      return 1;
    v2 = *(_DWORD *)(a1 + 252);
  }
  if ((v2 & 0x1000000) != 0)
  {
    if (GEOPDRetainedSearchMetadataIsDirty(*(_QWORD *)(a1 + 192)))
      return 1;
    v2 = *(_DWORD *)(a1 + 252);
  }
  if ((v2 & 0x10000) != 0)
    return 1;
  if ((v2 & 0x400000) != 0)
  {
    if ((GEOPDAutocompleteEntryIsDirty(*(os_unfair_lock_s **)(a1 + 176)) & 1) != 0)
      return 1;
    v2 = *(_DWORD *)(a1 + 252);
  }
  if ((v2 & 0x26000) != 0)
    return 1;
  if ((v2 & 0x200000) == 0)
    goto LABEL_20;
  if (GEOPDSSearchEvChargingParametersIsDirty(*(_QWORD *)(a1 + 168)))
    return 1;
  v2 = *(_DWORD *)(a1 + 252);
LABEL_20:
  if ((v2 & 0x8000) != 0)
    return 1;
  return (v2 >> 18) & 1;
}

os_unfair_lock_s *GEOPDAutocompleteParametersAllEntriesWithBrowseIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOPDAutocompleteParametersAllEntriesWithBrowseIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 56);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_188AF171C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188AF24B8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188AF2800(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAutocompleteParametersBrandProfileSearchReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  int *v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  BOOL v28;
  int v29;
  unint64_t v31;
  BOOL v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  uint64_t v37;
  void *v38;
  id v39;
  void *v40;
  int v41;
  GEOPDViewportInfo *v42;
  char v43;
  unsigned int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  char v50;
  unsigned int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  char v56;
  char v57;
  char v58;
  int v59;
  int v60;
  char v61;
  void *v62;
  int v64;
  int *v65;
  char v66;
  char v67;
  char v68;
  char v69;
  char v70;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = ((*(unsigned __int8 *)(a1 + 60) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 4) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 2) & 1);
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v12;
        v13 = v7;
        goto LABEL_8;
      case -3:
        v9 = 1;
        goto LABEL_7;
      case -2:
        v13 = v7;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 != 0;
        v66 = v16 & ~(_BYTE)v11 | v8;
        v67 = v9;
        v68 = v16 | v11 | v66;
        if ((((v16 | v11) | v9) & 1) != 0)
          v17 = 0;
        else
          v17 = a3;
        v69 = (v17 == 0) | v16 | v11;
        v70 = v16 | v11;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v7;
        v14 = v8;
LABEL_8:
        v15 = v11;
LABEL_10:
        ++v10;
        v7 = v13;
        v8 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v19))
      goto LABEL_87;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0)
        goto LABEL_25;
      v21 += 7;
      v28 = v22++ >= 9;
      if (v28)
      {
        v23 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_25:
    v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_27:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_87:
      v64 = 1;
      goto LABEL_88;
    }
    v31 = v23 >> 3;
    v32 = v70;
    if ((v69 & 1) == 0)
    {
      v33 = v17;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if (!v32)
          goto LABEL_70;
        if ((*(_BYTE *)(a1 + 60) & 8) == 0)
        {
          PBReaderReadString();
          v37 = objc_claimAutoreleasedReturnValue();
          v38 = *(void **)(a1 + 24);
          *(_QWORD *)(a1 + 24) = v37;
          goto LABEL_53;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_107;
        v58 = 16 * *(_BYTE *)(a1 + 60);
        goto LABEL_84;
      case 2:
        if (!v32)
          goto LABEL_70;
        if ((*(_BYTE *)(a1 + 60) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_107;
          v58 = 8 * *(_BYTE *)(a1 + 60);
LABEL_84:
          v10 += v58 >> 7;
          goto LABEL_85;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_107;
        v42 = objc_alloc_init(GEOPDViewportInfo);
        if (GEOPDViewportInfoReadAllFrom((uint64_t)v42, (void *)v3))
        {
          PBReaderRecallMark();
          v38 = *(void **)(a1 + 32);
          *(_QWORD *)(a1 + 32) = v42;
LABEL_53:

          --v10;
LABEL_85:
          v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_86:
          if (!(v68 & 1 | (v10 != 0)))
            goto LABEL_87;
          continue;
        }

LABEL_107:
        v64 = 0;
        v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_88:
        v65 = &OBJC_IVAR___GEOTransitVehicleInfo__pickupDropoffType;
        if ((v66 & 1) != 0)
LABEL_89:
          *(_BYTE *)(a1 + v65[926]) |= 4u;
        if (v70 & 1 | ((v64 & 1) == 0))
        {
          *(_BYTE *)(a1 + v65[926]) |= 8u;
          *(_BYTE *)(a1 + v65[926]) |= 0x10u;
          goto LABEL_100;
        }
        if (v17)
        {
          while (2)
          {
            while (1)
            {
              v60 = *v17++;
              v59 = v60;
              if (v60 == 1)
                break;
              if (v59 == 2)
              {
                v61 = 16;
                goto LABEL_99;
              }
              if (!v59)
                goto LABEL_100;
            }
            v61 = 8;
LABEL_99:
            *(_BYTE *)(a1 + v65[926]) |= v61;
            continue;
          }
        }
LABEL_100:
        if (v64)
          v3 = *(_BYTE *)(v3 + *v19) == 0;
        else
          v3 = 0;
        if ((v70 & 1) != 0)
        {
          v62 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      case 3:
        if ((v67 & 1) == 0)
          goto LABEL_70;
        v43 = 0;
        v44 = 0;
        v45 = 0;
        *(_BYTE *)(a1 + 60) |= 1u;
        while (2)
        {
          v46 = *v18;
          v47 = *(_QWORD *)(v3 + v46);
          v48 = v47 + 1;
          if (v47 == -1 || v48 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v19) = 1;
          }
          else
          {
            v49 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v47);
            *(_QWORD *)(v3 + v46) = v48;
            v45 |= (unint64_t)(v49 & 0x7F) << v43;
            if (v49 < 0)
            {
              v43 += 7;
              v28 = v44++ >= 9;
              if (v28)
              {
                LODWORD(v45) = 0;
                goto LABEL_75;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v19))
          LODWORD(v45) = 0;
LABEL_75:
        *(_DWORD *)(a1 + 52) = v45;
        goto LABEL_86;
      case 4:
        if ((v67 & 1) == 0)
          goto LABEL_70;
        v50 = 0;
        v51 = 0;
        v52 = 0;
        *(_BYTE *)(a1 + 60) |= 2u;
        while (2)
        {
          v53 = *v18;
          v54 = *(_QWORD *)(v3 + v53);
          v55 = v54 + 1;
          if (v54 == -1 || v55 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v19) = 1;
          }
          else
          {
            v56 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v54);
            *(_QWORD *)(v3 + v53) = v55;
            v52 |= (unint64_t)(v56 & 0x7F) << v50;
            if (v56 < 0)
            {
              v50 += 7;
              v28 = v51++ >= 9;
              if (v28)
              {
                v52 = 0;
                goto LABEL_79;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v19))
          v52 = 0;
LABEL_79:
        *(_BYTE *)(a1 + 56) = v52 != 0;
        goto LABEL_86;
      default:
        if ((v66 & 1) == 0 || (*(_BYTE *)(a1 + 60) & 4) != 0)
        {
LABEL_70:
          v57 = PBReaderSkipValueWithTag();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if ((v57 & 1) == 0)
          {
            v64 = 0;
            goto LABEL_88;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v39 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v40 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v39;

          }
          v41 = PBUnknownFieldAdd();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if (!v41)
          {
            v64 = 0;
            v65 = &OBJC_IVAR___GEOTransitVehicleInfo__pickupDropoffType;
            goto LABEL_89;
          }
        }
        goto LABEL_86;
    }
  }
}

void sub_188AF3004(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188AF36B4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAutocompleteParametersBrandProfileSearchReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDAutocompleteParametersBrandProfileSearchReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDAutocompleteParametersBrandProfileSearchReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDAutocompleteParametersBrandProfileSearchReadAllFrom_initialTag;
  Specified = GEOPDAutocompleteParametersBrandProfileSearchReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    objc_msgSend(*(id *)(a1 + 32), "readAll:", 1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_188AF3858(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAutocompleteParametersBrandProfileSearchReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOPDAutocompleteParametersBrandProfileSearchReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188AF38B8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188AF3A98(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDAutocompleteParametersBrandProfileSearchIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v2 = (*(_BYTE *)(a1 + 60) & 0x38) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return v2;
}

void sub_188AF3E14(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188AF4158(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188AF43C8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAutocompleteParametersCollectionOnlyReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  char v17;
  unsigned __int8 v18;
  char v19;
  int *v20;
  int *v21;
  int *v22;
  int *v23;
  char v24;
  unsigned int v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  int v32;
  unint64_t v34;
  BOOL v35;
  int *v36;
  int v37;
  int v38;
  BOOL v39;
  uint64_t v40;
  void *v41;
  GEOPDMapsIdentifier *v42;
  id v43;
  void *v44;
  int v45;
  char v46;
  char v47;
  int v48;
  char v49;
  void *v50;
  int v52;
  int *v53;
  char v54;
  char v55;
  char v56;
  BOOL v57;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 52);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 48));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = ((*(unsigned __int8 *)(a1 + 60) >> 3) & 1)
      + (*(_BYTE *)(a1 + 60) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 2) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 1) & 1);
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 > 1;
        v17 = v16 & ~(_BYTE)v11 | v9;
        v18 = v16 | v11;
        v54 = v17;
        v19 = v18 | v17;
        if (((v18 | v8) & 1) != 0)
          v20 = 0;
        else
          v20 = a3;
        v57 = v18;
        v55 = v19;
        v56 = (v20 == 0) | v18;
        v21 = (int *)MEMORY[0x1E0D82BF0];
        v22 = (int *)MEMORY[0x1E0D82BC8];
        v23 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v7;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v21) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v22))
      goto LABEL_70;
    v24 = 0;
    v25 = 0;
    v26 = 0;
    while (1)
    {
      v27 = *v21;
      v28 = *(_QWORD *)(v3 + v27);
      v29 = v28 + 1;
      if (v28 == -1 || v29 > *(_QWORD *)(v3 + *v6))
        break;
      v30 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v28);
      *(_QWORD *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0)
        goto LABEL_25;
      v24 += 7;
      if (v25++ >= 9)
      {
        v26 = 0;
        v32 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v22) = 1;
LABEL_25:
    v32 = *(unsigned __int8 *)(v3 + *v22);
    if (*(_BYTE *)(v3 + *v22))
      v26 = 0;
LABEL_27:
    if (v32 || (v26 & 7) == 4)
    {
LABEL_70:
      v52 = 1;
      goto LABEL_71;
    }
    v34 = v26 >> 3;
    v35 = v57;
    if ((v56 & 1) == 0)
    {
      v36 = v20;
      do
      {
        v38 = *v36++;
        v37 = v38;
        v35 = v38 != 0;
        if (v38)
          v39 = v37 == (_DWORD)v34;
        else
          v39 = 1;
      }
      while (!v39);
    }
    if ((_DWORD)v34 == 3)
    {
      if (!v35 || (*(_BYTE *)(a1 + 60) & 2) != 0)
      {
LABEL_61:
        v46 = PBReaderSkipValueWithTag();
        v22 = (int *)MEMORY[0x1E0D82BC8];
        if ((v46 & 1) == 0)
        {
          v52 = 0;
          goto LABEL_71;
        }
        goto LABEL_69;
      }
      if ((PBReaderPlaceMark() & 1) == 0)
        goto LABEL_87;
      v42 = objc_alloc_init(GEOPDMapsIdentifier);
      if (!GEOPDMapsIdentifierReadAllFrom((uint64_t)v42, (void *)v3))
        goto LABEL_86;
      PBReaderRecallMark();
      -[GEOPDAutocompleteParametersCollectionOnly _addNoFlagsPublisherId:](a1, v42);

      goto LABEL_68;
    }
    if ((_DWORD)v34 == 2)
      break;
    if ((_DWORD)v34 == 1)
    {
      if (!v35)
        goto LABEL_61;
      if ((*(_BYTE *)(a1 + 60) & 4) == 0)
      {
        PBReaderReadString();
        v40 = objc_claimAutoreleasedReturnValue();
        v41 = *(void **)(a1 + 32);
        *(_QWORD *)(a1 + 32) = v40;
        goto LABEL_54;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        goto LABEL_87;
      v47 = 32 * *(_BYTE *)(a1 + 60);
LABEL_67:
      v7 += v47 >> 7;
LABEL_68:
      v22 = (int *)MEMORY[0x1E0D82BC8];
      goto LABEL_69;
    }
    if ((v54 & 1) == 0 || (*(_BYTE *)(a1 + 60) & 1) != 0)
      goto LABEL_61;
    if (!*(_QWORD *)(a1 + 16))
    {
      v43 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
      v44 = *(void **)(a1 + 16);
      *(_QWORD *)(a1 + 16) = v43;

    }
    v45 = PBUnknownFieldAdd();
    v22 = (int *)MEMORY[0x1E0D82BC8];
    if (!v45)
    {
      v52 = 0;
      v53 = &OBJC_IVAR___GEOTransitVehicleInfo__pickupDropoffType;
      goto LABEL_72;
    }
LABEL_69:
    if (!(v55 & 1 | (v7 != 0)))
      goto LABEL_70;
  }
  if (!v35)
    goto LABEL_61;
  if ((*(_BYTE *)(a1 + 60) & 8) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0)
      goto LABEL_87;
    v47 = 16 * *(_BYTE *)(a1 + 60);
    goto LABEL_67;
  }
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_87;
  v42 = objc_alloc_init(GEOPDViewportInfo);
  if (GEOPDViewportInfoReadAllFrom((uint64_t)v42, (void *)v3))
  {
    PBReaderRecallMark();
    v41 = *(void **)(a1 + 40);
    *(_QWORD *)(a1 + 40) = v42;
LABEL_54:

    --v7;
    goto LABEL_68;
  }
LABEL_86:

LABEL_87:
  v52 = 0;
  v22 = (int *)MEMORY[0x1E0D82BC8];
LABEL_71:
  v53 = &OBJC_IVAR___GEOTransitVehicleInfo__pickupDropoffType;
  if ((v54 & 1) == 0)
    goto LABEL_73;
LABEL_72:
  *(_BYTE *)(a1 + v53[936]) |= 1u;
LABEL_73:
  if (v57 || (v52 & 1) == 0)
  {
    *(_BYTE *)(a1 + v53[936]) |= 4u;
    *(_BYTE *)(a1 + v53[936]) |= 8u;
    *(_BYTE *)(a1 + v53[936]) |= 2u;
  }
  else if (v20)
  {
    while (1)
    {
      v48 = *v20++;
      v49 = 4;
      switch(v48)
      {
        case 0:
          goto LABEL_80;
        case 1:
          goto LABEL_79;
        case 2:
          v49 = 8;
          goto LABEL_79;
        case 3:
          v49 = 2;
LABEL_79:
          *(_BYTE *)(a1 + v53[936]) |= v49;
          break;
        default:
          continue;
      }
    }
  }
LABEL_80:
  if (v52)
    v3 = *(_BYTE *)(v3 + *v22) == 0;
  else
    v3 = 0;
  if (v57)
  {
    v50 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_188AF4AD4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188AF4C14(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188AF5648(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDAutocompleteParametersCollectionOnlyCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _BYTE v11[128];
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  objc_msgSend(*(id *)(a1 + 40), "readAll:", 1);
  v9 = 0u;
  v10 = 0u;
  v7 = 0u;
  v8 = 0u;
  v2 = *(id *)(a1 + 24);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v8;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v8 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v7 + 1) + 8 * v6++), "readAll:", 1, (_QWORD)v7);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
    }
    while (v4);
  }

}

unint64_t GEOPDAutocompleteParametersCollectionOnlyReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 52))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDAutocompleteParametersCollectionOnlyReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 52) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDAutocompleteParametersCollectionOnlyReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDAutocompleteParametersCollectionOnlyReadAllFrom_initialTag;
  Specified = GEOPDAutocompleteParametersCollectionOnlyReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDAutocompleteParametersCollectionOnlyCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_188AF58EC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAutocompleteParametersCollectionOnlyReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOPDAutocompleteParametersCollectionOnlyReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188AF594C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188AF5BAC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDAutocompleteParametersCollectionOnlyIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v2 = (*(_BYTE *)(a1 + 60) & 0x1E) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return v2;
}

void sub_188AF60C8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188AF640C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188AF6750(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAutocompleteParametersFullEntriesOnlyReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  int *v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  BOOL v28;
  int v29;
  unint64_t v31;
  BOOL v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  uint64_t v37;
  void *v38;
  id v39;
  void *v40;
  int v41;
  GEOPDViewportInfo *v42;
  char v43;
  unsigned int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  char v50;
  unsigned int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  char v56;
  char v57;
  char v58;
  int v59;
  int v60;
  char v61;
  void *v62;
  int v64;
  int *v65;
  char v66;
  char v67;
  char v68;
  char v69;
  char v70;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = ((*(unsigned __int8 *)(a1 + 60) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 4) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 2) & 1);
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v12;
        v13 = v7;
        goto LABEL_8;
      case -3:
        v9 = 1;
        goto LABEL_7;
      case -2:
        v13 = v7;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 != 0;
        v66 = v16 & ~(_BYTE)v11 | v8;
        v67 = v9;
        v68 = v16 | v11 | v66;
        if ((((v16 | v11) | v9) & 1) != 0)
          v17 = 0;
        else
          v17 = a3;
        v69 = (v17 == 0) | v16 | v11;
        v70 = v16 | v11;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v7;
        v14 = v8;
LABEL_8:
        v15 = v11;
LABEL_10:
        ++v10;
        v7 = v13;
        v8 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v19))
      goto LABEL_87;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0)
        goto LABEL_25;
      v21 += 7;
      v28 = v22++ >= 9;
      if (v28)
      {
        v23 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_25:
    v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_27:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_87:
      v64 = 1;
      goto LABEL_88;
    }
    v31 = v23 >> 3;
    v32 = v70;
    if ((v69 & 1) == 0)
    {
      v33 = v17;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if (!v32)
          goto LABEL_70;
        if ((*(_BYTE *)(a1 + 60) & 8) == 0)
        {
          PBReaderReadString();
          v37 = objc_claimAutoreleasedReturnValue();
          v38 = *(void **)(a1 + 24);
          *(_QWORD *)(a1 + 24) = v37;
          goto LABEL_53;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_107;
        v58 = 16 * *(_BYTE *)(a1 + 60);
        goto LABEL_84;
      case 2:
        if (!v32)
          goto LABEL_70;
        if ((*(_BYTE *)(a1 + 60) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_107;
          v58 = 8 * *(_BYTE *)(a1 + 60);
LABEL_84:
          v10 += v58 >> 7;
          goto LABEL_85;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_107;
        v42 = objc_alloc_init(GEOPDViewportInfo);
        if (GEOPDViewportInfoReadAllFrom((uint64_t)v42, (void *)v3))
        {
          PBReaderRecallMark();
          v38 = *(void **)(a1 + 32);
          *(_QWORD *)(a1 + 32) = v42;
LABEL_53:

          --v10;
LABEL_85:
          v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_86:
          if (!(v68 & 1 | (v10 != 0)))
            goto LABEL_87;
          continue;
        }

LABEL_107:
        v64 = 0;
        v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_88:
        v65 = &OBJC_IVAR___GEOTransitVehicleInfo__pickupDropoffType;
        if ((v66 & 1) != 0)
LABEL_89:
          *(_BYTE *)(a1 + v65[945]) |= 4u;
        if (v70 & 1 | ((v64 & 1) == 0))
        {
          *(_BYTE *)(a1 + v65[945]) |= 8u;
          *(_BYTE *)(a1 + v65[945]) |= 0x10u;
          goto LABEL_100;
        }
        if (v17)
        {
          while (2)
          {
            while (1)
            {
              v60 = *v17++;
              v59 = v60;
              if (v60 == 1)
                break;
              if (v59 == 2)
              {
                v61 = 16;
                goto LABEL_99;
              }
              if (!v59)
                goto LABEL_100;
            }
            v61 = 8;
LABEL_99:
            *(_BYTE *)(a1 + v65[945]) |= v61;
            continue;
          }
        }
LABEL_100:
        if (v64)
          v3 = *(_BYTE *)(v3 + *v19) == 0;
        else
          v3 = 0;
        if ((v70 & 1) != 0)
        {
          v62 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      case 3:
        if ((v67 & 1) == 0)
          goto LABEL_70;
        v43 = 0;
        v44 = 0;
        v45 = 0;
        *(_BYTE *)(a1 + 60) |= 1u;
        while (2)
        {
          v46 = *v18;
          v47 = *(_QWORD *)(v3 + v46);
          v48 = v47 + 1;
          if (v47 == -1 || v48 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v19) = 1;
          }
          else
          {
            v49 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v47);
            *(_QWORD *)(v3 + v46) = v48;
            v45 |= (unint64_t)(v49 & 0x7F) << v43;
            if (v49 < 0)
            {
              v43 += 7;
              v28 = v44++ >= 9;
              if (v28)
              {
                LODWORD(v45) = 0;
                goto LABEL_75;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v19))
          LODWORD(v45) = 0;
LABEL_75:
        *(_DWORD *)(a1 + 52) = v45;
        goto LABEL_86;
      case 4:
        if ((v67 & 1) == 0)
          goto LABEL_70;
        v50 = 0;
        v51 = 0;
        v52 = 0;
        *(_BYTE *)(a1 + 60) |= 2u;
        while (2)
        {
          v53 = *v18;
          v54 = *(_QWORD *)(v3 + v53);
          v55 = v54 + 1;
          if (v54 == -1 || v55 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v19) = 1;
          }
          else
          {
            v56 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v54);
            *(_QWORD *)(v3 + v53) = v55;
            v52 |= (unint64_t)(v56 & 0x7F) << v50;
            if (v56 < 0)
            {
              v50 += 7;
              v28 = v51++ >= 9;
              if (v28)
              {
                v52 = 0;
                goto LABEL_79;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v19))
          v52 = 0;
LABEL_79:
        *(_BYTE *)(a1 + 56) = v52 != 0;
        goto LABEL_86;
      default:
        if ((v66 & 1) == 0 || (*(_BYTE *)(a1 + 60) & 4) != 0)
        {
LABEL_70:
          v57 = PBReaderSkipValueWithTag();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if ((v57 & 1) == 0)
          {
            v64 = 0;
            goto LABEL_88;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v39 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v40 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v39;

          }
          v41 = PBUnknownFieldAdd();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if (!v41)
          {
            v64 = 0;
            v65 = &OBJC_IVAR___GEOTransitVehicleInfo__pickupDropoffType;
            goto LABEL_89;
          }
        }
        goto LABEL_86;
    }
  }
}

void sub_188AF6F54(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188AF7604(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAutocompleteParametersFullEntriesOnlyReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDAutocompleteParametersFullEntriesOnlyReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDAutocompleteParametersFullEntriesOnlyReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDAutocompleteParametersFullEntriesOnlyReadAllFrom_initialTag;
  Specified = GEOPDAutocompleteParametersFullEntriesOnlyReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    objc_msgSend(*(id *)(a1 + 32), "readAll:", 1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_188AF77A8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAutocompleteParametersFullEntriesOnlyReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOPDAutocompleteParametersFullEntriesOnlyReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188AF7808(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188AF79E8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDAutocompleteParametersFullEntriesOnlyIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v2 = (*(_BYTE *)(a1 + 60) & 0x38) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return v2;
}

void sub_188AF7D64(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188AF80A8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188AF8318(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAutocompleteParametersLocalitiesAndLandmarksReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  int *v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  BOOL v28;
  int v29;
  unint64_t v31;
  BOOL v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  uint64_t v37;
  void *v38;
  id v39;
  void *v40;
  int v41;
  GEOPDViewportInfo *v42;
  char v43;
  unsigned int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  char v50;
  unsigned int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  char v56;
  char v57;
  char v58;
  int v59;
  int v60;
  char v61;
  void *v62;
  int v64;
  int *v65;
  char v66;
  char v67;
  char v68;
  char v69;
  char v70;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = ((*(unsigned __int8 *)(a1 + 60) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 4) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 2) & 1);
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v12;
        v13 = v7;
        goto LABEL_8;
      case -3:
        v9 = 1;
        goto LABEL_7;
      case -2:
        v13 = v7;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 != 0;
        v66 = v16 & ~(_BYTE)v11 | v8;
        v67 = v9;
        v68 = v16 | v11 | v66;
        if ((((v16 | v11) | v9) & 1) != 0)
          v17 = 0;
        else
          v17 = a3;
        v69 = (v17 == 0) | v16 | v11;
        v70 = v16 | v11;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v7;
        v14 = v8;
LABEL_8:
        v15 = v11;
LABEL_10:
        ++v10;
        v7 = v13;
        v8 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v19))
      goto LABEL_87;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0)
        goto LABEL_25;
      v21 += 7;
      v28 = v22++ >= 9;
      if (v28)
      {
        v23 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_25:
    v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_27:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_87:
      v64 = 1;
      goto LABEL_88;
    }
    v31 = v23 >> 3;
    v32 = v70;
    if ((v69 & 1) == 0)
    {
      v33 = v17;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if (!v32)
          goto LABEL_70;
        if ((*(_BYTE *)(a1 + 60) & 8) == 0)
        {
          PBReaderReadString();
          v37 = objc_claimAutoreleasedReturnValue();
          v38 = *(void **)(a1 + 24);
          *(_QWORD *)(a1 + 24) = v37;
          goto LABEL_53;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_107;
        v58 = 16 * *(_BYTE *)(a1 + 60);
        goto LABEL_84;
      case 2:
        if (!v32)
          goto LABEL_70;
        if ((*(_BYTE *)(a1 + 60) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_107;
          v58 = 8 * *(_BYTE *)(a1 + 60);
LABEL_84:
          v10 += v58 >> 7;
          goto LABEL_85;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_107;
        v42 = objc_alloc_init(GEOPDViewportInfo);
        if (GEOPDViewportInfoReadAllFrom((uint64_t)v42, (void *)v3))
        {
          PBReaderRecallMark();
          v38 = *(void **)(a1 + 32);
          *(_QWORD *)(a1 + 32) = v42;
LABEL_53:

          --v10;
LABEL_85:
          v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_86:
          if (!(v68 & 1 | (v10 != 0)))
            goto LABEL_87;
          continue;
        }

LABEL_107:
        v64 = 0;
        v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_88:
        v65 = &OBJC_IVAR___GEOTransitVehicleInfo__pickupDropoffType;
        if ((v66 & 1) != 0)
LABEL_89:
          *(_BYTE *)(a1 + v65[955]) |= 4u;
        if (v70 & 1 | ((v64 & 1) == 0))
        {
          *(_BYTE *)(a1 + v65[955]) |= 8u;
          *(_BYTE *)(a1 + v65[955]) |= 0x10u;
          goto LABEL_100;
        }
        if (v17)
        {
          while (2)
          {
            while (1)
            {
              v60 = *v17++;
              v59 = v60;
              if (v60 == 1)
                break;
              if (v59 == 2)
              {
                v61 = 16;
                goto LABEL_99;
              }
              if (!v59)
                goto LABEL_100;
            }
            v61 = 8;
LABEL_99:
            *(_BYTE *)(a1 + v65[955]) |= v61;
            continue;
          }
        }
LABEL_100:
        if (v64)
          v3 = *(_BYTE *)(v3 + *v19) == 0;
        else
          v3 = 0;
        if ((v70 & 1) != 0)
        {
          v62 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      case 3:
        if ((v67 & 1) == 0)
          goto LABEL_70;
        v43 = 0;
        v44 = 0;
        v45 = 0;
        *(_BYTE *)(a1 + 60) |= 1u;
        while (2)
        {
          v46 = *v18;
          v47 = *(_QWORD *)(v3 + v46);
          v48 = v47 + 1;
          if (v47 == -1 || v48 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v19) = 1;
          }
          else
          {
            v49 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v47);
            *(_QWORD *)(v3 + v46) = v48;
            v45 |= (unint64_t)(v49 & 0x7F) << v43;
            if (v49 < 0)
            {
              v43 += 7;
              v28 = v44++ >= 9;
              if (v28)
              {
                LODWORD(v45) = 0;
                goto LABEL_75;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v19))
          LODWORD(v45) = 0;
LABEL_75:
        *(_DWORD *)(a1 + 52) = v45;
        goto LABEL_86;
      case 4:
        if ((v67 & 1) == 0)
          goto LABEL_70;
        v50 = 0;
        v51 = 0;
        v52 = 0;
        *(_BYTE *)(a1 + 60) |= 2u;
        while (2)
        {
          v53 = *v18;
          v54 = *(_QWORD *)(v3 + v53);
          v55 = v54 + 1;
          if (v54 == -1 || v55 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v19) = 1;
          }
          else
          {
            v56 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v54);
            *(_QWORD *)(v3 + v53) = v55;
            v52 |= (unint64_t)(v56 & 0x7F) << v50;
            if (v56 < 0)
            {
              v50 += 7;
              v28 = v51++ >= 9;
              if (v28)
              {
                v52 = 0;
                goto LABEL_79;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v19))
          v52 = 0;
LABEL_79:
        *(_BYTE *)(a1 + 56) = v52 != 0;
        goto LABEL_86;
      default:
        if ((v66 & 1) == 0 || (*(_BYTE *)(a1 + 60) & 4) != 0)
        {
LABEL_70:
          v57 = PBReaderSkipValueWithTag();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if ((v57 & 1) == 0)
          {
            v64 = 0;
            goto LABEL_88;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v39 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v40 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v39;

          }
          v41 = PBUnknownFieldAdd();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if (!v41)
          {
            v64 = 0;
            v65 = &OBJC_IVAR___GEOTransitVehicleInfo__pickupDropoffType;
            goto LABEL_89;
          }
        }
        goto LABEL_86;
    }
  }
}

void sub_188AF8B1C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188AF91CC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAutocompleteParametersLocalitiesAndLandmarksReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDAutocompleteParametersLocalitiesAndLandmarksReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDAutocompleteParametersLocalitiesAndLandmarksReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDAutocompleteParametersLocalitiesAndLandmarksReadAllFrom_initialTag;
  Specified = GEOPDAutocompleteParametersLocalitiesAndLandmarksReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    objc_msgSend(*(id *)(a1 + 32), "readAll:", 1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_188AF9370(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAutocompleteParametersLocalitiesAndLandmarksReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOPDAutocompleteParametersLocalitiesAndLandmarksReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188AF93D0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188AF95B0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDAutocompleteParametersLocalitiesAndLandmarksIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v2 = (*(_BYTE *)(a1 + 60) & 0x38) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return v2;
}

void sub_188AF992C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188AF9C70(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188AF9EE0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAutocompleteParametersOfflineRegionSearchReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  int *v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  BOOL v28;
  int v29;
  unint64_t v31;
  BOOL v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  uint64_t v37;
  void *v38;
  id v39;
  void *v40;
  int v41;
  GEOPDViewportInfo *v42;
  char v43;
  unsigned int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  char v50;
  unsigned int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  char v56;
  char v57;
  char v58;
  int v59;
  int v60;
  char v61;
  void *v62;
  int v64;
  int *v65;
  char v66;
  char v67;
  char v68;
  char v69;
  char v70;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = ((*(unsigned __int8 *)(a1 + 60) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 4) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 2) & 1);
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v12;
        v13 = v7;
        goto LABEL_8;
      case -3:
        v9 = 1;
        goto LABEL_7;
      case -2:
        v13 = v7;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 != 0;
        v66 = v16 & ~(_BYTE)v11 | v8;
        v67 = v9;
        v68 = v16 | v11 | v66;
        if ((((v16 | v11) | v9) & 1) != 0)
          v17 = 0;
        else
          v17 = a3;
        v69 = (v17 == 0) | v16 | v11;
        v70 = v16 | v11;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v7;
        v14 = v8;
LABEL_8:
        v15 = v11;
LABEL_10:
        ++v10;
        v7 = v13;
        v8 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v19))
      goto LABEL_87;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0)
        goto LABEL_25;
      v21 += 7;
      v28 = v22++ >= 9;
      if (v28)
      {
        v23 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_25:
    v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_27:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_87:
      v64 = 1;
      goto LABEL_88;
    }
    v31 = v23 >> 3;
    v32 = v70;
    if ((v69 & 1) == 0)
    {
      v33 = v17;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if (!v32)
          goto LABEL_70;
        if ((*(_BYTE *)(a1 + 60) & 8) == 0)
        {
          PBReaderReadString();
          v37 = objc_claimAutoreleasedReturnValue();
          v38 = *(void **)(a1 + 24);
          *(_QWORD *)(a1 + 24) = v37;
          goto LABEL_53;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_107;
        v58 = 16 * *(_BYTE *)(a1 + 60);
        goto LABEL_84;
      case 2:
        if (!v32)
          goto LABEL_70;
        if ((*(_BYTE *)(a1 + 60) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_107;
          v58 = 8 * *(_BYTE *)(a1 + 60);
LABEL_84:
          v10 += v58 >> 7;
          goto LABEL_85;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_107;
        v42 = objc_alloc_init(GEOPDViewportInfo);
        if (GEOPDViewportInfoReadAllFrom((uint64_t)v42, (void *)v3))
        {
          PBReaderRecallMark();
          v38 = *(void **)(a1 + 32);
          *(_QWORD *)(a1 + 32) = v42;
LABEL_53:

          --v10;
LABEL_85:
          v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_86:
          if (!(v68 & 1 | (v10 != 0)))
            goto LABEL_87;
          continue;
        }

LABEL_107:
        v64 = 0;
        v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_88:
        v65 = &OBJC_IVAR___GEOTransitVehicleInfo__pickupDropoffType;
        if ((v66 & 1) != 0)
LABEL_89:
          *(_BYTE *)(a1 + v65[965]) |= 4u;
        if (v70 & 1 | ((v64 & 1) == 0))
        {
          *(_BYTE *)(a1 + v65[965]) |= 8u;
          *(_BYTE *)(a1 + v65[965]) |= 0x10u;
          goto LABEL_100;
        }
        if (v17)
        {
          while (2)
          {
            while (1)
            {
              v60 = *v17++;
              v59 = v60;
              if (v60 == 1)
                break;
              if (v59 == 2)
              {
                v61 = 16;
                goto LABEL_99;
              }
              if (!v59)
                goto LABEL_100;
            }
            v61 = 8;
LABEL_99:
            *(_BYTE *)(a1 + v65[965]) |= v61;
            continue;
          }
        }
LABEL_100:
        if (v64)
          v3 = *(_BYTE *)(v3 + *v19) == 0;
        else
          v3 = 0;
        if ((v70 & 1) != 0)
        {
          v62 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      case 3:
        if ((v67 & 1) == 0)
          goto LABEL_70;
        v43 = 0;
        v44 = 0;
        v45 = 0;
        *(_BYTE *)(a1 + 60) |= 1u;
        while (2)
        {
          v46 = *v18;
          v47 = *(_QWORD *)(v3 + v46);
          v48 = v47 + 1;
          if (v47 == -1 || v48 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v19) = 1;
          }
          else
          {
            v49 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v47);
            *(_QWORD *)(v3 + v46) = v48;
            v45 |= (unint64_t)(v49 & 0x7F) << v43;
            if (v49 < 0)
            {
              v43 += 7;
              v28 = v44++ >= 9;
              if (v28)
              {
                LODWORD(v45) = 0;
                goto LABEL_75;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v19))
          LODWORD(v45) = 0;
LABEL_75:
        *(_DWORD *)(a1 + 52) = v45;
        goto LABEL_86;
      case 4:
        if ((v67 & 1) == 0)
          goto LABEL_70;
        v50 = 0;
        v51 = 0;
        v52 = 0;
        *(_BYTE *)(a1 + 60) |= 2u;
        while (2)
        {
          v53 = *v18;
          v54 = *(_QWORD *)(v3 + v53);
          v55 = v54 + 1;
          if (v54 == -1 || v55 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v19) = 1;
          }
          else
          {
            v56 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v54);
            *(_QWORD *)(v3 + v53) = v55;
            v52 |= (unint64_t)(v56 & 0x7F) << v50;
            if (v56 < 0)
            {
              v50 += 7;
              v28 = v51++ >= 9;
              if (v28)
              {
                v52 = 0;
                goto LABEL_79;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v19))
          v52 = 0;
LABEL_79:
        *(_BYTE *)(a1 + 56) = v52 != 0;
        goto LABEL_86;
      default:
        if ((v66 & 1) == 0 || (*(_BYTE *)(a1 + 60) & 4) != 0)
        {
LABEL_70:
          v57 = PBReaderSkipValueWithTag();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if ((v57 & 1) == 0)
          {
            v64 = 0;
            goto LABEL_88;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v39 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v40 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v39;

          }
          v41 = PBUnknownFieldAdd();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if (!v41)
          {
            v64 = 0;
            v65 = &OBJC_IVAR___GEOTransitVehicleInfo__pickupDropoffType;
            goto LABEL_89;
          }
        }
        goto LABEL_86;
    }
  }
}

void sub_188AFA6E4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188AFAD94(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAutocompleteParametersOfflineRegionSearchReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDAutocompleteParametersOfflineRegionSearchReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDAutocompleteParametersOfflineRegionSearchReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDAutocompleteParametersOfflineRegionSearchReadAllFrom_initialTag;
  Specified = GEOPDAutocompleteParametersOfflineRegionSearchReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    objc_msgSend(*(id *)(a1 + 32), "readAll:", 1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_188AFAF38(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAutocompleteParametersOfflineRegionSearchReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOPDAutocompleteParametersOfflineRegionSearchReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188AFAF98(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188AFB178(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDAutocompleteParametersOfflineRegionSearchIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v2 = (*(_BYTE *)(a1 + 60) & 0x38) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return v2;
}

void sub_188AFB4F4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188AFB838(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188AFBAA8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAutocompleteParametersPoiAddressOnlyReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  int *v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  BOOL v28;
  int v29;
  unint64_t v31;
  BOOL v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  uint64_t v37;
  void *v38;
  id v39;
  void *v40;
  int v41;
  GEOPDViewportInfo *v42;
  char v43;
  unsigned int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  char v50;
  unsigned int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  char v56;
  char v57;
  char v58;
  int v59;
  int v60;
  char v61;
  void *v62;
  int v64;
  int *v65;
  char v66;
  char v67;
  char v68;
  char v69;
  char v70;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = ((*(unsigned __int8 *)(a1 + 60) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 4) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 2) & 1);
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v12;
        v13 = v7;
        goto LABEL_8;
      case -3:
        v9 = 1;
        goto LABEL_7;
      case -2:
        v13 = v7;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 != 0;
        v66 = v16 & ~(_BYTE)v11 | v8;
        v67 = v9;
        v68 = v16 | v11 | v66;
        if ((((v16 | v11) | v9) & 1) != 0)
          v17 = 0;
        else
          v17 = a3;
        v69 = (v17 == 0) | v16 | v11;
        v70 = v16 | v11;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v7;
        v14 = v8;
LABEL_8:
        v15 = v11;
LABEL_10:
        ++v10;
        v7 = v13;
        v8 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v19))
      goto LABEL_87;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0)
        goto LABEL_25;
      v21 += 7;
      v28 = v22++ >= 9;
      if (v28)
      {
        v23 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_25:
    v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_27:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_87:
      v64 = 1;
      goto LABEL_88;
    }
    v31 = v23 >> 3;
    v32 = v70;
    if ((v69 & 1) == 0)
    {
      v33 = v17;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if (!v32)
          goto LABEL_70;
        if ((*(_BYTE *)(a1 + 60) & 8) == 0)
        {
          PBReaderReadString();
          v37 = objc_claimAutoreleasedReturnValue();
          v38 = *(void **)(a1 + 24);
          *(_QWORD *)(a1 + 24) = v37;
          goto LABEL_53;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_107;
        v58 = 16 * *(_BYTE *)(a1 + 60);
        goto LABEL_84;
      case 2:
        if (!v32)
          goto LABEL_70;
        if ((*(_BYTE *)(a1 + 60) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_107;
          v58 = 8 * *(_BYTE *)(a1 + 60);
LABEL_84:
          v10 += v58 >> 7;
          goto LABEL_85;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_107;
        v42 = objc_alloc_init(GEOPDViewportInfo);
        if (GEOPDViewportInfoReadAllFrom((uint64_t)v42, (void *)v3))
        {
          PBReaderRecallMark();
          v38 = *(void **)(a1 + 32);
          *(_QWORD *)(a1 + 32) = v42;
LABEL_53:

          --v10;
LABEL_85:
          v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_86:
          if (!(v68 & 1 | (v10 != 0)))
            goto LABEL_87;
          continue;
        }

LABEL_107:
        v64 = 0;
        v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_88:
        v65 = &OBJC_IVAR___GEOTransitVehicleInfo__pickupDropoffType;
        if ((v66 & 1) != 0)
LABEL_89:
          *(_BYTE *)(a1 + v65[975]) |= 4u;
        if (v70 & 1 | ((v64 & 1) == 0))
        {
          *(_BYTE *)(a1 + v65[975]) |= 8u;
          *(_BYTE *)(a1 + v65[975]) |= 0x10u;
          goto LABEL_100;
        }
        if (v17)
        {
          while (2)
          {
            while (1)
            {
              v60 = *v17++;
              v59 = v60;
              if (v60 == 1)
                break;
              if (v59 == 2)
              {
                v61 = 16;
                goto LABEL_99;
              }
              if (!v59)
                goto LABEL_100;
            }
            v61 = 8;
LABEL_99:
            *(_BYTE *)(a1 + v65[975]) |= v61;
            continue;
          }
        }
LABEL_100:
        if (v64)
          v3 = *(_BYTE *)(v3 + *v19) == 0;
        else
          v3 = 0;
        if ((v70 & 1) != 0)
        {
          v62 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      case 3:
        if ((v67 & 1) == 0)
          goto LABEL_70;
        v43 = 0;
        v44 = 0;
        v45 = 0;
        *(_BYTE *)(a1 + 60) |= 1u;
        while (2)
        {
          v46 = *v18;
          v47 = *(_QWORD *)(v3 + v46);
          v48 = v47 + 1;
          if (v47 == -1 || v48 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v19) = 1;
          }
          else
          {
            v49 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v47);
            *(_QWORD *)(v3 + v46) = v48;
            v45 |= (unint64_t)(v49 & 0x7F) << v43;
            if (v49 < 0)
            {
              v43 += 7;
              v28 = v44++ >= 9;
              if (v28)
              {
                LODWORD(v45) = 0;
                goto LABEL_75;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v19))
          LODWORD(v45) = 0;
LABEL_75:
        *(_DWORD *)(a1 + 52) = v45;
        goto LABEL_86;
      case 4:
        if ((v67 & 1) == 0)
          goto LABEL_70;
        v50 = 0;
        v51 = 0;
        v52 = 0;
        *(_BYTE *)(a1 + 60) |= 2u;
        while (2)
        {
          v53 = *v18;
          v54 = *(_QWORD *)(v3 + v53);
          v55 = v54 + 1;
          if (v54 == -1 || v55 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v19) = 1;
          }
          else
          {
            v56 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v54);
            *(_QWORD *)(v3 + v53) = v55;
            v52 |= (unint64_t)(v56 & 0x7F) << v50;
            if (v56 < 0)
            {
              v50 += 7;
              v28 = v51++ >= 9;
              if (v28)
              {
                v52 = 0;
                goto LABEL_79;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v19))
          v52 = 0;
LABEL_79:
        *(_BYTE *)(a1 + 56) = v52 != 0;
        goto LABEL_86;
      default:
        if ((v66 & 1) == 0 || (*(_BYTE *)(a1 + 60) & 4) != 0)
        {
LABEL_70:
          v57 = PBReaderSkipValueWithTag();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if ((v57 & 1) == 0)
          {
            v64 = 0;
            goto LABEL_88;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v39 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v40 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v39;

          }
          v41 = PBUnknownFieldAdd();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if (!v41)
          {
            v64 = 0;
            v65 = &OBJC_IVAR___GEOTransitVehicleInfo__pickupDropoffType;
            goto LABEL_89;
          }
        }
        goto LABEL_86;
    }
  }
}

void sub_188AFC2AC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188AFC95C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAutocompleteParametersPoiAddressOnlyReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDAutocompleteParametersPoiAddressOnlyReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDAutocompleteParametersPoiAddressOnlyReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDAutocompleteParametersPoiAddressOnlyReadAllFrom_initialTag;
  Specified = GEOPDAutocompleteParametersPoiAddressOnlyReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    objc_msgSend(*(id *)(a1 + 32), "readAll:", 1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_188AFCB00(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAutocompleteParametersPoiAddressOnlyReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOPDAutocompleteParametersPoiAddressOnlyReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188AFCB60(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188AFCD40(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDAutocompleteParametersPoiAddressOnlyIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v2 = (*(_BYTE *)(a1 + 60) & 0x38) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return v2;
}

void sub_188AFD0BC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188AFD400(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188AFD670(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAutocompleteParametersSiriSearchReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  int *v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  BOOL v28;
  int v29;
  unint64_t v31;
  BOOL v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  void *v40;
  int v41;
  GEOPDViewportInfo *v42;
  void *v43;
  char v44;
  unsigned int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  char v50;
  char v51;
  unsigned int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  char v57;
  char v58;
  unsigned int v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  char v64;
  char v65;
  BOOL v66;
  uint64_t v67;
  char v68;
  int v69;
  char v70;
  void *v71;
  int v73;
  int *v74;
  char v75;
  char v76;
  char v77;
  char v78;
  char v79;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 52);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 48));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = vaddv_s16((int16x4_t)(*(_QWORD *)&vshl_u16((uint16x4_t)(*(_QWORD *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 68)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFDFFFCFFFBFFFALL) & 0xFF01FF01FF01FF01));
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v9])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 > 1;
        v75 = v16 & ~(_BYTE)v11 | v7;
        v76 = v8;
        v77 = v16 | v11 | v75;
        if ((((v16 | v11) | v8) & 1) != 0)
          v17 = 0;
        else
          v17 = a3;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v78 = (v17 == 0) | v16 | v11;
        v79 = v16 | v11;
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v7;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v9;
        v7 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v19))
      goto LABEL_106;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0)
        goto LABEL_25;
      v21 += 7;
      v28 = v22++ >= 9;
      if (v28)
      {
        v23 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_25:
    v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_27:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_106:
      v73 = 1;
      goto LABEL_107;
    }
    v31 = v23 >> 3;
    v32 = v79;
    if ((v78 & 1) == 0)
    {
      v33 = v17;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if (!v32)
          goto LABEL_82;
        if ((*(_BYTE *)(a1 + 68) & 0x20) == 0)
        {
          PBReaderReadString();
          v37 = objc_claimAutoreleasedReturnValue();
          v38 = 32;
          goto LABEL_72;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_123;
        v68 = 4 * *(_BYTE *)(a1 + 68);
        goto LABEL_103;
      case 2:
        if (!v32)
          goto LABEL_82;
        if ((*(_BYTE *)(a1 + 68) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_123;
          v68 = 2 * *(_BYTE *)(a1 + 68);
LABEL_103:
          v9 += v68 >> 7;
          goto LABEL_104;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_123;
        v42 = objc_alloc_init(GEOPDViewportInfo);
        if (GEOPDViewportInfoReadAllFrom((uint64_t)v42, (void *)v3))
        {
          PBReaderRecallMark();
          v43 = *(void **)(a1 + 40);
          *(_QWORD *)(a1 + 40) = v42;
LABEL_73:

          --v9;
LABEL_104:
          v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_105:
          if (!(v77 & 1 | (v9 != 0)))
            goto LABEL_106;
          continue;
        }

LABEL_123:
        v73 = 0;
        v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_107:
        v74 = &OBJC_IVAR___GEOTransitVehicleInfo__pickupDropoffType;
        if ((v75 & 1) != 0)
LABEL_108:
          *(_BYTE *)(a1 + v74[985]) |= 8u;
        if (v79 & 1 | ((v73 & 1) == 0))
        {
          *(_BYTE *)(a1 + v74[985]) |= 0x20u;
          *(_BYTE *)(a1 + v74[985]) |= 0x40u;
          *(_BYTE *)(a1 + v74[985]) |= 0x10u;
        }
        else if (v17)
        {
          while (1)
          {
            v69 = *v17++;
            v70 = 32;
            switch(v69)
            {
              case 0:
                goto LABEL_116;
              case 1:
                goto LABEL_115;
              case 2:
                v70 = 64;
                goto LABEL_115;
              case 5:
                v70 = 16;
LABEL_115:
                *(_BYTE *)(a1 + v74[985]) |= v70;
                break;
              default:
                continue;
            }
          }
        }
LABEL_116:
        if (v73)
          v3 = *(_BYTE *)(v3 + *v19) == 0;
        else
          v3 = 0;
        if ((v79 & 1) != 0)
        {
          v71 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      case 3:
        if ((v76 & 1) == 0)
          goto LABEL_82;
        v44 = 0;
        v45 = 0;
        v46 = 0;
        *(_BYTE *)(a1 + 68) |= 1u;
        while (2)
        {
          v47 = *v18;
          v48 = *(_QWORD *)(v3 + v47);
          v49 = v48 + 1;
          if (v48 == -1 || v49 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v19) = 1;
          }
          else
          {
            v50 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v48);
            *(_QWORD *)(v3 + v47) = v49;
            v46 |= (unint64_t)(v50 & 0x7F) << v44;
            if (v50 < 0)
            {
              v44 += 7;
              v28 = v45++ >= 9;
              if (v28)
              {
                LODWORD(v46) = 0;
                goto LABEL_87;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v19))
          LODWORD(v46) = 0;
LABEL_87:
        *(_DWORD *)(a1 + 60) = v46;
        goto LABEL_105;
      case 4:
        if ((v76 & 1) == 0)
          goto LABEL_82;
        v51 = 0;
        v52 = 0;
        v53 = 0;
        *(_BYTE *)(a1 + 68) |= 4u;
        while (2)
        {
          v54 = *v18;
          v55 = *(_QWORD *)(v3 + v54);
          v56 = v55 + 1;
          if (v55 == -1 || v56 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v19) = 1;
          }
          else
          {
            v57 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v55);
            *(_QWORD *)(v3 + v54) = v56;
            v53 |= (unint64_t)(v57 & 0x7F) << v51;
            if (v57 < 0)
            {
              v51 += 7;
              v28 = v52++ >= 9;
              if (v28)
              {
                v53 = 0;
                goto LABEL_91;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v19))
          v53 = 0;
LABEL_91:
        v66 = v53 != 0;
        v67 = 65;
        goto LABEL_96;
      case 5:
        if (!v32)
          goto LABEL_82;
        if ((*(_BYTE *)(a1 + 68) & 0x10) == 0)
        {
          PBReaderReadString();
          v37 = objc_claimAutoreleasedReturnValue();
          v38 = 24;
LABEL_72:
          v43 = *(void **)(a1 + v38);
          *(_QWORD *)(a1 + v38) = v37;
          goto LABEL_73;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_123;
        v68 = 8 * *(_BYTE *)(a1 + 68);
        goto LABEL_103;
      case 6:
        if ((v76 & 1) == 0)
          goto LABEL_82;
        v58 = 0;
        v59 = 0;
        v60 = 0;
        *(_BYTE *)(a1 + 68) |= 2u;
        while (2)
        {
          v61 = *v18;
          v62 = *(_QWORD *)(v3 + v61);
          v63 = v62 + 1;
          if (v62 == -1 || v63 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v19) = 1;
          }
          else
          {
            v64 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v62);
            *(_QWORD *)(v3 + v61) = v63;
            v60 |= (unint64_t)(v64 & 0x7F) << v58;
            if (v64 < 0)
            {
              v58 += 7;
              v28 = v59++ >= 9;
              if (v28)
              {
                v60 = 0;
                goto LABEL_95;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v19))
          v60 = 0;
LABEL_95:
        v66 = v60 != 0;
        v67 = 64;
LABEL_96:
        *(_BYTE *)(a1 + v67) = v66;
        goto LABEL_105;
      default:
        if ((v75 & 1) == 0 || (*(_BYTE *)(a1 + 68) & 8) != 0)
        {
LABEL_82:
          v65 = PBReaderSkipValueWithTag();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if ((v65 & 1) == 0)
          {
            v73 = 0;
            goto LABEL_107;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v39 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v40 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v39;

          }
          v41 = PBUnknownFieldAdd();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if (!v41)
          {
            v73 = 0;
            v74 = &OBJC_IVAR___GEOTransitVehicleInfo__pickupDropoffType;
            goto LABEL_108;
          }
        }
        goto LABEL_105;
    }
  }
}

void sub_188AFDFBC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188AFE294(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188AFEB10(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAutocompleteParametersSiriSearchReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 52))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDAutocompleteParametersSiriSearchReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 52) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDAutocompleteParametersSiriSearchReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDAutocompleteParametersSiriSearchReadAllFrom_initialTag;
  Specified = GEOPDAutocompleteParametersSiriSearchReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    objc_msgSend(*(id *)(a1 + 40), "readAll:", 1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_188AFECB4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAutocompleteParametersSiriSearchReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOPDAutocompleteParametersSiriSearchReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188AFED14(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188AFEF38(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDAutocompleteParametersSiriSearchIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v2 = *(unsigned __int8 *)(a1 + 68) > 0xFu;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return v2;
}

void sub_188AFF338(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188AFF760(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188AFF9DC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAutocompleteParametersVenueSearchReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  const __int16 *v12;
  uint16x4_t v13;
  int16x4_t v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  char v20;
  int *v21;
  int *v22;
  int *v23;
  int *v24;
  char v25;
  unsigned int v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  BOOL v32;
  int v33;
  unint64_t v35;
  BOOL v36;
  int *v37;
  int v38;
  int v39;
  BOOL v40;
  uint64_t v41;
  void *v42;
  id v43;
  void *v44;
  int v45;
  GEOPDViewportInfo *v46;
  char v47;
  unsigned int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  char v53;
  char v54;
  unsigned int v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  char v60;
  char v61;
  unsigned int v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  char v67;
  char v68;
  unsigned int v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  char v73;
  char v74;
  unsigned int v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  char v79;
  char v80;
  unsigned int v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  char v85;
  void *v86;
  char v87;
  uint64_t v88;
  __int16 v89;
  int v90;
  __int16 v91;
  void *v92;
  int v94;
  int *v95;
  char v96;
  char v97;
  char v98;
  char v99;
  char v100;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 88));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 84);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 80));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = (const __int16 *)(a1 + 100);
  v13 = (uint16x4_t)vld1_dup_s16(v12);
  v14 = (int16x4_t)vand_s8((int8x8_t)vshl_u16(v13, (uint16x4_t)0xFFFAFFF9FFF8FFF7), (int8x8_t)0x1000100010001);
  v14.i16[0] = vaddv_s16(v14);
  v15 = v14.i32[0];
  while (2)
  {
    v16 = 1;
    v17 = 1;
    v18 = 1;
    switch(a3[v9])
    {
      case -4:
        ++v15;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v17 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v19 = v15 > 1;
        v20 = v19 | v11;
        v96 = v19 & ~(_BYTE)v11 | v7;
        v97 = v8;
        v99 = v19 | v11 | v96;
        if ((((v19 | v11) | v8) & 1) != 0)
          v21 = 0;
        else
          v21 = a3;
        v22 = (int *)MEMORY[0x1E0D82BF0];
        v23 = (int *)MEMORY[0x1E0D82BC8];
        v100 = (v21 == 0) | v20;
        v24 = (int *)MEMORY[0x1E0D82BB8];
        v98 = v19 | v11;
        break;
      default:
        ++v15;
LABEL_7:
        v16 = v7;
LABEL_8:
        v17 = v10;
        v18 = v11;
LABEL_10:
        ++v9;
        v7 = v16;
        v10 = v17;
        v11 = v18;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v22) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v23))
      goto LABEL_141;
    v25 = 0;
    v26 = 0;
    v27 = 0;
    while (1)
    {
      v28 = *v22;
      v29 = *(_QWORD *)(v3 + v28);
      v30 = v29 + 1;
      if (v29 == -1 || v30 > *(_QWORD *)(v3 + *v6))
        break;
      v31 = *(_BYTE *)(*(_QWORD *)(v3 + *v24) + v29);
      *(_QWORD *)(v3 + v28) = v30;
      v27 |= (unint64_t)(v31 & 0x7F) << v25;
      if ((v31 & 0x80) == 0)
        goto LABEL_25;
      v25 += 7;
      v32 = v26++ >= 9;
      if (v32)
      {
        v27 = 0;
        v33 = *(unsigned __int8 *)(v3 + *v23);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v23) = 1;
LABEL_25:
    v33 = *(unsigned __int8 *)(v3 + *v23);
    if (*(_BYTE *)(v3 + *v23))
      v27 = 0;
LABEL_27:
    if (v33 || (v27 & 7) == 4)
    {
LABEL_141:
      v94 = 1;
      goto LABEL_142;
    }
    v35 = v27 >> 3;
    v36 = v20;
    if ((v100 & 1) == 0)
    {
      v37 = v21;
      do
      {
        v39 = *v37++;
        v38 = v39;
        v36 = v39 != 0;
        if (v39)
          v40 = v38 == (_DWORD)v35;
        else
          v40 = 1;
      }
      while (!v40);
    }
    switch((int)v35)
    {
      case 1:
        if (!v36)
          goto LABEL_107;
        if ((*(_WORD *)(a1 + 100) & 0x100) == 0)
        {
          PBReaderReadString();
          v41 = objc_claimAutoreleasedReturnValue();
          v42 = *(void **)(a1 + 48);
          *(_QWORD *)(a1 + 48) = v41;
          goto LABEL_53;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_158;
        v89 = *(_WORD *)(a1 + 100) << 7;
        goto LABEL_138;
      case 2:
        if (!v36)
          goto LABEL_107;
        if ((*(_WORD *)(a1 + 100) & 0x200) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_158;
          v89 = *(_WORD *)(a1 + 100) << 6;
LABEL_138:
          v9 += v89 >> 15;
          goto LABEL_139;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_158;
        v46 = objc_alloc_init(GEOPDViewportInfo);
        if (GEOPDViewportInfoReadAllFrom((uint64_t)v46, (void *)v3))
        {
          PBReaderRecallMark();
          v42 = *(void **)(a1 + 72);
          *(_QWORD *)(a1 + 72) = v46;
LABEL_53:

          --v9;
LABEL_139:
          v20 = v98;
          v23 = (int *)MEMORY[0x1E0D82BC8];
LABEL_140:
          if (!(v99 & 1 | (v9 != 0)))
            goto LABEL_141;
          continue;
        }

LABEL_158:
        v94 = 0;
        v20 = v98;
        v23 = (int *)MEMORY[0x1E0D82BC8];
LABEL_142:
        v95 = &OBJC_IVAR___GEOTransitVehicleInfo__pickupDropoffType;
        if ((v96 & 1) != 0)
LABEL_143:
          *(_WORD *)(a1 + v95[997]) |= 0x40u;
        if (v20 & 1 | ((v94 & 1) == 0))
        {
          *(_WORD *)(a1 + v95[997]) |= 0x100u;
          *(_WORD *)(a1 + v95[997]) |= 0x200u;
          *(_WORD *)(a1 + v95[997]) |= 0x80u;
        }
        else if (v21)
        {
          while (1)
          {
            v90 = *v21++;
            v91 = 256;
            switch(v90)
            {
              case 0:
                goto LABEL_151;
              case 1:
                goto LABEL_150;
              case 2:
                v91 = 512;
                goto LABEL_150;
              case 9:
                v91 = 128;
LABEL_150:
                *(_WORD *)(a1 + v95[997]) |= v91;
                break;
              default:
                continue;
            }
          }
        }
LABEL_151:
        if (v94)
        {
          v3 = *(_BYTE *)(v3 + *v23) == 0;
          if ((v20 & 1) == 0)
            return v3;
LABEL_155:
          v92 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        else
        {
          v3 = 0;
          if ((v20 & 1) != 0)
            goto LABEL_155;
        }
        return v3;
      case 3:
        if ((v97 & 1) == 0)
          goto LABEL_107;
        v47 = 0;
        v48 = 0;
        v49 = 0;
        *(_WORD *)(a1 + 100) |= 0x10u;
        while (2)
        {
          v50 = *v22;
          v51 = *(_QWORD *)(v3 + v50);
          v52 = v51 + 1;
          if (v51 == -1 || v52 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v23) = 1;
          }
          else
          {
            v53 = *(_BYTE *)(*(_QWORD *)(v3 + *v24) + v51);
            *(_QWORD *)(v3 + v50) = v52;
            v49 |= (unint64_t)(v53 & 0x7F) << v47;
            if (v53 < 0)
            {
              v47 += 7;
              v32 = v48++ >= 9;
              if (v32)
              {
                LODWORD(v49) = 0;
                goto LABEL_112;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v23))
          LODWORD(v49) = 0;
LABEL_112:
        *(_DWORD *)(a1 + 92) = v49;
        goto LABEL_140;
      case 4:
        if ((v97 & 1) == 0)
          goto LABEL_107;
        v54 = 0;
        v55 = 0;
        v56 = 0;
        *(_WORD *)(a1 + 100) |= 0x20u;
        while (2)
        {
          v57 = *v22;
          v58 = *(_QWORD *)(v3 + v57);
          v59 = v58 + 1;
          if (v58 == -1 || v59 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v23) = 1;
          }
          else
          {
            v60 = *(_BYTE *)(*(_QWORD *)(v3 + *v24) + v58);
            *(_QWORD *)(v3 + v57) = v59;
            v56 |= (unint64_t)(v60 & 0x7F) << v54;
            if (v60 < 0)
            {
              v54 += 7;
              v32 = v55++ >= 9;
              if (v32)
              {
                v56 = 0;
                goto LABEL_116;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v23))
          v56 = 0;
LABEL_116:
        *(_BYTE *)(a1 + 96) = v56 != 0;
        goto LABEL_140;
      case 5:
        if ((v97 & 1) == 0)
          goto LABEL_107;
        v61 = 0;
        v62 = 0;
        v63 = 0;
        *(_WORD *)(a1 + 100) |= 8u;
        while (2)
        {
          v64 = *v22;
          v65 = *(_QWORD *)(v3 + v64);
          v66 = v65 + 1;
          if (v65 == -1 || v66 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v23) = 1;
          }
          else
          {
            v67 = *(_BYTE *)(*(_QWORD *)(v3 + *v24) + v65);
            *(_QWORD *)(v3 + v64) = v66;
            v63 |= (unint64_t)(v67 & 0x7F) << v61;
            if (v67 < 0)
            {
              v61 += 7;
              v32 = v62++ >= 9;
              if (v32)
              {
                v63 = 0;
                goto LABEL_120;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v23))
          v63 = 0;
LABEL_120:
        v88 = 64;
        goto LABEL_133;
      case 6:
        if ((v97 & 1) == 0)
          goto LABEL_107;
        v68 = 0;
        v69 = 0;
        v63 = 0;
        *(_WORD *)(a1 + 100) |= 2u;
        while (2)
        {
          v70 = *v22;
          v71 = *(_QWORD *)(v3 + v70);
          v72 = v71 + 1;
          if (v71 == -1 || v72 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v23) = 1;
          }
          else
          {
            v73 = *(_BYTE *)(*(_QWORD *)(v3 + *v24) + v71);
            *(_QWORD *)(v3 + v70) = v72;
            v63 |= (unint64_t)(v73 & 0x7F) << v68;
            if (v73 < 0)
            {
              v68 += 7;
              v32 = v69++ >= 9;
              if (v32)
              {
                v63 = 0;
                goto LABEL_124;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v23))
          v63 = 0;
LABEL_124:
        v88 = 40;
        goto LABEL_133;
      case 7:
        if ((v97 & 1) == 0)
          goto LABEL_107;
        v74 = 0;
        v75 = 0;
        v63 = 0;
        *(_WORD *)(a1 + 100) |= 4u;
        while (2)
        {
          v76 = *v22;
          v77 = *(_QWORD *)(v3 + v76);
          v78 = v77 + 1;
          if (v77 == -1 || v78 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v23) = 1;
          }
          else
          {
            v79 = *(_BYTE *)(*(_QWORD *)(v3 + *v24) + v77);
            *(_QWORD *)(v3 + v76) = v78;
            v63 |= (unint64_t)(v79 & 0x7F) << v74;
            if (v79 < 0)
            {
              v74 += 7;
              v32 = v75++ >= 9;
              if (v32)
              {
                v63 = 0;
                goto LABEL_128;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v23))
          v63 = 0;
LABEL_128:
        v88 = 56;
        goto LABEL_133;
      case 8:
        if ((v97 & 1) == 0)
          goto LABEL_107;
        v80 = 0;
        v81 = 0;
        v63 = 0;
        *(_WORD *)(a1 + 100) |= 1u;
        while (2)
        {
          v82 = *v22;
          v83 = *(_QWORD *)(v3 + v82);
          v84 = v83 + 1;
          if (v83 == -1 || v84 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v23) = 1;
          }
          else
          {
            v85 = *(_BYTE *)(*(_QWORD *)(v3 + *v24) + v83);
            *(_QWORD *)(v3 + v82) = v84;
            v63 |= (unint64_t)(v85 & 0x7F) << v80;
            if (v85 < 0)
            {
              v80 += 7;
              v32 = v81++ >= 9;
              if (v32)
              {
                v63 = 0;
                goto LABEL_132;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v23))
          v63 = 0;
LABEL_132:
        v88 = 24;
LABEL_133:
        *(_QWORD *)(a1 + v88) = v63;
        goto LABEL_140;
      case 9:
        if (!v36 || (*(_WORD *)(a1 + 100) & 0x80) != 0)
          goto LABEL_107;
        PBReaderReadString();
        v86 = (void *)objc_claimAutoreleasedReturnValue();
        if (v86)
          -[GEOPDAutocompleteParametersVenueSearch _addNoFlagsCategory:](a1, v86);

        goto LABEL_139;
      default:
        if ((v96 & 1) == 0 || (*(_WORD *)(a1 + 100) & 0x40) != 0)
        {
LABEL_107:
          v87 = PBReaderSkipValueWithTag();
          v23 = (int *)MEMORY[0x1E0D82BC8];
          v20 = v98;
          if ((v87 & 1) == 0)
          {
            v94 = 0;
            goto LABEL_142;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v43 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v44 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v43;

          }
          v45 = PBUnknownFieldAdd();
          v20 = v98;
          v23 = (int *)MEMORY[0x1E0D82BC8];
          if (!v45)
          {
            v94 = 0;
            v95 = &OBJC_IVAR___GEOTransitVehicleInfo__pickupDropoffType;
            goto LABEL_143;
          }
        }
        goto LABEL_140;
    }
  }
}

void sub_188B00544(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B009FC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B01724(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAutocompleteParametersVenueSearchReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 84))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDAutocompleteParametersVenueSearchReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 88));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 80) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 84) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDAutocompleteParametersVenueSearchReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDAutocompleteParametersVenueSearchReadAllFrom_initialTag;
  Specified = GEOPDAutocompleteParametersVenueSearchReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    objc_msgSend(*(id *)(a1 + 72), "readAll:", 1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 88));
  return Specified;
}

void sub_188B018C8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAutocompleteParametersVenueSearchReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOPDAutocompleteParametersVenueSearchReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188B01928(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B01C64(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDAutocompleteParametersVenueSearchIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 88));
  v2 = (*(_WORD *)(a1 + 100) & 0x780) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 88));
  return v2;
}

void sub_188B02284(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B0289C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B02B1C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAutocompleteResultReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  int8x16_t v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  char v19;
  int *v20;
  int *v21;
  int *v22;
  int *v23;
  char v24;
  unsigned int v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  BOOL v31;
  int v32;
  unint64_t v34;
  BOOL v35;
  int *v36;
  int v37;
  int v38;
  BOOL v39;
  GEOPDAutocompleteResultSection *v40;
  char v41;
  unsigned int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  char v47;
  char v48;
  unsigned int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  char v55;
  unsigned int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  char v61;
  char v62;
  unsigned int v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  char v68;
  char v69;
  unsigned int v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  char v75;
  id v76;
  void *v77;
  int v78;
  char v79;
  unsigned int v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  char v85;
  uint64_t v86;
  char v87;
  unsigned int v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  char v93;
  void *v94;
  char v95;
  unsigned int v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  char v101;
  char v102;
  unsigned int v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  char v107;
  char v108;
  unsigned int v109;
  uint64_t v110;
  uint64_t v111;
  unint64_t v112;
  char v113;
  char v114;
  unsigned int v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  unint64_t v119;
  char v120;
  char v121;
  BOOL v122;
  uint64_t v123;
  uint64_t v124;
  int v125;
  int v126;
  int v127;
  int v128;
  void *v129;
  int v131;
  char v132;
  char v133;
  char v134;
  char v135;
  char v136;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 76);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 72));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
  v13.i64[0] = 0x100000001;
  v13.i64[1] = 0x100000001;
  v14 = vaddvq_s32((int32x4_t)vandq_s8((int8x16_t)vshlq_u32((uint32x4_t)vdupq_n_s32(*(_DWORD *)(a1 + 104)), (uint32x4_t)xmmword_189CC9D10), v13))+ ((*(_DWORD *)(a1 + 104) >> 14) & 1)+ ((*(_DWORD *)(a1 + 104) >> 15) & 1)+ ((*(_DWORD *)(a1 + 104) >> 11) & 1);
  while (2)
  {
    v15 = 1;
    v16 = 1;
    v17 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v14;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v16 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v18 = v14 > 3;
        v19 = v18 | v11;
        v132 = v18 & ~(_BYTE)v11 | v9;
        v133 = v8;
        v135 = v18 | v11 | v132;
        if ((((v18 | v11) | v8) & 1) != 0)
          v20 = 0;
        else
          v20 = a3;
        v21 = (int *)MEMORY[0x1E0D82BF0];
        v136 = (v20 == 0) | v19;
        v22 = (int *)MEMORY[0x1E0D82BC8];
        v23 = (int *)MEMORY[0x1E0D82BB8];
        v134 = v18 | v11;
        break;
      default:
        ++v14;
LABEL_7:
        v15 = v9;
LABEL_8:
        v16 = v10;
        v17 = v11;
LABEL_10:
        ++v7;
        v9 = v15;
        v10 = v16;
        v11 = v17;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v21) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v22))
      goto LABEL_223;
    v24 = 0;
    v25 = 0;
    v26 = 0;
    while (1)
    {
      v27 = *v21;
      v28 = *(_QWORD *)(v3 + v27);
      v29 = v28 + 1;
      if (v28 == -1 || v29 > *(_QWORD *)(v3 + *v6))
        break;
      v30 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v28);
      *(_QWORD *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0)
        goto LABEL_25;
      v24 += 7;
      v31 = v25++ >= 9;
      if (v31)
      {
        v26 = 0;
        v32 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v22) = 1;
LABEL_25:
    v32 = *(unsigned __int8 *)(v3 + *v22);
    if (*(_BYTE *)(v3 + *v22))
      v26 = 0;
LABEL_27:
    if (v32 || (v26 & 7) == 4)
    {
LABEL_223:
      v131 = 1;
      goto LABEL_224;
    }
    v34 = v26 >> 3;
    v35 = v19;
    if ((v136 & 1) == 0)
    {
      v36 = v20;
      do
      {
        v38 = *v36++;
        v37 = v38;
        v35 = v38 != 0;
        if (v38)
          v39 = v37 == (_DWORD)v34;
        else
          v39 = 1;
      }
      while (!v39);
    }
    switch((int)v34)
    {
      case 1:
        if (!v35 || (*(_BYTE *)(a1 + v12[167] + 2) & 1) != 0)
          goto LABEL_166;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_248;
        v40 = objc_alloc_init(GEOPDAutocompleteResultSection);
        if (!GEOPDAutocompleteResultSectionReadAllFrom((uint64_t)v40, (void *)v3, v10 & 1))
          goto LABEL_247;
        PBReaderRecallMark();
        -[GEOPDAutocompleteResult _addNoFlagsSections:](a1, v40);
        goto LABEL_100;
      case 2:
        if ((v133 & 1) == 0)
          goto LABEL_166;
        v41 = 0;
        v42 = 0;
        v43 = 0;
        *(_DWORD *)(a1 + v12[167]) |= 8u;
        while (2)
        {
          v44 = *v21;
          v45 = *(_QWORD *)(v3 + v44);
          v46 = v45 + 1;
          if (v45 == -1 || v46 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v22) = 1;
          }
          else
          {
            v47 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v45);
            *(_QWORD *)(v3 + v44) = v46;
            v43 |= (unint64_t)(v47 & 0x7F) << v41;
            if (v47 < 0)
            {
              v41 += 7;
              v31 = v42++ >= 9;
              if (v31)
              {
                v43 = 0;
                goto LABEL_171;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v22))
          v43 = 0;
LABEL_171:
        v122 = v43 != 0;
        v123 = 96;
        goto LABEL_213;
      case 3:
        if ((v133 & 1) == 0)
          goto LABEL_166;
        v48 = 0;
        v49 = 0;
        v50 = 0;
        *(_DWORD *)(a1 + v12[167]) |= 0x100u;
        while (2)
        {
          v51 = *v21;
          v52 = *(_QWORD *)(v3 + v51);
          v53 = v52 + 1;
          if (v52 == -1 || v53 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v22) = 1;
          }
          else
          {
            v54 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v52);
            *(_QWORD *)(v3 + v51) = v53;
            v50 |= (unint64_t)(v54 & 0x7F) << v48;
            if (v54 < 0)
            {
              v48 += 7;
              v31 = v49++ >= 9;
              if (v31)
              {
                v50 = 0;
                goto LABEL_175;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v22))
          v50 = 0;
LABEL_175:
        v122 = v50 != 0;
        v123 = 101;
        goto LABEL_213;
      case 4:
        if ((v133 & 1) == 0)
          goto LABEL_166;
        v55 = 0;
        v56 = 0;
        v57 = 0;
        *(_DWORD *)(a1 + v12[167]) |= 4u;
        while (2)
        {
          v58 = *v21;
          v59 = *(_QWORD *)(v3 + v58);
          v60 = v59 + 1;
          if (v59 == -1 || v60 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v22) = 1;
          }
          else
          {
            v61 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v59);
            *(_QWORD *)(v3 + v58) = v60;
            v57 |= (unint64_t)(v61 & 0x7F) << v55;
            if (v61 < 0)
            {
              v55 += 7;
              v31 = v56++ >= 9;
              if (v31)
              {
                LODWORD(v57) = 0;
                goto LABEL_179;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v22))
          LODWORD(v57) = 0;
LABEL_179:
        v124 = 92;
        goto LABEL_208;
      case 5:
        if ((v133 & 1) == 0)
          goto LABEL_166;
        v62 = 0;
        v63 = 0;
        v64 = 0;
        *(_DWORD *)(a1 + v12[167]) |= 0x20u;
        while (2)
        {
          v65 = *v21;
          v66 = *(_QWORD *)(v3 + v65);
          v67 = v66 + 1;
          if (v66 == -1 || v67 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v22) = 1;
          }
          else
          {
            v68 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v66);
            *(_QWORD *)(v3 + v65) = v67;
            v64 |= (unint64_t)(v68 & 0x7F) << v62;
            if (v68 < 0)
            {
              v62 += 7;
              v31 = v63++ >= 9;
              if (v31)
              {
                v64 = 0;
                goto LABEL_183;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v22))
          v64 = 0;
LABEL_183:
        v122 = v64 != 0;
        v123 = 98;
        goto LABEL_213;
      case 6:
        if (!v35 || (*(_BYTE *)(a1 + v12[167] + 2) & 2) != 0)
          goto LABEL_166;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_248;
        v40 = objc_alloc_init(GEOPDAutocompleteResultSortPriorityMapping);
        if (!GEOPDAutocompleteResultSortPriorityMappingReadAllFrom((uint64_t)v40, (void *)v3))
          goto LABEL_247;
        PBReaderRecallMark();
        -[GEOPDAutocompleteResult _addNoFlagsSortPriorityMapping:](a1, v40);
        goto LABEL_100;
      case 7:
        if ((v133 & 1) == 0)
          goto LABEL_166;
        v69 = 0;
        v70 = 0;
        v71 = 0;
        *(_DWORD *)(a1 + v12[167]) |= 0x40u;
        while (2)
        {
          v72 = *v21;
          v73 = *(_QWORD *)(v3 + v72);
          v74 = v73 + 1;
          if (v73 == -1 || v74 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v22) = 1;
          }
          else
          {
            v75 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v73);
            *(_QWORD *)(v3 + v72) = v74;
            v71 |= (unint64_t)(v75 & 0x7F) << v69;
            if (v75 < 0)
            {
              v69 += 7;
              v31 = v70++ >= 9;
              if (v31)
              {
                v71 = 0;
                goto LABEL_187;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v22))
          v71 = 0;
LABEL_187:
        v122 = v71 != 0;
        v123 = 99;
        goto LABEL_213;
      case 15:
        if (!v35 || (*(_BYTE *)(a1 + v12[167] + 1) & 0x20) != 0)
          goto LABEL_166;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_248;
        v40 = objc_alloc_init(GEOPDClientRankingFeatureMetadata);
        if (!GEOPDClientRankingFeatureMetadataReadAllFrom((uint64_t)v40, (void *)v3, v10 & 1))
          goto LABEL_247;
        PBReaderRecallMark();
        -[GEOPDAutocompleteResult _addNoFlagsClientRankingFeatureMetadata:](a1, v40);
LABEL_100:

        goto LABEL_133;
      case 16:
        if ((v133 & 1) == 0)
          goto LABEL_166;
        v79 = 0;
        v80 = 0;
        v81 = 0;
        *(_DWORD *)(a1 + v12[167]) |= 0x80u;
        while (2)
        {
          v82 = *v21;
          v83 = *(_QWORD *)(v3 + v82);
          v84 = v83 + 1;
          if (v83 == -1 || v84 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v22) = 1;
          }
          else
          {
            v85 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v83);
            *(_QWORD *)(v3 + v82) = v84;
            v81 |= (unint64_t)(v85 & 0x7F) << v79;
            if (v85 < 0)
            {
              v79 += 7;
              v31 = v80++ >= 9;
              if (v31)
              {
                v81 = 0;
                goto LABEL_191;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v22))
          v81 = 0;
LABEL_191:
        v122 = v81 != 0;
        v123 = 100;
        goto LABEL_213;
      case 17:
        if (!v35)
          goto LABEL_166;
        if ((*(_BYTE *)(a1 + v12[167] + 1) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_248;
          v12 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
          v125 = (int)(*(_DWORD *)(a1 + 104) << 19) >> 31;
          goto LABEL_220;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_248;
        v40 = objc_alloc_init(GEOPDAutocompleteSessionData);
        if (!GEOPDAutocompleteSessionDataReadAllFrom((uint64_t)v40, (void *)v3))
          goto LABEL_247;
        PBReaderRecallMark();
        v86 = 24;
        goto LABEL_132;
      case 18:
        if (!v35)
          goto LABEL_166;
        if ((*(_BYTE *)(a1 + v12[167] + 1) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_248;
          v12 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
          v125 = (int)(*(_DWORD *)(a1 + 104) << 17) >> 31;
          goto LABEL_220;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_248;
        v40 = objc_alloc_init(GEOPDParsecQueryRankingFeatures);
        if (!GEOPDParsecQueryRankingFeaturesReadAllFrom((uint64_t)v40, (void *)v3))
          goto LABEL_247;
        PBReaderRecallMark();
        v86 = 40;
        goto LABEL_132;
      case 19:
        if ((v133 & 1) == 0)
          goto LABEL_166;
        v87 = 0;
        v88 = 0;
        v89 = 0;
        *(_DWORD *)(a1 + v12[167]) |= 0x200u;
        while (2)
        {
          v90 = *v21;
          v91 = *(_QWORD *)(v3 + v90);
          v92 = v91 + 1;
          if (v91 == -1 || v92 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v22) = 1;
          }
          else
          {
            v93 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v91);
            *(_QWORD *)(v3 + v90) = v92;
            v89 |= (unint64_t)(v93 & 0x7F) << v87;
            if (v93 < 0)
            {
              v87 += 7;
              v31 = v88++ >= 9;
              if (v31)
              {
                v89 = 0;
                goto LABEL_195;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v22))
          v89 = 0;
LABEL_195:
        v122 = v89 != 0;
        v123 = 102;
        goto LABEL_213;
      case 20:
        if (!v35)
          goto LABEL_166;
        if ((*(_BYTE *)(a1 + v12[167] + 1) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_248;
          v12 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
          v125 = (int)(*(_DWORD *)(a1 + 104) << 16) >> 31;
LABEL_220:
          v7 += v125;
LABEL_221:
          v19 = v134;
          v22 = (int *)MEMORY[0x1E0D82BC8];
LABEL_222:
          if (!(v135 & 1 | (v7 != 0)))
            goto LABEL_223;
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_248;
        v40 = objc_alloc_init(GEOPDPlaceSummaryLayoutMetadata);
        if (GEOPDPlaceSummaryLayoutMetadataReadAllFrom((uint64_t)v40, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          v86 = 48;
LABEL_132:
          v94 = *(void **)(a1 + v86);
          *(_QWORD *)(a1 + v86) = v40;

          --v7;
LABEL_133:
          v12 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
          goto LABEL_221;
        }
LABEL_247:

LABEL_248:
        v131 = 0;
        v12 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
        v19 = v134;
        v22 = (int *)MEMORY[0x1E0D82BC8];
LABEL_224:
        if ((v132 & 1) != 0)
LABEL_225:
          *(_DWORD *)(a1 + v12[167]) |= 0x800u;
        if (v19 & 1 | ((v131 & 1) == 0))
        {
          *(_DWORD *)(a1 + v12[167]) |= 0x10000u;
          *(_DWORD *)(a1 + v12[167]) |= 0x20000u;
          *(_DWORD *)(a1 + v12[167]) |= 0x2000u;
          *(_DWORD *)(a1 + v12[167]) |= 0x1000u;
          *(_DWORD *)(a1 + v12[167]) |= 0x4000u;
          *(_DWORD *)(a1 + v12[167]) |= 0x8000u;
          goto LABEL_241;
        }
        if (v20)
        {
          while (1)
          {
            while (1)
            {
              v127 = *v20++;
              v126 = v127;
              if (v127 <= 14)
                break;
              switch(v126)
              {
                case 15:
                  v128 = 0x2000;
                  goto LABEL_239;
                case 17:
                  v128 = 4096;
                  goto LABEL_239;
                case 18:
                  v128 = 0x4000;
                  goto LABEL_239;
                case 20:
                  v128 = 0x8000;
                  goto LABEL_239;
                default:
                  continue;
              }
            }
            if (v126 == 1)
              break;
            if (v126 == 6)
            {
              v128 = 0x20000;
LABEL_239:
              *(_DWORD *)(a1 + v12[167]) |= v128;
              continue;
            }
            if (!v126)
              goto LABEL_241;
          }
          v128 = 0x10000;
          goto LABEL_239;
        }
LABEL_241:
        if (v131)
        {
          v3 = *(_BYTE *)(v3 + *v22) == 0;
          if ((v19 & 1) == 0)
            return v3;
LABEL_245:
          v129 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        else
        {
          v3 = 0;
          if ((v19 & 1) != 0)
            goto LABEL_245;
        }
        return v3;
      case 21:
        if ((v133 & 1) == 0)
          goto LABEL_166;
        v95 = 0;
        v96 = 0;
        v97 = 0;
        *(_DWORD *)(a1 + v12[167]) |= 0x400u;
        while (2)
        {
          v98 = *v21;
          v99 = *(_QWORD *)(v3 + v98);
          v100 = v99 + 1;
          if (v99 == -1 || v100 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v22) = 1;
          }
          else
          {
            v101 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v99);
            *(_QWORD *)(v3 + v98) = v100;
            v97 |= (unint64_t)(v101 & 0x7F) << v95;
            if (v101 < 0)
            {
              v95 += 7;
              v31 = v96++ >= 9;
              if (v31)
              {
                v97 = 0;
                goto LABEL_199;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v22))
          v97 = 0;
LABEL_199:
        v122 = v97 != 0;
        v123 = 103;
        goto LABEL_213;
      case 22:
        if ((v133 & 1) == 0)
          goto LABEL_166;
        v102 = 0;
        v103 = 0;
        v57 = 0;
        *(_DWORD *)(a1 + v12[167]) |= 1u;
        while (2)
        {
          v104 = *v21;
          v105 = *(_QWORD *)(v3 + v104);
          v106 = v105 + 1;
          if (v105 == -1 || v106 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v22) = 1;
          }
          else
          {
            v107 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v105);
            *(_QWORD *)(v3 + v104) = v106;
            v57 |= (unint64_t)(v107 & 0x7F) << v102;
            if (v107 < 0)
            {
              v102 += 7;
              v31 = v103++ >= 9;
              if (v31)
              {
                LODWORD(v57) = 0;
                goto LABEL_203;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v22))
          LODWORD(v57) = 0;
LABEL_203:
        v124 = 84;
        goto LABEL_208;
      case 23:
        if ((v133 & 1) == 0)
          goto LABEL_166;
        v108 = 0;
        v109 = 0;
        v57 = 0;
        *(_DWORD *)(a1 + v12[167]) |= 2u;
        while (2)
        {
          v110 = *v21;
          v111 = *(_QWORD *)(v3 + v110);
          v112 = v111 + 1;
          if (v111 == -1 || v112 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v22) = 1;
          }
          else
          {
            v113 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v111);
            *(_QWORD *)(v3 + v110) = v112;
            v57 |= (unint64_t)(v113 & 0x7F) << v108;
            if (v113 < 0)
            {
              v108 += 7;
              v31 = v109++ >= 9;
              if (v31)
              {
                LODWORD(v57) = 0;
                goto LABEL_207;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v22))
          LODWORD(v57) = 0;
LABEL_207:
        v124 = 88;
LABEL_208:
        *(_DWORD *)(a1 + v124) = v57;
        goto LABEL_222;
      case 24:
        if ((v133 & 1) == 0)
          goto LABEL_166;
        v114 = 0;
        v115 = 0;
        v116 = 0;
        *(_DWORD *)(a1 + v12[167]) |= 0x10u;
        while (2)
        {
          v117 = *v21;
          v118 = *(_QWORD *)(v3 + v117);
          v119 = v118 + 1;
          if (v118 == -1 || v119 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v22) = 1;
          }
          else
          {
            v120 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v118);
            *(_QWORD *)(v3 + v117) = v119;
            v116 |= (unint64_t)(v120 & 0x7F) << v114;
            if (v120 < 0)
            {
              v114 += 7;
              v31 = v115++ >= 9;
              if (v31)
              {
                v116 = 0;
                goto LABEL_212;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v22))
          v116 = 0;
LABEL_212:
        v122 = v116 != 0;
        v123 = 97;
LABEL_213:
        *(_BYTE *)(a1 + v123) = v122;
        goto LABEL_222;
      default:
        if ((v132 & 1) == 0 || (*(_BYTE *)(a1 + v12[167] + 1) & 8) != 0)
        {
LABEL_166:
          v121 = PBReaderSkipValueWithTag();
          v22 = (int *)MEMORY[0x1E0D82BC8];
          v19 = v134;
          v12 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
          if ((v121 & 1) == 0)
          {
            v131 = 0;
            goto LABEL_224;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v76 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v77 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v76;

          }
          v78 = PBUnknownFieldAdd();
          v12 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
          v19 = v134;
          v22 = (int *)MEMORY[0x1E0D82BC8];
          if (!v78)
          {
            v131 = 0;
            goto LABEL_225;
          }
        }
        goto LABEL_222;
    }
  }
}

void sub_188B03D24(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B03F10(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B040FC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B042C0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B04EAC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B04F8C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B07634(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDAutocompleteResultCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  _BYTE v29[128];
  _BYTE v30[128];
  _BYTE v31[128];
  uint64_t v32;

  v32 = *MEMORY[0x1E0C80C00];
  v25 = 0u;
  v26 = 0u;
  v27 = 0u;
  v28 = 0u;
  v2 = a1[7];
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v25, v31, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v26;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v26 != v5)
          objc_enumerationMutation(v2);
        -[GEOPDAutocompleteResultSection readAll:](*(_QWORD *)(*((_QWORD *)&v25 + 1) + 8 * v6++), 1);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v25, v31, 16);
    }
    while (v4);
  }

  v23 = 0u;
  v24 = 0u;
  v21 = 0u;
  v22 = 0u;
  v7 = a1[8];
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v21, v30, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v22;
    while (1)
    {
      if (*(_QWORD *)v22 != v10)
        objc_enumerationMutation(v7);
      if (!--v9)
      {
        v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v21, v30, 16);
        if (!v9)
          break;
      }
    }
  }

  v19 = 0u;
  v20 = 0u;
  v17 = 0u;
  v18 = 0u;
  v11 = a1[4];
  v12 = objc_msgSend(v11, "countByEnumeratingWithState:objects:count:", &v17, v29, 16);
  if (v12)
  {
    v13 = v12;
    v14 = *(_QWORD *)v18;
    do
    {
      v15 = 0;
      do
      {
        if (*(_QWORD *)v18 != v14)
          objc_enumerationMutation(v11);
        -[GEOPDClientRankingFeatureMetadata readAll:](*(_QWORD *)(*((_QWORD *)&v17 + 1) + 8 * v15++), 1);
      }
      while (v13 != v15);
      v13 = objc_msgSend(v11, "countByEnumeratingWithState:objects:count:", &v17, v29, 16);
    }
    while (v13);
  }

  objc_msgSend(a1[3], "readAll:", 1, (_QWORD)v17);
  return objc_msgSend(a1[6], "readAll:", 1);
}

unint64_t GEOPDAutocompleteResultReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 76))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDAutocompleteResultReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 80));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 72) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 76) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDAutocompleteResultReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDAutocompleteResultReadAllFrom_initialTag;
  Specified = GEOPDAutocompleteResultReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDAutocompleteResultCallReadAllRecursiveWithoutSynchronized((id *)a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 80));
  return Specified;
}

void sub_188B07A08(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B07F10(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDAutocompleteResultIsDirty(uint64_t a1)
{
  int v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  _BYTE v22[128];
  _BYTE v23[128];
  uint64_t v24;

  v24 = *MEMORY[0x1E0C80C00];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  v2 = *(_DWORD *)(a1 + 104);
  if ((v2 & 0x77000) != 0)
    return 1;
  if ((v2 & 0x8000) == 0)
  {
LABEL_6:
    if ((v2 & 0x10000) != 0)
    {
      v20 = 0u;
      v21 = 0u;
      v18 = 0u;
      v19 = 0u;
      v4 = *(id *)(a1 + 56);
      v5 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v18, v23, 16);
      if (v5)
      {
        v6 = v5;
        v7 = *(_QWORD *)v19;
LABEL_9:
        v8 = 0;
        while (1)
        {
          if (*(_QWORD *)v19 != v7)
            objc_enumerationMutation(v4);
          v9 = *(_QWORD *)(*((_QWORD *)&v18 + 1) + 8 * v8);
          if (v9)
          {
            os_unfair_lock_lock_with_options();
            os_unfair_lock_assert_owner((const os_unfair_lock *)(v9 + 120));
            v10 = *(_WORD *)(v9 + 144) & 0x7E00;
            os_unfair_lock_unlock((os_unfair_lock_t)(v9 + 120));
            if (v10)
              goto LABEL_28;
          }
          if (v6 == ++v8)
          {
            v6 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v18, v23, 16);
            if (v6)
              goto LABEL_9;
            break;
          }
        }
      }

      v2 = *(_DWORD *)(a1 + 104);
    }
    if ((v2 & 0x2000) == 0)
      return 0;
    v16 = 0u;
    v17 = 0u;
    v14 = 0u;
    v15 = 0u;
    v4 = *(id *)(a1 + 32);
    v3 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v14, v22, 16);
    if (!v3)
    {
LABEL_29:

      return v3;
    }
    v11 = *(_QWORD *)v15;
LABEL_21:
    v12 = 0;
    while (1)
    {
      if (*(_QWORD *)v15 != v11)
        objc_enumerationMutation(v4);
      if (GEOPDClientRankingFeatureMetadataIsDirty(*(_QWORD *)(*((_QWORD *)&v14 + 1) + 8 * v12)))
        break;
      if (v3 == ++v12)
      {
        v3 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v14, v22, 16);
        if (v3)
          goto LABEL_21;
        goto LABEL_29;
      }
    }
LABEL_28:
    v3 = 1;
    goto LABEL_29;
  }
  if ((GEOPDPlaceSummaryLayoutMetadataIsDirty(*(os_unfair_lock_s **)(a1 + 48)) & 1) == 0)
  {
    v2 = *(_DWORD *)(a1 + 104);
    goto LABEL_6;
  }
  return 1;
}

unint64_t GEOPDAutocompleteResultClearSensitiveFields(uint64_t a1, uint64_t a2, int a3)
{
  unint64_t result;
  unint64_t i;
  id *v8;
  id *v9;
  void *v10;

  -[GEOPDAutocompleteResult _readSections](a1);
  result = objc_msgSend(*(id *)(a1 + 56), "count");
  if (result)
  {
    for (i = 0; i < result; ++i)
    {
      objc_msgSend(*(id *)(a1 + 56), "objectAtIndexedSubscript:", i);
      v8 = (id *)objc_claimAutoreleasedReturnValue();
      v9 = v8;
      if (a3 && GEOPDAutocompleteResultSectionHasSensitiveFields(v8, a2))
      {
        v10 = (void *)objc_msgSend(v9, "copy");
        GEOPDAutocompleteResultSectionClearSensitiveFields((uint64_t)v10, a2, 0);
        objc_msgSend(*(id *)(a1 + 56), "replaceObjectAtIndex:withObject:", i, v10);

      }
      else if (v9)
      {
        GEOPDAutocompleteResultSectionClearSensitiveFields((uint64_t)v9, a2, 1);
      }

      result = objc_msgSend(*(id *)(a1 + 56), "count");
    }
  }
  return result;
}

uint64_t GEOPDAutocompleteResultHasSensitiveFields(id *a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  _BYTE v14[128];
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  if (!a1)
    return 0;
  v12 = 0u;
  v13 = 0u;
  v10 = 0u;
  v11 = 0u;
  -[GEOPDAutocompleteResult sections](a1);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v10, v14, 16);
  if (v4)
  {
    v5 = v4;
    v6 = *(_QWORD *)v11;
    while (2)
    {
      v7 = 0;
      do
      {
        if (*(_QWORD *)v11 != v6)
          objc_enumerationMutation(v3);
        if ((GEOPDAutocompleteResultSectionHasSensitiveFields(*(id **)(*((_QWORD *)&v10 + 1) + 8 * v7), a2) & 1) != 0)
        {
          v8 = 1;
          goto LABEL_12;
        }
        ++v7;
      }
      while (v5 != v7);
      v5 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v10, v14, 16);
      if (v5)
        continue;
      break;
    }
  }
  v8 = 0;
LABEL_12:

  return v8;
}

uint64_t GEOPDAutocompleteResultSectionHasSensitiveFields(id *a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  _BYTE v14[128];
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  if (!a1)
    return 0;
  v12 = 0u;
  v13 = 0u;
  v10 = 0u;
  v11 = 0u;
  -[GEOPDAutocompleteResultSection entries](a1);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v10, v14, 16);
  if (v4)
  {
    v5 = v4;
    v6 = *(_QWORD *)v11;
    while (2)
    {
      v7 = 0;
      do
      {
        if (*(_QWORD *)v11 != v6)
          objc_enumerationMutation(v3);
        if ((GEOPDAutocompleteEntryHasSensitiveFields(*(void **)(*((_QWORD *)&v10 + 1) + 8 * v7), a2) & 1) != 0)
        {
          v8 = 1;
          goto LABEL_12;
        }
        ++v7;
      }
      while (v5 != v7);
      v5 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v10, v14, 16);
      if (v5)
        continue;
      break;
    }
  }
  v8 = 0;
LABEL_12:

  return v8;
}

unint64_t GEOPDAutocompleteResultSectionClearSensitiveFields(uint64_t a1, uint64_t a2, int a3)
{
  unint64_t result;
  unint64_t i;
  void *v8;
  void *v9;
  void *v10;
  void *v11;

  -[GEOPDAutocompleteResultSection _readEntries](a1);
  result = objc_msgSend(*(id *)(a1 + 96), "count");
  if (result)
  {
    for (i = 0; i < result; ++i)
    {
      objc_msgSend(*(id *)(a1 + 96), "objectAtIndexedSubscript:", i);
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      v9 = v8;
      if (a3 && GEOPDAutocompleteEntryHasSensitiveFields(v8, a2))
      {
        v10 = (void *)objc_msgSend(v9, "copy");
        objc_msgSend(v10, "business");
        v11 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v11, "clearSensitiveFields:", a2);

        objc_msgSend(*(id *)(a1 + 96), "replaceObjectAtIndex:withObject:", i, v10);
      }
      else
      {
        objc_msgSend(v9, "clearSensitiveFields:", a2);
      }

      result = objc_msgSend(*(id *)(a1 + 96), "count");
    }
  }
  return result;
}

void sub_188B08B00(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B0937C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAutocompleteResultSectionReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  char v18;
  char v19;
  int *v20;
  int *v21;
  int *v22;
  char v23;
  int *v24;
  char v25;
  unsigned int v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  BOOL v32;
  int v33;
  int v34;
  unint64_t v36;
  BOOL v37;
  int *v38;
  int v39;
  int v40;
  BOOL v41;
  char v42;
  unsigned int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  char v48;
  id v49;
  void *v50;
  int v51;
  uint64_t v52;
  void *v53;
  GEOPDAutocompleteEntry *v54;
  char v55;
  unsigned int v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  char v60;
  char v61;
  unsigned int v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  char v66;
  char v67;
  unsigned int v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  char v73;
  char v74;
  unsigned int v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  char v80;
  char v81;
  unsigned int v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  char v87;
  char v88;
  unsigned int v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  char v93;
  char v94;
  unsigned int v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  char v100;
  int *v101;
  char v102;
  unsigned int v103;
  uint64_t v104;
  int *v105;
  uint64_t v106;
  uint64_t v107;
  unint64_t v108;
  char v109;
  int *v110;
  char v111;
  unsigned int v112;
  uint64_t v113;
  int *v114;
  uint64_t v115;
  uint64_t v116;
  unint64_t v117;
  char v118;
  int *v119;
  char v120;
  unsigned int v121;
  uint64_t v122;
  int *v123;
  uint64_t v124;
  uint64_t v125;
  unint64_t v126;
  char v127;
  char v128;
  char v129;
  uint64_t v130;
  BOOL v131;
  uint64_t v132;
  char v133;
  unsigned int v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  unint64_t v138;
  char v139;
  char v140;
  unsigned int v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  unint64_t v145;
  char v146;
  char v147;
  unsigned int v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  unint64_t v152;
  char v153;
  int v154;
  __int16 v155;
  void *v156;
  char v158;
  char v159;
  int v160;
  char v161;
  char v162;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 120));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 116);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 112));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
  v13 = (unsigned __int16)(vaddv_s16((int16x4_t)(*(_QWORD *)&vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 144)), (uint16x4_t)0xFFF5FFF7FFF3FFF4) & 0xFF81FF81FF81FF81))+ ((*(_WORD *)(a1 + 144) >> 10) & 1)+ (HIBYTE(*(_WORD *)(a1 + 144)) & 1));
  while (2)
  {
    v14 = 1;
    v15 = 1;
    v16 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v13;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v15 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v17 = v13 > 3;
        v18 = v17 & ~(_BYTE)v11 | v9;
        v19 = v17 | v11;
        if ((((v17 | v11) | v8) & 1) != 0)
          v20 = 0;
        else
          v20 = a3;
        v21 = (int *)MEMORY[0x1E0D82BF0];
        v160 = 1;
        v22 = (int *)MEMORY[0x1E0D82BC8];
        v23 = v18;
        if (*(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(v3 + *v6))
          goto LABEL_234;
        v158 = v18;
        v161 = v19 | v18;
        v162 = (v20 == 0) | v19;
        v24 = (int *)MEMORY[0x1E0D82BB8];
        v159 = v19;
        break;
      default:
        ++v13;
LABEL_7:
        v14 = v9;
LABEL_8:
        v15 = v10;
        v16 = v11;
LABEL_10:
        ++v7;
        v9 = v14;
        v10 = v15;
        v11 = v16;
        continue;
    }
    break;
  }
  while (!*(_BYTE *)(v3 + *v22))
  {
    v25 = 0;
    v26 = 0;
    v27 = 0;
    while (1)
    {
      v28 = *v21;
      v29 = *(_QWORD *)(v3 + v28);
      v30 = v29 + 1;
      if (v29 == -1 || v30 > *(_QWORD *)(v3 + *v6))
        break;
      v31 = *(_BYTE *)(*(_QWORD *)(v3 + *v24) + v29);
      *(_QWORD *)(v3 + v28) = v30;
      v27 |= (unint64_t)(v31 & 0x7F) << v25;
      if ((v31 & 0x80) == 0)
        goto LABEL_25;
      v25 += 7;
      v32 = v26++ >= 9;
      if (v32)
      {
        v27 = 0;
        v33 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v22) = 1;
LABEL_25:
    v33 = *(unsigned __int8 *)(v3 + *v22);
    if (*(_BYTE *)(v3 + *v22))
      v27 = 0;
LABEL_27:
    v34 = v27 & 7;
    if (v33 || v34 == 4)
      break;
    v36 = v27 >> 3;
    v37 = v19;
    if ((v162 & 1) == 0)
    {
      v38 = v20;
      do
      {
        v40 = *v38++;
        v39 = v40;
        v37 = v40 != 0;
        if (v40)
          v41 = v39 == (_DWORD)v36;
        else
          v41 = 1;
      }
      while (!v41);
    }
    switch((int)v36)
    {
      case 1:
        if ((v8 & 1) == 0)
          goto LABEL_165;
        v42 = 0;
        v43 = 0;
        v44 = 0;
        *(_WORD *)(a1 + v12[185]) |= 8u;
        while (1)
        {
          v45 = *v21;
          v46 = *(_QWORD *)(v3 + v45);
          v47 = v46 + 1;
          if (v46 == -1 || v47 > *(_QWORD *)(v3 + *v6))
            break;
          v48 = *(_BYTE *)(*(_QWORD *)(v3 + *v24) + v46);
          *(_QWORD *)(v3 + v45) = v47;
          v44 |= (unint64_t)(v48 & 0x7F) << v42;
          if ((v48 & 0x80) == 0)
            goto LABEL_169;
          v42 += 7;
          v32 = v43++ >= 9;
          if (v32)
          {
            LODWORD(v44) = 0;
            goto LABEL_171;
          }
        }
        *(_BYTE *)(v3 + *v22) = 1;
LABEL_169:
        if (*(_BYTE *)(v3 + *v22))
          LODWORD(v44) = 0;
LABEL_171:
        v130 = 136;
        goto LABEL_196;
      case 2:
        if (!v37)
          goto LABEL_165;
        if ((*(_WORD *)(a1 + v12[185]) & 0x2000) == 0)
        {
          PBReaderReadString();
          v52 = objc_claimAutoreleasedReturnValue();
          v53 = *(void **)(a1 + 104);
          *(_QWORD *)(a1 + 104) = v52;

          --v7;
          goto LABEL_227;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_253;
        v12 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
        v7 += *(unsigned __int16 *)(a1 + 144) << 18 >> 31;
        v19 = v159;
        v22 = (int *)MEMORY[0x1E0D82BC8];
        goto LABEL_229;
      case 3:
        if (!v37 || (*(_WORD *)(a1 + v12[185]) & 0x1000) != 0)
        {
          v128 = PBReaderSkipValueWithTag();
          v12 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
          v19 = v159;
          v22 = (int *)MEMORY[0x1E0D82BC8];
          v24 = (int *)MEMORY[0x1E0D82BB8];
          if ((v128 & 1) == 0)
            goto LABEL_251;
          goto LABEL_230;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_253;
        v54 = objc_alloc_init(GEOPDAutocompleteEntry);
        if (GEOPDAutocompleteEntryReadAllFrom((uint64_t)v54, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          -[GEOPDAutocompleteResultSection _addNoFlagsEntries:](a1, v54);

LABEL_227:
          v19 = v159;
          v22 = (int *)MEMORY[0x1E0D82BC8];
LABEL_228:
          v12 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
LABEL_229:
          v24 = (int *)MEMORY[0x1E0D82BB8];
          goto LABEL_230;
        }

LABEL_253:
        v160 = 0;
        v19 = v159;
        v22 = (int *)MEMORY[0x1E0D82BC8];
        v12 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
        if ((v158 & 1) != 0)
LABEL_235:
          *(_WORD *)(a1 + v12[185]) |= 0x100u;
LABEL_236:
        if (v19 & 1 | ((v160 & 1) == 0))
        {
          *(_WORD *)(a1 + v12[185]) |= 0x2000u;
          *(_WORD *)(a1 + v12[185]) |= 0x1000u;
          *(_WORD *)(a1 + v12[185]) |= 0x200u;
          *(_WORD *)(a1 + v12[185]) |= 0x800u;
          *(_WORD *)(a1 + v12[185]) |= 0x400u;
        }
        else if (v20)
        {
          while (1)
          {
            v154 = *v20++;
            v155 = 0x2000;
            switch(v154)
            {
              case 0:
                goto LABEL_245;
              case 2:
                goto LABEL_244;
              case 3:
                v155 = 4096;
                goto LABEL_244;
              case 11:
                v155 = 512;
                goto LABEL_244;
              case 12:
                v155 = 2048;
                goto LABEL_244;
              case 13:
                v155 = 1024;
LABEL_244:
                *(_WORD *)(a1 + v12[185]) |= v155;
                break;
              default:
                continue;
            }
          }
        }
LABEL_245:
        if (v160)
        {
          v3 = *(_BYTE *)(v3 + *v22) == 0;
          if ((v19 & 1) == 0)
            return v3;
LABEL_249:
          v156 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        else
        {
          v3 = 0;
          if ((v19 & 1) != 0)
            goto LABEL_249;
        }
        return v3;
      case 4:
        if ((v8 & 1) == 0)
          goto LABEL_165;
        v55 = 0;
        v56 = 0;
        v44 = 0;
        *(_WORD *)(a1 + v12[185]) |= 4u;
        while (2)
        {
          v57 = *v21;
          v58 = *(_QWORD *)(v3 + v57);
          v59 = v58 + 1;
          if (v58 == -1 || v59 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v22) = 1;
          }
          else
          {
            v60 = *(_BYTE *)(*(_QWORD *)(v3 + *v24) + v58);
            *(_QWORD *)(v3 + v57) = v59;
            v44 |= (unint64_t)(v60 & 0x7F) << v55;
            if (v60 < 0)
            {
              v55 += 7;
              v32 = v56++ >= 9;
              if (v32)
              {
                LODWORD(v44) = 0;
                goto LABEL_175;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v22))
          LODWORD(v44) = 0;
LABEL_175:
        v130 = 132;
        goto LABEL_196;
      case 5:
        if ((v8 & 1) == 0)
          goto LABEL_165;
        v61 = 0;
        v62 = 0;
        v44 = 0;
        *(_WORD *)(a1 + v12[185]) |= 2u;
        while (2)
        {
          v63 = *v21;
          v64 = *(_QWORD *)(v3 + v63);
          v65 = v64 + 1;
          if (v64 == -1 || v65 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v22) = 1;
          }
          else
          {
            v66 = *(_BYTE *)(*(_QWORD *)(v3 + *v24) + v64);
            *(_QWORD *)(v3 + v63) = v65;
            v44 |= (unint64_t)(v66 & 0x7F) << v61;
            if (v66 < 0)
            {
              v61 += 7;
              v32 = v62++ >= 9;
              if (v32)
              {
                LODWORD(v44) = 0;
                goto LABEL_179;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v22))
          LODWORD(v44) = 0;
LABEL_179:
        v130 = 128;
        goto LABEL_196;
      case 6:
        if ((v8 & 1) == 0)
          goto LABEL_165;
        v67 = 0;
        v68 = 0;
        v69 = 0;
        *(_WORD *)(a1 + v12[185]) |= 0x80u;
        while (2)
        {
          v70 = *v21;
          v71 = *(_QWORD *)(v3 + v70);
          v72 = v71 + 1;
          if (v71 == -1 || v72 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v22) = 1;
          }
          else
          {
            v73 = *(_BYTE *)(*(_QWORD *)(v3 + *v24) + v71);
            *(_QWORD *)(v3 + v70) = v72;
            v69 |= (unint64_t)(v73 & 0x7F) << v67;
            if (v73 < 0)
            {
              v67 += 7;
              v32 = v68++ >= 9;
              if (v32)
              {
                v69 = 0;
                goto LABEL_183;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v22))
          v69 = 0;
LABEL_183:
        v131 = v69 != 0;
        v132 = 143;
        goto LABEL_201;
      case 7:
        if ((v8 & 1) == 0)
          goto LABEL_165;
        v74 = 0;
        v75 = 0;
        v76 = 0;
        *(_WORD *)(a1 + v12[185]) |= 0x20u;
        while (2)
        {
          v77 = *v21;
          v78 = *(_QWORD *)(v3 + v77);
          v79 = v78 + 1;
          if (v78 == -1 || v79 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v22) = 1;
          }
          else
          {
            v80 = *(_BYTE *)(*(_QWORD *)(v3 + *v24) + v78);
            *(_QWORD *)(v3 + v77) = v79;
            v76 |= (unint64_t)(v80 & 0x7F) << v74;
            if (v80 < 0)
            {
              v74 += 7;
              v32 = v75++ >= 9;
              if (v32)
              {
                v76 = 0;
                goto LABEL_187;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v22))
          v76 = 0;
LABEL_187:
        v131 = v76 != 0;
        v132 = 141;
        goto LABEL_201;
      case 8:
        if ((v8 & 1) == 0)
          goto LABEL_165;
        v81 = 0;
        v82 = 0;
        v83 = 0;
        *(_WORD *)(a1 + v12[185]) |= 0x10u;
        while (2)
        {
          v84 = *v21;
          v85 = *(_QWORD *)(v3 + v84);
          v86 = v85 + 1;
          if (v85 == -1 || v86 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v22) = 1;
          }
          else
          {
            v87 = *(_BYTE *)(*(_QWORD *)(v3 + *v24) + v85);
            *(_QWORD *)(v3 + v84) = v86;
            v83 |= (unint64_t)(v87 & 0x7F) << v81;
            if (v87 < 0)
            {
              v81 += 7;
              v32 = v82++ >= 9;
              if (v32)
              {
                v83 = 0;
                goto LABEL_191;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v22))
          v83 = 0;
LABEL_191:
        v131 = v83 != 0;
        v132 = 140;
        goto LABEL_201;
      case 9:
        if ((v8 & 1) == 0)
          goto LABEL_165;
        v88 = 0;
        v89 = 0;
        v44 = 0;
        *(_WORD *)(a1 + v12[185]) |= 1u;
        while (2)
        {
          v90 = *v21;
          v91 = *(_QWORD *)(v3 + v90);
          v92 = v91 + 1;
          if (v91 == -1 || v92 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v22) = 1;
          }
          else
          {
            v93 = *(_BYTE *)(*(_QWORD *)(v3 + *v24) + v91);
            *(_QWORD *)(v3 + v90) = v92;
            v44 |= (unint64_t)(v93 & 0x7F) << v88;
            if (v93 < 0)
            {
              v88 += 7;
              v32 = v89++ >= 9;
              if (v32)
              {
                LODWORD(v44) = 0;
                goto LABEL_195;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v22))
          LODWORD(v44) = 0;
LABEL_195:
        v130 = 124;
LABEL_196:
        *(_DWORD *)(a1 + v130) = v44;
        goto LABEL_230;
      case 10:
        if ((v8 & 1) == 0)
          goto LABEL_165;
        v94 = 0;
        v95 = 0;
        v96 = 0;
        *(_WORD *)(a1 + v12[185]) |= 0x40u;
        while (2)
        {
          v97 = *v21;
          v98 = *(_QWORD *)(v3 + v97);
          v99 = v98 + 1;
          if (v98 == -1 || v99 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v22) = 1;
          }
          else
          {
            v100 = *(_BYTE *)(*(_QWORD *)(v3 + *v24) + v98);
            *(_QWORD *)(v3 + v97) = v99;
            v96 |= (unint64_t)(v100 & 0x7F) << v94;
            if (v100 < 0)
            {
              v94 += 7;
              v32 = v95++ >= 9;
              if (v32)
              {
                v96 = 0;
                goto LABEL_200;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v22))
          v96 = 0;
LABEL_200:
        v131 = v96 != 0;
        v132 = 142;
LABEL_201:
        *(_BYTE *)(a1 + v132) = v131;
        goto LABEL_230;
      case 11:
        if (!v37 || (*(_WORD *)(a1 + v12[185]) & 0x200) != 0)
          goto LABEL_165;
        if (v34 != 2)
        {
          v133 = 0;
          v134 = 0;
          v135 = 0;
          while (1)
          {
            v136 = *v21;
            v137 = *(_QWORD *)(v3 + v136);
            v138 = v137 + 1;
            if (v137 == -1 || v138 > *(_QWORD *)(v3 + *v6))
              goto LABEL_225;
            v139 = *(_BYTE *)(*(_QWORD *)(v3 + *v24) + v137);
            *(_QWORD *)(v3 + v136) = v138;
            v135 |= (unint64_t)(v139 & 0x7F) << v133;
            if (v139 < 0)
            {
              v133 += 7;
              v32 = v134++ >= 9;
              if (!v32)
                continue;
            }
            goto LABEL_226;
          }
        }
        if (!PBReaderPlaceMark())
          goto LABEL_253;
        while (1)
        {
          v101 = (int *)MEMORY[0x1E0D82BC8];
          if (*(_QWORD *)(v3 + *v21) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + (int)*MEMORY[0x1E0D82BC8]))
            goto LABEL_167;
          v102 = 0;
          v103 = 0;
          v104 = 0;
          v105 = (int *)MEMORY[0x1E0D82BB8];
          while (1)
          {
            v106 = *v21;
            v107 = *(_QWORD *)(v3 + v106);
            v108 = v107 + 1;
            if (v107 == -1 || v108 > *(_QWORD *)(v3 + *v6))
              break;
            v109 = *(_BYTE *)(*(_QWORD *)(v3 + *v105) + v107);
            *(_QWORD *)(v3 + v106) = v108;
            v104 |= (unint64_t)(v109 & 0x7F) << v102;
            if (v109 < 0)
            {
              v102 += 7;
              v32 = v103++ >= 9;
              if (!v32)
                continue;
            }
            goto LABEL_131;
          }
          *(_BYTE *)(v3 + *v101) = 1;
LABEL_131:
          PBRepeatedInt32Add();
        }
      case 12:
        if (!v37 || (*(_WORD *)(a1 + v12[185]) & 0x800) != 0)
          goto LABEL_165;
        if (v34 != 2)
        {
          v140 = 0;
          v141 = 0;
          v142 = 0;
          while (1)
          {
            v143 = *v21;
            v144 = *(_QWORD *)(v3 + v143);
            v145 = v144 + 1;
            if (v144 == -1 || v145 > *(_QWORD *)(v3 + *v6))
              goto LABEL_225;
            v146 = *(_BYTE *)(*(_QWORD *)(v3 + *v24) + v144);
            *(_QWORD *)(v3 + v143) = v145;
            v142 |= (unint64_t)(v146 & 0x7F) << v140;
            if (v146 < 0)
            {
              v140 += 7;
              v32 = v141++ >= 9;
              if (!v32)
                continue;
            }
            goto LABEL_226;
          }
        }
        if (!PBReaderPlaceMark())
          goto LABEL_253;
        while (1)
        {
          v110 = (int *)MEMORY[0x1E0D82BC8];
          if (*(_QWORD *)(v3 + *v21) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + (int)*MEMORY[0x1E0D82BC8]))
            goto LABEL_167;
          v111 = 0;
          v112 = 0;
          v113 = 0;
          v114 = (int *)MEMORY[0x1E0D82BB8];
          while (1)
          {
            v115 = *v21;
            v116 = *(_QWORD *)(v3 + v115);
            v117 = v116 + 1;
            if (v116 == -1 || v117 > *(_QWORD *)(v3 + *v6))
              break;
            v118 = *(_BYTE *)(*(_QWORD *)(v3 + *v114) + v116);
            *(_QWORD *)(v3 + v115) = v117;
            v113 |= (unint64_t)(v118 & 0x7F) << v111;
            if (v118 < 0)
            {
              v111 += 7;
              v32 = v112++ >= 9;
              if (!v32)
                continue;
            }
            goto LABEL_146;
          }
          *(_BYTE *)(v3 + *v110) = 1;
LABEL_146:
          PBRepeatedInt32Add();
        }
      case 13:
        if (!v37 || (*(_WORD *)(a1 + v12[185]) & 0x400) != 0)
          goto LABEL_165;
        if (v34 != 2)
        {
          v147 = 0;
          v148 = 0;
          v149 = 0;
          while (1)
          {
            v150 = *v21;
            v151 = *(_QWORD *)(v3 + v150);
            v152 = v151 + 1;
            if (v151 == -1 || v152 > *(_QWORD *)(v3 + *v6))
              break;
            v153 = *(_BYTE *)(*(_QWORD *)(v3 + *v24) + v151);
            *(_QWORD *)(v3 + v150) = v152;
            v149 |= (unint64_t)(v153 & 0x7F) << v147;
            if (v153 < 0)
            {
              v147 += 7;
              v32 = v148++ >= 9;
              if (!v32)
                continue;
            }
            goto LABEL_226;
          }
LABEL_225:
          *(_BYTE *)(v3 + *v22) = 1;
LABEL_226:
          PBRepeatedInt32Add();
          goto LABEL_227;
        }
        if (!PBReaderPlaceMark())
          goto LABEL_253;
        while (1)
        {
          v119 = (int *)MEMORY[0x1E0D82BC8];
          if (*(_QWORD *)(v3 + *v21) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + (int)*MEMORY[0x1E0D82BC8]))
            break;
          v120 = 0;
          v121 = 0;
          v122 = 0;
          v123 = (int *)MEMORY[0x1E0D82BB8];
          while (1)
          {
            v124 = *v21;
            v125 = *(_QWORD *)(v3 + v124);
            v126 = v125 + 1;
            if (v125 == -1 || v126 > *(_QWORD *)(v3 + *v6))
              break;
            v127 = *(_BYTE *)(*(_QWORD *)(v3 + *v123) + v125);
            *(_QWORD *)(v3 + v124) = v126;
            v122 |= (unint64_t)(v127 & 0x7F) << v120;
            if (v127 < 0)
            {
              v120 += 7;
              v32 = v121++ >= 9;
              if (!v32)
                continue;
            }
            goto LABEL_161;
          }
          *(_BYTE *)(v3 + *v119) = 1;
LABEL_161:
          PBRepeatedInt32Add();
        }
LABEL_167:
        PBReaderRecallMark();
        v22 = (int *)MEMORY[0x1E0D82BC8];
        v19 = v159;
        goto LABEL_228;
      default:
        if ((v158 & 1) == 0 || (*(_WORD *)(a1 + v12[185]) & 0x100) != 0)
        {
LABEL_165:
          v129 = PBReaderSkipValueWithTag();
          v24 = (int *)MEMORY[0x1E0D82BB8];
          v12 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
          v22 = (int *)MEMORY[0x1E0D82BC8];
          v19 = v159;
          if ((v129 & 1) == 0)
          {
LABEL_251:
            v160 = 0;
            goto LABEL_233;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v49 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v50 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v49;

          }
          v51 = PBUnknownFieldAdd();
          v19 = v159;
          v22 = (int *)MEMORY[0x1E0D82BC8];
          v12 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
          v24 = (int *)MEMORY[0x1E0D82BB8];
          if (!v51)
          {
            v160 = 0;
            goto LABEL_235;
          }
        }
LABEL_230:
        if (!(v161 & 1 | (v7 != 0)) || *(_QWORD *)(v3 + *v21) >= *(_QWORD *)(v3 + *v6))
          goto LABEL_232;
        break;
    }
  }
LABEL_232:
  v160 = 1;
LABEL_233:
  v23 = v158;
LABEL_234:
  if ((v23 & 1) == 0)
    goto LABEL_236;
  goto LABEL_235;
}

void sub_188B0A4BC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B0A6A4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B0A818(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B0B260(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDAutocompleteResultSectionCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _BYTE v10[128];
  uint64_t v11;

  v11 = *MEMORY[0x1E0C80C00];
  v6 = 0u;
  v7 = 0u;
  v8 = 0u;
  v9 = 0u;
  v1 = *(id *)(a1 + 96);
  v2 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
  if (v2)
  {
    v3 = v2;
    v4 = *(_QWORD *)v7;
    do
    {
      v5 = 0;
      do
      {
        if (*(_QWORD *)v7 != v4)
          objc_enumerationMutation(v1);
        objc_msgSend(*(id *)(*((_QWORD *)&v6 + 1) + 8 * v5++), "readAll:", 1, (_QWORD)v6);
      }
      while (v3 != v5);
      v3 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
    }
    while (v3);
  }

}

unint64_t GEOPDAutocompleteResultSectionReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 116))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDAutocompleteResultSectionReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 120));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 112) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 116) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDAutocompleteResultSectionReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDAutocompleteResultSectionReadAllFrom_initialTag;
  Specified = GEOPDAutocompleteResultSectionReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDAutocompleteResultSectionCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 120));
  return Specified;
}

void sub_188B0B5B0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B0B9A4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B0BD78(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDAutocompleteResultSortPriorityMappingReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  unint64_t v18;
  char v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  BOOL v26;
  int *v27;
  char v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  char v34;
  unsigned int v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  id v40;
  void *v41;
  _BOOL8 v42;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      while (1)
      {
        if (v3[*v6])
          goto LABEL_59;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          goto LABEL_59;
        v18 = v10 >> 3;
        if ((v10 >> 3) == 3)
        {
          v28 = 0;
          v29 = 0;
          v21 = 0;
          *(_BYTE *)(a1 + 28) |= 1u;
          while (1)
          {
            v30 = *v4;
            v31 = *(_QWORD *)&v3[v30];
            v32 = v31 + 1;
            if (v31 == -1 || v32 > *(_QWORD *)&v3[*v5])
              break;
            v33 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v31);
            *(_QWORD *)&v3[v30] = v32;
            v21 |= (unint64_t)(v33 & 0x7F) << v28;
            if ((v33 & 0x80) == 0)
            {
              v27 = &OBJC_IVAR___GEOPDAutocompleteResultSortPriorityMapping__resultSubtype;
              goto LABEL_51;
            }
            v28 += 7;
            v26 = v29++ > 8;
            if (v26)
            {
              LODWORD(v21) = 0;
              v27 = &OBJC_IVAR___GEOPDAutocompleteResultSortPriorityMapping__resultSubtype;
              goto LABEL_53;
            }
          }
          v27 = &OBJC_IVAR___GEOPDAutocompleteResultSortPriorityMapping__resultSubtype;
LABEL_50:
          v3[*v6] = 1;
          goto LABEL_51;
        }
        if ((_DWORD)v18 == 2)
          break;
        if ((_DWORD)v18 == 1)
        {
          v19 = 0;
          v20 = 0;
          v21 = 0;
          *(_BYTE *)(a1 + 28) |= 4u;
          while (1)
          {
            v22 = *v4;
            v23 = *(_QWORD *)&v3[v22];
            v24 = v23 + 1;
            if (v23 == -1 || v24 > *(_QWORD *)&v3[*v5])
            {
              v27 = &OBJC_IVAR___GEOPDAutocompleteResultSortPriorityMapping__sortPriority;
              goto LABEL_50;
            }
            v25 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v23);
            *(_QWORD *)&v3[v22] = v24;
            v21 |= (unint64_t)(v25 & 0x7F) << v19;
            if ((v25 & 0x80) == 0)
              break;
            v19 += 7;
            v26 = v20++ > 8;
            if (v26)
            {
              LODWORD(v21) = 0;
              v27 = &OBJC_IVAR___GEOPDAutocompleteResultSortPriorityMapping__sortPriority;
              goto LABEL_53;
            }
          }
          v27 = &OBJC_IVAR___GEOPDAutocompleteResultSortPriorityMapping__sortPriority;
          goto LABEL_51;
        }
        if (!*(_QWORD *)(a1 + 8))
        {
          v40 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
          v41 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = v40;

        }
        if ((PBUnknownFieldAdd() & 1) == 0)
          goto LABEL_60;
LABEL_54:
        if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
          goto LABEL_59;
      }
      v34 = 0;
      v35 = 0;
      v21 = 0;
      *(_BYTE *)(a1 + 28) |= 2u;
      while (1)
      {
        v36 = *v4;
        v37 = *(_QWORD *)&v3[v36];
        v38 = v37 + 1;
        if (v37 == -1 || v38 > *(_QWORD *)&v3[*v5])
        {
          v27 = &OBJC_IVAR___GEOPDAutocompleteResultSortPriorityMapping__resultType;
          goto LABEL_50;
        }
        v39 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v37);
        *(_QWORD *)&v3[v36] = v38;
        v21 |= (unint64_t)(v39 & 0x7F) << v34;
        if ((v39 & 0x80) == 0)
          break;
        v34 += 7;
        v26 = v35++ > 8;
        if (v26)
        {
          LODWORD(v21) = 0;
          v27 = &OBJC_IVAR___GEOPDAutocompleteResultSortPriorityMapping__resultType;
          goto LABEL_53;
        }
      }
      v27 = &OBJC_IVAR___GEOPDAutocompleteResultSortPriorityMapping__resultType;
LABEL_51:
      if (v3[*v6])
        LODWORD(v21) = 0;
LABEL_53:
      *(_DWORD *)(a1 + *v27) = v21;
      goto LABEL_54;
    }
LABEL_59:
    v42 = v3[*v6] == 0;
  }
  else
  {
LABEL_60:
    v42 = 0;
  }
  objc_sync_exit(v3);

  return v42;
}

void sub_188B0C9B4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B0CE20(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDBankTransactionInformationReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  const float *v12;
  uint32x4_t v13;
  int8x16_t v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  char v20;
  unsigned __int8 v21;
  int *v22;
  int *v23;
  int *v24;
  int *v25;
  char v26;
  unsigned int v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  BOOL v33;
  int v34;
  unint64_t v36;
  BOOL v37;
  int *v38;
  int v39;
  int v40;
  BOOL v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  void *v45;
  int v46;
  char v47;
  unsigned int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  char v53;
  GEOLocation *v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  char v58;
  unsigned int v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  char v64;
  char v65;
  unsigned int v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  char v71;
  char v72;
  unsigned int v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  char v77;
  void *v78;
  char v79;
  unsigned int v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  char v85;
  char v86;
  unsigned int v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  char v91;
  char v92;
  uint64_t v93;
  BOOL v94;
  uint64_t v95;
  int v96;
  int v97;
  int v98;
  void *v99;
  int v101;
  char v102;
  char v103;
  char v104;
  char v105;
  BOOL v106;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 136));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 132);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 128));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = (const float *)(a1 + 156);
  v13 = (uint32x4_t)vld1q_dup_f32(v12);
  v14.i64[0] = 0x100000001;
  v14.i64[1] = 0x100000001;
  v15 = vaddvq_s32(vaddq_s32(vaddq_s32((int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v13, (uint32x4_t)xmmword_189CC9D20), v14), (int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v13, (uint32x4_t)xmmword_189CC9D30), v14)), (int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v13, (uint32x4_t)xmmword_189CC9D40), v14)));
  while (2)
  {
    v16 = 1;
    v17 = 1;
    v18 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v15;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v17 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v19 = v15 > 7;
        v20 = v19 & ~(_BYTE)v11 | v9;
        v21 = v19 | v11;
        v102 = v20;
        v103 = v8;
        v104 = v21 | v20;
        if (((v21 | v8) & 1) != 0)
          v22 = 0;
        else
          v22 = a3;
        v105 = (v22 == 0) | v21;
        v106 = v21;
        v23 = (int *)MEMORY[0x1E0D82BF0];
        v24 = (int *)MEMORY[0x1E0D82BC8];
        v25 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v15;
LABEL_7:
        v16 = v9;
LABEL_8:
        v17 = v10;
        v18 = v11;
LABEL_10:
        ++v7;
        v9 = v16;
        v10 = v17;
        v11 = v18;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v23) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v24))
      goto LABEL_190;
    v26 = 0;
    v27 = 0;
    v28 = 0;
    while (1)
    {
      v29 = *v23;
      v30 = *(_QWORD *)(v3 + v29);
      v31 = v30 + 1;
      if (v30 == -1 || v31 > *(_QWORD *)(v3 + *v6))
        break;
      v32 = *(_BYTE *)(*(_QWORD *)(v3 + *v25) + v30);
      *(_QWORD *)(v3 + v29) = v31;
      v28 |= (unint64_t)(v32 & 0x7F) << v26;
      if ((v32 & 0x80) == 0)
        goto LABEL_25;
      v26 += 7;
      v33 = v27++ >= 9;
      if (v33)
      {
        v28 = 0;
        v34 = *(unsigned __int8 *)(v3 + *v24);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v24) = 1;
LABEL_25:
    v34 = *(unsigned __int8 *)(v3 + *v24);
    if (*(_BYTE *)(v3 + *v24))
      v28 = 0;
LABEL_27:
    if (v34 || (v28 & 7) == 4)
    {
LABEL_190:
      v101 = 1;
      goto LABEL_191;
    }
    v36 = v28 >> 3;
    v37 = v106;
    if ((v105 & 1) == 0)
    {
      v38 = v22;
      do
      {
        v40 = *v38++;
        v39 = v40;
        v37 = v40 != 0;
        if (v40)
          v41 = v39 == (_DWORD)v36;
        else
          v41 = 1;
      }
      while (!v41);
    }
    switch((int)v36)
    {
      case 1:
        if (!v37)
          goto LABEL_138;
        if ((*(_BYTE *)(a1 + 157) & 1) == 0)
        {
          PBReaderReadString();
          v42 = objc_claimAutoreleasedReturnValue();
          v43 = 24;
          goto LABEL_120;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_215;
        v96 = (int)(*(_DWORD *)(a1 + 156) << 23) >> 31;
        goto LABEL_184;
      case 2:
        if ((v103 & 1) == 0)
          goto LABEL_138;
        v47 = 0;
        v48 = 0;
        v49 = 0;
        *(_DWORD *)(a1 + 156) |= 4u;
        while (2)
        {
          v50 = *v23;
          v51 = *(_QWORD *)(v3 + v50);
          v52 = v51 + 1;
          if (v51 == -1 || v52 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v24) = 1;
          }
          else
          {
            v53 = *(_BYTE *)(*(_QWORD *)(v3 + *v25) + v51);
            *(_QWORD *)(v3 + v50) = v52;
            v49 |= (unint64_t)(v53 & 0x7F) << v47;
            if (v53 < 0)
            {
              v47 += 7;
              v33 = v48++ >= 9;
              if (v33)
              {
                LODWORD(v49) = 0;
                goto LABEL_143;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v24))
          LODWORD(v49) = 0;
LABEL_143:
        v93 = 140;
        goto LABEL_165;
      case 3:
        if (!v37)
          goto LABEL_138;
        if ((*(_BYTE *)(a1 + 157) & 0x20) == 0)
        {
          PBReaderReadString();
          v42 = objc_claimAutoreleasedReturnValue();
          v43 = 64;
          goto LABEL_120;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_215;
        v96 = (int)(*(_DWORD *)(a1 + 156) << 18) >> 31;
        goto LABEL_184;
      case 4:
        if (!v37 || (*(_BYTE *)(a1 + 158) & 1) != 0)
          goto LABEL_138;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_215;
        v54 = objc_alloc_init(GEOLocation);
        if (!GEOLocationReadAllFrom((uint64_t)v54, (void *)v3, v10 & 1))
          goto LABEL_214;
        PBReaderRecallMark();
        -[GEOPDBankTransactionInformation _addNoFlagsOtherTransactionLocations:](a1, v54);
LABEL_110:

        goto LABEL_185;
      case 5:
        if ((v103 & 1) == 0)
          goto LABEL_138;
        *(_DWORD *)(a1 + 156) |= 2u;
        v55 = *v23;
        v56 = *(_QWORD *)(v3 + v55);
        if (v56 <= 0xFFFFFFFFFFFFFFF7 && v56 + 8 <= *(_QWORD *)(v3 + *v6))
        {
          v57 = *(_QWORD *)(*(_QWORD *)(v3 + *v25) + v56);
          *(_QWORD *)(v3 + v55) = v56 + 8;
        }
        else
        {
          *(_BYTE *)(v3 + *v24) = 1;
          v57 = 0;
        }
        *(_QWORD *)(a1 + 120) = v57;
        goto LABEL_186;
      case 6:
        if (!v37)
          goto LABEL_138;
        if ((*(_BYTE *)(a1 + 158) & 2) == 0)
        {
          PBReaderReadString();
          v42 = objc_claimAutoreleasedReturnValue();
          v43 = 104;
          goto LABEL_120;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_215;
        v96 = (int)(*(_DWORD *)(a1 + 156) << 14) >> 31;
        goto LABEL_184;
      case 7:
        if (!v37)
          goto LABEL_138;
        if ((*(_BYTE *)(a1 + 157) & 0x40) == 0)
        {
          PBReaderReadString();
          v42 = objc_claimAutoreleasedReturnValue();
          v43 = 72;
          goto LABEL_120;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_215;
        v96 = (int)(*(_DWORD *)(a1 + 156) << 17) >> 31;
        goto LABEL_184;
      case 8:
        if ((v103 & 1) == 0)
          goto LABEL_138;
        v58 = 0;
        v59 = 0;
        v60 = 0;
        *(_DWORD *)(a1 + 156) |= 1u;
        while (2)
        {
          v61 = *v23;
          v62 = *(_QWORD *)(v3 + v61);
          v63 = v62 + 1;
          if (v62 == -1 || v63 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v24) = 1;
          }
          else
          {
            v64 = *(_BYTE *)(*(_QWORD *)(v3 + *v25) + v62);
            *(_QWORD *)(v3 + v61) = v63;
            v60 |= (unint64_t)(v64 & 0x7F) << v58;
            if (v64 < 0)
            {
              v58 += 7;
              v33 = v59++ >= 9;
              if (v33)
              {
                v60 = 0;
                goto LABEL_147;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v24))
          v60 = 0;
LABEL_147:
        *(_QWORD *)(a1 + 80) = -(v60 & 1) ^ (v60 >> 1);
        goto LABEL_186;
      case 9:
        if ((v103 & 1) == 0)
          goto LABEL_138;
        v65 = 0;
        v66 = 0;
        v67 = 0;
        *(_DWORD *)(a1 + 156) |= 0x20u;
        while (2)
        {
          v68 = *v23;
          v69 = *(_QWORD *)(v3 + v68);
          v70 = v69 + 1;
          if (v69 == -1 || v70 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v24) = 1;
          }
          else
          {
            v71 = *(_BYTE *)(*(_QWORD *)(v3 + *v25) + v69);
            *(_QWORD *)(v3 + v68) = v70;
            v67 |= (unint64_t)(v71 & 0x7F) << v65;
            if (v71 < 0)
            {
              v65 += 7;
              v33 = v66++ >= 9;
              if (v33)
              {
                v67 = 0;
                goto LABEL_151;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v24))
          v67 = 0;
LABEL_151:
        v94 = v67 != 0;
        v95 = 152;
        goto LABEL_160;
      case 10:
        if (!v37)
          goto LABEL_138;
        if ((*(_BYTE *)(a1 + 158) & 4) == 0)
        {
          PBReaderReadString();
          v42 = objc_claimAutoreleasedReturnValue();
          v43 = 112;
          goto LABEL_120;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_215;
        v96 = (int)(*(_DWORD *)(a1 + 156) << 13) >> 31;
        goto LABEL_184;
      case 11:
        if ((v103 & 1) == 0)
          goto LABEL_138;
        v72 = 0;
        v73 = 0;
        v49 = 0;
        *(_DWORD *)(a1 + 156) |= 0x10u;
        while (2)
        {
          v74 = *v23;
          v75 = *(_QWORD *)(v3 + v74);
          v76 = v75 + 1;
          if (v75 == -1 || v76 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v24) = 1;
          }
          else
          {
            v77 = *(_BYTE *)(*(_QWORD *)(v3 + *v25) + v75);
            *(_QWORD *)(v3 + v74) = v76;
            v49 |= (unint64_t)(v77 & 0x7F) << v72;
            if (v77 < 0)
            {
              v72 += 7;
              v33 = v73++ >= 9;
              if (v33)
              {
                LODWORD(v49) = 0;
                goto LABEL_155;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v24))
          LODWORD(v49) = 0;
LABEL_155:
        v93 = 148;
        goto LABEL_165;
      case 12:
        if (!v37)
          goto LABEL_138;
        if ((*(_BYTE *)(a1 + 157) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_215;
          v96 = (int)(*(_DWORD *)(a1 + 156) << 16) >> 31;
LABEL_184:
          v7 += v96;
          goto LABEL_185;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_215;
        v54 = objc_alloc_init(GEOPDMerchantInformation);
        if (GEOPDMerchantInformationReadAllFrom((uint64_t)v54, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          v78 = *(void **)(a1 + 88);
          *(_QWORD *)(a1 + 88) = v54;
LABEL_121:

          --v7;
LABEL_185:
          v24 = (int *)MEMORY[0x1E0D82BC8];
          v25 = (int *)MEMORY[0x1E0D82BB8];
LABEL_186:
          if (!(v104 & 1 | (v7 != 0)))
            goto LABEL_190;
          continue;
        }
LABEL_214:

LABEL_215:
        v101 = 0;
        v24 = (int *)MEMORY[0x1E0D82BC8];
LABEL_191:
        if ((v102 & 1) != 0)
LABEL_192:
          *(_DWORD *)(a1 + 156) |= 0x80u;
        if (v106 || (v101 & 1) == 0)
        {
          *(_DWORD *)(a1 + 156) |= 0x100u;
          *(_DWORD *)(a1 + 156) |= 0x2000u;
          *(_DWORD *)(a1 + 156) |= 0x10000u;
          *(_DWORD *)(a1 + 156) |= 0x20000u;
          *(_DWORD *)(a1 + 156) |= 0x4000u;
          *(_DWORD *)(a1 + 156) |= 0x40000u;
          *(_DWORD *)(a1 + 156) |= 0x8000u;
          *(_DWORD *)(a1 + 156) |= 0x200u;
          *(_DWORD *)(a1 + 156) |= 0x400u;
          *(_DWORD *)(a1 + 156) |= 0x1000u;
          *(_DWORD *)(a1 + 156) |= 0x800u;
        }
        else if (v22)
        {
          while (1)
          {
            v97 = *v22++;
            v98 = 256;
            switch(v97)
            {
              case 0:
                goto LABEL_208;
              case 1:
                goto LABEL_207;
              case 3:
                v98 = 0x2000;
                goto LABEL_207;
              case 4:
                v98 = 0x10000;
                goto LABEL_207;
              case 6:
                v98 = 0x20000;
                goto LABEL_207;
              case 7:
                v98 = 0x4000;
                goto LABEL_207;
              case 10:
                v98 = 0x40000;
                goto LABEL_207;
              case 12:
                v98 = 0x8000;
                goto LABEL_207;
              case 13:
                v98 = 512;
                goto LABEL_207;
              case 14:
                v98 = 1024;
                goto LABEL_207;
              case 15:
                v98 = 4096;
                goto LABEL_207;
              case 16:
                v98 = 2048;
LABEL_207:
                *(_DWORD *)(a1 + 156) |= v98;
                break;
              default:
                continue;
            }
          }
        }
LABEL_208:
        if (v101)
          v3 = *(_BYTE *)(v3 + *v24) == 0;
        else
          v3 = 0;
        if (v106)
        {
          v99 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      case 13:
        if (!v37 || (*(_BYTE *)(a1 + 157) & 2) != 0)
          goto LABEL_138;
        PBReaderReadData();
        v54 = (GEOLocation *)objc_claimAutoreleasedReturnValue();
        if (v54)
          -[GEOPDBankTransactionInformation _addNoFlagsBaaCertificate:](a1, v54);
        goto LABEL_110;
      case 14:
        if (!v37)
          goto LABEL_138;
        if ((*(_BYTE *)(a1 + 157) & 4) == 0)
        {
          PBReaderReadData();
          v42 = objc_claimAutoreleasedReturnValue();
          v43 = 40;
          goto LABEL_120;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_215;
        v96 = (int)(*(_DWORD *)(a1 + 156) << 21) >> 31;
        goto LABEL_184;
      case 15:
        if (!v37)
          goto LABEL_138;
        if ((*(_BYTE *)(a1 + 157) & 0x10) == 0)
        {
          PBReaderReadString();
          v42 = objc_claimAutoreleasedReturnValue();
          v43 = 56;
          goto LABEL_120;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_215;
        v96 = (int)(*(_DWORD *)(a1 + 156) << 19) >> 31;
        goto LABEL_184;
      case 16:
        if (!v37)
          goto LABEL_138;
        if ((*(_BYTE *)(a1 + 157) & 8) == 0)
        {
          PBReaderReadString();
          v42 = objc_claimAutoreleasedReturnValue();
          v43 = 48;
LABEL_120:
          v78 = *(void **)(a1 + v43);
          *(_QWORD *)(a1 + v43) = v42;
          goto LABEL_121;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_215;
        v96 = (int)(*(_DWORD *)(a1 + 156) << 20) >> 31;
        goto LABEL_184;
      case 17:
        if ((v103 & 1) == 0)
          goto LABEL_138;
        v79 = 0;
        v80 = 0;
        v81 = 0;
        *(_DWORD *)(a1 + 156) |= 0x40u;
        while (2)
        {
          v82 = *v23;
          v83 = *(_QWORD *)(v3 + v82);
          v84 = v83 + 1;
          if (v83 == -1 || v84 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v24) = 1;
          }
          else
          {
            v85 = *(_BYTE *)(*(_QWORD *)(v3 + *v25) + v83);
            *(_QWORD *)(v3 + v82) = v84;
            v81 |= (unint64_t)(v85 & 0x7F) << v79;
            if (v85 < 0)
            {
              v79 += 7;
              v33 = v80++ >= 9;
              if (v33)
              {
                v81 = 0;
                goto LABEL_159;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v24))
          v81 = 0;
LABEL_159:
        v94 = v81 != 0;
        v95 = 153;
LABEL_160:
        *(_BYTE *)(a1 + v95) = v94;
        goto LABEL_186;
      case 18:
        if ((v103 & 1) == 0)
          goto LABEL_138;
        v86 = 0;
        v87 = 0;
        v49 = 0;
        *(_DWORD *)(a1 + 156) |= 8u;
        while (2)
        {
          v88 = *v23;
          v89 = *(_QWORD *)(v3 + v88);
          v90 = v89 + 1;
          if (v89 == -1 || v90 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v24) = 1;
          }
          else
          {
            v91 = *(_BYTE *)(*(_QWORD *)(v3 + *v25) + v89);
            *(_QWORD *)(v3 + v88) = v90;
            v49 |= (unint64_t)(v91 & 0x7F) << v86;
            if (v91 < 0)
            {
              v86 += 7;
              v33 = v87++ >= 9;
              if (v33)
              {
                LODWORD(v49) = 0;
                goto LABEL_164;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v24))
          LODWORD(v49) = 0;
LABEL_164:
        v93 = 144;
LABEL_165:
        *(_DWORD *)(a1 + v93) = v49;
        goto LABEL_186;
      default:
        if ((v102 & 1) == 0 || (*(_BYTE *)(a1 + 156) & 0x80) != 0)
        {
LABEL_138:
          v92 = PBReaderSkipValueWithTag();
          v25 = (int *)MEMORY[0x1E0D82BB8];
          v24 = (int *)MEMORY[0x1E0D82BC8];
          if ((v92 & 1) == 0)
          {
            v101 = 0;
            goto LABEL_191;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v44 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v45 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v44;

          }
          v46 = PBUnknownFieldAdd();
          v24 = (int *)MEMORY[0x1E0D82BC8];
          v25 = (int *)MEMORY[0x1E0D82BB8];
          if (!v46)
          {
            v101 = 0;
            goto LABEL_192;
          }
        }
        goto LABEL_186;
    }
  }
}

void sub_188B0E104(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B0E24C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B0E600(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B0E744(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B0E97C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B0EC7C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B0EDC4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B0F0F8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B0F240(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B0F388(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B10B48(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDBankTransactionInformationCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _BYTE v12[128];
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  v8 = 0u;
  v9 = 0u;
  v10 = 0u;
  v11 = 0u;
  v2 = *(id *)(a1 + 96);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v9;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v9 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v8 + 1) + 8 * v6++), "readAll:", 1, (_QWORD)v8);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
    }
    while (v4);
  }

  return objc_msgSend(*(id *)(a1 + 88), "readAll:", 1);
}

unint64_t GEOPDBankTransactionInformationReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 132))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDBankTransactionInformationReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 136));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 128) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 132) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDBankTransactionInformationReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDBankTransactionInformationReadAllFrom_initialTag;
  Specified = GEOPDBankTransactionInformationReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDBankTransactionInformationCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 136));
  return Specified;
}

void sub_188B10DE8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDBankTransactionInformationReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOPDBankTransactionInformationReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188B10E48(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDBankTransactionInformationIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v14;
  int v15;
  int v16;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int v22;
  BOOL v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  int v31;
  unsigned int v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  int v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  int v41;
  unsigned int v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  int v46;
  unsigned int v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  int v51;
  _BOOL8 v52;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = *v4;
          v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = *v4;
      v15 = a1[v14];
      if (a1[v14])
        v8 = 0;
LABEL_14:
      v16 = v8 & 7;
      if (v15 || v16 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v16 != 2)
            goto LABEL_103;
          goto LABEL_80;
        case 2u:
          if ((v8 & 7) != 0)
            goto LABEL_103;
          v18 = 0;
          while (1)
          {
            v19 = *v2;
            v20 = *(_QWORD *)&a1[v19];
            v21 = v20 + 1;
            if (v20 == -1 || v21 > *(_QWORD *)&a1[*v3])
              goto LABEL_98;
            v22 = *(char *)(*(_QWORD *)&a1[*v5] + v20);
            *(_QWORD *)&a1[v19] = v21;
            if (v22 < 0)
            {
              v23 = v18++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_100;
          }
        case 3u:
          if (v16 == 2)
            goto LABEL_80;
          goto LABEL_103;
        case 4u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOLocationIsValid(a1))
            goto LABEL_103;
          goto LABEL_72;
        case 5u:
          if (v16 != 1)
            goto LABEL_103;
          v24 = *v2;
          v25 = *(_QWORD *)&a1[v24];
          if (v25 > 0xFFFFFFFFFFFFFFF7)
            goto LABEL_99;
          v26 = v25 + 8;
          if (v26 > *(_QWORD *)&a1[*v3])
            goto LABEL_99;
          *(_QWORD *)&a1[v24] = v26;
          continue;
        case 6u:
          if (v16 == 2)
            goto LABEL_80;
          goto LABEL_103;
        case 7u:
          if (v16 == 2)
            goto LABEL_80;
          goto LABEL_103;
        case 8u:
          if ((v8 & 7) != 0)
            goto LABEL_103;
          v27 = 0;
          while (1)
          {
            v28 = *v2;
            v29 = *(_QWORD *)&a1[v28];
            v30 = v29 + 1;
            if (v29 == -1 || v30 > *(_QWORD *)&a1[*v3])
              goto LABEL_98;
            v31 = *(char *)(*(_QWORD *)&a1[*v5] + v29);
            *(_QWORD *)&a1[v28] = v30;
            if (v31 < 0)
            {
              v23 = v27++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_100;
          }
        case 9u:
          if ((v8 & 7) != 0)
            goto LABEL_103;
          v32 = 0;
          while (1)
          {
            v33 = *v2;
            v34 = *(_QWORD *)&a1[v33];
            v35 = v34 + 1;
            if (v34 == -1 || v35 > *(_QWORD *)&a1[*v3])
              goto LABEL_98;
            v36 = *(char *)(*(_QWORD *)&a1[*v5] + v34);
            *(_QWORD *)&a1[v33] = v35;
            if (v36 < 0)
            {
              v23 = v32++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_100;
          }
        case 0xAu:
          if (v16 == 2)
            goto LABEL_80;
          goto LABEL_103;
        case 0xBu:
          if ((v8 & 7) != 0)
            goto LABEL_103;
          v37 = 0;
          while (1)
          {
            v38 = *v2;
            v39 = *(_QWORD *)&a1[v38];
            v40 = v39 + 1;
            if (v39 == -1 || v40 > *(_QWORD *)&a1[*v3])
              goto LABEL_98;
            v41 = *(char *)(*(_QWORD *)&a1[*v5] + v39);
            *(_QWORD *)&a1[v38] = v40;
            if (v41 < 0)
            {
              v23 = v37++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_100;
          }
        case 0xCu:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOPDMerchantInformationIsValid(a1))
            goto LABEL_103;
LABEL_72:
          PBReaderRecallMark();
          continue;
        case 0xDu:
          if (v16 == 2)
            goto LABEL_80;
          goto LABEL_103;
        case 0xEu:
          if (v16 == 2)
            goto LABEL_80;
          goto LABEL_103;
        case 0xFu:
          if (v16 == 2)
            goto LABEL_80;
          goto LABEL_103;
        case 0x10u:
          if (v16 == 2)
            goto LABEL_80;
          goto LABEL_103;
        case 0x11u:
          if ((v8 & 7) != 0)
            goto LABEL_103;
          v42 = 0;
          while (1)
          {
            v43 = *v2;
            v44 = *(_QWORD *)&a1[v43];
            v45 = v44 + 1;
            if (v44 == -1 || v45 > *(_QWORD *)&a1[*v3])
              goto LABEL_98;
            v46 = *(char *)(*(_QWORD *)&a1[*v5] + v44);
            *(_QWORD *)&a1[v43] = v45;
            if (v46 < 0)
            {
              v23 = v42++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_100;
          }
        case 0x12u:
          if ((v8 & 7) != 0)
            goto LABEL_103;
          v47 = 0;
          break;
        default:
LABEL_80:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_103:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v48 = *v2;
        v49 = *(_QWORD *)&a1[v48];
        v50 = v49 + 1;
        if (v49 == -1 || v50 > *(_QWORD *)&a1[*v3])
          break;
        v51 = *(char *)(*(_QWORD *)&a1[*v5] + v49);
        *(_QWORD *)&a1[v48] = v50;
        if (v51 < 0)
        {
          v23 = v47++ > 8;
          if (!v23)
            continue;
        }
        goto LABEL_100;
      }
LABEL_98:
      v14 = *v4;
LABEL_99:
      a1[v14] = 1;
LABEL_100:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v52 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v52;
}

BOOL GEOPDMerchantInformationIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  _BOOL8 v23;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2)
            goto LABEL_62;
          goto LABEL_56;
        case 2u:
          if (v15 == 2)
            goto LABEL_56;
          goto LABEL_62;
        case 3u:
          if (v15 == 2)
            goto LABEL_56;
          goto LABEL_62;
        case 4u:
          if (v15 == 2)
            goto LABEL_56;
          goto LABEL_62;
        case 5u:
          if (v15 == 2)
            goto LABEL_56;
          goto LABEL_62;
        case 6u:
          if (v15 == 2)
            goto LABEL_56;
          goto LABEL_62;
        case 7u:
          if (v15 == 2)
            goto LABEL_56;
          goto LABEL_62;
        case 8u:
          if (v15 == 2)
            goto LABEL_56;
          goto LABEL_62;
        case 9u:
          if (v15 == 2)
            goto LABEL_56;
          goto LABEL_62;
        case 0xAu:
          if (v15 == 2)
            goto LABEL_56;
          goto LABEL_62;
        case 0xBu:
          if (v15 == 2)
            goto LABEL_56;
          goto LABEL_62;
        case 0xCu:
          if (v15 == 2)
            goto LABEL_56;
          goto LABEL_62;
        case 0xDu:
          if ((v8 & 7) != 0)
            goto LABEL_62;
          v17 = 0;
          break;
        case 0xEu:
          if (v15 == 2)
            goto LABEL_56;
          goto LABEL_62;
        case 0xFu:
          if (v15 != 2)
            goto LABEL_62;
LABEL_56:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_62:
          v23 = 0;
          goto LABEL_61;
        default:
          if (!PBReaderSkipValueWithTag())
            goto LABEL_62;
          continue;
      }
      while (1)
      {
        v18 = *v2;
        v19 = *(_QWORD *)&a1[v18];
        v20 = v19 + 1;
        if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
          break;
        v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
        *(_QWORD *)&a1[v18] = v20;
        if (v21 < 0 && v17++ <= 8)
          continue;
        goto LABEL_57;
      }
      a1[*v4] = 1;
LABEL_57:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v23 = a1[*v4] == 0;
LABEL_61:
  PBReaderRecallMark();
  return v23;
}

void sub_188B11AEC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDBankTransactionInformationIsDirty(uint64_t a1)
{
  int v2;
  uint64_t v3;
  id v5;
  uint64_t v6;
  uint64_t i;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _BYTE v12[128];
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 136));
  v2 = *(_DWORD *)(a1 + 156);
  if ((v2 & 0xF6100) != 0)
    return 1;
  if ((v2 & 0x8000) != 0)
  {
    if (GEOPDMerchantInformationIsDirty(*(os_unfair_lock_s **)(a1 + 88)))
      return 1;
    v2 = *(_DWORD *)(a1 + 156);
  }
  if ((v2 & 0x1E00) != 0)
    return 1;
  if ((v2 & 0x10000) == 0)
    return 0;
  v10 = 0u;
  v11 = 0u;
  v8 = 0u;
  v9 = 0u;
  v5 = *(id *)(a1 + 96);
  v3 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
  if (v3)
  {
    v6 = *(_QWORD *)v9;
    while (2)
    {
      for (i = 0; i != v3; ++i)
      {
        if (*(_QWORD *)v9 != v6)
          objc_enumerationMutation(v5);
        if (GEOLocationIsDirty(*(os_unfair_lock_s **)(*((_QWORD *)&v8 + 1) + 8 * i)))
        {
          v3 = 1;
          goto LABEL_20;
        }
      }
      v3 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
      if (v3)
        continue;
      break;
    }
  }
LABEL_20:

  return v3;
}

os_unfair_lock_s *GEOPDBankTransactionInformationIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOPDBankTransactionInformationIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 34);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

unint64_t GEOPDBankTransactionInformationClearSensitiveFields(uint64_t a1, uint64_t a2, int a3)
{
  unint64_t result;
  unint64_t i;
  uint64_t v8;
  void *v9;
  _DWORD *v10;

  -[GEOPDBankTransactionInformation _readOtherTransactionLocations](a1);
  result = objc_msgSend(*(id *)(a1 + 96), "count");
  if (result)
  {
    for (i = 0; i < result; ++i)
    {
      objc_msgSend(*(id *)(a1 + 96), "objectAtIndexedSubscript:", i);
      v8 = objc_claimAutoreleasedReturnValue();
      v9 = (void *)v8;
      if (a3 && GEOLocationHasSensitiveFields(v8))
      {
        v10 = (_DWORD *)objc_msgSend(v9, "copy");
        GEOLocationClearSensitiveFields(v10);
        objc_msgSend(*(id *)(a1 + 96), "replaceObjectAtIndex:withObject:", i, v10);

      }
      else
      {
        objc_msgSend(v9, "clearSensitiveFields:", a2);
      }

      result = objc_msgSend(*(id *)(a1 + 96), "count");
    }
  }
  return result;
}

uint64_t GEOPDBankTransactionInformationHasSensitiveFields(void *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _BYTE v12[128];
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  if (!a1)
    return 0;
  v10 = 0u;
  v11 = 0u;
  v8 = 0u;
  v9 = 0u;
  objc_msgSend(a1, "otherTransactionLocations", 0);
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  v2 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
  if (v2)
  {
    v3 = v2;
    v4 = *(_QWORD *)v9;
    while (2)
    {
      v5 = 0;
      do
      {
        if (*(_QWORD *)v9 != v4)
          objc_enumerationMutation(v1);
        if ((GEOLocationHasSensitiveFields(*(_QWORD *)(*((_QWORD *)&v8 + 1) + 8 * v5)) & 1) != 0)
        {
          v6 = 1;
          goto LABEL_12;
        }
        ++v5;
      }
      while (v3 != v5);
      v3 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
      if (v3)
        continue;
      break;
    }
  }
  v6 = 0;
LABEL_12:

  return v6;
}

void sub_188B12814(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B13268(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDBatchCategoryLookupParametersReadAllFrom(uint64_t a1, void *a2, int a3)
{
  char *v5;
  int *v6;
  int *v7;
  int *v8;
  int *v9;
  char v10;
  unsigned int v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  int v18;
  GEOPDCategoryLookupParameters *v20;
  id v21;
  void *v22;
  _BOOL8 v23;

  v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    v6 = (int *)MEMORY[0x1E0D82BF0];
    v7 = (int *)MEMORY[0x1E0D82BD8];
    v8 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v5[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v5[*MEMORY[0x1E0D82BD8]])
    {
      v9 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v5[*v8])
          break;
        v10 = 0;
        v11 = 0;
        v12 = 0;
        while (1)
        {
          v13 = *v6;
          v14 = *(_QWORD *)&v5[v13];
          v15 = v14 + 1;
          if (v14 == -1 || v15 > *(_QWORD *)&v5[*v7])
            break;
          v16 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v14);
          *(_QWORD *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0)
            goto LABEL_13;
          v10 += 7;
          if (v11++ >= 9)
          {
            v12 = 0;
            v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        v18 = v5[*v8];
        if (v5[*v8])
          v12 = 0;
LABEL_15:
        if (v18 || (v12 & 7) == 4)
          break;
        if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_29;
          v20 = objc_alloc_init(GEOPDCategoryLookupParameters);
          if (!GEOPDCategoryLookupParametersReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          -[GEOPDBatchCategoryLookupParameters addCategoryLookupParameter:](a1, v20);

        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v21 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v22 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v21;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_29;
        }
      }
      while (*(_QWORD *)&v5[*v6] < *(_QWORD *)&v5[*v7]);
    }
    v23 = v5[*v8] == 0;
  }
  else
  {
LABEL_29:
    v23 = 0;
  }
  objc_sync_exit(v5);

  return v23;
}

void sub_188B13B50(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDBatchCategoryLookupResultReadAllFrom(uint64_t a1, void *a2, int a3)
{
  char *v5;
  int *v6;
  int *v7;
  int *v8;
  int *v9;
  char v10;
  unsigned int v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  int v18;
  GEOPDCategoryLookupResult *v20;
  id v21;
  void *v22;
  _BOOL8 v23;

  v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    v6 = (int *)MEMORY[0x1E0D82BF0];
    v7 = (int *)MEMORY[0x1E0D82BD8];
    v8 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v5[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v5[*MEMORY[0x1E0D82BD8]])
    {
      v9 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v5[*v8])
          break;
        v10 = 0;
        v11 = 0;
        v12 = 0;
        while (1)
        {
          v13 = *v6;
          v14 = *(_QWORD *)&v5[v13];
          v15 = v14 + 1;
          if (v14 == -1 || v15 > *(_QWORD *)&v5[*v7])
            break;
          v16 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v14);
          *(_QWORD *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0)
            goto LABEL_13;
          v10 += 7;
          if (v11++ >= 9)
          {
            v12 = 0;
            v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        v18 = v5[*v8];
        if (v5[*v8])
          v12 = 0;
LABEL_15:
        if (v18 || (v12 & 7) == 4)
          break;
        if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_29;
          v20 = objc_alloc_init(GEOPDCategoryLookupResult);
          if (!GEOPDCategoryLookupResultReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          -[GEOPDBatchCategoryLookupResult addCategoryLookupResult:](a1, v20);

        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v21 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v22 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v21;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_29;
        }
      }
      while (*(_QWORD *)&v5[*v6] < *(_QWORD *)&v5[*v7]);
    }
    v23 = v5[*v8] == 0;
  }
  else
  {
LABEL_29:
    v23 = 0;
  }
  objc_sync_exit(v5);

  return v23;
}

void sub_188B14518(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDBatchMerchantLookupBrandParametersReadAllFrom(uint64_t a1, void *a2, int a3)
{
  char *v5;
  int *v6;
  int *v7;
  int *v8;
  int *v9;
  char v10;
  unsigned int v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  int v18;
  GEOPDMerchantLookupBrandParameters *v20;
  id v21;
  void *v22;
  _BOOL8 v23;

  v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    v6 = (int *)MEMORY[0x1E0D82BF0];
    v7 = (int *)MEMORY[0x1E0D82BD8];
    v8 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v5[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v5[*MEMORY[0x1E0D82BD8]])
    {
      v9 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v5[*v8])
          break;
        v10 = 0;
        v11 = 0;
        v12 = 0;
        while (1)
        {
          v13 = *v6;
          v14 = *(_QWORD *)&v5[v13];
          v15 = v14 + 1;
          if (v14 == -1 || v15 > *(_QWORD *)&v5[*v7])
            break;
          v16 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v14);
          *(_QWORD *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0)
            goto LABEL_13;
          v10 += 7;
          if (v11++ >= 9)
          {
            v12 = 0;
            v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        v18 = v5[*v8];
        if (v5[*v8])
          v12 = 0;
LABEL_15:
        if (v18 || (v12 & 7) == 4)
          break;
        if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_29;
          v20 = objc_alloc_init(GEOPDMerchantLookupBrandParameters);
          if (!GEOPDMerchantLookupBrandParametersReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          -[GEOPDBatchMerchantLookupBrandParameters addMerchantLookupBrandParameter:](a1, v20);

        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v21 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v22 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v21;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_29;
        }
      }
      while (*(_QWORD *)&v5[*v6] < *(_QWORD *)&v5[*v7]);
    }
    v23 = v5[*v8] == 0;
  }
  else
  {
LABEL_29:
    v23 = 0;
  }
  objc_sync_exit(v5);

  return v23;
}

void sub_188B14EE0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDBatchMerchantLookupBrandResultReadAllFrom(uint64_t a1, void *a2, int a3)
{
  char *v5;
  int *v6;
  int *v7;
  int *v8;
  int *v9;
  char v10;
  unsigned int v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  BOOL v17;
  int v18;
  char v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  GEOPDMerchantLookupBrandResult *v27;
  id v28;
  void *v29;
  _BOOL8 v30;

  v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    v6 = (int *)MEMORY[0x1E0D82BF0];
    v7 = (int *)MEMORY[0x1E0D82BD8];
    v8 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v5[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v5[*MEMORY[0x1E0D82BD8]])
    {
      v9 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v5[*v8])
          break;
        v10 = 0;
        v11 = 0;
        v12 = 0;
        while (1)
        {
          v13 = *v6;
          v14 = *(_QWORD *)&v5[v13];
          v15 = v14 + 1;
          if (v14 == -1 || v15 > *(_QWORD *)&v5[*v7])
            break;
          v16 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v14);
          *(_QWORD *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0)
            goto LABEL_13;
          v10 += 7;
          v17 = v11++ >= 9;
          if (v17)
          {
            v12 = 0;
            v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        v18 = v5[*v8];
        if (v5[*v8])
          v12 = 0;
LABEL_15:
        if (v18 || (v12 & 7) == 4)
          break;
        if ((v12 >> 3) == 2)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_42;
          v27 = objc_alloc_init(GEOPDMerchantLookupBrandResult);
          if (!GEOPDMerchantLookupBrandResultReadAllFrom((uint64_t)v27, v5, a3))
          {

            goto LABEL_42;
          }
          PBReaderRecallMark();
          -[GEOPDBatchMerchantLookupBrandResult addMerchantLookupBrandResult:](a1, v27);

        }
        else if ((v12 >> 3) == 1)
        {
          v20 = 0;
          v21 = 0;
          v22 = 0;
          *(_BYTE *)(a1 + 28) |= 1u;
          while (1)
          {
            v23 = *v6;
            v24 = *(_QWORD *)&v5[v23];
            v25 = v24 + 1;
            if (v24 == -1 || v25 > *(_QWORD *)&v5[*v7])
              break;
            v26 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v24);
            *(_QWORD *)&v5[v23] = v25;
            v22 |= (unint64_t)(v26 & 0x7F) << v20;
            if ((v26 & 0x80) == 0)
              goto LABEL_36;
            v20 += 7;
            v17 = v21++ >= 9;
            if (v17)
            {
              LODWORD(v22) = 0;
              goto LABEL_38;
            }
          }
          v5[*v8] = 1;
LABEL_36:
          if (v5[*v8])
            LODWORD(v22) = 0;
LABEL_38:
          *(_DWORD *)(a1 + 24) = v22;
        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v28 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v29 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v28;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_42;
        }
      }
      while (*(_QWORD *)&v5[*v6] < *(_QWORD *)&v5[*v7]);
    }
    v30 = v5[*v8] == 0;
  }
  else
  {
LABEL_42:
    v30 = 0;
  }
  objc_sync_exit(v5);

  return v30;
}

void sub_188B15A80(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B15FFC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDBatchPopularNearbySearchParametersReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  int *v18;
  int *v19;
  int *v20;
  int *v21;
  char v22;
  unsigned int v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  BOOL v29;
  int v30;
  unint64_t v32;
  BOOL v33;
  int *v34;
  int v35;
  int v36;
  BOOL v37;
  char v38;
  unsigned int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  id v45;
  void *v46;
  int v47;
  GEOPDViewportInfo *v48;
  void *v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  void *v53;
  char v54;
  int v55;
  int v56;
  char v57;
  void *v58;
  int v60;
  int *v61;
  char v62;
  char v63;
  char v64;
  char v65;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 52);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 48));
  v7 = v6;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = ((*(unsigned __int8 *)(a1 + 64) >> 4) & 1)
      + ((*(unsigned __int8 *)(a1 + 64) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 64) >> 2) & 1);
  while (2)
  {
    v14 = 1;
    v15 = 1;
    v16 = 1;
    switch(a3[v11])
    {
      case -4:
        ++v13;
        v14 = v8;
        goto LABEL_8;
      case -3:
        v10 = 1;
        goto LABEL_7;
      case -2:
        v14 = v8;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v17 = v13 != 0;
        v62 = v17 & ~(_BYTE)v12 | v9;
        v63 = v17 | v12 | v62;
        if ((((v17 | v12) | v10) & 1) != 0)
          v18 = 0;
        else
          v18 = a3;
        v64 = (v18 == 0) | v17 | v12;
        v65 = v17 | v12;
        v19 = (int *)MEMORY[0x1E0D82BF0];
        v20 = (int *)MEMORY[0x1E0D82BC8];
        v21 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v13;
LABEL_7:
        v14 = v8;
        v15 = v9;
LABEL_8:
        v16 = v12;
LABEL_10:
        ++v11;
        v8 = v14;
        v9 = v15;
        v12 = v16;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v19) >= *(_QWORD *)(v3 + *v7) || *(_BYTE *)(v3 + *v20))
      goto LABEL_79;
    v22 = 0;
    v23 = 0;
    v24 = 0;
    while (1)
    {
      v25 = *v19;
      v26 = *(_QWORD *)(v3 + v25);
      v27 = v26 + 1;
      if (v26 == -1 || v27 > *(_QWORD *)(v3 + *v7))
        break;
      v28 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v26);
      *(_QWORD *)(v3 + v25) = v27;
      v24 |= (unint64_t)(v28 & 0x7F) << v22;
      if ((v28 & 0x80) == 0)
        goto LABEL_25;
      v22 += 7;
      v29 = v23++ >= 9;
      if (v29)
      {
        v24 = 0;
        v30 = *(unsigned __int8 *)(v3 + *v20);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v20) = 1;
LABEL_25:
    v30 = *(unsigned __int8 *)(v3 + *v20);
    if (*(_BYTE *)(v3 + *v20))
      v24 = 0;
LABEL_27:
    if (v30 || (v24 & 7) == 4)
    {
LABEL_79:
      v60 = 1;
      goto LABEL_80;
    }
    v32 = v24 >> 3;
    v33 = v65;
    if ((v64 & 1) == 0)
    {
      v34 = v18;
      do
      {
        v36 = *v34++;
        v35 = v36;
        v33 = v36 != 0;
        if (v36)
          v37 = v35 == (_DWORD)v32;
        else
          v37 = 1;
      }
      while (!v37);
    }
    switch((int)v32)
    {
      case 1:
        if ((v10 & 1) == 0)
          goto LABEL_67;
        v38 = 0;
        v39 = 0;
        v40 = 0;
        *(_BYTE *)(a1 + 64) |= 2u;
        while (1)
        {
          v41 = *v19;
          v42 = *(_QWORD *)(v3 + v41);
          v43 = v42 + 1;
          if (v42 == -1 || v43 > *(_QWORD *)(v3 + *v7))
            break;
          v44 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v42);
          *(_QWORD *)(v3 + v41) = v43;
          v40 |= (unint64_t)(v44 & 0x7F) << v38;
          if ((v44 & 0x80) == 0)
            goto LABEL_70;
          v38 += 7;
          v29 = v39++ >= 9;
          if (v29)
          {
            LODWORD(v40) = 0;
            goto LABEL_72;
          }
        }
        *(_BYTE *)(v3 + *v20) = 1;
LABEL_70:
        if (*(_BYTE *)(v3 + *v20))
          LODWORD(v40) = 0;
LABEL_72:
        *(_DWORD *)(a1 + 60) = v40;
        goto LABEL_78;
      case 2:
        if (!v33)
          goto LABEL_67;
        if ((*(_BYTE *)(a1 + 64) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_99;
          v11 += *(unsigned __int8 *)(a1 + 64) << 27 >> 31;
          goto LABEL_75;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_99;
        v48 = objc_alloc_init(GEOPDViewportInfo);
        if (GEOPDViewportInfoReadAllFrom((uint64_t)v48, (void *)v3))
        {
          PBReaderRecallMark();
          v49 = *(void **)(a1 + 40);
          *(_QWORD *)(a1 + 40) = v48;

          --v11;
LABEL_75:
          v20 = (int *)MEMORY[0x1E0D82BC8];
          v7 = (int *)MEMORY[0x1E0D82BD8];
LABEL_78:
          if (!(v63 & 1 | (v11 != 0)))
            goto LABEL_79;
          continue;
        }

LABEL_99:
        v60 = 0;
        v20 = (int *)MEMORY[0x1E0D82BC8];
LABEL_80:
        v61 = &OBJC_IVAR___GEOPDAutocompleteResultSection__readerMarkLength;
        if ((v62 & 1) != 0)
LABEL_81:
          *(_BYTE *)(a1 + v61[35]) |= 4u;
        if (v65 & 1 | ((v60 & 1) == 0))
        {
          *(_BYTE *)(a1 + v61[35]) |= 0x10u;
          *(_BYTE *)(a1 + v61[35]) |= 8u;
          goto LABEL_92;
        }
        if (v18)
        {
          while (2)
          {
            while (1)
            {
              v56 = *v18++;
              v55 = v56;
              if (v56 == 2)
                break;
              if (v55 == 4)
              {
                v57 = 8;
                goto LABEL_91;
              }
              if (!v55)
                goto LABEL_92;
            }
            v57 = 16;
LABEL_91:
            *(_BYTE *)(a1 + v61[35]) |= v57;
            continue;
          }
        }
LABEL_92:
        if (v60)
          v3 = *(_BYTE *)(v3 + *v20) == 0;
        else
          v3 = 0;
        if ((v65 & 1) != 0)
        {
          v58 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      case 3:
        if ((v10 & 1) == 0)
          goto LABEL_67;
        *(_BYTE *)(a1 + 64) |= 1u;
        v50 = *v19;
        v51 = *(_QWORD *)(v3 + v50);
        if (v51 <= 0xFFFFFFFFFFFFFFF7 && v51 + 8 <= *(_QWORD *)(v3 + *v7))
        {
          v52 = *(_QWORD *)(*(_QWORD *)(v3 + *v21) + v51);
          *(_QWORD *)(v3 + v50) = v51 + 8;
        }
        else
        {
          *(_BYTE *)(v3 + *v20) = 1;
          v52 = 0;
        }
        *(_QWORD *)(a1 + 24) = v52;
        goto LABEL_78;
      case 4:
        if (!v33 || (*(_BYTE *)(a1 + 64) & 8) != 0)
          goto LABEL_67;
        PBReaderReadData();
        v53 = (void *)objc_claimAutoreleasedReturnValue();
        if (v53)
          -[GEOPDBatchPopularNearbySearchParameters _addNoFlagsSuggestionEntryMetadata:](a1, v53);

        goto LABEL_75;
      default:
        if ((v62 & 1) == 0 || (*(_BYTE *)(a1 + 64) & 4) != 0)
        {
LABEL_67:
          v54 = PBReaderSkipValueWithTag();
          v7 = (int *)MEMORY[0x1E0D82BD8];
          v20 = (int *)MEMORY[0x1E0D82BC8];
          if ((v54 & 1) == 0)
          {
            v60 = 0;
            goto LABEL_80;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v45 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v46 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v45;

          }
          v47 = PBUnknownFieldAdd();
          v20 = (int *)MEMORY[0x1E0D82BC8];
          v7 = (int *)MEMORY[0x1E0D82BD8];
          if (!v47)
          {
            v60 = 0;
            v61 = &OBJC_IVAR___GEOPDAutocompleteResultSection__readerMarkLength;
            goto LABEL_81;
          }
        }
        goto LABEL_78;
    }
  }
}

void sub_188B16778(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B16DA0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDBatchPopularNearbySearchParametersReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 52))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDBatchPopularNearbySearchParametersReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 52) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDBatchPopularNearbySearchParametersReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDBatchPopularNearbySearchParametersReadAllFrom_initialTag;
  Specified = GEOPDBatchPopularNearbySearchParametersReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    objc_msgSend(*(id *)(a1 + 40), "readAll:", 1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_188B1700C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B1728C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDBatchPopularNearbySearchParametersIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v2 = (*(_BYTE *)(a1 + 64) & 0x38) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return v2;
}

void sub_188B175A4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDBatchPopularNearbySearchResultReadAllFrom(uint64_t a1, void *a2, int a3)
{
  char *v5;
  int *v6;
  int *v7;
  int *v8;
  int *v9;
  char v10;
  unsigned int v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  int v18;
  GEOPDPopularNearbyResult *v20;
  id v21;
  void *v22;
  _BOOL8 v23;

  v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    v6 = (int *)MEMORY[0x1E0D82BF0];
    v7 = (int *)MEMORY[0x1E0D82BD8];
    v8 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v5[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v5[*MEMORY[0x1E0D82BD8]])
    {
      v9 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v5[*v8])
          break;
        v10 = 0;
        v11 = 0;
        v12 = 0;
        while (1)
        {
          v13 = *v6;
          v14 = *(_QWORD *)&v5[v13];
          v15 = v14 + 1;
          if (v14 == -1 || v15 > *(_QWORD *)&v5[*v7])
            break;
          v16 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v14);
          *(_QWORD *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0)
            goto LABEL_13;
          v10 += 7;
          if (v11++ >= 9)
          {
            v12 = 0;
            v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        v18 = v5[*v8];
        if (v5[*v8])
          v12 = 0;
LABEL_15:
        if (v18 || (v12 & 7) == 4)
          break;
        if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_29;
          v20 = objc_alloc_init(GEOPDPopularNearbyResult);
          if (!GEOPDPopularNearbyResultReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          -[GEOPDBatchPopularNearbySearchResult addPopularNearbyResult:](a1, v20);

        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v21 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v22 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v21;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_29;
        }
      }
      while (*(_QWORD *)&v5[*v6] < *(_QWORD *)&v5[*v7]);
    }
    v23 = v5[*v8] == 0;
  }
  else
  {
LABEL_29:
    v23 = 0;
  }
  objc_sync_exit(v5);

  return v23;
}

void sub_188B17EEC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B183F0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDBatchReverseGeocodingParametersReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BOOL4 v17;
  int v18;
  int *v19;
  int *v20;
  int v21;
  int *v22;
  int *v23;
  char v24;
  unsigned int v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  BOOL v31;
  int v32;
  int v33;
  unint64_t v35;
  BOOL v36;
  int *v37;
  int v38;
  int v39;
  BOOL v40;
  GEOLocation *v41;
  char v42;
  unsigned int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  char v48;
  id v49;
  void *v50;
  char v51;
  unsigned int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  char v57;
  int v58;
  int v59;
  void *v60;
  char v62;
  int v63;
  int v64;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 60);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 56));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
  v13 = ((*(unsigned __int8 *)(a1 + 68) >> 1) & 1)
      + (*(_BYTE *)(a1 + 68) & 1)
      + ((*(unsigned __int8 *)(a1 + 68) >> 2) & 1);
  while (2)
  {
    v14 = 1;
    v15 = 1;
    v16 = 1;
    switch(a3[v9])
    {
      case -4:
        ++v13;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v15 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v17 = v13 != 0;
        v18 = v17 & ~(_DWORD)v11 | v7;
        v64 = v17 | v11;
        v19 = (int *)MEMORY[0x1E0D82BF0];
        if ((((v17 | v11) | v8) & 1) != 0)
          v20 = 0;
        else
          v20 = a3;
        v21 = 1;
        if (*(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(v3 + *v6))
          goto LABEL_82;
        v62 = v18;
        v63 = (v9 != 0) | v64 | v18;
        v22 = (int *)MEMORY[0x1E0D82BC8];
        v23 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v13;
LABEL_7:
        v14 = v7;
LABEL_8:
        v15 = v10;
        v16 = v11;
LABEL_10:
        ++v9;
        v7 = v14;
        v10 = v15;
        v11 = v16;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_BYTE *)(v3 + *v22))
      goto LABEL_80;
    v24 = 0;
    v25 = 0;
    v26 = 0;
    while (1)
    {
      v27 = *v19;
      v28 = *(_QWORD *)(v3 + v27);
      v29 = v28 + 1;
      if (v28 == -1 || v29 > *(_QWORD *)(v3 + *v6))
        break;
      v30 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v28);
      *(_QWORD *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0)
        goto LABEL_25;
      v24 += 7;
      v31 = v25++ >= 9;
      if (v31)
      {
        v26 = 0;
        v32 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v22) = 1;
LABEL_25:
    v32 = *(unsigned __int8 *)(v3 + *v22);
    if (*(_BYTE *)(v3 + *v22))
      v26 = 0;
LABEL_27:
    v33 = v26 & 7;
    if (v32 || v33 == 4)
    {
LABEL_80:
      v21 = 1;
      goto LABEL_81;
    }
    v35 = v26 >> 3;
    v36 = v64;
    if (!((v20 == 0) | v64 & 1))
    {
      v37 = v20;
      do
      {
        v39 = *v37++;
        v38 = v39;
        v36 = v39 != 0;
        if (v39)
          v40 = v38 == (_DWORD)v35;
        else
          v40 = 1;
      }
      while (!v40);
    }
    if ((_DWORD)v35 != 2)
      break;
    if (v36 && (*(_BYTE *)(a1 + 68) & 2) == 0)
    {
      if (v33 == 2)
      {
        v21 = PBReaderPlaceMark();
        if (!v21)
          goto LABEL_81;
        while (*(_QWORD *)(v3 + *v19) < *(_QWORD *)(v3 + *v6) && !*(_BYTE *)(v3 + *v22))
        {
          v42 = 0;
          v43 = 0;
          v44 = 0;
          while (1)
          {
            v45 = *v19;
            v46 = *(_QWORD *)(v3 + v45);
            v47 = v46 + 1;
            if (v46 == -1 || v47 > *(_QWORD *)(v3 + *v6))
              break;
            v48 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v46);
            *(_QWORD *)(v3 + v45) = v47;
            v44 |= (unint64_t)(v48 & 0x7F) << v42;
            if (v48 < 0)
            {
              v42 += 7;
              v31 = v43++ >= 9;
              if (!v31)
                continue;
            }
            goto LABEL_59;
          }
          *(_BYTE *)(v3 + *v22) = 1;
LABEL_59:
          PBRepeatedInt32Add();
        }
        PBReaderRecallMark();
      }
      else
      {
        v51 = 0;
        v52 = 0;
        v53 = 0;
        while (1)
        {
          v54 = *v19;
          v55 = *(_QWORD *)(v3 + v54);
          v56 = v55 + 1;
          if (v55 == -1 || v56 > *(_QWORD *)(v3 + *v6))
            break;
          v57 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v55);
          *(_QWORD *)(v3 + v54) = v56;
          v53 |= (unint64_t)(v57 & 0x7F) << v51;
          if (v57 < 0)
          {
            v51 += 7;
            v31 = v52++ >= 9;
            if (!v31)
              continue;
          }
          goto LABEL_77;
        }
        *(_BYTE *)(v3 + *v22) = 1;
LABEL_77:
        PBRepeatedInt32Add();
      }
LABEL_78:
      if ((v63 & 1) == 0)
        goto LABEL_80;
      goto LABEL_79;
    }
LABEL_66:
    v21 = PBReaderSkipValueWithTag();
    if ((v21 & v63 & 1) == 0)
      goto LABEL_81;
LABEL_79:
    if (*(_QWORD *)(v3 + *v19) >= *(_QWORD *)(v3 + *v6))
      goto LABEL_80;
  }
  if ((_DWORD)v35 != 1)
  {
    if ((v62 & 1) != 0 && (*(_BYTE *)(a1 + 68) & 1) == 0)
    {
      if (!*(_QWORD *)(a1 + 16))
      {
        v49 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v50 = *(void **)(a1 + 16);
        *(_QWORD *)(a1 + 16) = v49;

      }
      v21 = PBUnknownFieldAdd();
      if (!v21)
      {
        v12 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
        goto LABEL_83;
      }
      goto LABEL_78;
    }
    goto LABEL_66;
  }
  if (!v36 || (*(_BYTE *)(a1 + 68) & 4) != 0)
    goto LABEL_66;
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_100;
  v41 = objc_alloc_init(GEOLocation);
  if (GEOLocationReadAllFrom((uint64_t)v41, (void *)v3, v10 & 1))
  {
    PBReaderRecallMark();
    -[GEOPDBatchReverseGeocodingParameters _addNoFlagsAssetLocation:](a1, v41);

    goto LABEL_78;
  }

LABEL_100:
  v21 = 0;
LABEL_81:
  LOBYTE(v18) = v62;
  v12 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
LABEL_82:
  if ((v18 & 1) != 0)
LABEL_83:
    *(_BYTE *)(a1 + v12[204]) |= 1u;
  if (v64 & 1 | ((v21 & 1) == 0))
  {
    *(_BYTE *)(a1 + v12[204]) |= 4u;
    *(_BYTE *)(a1 + v12[204]) |= 2u;
    goto LABEL_93;
  }
  if (v20)
  {
    while (2)
    {
      while (1)
      {
        v59 = *v20++;
        v58 = v59;
        if (v59 == 1)
          break;
        if (v58 == 2)
          goto LABEL_92;
        if (!v58)
          goto LABEL_93;
      }
      LOBYTE(v58) = 4;
LABEL_92:
      *(_BYTE *)(a1 + v12[204]) |= v58;
      continue;
    }
  }
LABEL_93:
  if (v21)
    v3 = *(_BYTE *)(v3 + (int)*MEMORY[0x1E0D82BC8]) == 0;
  else
    v3 = 0;
  if ((v64 & 1) != 0)
  {
    v60 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_188B18C9C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B19310(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDBatchReverseGeocodingParametersCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _BYTE v10[128];
  uint64_t v11;

  v11 = *MEMORY[0x1E0C80C00];
  v6 = 0u;
  v7 = 0u;
  v8 = 0u;
  v9 = 0u;
  v1 = *(id *)(a1 + 48);
  v2 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
  if (v2)
  {
    v3 = v2;
    v4 = *(_QWORD *)v7;
    do
    {
      v5 = 0;
      do
      {
        if (*(_QWORD *)v7 != v4)
          objc_enumerationMutation(v1);
        objc_msgSend(*(id *)(*((_QWORD *)&v6 + 1) + 8 * v5++), "readAll:", 1, (_QWORD)v6);
      }
      while (v3 != v5);
      v3 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
    }
    while (v3);
  }

}

unint64_t GEOPDBatchReverseGeocodingParametersReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 60))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDBatchReverseGeocodingParametersReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 60) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDBatchReverseGeocodingParametersReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDBatchReverseGeocodingParametersReadAllFrom_initialTag;
  Specified = GEOPDBatchReverseGeocodingParametersReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDBatchReverseGeocodingParametersCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_188B19660(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B198BC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDBatchReverseGeocodingParametersIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  v2 = (*(_BYTE *)(a1 + 68) & 0xE) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return v2;
}

unint64_t GEOPDBatchReverseGeocodingParametersClearSensitiveFields(uint64_t a1, uint64_t a2, int a3)
{
  unint64_t result;
  unint64_t i;
  uint64_t v8;
  void *v9;
  _DWORD *v10;

  -[GEOPDBatchReverseGeocodingParameters _readAssetLocations](a1);
  result = objc_msgSend(*(id *)(a1 + 48), "count");
  if (result)
  {
    for (i = 0; i < result; ++i)
    {
      objc_msgSend(*(id *)(a1 + 48), "objectAtIndexedSubscript:", i);
      v8 = objc_claimAutoreleasedReturnValue();
      v9 = (void *)v8;
      if (a3 && GEOLocationHasSensitiveFields(v8))
      {
        v10 = (_DWORD *)objc_msgSend(v9, "copy");
        GEOLocationClearSensitiveFields(v10);
        objc_msgSend(*(id *)(a1 + 48), "replaceObjectAtIndex:withObject:", i, v10);

      }
      else
      {
        objc_msgSend(v9, "clearSensitiveFields:", a2);
      }

      result = objc_msgSend(*(id *)(a1 + 48), "count");
    }
  }
  return result;
}

void sub_188B19C4C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDBatchReverseGeocodingResultReadAllFrom(uint64_t a1, void *a2)
{
  unsigned __int8 *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  int v8;
  char v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  char v17;
  BOOL v18;
  id v19;
  void *v20;
  _BOOL8 v21;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    v7 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      v8 = v3[*v6];
      if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
        break;
      if (v3[*v6])
      {
        v8 = 1;
        break;
      }
      v9 = 0;
      v10 = 0;
      v11 = 0;
      while (1)
      {
        v12 = *v4;
        v13 = *(_QWORD *)&v3[v12];
        v14 = v13 + 1;
        if (v13 == -1 || v14 > *(_QWORD *)&v3[*v5])
          break;
        v15 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v13);
        *(_QWORD *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0)
          goto LABEL_13;
        v9 += 7;
        if (v10++ >= 9)
        {
          v17 = 0;
          v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      v8 = v3[*v6];
      if (v3[*v6])
        v17 = 0;
      else
        v17 = v11;
LABEL_16:
      if (v8)
        v18 = 1;
      else
        v18 = (v17 & 7) == 4;
      if (v18)
        break;
      if (!*(_QWORD *)(a1 + 8))
      {
        v19 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v20 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = v19;

      }
      if ((PBUnknownFieldAdd() & 1) == 0)
        goto LABEL_23;
    }
    v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_188B1A1B4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B1A3D0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDBatchSpatialLookupParametersReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BOOL4 v16;
  int v17;
  int *v18;
  _BOOL4 v19;
  int *v20;
  int v21;
  int *v22;
  int *v23;
  char v24;
  unsigned int v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  int v32;
  unint64_t v34;
  BOOL v35;
  int *v36;
  int v37;
  int v38;
  BOOL v39;
  GEOPDSpatialPlaceLookupParameters *v40;
  id v41;
  void *v42;
  int v43;
  int v44;
  void *v45;
  char v47;
  int v48;
  int v49;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1)
      + (*(_BYTE *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1);
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v7 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 != 0;
        v17 = v16 & ~(_DWORD)v11 | v9;
        v49 = v16 | v11;
        if ((((v16 | v11) | v7) & 1) != 0)
          v18 = 0;
        else
          v18 = a3;
        v19 = v8 != 0;
        v20 = (int *)MEMORY[0x1E0D82BF0];
        v21 = 1;
        v22 = (int *)MEMORY[0x1E0D82BC8];
        if (*(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(v3 + *v6))
          goto LABEL_62;
        v47 = v17;
        v48 = v19 | v49 | v17;
        v23 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v8;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_BYTE *)(v3 + *v22))
      goto LABEL_60;
    v24 = 0;
    v25 = 0;
    v26 = 0;
    while (1)
    {
      v27 = *v20;
      v28 = *(_QWORD *)(v3 + v27);
      v29 = v28 + 1;
      if (v28 == -1 || v29 > *(_QWORD *)(v3 + *v6))
        break;
      v30 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v28);
      *(_QWORD *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0)
        goto LABEL_25;
      v24 += 7;
      if (v25++ >= 9)
      {
        v26 = 0;
        v32 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v22) = 1;
LABEL_25:
    v32 = *(unsigned __int8 *)(v3 + *v22);
    if (*(_BYTE *)(v3 + *v22))
      v26 = 0;
LABEL_27:
    if (v32 || (v26 & 7) == 4)
    {
LABEL_60:
      v21 = 1;
      goto LABEL_61;
    }
    v34 = v26 >> 3;
    v35 = v49;
    if (!((v18 == 0) | v49 & 1))
    {
      v36 = v18;
      do
      {
        v38 = *v36++;
        v37 = v38;
        v35 = v38 != 0;
        if (v38)
          v39 = v37 == (_DWORD)v34;
        else
          v39 = 1;
      }
      while (!v39);
    }
    if ((_DWORD)v34 == 2)
      break;
    if ((_DWORD)v34 == 1)
    {
      if (!v35 || (*(_BYTE *)(a1 + 52) & 4) != 0)
        goto LABEL_58;
      if ((PBReaderPlaceMark() & 1) == 0)
        goto LABEL_80;
      v40 = objc_alloc_init(GEOPDSpatialPlaceLookupParameters);
      if (!GEOPDSpatialPlaceLookupParametersReadAllFrom((uint64_t)v40, (void *)v3, v10 & 1))
        goto LABEL_79;
      PBReaderRecallMark();
      -[GEOPDBatchSpatialLookupParameters _addNoFlagsSpatialPlaceLookup:](a1, v40);
      goto LABEL_50;
    }
    if ((v47 & 1) == 0 || (*(_BYTE *)(a1 + 52) & 1) != 0)
      goto LABEL_58;
    if (!*(_QWORD *)(a1 + 16))
    {
      v41 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
      v42 = *(void **)(a1 + 16);
      *(_QWORD *)(a1 + 16) = v41;

    }
    v21 = PBUnknownFieldAdd();
    v22 = (int *)MEMORY[0x1E0D82BC8];
    if (!v21)
      goto LABEL_63;
LABEL_56:
    if ((v48 & 1) == 0)
      goto LABEL_60;
LABEL_59:
    if (*(_QWORD *)(v3 + *v20) >= *(_QWORD *)(v3 + *v6))
      goto LABEL_60;
  }
  if (!v35 || (*(_BYTE *)(a1 + 52) & 2) != 0)
  {
LABEL_58:
    v21 = PBReaderSkipValueWithTag();
    v22 = (int *)MEMORY[0x1E0D82BC8];
    if ((v21 & v48 & 1) == 0)
      goto LABEL_61;
    goto LABEL_59;
  }
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_80;
  v40 = objc_alloc_init(GEOPDSpatialEventLookupParameters);
  if (GEOPDSpatialEventLookupParametersReadAllFrom((uint64_t)v40, (void *)v3, v10 & 1))
  {
    PBReaderRecallMark();
    -[GEOPDBatchSpatialLookupParameters _addNoFlagsSpatialEventLookup:](a1, v40);
LABEL_50:

    v22 = (int *)MEMORY[0x1E0D82BC8];
    goto LABEL_56;
  }
LABEL_79:

LABEL_80:
  v21 = 0;
  v22 = (int *)MEMORY[0x1E0D82BC8];
LABEL_61:
  LOBYTE(v17) = v47;
LABEL_62:
  if ((v17 & 1) != 0)
LABEL_63:
    *(_BYTE *)(a1 + 52) |= 1u;
  if (v49 & 1 | ((v21 & 1) == 0))
  {
    *(_BYTE *)(a1 + 52) |= 4u;
    *(_BYTE *)(a1 + 52) |= 2u;
    goto LABEL_73;
  }
  if (v18)
  {
    while (1)
    {
      v44 = *v18++;
      v43 = v44;
      if (v44 == 1)
        break;
      if (v43 == 2)
      {
LABEL_69:
        *(_BYTE *)(a1 + 52) |= v43;
      }
      else if (!v43)
      {
        goto LABEL_73;
      }
    }
    LOBYTE(v43) = 4;
    goto LABEL_69;
  }
LABEL_73:
  if (v21)
    v3 = *(_BYTE *)(v3 + *v22) == 0;
  else
    v3 = 0;
  if ((v49 & 1) != 0)
  {
    v45 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_188B1AB00(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B1B1A0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDBatchSpatialLookupParametersCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  _BYTE v20[128];
  _BYTE v21[128];
  uint64_t v22;

  v22 = *MEMORY[0x1E0C80C00];
  v16 = 0u;
  v17 = 0u;
  v18 = 0u;
  v19 = 0u;
  v2 = *(id *)(a1 + 32);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v16, v21, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v17;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v17 != v5)
          objc_enumerationMutation(v2);
        -[GEOPDSpatialPlaceLookupParameters readAll:](*(_QWORD *)(*((_QWORD *)&v16 + 1) + 8 * v6++), 1);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v16, v21, 16);
    }
    while (v4);
  }

  v14 = 0u;
  v15 = 0u;
  v12 = 0u;
  v13 = 0u;
  v7 = *(id *)(a1 + 24);
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v12, v20, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v13;
    do
    {
      v11 = 0;
      do
      {
        if (*(_QWORD *)v13 != v10)
          objc_enumerationMutation(v7);
        -[GEOPDSpatialEventLookupParameters readAll:](*(_QWORD *)(*((_QWORD *)&v12 + 1) + 8 * v11++), 1);
      }
      while (v9 != v11);
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v12, v20, 16);
    }
    while (v9);
  }

}

unint64_t GEOPDBatchSpatialLookupParametersReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDBatchSpatialLookupParametersReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDBatchSpatialLookupParametersReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDBatchSpatialLookupParametersReadAllFrom_initialTag;
  Specified = GEOPDBatchSpatialLookupParametersReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDBatchSpatialLookupParametersCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_188B1B58C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B1B838(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDBatchSpatialLookupParametersIsDirty(uint64_t a1)
{
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t i;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _BYTE v11[128];
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  if ((*(_BYTE *)(a1 + 52) & 0xE) != 0)
    return 1;
  if ((*(_BYTE *)(a1 + 52) & 2) == 0)
    return 0;
  v9 = 0u;
  v10 = 0u;
  v7 = 0u;
  v8 = 0u;
  v3 = *(id *)(a1 + 24);
  v2 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
  if (v2)
  {
    v4 = *(_QWORD *)v8;
    while (2)
    {
      for (i = 0; i != v2; ++i)
      {
        if (*(_QWORD *)v8 != v4)
          objc_enumerationMutation(v3);
        if (GEOPDSpatialEventLookupParametersIsDirty(*(_QWORD *)(*((_QWORD *)&v7 + 1) + 8 * i)))
        {
          v2 = 1;
          goto LABEL_15;
        }
      }
      v2 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
      if (v2)
        continue;
      break;
    }
  }
LABEL_15:

  return v2;
}

os_unfair_lock_s *GEOPDBatchSpatialLookupParametersIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOPDBatchSpatialLookupParametersIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 12);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_188B1BE8C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B1C1D4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDBatchSpatialLookupResultReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BOOL4 v17;
  int v18;
  int v19;
  int *v20;
  int *v21;
  _BOOL4 v22;
  int v23;
  int *v24;
  int *v25;
  char v26;
  unsigned int v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  BOOL v33;
  int v34;
  unint64_t v36;
  BOOL v37;
  int *v38;
  int v39;
  int v40;
  BOOL v41;
  char v42;
  unsigned int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  char v48;
  GEOPDSpatialEventLookupResult *v49;
  id v50;
  void *v51;
  int v52;
  int v53;
  char v54;
  void *v55;
  char v57;
  char v58;
  int v59;
  char v60;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
  v13 = ((*(unsigned __int8 *)(a1 + 56) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 2) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 1) & 1);
  while (2)
  {
    v14 = 1;
    v15 = 1;
    v16 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v13;
        goto LABEL_8;
      case -3:
        v7 = 1;
        goto LABEL_7;
      case -2:
        v15 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v17 = v13 != 0;
        v18 = v17 & ~(_DWORD)v11 | v9;
        v19 = v17 | v11;
        if ((((v17 | v11) | v7) & 1) != 0)
          v20 = 0;
        else
          v20 = a3;
        v21 = (int *)MEMORY[0x1E0D82BF0];
        v22 = v8 != 0;
        v23 = 1;
        if (*(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(v3 + *v6))
          goto LABEL_77;
        v57 = v18;
        v59 = v22 | v19 | v18;
        v60 = (v20 == 0) | v19;
        v24 = (int *)MEMORY[0x1E0D82BC8];
        v25 = (int *)MEMORY[0x1E0D82BB8];
        v58 = v17 | v11;
        break;
      default:
        ++v13;
LABEL_7:
        v14 = v9;
LABEL_8:
        v15 = v10;
        v16 = v11;
LABEL_10:
        ++v8;
        v9 = v14;
        v10 = v15;
        v11 = v16;
        continue;
    }
    break;
  }
  do
  {
    if (*(_BYTE *)(v3 + *v24))
      break;
    v26 = 0;
    v27 = 0;
    v28 = 0;
    while (1)
    {
      v29 = *v21;
      v30 = *(_QWORD *)(v3 + v29);
      v31 = v30 + 1;
      if (v30 == -1 || v31 > *(_QWORD *)(v3 + *v6))
        break;
      v32 = *(_BYTE *)(*(_QWORD *)(v3 + *v25) + v30);
      *(_QWORD *)(v3 + v29) = v31;
      v28 |= (unint64_t)(v32 & 0x7F) << v26;
      if ((v32 & 0x80) == 0)
        goto LABEL_25;
      v26 += 7;
      v33 = v27++ >= 9;
      if (v33)
      {
        v28 = 0;
        v34 = *(unsigned __int8 *)(v3 + *v24);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v24) = 1;
LABEL_25:
    v34 = *(unsigned __int8 *)(v3 + *v24);
    if (*(_BYTE *)(v3 + *v24))
      v28 = 0;
LABEL_27:
    if (v34 || (v28 & 7) == 4)
      break;
    v36 = v28 >> 3;
    v37 = v19;
    if ((v60 & 1) == 0)
    {
      v38 = v20;
      do
      {
        v40 = *v38++;
        v39 = v40;
        v37 = v40 != 0;
        if (v40)
          v41 = v39 == (_DWORD)v36;
        else
          v41 = 1;
      }
      while (!v41);
    }
    switch((_DWORD)v36)
    {
      case 3:
        if (v37 && (*(_BYTE *)(a1 + 56) & 4) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_96;
          v49 = objc_alloc_init(GEOPDSpatialEventLookupResult);
          if (!GEOPDSpatialEventLookupResultReadAllFrom((uint64_t)v49, (void *)v3, v10 & 1))
            goto LABEL_95;
          PBReaderRecallMark();
          -[GEOPDBatchSpatialLookupResult _addNoFlagsSpatialEventLookupResult:](a1, v49);
          goto LABEL_59;
        }
        break;
      case 2:
        if (v37 && (*(_BYTE *)(a1 + 56) & 8) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_96;
          v49 = objc_alloc_init(GEOPDSpatialPlaceLookupResult);
          if (!GEOPDSpatialPlaceLookupResultReadAllFrom((uint64_t)v49, (void *)v3, v10 & 1))
          {
LABEL_95:

LABEL_96:
            v23 = 0;
            v12 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
            LOBYTE(v19) = v58;
            goto LABEL_76;
          }
          PBReaderRecallMark();
          -[GEOPDBatchSpatialLookupResult _addNoFlagsSpatialPlaceLookupResult:](a1, v49);
LABEL_59:

          LOBYTE(v19) = v58;
          v24 = (int *)MEMORY[0x1E0D82BC8];
LABEL_72:
          if ((v59 & 1) == 0)
            goto LABEL_74;
          continue;
        }
        break;
      case 1:
        if ((v7 & 1) != 0)
        {
          v42 = 0;
          v43 = 0;
          v44 = 0;
          *(_BYTE *)(a1 + 56) |= 1u;
          while (1)
          {
            v45 = *v21;
            v46 = *(_QWORD *)(v3 + v45);
            v47 = v46 + 1;
            if (v46 == -1 || v47 > *(_QWORD *)(v3 + *v6))
              break;
            v48 = *(_BYTE *)(*(_QWORD *)(v3 + *v25) + v46);
            *(_QWORD *)(v3 + v45) = v47;
            v44 |= (unint64_t)(v48 & 0x7F) << v42;
            if ((v48 & 0x80) == 0)
              goto LABEL_69;
            v42 += 7;
            v33 = v43++ >= 9;
            if (v33)
            {
              LODWORD(v44) = 0;
              goto LABEL_71;
            }
          }
          *(_BYTE *)(v3 + *v24) = 1;
LABEL_69:
          if (*(_BYTE *)(v3 + *v24))
            LODWORD(v44) = 0;
LABEL_71:
          *(_DWORD *)(a1 + 52) = v44;
          goto LABEL_72;
        }
        break;
      default:
        if ((v57 & 1) != 0 && (*(_BYTE *)(a1 + 56) & 2) == 0)
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v50 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v51 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v50;

          }
          v23 = PBUnknownFieldAdd();
          LOBYTE(v19) = v58;
          v24 = (int *)MEMORY[0x1E0D82BC8];
          if (!v23)
          {
            v12 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
            goto LABEL_78;
          }
          goto LABEL_72;
        }
        break;
    }
    v23 = PBReaderSkipValueWithTag();
    v24 = (int *)MEMORY[0x1E0D82BC8];
    LOBYTE(v19) = v58;
    if ((v23 & v59 & 1) == 0)
      goto LABEL_75;
  }
  while (*(_QWORD *)(v3 + *v21) < *(_QWORD *)(v3 + *v6));
LABEL_74:
  v23 = 1;
LABEL_75:
  v12 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
LABEL_76:
  LOBYTE(v18) = v57;
LABEL_77:
  if ((v18 & 1) != 0)
LABEL_78:
    *(_BYTE *)(a1 + v12[212]) |= 2u;
  if (v19 & 1 | ((v23 & 1) == 0))
  {
    *(_BYTE *)(a1 + v12[212]) |= 8u;
    *(_BYTE *)(a1 + v12[212]) |= 4u;
    goto LABEL_89;
  }
  if (v20)
  {
    while (2)
    {
      while (1)
      {
        v53 = *v20++;
        v52 = v53;
        if (v53 == 2)
          break;
        if (v52 == 3)
        {
          v54 = 4;
          goto LABEL_88;
        }
        if (!v52)
          goto LABEL_89;
      }
      v54 = 8;
LABEL_88:
      *(_BYTE *)(a1 + v12[212]) |= v54;
      continue;
    }
  }
LABEL_89:
  if (v23)
  {
    v3 = *(_BYTE *)(v3 + (int)*MEMORY[0x1E0D82BC8]) == 0;
    if ((v19 & 1) == 0)
      return v3;
LABEL_93:
    v55 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  else
  {
    v3 = 0;
    if ((v19 & 1) != 0)
      goto LABEL_93;
  }
  return v3;
}

void sub_188B1C9A4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B1D104(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDBatchSpatialLookupResultCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  _BYTE v20[128];
  _BYTE v21[128];
  uint64_t v22;

  v22 = *MEMORY[0x1E0C80C00];
  v16 = 0u;
  v17 = 0u;
  v18 = 0u;
  v19 = 0u;
  v2 = *(id *)(a1 + 32);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v16, v21, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v17;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v17 != v5)
          objc_enumerationMutation(v2);
        -[GEOPDSpatialPlaceLookupResult readAll:](*(_QWORD *)(*((_QWORD *)&v16 + 1) + 8 * v6++), 1);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v16, v21, 16);
    }
    while (v4);
  }

  v14 = 0u;
  v15 = 0u;
  v12 = 0u;
  v13 = 0u;
  v7 = *(id *)(a1 + 24);
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v12, v20, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v13;
    do
    {
      v11 = 0;
      do
      {
        if (*(_QWORD *)v13 != v10)
          objc_enumerationMutation(v7);
        -[GEOPDSpatialEventLookupResult readAll:](*(_QWORD *)(*((_QWORD *)&v12 + 1) + 8 * v11++), 1);
      }
      while (v9 != v11);
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v12, v20, 16);
    }
    while (v9);
  }

}

unint64_t GEOPDBatchSpatialLookupResultReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDBatchSpatialLookupResultReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDBatchSpatialLookupResultReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDBatchSpatialLookupResultReadAllFrom_initialTag;
  Specified = GEOPDBatchSpatialLookupResultReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDBatchSpatialLookupResultCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_188B1D4F0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B1D7C4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDBatchSpatialLookupResultIsDirty(uint64_t a1)
{
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t i;
  uint64_t v6;
  int v7;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  _BYTE v13[128];
  uint64_t v14;

  v14 = *MEMORY[0x1E0C80C00];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  if ((*(_BYTE *)(a1 + 56) & 0x1C) != 0)
    return 1;
  if ((*(_BYTE *)(a1 + 56) & 4) == 0)
    return 0;
  v11 = 0u;
  v12 = 0u;
  v9 = 0u;
  v10 = 0u;
  v3 = *(id *)(a1 + 24);
  v2 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v9, v13, 16);
  if (v2)
  {
    v4 = *(_QWORD *)v10;
    while (2)
    {
      for (i = 0; i != v2; ++i)
      {
        if (*(_QWORD *)v10 != v4)
          objc_enumerationMutation(v3);
        v6 = *(_QWORD *)(*((_QWORD *)&v9 + 1) + 8 * i);
        if (v6)
        {
          os_unfair_lock_lock_with_options();
          os_unfair_lock_assert_owner((const os_unfair_lock *)(v6 + 48));
          v7 = *(_BYTE *)(v6 + 56) & 0x1C;
          os_unfair_lock_unlock((os_unfair_lock_t)(v6 + 48));
          if (v7)
          {
            v2 = 1;
            goto LABEL_16;
          }
        }
      }
      v2 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v9, v13, 16);
      if (v2)
        continue;
      break;
    }
  }
LABEL_16:

  return v2;
}

os_unfair_lock_s *GEOPDBatchSpatialLookupResultIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOPDBatchSpatialLookupResultIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 12);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_188B1DCB0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDBrandLookupParametersReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  uint64_t v18;
  void *v19;
  id v20;
  void *v21;
  _BOOL8 v22;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 1)
        {
          PBReaderReadString();
          v18 = objc_claimAutoreleasedReturnValue();
          v19 = *(void **)(a1 + 16);
          *(_QWORD *)(a1 + 16) = v18;

        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v20 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v21 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v20;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_26;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v22 = v3[*v6] == 0;
  }
  else
  {
LABEL_26:
    v22 = 0;
  }
  objc_sync_exit(v3);

  return v22;
}

void sub_188B1E36C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDBrandLookupResultReadAllFrom(uint64_t a1, void *a2)
{
  unsigned __int8 *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  int v8;
  char v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  char v17;
  BOOL v18;
  id v19;
  void *v20;
  _BOOL8 v21;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    v7 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      v8 = v3[*v6];
      if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
        break;
      if (v3[*v6])
      {
        v8 = 1;
        break;
      }
      v9 = 0;
      v10 = 0;
      v11 = 0;
      while (1)
      {
        v12 = *v4;
        v13 = *(_QWORD *)&v3[v12];
        v14 = v13 + 1;
        if (v13 == -1 || v14 > *(_QWORD *)&v3[*v5])
          break;
        v15 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v13);
        *(_QWORD *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0)
          goto LABEL_13;
        v9 += 7;
        if (v10++ >= 9)
        {
          v17 = 0;
          v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      v8 = v3[*v6];
      if (v3[*v6])
        v17 = 0;
      else
        v17 = v11;
LABEL_16:
      if (v8)
        v18 = 1;
      else
        v18 = (v17 & 7) == 4;
      if (v18)
        break;
      if (!*(_QWORD *)(a1 + 8))
      {
        v19 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v20 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = v19;

      }
      if ((PBUnknownFieldAdd() & 1) == 0)
        goto LABEL_23;
    }
    v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_188B1E934(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDBusinessConnectAttributesReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  char v15;
  unsigned __int8 v16;
  char v17;
  int *v18;
  int *v19;
  int *v20;
  int *v21;
  char v22;
  unsigned int v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  int v30;
  unint64_t v32;
  BOOL v33;
  int *v34;
  int v35;
  int v36;
  BOOL v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  id v41;
  void *v42;
  int v43;
  char v44;
  char v45;
  char v46;
  int v47;
  int v48;
  void *v49;
  int v51;
  char v52;
  char v53;
  char v54;
  BOOL v55;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1)
      + (*(_BYTE *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v11;
        v12 = v7;
        goto LABEL_8;
      case -3:
        v9 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v11 != 0;
        v15 = v14 & ~(_BYTE)v7;
        v16 = v14 | v7;
        v52 = v15 | v8;
        v17 = v16 | v15 | v8;
        if (((v16 | v9) & 1) != 0)
          v18 = 0;
        else
          v18 = a3;
        v55 = v16;
        v53 = v17;
        v54 = (v18 == 0) | v16;
        v19 = (int *)MEMORY[0x1E0D82BF0];
        v20 = (int *)MEMORY[0x1E0D82BC8];
        v21 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_7:
        v12 = v7;
        v13 = v8;
LABEL_8:
        ++v10;
        v7 = v12;
        v8 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v19) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v20))
      goto LABEL_59;
    v22 = 0;
    v23 = 0;
    v24 = 0;
    while (1)
    {
      v25 = *v19;
      v26 = *(_QWORD *)(v3 + v25);
      v27 = v26 + 1;
      if (v26 == -1 || v27 > *(_QWORD *)(v3 + *v6))
        break;
      v28 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v26);
      *(_QWORD *)(v3 + v25) = v27;
      v24 |= (unint64_t)(v28 & 0x7F) << v22;
      if ((v28 & 0x80) == 0)
        goto LABEL_23;
      v22 += 7;
      if (v23++ >= 9)
      {
        v24 = 0;
        v30 = *(unsigned __int8 *)(v3 + *v20);
        goto LABEL_25;
      }
    }
    *(_BYTE *)(v3 + *v20) = 1;
LABEL_23:
    v30 = *(unsigned __int8 *)(v3 + *v20);
    if (*(_BYTE *)(v3 + *v20))
      v24 = 0;
LABEL_25:
    if (v30 || (v24 & 7) == 4)
    {
LABEL_59:
      v51 = 1;
      goto LABEL_60;
    }
    v32 = v24 >> 3;
    v33 = v55;
    if ((v54 & 1) == 0)
    {
      v34 = v18;
      do
      {
        v36 = *v34++;
        v35 = v36;
        v33 = v36 != 0;
        if (v36)
          v37 = v35 == (_DWORD)v32;
        else
          v37 = 1;
      }
      while (!v37);
    }
    if ((_DWORD)v32 == 2)
      break;
    if ((_DWORD)v32 == 1)
    {
      if (!v33)
        goto LABEL_51;
      if ((*(_BYTE *)(a1 + 52) & 2) != 0)
      {
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_78;
        v45 = *(_BYTE *)(a1 + 52) << 6;
        goto LABEL_57;
      }
      PBReaderReadString();
      v38 = objc_claimAutoreleasedReturnValue();
      v39 = 24;
      goto LABEL_44;
    }
    if ((v52 & 1) == 0 || (*(_BYTE *)(a1 + 52) & 1) != 0)
    {
LABEL_51:
      v44 = PBReaderSkipValueWithTag();
      v20 = (int *)MEMORY[0x1E0D82BC8];
      if ((v44 & 1) == 0)
      {
        v51 = 0;
        goto LABEL_60;
      }
      goto LABEL_58;
    }
    if (!*(_QWORD *)(a1 + 16))
    {
      v41 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
      v42 = *(void **)(a1 + 16);
      *(_QWORD *)(a1 + 16) = v41;

    }
    v43 = PBUnknownFieldAdd();
    v20 = (int *)MEMORY[0x1E0D82BC8];
    if (!v43)
    {
      v51 = 0;
      goto LABEL_61;
    }
LABEL_58:
    if (!(v53 & 1 | (v10 != 0)))
      goto LABEL_59;
  }
  if (!v33)
    goto LABEL_51;
  if ((*(_BYTE *)(a1 + 52) & 4) == 0)
  {
    PBReaderReadString();
    v38 = objc_claimAutoreleasedReturnValue();
    v39 = 32;
LABEL_44:
    v40 = *(void **)(a1 + v39);
    *(_QWORD *)(a1 + v39) = v38;

    v20 = (int *)MEMORY[0x1E0D82BC8];
    --v10;
    goto LABEL_58;
  }
  if ((PBReaderSkipValueWithTag() & 1) != 0)
  {
    v45 = 32 * *(_BYTE *)(a1 + 52);
LABEL_57:
    v10 += v45 >> 7;
    v20 = (int *)MEMORY[0x1E0D82BC8];
    goto LABEL_58;
  }
LABEL_78:
  v51 = 0;
  v20 = (int *)MEMORY[0x1E0D82BC8];
LABEL_60:
  if ((v52 & 1) == 0)
    goto LABEL_62;
LABEL_61:
  *(_BYTE *)(a1 + 52) |= 1u;
LABEL_62:
  if (v55 || (v51 & 1) == 0)
  {
    *(_BYTE *)(a1 + 52) |= 2u;
    *(_BYTE *)(a1 + 52) |= 4u;
    goto LABEL_72;
  }
  if (v18)
  {
    while (1)
    {
      v48 = *v18++;
      v47 = v48;
      if (v48 == 1)
        break;
      if (v47 == 2)
      {
        v46 = 4;
LABEL_68:
        *(_BYTE *)(a1 + 52) |= v46;
      }
      else if (!v47)
      {
        goto LABEL_72;
      }
    }
    v46 = 2;
    goto LABEL_68;
  }
LABEL_72:
  if (v51)
    v3 = *(_BYTE *)(v3 + *v20) == 0;
  else
    v3 = 0;
  if (v55)
  {
    v49 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_188B1F284(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B1F350(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDBusinessConnectAttributesReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDBusinessConnectAttributesReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDBusinessConnectAttributesReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDBusinessConnectAttributesReadAllFrom_initialTag;
  Specified = GEOPDBusinessConnectAttributesReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_188B1F5A4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B1F730(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B1F89C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDCanonicalLocationSearchParametersReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  uint64_t v18;
  void *v19;
  id v20;
  void *v21;
  _BOOL8 v22;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 1)
        {
          PBReaderReadString();
          v18 = objc_claimAutoreleasedReturnValue();
          v19 = *(void **)(a1 + 16);
          *(_QWORD *)(a1 + 16) = v18;

        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v20 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v21 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v20;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_26;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v22 = v3[*v6] == 0;
  }
  else
  {
LABEL_26:
    v22 = 0;
  }
  objc_sync_exit(v3);

  return v22;
}

void sub_188B1FEE8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDCanonicalLocationSearchResultReadAllFrom(uint64_t a1, void *a2)
{
  unsigned __int8 *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  int v8;
  char v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  char v17;
  BOOL v18;
  id v19;
  void *v20;
  _BOOL8 v21;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    v7 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      v8 = v3[*v6];
      if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
        break;
      if (v3[*v6])
      {
        v8 = 1;
        break;
      }
      v9 = 0;
      v10 = 0;
      v11 = 0;
      while (1)
      {
        v12 = *v4;
        v13 = *(_QWORD *)&v3[v12];
        v14 = v13 + 1;
        if (v13 == -1 || v14 > *(_QWORD *)&v3[*v5])
          break;
        v15 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v13);
        *(_QWORD *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0)
          goto LABEL_13;
        v9 += 7;
        if (v10++ >= 9)
        {
          v17 = 0;
          v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      v8 = v3[*v6];
      if (v3[*v6])
        v17 = 0;
      else
        v17 = v11;
LABEL_16:
      if (v8)
        v18 = 1;
      else
        v18 = (v17 & 7) == 4;
      if (v18)
        break;
      if (!*(_QWORD *)(a1 + 8))
      {
        v19 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v20 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = v19;

      }
      if ((PBUnknownFieldAdd() & 1) == 0)
        goto LABEL_23;
    }
    v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_188B204B0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDCartoIconZoomReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  uint64_t v18;
  unint64_t v19;
  int v20;
  char v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  id v28;
  void *v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  _BOOL8 v39;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      while (!v3[*v6])
      {
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        switch((v10 >> 3))
        {
          case 1u:
            *(_BYTE *)(a1 + 40) |= 4u;
            v18 = *v4;
            v19 = *(_QWORD *)&v3[v18];
            if (v19 <= 0xFFFFFFFFFFFFFFFBLL && v19 + 4 <= *(_QWORD *)&v3[*v5])
            {
              v20 = *(_DWORD *)(*(_QWORD *)&v3[*v7] + v19);
              *(_QWORD *)&v3[v18] = v19 + 4;
            }
            else
            {
              v3[*v6] = 1;
              v20 = 0;
            }
            v38 = 24;
            goto LABEL_61;
          case 2u:
            *(_BYTE *)(a1 + 40) |= 2u;
            v30 = *v4;
            v31 = *(_QWORD *)&v3[v30];
            if (v31 <= 0xFFFFFFFFFFFFFFFBLL && v31 + 4 <= *(_QWORD *)&v3[*v5])
            {
              v20 = *(_DWORD *)(*(_QWORD *)&v3[*v7] + v31);
              *(_QWORD *)&v3[v30] = v31 + 4;
            }
            else
            {
              v3[*v6] = 1;
              v20 = 0;
            }
            v38 = 20;
            goto LABEL_61;
          case 3u:
          case 4u:
          case 5u:
          case 6u:
          case 7u:
          case 8u:
          case 9u:
            goto LABEL_31;
          case 0xAu:
            *(_BYTE *)(a1 + 40) |= 0x20u;
            v32 = *v4;
            v33 = *(_QWORD *)&v3[v32];
            if (v33 <= 0xFFFFFFFFFFFFFFFBLL && v33 + 4 <= *(_QWORD *)&v3[*v5])
            {
              v20 = *(_DWORD *)(*(_QWORD *)&v3[*v7] + v33);
              *(_QWORD *)&v3[v32] = v33 + 4;
            }
            else
            {
              v3[*v6] = 1;
              v20 = 0;
            }
            v38 = 36;
            goto LABEL_61;
          case 0xBu:
            *(_BYTE *)(a1 + 40) |= 8u;
            v34 = *v4;
            v35 = *(_QWORD *)&v3[v34];
            if (v35 <= 0xFFFFFFFFFFFFFFFBLL && v35 + 4 <= *(_QWORD *)&v3[*v5])
            {
              v20 = *(_DWORD *)(*(_QWORD *)&v3[*v7] + v35);
              *(_QWORD *)&v3[v34] = v35 + 4;
            }
            else
            {
              v3[*v6] = 1;
              v20 = 0;
            }
            v38 = 28;
            goto LABEL_61;
          case 0xCu:
            *(_BYTE *)(a1 + 40) |= 0x10u;
            v36 = *v4;
            v37 = *(_QWORD *)&v3[v36];
            if (v37 <= 0xFFFFFFFFFFFFFFFBLL && v37 + 4 <= *(_QWORD *)&v3[*v5])
            {
              v20 = *(_DWORD *)(*(_QWORD *)&v3[*v7] + v37);
              *(_QWORD *)&v3[v36] = v37 + 4;
            }
            else
            {
              v3[*v6] = 1;
              v20 = 0;
            }
            v38 = 32;
LABEL_61:
            *(_DWORD *)(a1 + v38) = v20;
            goto LABEL_62;
          default:
            if ((v10 >> 3) == 99)
            {
              v21 = 0;
              v22 = 0;
              v23 = 0;
              *(_BYTE *)(a1 + 40) |= 1u;
              while (1)
              {
                v24 = *v4;
                v25 = *(_QWORD *)&v3[v24];
                v26 = v25 + 1;
                if (v25 == -1 || v26 > *(_QWORD *)&v3[*v5])
                  break;
                v27 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v25);
                *(_QWORD *)&v3[v24] = v26;
                v23 |= (unint64_t)(v27 & 0x7F) << v21;
                if ((v27 & 0x80) == 0)
                  goto LABEL_48;
                v21 += 7;
                v15 = v22++ >= 9;
                if (v15)
                {
                  LODWORD(v23) = 0;
                  goto LABEL_50;
                }
              }
              v3[*v6] = 1;
LABEL_48:
              if (v3[*v6])
                LODWORD(v23) = 0;
LABEL_50:
              *(_DWORD *)(a1 + 16) = v23;
            }
            else
            {
LABEL_31:
              if (!*(_QWORD *)(a1 + 8))
              {
                v28 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
                v29 = *(void **)(a1 + 8);
                *(_QWORD *)(a1 + 8) = v28;

              }
              if (!PBUnknownFieldAdd())
                goto LABEL_64;
            }
LABEL_62:
            if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
              goto LABEL_63;
            break;
        }
      }
    }
LABEL_63:
    v39 = v3[*v6] == 0;
  }
  else
  {
LABEL_64:
    v39 = 0;
  }
  objc_sync_exit(v3);

  return v39;
}

void sub_188B21278(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDCartoIconZoomIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v14;
  int v15;
  int v16;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  int v25;
  _BOOL8 v27;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (!a1[*v4])
    {
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = *v4;
          v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = *v4;
      v15 = a1[v14];
      if (a1[v14])
        v8 = 0;
LABEL_14:
      v16 = v8 & 7;
      if (v15 || v16 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
        case 2u:
        case 0xAu:
        case 0xBu:
        case 0xCu:
          if (v16 != 5)
            goto LABEL_39;
          v18 = *v2;
          v19 = *(_QWORD *)&a1[v18];
          if (v19 > 0xFFFFFFFFFFFFFFFBLL)
            goto LABEL_35;
          v20 = v19 + 4;
          if (v20 > *(_QWORD *)&a1[*v3])
            goto LABEL_35;
          *(_QWORD *)&a1[v18] = v20;
          goto LABEL_36;
        case 3u:
        case 4u:
        case 5u:
        case 6u:
        case 7u:
        case 8u:
        case 9u:
          goto LABEL_32;
        default:
          if ((v8 >> 3) == 99)
          {
            if ((v8 & 7) != 0)
              goto LABEL_39;
            v21 = 0;
            while (1)
            {
              v22 = *v2;
              v23 = *(_QWORD *)&a1[v22];
              v24 = v23 + 1;
              if (v23 == -1 || v24 > *(_QWORD *)&a1[*v3])
                break;
              v25 = *(char *)(*(_QWORD *)&a1[*v5] + v23);
              *(_QWORD *)&a1[v22] = v24;
              if (v25 < 0 && v21++ <= 8)
                continue;
              goto LABEL_36;
            }
            v14 = *v4;
LABEL_35:
            a1[v14] = 1;
          }
          else
          {
LABEL_32:
            if (!PBReaderSkipValueWithTag())
            {
LABEL_39:
              v27 = 0;
              goto LABEL_38;
            }
          }
LABEL_36:
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_37;
          break;
      }
    }
  }
LABEL_37:
  v27 = a1[*v4] == 0;
LABEL_38:
  PBReaderRecallMark();
  return v27;
}

unint64_t GEOPDCategoryLookupResultReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  char v17;
  unsigned __int8 v18;
  char v19;
  int *v20;
  int *v21;
  int *v22;
  int *v23;
  char v24;
  unsigned int v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  int v32;
  unint64_t v34;
  BOOL v35;
  int *v36;
  int v37;
  int v38;
  BOOL v39;
  GEOPDCategoryLookupParameters *v40;
  uint64_t v41;
  void *v42;
  id v43;
  void *v44;
  int v45;
  char v46;
  char v47;
  int v48;
  int v49;
  void *v50;
  int v52;
  int *v53;
  char v54;
  char v55;
  char v56;
  BOOL v57;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1)
      + (*(_BYTE *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1);
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v7 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 != 0;
        v17 = v16 & ~(_BYTE)v11 | v9;
        v18 = v16 | v11;
        v54 = v17;
        v19 = v18 | v17;
        if (((v18 | v7) & 1) != 0)
          v20 = 0;
        else
          v20 = a3;
        v57 = v18;
        v55 = v19;
        v56 = (v20 == 0) | v18;
        v21 = (int *)MEMORY[0x1E0D82BF0];
        v22 = (int *)MEMORY[0x1E0D82BC8];
        v23 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v8;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v21) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v22))
      goto LABEL_66;
    v24 = 0;
    v25 = 0;
    v26 = 0;
    while (1)
    {
      v27 = *v21;
      v28 = *(_QWORD *)(v3 + v27);
      v29 = v28 + 1;
      if (v28 == -1 || v29 > *(_QWORD *)(v3 + *v6))
        break;
      v30 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v28);
      *(_QWORD *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0)
        goto LABEL_25;
      v24 += 7;
      if (v25++ >= 9)
      {
        v26 = 0;
        v32 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v22) = 1;
LABEL_25:
    v32 = *(unsigned __int8 *)(v3 + *v22);
    if (*(_BYTE *)(v3 + *v22))
      v26 = 0;
LABEL_27:
    if (v32 || (v26 & 7) == 4)
    {
LABEL_66:
      v52 = 1;
      goto LABEL_67;
    }
    v34 = v26 >> 3;
    v35 = v57;
    if ((v56 & 1) == 0)
    {
      v36 = v20;
      do
      {
        v38 = *v36++;
        v37 = v38;
        v35 = v38 != 0;
        if (v38)
          v39 = v37 == (_DWORD)v34;
        else
          v39 = 1;
      }
      while (!v39);
    }
    if ((_DWORD)v34 == 2)
      break;
    if ((_DWORD)v34 == 1)
    {
      if (!v35)
        goto LABEL_57;
      if ((*(_BYTE *)(a1 + 52) & 4) == 0)
      {
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_85;
        v40 = objc_alloc_init(GEOPDCategoryLookupParameters);
        if (!GEOPDCategoryLookupParametersReadAllFrom((uint64_t)v40, (void *)v3, v10 & 1))
          goto LABEL_84;
        PBReaderRecallMark();
        v41 = 32;
LABEL_50:
        v42 = *(void **)(a1 + v41);
        *(_QWORD *)(a1 + v41) = v40;

        --v8;
LABEL_64:
        v22 = (int *)MEMORY[0x1E0D82BC8];
        goto LABEL_65;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        goto LABEL_85;
      v47 = 32 * *(_BYTE *)(a1 + 52);
LABEL_63:
      v8 += v47 >> 7;
      goto LABEL_64;
    }
    if ((v54 & 1) == 0 || (*(_BYTE *)(a1 + 52) & 1) != 0)
    {
LABEL_57:
      v46 = PBReaderSkipValueWithTag();
      v22 = (int *)MEMORY[0x1E0D82BC8];
      if ((v46 & 1) == 0)
      {
        v52 = 0;
        goto LABEL_67;
      }
      goto LABEL_65;
    }
    if (!*(_QWORD *)(a1 + 16))
    {
      v43 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
      v44 = *(void **)(a1 + 16);
      *(_QWORD *)(a1 + 16) = v43;

    }
    v45 = PBUnknownFieldAdd();
    v22 = (int *)MEMORY[0x1E0D82BC8];
    if (!v45)
    {
      v52 = 0;
      v53 = &OBJC_IVAR___GEOPDAutocompleteResultSection__readerMarkLength;
      goto LABEL_68;
    }
LABEL_65:
    if (!(v55 & 1 | (v8 != 0)))
      goto LABEL_66;
  }
  if (!v35)
    goto LABEL_57;
  if ((*(_BYTE *)(a1 + 52) & 2) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0)
      goto LABEL_85;
    v47 = *(_BYTE *)(a1 + 52) << 6;
    goto LABEL_63;
  }
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_85;
  v40 = objc_alloc_init(GEOPDCategoryInformation);
  if (GEOPDCategoryInformationReadAllFrom((uint64_t)v40, (void *)v3, v10 & 1))
  {
    PBReaderRecallMark();
    v41 = 24;
    goto LABEL_50;
  }
LABEL_84:

LABEL_85:
  v52 = 0;
  v22 = (int *)MEMORY[0x1E0D82BC8];
LABEL_67:
  v53 = &OBJC_IVAR___GEOPDAutocompleteResultSection__readerMarkLength;
  if ((v54 & 1) == 0)
    goto LABEL_69;
LABEL_68:
  *(_BYTE *)(a1 + v53[76]) |= 1u;
LABEL_69:
  if (v57 || (v52 & 1) == 0)
  {
    *(_BYTE *)(a1 + v53[76]) |= 4u;
    *(_BYTE *)(a1 + v53[76]) |= 2u;
    goto LABEL_78;
  }
  if (v20)
  {
    while (1)
    {
      v49 = *v20++;
      v48 = v49;
      if (v49 == 1)
        break;
      if (v48 == 2)
      {
LABEL_74:
        *(_BYTE *)(a1 + v53[76]) |= v48;
      }
      else if (!v48)
      {
        goto LABEL_78;
      }
    }
    LOBYTE(v48) = 4;
    goto LABEL_74;
  }
LABEL_78:
  if (v52)
    v3 = *(_BYTE *)(v3 + *v22) == 0;
  else
    v3 = 0;
  if (v57)
  {
    v50 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_188B224B0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B225A8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDCategoryLookupResultReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDCategoryLookupResultReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDCategoryLookupResultReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDCategoryLookupResultReadAllFrom_initialTag;
  Specified = GEOPDCategoryLookupResultReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    -[GEOPDCategoryLookupParameters readAll:](*(_QWORD *)(a1 + 32), 1);
    objc_msgSend(*(id *)(a1 + 24), "readAll:", 1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_188B22828(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B229E8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B22B54(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B22EA8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDCategorySearchParametersReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint32x4_t v12;
  int8x16_t v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  char v19;
  char v20;
  int *v21;
  int *v22;
  int *v23;
  int *v24;
  char v25;
  int *v26;
  char v27;
  unsigned int v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  BOOL v34;
  int v35;
  int v36;
  unint64_t v38;
  BOOL v39;
  int *v40;
  int v41;
  int v42;
  BOOL v43;
  char v44;
  unsigned int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  char v50;
  GEOPDViewportInfo *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  unsigned int v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  char v60;
  char v61;
  unsigned int v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  char v66;
  char v67;
  unsigned int v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  char v72;
  char v73;
  unsigned int v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  char v79;
  int v80;
  int *v81;
  char v82;
  unsigned int v83;
  uint64_t v84;
  int *v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  char v89;
  int v90;
  int *v91;
  char v92;
  unsigned int v93;
  uint64_t v94;
  int *v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  char v99;
  char v100;
  unsigned int v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  char v105;
  int v106;
  int *v107;
  char v108;
  unsigned int v109;
  uint64_t v110;
  int *v111;
  uint64_t v112;
  uint64_t v113;
  unint64_t v114;
  char v115;
  char v116;
  unsigned int v117;
  uint64_t v118;
  uint64_t v119;
  unint64_t v120;
  char v121;
  int v122;
  int *v123;
  char v124;
  unsigned int v125;
  uint64_t v126;
  int *v127;
  uint64_t v128;
  uint64_t v129;
  unint64_t v130;
  char v131;
  int v132;
  int *v133;
  char v134;
  unsigned int v135;
  uint64_t v136;
  int *v137;
  uint64_t v138;
  uint64_t v139;
  unint64_t v140;
  char v141;
  char v142;
  unsigned int v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  unint64_t v147;
  char v148;
  char v149;
  unsigned int v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  unint64_t v154;
  char v155;
  void *v156;
  id v157;
  void *v158;
  int v159;
  char v160;
  char v161;
  uint64_t v162;
  BOOL v163;
  uint64_t v164;
  int v165;
  char v166;
  unsigned int v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  unint64_t v171;
  char v172;
  char v173;
  unsigned int v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  unint64_t v178;
  char v179;
  char v180;
  unsigned int v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  unint64_t v185;
  char v186;
  char v187;
  unsigned int v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  unint64_t v192;
  char v193;
  char v194;
  unsigned int v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  unint64_t v199;
  char v200;
  int v201;
  int v202;
  void *v203;
  char v205;
  int v206;
  char v207;
  char v208;
  char v209;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 256));
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 252);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 248));
  v6 = 0;
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = *(_DWORD *)(a1 + 288);
  v12 = (uint32x4_t)vdupq_n_s32(v11);
  v13.i64[0] = 0x100000001;
  v13.i64[1] = 0x100000001;
  v14 = vaddvq_s32(vaddq_s32(vaddq_s32((int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v12, (uint32x4_t)xmmword_189CC9D70), v13), (int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v12, (uint32x4_t)xmmword_189CC9D80), v13)), vaddq_s32((int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v12, (uint32x4_t)xmmword_189CC9D50), v13), (int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v12, (uint32x4_t)xmmword_189CC9D60), v13))))+ ((v11 >> 25) & 1)+ ((v11 >> 18) & 1)+ ((v11 >> 9) & 1);
  while (2)
  {
    v15 = 1;
    v16 = 1;
    v17 = 1;
    switch(a3[v6])
    {
      case -4:
        ++v14;
        goto LABEL_8;
      case -3:
        v7 = 1;
        goto LABEL_7;
      case -2:
        v16 = v9;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v18 = v14 > 0xD;
        v19 = v18 & ~(_BYTE)v10 | v8;
        v20 = v18 | v10;
        if ((((v18 | v10) | v7) & 1) != 0)
          v21 = 0;
        else
          v21 = a3;
        v22 = (int *)MEMORY[0x1E0D82BF0];
        v23 = (int *)MEMORY[0x1E0D82BD8];
        v206 = 1;
        v24 = (int *)MEMORY[0x1E0D82BC8];
        v25 = v19;
        if (*(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]))
          goto LABEL_378;
        v205 = v19;
        v207 = v20 | v19;
        v209 = (v21 == 0) | v20;
        v26 = (int *)MEMORY[0x1E0D82BB8];
        v208 = v20;
        break;
      default:
        ++v14;
LABEL_7:
        v15 = v8;
LABEL_8:
        v16 = v9;
        v17 = v10;
LABEL_10:
        ++v6;
        v8 = v15;
        v9 = v16;
        v10 = v17;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_BYTE *)(v3 + *v24))
      goto LABEL_373;
    v27 = 0;
    v28 = 0;
    v29 = 0;
    while (1)
    {
      v30 = *v22;
      v31 = *(_QWORD *)(v3 + v30);
      v32 = v31 + 1;
      if (v31 == -1 || v32 > *(_QWORD *)(v3 + *v23))
        break;
      v33 = *(_BYTE *)(*(_QWORD *)(v3 + *v26) + v31);
      *(_QWORD *)(v3 + v30) = v32;
      v29 |= (unint64_t)(v33 & 0x7F) << v27;
      if ((v33 & 0x80) == 0)
        goto LABEL_25;
      v27 += 7;
      v34 = v28++ >= 9;
      if (v34)
      {
        v29 = 0;
        v35 = *(unsigned __int8 *)(v3 + *v24);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v24) = 1;
LABEL_25:
    v35 = *(unsigned __int8 *)(v3 + *v24);
    if (*(_BYTE *)(v3 + *v24))
      v29 = 0;
LABEL_27:
    v36 = v29 & 7;
    if (v35 || v36 == 4)
    {
LABEL_373:
      v206 = 1;
      goto LABEL_377;
    }
    v38 = v29 >> 3;
    v39 = v20;
    if ((v209 & 1) == 0)
    {
      v40 = v21;
      do
      {
        v42 = *v40++;
        v41 = v42;
        v39 = v42 != 0;
        if (v42)
          v43 = v41 == (_DWORD)v38;
        else
          v43 = 1;
      }
      while (!v43);
    }
    switch((int)v38)
    {
      case 1:
        if ((v7 & 1) == 0)
          goto LABEL_265;
        v44 = 0;
        v45 = 0;
        v46 = 0;
        *(_DWORD *)(a1 + 288) |= 8u;
        v23 = (int *)MEMORY[0x1E0D82BD8];
        while (1)
        {
          v47 = *v22;
          v48 = *(_QWORD *)(v3 + v47);
          v49 = v48 + 1;
          if (v48 == -1 || v49 > *(_QWORD *)(v3 + *v23))
            break;
          v50 = *(_BYTE *)(*(_QWORD *)(v3 + *v26) + v48);
          *(_QWORD *)(v3 + v47) = v49;
          v46 |= (unint64_t)(v50 & 0x7F) << v44;
          if ((v50 & 0x80) == 0)
            goto LABEL_268;
          v44 += 7;
          v34 = v45++ >= 9;
          if (v34)
          {
            LODWORD(v46) = 0;
            goto LABEL_270;
          }
        }
        *(_BYTE *)(v3 + *v24) = 1;
LABEL_268:
        if (*(_BYTE *)(v3 + *v24))
          LODWORD(v46) = 0;
LABEL_270:
        v162 = 272;
        goto LABEL_295;
      case 3:
        if (!v39)
          goto LABEL_265;
        if ((*(_BYTE *)(a1 + 291) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_409;
          v165 = (16 * *(_DWORD *)(a1 + 288)) >> 31;
          goto LABEL_329;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_409;
        v51 = objc_alloc_init(GEOPDViewportInfo);
        if (!GEOPDViewportInfoReadAllFrom((uint64_t)v51, (void *)v3))
          goto LABEL_408;
        PBReaderRecallMark();
        v52 = 240;
        goto LABEL_248;
      case 4:
        if (!v39)
          goto LABEL_265;
        if ((*(_BYTE *)(a1 + 291) & 4) == 0)
        {
          PBReaderReadData();
          v53 = objc_claimAutoreleasedReturnValue();
          v54 = 232;
          goto LABEL_227;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_409;
        v165 = (32 * *(_DWORD *)(a1 + 288)) >> 31;
        goto LABEL_329;
      case 5:
        if ((v7 & 1) == 0)
          goto LABEL_265;
        v55 = 0;
        v56 = 0;
        v46 = 0;
        *(_DWORD *)(a1 + 288) |= 2u;
        v23 = (int *)MEMORY[0x1E0D82BD8];
        while (2)
        {
          v57 = *v22;
          v58 = *(_QWORD *)(v3 + v57);
          v59 = v58 + 1;
          if (v58 == -1 || v59 > *(_QWORD *)(v3 + *v23))
          {
            *(_BYTE *)(v3 + *v24) = 1;
          }
          else
          {
            v60 = *(_BYTE *)(*(_QWORD *)(v3 + *v26) + v58);
            *(_QWORD *)(v3 + v57) = v59;
            v46 |= (unint64_t)(v60 & 0x7F) << v55;
            if (v60 < 0)
            {
              v55 += 7;
              v34 = v56++ >= 9;
              if (v34)
              {
                LODWORD(v46) = 0;
                goto LABEL_274;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v24))
          LODWORD(v46) = 0;
LABEL_274:
        v162 = 264;
        goto LABEL_295;
      case 6:
        if ((v7 & 1) == 0)
          goto LABEL_265;
        v61 = 0;
        v62 = 0;
        v46 = 0;
        *(_DWORD *)(a1 + 288) |= 4u;
        v23 = (int *)MEMORY[0x1E0D82BD8];
        while (2)
        {
          v63 = *v22;
          v64 = *(_QWORD *)(v3 + v63);
          v65 = v64 + 1;
          if (v64 == -1 || v65 > *(_QWORD *)(v3 + *v23))
          {
            *(_BYTE *)(v3 + *v24) = 1;
          }
          else
          {
            v66 = *(_BYTE *)(*(_QWORD *)(v3 + *v26) + v64);
            *(_QWORD *)(v3 + v63) = v65;
            v46 |= (unint64_t)(v66 & 0x7F) << v61;
            if (v66 < 0)
            {
              v61 += 7;
              v34 = v62++ >= 9;
              if (v34)
              {
                LODWORD(v46) = 0;
                goto LABEL_278;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v24))
          LODWORD(v46) = 0;
LABEL_278:
        v162 = 268;
        goto LABEL_295;
      case 7:
        if ((v7 & 1) == 0)
          goto LABEL_265;
        v67 = 0;
        v68 = 0;
        v46 = 0;
        *(_DWORD *)(a1 + 288) |= 0x20u;
        v23 = (int *)MEMORY[0x1E0D82BD8];
        while (2)
        {
          v69 = *v22;
          v70 = *(_QWORD *)(v3 + v69);
          v71 = v70 + 1;
          if (v70 == -1 || v71 > *(_QWORD *)(v3 + *v23))
          {
            *(_BYTE *)(v3 + *v24) = 1;
          }
          else
          {
            v72 = *(_BYTE *)(*(_QWORD *)(v3 + *v26) + v70);
            *(_QWORD *)(v3 + v69) = v71;
            v46 |= (unint64_t)(v72 & 0x7F) << v67;
            if (v72 < 0)
            {
              v67 += 7;
              v34 = v68++ >= 9;
              if (v34)
              {
                LODWORD(v46) = 0;
                goto LABEL_282;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v24))
          LODWORD(v46) = 0;
LABEL_282:
        v162 = 280;
        goto LABEL_295;
      case 8:
        if (!v39)
          goto LABEL_265;
        if ((*(_BYTE *)(a1 + 290) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_409;
          v165 = (int)(*(_DWORD *)(a1 + 288) << 11) >> 31;
          goto LABEL_329;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_409;
        v51 = objc_alloc_init(GEOPDRecentRouteInfo);
        if (!GEOPDRecentRouteInfoReadAllFrom((uint64_t)v51, (void *)v3, v9 & 1))
          goto LABEL_408;
        PBReaderRecallMark();
        v52 = 184;
        goto LABEL_248;
      case 9:
        if ((v7 & 1) == 0)
          goto LABEL_265;
        v73 = 0;
        v74 = 0;
        v75 = 0;
        *(_DWORD *)(a1 + 288) |= 0x40u;
        v23 = (int *)MEMORY[0x1E0D82BD8];
        while (2)
        {
          v76 = *v22;
          v77 = *(_QWORD *)(v3 + v76);
          v78 = v77 + 1;
          if (v77 == -1 || v78 > *(_QWORD *)(v3 + *v23))
          {
            *(_BYTE *)(v3 + *v24) = 1;
          }
          else
          {
            v79 = *(_BYTE *)(*(_QWORD *)(v3 + *v26) + v77);
            *(_QWORD *)(v3 + v76) = v78;
            v75 |= (unint64_t)(v79 & 0x7F) << v73;
            if (v79 < 0)
            {
              v73 += 7;
              v34 = v74++ >= 9;
              if (v34)
              {
                v75 = 0;
                goto LABEL_286;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v24))
          v75 = 0;
LABEL_286:
        v163 = v75 != 0;
        v164 = 284;
        goto LABEL_304;
      case 10:
        if (!v39)
          goto LABEL_265;
        if ((*(_BYTE *)(a1 + 290) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_409;
          v165 = (int)(*(_DWORD *)(a1 + 288) << 14) >> 31;
          goto LABEL_329;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_409;
        v51 = objc_alloc_init(GEOPDSSearchEvChargingParameters);
        if (!GEOPDSSearchEvChargingParametersReadAllFrom((uint64_t)v51, (void *)v3, v9 & 1))
          goto LABEL_408;
        PBReaderRecallMark();
        v52 = 160;
        goto LABEL_248;
      case 21:
        if (!v39 || (*(_BYTE *)(a1 + 289) & 0x10) != 0)
          goto LABEL_265;
        if (v36 != 2)
        {
          v166 = 0;
          v167 = 0;
          v168 = 0;
          v23 = (int *)MEMORY[0x1E0D82BD8];
          while (1)
          {
            v169 = *v22;
            v170 = *(_QWORD *)(v3 + v169);
            v171 = v170 + 1;
            if (v170 == -1 || v171 > *(_QWORD *)(v3 + *v23))
              goto LABEL_370;
            v172 = *(_BYTE *)(*(_QWORD *)(v3 + *v26) + v170);
            *(_QWORD *)(v3 + v169) = v171;
            v168 |= (unint64_t)(v172 & 0x7F) << v166;
            if (v172 < 0)
            {
              v166 += 7;
              v34 = v167++ >= 9;
              if (!v34)
                continue;
            }
            goto LABEL_371;
          }
        }
        v80 = PBReaderPlaceMark();
        v23 = (int *)MEMORY[0x1E0D82BD8];
        if (!v80)
          goto LABEL_409;
        while (1)
        {
          v81 = (int *)MEMORY[0x1E0D82BC8];
          if (*(_QWORD *)(v3 + *v22) >= *(_QWORD *)(v3 + *v23) || *(_BYTE *)(v3 + (int)*MEMORY[0x1E0D82BC8]))
            goto LABEL_264;
          v82 = 0;
          v83 = 0;
          v84 = 0;
          v85 = (int *)MEMORY[0x1E0D82BB8];
          while (1)
          {
            v86 = *v22;
            v87 = *(_QWORD *)(v3 + v86);
            v88 = v87 + 1;
            if (v87 == -1 || v88 > *(_QWORD *)(v3 + *v23))
              break;
            v89 = *(_BYTE *)(*(_QWORD *)(v3 + *v85) + v87);
            *(_QWORD *)(v3 + v86) = v88;
            v84 |= (unint64_t)(v89 & 0x7F) << v82;
            if (v89 < 0)
            {
              v82 += 7;
              v34 = v83++ >= 9;
              if (!v34)
                continue;
            }
            goto LABEL_111;
          }
          *(_BYTE *)(v3 + *v81) = 1;
LABEL_111:
          PBRepeatedInt32Add();
        }
      case 22:
        if (!v39)
          goto LABEL_265;
        if ((*(_BYTE *)(a1 + 290) & 1) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_409;
          v165 = (int)(*(_DWORD *)(a1 + 288) << 15) >> 31;
          goto LABEL_329;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_409;
        v51 = objc_alloc_init(GEOPDETAFilter);
        if (!GEOPDETAFilterReadAllFrom((uint64_t)v51, (void *)v3, v9 & 1))
          goto LABEL_408;
        PBReaderRecallMark();
        v52 = 152;
        goto LABEL_248;
      case 23:
        if (!v39 || (*(_BYTE *)(a1 + 289) & 0x40) != 0)
          goto LABEL_265;
        if (v36 != 2)
        {
          v173 = 0;
          v174 = 0;
          v175 = 0;
          v23 = (int *)MEMORY[0x1E0D82BD8];
          while (1)
          {
            v176 = *v22;
            v177 = *(_QWORD *)(v3 + v176);
            v178 = v177 + 1;
            if (v177 == -1 || v178 > *(_QWORD *)(v3 + *v23))
              goto LABEL_370;
            v179 = *(_BYTE *)(*(_QWORD *)(v3 + *v26) + v177);
            *(_QWORD *)(v3 + v176) = v178;
            v175 |= (unint64_t)(v179 & 0x7F) << v173;
            if (v179 < 0)
            {
              v173 += 7;
              v34 = v174++ >= 9;
              if (!v34)
                continue;
            }
            goto LABEL_371;
          }
        }
        v90 = PBReaderPlaceMark();
        v23 = (int *)MEMORY[0x1E0D82BD8];
        if (!v90)
          goto LABEL_409;
        while (1)
        {
          v91 = (int *)MEMORY[0x1E0D82BC8];
          if (*(_QWORD *)(v3 + *v22) >= *(_QWORD *)(v3 + *v23) || *(_BYTE *)(v3 + (int)*MEMORY[0x1E0D82BC8]))
            goto LABEL_264;
          v92 = 0;
          v93 = 0;
          v94 = 0;
          v95 = (int *)MEMORY[0x1E0D82BB8];
          while (1)
          {
            v96 = *v22;
            v97 = *(_QWORD *)(v3 + v96);
            v98 = v97 + 1;
            if (v97 == -1 || v98 > *(_QWORD *)(v3 + *v23))
              break;
            v99 = *(_BYTE *)(*(_QWORD *)(v3 + *v95) + v97);
            *(_QWORD *)(v3 + v96) = v98;
            v94 |= (unint64_t)(v99 & 0x7F) << v92;
            if (v99 < 0)
            {
              v92 += 7;
              v34 = v93++ >= 9;
              if (!v34)
                continue;
            }
            goto LABEL_131;
          }
          *(_BYTE *)(v3 + *v91) = 1;
LABEL_131:
          PBRepeatedInt32Add();
        }
      case 24:
        if ((v7 & 1) == 0)
          goto LABEL_265;
        v100 = 0;
        v101 = 0;
        v46 = 0;
        *(_DWORD *)(a1 + 288) |= 1u;
        v23 = (int *)MEMORY[0x1E0D82BD8];
        while (2)
        {
          v102 = *v22;
          v103 = *(_QWORD *)(v3 + v102);
          v104 = v103 + 1;
          if (v103 == -1 || v104 > *(_QWORD *)(v3 + *v23))
          {
            *(_BYTE *)(v3 + *v24) = 1;
          }
          else
          {
            v105 = *(_BYTE *)(*(_QWORD *)(v3 + *v26) + v103);
            *(_QWORD *)(v3 + v102) = v104;
            v46 |= (unint64_t)(v105 & 0x7F) << v100;
            if (v105 < 0)
            {
              v100 += 7;
              v34 = v101++ >= 9;
              if (v34)
              {
                LODWORD(v46) = 0;
                goto LABEL_290;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v24))
          LODWORD(v46) = 0;
LABEL_290:
        v162 = 260;
        goto LABEL_295;
      case 25:
        if (!v39)
          goto LABEL_265;
        if ((*(_BYTE *)(a1 + 290) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_409;
          v165 = (int)(*(_DWORD *)(a1 + 288) << 10) >> 31;
          goto LABEL_329;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_409;
        v51 = objc_alloc_init(GEOPDResultRefinementQuery);
        if (!GEOPDResultRefinementQueryReadAllFrom((uint64_t)v51, (void *)v3, v9 & 1))
          goto LABEL_408;
        PBReaderRecallMark();
        v52 = 192;
        goto LABEL_248;
      case 26:
        if (!v39 || (*(_BYTE *)(a1 + 289) & 4) != 0)
          goto LABEL_265;
        if (v36 != 2)
        {
          v180 = 0;
          v181 = 0;
          v182 = 0;
          v23 = (int *)MEMORY[0x1E0D82BD8];
          while (1)
          {
            v183 = *v22;
            v184 = *(_QWORD *)(v3 + v183);
            v185 = v184 + 1;
            if (v184 == -1 || v185 > *(_QWORD *)(v3 + *v23))
              goto LABEL_370;
            v186 = *(_BYTE *)(*(_QWORD *)(v3 + *v26) + v184);
            *(_QWORD *)(v3 + v183) = v185;
            v182 |= (unint64_t)(v186 & 0x7F) << v180;
            if (v186 < 0)
            {
              v180 += 7;
              v34 = v181++ >= 9;
              if (!v34)
                continue;
            }
            goto LABEL_371;
          }
        }
        v106 = PBReaderPlaceMark();
        v23 = (int *)MEMORY[0x1E0D82BD8];
        if (!v106)
          goto LABEL_409;
        while (1)
        {
          v107 = (int *)MEMORY[0x1E0D82BC8];
          if (*(_QWORD *)(v3 + *v22) >= *(_QWORD *)(v3 + *v23) || *(_BYTE *)(v3 + (int)*MEMORY[0x1E0D82BC8]))
            goto LABEL_264;
          v108 = 0;
          v109 = 0;
          v110 = 0;
          v111 = (int *)MEMORY[0x1E0D82BB8];
          while (1)
          {
            v112 = *v22;
            v113 = *(_QWORD *)(v3 + v112);
            v114 = v113 + 1;
            if (v113 == -1 || v114 > *(_QWORD *)(v3 + *v23))
              break;
            v115 = *(_BYTE *)(*(_QWORD *)(v3 + *v111) + v113);
            *(_QWORD *)(v3 + v112) = v114;
            v110 |= (unint64_t)(v115 & 0x7F) << v108;
            if (v115 < 0)
            {
              v108 += 7;
              v34 = v109++ >= 9;
              if (!v34)
                continue;
            }
            goto LABEL_159;
          }
          *(_BYTE *)(v3 + *v107) = 1;
LABEL_159:
          PBRepeatedInt32Add();
        }
      case 27:
        if ((v7 & 1) == 0)
          goto LABEL_265;
        v116 = 0;
        v117 = 0;
        v46 = 0;
        *(_DWORD *)(a1 + 288) |= 0x10u;
        v23 = (int *)MEMORY[0x1E0D82BD8];
        while (2)
        {
          v118 = *v22;
          v119 = *(_QWORD *)(v3 + v118);
          v120 = v119 + 1;
          if (v119 == -1 || v120 > *(_QWORD *)(v3 + *v23))
          {
            *(_BYTE *)(v3 + *v24) = 1;
          }
          else
          {
            v121 = *(_BYTE *)(*(_QWORD *)(v3 + *v26) + v119);
            *(_QWORD *)(v3 + v118) = v120;
            v46 |= (unint64_t)(v121 & 0x7F) << v116;
            if (v121 < 0)
            {
              v116 += 7;
              v34 = v117++ >= 9;
              if (v34)
              {
                LODWORD(v46) = 0;
                goto LABEL_294;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v24))
          LODWORD(v46) = 0;
LABEL_294:
        v162 = 276;
LABEL_295:
        *(_DWORD *)(a1 + v162) = v46;
        goto LABEL_332;
      case 28:
        if (!v39)
          goto LABEL_265;
        if ((*(_BYTE *)(a1 + 290) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_409;
          v165 = (int)(*(_DWORD *)(a1 + 288) << 12) >> 31;
          goto LABEL_329;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_409;
        v51 = objc_alloc_init(GEOPDViewportInfo);
        if (!GEOPDViewportInfoReadAllFrom((uint64_t)v51, (void *)v3))
          goto LABEL_408;
        PBReaderRecallMark();
        v52 = 176;
        goto LABEL_248;
      case 29:
        if (!v39 || (*(_BYTE *)(a1 + 289) & 8) != 0)
          goto LABEL_265;
        if (v36 != 2)
        {
          v187 = 0;
          v188 = 0;
          v189 = 0;
          v23 = (int *)MEMORY[0x1E0D82BD8];
          while (1)
          {
            v190 = *v22;
            v191 = *(_QWORD *)(v3 + v190);
            v192 = v191 + 1;
            if (v191 == -1 || v192 > *(_QWORD *)(v3 + *v23))
              goto LABEL_370;
            v193 = *(_BYTE *)(*(_QWORD *)(v3 + *v26) + v191);
            *(_QWORD *)(v3 + v190) = v192;
            v189 |= (unint64_t)(v193 & 0x7F) << v187;
            if (v193 < 0)
            {
              v187 += 7;
              v34 = v188++ >= 9;
              if (!v34)
                continue;
            }
            goto LABEL_371;
          }
        }
        v122 = PBReaderPlaceMark();
        v23 = (int *)MEMORY[0x1E0D82BD8];
        if (!v122)
          goto LABEL_409;
        while (1)
        {
          v123 = (int *)MEMORY[0x1E0D82BC8];
          if (*(_QWORD *)(v3 + *v22) >= *(_QWORD *)(v3 + *v23) || *(_BYTE *)(v3 + (int)*MEMORY[0x1E0D82BC8]))
            goto LABEL_264;
          v124 = 0;
          v125 = 0;
          v126 = 0;
          v127 = (int *)MEMORY[0x1E0D82BB8];
          while (1)
          {
            v128 = *v22;
            v129 = *(_QWORD *)(v3 + v128);
            v130 = v129 + 1;
            if (v129 == -1 || v130 > *(_QWORD *)(v3 + *v23))
              break;
            v131 = *(_BYTE *)(*(_QWORD *)(v3 + *v127) + v129);
            *(_QWORD *)(v3 + v128) = v130;
            v126 |= (unint64_t)(v131 & 0x7F) << v124;
            if (v131 < 0)
            {
              v124 += 7;
              v34 = v125++ >= 9;
              if (!v34)
                continue;
            }
            goto LABEL_187;
          }
          *(_BYTE *)(v3 + *v123) = 1;
LABEL_187:
          PBRepeatedInt32Add();
        }
      case 30:
        if (!v39 || (*(_BYTE *)(a1 + 289) & 0x20) != 0)
          goto LABEL_265;
        if (v36 == 2)
        {
          v132 = PBReaderPlaceMark();
          v23 = (int *)MEMORY[0x1E0D82BD8];
          if (!v132)
            goto LABEL_409;
          while (1)
          {
            v133 = (int *)MEMORY[0x1E0D82BC8];
            if (*(_QWORD *)(v3 + *v22) >= *(_QWORD *)(v3 + *v23) || *(_BYTE *)(v3 + (int)*MEMORY[0x1E0D82BC8]))
              break;
            v134 = 0;
            v135 = 0;
            v136 = 0;
            v137 = (int *)MEMORY[0x1E0D82BB8];
            while (1)
            {
              v138 = *v22;
              v139 = *(_QWORD *)(v3 + v138);
              v140 = v139 + 1;
              if (v139 == -1 || v140 > *(_QWORD *)(v3 + *v23))
                break;
              v141 = *(_BYTE *)(*(_QWORD *)(v3 + *v137) + v139);
              *(_QWORD *)(v3 + v138) = v140;
              v136 |= (unint64_t)(v141 & 0x7F) << v134;
              if (v141 < 0)
              {
                v134 += 7;
                v34 = v135++ >= 9;
                if (!v34)
                  continue;
              }
              goto LABEL_202;
            }
            *(_BYTE *)(v3 + *v133) = 1;
LABEL_202:
            PBRepeatedInt32Add();
          }
LABEL_264:
          PBReaderRecallMark();
        }
        else
        {
          v194 = 0;
          v195 = 0;
          v196 = 0;
          v23 = (int *)MEMORY[0x1E0D82BD8];
          while (1)
          {
            v197 = *v22;
            v198 = *(_QWORD *)(v3 + v197);
            v199 = v198 + 1;
            if (v198 == -1 || v199 > *(_QWORD *)(v3 + *v23))
              break;
            v200 = *(_BYTE *)(*(_QWORD *)(v3 + *v26) + v198);
            *(_QWORD *)(v3 + v197) = v199;
            v196 |= (unint64_t)(v200 & 0x7F) << v194;
            if (v200 < 0)
            {
              v194 += 7;
              v34 = v195++ >= 9;
              if (!v34)
                continue;
            }
            goto LABEL_371;
          }
LABEL_370:
          *(_BYTE *)(v3 + *v24) = 1;
LABEL_371:
          PBRepeatedInt32Add();
        }
        v24 = (int *)MEMORY[0x1E0D82BC8];
        goto LABEL_331;
      case 31:
        if ((v7 & 1) == 0)
          goto LABEL_265;
        v142 = 0;
        v143 = 0;
        v144 = 0;
        *(_DWORD *)(a1 + 288) |= 0x80u;
        v23 = (int *)MEMORY[0x1E0D82BD8];
        while (2)
        {
          v145 = *v22;
          v146 = *(_QWORD *)(v3 + v145);
          v147 = v146 + 1;
          if (v146 == -1 || v147 > *(_QWORD *)(v3 + *v23))
          {
            *(_BYTE *)(v3 + *v24) = 1;
          }
          else
          {
            v148 = *(_BYTE *)(*(_QWORD *)(v3 + *v26) + v146);
            *(_QWORD *)(v3 + v145) = v147;
            v144 |= (unint64_t)(v148 & 0x7F) << v142;
            if (v148 < 0)
            {
              v142 += 7;
              v34 = v143++ >= 9;
              if (v34)
              {
                v144 = 0;
                goto LABEL_299;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v24))
          v144 = 0;
LABEL_299:
        v163 = v144 != 0;
        v164 = 285;
        goto LABEL_304;
      case 32:
        if ((v7 & 1) == 0)
          goto LABEL_265;
        v149 = 0;
        v150 = 0;
        v151 = 0;
        *(_DWORD *)(a1 + 288) |= 0x100u;
        v23 = (int *)MEMORY[0x1E0D82BD8];
        while (2)
        {
          v152 = *v22;
          v153 = *(_QWORD *)(v3 + v152);
          v154 = v153 + 1;
          if (v153 == -1 || v154 > *(_QWORD *)(v3 + *v23))
          {
            *(_BYTE *)(v3 + *v24) = 1;
          }
          else
          {
            v155 = *(_BYTE *)(*(_QWORD *)(v3 + *v26) + v153);
            *(_QWORD *)(v3 + v152) = v154;
            v151 |= (unint64_t)(v155 & 0x7F) << v149;
            if (v155 < 0)
            {
              v149 += 7;
              v34 = v150++ >= 9;
              if (v34)
              {
                v151 = 0;
                goto LABEL_303;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v24))
          v151 = 0;
LABEL_303:
        v163 = v151 != 0;
        v164 = 286;
LABEL_304:
        *(_BYTE *)(a1 + v164) = v163;
        goto LABEL_332;
      case 33:
        if (!v39)
          goto LABEL_265;
        if ((*(_BYTE *)(a1 + 290) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_409;
          v165 = (int)(*(_DWORD *)(a1 + 288) << 8) >> 31;
          goto LABEL_329;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_409;
        v51 = objc_alloc_init(GEOPDSearchOriginationInfo);
        if (!GEOPDSearchOriginationInfoReadAllFrom((uint64_t)v51, (void *)v3, v9 & 1))
          goto LABEL_408;
        PBReaderRecallMark();
        v52 = 208;
        goto LABEL_248;
      case 34:
        if (!v39)
          goto LABEL_265;
        if ((*(_BYTE *)(a1 + 289) & 0x80) == 0)
        {
          PBReaderReadString();
          v53 = objc_claimAutoreleasedReturnValue();
          v54 = 144;
LABEL_227:
          v156 = *(void **)(a1 + v54);
          *(_QWORD *)(a1 + v54) = v53;
          goto LABEL_249;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_409;
        v165 = (int)(*(_DWORD *)(a1 + 288) << 16) >> 31;
        goto LABEL_329;
      case 35:
        if (!v39 || (*(_BYTE *)(a1 + 290) & 0x40) != 0)
        {
          v160 = PBReaderSkipValueWithTag();
          v24 = (int *)MEMORY[0x1E0D82BC8];
          v23 = (int *)MEMORY[0x1E0D82BD8];
          v26 = (int *)MEMORY[0x1E0D82BB8];
          if ((v160 & 1) == 0)
            goto LABEL_375;
          goto LABEL_332;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_409;
        v51 = objc_alloc_init(GEOPDSearchEnrichmentRevisionMetadata);
        if (!GEOPDSearchEnrichmentRevisionMetadataReadAllFrom((uint64_t)v51, (void *)v3))
          goto LABEL_408;
        PBReaderRecallMark();
        -[GEOPDCategorySearchParameters _addNoFlagsSearchEnrichmentRevisionMetadata:](a1, v51);

        goto LABEL_330;
      case 36:
        if (!v39)
          goto LABEL_265;
        if ((*(_BYTE *)(a1 + 291) & 1) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_409;
          v165 = (int)(*(_DWORD *)(a1 + 288) << 7) >> 31;
          goto LABEL_329;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_409;
        v51 = objc_alloc_init(GEOPDSSearchSessionData);
        if (!GEOPDSSearchSessionDataReadAllFrom((uint64_t)v51, (void *)v3))
          goto LABEL_408;
        PBReaderRecallMark();
        v52 = 216;
        goto LABEL_248;
      case 37:
        if (!v39)
          goto LABEL_265;
        if ((*(_BYTE *)(a1 + 291) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_409;
          v165 = (int)(*(_DWORD *)(a1 + 288) << 6) >> 31;
          goto LABEL_329;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_409;
        v51 = objc_alloc_init(GEOPDSSessionUserActionMetadata);
        if (!GEOPDSSessionUserActionMetadataReadAllFrom(v51, (void *)v3))
          goto LABEL_408;
        PBReaderRecallMark();
        v52 = 224;
        goto LABEL_248;
      case 38:
        if (!v39)
          goto LABEL_265;
        if ((*(_BYTE *)(a1 + 290) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_409;
          v165 = (int)(*(_DWORD *)(a1 + 288) << 13) >> 31;
LABEL_329:
          v6 += v165;
LABEL_330:
          v24 = (int *)MEMORY[0x1E0D82BC8];
          v23 = (int *)MEMORY[0x1E0D82BD8];
LABEL_331:
          v26 = (int *)MEMORY[0x1E0D82BB8];
LABEL_332:
          if (!(v207 & 1 | (v6 != 0)))
          {
            v206 = 1;
LABEL_376:
            v20 = v208;
            goto LABEL_377;
          }
          v20 = v208;
          if (*(_QWORD *)(v3 + *v22) >= *(_QWORD *)(v3 + *v23))
            goto LABEL_373;
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_409;
        v51 = objc_alloc_init(GEOPDPaginationParameters);
        if (GEOPDPaginationParametersReadAllFrom((uint64_t)v51, (void *)v3))
        {
          PBReaderRecallMark();
          v52 = 168;
LABEL_248:
          v156 = *(void **)(a1 + v52);
          *(_QWORD *)(a1 + v52) = v51;
LABEL_249:

          --v6;
          goto LABEL_330;
        }
LABEL_408:

LABEL_409:
        v206 = 0;
        v20 = v208;
        v24 = (int *)MEMORY[0x1E0D82BC8];
LABEL_377:
        v25 = v205;
LABEL_378:
        if ((v25 & 1) != 0)
LABEL_379:
          *(_DWORD *)(a1 + 288) |= 0x200u;
        if (v20 & 1 | ((v206 & 1) == 0))
        {
          *(_DWORD *)(a1 + 288) |= 0x8000000u;
          *(_DWORD *)(a1 + 288) |= 0x4000000u;
          *(_DWORD *)(a1 + 288) |= 0x100000u;
          *(_DWORD *)(a1 + 288) |= 0x20000u;
          *(_DWORD *)(a1 + 288) |= 0x1000u;
          *(_DWORD *)(a1 + 288) |= 0x10000u;
          *(_DWORD *)(a1 + 288) |= 0x4000u;
          *(_DWORD *)(a1 + 288) |= 0x200000u;
          *(_DWORD *)(a1 + 288) |= 0x400u;
          *(_DWORD *)(a1 + 288) |= 0x80000u;
          *(_DWORD *)(a1 + 288) |= 0x800u;
          *(_DWORD *)(a1 + 288) |= 0x2000u;
          *(_DWORD *)(a1 + 288) |= 0x800000u;
          *(_DWORD *)(a1 + 288) |= 0x8000u;
          *(_DWORD *)(a1 + 288) |= 0x400000u;
          *(_DWORD *)(a1 + 288) |= 0x1000000u;
          *(_DWORD *)(a1 + 288) |= 0x2000000u;
          *(_DWORD *)(a1 + 288) |= 0x40000u;
        }
        else if (v21)
        {
          while (1)
          {
            v201 = *v21++;
            v202 = 0x8000000;
            switch(v201)
            {
              case 0:
                goto LABEL_402;
              case 3:
                goto LABEL_401;
              case 4:
                v202 = 0x4000000;
                goto LABEL_401;
              case 8:
                v202 = 0x100000;
                goto LABEL_401;
              case 10:
                v202 = 0x20000;
                goto LABEL_401;
              case 21:
                v202 = 4096;
                goto LABEL_401;
              case 22:
                v202 = 0x10000;
                goto LABEL_401;
              case 23:
                v202 = 0x4000;
                goto LABEL_401;
              case 25:
                v202 = 0x200000;
                goto LABEL_401;
              case 26:
                v202 = 1024;
                goto LABEL_401;
              case 28:
                v202 = 0x80000;
                goto LABEL_401;
              case 29:
                v202 = 2048;
                goto LABEL_401;
              case 30:
                v202 = 0x2000;
                goto LABEL_401;
              case 33:
                v202 = 0x800000;
                goto LABEL_401;
              case 34:
                v202 = 0x8000;
                goto LABEL_401;
              case 35:
                v202 = 0x400000;
                goto LABEL_401;
              case 36:
                v202 = 0x1000000;
                goto LABEL_401;
              case 37:
                v202 = 0x2000000;
                goto LABEL_401;
              case 38:
                v202 = 0x40000;
LABEL_401:
                *(_DWORD *)(a1 + 288) |= v202;
                break;
              default:
                continue;
            }
          }
        }
LABEL_402:
        if (v206)
        {
          v3 = *(_BYTE *)(v3 + *v24) == 0;
          if ((v20 & 1) == 0)
            return v3;
LABEL_406:
          v203 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        else
        {
          v3 = 0;
          if ((v20 & 1) != 0)
            goto LABEL_406;
        }
        return v3;
      default:
        if ((v205 & 1) == 0 || (*(_BYTE *)(a1 + 289) & 2) != 0)
        {
LABEL_265:
          v161 = PBReaderSkipValueWithTag();
          v26 = (int *)MEMORY[0x1E0D82BB8];
          v24 = (int *)MEMORY[0x1E0D82BC8];
          v23 = (int *)MEMORY[0x1E0D82BD8];
          if ((v161 & 1) == 0)
          {
LABEL_375:
            v206 = 0;
            goto LABEL_376;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v157 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v158 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v157;

          }
          v159 = PBUnknownFieldAdd();
          v24 = (int *)MEMORY[0x1E0D82BC8];
          v23 = (int *)MEMORY[0x1E0D82BD8];
          v26 = (int *)MEMORY[0x1E0D82BB8];
          if (!v159)
          {
            v206 = 0;
            v20 = v208;
            goto LABEL_379;
          }
        }
        goto LABEL_332;
    }
  }
}

void sub_188B24D2C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B24E6C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B24FC8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B250F4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B2521C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B25348(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B25470(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B255B0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B256DC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B258C0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B26D70(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B26E68(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDCategorySearchParametersCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _BYTE v11[128];
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  objc_msgSend(*(id *)(a1 + 240), "readAll:", 1);
  -[GEOPDRecentRouteInfo readAll:](*(_QWORD *)(a1 + 184), 1);
  -[GEOPDSSearchEvChargingParameters readAll:](*(_QWORD *)(a1 + 160), 1);
  -[GEOPDETAFilter readAll:](*(_QWORD *)(a1 + 152), 1);
  objc_msgSend(*(id *)(a1 + 192), "readAll:", 1);
  objc_msgSend(*(id *)(a1 + 176), "readAll:", 1);
  -[GEOPDSearchOriginationInfo readAll:](*(_QWORD *)(a1 + 208), 1);
  v9 = 0u;
  v10 = 0u;
  v7 = 0u;
  v8 = 0u;
  v2 = *(id *)(a1 + 200);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v8;
    while (1)
    {
      if (*(_QWORD *)v8 != v5)
        objc_enumerationMutation(v2);
      if (!--v4)
      {
        v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
        if (!v4)
          break;
      }
    }
  }

  return objc_msgSend(*(id *)(a1 + 224), "readAll:", 1, v7);
}

unint64_t GEOPDCategorySearchParametersReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 252))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDCategorySearchParametersReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 256));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 248) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 252) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDCategorySearchParametersReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDCategorySearchParametersReadAllFrom_initialTag;
  Specified = GEOPDCategorySearchParametersReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDCategorySearchParametersCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 256));
  return Specified;
}

void sub_188B27244(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDRecentRouteInfoIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  _BOOL8 v23;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2)
            goto LABEL_48;
          goto LABEL_42;
        case 2u:
          if (v15 == 2)
            goto LABEL_42;
          goto LABEL_48;
        case 3u:
          if (v15 == 2)
            goto LABEL_42;
          goto LABEL_48;
        case 4u:
          if ((v8 & 7) != 0)
            goto LABEL_48;
          v17 = 0;
          break;
        case 5u:
          if (v15 == 2)
            goto LABEL_42;
          goto LABEL_48;
        case 6u:
          if (v15 == 2)
            goto LABEL_42;
          goto LABEL_48;
        case 7u:
          if (v15 == 2)
            goto LABEL_42;
          goto LABEL_48;
        case 8u:
          if (v15 != 2)
            goto LABEL_48;
LABEL_42:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_48:
          v23 = 0;
          goto LABEL_47;
        default:
          if (!PBReaderSkipValueWithTag())
            goto LABEL_48;
          continue;
      }
      while (1)
      {
        v18 = *v2;
        v19 = *(_QWORD *)&a1[v18];
        v20 = v19 + 1;
        if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
          break;
        v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
        *(_QWORD *)&a1[v18] = v20;
        if (v21 < 0 && v17++ <= 8)
          continue;
        goto LABEL_43;
      }
      a1[*v4] = 1;
LABEL_43:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v23 = a1[*v4] == 0;
LABEL_47:
  PBReaderRecallMark();
  return v23;
}

BOOL GEOPDPaginationParametersIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  _BOOL8 v23;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      if ((v8 >> 3) == 2)
      {
        if (v15 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_37:
          v23 = 0;
          goto LABEL_36;
        }
      }
      else if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0)
          goto LABEL_37;
        v17 = 0;
        while (1)
        {
          v18 = *v2;
          v19 = *(_QWORD *)&a1[v18];
          v20 = v19 + 1;
          if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
            break;
          v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
          *(_QWORD *)&a1[v18] = v20;
          if (v21 < 0 && v17++ <= 8)
            continue;
          goto LABEL_34;
        }
        a1[*v4] = 1;
      }
      else if (!PBReaderSkipValueWithTag())
      {
        goto LABEL_37;
      }
LABEL_34:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v23 = a1[*v4] == 0;
LABEL_36:
  PBReaderRecallMark();
  return v23;
}

void sub_188B27C9C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDCategorySearchParametersIsDirty(uint64_t a1)
{
  unsigned int v2;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 256));
  v2 = *(_DWORD *)(a1 + 288);
  if ((v2 & 0x1C000000) != 0)
    return 1;
  if ((v2 & 0x100000) != 0)
  {
    if (GEOPDRecentRouteInfoIsDirty(*(_QWORD *)(a1 + 184)))
      return 1;
    v2 = *(_DWORD *)(a1 + 288);
  }
  if ((v2 & 0x20000) != 0)
  {
    if (GEOPDSSearchEvChargingParametersIsDirty(*(_QWORD *)(a1 + 160)))
      return 1;
    v2 = *(_DWORD *)(a1 + 288);
  }
  if ((v2 & 0x1000) != 0)
    return 1;
  if ((v2 & 0x10000) != 0)
  {
    if ((GEOPDETAFilterIsDirty(*(os_unfair_lock_s **)(a1 + 152)) & 1) != 0)
      return 1;
    v2 = *(_DWORD *)(a1 + 288);
  }
  if ((v2 & 0x4000) != 0)
    return 1;
  if ((v2 & 0x200000) != 0)
  {
    if ((GEOPDResultRefinementQueryIsDirty(*(os_unfair_lock_s **)(a1 + 192)) & 1) != 0)
      return 1;
    v2 = *(_DWORD *)(a1 + 288);
  }
  if ((v2 & 0x82C00) != 0)
    return 1;
  if ((v2 & 0x800000) == 0)
    goto LABEL_21;
  if (GEOPDSearchOriginationInfoIsDirty(*(_QWORD *)(a1 + 208)))
    return 1;
  v2 = *(_DWORD *)(a1 + 288);
LABEL_21:
  if ((v2 & 0x3408000) != 0)
    return 1;
  return (v2 >> 18) & 1;
}

os_unfair_lock_s *GEOPDCategorySearchParametersIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOPDCategorySearchParametersIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 64);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_188B28424(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B29158(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDCategorySearchResultReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint32x4_t v13;
  int8x16_t v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  char v20;
  unsigned __int8 v21;
  int *v22;
  int *v23;
  int *v24;
  int *v25;
  char v26;
  unsigned int v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  BOOL v33;
  int v34;
  unint64_t v36;
  BOOL v37;
  int *v38;
  int v39;
  int v40;
  BOOL v41;
  char v42;
  GEOMapRegion *v43;
  uint64_t v44;
  char v45;
  unsigned int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  char v51;
  char v52;
  char v53;
  char v54;
  unsigned int v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  char v60;
  char v61;
  char v62;
  char v63;
  char v64;
  char v65;
  char v66;
  unsigned int v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  char v72;
  char v73;
  unsigned int v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  char v79;
  id v80;
  void *v81;
  int v82;
  char v83;
  unsigned int v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  char v89;
  char v90;
  char v91;
  unsigned int v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  char v96;
  char v97;
  char v98;
  char v99;
  void *v100;
  char v101;
  BOOL v102;
  uint64_t v103;
  uint64_t v104;
  char v105;
  int v106;
  char v107;
  char v108;
  char v109;
  char v110;
  char v111;
  char v112;
  char v113;
  char v114;
  char v115;
  char v116;
  char v117;
  int v118;
  int v119;
  void *v120;
  int v122;
  char v123;
  char v124;
  char v125;
  BOOL v126;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 168));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 164);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 160));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = *(_DWORD *)(a1 + 184);
  v13 = (uint32x4_t)vdupq_n_s32(v12);
  v14.i64[0] = 0x100000001;
  v14.i64[1] = 0x100000001;
  v15 = vaddvq_s32(vaddq_s32(vaddq_s32((int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v13, (uint32x4_t)xmmword_189CC9DB0), v14), (int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v13, (uint32x4_t)xmmword_189CC9DC0), v14)), vaddq_s32((int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v13, (uint32x4_t)xmmword_189CC9D90), v14), (int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v13, (uint32x4_t)xmmword_189CC9DA0), v14))))+ ((v12 >> 15) & 1)+ ((v12 >> 6) & 1);
  while (2)
  {
    v16 = 1;
    v17 = 1;
    v18 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v15;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v17 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v19 = v15 > 0xD;
        v20 = v19 & ~(_BYTE)v11 | v9;
        v21 = v19 | v11;
        v123 = v20;
        v124 = v21 | v20;
        if (((v21 | v8) & 1) != 0)
          v22 = 0;
        else
          v22 = a3;
        v23 = (int *)MEMORY[0x1E0D82BF0];
        v24 = (int *)MEMORY[0x1E0D82BC8];
        v125 = (v22 == 0) | v21;
        v126 = v21;
        v25 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v15;
LABEL_7:
        v16 = v9;
LABEL_8:
        v17 = v10;
        v18 = v11;
LABEL_10:
        ++v7;
        v9 = v16;
        v10 = v17;
        v11 = v18;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v23) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v24))
      goto LABEL_236;
    v26 = 0;
    v27 = 0;
    v28 = 0;
    while (1)
    {
      v29 = *v23;
      v30 = *(_QWORD *)(v3 + v29);
      v31 = v30 + 1;
      if (v30 == -1 || v31 > *(_QWORD *)(v3 + *v6))
        break;
      v32 = *(_BYTE *)(*(_QWORD *)(v3 + *v25) + v30);
      *(_QWORD *)(v3 + v29) = v31;
      v28 |= (unint64_t)(v32 & 0x7F) << v26;
      if ((v32 & 0x80) == 0)
        goto LABEL_25;
      v26 += 7;
      v33 = v27++ >= 9;
      if (v33)
      {
        v28 = 0;
        v34 = *(unsigned __int8 *)(v3 + *v24);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v24) = 1;
LABEL_25:
    v34 = *(unsigned __int8 *)(v3 + *v24);
    if (*(_BYTE *)(v3 + *v24))
      v28 = 0;
LABEL_27:
    if (v34 || (v28 & 7) == 4)
    {
LABEL_236:
      v122 = 1;
      goto LABEL_237;
    }
    v36 = v28 >> 3;
    v37 = v126;
    if ((v125 & 1) == 0)
    {
      v38 = v22;
      do
      {
        v40 = *v38++;
        v39 = v40;
        v37 = v40 != 0;
        if (v40)
          v41 = v39 == (_DWORD)v36;
        else
          v41 = 1;
      }
      while (!v41);
    }
    switch((int)v36)
    {
      case 1:
        if (!v37)
          goto LABEL_180;
        if ((*(_BYTE *)(a1 + 185) & 8) == 0)
        {
          v42 = PBReaderPlaceMark();
          v6 = (int *)MEMORY[0x1E0D82BD8];
          if ((v42 & 1) == 0)
            goto LABEL_267;
          v43 = objc_alloc_init(GEOMapRegion);
          if (GEOMapRegionReadAllFrom((uint64_t)v43, (void *)v3))
          {
            PBReaderRecallMark();
            v44 = 56;
            goto LABEL_179;
          }
          goto LABEL_266;
        }
        v105 = PBReaderSkipValueWithTag();
        v6 = (int *)MEMORY[0x1E0D82BD8];
        if ((v105 & 1) == 0)
          goto LABEL_267;
        v106 = (int)(*(_DWORD *)(a1 + 184) << 20) >> 31;
        goto LABEL_232;
      case 2:
        if ((v8 & 1) == 0)
          goto LABEL_180;
        v45 = 0;
        v46 = 0;
        v47 = 0;
        *(_DWORD *)(a1 + 184) |= 0x20u;
        v6 = (int *)MEMORY[0x1E0D82BD8];
        while (2)
        {
          v48 = *v23;
          v49 = *(_QWORD *)(v3 + v48);
          v50 = v49 + 1;
          if (v49 == -1 || v50 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v24) = 1;
          }
          else
          {
            v51 = *(_BYTE *)(*(_QWORD *)(v3 + *v25) + v49);
            *(_QWORD *)(v3 + v48) = v50;
            v47 |= (unint64_t)(v51 & 0x7F) << v45;
            if (v51 < 0)
            {
              v45 += 7;
              v33 = v46++ >= 9;
              if (v33)
              {
                v47 = 0;
                goto LABEL_185;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v24))
          v47 = 0;
LABEL_185:
        v102 = v47 != 0;
        v103 = 183;
        goto LABEL_202;
      case 3:
        if (!v37 || (*(_BYTE *)(a1 + 186) & 2) != 0)
          goto LABEL_180;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_267;
        v43 = objc_alloc_init(GEOPDRelatedSearchSuggestion);
        if (!GEOPDRelatedSearchSuggestionReadAllFrom((uint64_t)v43, (void *)v3, v10 & 1))
          goto LABEL_266;
        PBReaderRecallMark();
        -[GEOPDCategorySearchResult _addNoFlagsRelatedSearchSuggestion:](a1, v43);
        goto LABEL_100;
      case 4:
        if (!v37 || (*(_BYTE *)(a1 + 186) & 4) != 0)
          goto LABEL_180;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_267;
        v43 = objc_alloc_init(GEOPDResultDetourInfo);
        if (!GEOPDResultDetourInfoReadAllFrom((uint64_t)v43, (void *)v3))
          goto LABEL_266;
        PBReaderRecallMark();
        -[GEOPDCategorySearchResult _addNoFlagsResultDetourInfo:](a1, v43);
        goto LABEL_100;
      case 5:
        if (!v37)
          goto LABEL_180;
        if ((*(_BYTE *)(a1 + 185) & 4) != 0)
        {
          v107 = PBReaderSkipValueWithTag();
          v6 = (int *)MEMORY[0x1E0D82BD8];
          if ((v107 & 1) == 0)
            goto LABEL_267;
          v106 = (int)(*(_DWORD *)(a1 + 184) << 21) >> 31;
          goto LABEL_232;
        }
        v52 = PBReaderPlaceMark();
        v6 = (int *)MEMORY[0x1E0D82BD8];
        if ((v52 & 1) == 0)
          goto LABEL_267;
        v43 = objc_alloc_init(GEOPDRelatedSearchSuggestion);
        if (!GEOPDRelatedSearchSuggestionReadAllFrom((uint64_t)v43, (void *)v3, v10 & 1))
          goto LABEL_266;
        PBReaderRecallMark();
        v44 = 48;
        goto LABEL_179;
      case 6:
        if (!v37)
          goto LABEL_180;
        if ((*(_BYTE *)(a1 + 186) & 0x10) != 0)
        {
          v108 = PBReaderSkipValueWithTag();
          v6 = (int *)MEMORY[0x1E0D82BD8];
          if ((v108 & 1) == 0)
            goto LABEL_267;
          v106 = (int)(*(_DWORD *)(a1 + 184) << 11) >> 31;
          goto LABEL_232;
        }
        v53 = PBReaderPlaceMark();
        v6 = (int *)MEMORY[0x1E0D82BD8];
        if ((v53 & 1) == 0)
          goto LABEL_267;
        v43 = objc_alloc_init(GEOPDSearchClientBehavior);
        if (!GEOPDSearchClientBehaviorReadAllFrom((uint64_t)v43, (void *)v3))
          goto LABEL_266;
        PBReaderRecallMark();
        v44 = 128;
        goto LABEL_179;
      case 7:
        if ((v8 & 1) == 0)
          goto LABEL_180;
        v54 = 0;
        v55 = 0;
        v56 = 0;
        *(_DWORD *)(a1 + 184) |= 8u;
        v6 = (int *)MEMORY[0x1E0D82BD8];
        while (2)
        {
          v57 = *v23;
          v58 = *(_QWORD *)(v3 + v57);
          v59 = v58 + 1;
          if (v58 == -1 || v59 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v24) = 1;
          }
          else
          {
            v60 = *(_BYTE *)(*(_QWORD *)(v3 + *v25) + v58);
            *(_QWORD *)(v3 + v57) = v59;
            v56 |= (unint64_t)(v60 & 0x7F) << v54;
            if (v60 < 0)
            {
              v54 += 7;
              v33 = v55++ >= 9;
              if (v33)
              {
                v56 = 0;
                goto LABEL_189;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v24))
          v56 = 0;
LABEL_189:
        v102 = v56 != 0;
        v103 = 181;
        goto LABEL_202;
      case 8:
        if (!v37 || (*(_BYTE *)(a1 + 185) & 1) != 0)
          goto LABEL_180;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_267;
        v43 = objc_alloc_init(GEOPDBrowseCategory);
        if (!GEOPDBrowseCategoryReadAllFrom((uint64_t)v43, (void *)v3, v10 & 1))
          goto LABEL_266;
        PBReaderRecallMark();
        -[GEOPDCategorySearchResult _addNoFlagsBrowseCategory:](a1, v43);
        goto LABEL_100;
      case 9:
        if (!v37)
          goto LABEL_180;
        if ((*(_BYTE *)(a1 + 185) & 2) != 0)
        {
          v109 = PBReaderSkipValueWithTag();
          v6 = (int *)MEMORY[0x1E0D82BD8];
          if ((v109 & 1) == 0)
            goto LABEL_267;
          v106 = (int)(*(_DWORD *)(a1 + 184) << 22) >> 31;
          goto LABEL_232;
        }
        v61 = PBReaderPlaceMark();
        v6 = (int *)MEMORY[0x1E0D82BD8];
        if ((v61 & 1) == 0)
          goto LABEL_267;
        v43 = objc_alloc_init(GEOPDSCategorySearchResultSection);
        if (!GEOPDSCategorySearchResultSectionReadAllFrom((uint64_t)v43, (void *)v3, v10 & 1))
          goto LABEL_266;
        PBReaderRecallMark();
        v44 = 40;
        goto LABEL_179;
      case 10:
        if (!v37 || (*(_BYTE *)(a1 + 186) & 1) != 0)
          goto LABEL_180;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_267;
        v43 = objc_alloc_init(GEOPDRelatedEntitySection);
        if (!GEOPDRelatedEntitySectionReadAllFrom((uint64_t)v43, (void *)v3, v10 & 1))
          goto LABEL_266;
        PBReaderRecallMark();
        -[GEOPDCategorySearchResult _addNoFlagsRelatedEntitySection:](a1, v43);
        goto LABEL_100;
      case 11:
        if (!v37 || (*(_BYTE *)(a1 + 186) & 0x40) != 0)
          goto LABEL_180;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_267;
        v43 = objc_alloc_init(GEOPDSSearchTierMetadata);
        if (!GEOPDSSearchTierMetadataReadAllFrom((uint64_t)v43, (void *)v3))
          goto LABEL_266;
        PBReaderRecallMark();
        -[GEOPDCategorySearchResult _addNoFlagsSearchTierMetadata:](a1, v43);
LABEL_100:

        v24 = (int *)MEMORY[0x1E0D82BC8];
        v6 = (int *)MEMORY[0x1E0D82BD8];
        goto LABEL_234;
      case 12:
        if (!v37)
          goto LABEL_180;
        if ((*(_BYTE *)(a1 + 186) & 8) != 0)
        {
          v110 = PBReaderSkipValueWithTag();
          v6 = (int *)MEMORY[0x1E0D82BD8];
          if ((v110 & 1) == 0)
            goto LABEL_267;
          v106 = (int)(*(_DWORD *)(a1 + 184) << 12) >> 31;
          goto LABEL_232;
        }
        v62 = PBReaderPlaceMark();
        v6 = (int *)MEMORY[0x1E0D82BD8];
        if ((v62 & 1) == 0)
          goto LABEL_267;
        v43 = objc_alloc_init(GEOPDResultRefinementGroup);
        if (!GEOPDResultRefinementGroupReadAllFrom((uint64_t)v43, (void *)v3, v10 & 1))
          goto LABEL_266;
        PBReaderRecallMark();
        v44 = 120;
        goto LABEL_179;
      case 13:
        if (!v37)
          goto LABEL_180;
        if ((*(_BYTE *)(a1 + 184) & 0x80) != 0)
        {
          v111 = PBReaderSkipValueWithTag();
          v6 = (int *)MEMORY[0x1E0D82BD8];
          if ((v111 & 1) == 0)
            goto LABEL_267;
          v106 = (int)(*(_DWORD *)(a1 + 184) << 24) >> 31;
          goto LABEL_232;
        }
        v63 = PBReaderPlaceMark();
        v6 = (int *)MEMORY[0x1E0D82BD8];
        if ((v63 & 1) == 0)
          goto LABEL_267;
        v43 = objc_alloc_init(GEOPDSSearchAutoRedoThreshold);
        if (!GEOPDSSearchAutoRedoThresholdReadAllFrom((uint64_t)v43, (void *)v3))
          goto LABEL_266;
        PBReaderRecallMark();
        v44 = 24;
        goto LABEL_179;
      case 14:
        if (!v37)
          goto LABEL_180;
        if ((*(_BYTE *)(a1 + 185) & 0x40) != 0)
        {
          v112 = PBReaderSkipValueWithTag();
          v6 = (int *)MEMORY[0x1E0D82BD8];
          if ((v112 & 1) == 0)
            goto LABEL_267;
          v106 = (int)(*(_DWORD *)(a1 + 184) << 17) >> 31;
          goto LABEL_232;
        }
        v64 = PBReaderPlaceMark();
        v6 = (int *)MEMORY[0x1E0D82BD8];
        if ((v64 & 1) == 0)
          goto LABEL_267;
        v43 = objc_alloc_init(GEOPDPlaceSummaryLayoutMetadata);
        if (!GEOPDPlaceSummaryLayoutMetadataReadAllFrom((uint64_t)v43, (void *)v3, v10 & 1))
          goto LABEL_266;
        PBReaderRecallMark();
        v44 = 80;
        goto LABEL_179;
      case 15:
        if (!v37)
          goto LABEL_180;
        if ((*(_BYTE *)(a1 + 186) & 0x80) != 0)
        {
          v113 = PBReaderSkipValueWithTag();
          v6 = (int *)MEMORY[0x1E0D82BD8];
          if ((v113 & 1) == 0)
            goto LABEL_267;
          v106 = (int)(*(_DWORD *)(a1 + 184) << 8) >> 31;
          goto LABEL_232;
        }
        v65 = PBReaderPlaceMark();
        v6 = (int *)MEMORY[0x1E0D82BD8];
        if ((v65 & 1) == 0)
          goto LABEL_267;
        v43 = objc_alloc_init(GEOPDSearchSectionList);
        if (!GEOPDSearchSectionListReadAllFrom((uint64_t)v43, (void *)v3, v10 & 1))
          goto LABEL_266;
        PBReaderRecallMark();
        v44 = 152;
        goto LABEL_179;
      case 16:
        if ((v8 & 1) == 0)
          goto LABEL_180;
        v66 = 0;
        v67 = 0;
        v68 = 0;
        *(_DWORD *)(a1 + 184) |= 4u;
        v6 = (int *)MEMORY[0x1E0D82BD8];
        while (2)
        {
          v69 = *v23;
          v70 = *(_QWORD *)(v3 + v69);
          v71 = v70 + 1;
          if (v70 == -1 || v71 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v24) = 1;
          }
          else
          {
            v72 = *(_BYTE *)(*(_QWORD *)(v3 + *v25) + v70);
            *(_QWORD *)(v3 + v69) = v71;
            v68 |= (unint64_t)(v72 & 0x7F) << v66;
            if (v72 < 0)
            {
              v66 += 7;
              v33 = v67++ >= 9;
              if (v33)
              {
                v68 = 0;
                goto LABEL_193;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v24))
          v68 = 0;
LABEL_193:
        v102 = v68 != 0;
        v103 = 180;
        goto LABEL_202;
      case 17:
        if ((v8 & 1) == 0)
          goto LABEL_180;
        v73 = 0;
        v74 = 0;
        v75 = 0;
        *(_DWORD *)(a1 + 184) |= 2u;
        v6 = (int *)MEMORY[0x1E0D82BD8];
        while (2)
        {
          v76 = *v23;
          v77 = *(_QWORD *)(v3 + v76);
          v78 = v77 + 1;
          if (v77 == -1 || v78 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v24) = 1;
          }
          else
          {
            v79 = *(_BYTE *)(*(_QWORD *)(v3 + *v25) + v77);
            *(_QWORD *)(v3 + v76) = v78;
            v75 |= (unint64_t)(v79 & 0x7F) << v73;
            if (v79 < 0)
            {
              v73 += 7;
              v33 = v74++ >= 9;
              if (v33)
              {
                LODWORD(v75) = 0;
                goto LABEL_197;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v24))
          LODWORD(v75) = 0;
LABEL_197:
        v104 = 176;
        goto LABEL_207;
      case 19:
        if ((v8 & 1) == 0)
          goto LABEL_180;
        v83 = 0;
        v84 = 0;
        v85 = 0;
        *(_DWORD *)(a1 + 184) |= 0x10u;
        v6 = (int *)MEMORY[0x1E0D82BD8];
        while (2)
        {
          v86 = *v23;
          v87 = *(_QWORD *)(v3 + v86);
          v88 = v87 + 1;
          if (v87 == -1 || v88 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v24) = 1;
          }
          else
          {
            v89 = *(_BYTE *)(*(_QWORD *)(v3 + *v25) + v87);
            *(_QWORD *)(v3 + v86) = v88;
            v85 |= (unint64_t)(v89 & 0x7F) << v83;
            if (v89 < 0)
            {
              v83 += 7;
              v33 = v84++ >= 9;
              if (v33)
              {
                v85 = 0;
                goto LABEL_201;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v24))
          v85 = 0;
LABEL_201:
        v102 = v85 != 0;
        v103 = 182;
LABEL_202:
        *(_BYTE *)(a1 + v103) = v102;
        goto LABEL_235;
      case 20:
        if (!v37)
          goto LABEL_180;
        if ((*(_BYTE *)(a1 + 186) & 0x20) != 0)
        {
          v114 = PBReaderSkipValueWithTag();
          v6 = (int *)MEMORY[0x1E0D82BD8];
          if ((v114 & 1) == 0)
            goto LABEL_267;
          v106 = (int)(*(_DWORD *)(a1 + 184) << 10) >> 31;
          goto LABEL_232;
        }
        v90 = PBReaderPlaceMark();
        v6 = (int *)MEMORY[0x1E0D82BD8];
        if ((v90 & 1) == 0)
          goto LABEL_267;
        v43 = objc_alloc_init(GEOPDSSearchSessionData);
        if (!GEOPDSSearchSessionDataReadAllFrom((uint64_t)v43, (void *)v3))
          goto LABEL_266;
        PBReaderRecallMark();
        v44 = 136;
        goto LABEL_179;
      case 21:
        if ((v8 & 1) == 0)
          goto LABEL_180;
        v91 = 0;
        v92 = 0;
        v75 = 0;
        *(_DWORD *)(a1 + 184) |= 1u;
        v6 = (int *)MEMORY[0x1E0D82BD8];
        while (2)
        {
          v93 = *v23;
          v94 = *(_QWORD *)(v3 + v93);
          v95 = v94 + 1;
          if (v94 == -1 || v95 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v24) = 1;
          }
          else
          {
            v96 = *(_BYTE *)(*(_QWORD *)(v3 + *v25) + v94);
            *(_QWORD *)(v3 + v93) = v95;
            v75 |= (unint64_t)(v96 & 0x7F) << v91;
            if (v96 < 0)
            {
              v91 += 7;
              v33 = v92++ >= 9;
              if (v33)
              {
                LODWORD(v75) = 0;
                goto LABEL_206;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v24))
          LODWORD(v75) = 0;
LABEL_206:
        v104 = 172;
LABEL_207:
        *(_DWORD *)(a1 + v104) = v75;
        goto LABEL_235;
      case 22:
        if (!v37)
          goto LABEL_180;
        if ((*(_BYTE *)(a1 + 185) & 0x10) != 0)
        {
          v115 = PBReaderSkipValueWithTag();
          v6 = (int *)MEMORY[0x1E0D82BD8];
          if ((v115 & 1) == 0)
            goto LABEL_267;
          v106 = (int)(*(_DWORD *)(a1 + 184) << 19) >> 31;
          goto LABEL_232;
        }
        v97 = PBReaderPlaceMark();
        v6 = (int *)MEMORY[0x1E0D82BD8];
        if ((v97 & 1) == 0)
          goto LABEL_267;
        v43 = objc_alloc_init(GEOPDGuideSummaryLayoutMetadata);
        if (!GEOPDGuideSummaryLayoutMetadataReadAllFrom((uint64_t)v43, (void *)v3))
          goto LABEL_266;
        PBReaderRecallMark();
        v44 = 64;
        goto LABEL_179;
      case 23:
        if (!v37)
          goto LABEL_180;
        if ((*(_BYTE *)(a1 + 185) & 0x20) != 0)
        {
          v116 = PBReaderSkipValueWithTag();
          v6 = (int *)MEMORY[0x1E0D82BD8];
          if ((v116 & 1) == 0)
            goto LABEL_267;
          v106 = (int)(*(_DWORD *)(a1 + 184) << 18) >> 31;
          goto LABEL_232;
        }
        v98 = PBReaderPlaceMark();
        v6 = (int *)MEMORY[0x1E0D82BD8];
        if ((v98 & 1) == 0)
          goto LABEL_267;
        v43 = objc_alloc_init(GEOPDPaginationInfo);
        if (!GEOPDPaginationInfoReadAllFrom((uint64_t)v43, (void *)v3, v10 & 1))
          goto LABEL_266;
        PBReaderRecallMark();
        v44 = 72;
        goto LABEL_179;
      case 24:
        if (!v37)
          goto LABEL_180;
        if ((*(_BYTE *)(a1 + 185) & 0x80) != 0)
        {
          v117 = PBReaderSkipValueWithTag();
          v6 = (int *)MEMORY[0x1E0D82BD8];
          if ((v117 & 1) == 0)
            goto LABEL_267;
          v106 = (int)(*(_DWORD *)(a1 + 184) << 16) >> 31;
LABEL_232:
          v7 += v106;
LABEL_233:
          v24 = (int *)MEMORY[0x1E0D82BC8];
LABEL_234:
          v25 = (int *)MEMORY[0x1E0D82BB8];
LABEL_235:
          if (!(v124 & 1 | (v7 != 0)))
            goto LABEL_236;
          continue;
        }
        v99 = PBReaderPlaceMark();
        v6 = (int *)MEMORY[0x1E0D82BD8];
        if ((v99 & 1) == 0)
          goto LABEL_267;
        v43 = objc_alloc_init(GEOPDSSearchRedoButtonThreshold);
        if (GEOPDSSearchRedoButtonThresholdReadAllFrom((uint64_t)v43, (void *)v3))
        {
          PBReaderRecallMark();
          v44 = 88;
LABEL_179:
          v100 = *(void **)(a1 + v44);
          *(_QWORD *)(a1 + v44) = v43;

          --v7;
          goto LABEL_233;
        }
LABEL_266:

LABEL_267:
        v122 = 0;
        v24 = (int *)MEMORY[0x1E0D82BC8];
LABEL_237:
        if ((v123 & 1) != 0)
LABEL_238:
          *(_DWORD *)(a1 + 184) |= 0x40u;
        if (v126 || (v122 & 1) == 0)
        {
          *(_DWORD *)(a1 + 184) |= 0x800u;
          *(_DWORD *)(a1 + 184) |= 0x20000u;
          *(_DWORD *)(a1 + 184) |= 0x40000u;
          *(_DWORD *)(a1 + 184) |= 0x400u;
          *(_DWORD *)(a1 + 184) |= 0x100000u;
          *(_DWORD *)(a1 + 184) |= 0x100u;
          *(_DWORD *)(a1 + 184) |= 0x200u;
          *(_DWORD *)(a1 + 184) |= 0x10000u;
          *(_DWORD *)(a1 + 184) |= 0x400000u;
          *(_DWORD *)(a1 + 184) |= 0x80000u;
          *(_DWORD *)(a1 + 184) |= 0x80u;
          *(_DWORD *)(a1 + 184) |= 0x4000u;
          *(_DWORD *)(a1 + 184) |= 0x800000u;
          *(_DWORD *)(a1 + 184) |= 0x200000u;
          *(_DWORD *)(a1 + 184) |= 0x1000u;
          *(_DWORD *)(a1 + 184) |= 0x2000u;
          *(_DWORD *)(a1 + 184) |= 0x8000u;
        }
        else if (v22)
        {
          while (1)
          {
            v118 = *v22++;
            v119 = 2048;
            switch(v118)
            {
              case 0:
                goto LABEL_260;
              case 1:
                goto LABEL_259;
              case 3:
                v119 = 0x20000;
                goto LABEL_259;
              case 4:
                v119 = 0x40000;
                goto LABEL_259;
              case 5:
                v119 = 1024;
                goto LABEL_259;
              case 6:
                v119 = 0x100000;
                goto LABEL_259;
              case 8:
                v119 = 256;
                goto LABEL_259;
              case 9:
                v119 = 512;
                goto LABEL_259;
              case 10:
                v119 = 0x10000;
                goto LABEL_259;
              case 11:
                v119 = 0x400000;
                goto LABEL_259;
              case 12:
                v119 = 0x80000;
                goto LABEL_259;
              case 13:
                v119 = 128;
                goto LABEL_259;
              case 14:
                v119 = 0x4000;
                goto LABEL_259;
              case 15:
                v119 = 0x800000;
                goto LABEL_259;
              case 20:
                v119 = 0x200000;
                goto LABEL_259;
              case 22:
                v119 = 4096;
                goto LABEL_259;
              case 23:
                v119 = 0x2000;
                goto LABEL_259;
              case 24:
                v119 = 0x8000;
LABEL_259:
                *(_DWORD *)(a1 + 184) |= v119;
                break;
              default:
                continue;
            }
          }
        }
LABEL_260:
        if (v122)
          v3 = *(_BYTE *)(v3 + *v24) == 0;
        else
          v3 = 0;
        if (v126)
        {
          v120 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      default:
        if ((v123 & 1) == 0 || (*(_BYTE *)(a1 + 184) & 0x40) != 0)
        {
LABEL_180:
          v101 = PBReaderSkipValueWithTag();
          v25 = (int *)MEMORY[0x1E0D82BB8];
          v24 = (int *)MEMORY[0x1E0D82BC8];
          v6 = (int *)MEMORY[0x1E0D82BD8];
          if ((v101 & 1) == 0)
          {
            v122 = 0;
            goto LABEL_237;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v80 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v81 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v80;

          }
          v82 = PBUnknownFieldAdd();
          v24 = (int *)MEMORY[0x1E0D82BC8];
          v6 = (int *)MEMORY[0x1E0D82BD8];
          v25 = (int *)MEMORY[0x1E0D82BB8];
          if (!v82)
          {
            v122 = 0;
            goto LABEL_238;
          }
        }
        goto LABEL_235;
    }
  }
}

void sub_188B2A704(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B2A8F0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B2AADC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B2AC34(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B2AD8C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B2AF78(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B2B0D0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B2B30C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B2B438(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B2B58C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B2B6E4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B2B83C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B2BA00(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B2BBC4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B2BD88(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B2CDC8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B2CEA8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDCategorySearchResultCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  _BYTE v46[128];
  _BYTE v47[128];
  _BYTE v48[128];
  _BYTE v49[128];
  _BYTE v50[128];
  uint64_t v51;

  v51 = *MEMORY[0x1E0C80C00];
  objc_msgSend(*(id *)(a1 + 56), "readAll:", 1);
  v44 = 0u;
  v45 = 0u;
  v42 = 0u;
  v43 = 0u;
  v2 = *(id *)(a1 + 104);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v42, v50, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v43;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v43 != v5)
          objc_enumerationMutation(v2);
        -[GEOPDRelatedSearchSuggestion readAll:](*(_QWORD *)(*((_QWORD *)&v42 + 1) + 8 * v6++), 1);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v42, v50, 16);
    }
    while (v4);
  }

  v40 = 0u;
  v41 = 0u;
  v38 = 0u;
  v39 = 0u;
  v7 = *(id *)(a1 + 112);
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v38, v49, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v39;
    do
    {
      v11 = 0;
      do
      {
        if (*(_QWORD *)v39 != v10)
          objc_enumerationMutation(v7);
        objc_msgSend(*(id *)(*((_QWORD *)&v38 + 1) + 8 * v11++), "readAll:", 1);
      }
      while (v9 != v11);
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v38, v49, 16);
    }
    while (v9);
  }

  -[GEOPDRelatedSearchSuggestion readAll:](*(_QWORD *)(a1 + 48), 1);
  v36 = 0u;
  v37 = 0u;
  v34 = 0u;
  v35 = 0u;
  v12 = *(id *)(a1 + 32);
  v13 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v34, v48, 16);
  if (v13)
  {
    v14 = v13;
    v15 = *(_QWORD *)v35;
    do
    {
      v16 = 0;
      do
      {
        if (*(_QWORD *)v35 != v15)
          objc_enumerationMutation(v12);
        -[GEOPDBrowseCategory readAll:](*(_QWORD *)(*((_QWORD *)&v34 + 1) + 8 * v16++), 1);
      }
      while (v14 != v16);
      v14 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v34, v48, 16);
    }
    while (v14);
  }

  -[GEOPDSCategorySearchResultSection readAll:](*(_QWORD *)(a1 + 40), 1);
  v32 = 0u;
  v33 = 0u;
  v30 = 0u;
  v31 = 0u;
  v17 = *(id *)(a1 + 96);
  v18 = objc_msgSend(v17, "countByEnumeratingWithState:objects:count:", &v30, v47, 16);
  if (v18)
  {
    v19 = v18;
    v20 = *(_QWORD *)v31;
    do
    {
      v21 = 0;
      do
      {
        if (*(_QWORD *)v31 != v20)
          objc_enumerationMutation(v17);
        -[GEOPDRelatedEntitySection readAll:](*(_QWORD *)(*((_QWORD *)&v30 + 1) + 8 * v21++), 1);
      }
      while (v19 != v21);
      v19 = objc_msgSend(v17, "countByEnumeratingWithState:objects:count:", &v30, v47, 16);
    }
    while (v19);
  }

  v28 = 0u;
  v29 = 0u;
  v26 = 0u;
  v27 = 0u;
  v22 = *(id *)(a1 + 144);
  v23 = objc_msgSend(v22, "countByEnumeratingWithState:objects:count:", &v26, v46, 16);
  if (v23)
  {
    v24 = v23;
    v25 = *(_QWORD *)v27;
    while (1)
    {
      if (*(_QWORD *)v27 != v25)
        objc_enumerationMutation(v22);
      if (!--v24)
      {
        v24 = objc_msgSend(v22, "countByEnumeratingWithState:objects:count:", &v26, v46, 16);
        if (!v24)
          break;
      }
    }
  }

  -[GEOPDResultRefinementGroup readAll:](*(_QWORD *)(a1 + 120), 1);
  objc_msgSend(*(id *)(a1 + 80), "readAll:", 1, v26);
  -[GEOPDPaginationInfo readAll:](*(_QWORD *)(a1 + 72), 1);
}

unint64_t GEOPDCategorySearchResultReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 164))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDCategorySearchResultReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 168));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 160) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 164) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDCategorySearchResultReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDCategorySearchResultReadAllFrom_initialTag;
  Specified = GEOPDCategorySearchResultReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDCategorySearchResultCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 168));
  return Specified;
}

void sub_188B2D4BC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDResultDetourInfoIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int v20;
  BOOL v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  int v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  int v31;
  unsigned int v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  int v36;
  _BOOL8 v37;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      if (v14 || (v8 & 7) == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0)
            goto LABEL_57;
          v16 = 0;
          while (1)
          {
            v17 = *v2;
            v18 = *(_QWORD *)&a1[v17];
            v19 = v18 + 1;
            if (v18 == -1 || v19 > *(_QWORD *)&a1[*v3])
              goto LABEL_53;
            v20 = *(char *)(*(_QWORD *)&a1[*v5] + v18);
            *(_QWORD *)&a1[v17] = v19;
            if (v20 < 0)
            {
              v21 = v16++ > 8;
              if (!v21)
                continue;
            }
            goto LABEL_54;
          }
        case 2u:
          if ((v8 & 7) != 0)
            goto LABEL_57;
          v22 = 0;
          while (1)
          {
            v23 = *v2;
            v24 = *(_QWORD *)&a1[v23];
            v25 = v24 + 1;
            if (v24 == -1 || v25 > *(_QWORD *)&a1[*v3])
              goto LABEL_53;
            v26 = *(char *)(*(_QWORD *)&a1[*v5] + v24);
            *(_QWORD *)&a1[v23] = v25;
            if (v26 < 0)
            {
              v21 = v22++ > 8;
              if (!v21)
                continue;
            }
            goto LABEL_54;
          }
        case 3u:
          if ((v8 & 7) != 0)
            goto LABEL_57;
          v27 = 0;
          while (1)
          {
            v28 = *v2;
            v29 = *(_QWORD *)&a1[v28];
            v30 = v29 + 1;
            if (v29 == -1 || v30 > *(_QWORD *)&a1[*v3])
              goto LABEL_53;
            v31 = *(char *)(*(_QWORD *)&a1[*v5] + v29);
            *(_QWORD *)&a1[v28] = v30;
            if (v31 < 0)
            {
              v21 = v27++ > 8;
              if (!v21)
                continue;
            }
            goto LABEL_54;
          }
        case 4u:
          if ((v8 & 7) != 0)
            goto LABEL_57;
          v32 = 0;
          break;
        default:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_57:
          v37 = 0;
          goto LABEL_56;
      }
      while (1)
      {
        v33 = *v2;
        v34 = *(_QWORD *)&a1[v33];
        v35 = v34 + 1;
        if (v34 == -1 || v35 > *(_QWORD *)&a1[*v3])
          break;
        v36 = *(char *)(*(_QWORD *)&a1[*v5] + v34);
        *(_QWORD *)&a1[v33] = v35;
        if (v36 < 0)
        {
          v21 = v32++ > 8;
          if (!v21)
            continue;
        }
        goto LABEL_54;
      }
LABEL_53:
      a1[*v4] = 1;
LABEL_54:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v37 = a1[*v4] == 0;
LABEL_56:
  PBReaderRecallMark();
  return v37;
}

BOOL GEOPDSearchClientBehaviorIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int v20;
  BOOL v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  int v26;
  _BOOL8 v27;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_39;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      if (v14 || (v8 & 7) == 4)
        goto LABEL_39;
      if ((v8 >> 3) == 2)
        break;
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0)
          goto LABEL_41;
        v16 = 0;
        while (1)
        {
          v17 = *v2;
          v18 = *(_QWORD *)&a1[v17];
          v19 = v18 + 1;
          if (v18 == -1 || v19 > *(_QWORD *)&a1[*v3])
            break;
          v20 = *(char *)(*(_QWORD *)&a1[*v5] + v18);
          *(_QWORD *)&a1[v17] = v19;
          if (v20 < 0)
          {
            v21 = v16++ > 8;
            if (!v21)
              continue;
          }
          goto LABEL_38;
        }
LABEL_36:
        a1[*v4] = 1;
        goto LABEL_38;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_41:
        v27 = 0;
        goto LABEL_40;
      }
LABEL_38:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_39;
    }
    if ((v8 & 7) != 0)
      goto LABEL_41;
    v22 = 0;
    while (1)
    {
      v23 = *v2;
      v24 = *(_QWORD *)&a1[v23];
      v25 = v24 + 1;
      if (v24 == -1 || v25 > *(_QWORD *)&a1[*v3])
        goto LABEL_36;
      v26 = *(char *)(*(_QWORD *)&a1[*v5] + v24);
      *(_QWORD *)&a1[v23] = v25;
      if (v26 < 0)
      {
        v21 = v22++ > 8;
        if (!v21)
          continue;
      }
      goto LABEL_38;
    }
  }
LABEL_39:
  v27 = a1[*v4] == 0;
LABEL_40:
  PBReaderRecallMark();
  return v27;
}

BOOL GEOPDPaginationInfoIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  _BOOL8 v28;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2)
            goto LABEL_44;
          goto LABEL_22;
        case 2u:
          if (v15 == 2)
            goto LABEL_22;
          goto LABEL_44;
        case 4u:
          if ((v8 & 7) != 0)
            goto LABEL_44;
          v17 = 0;
          while (1)
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
              goto LABEL_40;
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if (v21 < 0)
            {
              v22 = v17++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_41;
          }
        case 5u:
          if ((v8 & 7) != 0)
            goto LABEL_44;
          v23 = 0;
          break;
        default:
LABEL_22:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_44:
          v28 = 0;
          goto LABEL_43;
      }
      while (1)
      {
        v24 = *v2;
        v25 = *(_QWORD *)&a1[v24];
        v26 = v25 + 1;
        if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
          break;
        v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
        *(_QWORD *)&a1[v24] = v26;
        if (v27 < 0)
        {
          v22 = v23++ > 8;
          if (!v22)
            continue;
        }
        goto LABEL_41;
      }
LABEL_40:
      a1[*v4] = 1;
LABEL_41:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v28 = a1[*v4] == 0;
LABEL_43:
  PBReaderRecallMark();
  return v28;
}

void sub_188B2E2F0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDCategorySearchResultIsDirty(uint64_t a1)
{
  int v2;
  uint64_t v3;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  _BYTE v28[128];
  _BYTE v29[128];
  _BYTE v30[128];
  uint64_t v31;

  v31 = *MEMORY[0x1E0C80C00];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 168));
  v2 = *(_DWORD *)(a1 + 184);
  if ((v2 & 0x1060800) != 0)
    return 1;
  if ((v2 & 0x400) != 0)
  {
    if (GEOPDRelatedSearchSuggestionIsDirty(*(_QWORD *)(a1 + 48)))
      return 1;
    v2 = *(_DWORD *)(a1 + 184);
  }
  if ((v2 & 0x100100) == 0)
  {
    if ((v2 & 0x200) == 0)
      goto LABEL_9;
    if (!GEOPDSCategorySearchResultSectionIsDirty(*(_QWORD *)(a1 + 40)))
    {
      v2 = *(_DWORD *)(a1 + 184);
LABEL_9:
      if ((v2 & 0x410000) != 0)
        return 1;
      if ((v2 & 0x80000) != 0)
      {
        if ((GEOPDResultRefinementGroupIsDirty(*(os_unfair_lock_s **)(a1 + 120)) & 1) != 0)
          return 1;
        v2 = *(_DWORD *)(a1 + 184);
      }
      if ((v2 & 0x80) != 0)
        return 1;
      if ((v2 & 0x4000) != 0)
      {
        if ((GEOPDPlaceSummaryLayoutMetadataIsDirty(*(os_unfair_lock_s **)(a1 + 80)) & 1) != 0)
          return 1;
        v2 = *(_DWORD *)(a1 + 184);
      }
      if ((v2 & 0xA01000) != 0)
        return 1;
      if ((v2 & 0x2000) != 0)
      {
        if (GEOPDPaginationInfoIsDirty(*(_QWORD *)(a1 + 72)))
          return 1;
        v2 = *(_DWORD *)(a1 + 184);
      }
      if ((v2 & 0x8000) != 0)
        return 1;
      if ((v2 & 0x20000) != 0)
      {
        v26 = 0u;
        v27 = 0u;
        v24 = 0u;
        v25 = 0u;
        v5 = *(id *)(a1 + 104);
        v6 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v24, v30, 16);
        if (v6)
        {
          v7 = v6;
          v8 = *(_QWORD *)v25;
LABEL_27:
          v9 = 0;
          while (1)
          {
            if (*(_QWORD *)v25 != v8)
              objc_enumerationMutation(v5);
            if (GEOPDRelatedSearchSuggestionIsDirty(*(_QWORD *)(*((_QWORD *)&v24 + 1) + 8 * v9)))
              goto LABEL_55;
            if (v7 == ++v9)
            {
              v7 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v24, v30, 16);
              if (v7)
                goto LABEL_27;
              break;
            }
          }
        }

        v2 = *(_DWORD *)(a1 + 184);
      }
      if ((v2 & 0x100) != 0)
      {
        v22 = 0u;
        v23 = 0u;
        v20 = 0u;
        v21 = 0u;
        v5 = *(id *)(a1 + 32);
        v10 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v20, v29, 16);
        if (v10)
        {
          v11 = v10;
          v12 = *(_QWORD *)v21;
LABEL_37:
          v13 = 0;
          while (1)
          {
            if (*(_QWORD *)v21 != v12)
              objc_enumerationMutation(v5);
            if (GEOPDBrowseCategoryIsDirty(*(_QWORD *)(*((_QWORD *)&v20 + 1) + 8 * v13)))
              goto LABEL_55;
            if (v11 == ++v13)
            {
              v11 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v20, v29, 16);
              if (v11)
                goto LABEL_37;
              break;
            }
          }
        }

        v2 = *(_DWORD *)(a1 + 184);
      }
      if ((v2 & 0x10000) == 0)
        return 0;
      v18 = 0u;
      v19 = 0u;
      v16 = 0u;
      v17 = 0u;
      v5 = *(id *)(a1 + 96);
      v3 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v16, v28, 16);
      if (!v3)
      {
LABEL_56:

        return v3;
      }
      v14 = *(_QWORD *)v17;
LABEL_48:
      v15 = 0;
      while (1)
      {
        if (*(_QWORD *)v17 != v14)
          objc_enumerationMutation(v5);
        if (GEOPDRelatedEntitySectionIsDirty(*(_QWORD *)(*((_QWORD *)&v16 + 1) + 8 * v15)))
          break;
        if (v3 == ++v15)
        {
          v3 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v16, v28, 16);
          if (v3)
            goto LABEL_48;
          goto LABEL_56;
        }
      }
LABEL_55:
      v3 = 1;
      goto LABEL_56;
    }
  }
  return 1;
}

os_unfair_lock_s *GEOPDCategorySearchResultIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOPDCategorySearchResultIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 42);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_188B2EE04(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDChildPlaceLookupByCategoryParametersReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  uint64_t v18;
  void *v19;
  char v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  id v27;
  void *v28;
  _BOOL8 v29;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 2)
        {
          v20 = 0;
          v21 = 0;
          v22 = 0;
          *(_BYTE *)(a1 + 32) |= 1u;
          while (1)
          {
            v23 = *v4;
            v24 = *(_QWORD *)&v3[v23];
            v25 = v24 + 1;
            if (v24 == -1 || v25 > *(_QWORD *)&v3[*v5])
              break;
            v26 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v24);
            *(_QWORD *)&v3[v23] = v25;
            v22 |= (unint64_t)(v26 & 0x7F) << v20;
            if ((v26 & 0x80) == 0)
              goto LABEL_34;
            v20 += 7;
            v15 = v21++ >= 9;
            if (v15)
            {
              v22 = 0;
              goto LABEL_36;
            }
          }
          v3[*v6] = 1;
LABEL_34:
          if (v3[*v6])
            v22 = 0;
LABEL_36:
          *(_QWORD *)(a1 + 24) = v22;
        }
        else if ((v10 >> 3) == 1)
        {
          PBReaderReadData();
          v18 = objc_claimAutoreleasedReturnValue();
          v19 = *(void **)(a1 + 16);
          *(_QWORD *)(a1 + 16) = v18;

        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v27 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v28 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v27;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_39;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v29 = v3[*v6] == 0;
  }
  else
  {
LABEL_39:
    v29 = 0;
  }
  objc_sync_exit(v3);

  return v29;
}

void sub_188B2FE48(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDChildPlaceLookupByCategoryResultReadAllFrom(uint64_t a1, void *a2)
{
  unsigned __int8 *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  int v8;
  char v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  char v17;
  BOOL v18;
  id v19;
  void *v20;
  _BOOL8 v21;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    v7 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      v8 = v3[*v6];
      if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
        break;
      if (v3[*v6])
      {
        v8 = 1;
        break;
      }
      v9 = 0;
      v10 = 0;
      v11 = 0;
      while (1)
      {
        v12 = *v4;
        v13 = *(_QWORD *)&v3[v12];
        v14 = v13 + 1;
        if (v13 == -1 || v14 > *(_QWORD *)&v3[*v5])
          break;
        v15 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v13);
        *(_QWORD *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0)
          goto LABEL_13;
        v9 += 7;
        if (v10++ >= 9)
        {
          v17 = 0;
          v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      v8 = v3[*v6];
      if (v3[*v6])
        v17 = 0;
      else
        v17 = v11;
LABEL_16:
      if (v8)
        v18 = 1;
      else
        v18 = (v17 & 7) == 4;
      if (v18)
        break;
      if (!*(_QWORD *)(a1 + 8))
      {
        v19 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v20 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = v19;

      }
      if ((PBUnknownFieldAdd() & 1) == 0)
        goto LABEL_23;
    }
    v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_188B304F4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B30710(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDCollectionSuggestionParametersReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  int *v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  int *v18;
  int *v19;
  int *v20;
  int *v21;
  char v22;
  unsigned int v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  int v30;
  unint64_t v32;
  BOOL v33;
  int *v34;
  int v35;
  int v36;
  BOOL v37;
  GEOPDViewportInfo *v38;
  void *v39;
  id v40;
  void *v41;
  int v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  char v46;
  int v47;
  char v48;
  void *v49;
  int v51;
  int *v52;
  char v53;
  char v54;
  char v55;
  char v56;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 68);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 64));
  v7 = v6;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = (vaddv_s16((int16x4_t)(*(_QWORD *)&vshl_u16((uint16x4_t)(*(_QWORD *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 76)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFEFFFDFFFBFFFCLL) & 0xFF01FF01FF01FF01))+ ((*(_BYTE *)(a1 + 76) & 2) != 0));
  while (2)
  {
    v14 = 1;
    v15 = 1;
    v16 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v13;
        goto LABEL_8;
      case -3:
        v9 = 1;
        goto LABEL_7;
      case -2:
        v15 = v11;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v17 = v13 > 2;
        v53 = v17 & ~(_BYTE)v12 | v10;
        v54 = v17 | v12 | v53;
        if ((((v17 | v12) | v9) & 1) != 0)
          v18 = 0;
        else
          v18 = a3;
        v19 = (int *)MEMORY[0x1E0D82BF0];
        v20 = (int *)MEMORY[0x1E0D82BC8];
        v55 = (v18 == 0) | v17 | v12;
        v56 = v17 | v12;
        v21 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v13;
LABEL_7:
        v14 = v10;
LABEL_8:
        v15 = v11;
        v16 = v12;
LABEL_10:
        ++v8;
        v10 = v14;
        v11 = v15;
        v12 = v16;
        continue;
    }
    break;
  }
  while (*(_QWORD *)(v3 + *v19) < *(_QWORD *)(v3 + *v7) && !*(_BYTE *)(v3 + *v20))
  {
    v22 = 0;
    v23 = 0;
    v24 = 0;
    while (1)
    {
      v25 = *v19;
      v26 = *(_QWORD *)(v3 + v25);
      v27 = v26 + 1;
      if (v26 == -1 || v27 > *(_QWORD *)(v3 + *v7))
        break;
      v28 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v26);
      *(_QWORD *)(v3 + v25) = v27;
      v24 |= (unint64_t)(v28 & 0x7F) << v22;
      if ((v28 & 0x80) == 0)
        goto LABEL_25;
      v22 += 7;
      if (v23++ >= 9)
      {
        v24 = 0;
        v30 = *(unsigned __int8 *)(v3 + *v20);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v20) = 1;
LABEL_25:
    v30 = *(unsigned __int8 *)(v3 + *v20);
    if (*(_BYTE *)(v3 + *v20))
      v24 = 0;
LABEL_27:
    if (v30 || (v24 & 7) == 4)
      break;
    v32 = v24 >> 3;
    v33 = v56;
    if ((v55 & 1) == 0)
    {
      v34 = v18;
      do
      {
        v36 = *v34++;
        v35 = v36;
        v33 = v36 != 0;
        if (v36)
          v37 = v35 == (_DWORD)v32;
        else
          v37 = 1;
      }
      while (!v37);
    }
    switch((int)v32)
    {
      case 1:
        if (!v33)
          goto LABEL_69;
        if ((*(_BYTE *)(a1 + 76) & 0x20) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_96;
          v38 = objc_alloc_init(GEOPDViewportInfo);
          if (GEOPDViewportInfoReadAllFrom((uint64_t)v38, (void *)v3))
          {
            PBReaderRecallMark();
            v39 = *(void **)(a1 + 56);
            *(_QWORD *)(a1 + 56) = v38;

            --v8;
            goto LABEL_73;
          }
          goto LABEL_95;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_96;
        v8 += *(unsigned __int8 *)(a1 + 76) << 26 >> 31;
        goto LABEL_73;
      case 2:
        if ((v9 & 1) == 0)
          goto LABEL_69;
        *(_BYTE *)(a1 + 76) |= 1u;
        v43 = *v19;
        v44 = *(_QWORD *)(v3 + v43);
        if (v44 <= 0xFFFFFFFFFFFFFFF7 && v44 + 8 <= *(_QWORD *)(v3 + *v7))
        {
          v45 = *(_QWORD *)(*(_QWORD *)(v3 + *v21) + v44);
          *(_QWORD *)(v3 + v43) = v44 + 8;
        }
        else
        {
          *(_BYTE *)(v3 + *v20) = 1;
          v45 = 0;
        }
        *(_QWORD *)(a1 + 48) = v45;
        goto LABEL_76;
      case 3:
        if (!v33 || (*(_BYTE *)(a1 + 76) & 0x10) != 0)
          goto LABEL_69;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_96;
        v38 = objc_alloc_init(GEOPDMapsIdentifier);
        if (!GEOPDMapsIdentifierReadAllFrom((uint64_t)v38, (void *)v3))
          goto LABEL_95;
        PBReaderRecallMark();
        -[GEOPDCollectionSuggestionParameters _addNoFlagsPublisherId:](a1, v38);
        goto LABEL_68;
      case 4:
        if (!v33 || (*(_BYTE *)(a1 + 76) & 8) != 0)
          goto LABEL_69;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_96;
        v38 = objc_alloc_init(GEOPDMapsIdentifier);
        if (GEOPDMapsIdentifierReadAllFrom((uint64_t)v38, (void *)v3))
        {
          PBReaderRecallMark();
          -[GEOPDCollectionSuggestionParameters _addNoFlagsGeoId:](a1, v38);
LABEL_68:

LABEL_73:
          v20 = (int *)MEMORY[0x1E0D82BC8];
          v7 = (int *)MEMORY[0x1E0D82BD8];
          goto LABEL_76;
        }
LABEL_95:

LABEL_96:
        v51 = 0;
        v52 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
        v20 = (int *)MEMORY[0x1E0D82BC8];
LABEL_79:
        if ((v53 & 1) != 0)
LABEL_80:
          *(_BYTE *)(a1 + v52[271]) |= 2u;
        if (v56 & 1 | ((v51 & 1) == 0))
        {
          *(_BYTE *)(a1 + v52[271]) |= 0x20u;
          *(_BYTE *)(a1 + v52[271]) |= 0x10u;
          *(_BYTE *)(a1 + v52[271]) |= 8u;
          *(_BYTE *)(a1 + v52[271]) |= 4u;
        }
        else if (v18)
        {
          while (1)
          {
            v47 = *v18++;
            v48 = 32;
            switch(v47)
            {
              case 0:
                goto LABEL_89;
              case 1:
                goto LABEL_88;
              case 3:
                v48 = 16;
                goto LABEL_88;
              case 4:
                v48 = 8;
                goto LABEL_88;
              case 5:
                v48 = 4;
LABEL_88:
                *(_BYTE *)(a1 + v52[271]) |= v48;
                break;
              default:
                continue;
            }
          }
        }
LABEL_89:
        if (v51)
          v3 = *(_BYTE *)(v3 + *v20) == 0;
        else
          v3 = 0;
        if ((v56 & 1) != 0)
        {
          v49 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      case 5:
        if (!v33 || (*(_BYTE *)(a1 + 76) & 4) != 0)
          goto LABEL_69;
        PBReaderReadString();
        v38 = (GEOPDViewportInfo *)objc_claimAutoreleasedReturnValue();
        if (v38)
          -[GEOPDCollectionSuggestionParameters _addNoFlagsCategoryId:](a1, v38);
        goto LABEL_68;
      default:
        if ((v53 & 1) == 0 || (*(_BYTE *)(a1 + 76) & 2) != 0)
        {
LABEL_69:
          v46 = PBReaderSkipValueWithTag();
          v7 = (int *)MEMORY[0x1E0D82BD8];
          v20 = (int *)MEMORY[0x1E0D82BC8];
          if ((v46 & 1) == 0)
          {
            v51 = 0;
LABEL_78:
            v52 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
            goto LABEL_79;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v40 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v41 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v40;

          }
          v42 = PBUnknownFieldAdd();
          v20 = (int *)MEMORY[0x1E0D82BC8];
          v7 = (int *)MEMORY[0x1E0D82BD8];
          if (!v42)
          {
            v51 = 0;
            v52 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
            goto LABEL_80;
          }
        }
LABEL_76:
        if (!(v54 & 1 | (v8 != 0)))
          goto LABEL_77;
        break;
    }
  }
LABEL_77:
  v51 = 1;
  goto LABEL_78;
}

void sub_188B30F04(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B310A4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B31244(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B31958(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDCollectionSuggestionParametersCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  _BYTE v20[128];
  _BYTE v21[128];
  uint64_t v22;

  v22 = *MEMORY[0x1E0C80C00];
  objc_msgSend(a1[7], "readAll:", 1);
  v18 = 0u;
  v19 = 0u;
  v16 = 0u;
  v17 = 0u;
  v2 = a1[5];
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v16, v21, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v17;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v17 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v16 + 1) + 8 * v6++), "readAll:", 1);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v16, v21, 16);
    }
    while (v4);
  }

  v14 = 0u;
  v15 = 0u;
  v12 = 0u;
  v13 = 0u;
  v7 = a1[4];
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v12, v20, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v13;
    do
    {
      v11 = 0;
      do
      {
        if (*(_QWORD *)v13 != v10)
          objc_enumerationMutation(v7);
        objc_msgSend(*(id *)(*((_QWORD *)&v12 + 1) + 8 * v11++), "readAll:", 1, (_QWORD)v12);
      }
      while (v9 != v11);
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v12, v20, 16);
    }
    while (v9);
  }

}

unint64_t GEOPDCollectionSuggestionParametersReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 68))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDCollectionSuggestionParametersReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 72));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 64) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 68) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDCollectionSuggestionParametersReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDCollectionSuggestionParametersReadAllFrom_initialTag;
  Specified = GEOPDCollectionSuggestionParametersReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDCollectionSuggestionParametersCallReadAllRecursiveWithoutSynchronized((id *)a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return Specified;
}

void sub_188B3222C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDCollectionSuggestionParametersIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v14;
  int v15;
  int v16;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  _BOOL8 v21;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (!a1[*v4])
    {
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = *v4;
          v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = *v4;
      v15 = a1[v14];
      if (a1[v14])
        v8 = 0;
LABEL_14:
      v16 = v8 & 7;
      if (v15 || v16 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOPDViewportInfoIsValid(a1))
            goto LABEL_38;
          goto LABEL_26;
        case 2u:
          if (v16 != 1)
            goto LABEL_38;
          v18 = *v2;
          v19 = *(_QWORD *)&a1[v18];
          if (v19 <= 0xFFFFFFFFFFFFFFF7 && (v20 = v19 + 8, v20 <= *(_QWORD *)&a1[*v3]))
            *(_QWORD *)&a1[v18] = v20;
          else
            a1[v14] = 1;
          goto LABEL_33;
        case 3u:
        case 4u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOPDMapsIdentifierIsValid(a1))
            goto LABEL_38;
LABEL_26:
          PBReaderRecallMark();
          goto LABEL_33;
        case 5u:
          if (v16 == 2)
            goto LABEL_32;
          goto LABEL_38;
        default:
LABEL_32:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_38:
            PBReaderRecallMark();
            return 0;
          }
LABEL_33:
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_36;
          break;
      }
    }
  }
LABEL_36:
  v21 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v21;
}

void sub_188B3282C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDCollectionSuggestionParametersIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  v2 = (*(_BYTE *)(a1 + 76) & 0x7C) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return v2;
}

void sub_188B32E54(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B3372C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDCollectionSuggestionResultReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  char v17;
  unsigned __int8 v18;
  char v19;
  int *v20;
  int *v21;
  int *v22;
  int *v23;
  char v24;
  unsigned int v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  int v32;
  unint64_t v34;
  BOOL v35;
  int *v36;
  int v37;
  int v38;
  BOOL v39;
  GEOPDMapsIdentifier *v40;
  void *v41;
  id v42;
  void *v43;
  int v44;
  char v45;
  char v46;
  int v47;
  int v48;
  void *v49;
  int v51;
  int *v52;
  char v53;
  char v54;
  char v55;
  BOOL v56;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1)
      + (*(_BYTE *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1);
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v7 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 != 0;
        v17 = v16 & ~(_BYTE)v11 | v9;
        v18 = v16 | v11;
        v53 = v17;
        v19 = v18 | v17;
        if (((v18 | v7) & 1) != 0)
          v20 = 0;
        else
          v20 = a3;
        v56 = v18;
        v54 = v19;
        v55 = (v20 == 0) | v18;
        v21 = (int *)MEMORY[0x1E0D82BF0];
        v22 = (int *)MEMORY[0x1E0D82BC8];
        v23 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v8;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v21) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v22))
      goto LABEL_62;
    v24 = 0;
    v25 = 0;
    v26 = 0;
    while (1)
    {
      v27 = *v21;
      v28 = *(_QWORD *)(v3 + v27);
      v29 = v28 + 1;
      if (v28 == -1 || v29 > *(_QWORD *)(v3 + *v6))
        break;
      v30 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v28);
      *(_QWORD *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0)
        goto LABEL_25;
      v24 += 7;
      if (v25++ >= 9)
      {
        v26 = 0;
        v32 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v22) = 1;
LABEL_25:
    v32 = *(unsigned __int8 *)(v3 + *v22);
    if (*(_BYTE *)(v3 + *v22))
      v26 = 0;
LABEL_27:
    if (v32 || (v26 & 7) == 4)
    {
LABEL_62:
      v51 = 1;
      goto LABEL_63;
    }
    v34 = v26 >> 3;
    v35 = v56;
    if ((v55 & 1) == 0)
    {
      v36 = v20;
      do
      {
        v38 = *v36++;
        v37 = v38;
        v35 = v38 != 0;
        if (v38)
          v39 = v37 == (_DWORD)v34;
        else
          v39 = 1;
      }
      while (!v39);
    }
    if ((_DWORD)v34 == 2)
      break;
    if ((_DWORD)v34 == 1)
    {
      if (v35 && (*(_BYTE *)(a1 + 52) & 2) == 0)
      {
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_83;
        v40 = objc_alloc_init(GEOPDMapsIdentifier);
        if (!GEOPDMapsIdentifierReadAllFrom((uint64_t)v40, (void *)v3))
          goto LABEL_82;
        PBReaderRecallMark();
        -[GEOPDCollectionSuggestionResult _addNoFlagsCollectionId:](a1, v40);

        goto LABEL_60;
      }
    }
    else if ((v53 & 1) != 0 && (*(_BYTE *)(a1 + 52) & 1) == 0)
    {
      if (!*(_QWORD *)(a1 + 16))
      {
        v42 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v43 = *(void **)(a1 + 16);
        *(_QWORD *)(a1 + 16) = v42;

      }
      v44 = PBUnknownFieldAdd();
      v22 = (int *)MEMORY[0x1E0D82BC8];
      if (!v44)
      {
        v51 = 0;
        v52 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
        goto LABEL_65;
      }
      goto LABEL_61;
    }
LABEL_56:
    v45 = PBReaderSkipValueWithTag();
    v22 = (int *)MEMORY[0x1E0D82BC8];
    if ((v45 & 1) == 0)
    {
      v51 = 0;
LABEL_63:
      v52 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
      goto LABEL_64;
    }
LABEL_61:
    if (!(v54 & 1 | (v8 != 0)))
      goto LABEL_62;
  }
  if (!v35)
    goto LABEL_56;
  if ((*(_BYTE *)(a1 + 52) & 4) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0)
      goto LABEL_83;
    v8 += *(unsigned __int8 *)(a1 + 52) << 29 >> 31;
    goto LABEL_60;
  }
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_83;
  v40 = objc_alloc_init(GEOPDExploreGuides);
  if (GEOPDExploreGuidesReadAllFrom((uint64_t)v40, (void *)v3, v10 & 1))
  {
    PBReaderRecallMark();
    v41 = *(void **)(a1 + 32);
    *(_QWORD *)(a1 + 32) = v40;

    --v8;
LABEL_60:
    v22 = (int *)MEMORY[0x1E0D82BC8];
    goto LABEL_61;
  }
LABEL_82:

LABEL_83:
  v51 = 0;
  v52 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
  v22 = (int *)MEMORY[0x1E0D82BC8];
LABEL_64:
  if ((v53 & 1) == 0)
    goto LABEL_66;
LABEL_65:
  *(_BYTE *)(a1 + v52[275]) |= 1u;
LABEL_66:
  if (v56 || (v51 & 1) == 0)
  {
    *(_BYTE *)(a1 + v52[275]) |= 2u;
    *(_BYTE *)(a1 + v52[275]) |= 4u;
    goto LABEL_76;
  }
  if (v20)
  {
    while (1)
    {
      v48 = *v20++;
      v47 = v48;
      if (v48 == 1)
        break;
      if (v47 == 2)
      {
        v46 = 4;
LABEL_72:
        *(_BYTE *)(a1 + v52[275]) |= v46;
      }
      else if (!v47)
      {
        goto LABEL_76;
      }
    }
    v46 = 2;
    goto LABEL_72;
  }
LABEL_76:
  if (v51)
    v3 = *(_BYTE *)(v3 + *v22) == 0;
  else
    v3 = 0;
  if (v56)
  {
    v49 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_188B33E50(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B34330(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDCollectionSuggestionResultCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _BYTE v11[128];
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  v7 = 0u;
  v8 = 0u;
  v9 = 0u;
  v10 = 0u;
  v2 = *(id *)(a1 + 24);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v8;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v8 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v7 + 1) + 8 * v6++), "readAll:", 1, (_QWORD)v7);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
    }
    while (v4);
  }

  -[GEOPDExploreGuides readAll:](*(_QWORD *)(a1 + 32), 1);
}

unint64_t GEOPDCollectionSuggestionResultReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDCollectionSuggestionResultReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDCollectionSuggestionResultReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDCollectionSuggestionResultReadAllFrom_initialTag;
  Specified = GEOPDCollectionSuggestionResultReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDCollectionSuggestionResultCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_188B348CC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDCollectionSuggestionResultIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  _BOOL8 v17;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_30;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        goto LABEL_30;
      if ((v8 >> 3) == 2)
        break;
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDMapsIdentifierIsValid(a1))
          goto LABEL_31;
LABEL_27:
        PBReaderRecallMark();
        goto LABEL_29;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        goto LABEL_31;
LABEL_29:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_30;
    }
    if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDExploreGuidesIsValid(a1))
    {
LABEL_31:
      PBReaderRecallMark();
      return 0;
    }
    goto LABEL_27;
  }
LABEL_30:
  v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

void sub_188B34CF0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

os_unfair_lock_s *_GEOPDCollectionSuggestionResultIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  if ((*(_BYTE *)(a1 + 52) & 0xA) != 0)
    return (os_unfair_lock_s *)1;
  if ((*(_BYTE *)(a1 + 52) & 4) != 0)
    return GEOPDExploreGuidesIsDirty(*(os_unfair_lock_s **)(a1 + 32));
  return 0;
}

os_unfair_lock_s *GEOPDCollectionSuggestionResultIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  os_unfair_lock_s *v2;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    v2 = _GEOPDCollectionSuggestionResultIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 12);
    return v2;
  }
  return result;
}

void sub_188B35134(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDCustomLandmarkReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  GEOPDGeographicCoordinate *v25;
  void *v26;
  id v27;
  void *v28;
  _BOOL8 v29;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 2)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_42;
          v25 = objc_alloc_init(GEOPDGeographicCoordinate);
          if (!GEOPDGeographicCoordinateReadAllFrom((uint64_t)v25, v3))
          {

            goto LABEL_42;
          }
          PBReaderRecallMark();
          v26 = *(void **)(a1 + 16);
          *(_QWORD *)(a1 + 16) = v25;

        }
        else if ((v10 >> 3) == 1)
        {
          v18 = 0;
          v19 = 0;
          v20 = 0;
          *(_BYTE *)(a1 + 28) |= 1u;
          while (1)
          {
            v21 = *v4;
            v22 = *(_QWORD *)&v3[v21];
            v23 = v22 + 1;
            if (v22 == -1 || v23 > *(_QWORD *)&v3[*v5])
              break;
            v24 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v22);
            *(_QWORD *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0)
              goto LABEL_36;
            v18 += 7;
            v15 = v19++ >= 9;
            if (v15)
            {
              LODWORD(v20) = 0;
              goto LABEL_38;
            }
          }
          v3[*v6] = 1;
LABEL_36:
          if (v3[*v6])
            LODWORD(v20) = 0;
LABEL_38:
          *(_DWORD *)(a1 + 24) = v20;
        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v27 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v28 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v27;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_42;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v29 = v3[*v6] == 0;
  }
  else
  {
LABEL_42:
    v29 = 0;
  }
  objc_sync_exit(v3);

  return v29;
}

void sub_188B35A2C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B35E98(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDDisplayHeaderSubstituteReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  int *v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  BOOL v28;
  int v29;
  unint64_t v31;
  BOOL v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  char v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  GEOPDRelatedSearchSuggestion *v44;
  void *v45;
  uint64_t v46;
  id v47;
  void *v48;
  int v49;
  char v50;
  char v51;
  int v52;
  int v53;
  char v54;
  void *v55;
  int v57;
  int *v58;
  char v59;
  char v60;
  char v61;
  char v62;
  char v63;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = ((*(unsigned __int8 *)(a1 + 56) >> 2) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 1) & 1);
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v12;
        v13 = v7;
        goto LABEL_8;
      case -3:
        v9 = 1;
        goto LABEL_7;
      case -2:
        v13 = v7;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 != 0;
        v60 = v16 & ~(_BYTE)v11 | v8;
        v61 = v16 | v11 | v60;
        v59 = v9;
        if ((((v16 | v11) | v9) & 1) != 0)
          v17 = 0;
        else
          v17 = a3;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v62 = (v17 == 0) | v16 | v11;
        v63 = v16 | v11;
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v7;
        v14 = v8;
LABEL_8:
        v15 = v11;
LABEL_10:
        ++v10;
        v7 = v13;
        v8 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v19))
      goto LABEL_77;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0)
        goto LABEL_25;
      v21 += 7;
      v28 = v22++ >= 9;
      if (v28)
      {
        v23 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_25:
    v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_27:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_77:
      v57 = 1;
      goto LABEL_78;
    }
    v31 = v23 >> 3;
    v32 = v63;
    if ((v62 & 1) == 0)
    {
      v33 = v17;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    if ((_DWORD)v31 == 3)
      break;
    if ((_DWORD)v31 == 2)
    {
      if (v32)
      {
        if ((*(_BYTE *)(a1 + 56) & 4) == 0)
        {
          PBReaderReadString();
          v46 = objc_claimAutoreleasedReturnValue();
          v45 = *(void **)(a1 + 24);
          *(_QWORD *)(a1 + 24) = v46;
LABEL_57:

          --v10;
LABEL_75:
          v19 = (int *)MEMORY[0x1E0D82BC8];
          goto LABEL_76;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_98;
        v51 = 32 * *(_BYTE *)(a1 + 56);
LABEL_74:
        v10 += v51 >> 7;
        goto LABEL_75;
      }
    }
    else if ((_DWORD)v31 == 1)
    {
      if ((v59 & 1) != 0)
      {
        v37 = 0;
        v38 = 0;
        v39 = 0;
        *(_BYTE *)(a1 + 56) |= 1u;
        while (1)
        {
          v40 = *v18;
          v41 = *(_QWORD *)(v3 + v40);
          v42 = v41 + 1;
          if (v41 == -1 || v42 > *(_QWORD *)(v3 + *v6))
            break;
          v43 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v41);
          *(_QWORD *)(v3 + v40) = v42;
          v39 |= (unint64_t)(v43 & 0x7F) << v37;
          if ((v43 & 0x80) == 0)
            goto LABEL_67;
          v37 += 7;
          v28 = v38++ >= 9;
          if (v28)
          {
            LODWORD(v39) = 0;
            goto LABEL_69;
          }
        }
        *(_BYTE *)(v3 + *v19) = 1;
LABEL_67:
        if (*(_BYTE *)(v3 + *v19))
          LODWORD(v39) = 0;
LABEL_69:
        *(_DWORD *)(a1 + 52) = v39;
        goto LABEL_76;
      }
    }
    else if ((v60 & 1) != 0 && (*(_BYTE *)(a1 + 56) & 2) == 0)
    {
      if (!*(_QWORD *)(a1 + 16))
      {
        v47 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v48 = *(void **)(a1 + 16);
        *(_QWORD *)(a1 + 16) = v47;

      }
      v49 = PBUnknownFieldAdd();
      v19 = (int *)MEMORY[0x1E0D82BC8];
      if (!v49)
      {
        v57 = 0;
        v58 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
        goto LABEL_80;
      }
      goto LABEL_76;
    }
LABEL_64:
    v50 = PBReaderSkipValueWithTag();
    v19 = (int *)MEMORY[0x1E0D82BC8];
    if ((v50 & 1) == 0)
    {
      v57 = 0;
LABEL_78:
      v58 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
      goto LABEL_79;
    }
LABEL_76:
    if (!(v61 & 1 | (v10 != 0)))
      goto LABEL_77;
  }
  if (!v32)
    goto LABEL_64;
  if ((*(_BYTE *)(a1 + 56) & 8) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0)
      goto LABEL_98;
    v51 = 16 * *(_BYTE *)(a1 + 56);
    goto LABEL_74;
  }
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_98;
  v44 = objc_alloc_init(GEOPDRelatedSearchSuggestion);
  if (GEOPDRelatedSearchSuggestionReadAllFrom((uint64_t)v44, (void *)v3, v7 & 1))
  {
    PBReaderRecallMark();
    v45 = *(void **)(a1 + 32);
    *(_QWORD *)(a1 + 32) = v44;
    goto LABEL_57;
  }

LABEL_98:
  v57 = 0;
  v58 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
  v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_79:
  if ((v60 & 1) == 0)
    goto LABEL_81;
LABEL_80:
  *(_BYTE *)(a1 + v58[280]) |= 2u;
LABEL_81:
  if (v63 & 1 | ((v57 & 1) == 0))
  {
    *(_BYTE *)(a1 + v58[280]) |= 4u;
    *(_BYTE *)(a1 + v58[280]) |= 8u;
    goto LABEL_91;
  }
  if (v17)
  {
    while (2)
    {
      while (1)
      {
        v53 = *v17++;
        v52 = v53;
        if (v53 == 2)
          break;
        if (v52 == 3)
        {
          v54 = 8;
          goto LABEL_90;
        }
        if (!v52)
          goto LABEL_91;
      }
      v54 = 4;
LABEL_90:
      *(_BYTE *)(a1 + v58[280]) |= v54;
      continue;
    }
  }
LABEL_91:
  if (v57)
    v3 = *(_BYTE *)(v3 + *v19) == 0;
  else
    v3 = 0;
  if ((v63 & 1) != 0)
  {
    v55 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_188B3657C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B36958(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDDisplayHeaderSubstituteReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDDisplayHeaderSubstituteReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDDisplayHeaderSubstituteReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDDisplayHeaderSubstituteReadAllFrom_initialTag;
  Specified = GEOPDDisplayHeaderSubstituteReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    -[GEOPDRelatedSearchSuggestion readAll:](*(_QWORD *)(a1 + 32), 1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_188B36BC0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B36D68(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL _GEOPDDisplayHeaderSubstituteIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  if ((*(_BYTE *)(a1 + 56) & 0x14) != 0)
    return 1;
  if ((*(_BYTE *)(a1 + 56) & 8) != 0)
    return GEOPDRelatedSearchSuggestionIsDirty(*(_QWORD *)(a1 + 32));
  return 0;
}

os_unfair_lock_s *GEOPDDisplayHeaderSubstituteIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  _BOOL8 IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOPDDisplayHeaderSubstituteIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 12);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_188B36FDC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDExtendedGeoLookupParametersReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  char v17;
  char v18;
  int *v19;
  int *v20;
  int *v21;
  char v22;
  int *v23;
  char v24;
  unsigned int v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  BOOL v31;
  int v32;
  int v33;
  unint64_t v35;
  BOOL v36;
  int *v37;
  int v38;
  int v39;
  BOOL v40;
  GEOAddress *v41;
  uint64_t v42;
  id v43;
  void *v44;
  int v45;
  char v46;
  unsigned int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  char v52;
  int *v53;
  char v54;
  unsigned int v55;
  uint64_t v56;
  int *v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  char v61;
  char v62;
  unsigned int v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  char v68;
  char v69;
  unsigned int v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  char v74;
  uint64_t v75;
  void *v76;
  char v77;
  unsigned int v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  char v83;
  void *v84;
  char v85;
  uint64_t v86;
  BOOL v87;
  uint64_t v88;
  __int16 v89;
  char v90;
  unsigned int v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  char v96;
  int v97;
  __int16 v98;
  void *v99;
  char v101;
  char v102;
  int v103;
  char v104;
  char v105;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 104));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 100);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 96));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 112)), (uint16x4_t)0xFFFAFFFBFFF8FFF7), (int8x8_t)0x1000100010001))+ ((*(_WORD *)(a1 + 112) >> 7) & 1)+ ((*(_WORD *)(a1 + 112) >> 4) & 1));
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 > 3;
        v17 = v16 & ~(_BYTE)v11 | v9;
        v18 = v16 | v11;
        if ((((v16 | v11) | v8) & 1) != 0)
          v19 = 0;
        else
          v19 = a3;
        v20 = (int *)MEMORY[0x1E0D82BF0];
        v103 = 1;
        v21 = (int *)MEMORY[0x1E0D82BC8];
        v22 = v17;
        if (*(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(v3 + *v6))
          goto LABEL_157;
        v101 = v17;
        v104 = v18 | v17;
        v105 = (v19 == 0) | v18;
        v23 = (int *)MEMORY[0x1E0D82BB8];
        v102 = v18;
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v7;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_BYTE *)(v3 + *v21))
      goto LABEL_155;
    v24 = 0;
    v25 = 0;
    v26 = 0;
    while (1)
    {
      v27 = *v20;
      v28 = *(_QWORD *)(v3 + v27);
      v29 = v28 + 1;
      if (v28 == -1 || v29 > *(_QWORD *)(v3 + *v6))
        break;
      v30 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v28);
      *(_QWORD *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0)
        goto LABEL_25;
      v24 += 7;
      v31 = v25++ >= 9;
      if (v31)
      {
        v26 = 0;
        v32 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v21) = 1;
LABEL_25:
    v32 = *(unsigned __int8 *)(v3 + *v21);
    if (*(_BYTE *)(v3 + *v21))
      v26 = 0;
LABEL_27:
    v33 = v26 & 7;
    if (v32 || v33 == 4)
    {
LABEL_155:
      v103 = 1;
      goto LABEL_156;
    }
    v35 = v26 >> 3;
    v36 = v18;
    if ((v105 & 1) == 0)
    {
      v37 = v19;
      do
      {
        v39 = *v37++;
        v38 = v39;
        v36 = v39 != 0;
        if (v39)
          v40 = v38 == (_DWORD)v35;
        else
          v40 = 1;
      }
      while (!v40);
    }
    switch((int)v35)
    {
      case 1:
        if (!v36)
          goto LABEL_111;
        if ((*(_WORD *)(a1 + 112) & 0x100) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_175;
          v41 = objc_alloc_init(GEOAddress);
          if (GEOAddressReadAllFrom((uint64_t)v41, (void *)v3, v10 & 1))
          {
            PBReaderRecallMark();
            v42 = 64;
            goto LABEL_110;
          }
          goto LABEL_174;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_175;
        v89 = *(_WORD *)(a1 + 112) << 7;
        goto LABEL_139;
      case 2:
        if ((v8 & 1) == 0)
          goto LABEL_111;
        v46 = 0;
        v47 = 0;
        v48 = 0;
        *(_WORD *)(a1 + 112) |= 1u;
        while (2)
        {
          v49 = *v20;
          v50 = *(_QWORD *)(v3 + v49);
          v51 = v50 + 1;
          if (v50 == -1 || v51 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v52 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v50);
            *(_QWORD *)(v3 + v49) = v51;
            v48 |= (unint64_t)(v52 & 0x7F) << v46;
            if (v52 < 0)
            {
              v46 += 7;
              v31 = v47++ >= 9;
              if (v31)
              {
                v48 = 0;
                goto LABEL_116;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          v48 = 0;
LABEL_116:
        v86 = 72;
        goto LABEL_125;
      case 3:
        if (!v36)
          goto LABEL_111;
        if ((*(_WORD *)(a1 + 112) & 0x200) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_175;
          v89 = *(_WORD *)(a1 + 112) << 6;
          goto LABEL_139;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_175;
        v41 = objc_alloc_init(GEOLatLng);
        if (!GEOLatLngReadAllFrom((uint64_t)v41, (void *)v3))
          goto LABEL_174;
        PBReaderRecallMark();
        v42 = 80;
        goto LABEL_110;
      case 4:
        if (!v36 || (*(_WORD *)(a1 + 112) & 0x20) != 0)
          goto LABEL_111;
        if (v33 != 2)
        {
          v90 = 0;
          v91 = 0;
          v92 = 0;
          while (1)
          {
            v93 = *v20;
            v94 = *(_QWORD *)(v3 + v93);
            v95 = v94 + 1;
            if (v94 == -1 || v95 > *(_QWORD *)(v3 + *v6))
              break;
            v96 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v94);
            *(_QWORD *)(v3 + v93) = v95;
            v92 |= (unint64_t)(v96 & 0x7F) << v90;
            if (v96 < 0)
            {
              v90 += 7;
              v31 = v91++ >= 9;
              if (!v31)
                continue;
            }
            goto LABEL_154;
          }
          *(_BYTE *)(v3 + *v21) = 1;
LABEL_154:
          PBRepeatedUInt64Add();
          goto LABEL_140;
        }
        if (!PBReaderPlaceMark())
          goto LABEL_175;
        while (1)
        {
          v53 = (int *)MEMORY[0x1E0D82BC8];
          if (*(_QWORD *)(v3 + *v20) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + (int)*MEMORY[0x1E0D82BC8]))
            break;
          v54 = 0;
          v55 = 0;
          v56 = 0;
          v57 = (int *)MEMORY[0x1E0D82BB8];
          while (1)
          {
            v58 = *v20;
            v59 = *(_QWORD *)(v3 + v58);
            v60 = v59 + 1;
            if (v59 == -1 || v60 > *(_QWORD *)(v3 + *v6))
              break;
            v61 = *(_BYTE *)(*(_QWORD *)(v3 + *v57) + v59);
            *(_QWORD *)(v3 + v58) = v60;
            v56 |= (unint64_t)(v61 & 0x7F) << v54;
            if (v61 < 0)
            {
              v54 += 7;
              v31 = v55++ >= 9;
              if (!v31)
                continue;
            }
            goto LABEL_77;
          }
          *(_BYTE *)(v3 + *v53) = 1;
LABEL_77:
          PBRepeatedUInt64Add();
        }
        PBReaderRecallMark();
        v21 = (int *)MEMORY[0x1E0D82BC8];
        v18 = v102;
        goto LABEL_141;
      case 5:
        if ((v8 & 1) == 0)
          goto LABEL_111;
        v62 = 0;
        v63 = 0;
        v64 = 0;
        *(_WORD *)(a1 + 112) |= 8u;
        while (2)
        {
          v65 = *v20;
          v66 = *(_QWORD *)(v3 + v65);
          v67 = v66 + 1;
          if (v66 == -1 || v67 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v68 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v66);
            *(_QWORD *)(v3 + v65) = v67;
            v64 |= (unint64_t)(v68 & 0x7F) << v62;
            if (v68 < 0)
            {
              v62 += 7;
              v31 = v63++ >= 9;
              if (v31)
              {
                v64 = 0;
                goto LABEL_120;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          v64 = 0;
LABEL_120:
        v87 = v64 != 0;
        v88 = 109;
        goto LABEL_130;
      case 6:
        if ((v8 & 1) == 0)
          goto LABEL_111;
        v69 = 0;
        v70 = 0;
        v48 = 0;
        *(_WORD *)(a1 + 112) |= 2u;
        while (2)
        {
          v71 = *v20;
          v72 = *(_QWORD *)(v3 + v71);
          v73 = v72 + 1;
          if (v72 == -1 || v73 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v74 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v72);
            *(_QWORD *)(v3 + v71) = v73;
            v48 |= (unint64_t)(v74 & 0x7F) << v69;
            if (v74 < 0)
            {
              v69 += 7;
              v31 = v70++ >= 9;
              if (v31)
              {
                v48 = 0;
                goto LABEL_124;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          v48 = 0;
LABEL_124:
        v86 = 88;
LABEL_125:
        *(_QWORD *)(a1 + v86) = v48;
        goto LABEL_142;
      case 7:
        if (!v36)
          goto LABEL_111;
        if ((*(_WORD *)(a1 + 112) & 0x40) == 0)
        {
          PBReaderReadString();
          v75 = objc_claimAutoreleasedReturnValue();
          v76 = *(void **)(a1 + 48);
          *(_QWORD *)(a1 + 48) = v75;

          v23 = (int *)MEMORY[0x1E0D82BB8];
          v21 = (int *)MEMORY[0x1E0D82BC8];
          v18 = v102;
          --v7;
          goto LABEL_142;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_175;
        v89 = *(_WORD *)(a1 + 112) << 9;
        goto LABEL_139;
      case 8:
        if ((v8 & 1) == 0)
          goto LABEL_111;
        v77 = 0;
        v78 = 0;
        v79 = 0;
        *(_WORD *)(a1 + 112) |= 4u;
        while (2)
        {
          v80 = *v20;
          v81 = *(_QWORD *)(v3 + v80);
          v82 = v81 + 1;
          if (v81 == -1 || v82 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v83 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v81);
            *(_QWORD *)(v3 + v80) = v82;
            v79 |= (unint64_t)(v83 & 0x7F) << v77;
            if (v83 < 0)
            {
              v77 += 7;
              v31 = v78++ >= 9;
              if (v31)
              {
                v79 = 0;
                goto LABEL_129;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          v79 = 0;
LABEL_129:
        v87 = v79 != 0;
        v88 = 108;
LABEL_130:
        *(_BYTE *)(a1 + v88) = v87;
        goto LABEL_142;
      case 9:
        if (!v36)
          goto LABEL_111;
        if ((*(_WORD *)(a1 + 112) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_175;
          v89 = *(_WORD *)(a1 + 112) << 8;
LABEL_139:
          v7 += v89 >> 15;
LABEL_140:
          v18 = v102;
          v21 = (int *)MEMORY[0x1E0D82BC8];
LABEL_141:
          v23 = (int *)MEMORY[0x1E0D82BB8];
LABEL_142:
          if (!(v104 & 1 | (v7 != 0)) || *(_QWORD *)(v3 + *v20) >= *(_QWORD *)(v3 + *v6))
            goto LABEL_155;
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_175;
        v41 = objc_alloc_init(GEOInterpolationParameters);
        if (GEOInterpolationParametersReadAllFrom((uint64_t)v41, (void *)v3))
        {
          PBReaderRecallMark();
          v42 = 56;
LABEL_110:
          v84 = *(void **)(a1 + v42);
          *(_QWORD *)(a1 + v42) = v41;

          --v7;
          goto LABEL_140;
        }
LABEL_174:

LABEL_175:
        v103 = 0;
        v18 = v102;
        v21 = (int *)MEMORY[0x1E0D82BC8];
LABEL_156:
        v22 = v101;
LABEL_157:
        if ((v22 & 1) != 0)
LABEL_158:
          *(_WORD *)(a1 + 112) |= 0x10u;
        if (v18 & 1 | ((v103 & 1) == 0))
        {
          *(_WORD *)(a1 + 112) |= 0x100u;
          *(_WORD *)(a1 + 112) |= 0x200u;
          *(_WORD *)(a1 + 112) |= 0x20u;
          *(_WORD *)(a1 + 112) |= 0x40u;
          *(_WORD *)(a1 + 112) |= 0x80u;
        }
        else if (v19)
        {
          while (1)
          {
            v97 = *v19++;
            v98 = 256;
            switch(v97)
            {
              case 0:
                goto LABEL_168;
              case 1:
                goto LABEL_167;
              case 3:
                v98 = 512;
                goto LABEL_167;
              case 4:
                v98 = 32;
                goto LABEL_167;
              case 7:
                v98 = 64;
                goto LABEL_167;
              case 9:
                v98 = 128;
LABEL_167:
                *(_WORD *)(a1 + 112) |= v98;
                break;
              default:
                continue;
            }
          }
        }
LABEL_168:
        if (v103)
        {
          v3 = *(_BYTE *)(v3 + *v21) == 0;
          if ((v18 & 1) == 0)
            return v3;
LABEL_172:
          v99 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        else
        {
          v3 = 0;
          if ((v18 & 1) != 0)
            goto LABEL_172;
        }
        return v3;
      default:
        if ((v101 & 1) == 0 || (*(_WORD *)(a1 + 112) & 0x10) != 0)
        {
LABEL_111:
          v85 = PBReaderSkipValueWithTag();
          v23 = (int *)MEMORY[0x1E0D82BB8];
          v21 = (int *)MEMORY[0x1E0D82BC8];
          v18 = v102;
          if ((v85 & 1) == 0)
          {
            v103 = 0;
            goto LABEL_156;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v43 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v44 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v43;

          }
          v45 = PBUnknownFieldAdd();
          v18 = v102;
          v21 = (int *)MEMORY[0x1E0D82BC8];
          v23 = (int *)MEMORY[0x1E0D82BB8];
          if (!v45)
          {
            v103 = 0;
            goto LABEL_158;
          }
        }
        goto LABEL_142;
    }
  }
}

void sub_188B37FB8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B380C8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B3881C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B38928(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDExtendedGeoLookupParametersReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 100))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDExtendedGeoLookupParametersReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 104));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 96) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 100) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDExtendedGeoLookupParametersReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDExtendedGeoLookupParametersReadAllFrom_initialTag;
  Specified = GEOPDExtendedGeoLookupParametersReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    objc_msgSend(*(id *)(a1 + 64), "readAll:", 1);
    objc_msgSend(*(id *)(a1 + 80), "readAll:", 1);
    objc_msgSend(*(id *)(a1 + 56), "readAll:", 1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 104));
  return Specified;
}

void sub_188B38BB8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B38E4C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDExtendedGeoLookupParametersIsDirty(uint64_t a1)
{
  unsigned int v2;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 104));
  v2 = *(unsigned __int16 *)(a1 + 112);
  if ((v2 & 0x400) != 0)
    return 1;
  if ((v2 & 0x100) != 0)
  {
    if (GEOAddressIsDirty(*(_QWORD *)(a1 + 64)))
      return 1;
    v2 = *(unsigned __int16 *)(a1 + 112);
  }
  if ((v2 & 0x260) != 0)
    return 1;
  return (v2 >> 7) & 1;
}

os_unfair_lock_s *GEOPDExtendedGeoLookupParametersIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOPDExtendedGeoLookupParametersIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 26);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_188B39188(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDExtendedGeoLookupResultReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  unint64_t v18;
  char v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  char v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  uint64_t v33;
  void *v34;
  id v35;
  void *v36;
  _BOOL8 v37;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        v18 = v10 >> 3;
        if ((v10 >> 3) == 3)
        {
          v26 = 0;
          v27 = 0;
          v28 = 0;
          *(_BYTE *)(a1 + 32) |= 1u;
          while (1)
          {
            v29 = *v4;
            v30 = *(_QWORD *)&v3[v29];
            v31 = v30 + 1;
            if (v30 == -1 || v31 > *(_QWORD *)&v3[*v5])
              break;
            v32 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v30);
            *(_QWORD *)&v3[v29] = v31;
            v28 |= (unint64_t)(v32 & 0x7F) << v26;
            if ((v32 & 0x80) == 0)
              goto LABEL_46;
            v26 += 7;
            v15 = v27++ >= 9;
            if (v15)
            {
              LODWORD(v28) = 0;
              goto LABEL_48;
            }
          }
          v3[*v6] = 1;
LABEL_46:
          if (v3[*v6])
            LODWORD(v28) = 0;
LABEL_48:
          *(_DWORD *)(a1 + 24) = v28;
        }
        else if ((_DWORD)v18 == 2)
        {
          PBReaderReadString();
          v33 = objc_claimAutoreleasedReturnValue();
          v34 = *(void **)(a1 + 16);
          *(_QWORD *)(a1 + 16) = v33;

        }
        else if ((_DWORD)v18 == 1)
        {
          v19 = 0;
          v20 = 0;
          v21 = 0;
          *(_BYTE *)(a1 + 32) |= 2u;
          while (1)
          {
            v22 = *v4;
            v23 = *(_QWORD *)&v3[v22];
            v24 = v23 + 1;
            if (v23 == -1 || v24 > *(_QWORD *)&v3[*v5])
              break;
            v25 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v23);
            *(_QWORD *)&v3[v22] = v24;
            v21 |= (unint64_t)(v25 & 0x7F) << v19;
            if ((v25 & 0x80) == 0)
              goto LABEL_42;
            v19 += 7;
            v15 = v20++ >= 9;
            if (v15)
            {
              v21 = 0;
              goto LABEL_44;
            }
          }
          v3[*v6] = 1;
LABEL_42:
          if (v3[*v6])
            v21 = 0;
LABEL_44:
          *(_BYTE *)(a1 + 28) = v21 != 0;
        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v35 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v36 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v35;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_51;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v37 = v3[*v6] == 0;
  }
  else
  {
LABEL_51:
    v37 = 0;
  }
  objc_sync_exit(v3);

  return v37;
}

void sub_188B39C44(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B3A0E8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDExternalTransitLookupParametersReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  int *v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  int v29;
  unint64_t v31;
  BOOL v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  id v40;
  void *v41;
  int v42;
  GEOLocation *v43;
  void *v44;
  uint64_t v45;
  void *v46;
  char v47;
  char v48;
  int v49;
  char v50;
  void *v51;
  int v53;
  int *v54;
  char v55;
  char v56;
  char v57;
  char v58;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 60);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 56));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = vaddv_s16((int16x4_t)(*(_QWORD *)&vshl_u16((uint16x4_t)(*(_QWORD *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 68)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFFFFFEFFFCFFFDLL) & 0xFF01FF01FF01FF01));
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v9])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 > 1;
        v55 = v16 & ~(_BYTE)v11 | v7;
        v56 = v16 | v11 | v55;
        if ((((v16 | v11) | v8) & 1) != 0)
          v17 = 0;
        else
          v17 = a3;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v57 = (v17 == 0) | v16 | v11;
        v58 = v16 | v11;
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v7;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v9;
        v7 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v19))
      goto LABEL_74;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0)
        goto LABEL_25;
      v21 += 7;
      if (v22++ >= 9)
      {
        v23 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_25:
    v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_27:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_74:
      v53 = 1;
      goto LABEL_75;
    }
    v31 = v23 >> 3;
    v32 = v58;
    if ((v57 & 1) == 0)
    {
      v33 = v17;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if ((v8 & 1) == 0)
          goto LABEL_63;
        *(_BYTE *)(a1 + 68) |= 1u;
        v37 = *v18;
        v38 = *(_QWORD *)(v3 + v37);
        if (v38 <= 0xFFFFFFFFFFFFFFF7 && v38 + 8 <= *(_QWORD *)(v3 + *v6))
        {
          v39 = *(_QWORD *)(*(_QWORD *)(v3 + *v20) + v38);
          *(_QWORD *)(v3 + v37) = v38 + 8;
        }
        else
        {
          *(_BYTE *)(v3 + *v19) = 1;
          v39 = 0;
        }
        *(_QWORD *)(a1 + 48) = v39;
        goto LABEL_73;
      case 2:
        if (!v32)
          goto LABEL_63;
        if ((*(_BYTE *)(a1 + 68) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_92;
          v48 = 8 * *(_BYTE *)(a1 + 68);
LABEL_69:
          v9 += v48 >> 7;
          goto LABEL_70;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_92;
        v43 = objc_alloc_init(GEOLocation);
        if (GEOLocationReadAllFrom((uint64_t)v43, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          v44 = *(void **)(a1 + 40);
          *(_QWORD *)(a1 + 40) = v43;
LABEL_57:

          --v9;
LABEL_70:
          v19 = (int *)MEMORY[0x1E0D82BC8];
          v20 = (int *)MEMORY[0x1E0D82BB8];
          goto LABEL_73;
        }

LABEL_92:
        v53 = 0;
        v54 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
        v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_76:
        if ((v55 & 1) != 0)
LABEL_77:
          *(_BYTE *)(a1 + v54[287]) |= 2u;
        if (v58 & 1 | ((v53 & 1) == 0))
        {
          *(_BYTE *)(a1 + v54[287]) |= 0x10u;
          *(_BYTE *)(a1 + v54[287]) |= 8u;
          *(_BYTE *)(a1 + v54[287]) |= 4u;
        }
        else if (v17)
        {
          while (1)
          {
            v49 = *v17++;
            v50 = 16;
            switch(v49)
            {
              case 0:
                goto LABEL_85;
              case 2:
                goto LABEL_84;
              case 3:
                v50 = 8;
                goto LABEL_84;
              case 4:
                v50 = 4;
LABEL_84:
                *(_BYTE *)(a1 + v54[287]) |= v50;
                break;
              default:
                continue;
            }
          }
        }
LABEL_85:
        if (v53)
          v3 = *(_BYTE *)(v3 + *v19) == 0;
        else
          v3 = 0;
        if ((v58 & 1) != 0)
        {
          v51 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      case 3:
        if (!v32)
          goto LABEL_63;
        if ((*(_BYTE *)(a1 + 68) & 8) == 0)
        {
          PBReaderReadString();
          v45 = objc_claimAutoreleasedReturnValue();
          v44 = *(void **)(a1 + 32);
          *(_QWORD *)(a1 + 32) = v45;
          goto LABEL_57;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_92;
        v48 = 16 * *(_BYTE *)(a1 + 68);
        goto LABEL_69;
      case 4:
        if (!v32 || (*(_BYTE *)(a1 + 68) & 4) != 0)
          goto LABEL_63;
        PBReaderReadData();
        v46 = (void *)objc_claimAutoreleasedReturnValue();
        if (v46)
          -[GEOPDExternalTransitLookupParameters _addNoFlagsExternalTransitStationCode:](a1, v46);

        goto LABEL_70;
      default:
        if ((v55 & 1) == 0 || (*(_BYTE *)(a1 + 68) & 2) != 0)
        {
LABEL_63:
          v47 = PBReaderSkipValueWithTag();
          v20 = (int *)MEMORY[0x1E0D82BB8];
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if ((v47 & 1) == 0)
          {
            v53 = 0;
LABEL_75:
            v54 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
            goto LABEL_76;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v40 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v41 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v40;

          }
          v42 = PBUnknownFieldAdd();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          v20 = (int *)MEMORY[0x1E0D82BB8];
          if (!v42)
          {
            v53 = 0;
            v54 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
            goto LABEL_77;
          }
        }
LABEL_73:
        if (!(v56 & 1 | (v9 != 0)))
          goto LABEL_74;
        continue;
    }
  }
}

void sub_188B3A8FC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B3AF6C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B3B058(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDExternalTransitLookupParametersReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 60))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDExternalTransitLookupParametersReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 60) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDExternalTransitLookupParametersReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDExternalTransitLookupParametersReadAllFrom_initialTag;
  Specified = GEOPDExternalTransitLookupParametersReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    objc_msgSend(*(id *)(a1 + 40), "readAll:", 1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_188B3B2C0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B3B530(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDExternalTransitLookupParametersIsDirty(uint64_t a1)
{
  unsigned int v2;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  v2 = *(unsigned __int8 *)(a1 + 68);
  if ((v2 & 0x20) != 0)
    return 1;
  if ((v2 & 0x10) != 0)
  {
    if (GEOLocationIsDirty(*(os_unfair_lock_s **)(a1 + 40)))
      return 1;
    v2 = *(unsigned __int8 *)(a1 + 68);
  }
  if ((v2 & 8) == 0)
    return (v2 >> 2) & 1;
  return 1;
}

os_unfair_lock_s *GEOPDExternalTransitLookupParametersIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOPDExternalTransitLookupParametersIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 16);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void GEOPDExternalTransitLookupParametersClearSensitiveFields(uint64_t a1, uint64_t a2, int a3)
{
  void *v5;
  int HasSensitiveFields;
  void *v7;
  _DWORD *v8;

  if (a1
    && a3
    && (-[GEOPDExternalTransitLookupParameters _readTransactionLocation](a1), *(_QWORD *)(a1 + 40))
    && (-[GEOPDExternalTransitLookupParameters transactionLocation]((id *)a1),
        v5 = (void *)objc_claimAutoreleasedReturnValue(),
        HasSensitiveFields = GEOLocationHasSensitiveFields((uint64_t)v5),
        v5,
        HasSensitiveFields))
  {
    -[GEOPDExternalTransitLookupParameters transactionLocation]((id *)a1);
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = (_DWORD *)objc_msgSend(v7, "copy");

    GEOLocationClearSensitiveFields(v8);
    -[GEOPDExternalTransitLookupParameters setTransactionLocation:](a1, v8);
  }
  else
  {
    -[GEOPDExternalTransitLookupParameters transactionLocation]((id *)a1);
    v8 = (_DWORD *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "clearSensitiveFields:", a2);
  }

}

void sub_188B3B960(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDExternalTransitLookupResultReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  uint64_t v18;
  void *v19;
  id v20;
  void *v21;
  _BOOL8 v22;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 1)
        {
          PBReaderReadString();
          v18 = objc_claimAutoreleasedReturnValue();
          v19 = *(void **)(a1 + 16);
          *(_QWORD *)(a1 + 16) = v18;

        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v20 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v21 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v20;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_26;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v22 = v3[*v6] == 0;
  }
  else
  {
LABEL_26:
    v22 = 0;
  }
  objc_sync_exit(v3);

  return v22;
}

void sub_188B3C0C8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B3C424(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDFeatureIdGeocodingParametersReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  char v18;
  char v19;
  int *v20;
  int *v21;
  char v22;
  int *v23;
  int *v24;
  char v25;
  unsigned int v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  BOOL v32;
  int v33;
  int v34;
  unint64_t v36;
  BOOL v37;
  int *v38;
  int v39;
  int v40;
  BOOL v41;
  char v42;
  unsigned int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  char v48;
  id v49;
  void *v50;
  int v51;
  GEOLatLng *v52;
  void *v53;
  char v54;
  unsigned int v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  char v60;
  char v61;
  unsigned int v62;
  uint64_t v63;
  int *v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  char v68;
  char v69;
  char v70;
  unsigned int v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  char v76;
  char v77;
  int v78;
  int v79;
  void *v80;
  char v82;
  char v83;
  int v84;
  char v85;
  char v86;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 68);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 64));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
  v13 = ((*(unsigned __int8 *)(a1 + 80) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 80) >> 4) & 1)
      + ((*(unsigned __int8 *)(a1 + 80) >> 2) & 1);
  while (2)
  {
    v14 = 1;
    v15 = 1;
    v16 = 1;
    switch(a3[v9])
    {
      case -4:
        ++v13;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v15 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v17 = v13 != 0;
        v18 = v17 & ~(_BYTE)v11 | v7;
        v19 = v17 | v11;
        v20 = (int *)MEMORY[0x1E0D82BF0];
        if ((((v17 | v11) | v8) & 1) != 0)
          v21 = 0;
        else
          v21 = a3;
        v84 = 1;
        v22 = v18;
        if (*(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(v3 + *v6))
          goto LABEL_110;
        v82 = v18;
        v85 = v19 | v18;
        v23 = (int *)MEMORY[0x1E0D82BC8];
        v86 = (v21 == 0) | v19;
        v24 = (int *)MEMORY[0x1E0D82BB8];
        v83 = v19;
        break;
      default:
        ++v13;
LABEL_7:
        v14 = v7;
LABEL_8:
        v15 = v10;
        v16 = v11;
LABEL_10:
        ++v9;
        v7 = v14;
        v10 = v15;
        v11 = v16;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_BYTE *)(v3 + *v23))
      goto LABEL_108;
    v25 = 0;
    v26 = 0;
    v27 = 0;
    while (1)
    {
      v28 = *v20;
      v29 = *(_QWORD *)(v3 + v28);
      v30 = v29 + 1;
      if (v29 == -1 || v30 > *(_QWORD *)(v3 + *v6))
        break;
      v31 = *(_BYTE *)(*(_QWORD *)(v3 + *v24) + v29);
      *(_QWORD *)(v3 + v28) = v30;
      v27 |= (unint64_t)(v31 & 0x7F) << v25;
      if ((v31 & 0x80) == 0)
        goto LABEL_25;
      v25 += 7;
      v32 = v26++ >= 9;
      if (v32)
      {
        v27 = 0;
        v33 = *(unsigned __int8 *)(v3 + *v23);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v23) = 1;
LABEL_25:
    v33 = *(unsigned __int8 *)(v3 + *v23);
    if (*(_BYTE *)(v3 + *v23))
      v27 = 0;
LABEL_27:
    v34 = v27 & 7;
    if (v33 || v34 == 4)
    {
LABEL_108:
      v84 = 1;
      goto LABEL_109;
    }
    v36 = v27 >> 3;
    v37 = v19;
    if ((v86 & 1) == 0)
    {
      v38 = v21;
      do
      {
        v40 = *v38++;
        v39 = v40;
        v37 = v40 != 0;
        if (v40)
          v41 = v39 == (_DWORD)v36;
        else
          v41 = 1;
      }
      while (!v41);
    }
    switch((int)v36)
    {
      case 1:
        if ((v8 & 1) == 0)
          goto LABEL_82;
        v42 = 0;
        v43 = 0;
        v44 = 0;
        *(_BYTE *)(a1 + v12[292]) |= 1u;
        v23 = (int *)MEMORY[0x1E0D82BC8];
        while (1)
        {
          v45 = *v20;
          v46 = *(_QWORD *)(v3 + v45);
          v47 = v46 + 1;
          if (v46 == -1 || v47 > *(_QWORD *)(v3 + *v6))
            break;
          v48 = *(_BYTE *)(*(_QWORD *)(v3 + *v24) + v46);
          *(_QWORD *)(v3 + v45) = v47;
          v44 |= (unint64_t)(v48 & 0x7F) << v42;
          if ((v48 & 0x80) == 0)
            goto LABEL_87;
          v42 += 7;
          v32 = v43++ >= 9;
          if (v32)
          {
            v44 = 0;
            goto LABEL_89;
          }
        }
        *(_BYTE *)(v3 + *v23) = 1;
LABEL_87:
        if (*(_BYTE *)(v3 + *v23))
          v44 = 0;
LABEL_89:
        *(_QWORD *)(a1 + 48) = v44;
        goto LABEL_83;
      case 2:
        if (!v37)
          goto LABEL_82;
        if ((*(_BYTE *)(a1 + v12[292]) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_130;
          v12 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
          v9 += *(unsigned __int8 *)(a1 + 80) << 27 >> 31;
          goto LABEL_96;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_130;
        v52 = objc_alloc_init(GEOLatLng);
        if (GEOLatLngReadAllFrom((uint64_t)v52, (void *)v3))
        {
          PBReaderRecallMark();
          v53 = *(void **)(a1 + 56);
          *(_QWORD *)(a1 + 56) = v52;

          --v9;
          v12 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
LABEL_96:
          v19 = v83;
          v23 = (int *)MEMORY[0x1E0D82BC8];
LABEL_107:
          v24 = (int *)MEMORY[0x1E0D82BB8];
LABEL_83:
          if (!(v85 & 1 | (v9 != 0)) || *(_QWORD *)(v3 + *v20) >= *(_QWORD *)(v3 + *v6))
            goto LABEL_108;
          continue;
        }

LABEL_130:
        v84 = 0;
        v12 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
        v19 = v83;
LABEL_109:
        v22 = v82;
LABEL_110:
        if ((v22 & 1) != 0)
LABEL_111:
          *(_BYTE *)(a1 + v12[292]) |= 4u;
        if (v19 & 1 | ((v84 & 1) == 0))
        {
          *(_BYTE *)(a1 + v12[292]) |= 8u;
          *(_BYTE *)(a1 + v12[292]) |= 0x10u;
          goto LABEL_122;
        }
        if (v21)
        {
          while (1)
          {
            v79 = *v21++;
            v78 = v79;
            if (v79 == 2)
              break;
            if (v78 == 4)
            {
              v77 = 8;
LABEL_118:
              *(_BYTE *)(a1 + v12[292]) |= v77;
            }
            else if (!v78)
            {
              goto LABEL_122;
            }
          }
          v77 = 16;
          goto LABEL_118;
        }
LABEL_122:
        if (v84)
        {
          v3 = *(_BYTE *)(v3 + (int)*MEMORY[0x1E0D82BC8]) == 0;
          if ((v19 & 1) == 0)
            return v3;
LABEL_126:
          v80 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        else
        {
          v3 = 0;
          if ((v19 & 1) != 0)
            goto LABEL_126;
        }
        return v3;
      case 3:
        if ((v8 & 1) == 0)
          goto LABEL_82;
        v54 = 0;
        v55 = 0;
        v56 = 0;
        *(_BYTE *)(a1 + v12[292]) |= 2u;
        v23 = (int *)MEMORY[0x1E0D82BC8];
        while (2)
        {
          v57 = *v20;
          v58 = *(_QWORD *)(v3 + v57);
          v59 = v58 + 1;
          if (v58 == -1 || v59 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v23) = 1;
          }
          else
          {
            v60 = *(_BYTE *)(*(_QWORD *)(v3 + *v24) + v58);
            *(_QWORD *)(v3 + v57) = v59;
            v56 |= (unint64_t)(v60 & 0x7F) << v54;
            if (v60 < 0)
            {
              v54 += 7;
              v32 = v55++ >= 9;
              if (v32)
              {
                LODWORD(v56) = 0;
                goto LABEL_93;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v23))
          LODWORD(v56) = 0;
LABEL_93:
        *(_DWORD *)(a1 + 76) = v56;
        goto LABEL_83;
      case 4:
        if (!v37 || (*(_BYTE *)(a1 + v12[292]) & 8) != 0)
          goto LABEL_82;
        if (v34 == 2)
        {
          if (!PBReaderPlaceMark())
            goto LABEL_130;
          v23 = (int *)MEMORY[0x1E0D82BC8];
          while (*(_QWORD *)(v3 + *v20) < *(_QWORD *)(v3 + *v6))
          {
            if (*(_BYTE *)(v3 + *v23))
              break;
            v61 = 0;
            v62 = 0;
            v63 = 0;
            v64 = (int *)MEMORY[0x1E0D82BB8];
            while (1)
            {
              v65 = *v20;
              v66 = *(_QWORD *)(v3 + v65);
              v67 = v66 + 1;
              if (v66 == -1 || v67 > *(_QWORD *)(v3 + *v6))
                break;
              v68 = *(_BYTE *)(*(_QWORD *)(v3 + *v64) + v66);
              *(_QWORD *)(v3 + v65) = v67;
              v63 |= (unint64_t)(v68 & 0x7F) << v61;
              if (v68 < 0)
              {
                v61 += 7;
                v32 = v62++ >= 9;
                if (!v32)
                  continue;
              }
              goto LABEL_80;
            }
            *(_BYTE *)(v3 + *v23) = 1;
LABEL_80:
            PBRepeatedUInt64Add();
          }
          PBReaderRecallMark();
        }
        else
        {
          v70 = 0;
          v71 = 0;
          v72 = 0;
          v23 = (int *)MEMORY[0x1E0D82BC8];
          while (1)
          {
            v73 = *v20;
            v74 = *(_QWORD *)(v3 + v73);
            v75 = v74 + 1;
            if (v74 == -1 || v75 > *(_QWORD *)(v3 + *v6))
              break;
            v76 = *(_BYTE *)(*(_QWORD *)(v3 + *v24) + v74);
            *(_QWORD *)(v3 + v73) = v75;
            v72 |= (unint64_t)(v76 & 0x7F) << v70;
            if (v76 < 0)
            {
              v70 += 7;
              v32 = v71++ >= 9;
              if (!v32)
                continue;
            }
            goto LABEL_105;
          }
          *(_BYTE *)(v3 + *v23) = 1;
LABEL_105:
          PBRepeatedUInt64Add();
        }
        v12 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
        v19 = v83;
        goto LABEL_107;
      default:
        if ((v82 & 1) == 0 || (*(_BYTE *)(a1 + v12[292]) & 4) != 0)
        {
LABEL_82:
          v69 = PBReaderSkipValueWithTag();
          v24 = (int *)MEMORY[0x1E0D82BB8];
          v19 = v83;
          v12 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
          v23 = (int *)MEMORY[0x1E0D82BC8];
          if ((v69 & 1) == 0)
          {
            v84 = 0;
            goto LABEL_109;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v49 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v50 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v49;

          }
          v51 = PBUnknownFieldAdd();
          v12 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
          v19 = v83;
          v23 = (int *)MEMORY[0x1E0D82BC8];
          v24 = (int *)MEMORY[0x1E0D82BB8];
          if (!v51)
          {
            v84 = 0;
            goto LABEL_111;
          }
        }
        goto LABEL_83;
    }
  }
}

void sub_188B3CDC4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B3D240(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDFeatureIdGeocodingParametersReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 68))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDFeatureIdGeocodingParametersReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 72));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 64) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 68) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDFeatureIdGeocodingParametersReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDFeatureIdGeocodingParametersReadAllFrom_initialTag;
  Specified = GEOPDFeatureIdGeocodingParametersReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    objc_msgSend(*(id *)(a1 + 56), "readAll:", 1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return Specified;
}

void sub_188B3D4AC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B3D6A4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDFeatureIdGeocodingParametersIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  v2 = (*(_BYTE *)(a1 + 80) & 0x38) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return v2;
}

void sub_188B3D8E0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDFeatureIdGeocodingResultReadAllFrom(uint64_t a1, void *a2)
{
  unsigned __int8 *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  int v8;
  char v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  char v17;
  BOOL v18;
  id v19;
  void *v20;
  _BOOL8 v21;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    v7 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      v8 = v3[*v6];
      if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
        break;
      if (v3[*v6])
      {
        v8 = 1;
        break;
      }
      v9 = 0;
      v10 = 0;
      v11 = 0;
      while (1)
      {
        v12 = *v4;
        v13 = *(_QWORD *)&v3[v12];
        v14 = v13 + 1;
        if (v13 == -1 || v14 > *(_QWORD *)&v3[*v5])
          break;
        v15 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v13);
        *(_QWORD *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0)
          goto LABEL_13;
        v9 += 7;
        if (v10++ >= 9)
        {
          v17 = 0;
          v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      v8 = v3[*v6];
      if (v3[*v6])
        v17 = 0;
      else
        v17 = v11;
LABEL_16:
      if (v8)
        v18 = 1;
      else
        v18 = (v17 & 7) == 4;
      if (v18)
        break;
      if (!*(_QWORD *)(a1 + 8))
      {
        v19 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v20 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = v19;

      }
      if ((PBUnknownFieldAdd() & 1) == 0)
        goto LABEL_23;
    }
    v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_188B3DF1C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B3E0DC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B3E220(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B3E2C0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B3E394(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B3E918(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDGeocodingParametersCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 56), "readAll:", 1);
  -[GEOPDSPunchInHints readAll:](*(_QWORD *)(a1 + 32), 1);
  -[GEOPDAddressResultSubTypeFilter readAll:](*(_QWORD *)(a1 + 24), 1);
}

BOOL _GEOPDGeocodingParametersIsDirty(uint64_t a1)
{
  __int16 v2;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  v2 = *(_WORD *)(a1 + 84);
  if ((v2 & 0x1E0) != 0)
    return 1;
  if ((v2 & 0x10) != 0)
  {
    if ((GEOPDSPunchInHintsIsDirty(*(os_unfair_lock_s **)(a1 + 32)) & 1) != 0)
      return 1;
    v2 = *(_WORD *)(a1 + 84);
  }
  return (v2 & 8) != 0 && GEOPDAddressResultSubTypeFilterIsDirty(*(_QWORD *)(a1 + 24));
}

BOOL GEOPDGeocodingResultReadAllFrom(uint64_t a1, void *a2, int a3)
{
  char *v5;
  int *v6;
  int *v7;
  int *v8;
  int *v9;
  char v10;
  unsigned int v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  int v18;
  GEOPDMultiLocalizedString *v20;
  id v21;
  void *v22;
  _BOOL8 v23;

  v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    v6 = (int *)MEMORY[0x1E0D82BF0];
    v7 = (int *)MEMORY[0x1E0D82BD8];
    v8 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v5[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v5[*MEMORY[0x1E0D82BD8]])
    {
      v9 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v5[*v8])
          break;
        v10 = 0;
        v11 = 0;
        v12 = 0;
        while (1)
        {
          v13 = *v6;
          v14 = *(_QWORD *)&v5[v13];
          v15 = v14 + 1;
          if (v14 == -1 || v15 > *(_QWORD *)&v5[*v7])
            break;
          v16 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v14);
          *(_QWORD *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0)
            goto LABEL_13;
          v10 += 7;
          if (v11++ >= 9)
          {
            v12 = 0;
            v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        v18 = v5[*v8];
        if (v5[*v8])
          v12 = 0;
LABEL_15:
        if (v18 || (v12 & 7) == 4)
          break;
        if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_29;
          v20 = objc_alloc_init(GEOPDMultiLocalizedString);
          if (!GEOPDMultiLocalizedStringReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          -[GEOPDGeocodingResult addDisambiguationLabel:](a1, v20);

        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v21 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v22 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v21;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_29;
        }
      }
      while (*(_QWORD *)&v5[*v6] < *(_QWORD *)&v5[*v7]);
    }
    v23 = v5[*v8] == 0;
  }
  else
  {
LABEL_29:
    v23 = 0;
  }
  objc_sync_exit(v5);

  return v23;
}

void sub_188B3F468(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDGroundViewLabelParametersReadAllFrom(uint64_t a1, void *a2, int a3)
{
  char *v5;
  int *v6;
  int *v7;
  int *v8;
  int *v9;
  char v10;
  unsigned int v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  BOOL v17;
  int v18;
  char v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  GEOLocation *v27;
  void *v28;
  id v29;
  void *v30;
  _BOOL8 v31;

  v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    v6 = (int *)MEMORY[0x1E0D82BF0];
    v7 = (int *)MEMORY[0x1E0D82BD8];
    v8 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v5[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v5[*MEMORY[0x1E0D82BD8]])
    {
      v9 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v5[*v8])
          break;
        v10 = 0;
        v11 = 0;
        v12 = 0;
        while (1)
        {
          v13 = *v6;
          v14 = *(_QWORD *)&v5[v13];
          v15 = v14 + 1;
          if (v14 == -1 || v15 > *(_QWORD *)&v5[*v7])
            break;
          v16 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v14);
          *(_QWORD *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0)
            goto LABEL_13;
          v10 += 7;
          v17 = v11++ >= 9;
          if (v17)
          {
            v12 = 0;
            v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        v18 = v5[*v8];
        if (v5[*v8])
          v12 = 0;
LABEL_15:
        if (v18 || (v12 & 7) == 4)
          break;
        if ((v12 >> 3) == 2)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_42;
          v27 = objc_alloc_init(GEOLocation);
          if (!GEOLocationReadAllFrom((uint64_t)v27, v5, a3))
          {

            goto LABEL_42;
          }
          PBReaderRecallMark();
          v28 = *(void **)(a1 + 24);
          *(_QWORD *)(a1 + 24) = v27;

        }
        else if ((v12 >> 3) == 1)
        {
          v20 = 0;
          v21 = 0;
          v22 = 0;
          *(_BYTE *)(a1 + 32) |= 1u;
          while (1)
          {
            v23 = *v6;
            v24 = *(_QWORD *)&v5[v23];
            v25 = v24 + 1;
            if (v24 == -1 || v25 > *(_QWORD *)&v5[*v7])
              break;
            v26 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v24);
            *(_QWORD *)&v5[v23] = v25;
            v22 |= (unint64_t)(v26 & 0x7F) << v20;
            if ((v26 & 0x80) == 0)
              goto LABEL_36;
            v20 += 7;
            v17 = v21++ >= 9;
            if (v17)
            {
              v22 = 0;
              goto LABEL_38;
            }
          }
          v5[*v8] = 1;
LABEL_36:
          if (v5[*v8])
            v22 = 0;
LABEL_38:
          *(_QWORD *)(a1 + 16) = v22;
        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v29 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v30 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v29;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_42;
        }
      }
      while (*(_QWORD *)&v5[*v6] < *(_QWORD *)&v5[*v7]);
    }
    v31 = v5[*v8] == 0;
  }
  else
  {
LABEL_42:
    v31 = 0;
  }
  objc_sync_exit(v5);

  return v31;
}

void sub_188B3FE0C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void GEOPDGroundViewLabelParametersClearSensitiveFields(uint64_t a1, uint64_t a2, int a3)
{
  void *v5;
  id v6;
  int HasSensitiveFields;
  id v8;
  _DWORD *v9;
  _DWORD *v10;

  if (!a1 || !a3)
  {
    if (!a1)
    {
      v9 = 0;
      goto LABEL_8;
    }
LABEL_7:
    v9 = *(id *)(a1 + 24);
LABEL_8:
    v10 = v9;
    objc_msgSend(v9, "clearSensitiveFields:", a2);
    goto LABEL_9;
  }
  v5 = *(void **)(a1 + 24);
  if (!v5)
    goto LABEL_7;
  v6 = v5;
  HasSensitiveFields = GEOLocationHasSensitiveFields((uint64_t)v6);

  if (!HasSensitiveFields)
    goto LABEL_7;
  v8 = *(id *)(a1 + 24);
  v10 = (_DWORD *)objc_msgSend(v8, "copy");

  GEOLocationClearSensitiveFields(v10);
  -[GEOPDGroundViewLabelParameters setLocation:](a1, v10);
LABEL_9:

}

BOOL GEOPDGroundViewLabelResultReadAllFrom(uint64_t a1, void *a2)
{
  unsigned __int8 *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  int v8;
  char v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  char v17;
  BOOL v18;
  id v19;
  void *v20;
  _BOOL8 v21;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    v7 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      v8 = v3[*v6];
      if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
        break;
      if (v3[*v6])
      {
        v8 = 1;
        break;
      }
      v9 = 0;
      v10 = 0;
      v11 = 0;
      while (1)
      {
        v12 = *v4;
        v13 = *(_QWORD *)&v3[v12];
        v14 = v13 + 1;
        if (v13 == -1 || v14 > *(_QWORD *)&v3[*v5])
          break;
        v15 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v13);
        *(_QWORD *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0)
          goto LABEL_13;
        v9 += 7;
        if (v10++ >= 9)
        {
          v17 = 0;
          v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      v8 = v3[*v6];
      if (v3[*v6])
        v17 = 0;
      else
        v17 = v11;
LABEL_16:
      if (v8)
        v18 = 1;
      else
        v18 = (v17 & 7) == 4;
      if (v18)
        break;
      if (!*(_QWORD *)(a1 + 8))
      {
        v19 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v20 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = v19;

      }
      if ((PBUnknownFieldAdd() & 1) == 0)
        goto LABEL_23;
    }
    v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_188B40594(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B40830(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDGuidesHomeFixedSectionReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  int *v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  BOOL v28;
  int v29;
  unint64_t v31;
  BOOL v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  char v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  id v44;
  void *v45;
  int v46;
  uint64_t v47;
  void *v48;
  GEOPDMapsIdentifier *v49;
  char v50;
  int v51;
  char v52;
  void *v53;
  int v55;
  int *v56;
  char v57;
  char v58;
  char v59;
  char v60;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 60);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 56));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = (vaddv_s16((int16x4_t)(*(_QWORD *)&vshl_u16((uint16x4_t)(*(_QWORD *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 72)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFCFFFEFFFBFFFDLL) & 0xFF01FF01FF01FF01))+ ((*(_BYTE *)(a1 + 72) & 2) != 0));
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 > 2;
        v57 = v16 & ~(_BYTE)v11 | v9;
        v58 = v16 | v11 | v57;
        if ((((v16 | v11) | v8) & 1) != 0)
          v17 = 0;
        else
          v17 = a3;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v59 = (v17 == 0) | v16 | v11;
        v60 = v16 | v11;
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v7;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (*(_QWORD *)(v3 + *v18) < *(_QWORD *)(v3 + *v6) && !*(_BYTE *)(v3 + *v19))
  {
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0)
        goto LABEL_25;
      v21 += 7;
      v28 = v22++ >= 9;
      if (v28)
      {
        v23 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_25:
    v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_27:
    if (v29 || (v23 & 7) == 4)
      break;
    v31 = v23 >> 3;
    v32 = v60;
    if ((v59 & 1) == 0)
    {
      v33 = v17;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if ((v8 & 1) == 0)
          goto LABEL_72;
        v37 = 0;
        v38 = 0;
        v39 = 0;
        *(_BYTE *)(a1 + 72) |= 1u;
        while (1)
        {
          v40 = *v18;
          v41 = *(_QWORD *)(v3 + v40);
          v42 = v41 + 1;
          if (v41 == -1 || v42 > *(_QWORD *)(v3 + *v6))
            break;
          v43 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v41);
          *(_QWORD *)(v3 + v40) = v42;
          v39 |= (unint64_t)(v43 & 0x7F) << v37;
          if ((v43 & 0x80) == 0)
            goto LABEL_75;
          v37 += 7;
          v28 = v38++ >= 9;
          if (v28)
          {
            LODWORD(v39) = 0;
            goto LABEL_77;
          }
        }
        *(_BYTE *)(v3 + *v19) = 1;
LABEL_75:
        if (*(_BYTE *)(v3 + *v19))
          LODWORD(v39) = 0;
LABEL_77:
        *(_DWORD *)(a1 + 68) = v39;
        goto LABEL_81;
      case 2:
        if (!v32)
          goto LABEL_72;
        if ((*(_BYTE *)(a1 + 72) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_101;
          v7 += *(unsigned __int8 *)(a1 + 72) << 26 >> 31;
        }
        else
        {
          PBReaderReadString();
          v47 = objc_claimAutoreleasedReturnValue();
          v48 = *(void **)(a1 + 48);
          *(_QWORD *)(a1 + 48) = v47;

          --v7;
        }
        goto LABEL_80;
      case 3:
        if (!v32 || (*(_BYTE *)(a1 + 72) & 8) != 0)
          goto LABEL_72;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_101;
        v49 = objc_alloc_init(GEOPDMapsIdentifier);
        if (!GEOPDMapsIdentifierReadAllFrom((uint64_t)v49, (void *)v3))
          goto LABEL_100;
        PBReaderRecallMark();
        -[GEOPDGuidesHomeFixedSection _addNoFlagsFeaturedGuideId:](a1, v49);
        goto LABEL_71;
      case 4:
        if (!v32 || (*(_BYTE *)(a1 + 72) & 4) != 0)
          goto LABEL_72;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_101;
        v49 = objc_alloc_init(GEOPDGuidesHomeResultFilter);
        if (!GEOPDGuidesHomeResultFilterReadAllFrom((uint64_t)v49, (void *)v3, v10 & 1))
          goto LABEL_100;
        PBReaderRecallMark();
        -[GEOPDGuidesHomeFixedSection _addNoFlagsBrowseByInterestFilter:](a1, v49);
        goto LABEL_71;
      case 5:
        if (!v32 || (*(_BYTE *)(a1 + 72) & 0x10) != 0)
          goto LABEL_72;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_101;
        v49 = objc_alloc_init(GEOPDMapsIdentifier);
        if (GEOPDMapsIdentifierReadAllFrom((uint64_t)v49, (void *)v3))
        {
          PBReaderRecallMark();
          -[GEOPDGuidesHomeFixedSection _addNoFlagsFilteredGuideId:](a1, v49);
LABEL_71:

LABEL_80:
          v19 = (int *)MEMORY[0x1E0D82BC8];
          v20 = (int *)MEMORY[0x1E0D82BB8];
          goto LABEL_81;
        }
LABEL_100:

LABEL_101:
        v55 = 0;
        v56 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
        v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_84:
        if ((v57 & 1) != 0)
LABEL_85:
          *(_BYTE *)(a1 + v56[302]) |= 2u;
        if (v60 & 1 | ((v55 & 1) == 0))
        {
          *(_BYTE *)(a1 + v56[302]) |= 0x20u;
          *(_BYTE *)(a1 + v56[302]) |= 8u;
          *(_BYTE *)(a1 + v56[302]) |= 4u;
          *(_BYTE *)(a1 + v56[302]) |= 0x10u;
        }
        else if (v17)
        {
          while (1)
          {
            v51 = *v17++;
            v52 = 32;
            switch(v51)
            {
              case 0:
                goto LABEL_94;
              case 2:
                goto LABEL_93;
              case 3:
                v52 = 8;
                goto LABEL_93;
              case 4:
                v52 = 4;
                goto LABEL_93;
              case 5:
                v52 = 16;
LABEL_93:
                *(_BYTE *)(a1 + v56[302]) |= v52;
                break;
              default:
                continue;
            }
          }
        }
LABEL_94:
        if (v55)
          v3 = *(_BYTE *)(v3 + *v19) == 0;
        else
          v3 = 0;
        if ((v60 & 1) != 0)
        {
          v53 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      default:
        if ((v57 & 1) == 0 || (*(_BYTE *)(a1 + 72) & 2) != 0)
        {
LABEL_72:
          v50 = PBReaderSkipValueWithTag();
          v20 = (int *)MEMORY[0x1E0D82BB8];
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if ((v50 & 1) == 0)
          {
            v55 = 0;
LABEL_83:
            v56 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
            goto LABEL_84;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v44 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v45 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v44;

          }
          v46 = PBUnknownFieldAdd();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          v20 = (int *)MEMORY[0x1E0D82BB8];
          if (!v46)
          {
            v55 = 0;
            v56 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
            goto LABEL_85;
          }
        }
LABEL_81:
        if (!(v58 & 1 | (v7 != 0)))
          goto LABEL_82;
        break;
    }
  }
LABEL_82:
  v55 = 1;
  goto LABEL_83;
}

void sub_188B4109C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B41284(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B4146C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B41C74(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDGuidesHomeFixedSectionCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  _BYTE v29[128];
  _BYTE v30[128];
  _BYTE v31[128];
  uint64_t v32;

  v32 = *MEMORY[0x1E0C80C00];
  v25 = 0u;
  v26 = 0u;
  v27 = 0u;
  v28 = 0u;
  v2 = a1[4];
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v25, v31, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v26;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v26 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v25 + 1) + 8 * v6++), "readAll:", 1);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v25, v31, 16);
    }
    while (v4);
  }

  v23 = 0u;
  v24 = 0u;
  v21 = 0u;
  v22 = 0u;
  v7 = a1[3];
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v21, v30, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v22;
    do
    {
      v11 = 0;
      do
      {
        if (*(_QWORD *)v22 != v10)
          objc_enumerationMutation(v7);
        -[GEOPDGuidesHomeResultFilter readAll:](*(_QWORD *)(*((_QWORD *)&v21 + 1) + 8 * v11++), 1);
      }
      while (v9 != v11);
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v21, v30, 16);
    }
    while (v9);
  }

  v19 = 0u;
  v20 = 0u;
  v17 = 0u;
  v18 = 0u;
  v12 = a1[5];
  v13 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v17, v29, 16);
  if (v13)
  {
    v14 = v13;
    v15 = *(_QWORD *)v18;
    do
    {
      v16 = 0;
      do
      {
        if (*(_QWORD *)v18 != v15)
          objc_enumerationMutation(v12);
        objc_msgSend(*(id *)(*((_QWORD *)&v17 + 1) + 8 * v16++), "readAll:", 1, (_QWORD)v17);
      }
      while (v14 != v16);
      v14 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v17, v29, 16);
    }
    while (v14);
  }

}

unint64_t GEOPDGuidesHomeFixedSectionReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 60))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDGuidesHomeFixedSectionReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 60) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDGuidesHomeFixedSectionReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDGuidesHomeFixedSectionReadAllFrom_initialTag;
  Specified = GEOPDGuidesHomeFixedSectionReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDGuidesHomeFixedSectionCallReadAllRecursiveWithoutSynchronized((id *)a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_188B42664(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDGuidesHomeFixedSectionIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  _BOOL8 v23;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (!a1[*v4])
    {
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0)
            goto LABEL_42;
          v17 = 0;
          do
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
            {
              a1[*v4] = 1;
              goto LABEL_38;
            }
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if ((v21 & 0x80000000) == 0)
              break;
          }
          while (v17++ <= 8);
          goto LABEL_38;
        case 2u:
          if (v15 == 2)
            goto LABEL_32;
          goto LABEL_42;
        case 3u:
        case 5u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDMapsIdentifierIsValid(a1))
            goto LABEL_42;
          goto LABEL_37;
        case 4u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDGuidesHomeResultFilterIsValid(a1))
            goto LABEL_42;
LABEL_37:
          PBReaderRecallMark();
          goto LABEL_38;
        default:
LABEL_32:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_42:
            PBReaderRecallMark();
            return 0;
          }
LABEL_38:
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_41;
          break;
      }
    }
  }
LABEL_41:
  v23 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v23;
}

BOOL GEOPDGuidesHomeResultFilterIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  BOOL v13;
  int v14;
  int v15;
  unint64_t v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int v22;
  char v24;
  unsigned int v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  int v31;
  int v32;
  int v34;
  _BOOL8 v35;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_65;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        v13 = v7++ >= 9;
        if (v13)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        goto LABEL_65;
      v17 = v8 >> 3;
      if ((v8 >> 3) == 50)
        break;
      if ((_DWORD)v17 == 2)
      {
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_67;
        objc_msgSend(a1, "position", 0, 0);
        objc_msgSend(a1, "length");
        while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3] && !a1[*v4])
        {
          v24 = 0;
          v25 = 0;
          v26 = 0;
          while (1)
          {
            v27 = *v2;
            v28 = *(_QWORD *)&a1[v27];
            v29 = v28 + 1;
            if (v28 == -1 || v29 > *(_QWORD *)&a1[*v3])
              break;
            v30 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v28);
            *(_QWORD *)&a1[v27] = v29;
            v26 |= (unint64_t)(v30 & 0x7F) << v24;
            if ((v30 & 0x80) == 0)
              goto LABEL_46;
            v24 += 7;
            v13 = v25++ >= 9;
            if (v13)
            {
              v26 = 0;
              v31 = a1[*v4];
              goto LABEL_48;
            }
          }
          a1[*v4] = 1;
LABEL_46:
          v31 = a1[*v4];
          if (a1[*v4])
            v26 = 0;
LABEL_48:
          v32 = v26 & 7;
          if (v31 || v32 == 4)
            break;
          if ((v26 >> 3) == 1)
          {
            if (v32 != 2 || !PBReaderPlaceMark() || !GEOPDWarsawMerchantIdentifierIsValid(a1))
            {
LABEL_66:
              PBReaderRecallMark();
              goto LABEL_67;
            }
            PBReaderRecallMark();
          }
          else if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
            goto LABEL_66;
          }
        }
        v34 = a1[*v4];
        PBReaderRecallMark();
        if (v34)
          goto LABEL_67;
LABEL_62:
        PBReaderRecallMark();
        goto LABEL_64;
      }
      if ((_DWORD)v17 == 1)
      {
        if ((v8 & 7) != 0)
          goto LABEL_67;
        v18 = 0;
        while (1)
        {
          v19 = *v2;
          v20 = *(_QWORD *)&a1[v19];
          v21 = v20 + 1;
          if (v20 == -1 || v21 > *(_QWORD *)&a1[*v3])
            break;
          v22 = *(char *)(*(_QWORD *)&a1[*v5] + v20);
          *(_QWORD *)&a1[v19] = v21;
          if (v22 < 0 && v18++ <= 8)
            continue;
          goto LABEL_64;
        }
        a1[*v4] = 1;
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_67;
      }
LABEL_64:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_65;
    }
    if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDGuidesHomeResultFilterIsValid(a1))
    {
LABEL_67:
      PBReaderRecallMark();
      return 0;
    }
    goto LABEL_62;
  }
LABEL_65:
  v35 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v35;
}

void sub_188B4302C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDGuidesHomeFixedSectionIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  v2 = (*(_BYTE *)(a1 + 72) & 0x7C) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return v2;
}

void sub_188B43644(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B44130(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDGuidesHomeParametersReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  char v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  int *v22;
  char v23;
  unsigned int v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  BOOL v30;
  int v31;
  int v32;
  int *v34;
  int *v35;
  unint64_t v36;
  BOOL v37;
  int *v38;
  int v39;
  int v40;
  BOOL v41;
  int v42;
  char v43;
  unsigned int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  id v50;
  void *v51;
  int v52;
  int v53;
  char v54;
  unsigned int v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  char v60;
  char v61;
  GEOPDViewportInfo *v62;
  uint64_t v63;
  char v64;
  void *v65;
  uint64_t v66;
  void *v67;
  char v68;
  char v69;
  char v70;
  char v71;
  char v72;
  char v73;
  unsigned int v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  char v79;
  char v80;
  unsigned int v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  char v86;
  int v87;
  char v88;
  void *v89;
  char v91;
  int v92;
  char v93;
  char v94;
  char v95;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 112));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 108);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 104));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = (vaddv_s16((int16x4_t)(*(_QWORD *)&vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int8 *)(a1 + 116)), (uint16x4_t)0xFFFDFFFAFFFFFFFELL) & 0xFF01FF01FF01FF01))+ (*(_BYTE *)(a1 + 116) & 1)+ ((*(_BYTE *)(a1 + 116) & 0x20) != 0)+ ((*(_BYTE *)(a1 + 116) & 0x10) != 0));
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 > 3;
        v17 = v16 | v11;
        if ((((v16 | v11) | v8) & 1) != 0)
          v18 = 0;
        else
          v18 = a3;
        v19 = (int *)MEMORY[0x1E0D82BF0];
        v92 = 1;
        v20 = (int *)MEMORY[0x1E0D82BC8];
        v21 = v16 & ~(_BYTE)v11 | v9;
        if (*(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(v3 + *v6))
          goto LABEL_138;
        v91 = v16 & ~(_BYTE)v11 | v9;
        v93 = v17 | v91;
        v95 = (v18 == 0) | v17;
        v22 = (int *)MEMORY[0x1E0D82BB8];
        v94 = v16 | v11;
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v7;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_BYTE *)(v3 + *v20))
      goto LABEL_136;
    v23 = 0;
    v24 = 0;
    v25 = 0;
    while (1)
    {
      v26 = *v19;
      v27 = *(_QWORD *)(v3 + v26);
      v28 = v27 + 1;
      if (v27 == -1 || v28 > *(_QWORD *)(v3 + *v6))
        break;
      v29 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v27);
      *(_QWORD *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0)
        goto LABEL_25;
      v23 += 7;
      v30 = v24++ >= 9;
      if (v30)
      {
        v25 = 0;
        v31 = *(unsigned __int8 *)(v3 + *v20);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v20) = 1;
LABEL_25:
    v31 = *(unsigned __int8 *)(v3 + *v20);
    if (*(_BYTE *)(v3 + *v20))
      v25 = 0;
LABEL_27:
    v32 = v25 & 7;
    if (v31 || v32 == 4)
    {
LABEL_136:
      v92 = 1;
      goto LABEL_137;
    }
    v34 = v6;
    v35 = v20;
    v36 = v25 >> 3;
    v37 = v17;
    if ((v95 & 1) == 0)
    {
      v38 = v18;
      do
      {
        v40 = *v38++;
        v39 = v40;
        v37 = v40 != 0;
        if (v40)
          v41 = v39 == (_DWORD)v36;
        else
          v41 = 1;
      }
      while (!v41);
    }
    switch((int)v36)
    {
      case 1:
        v20 = v35;
        if (!v37 || (*(_BYTE *)(a1 + 116) & 2) != 0)
          goto LABEL_101;
        v6 = v34;
        if (v32 == 2)
        {
          v42 = PBReaderPlaceMark();
          v19 = (int *)MEMORY[0x1E0D82BF0];
          if (!v42)
            goto LABEL_157;
          v22 = (int *)MEMORY[0x1E0D82BB8];
          if (*(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(v3 + *v6))
          {
            while (1)
            {
              if (*(_BYTE *)(v3 + *v20))
                goto LABEL_76;
              v43 = 0;
              v44 = 0;
              v45 = 0;
              while (1)
              {
                v46 = *v19;
                v47 = *(_QWORD *)(v3 + v46);
                v48 = v47 + 1;
                if (v47 == -1 || v48 > *(_QWORD *)(v3 + *v6))
                  break;
                v49 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v47);
                *(_QWORD *)(v3 + v46) = v48;
                v45 |= (unint64_t)(v49 & 0x7F) << v43;
                if (v49 < 0)
                {
                  v43 += 7;
                  v30 = v44++ >= 9;
                  if (!v30)
                    continue;
                }
                goto LABEL_53;
              }
              *(_BYTE *)(v3 + *v20) = 1;
LABEL_53:
              PBRepeatedInt32Add();
              if (*(_QWORD *)(v3 + *v19) >= *(_QWORD *)(v3 + *v6))
                goto LABEL_76;
            }
          }
          goto LABEL_76;
        }
        v73 = 0;
        v74 = 0;
        v75 = 0;
        v19 = (int *)MEMORY[0x1E0D82BF0];
        v22 = (int *)MEMORY[0x1E0D82BB8];
        while (1)
        {
          v76 = *v19;
          v77 = *(_QWORD *)(v3 + v76);
          v78 = v77 + 1;
          if (v77 == -1 || v78 > *(_QWORD *)(v3 + *v6))
            goto LABEL_131;
          v79 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v77);
          *(_QWORD *)(v3 + v76) = v78;
          v75 |= (unint64_t)(v79 & 0x7F) << v73;
          if (v79 < 0)
          {
            v73 += 7;
            v30 = v74++ >= 9;
            if (!v30)
              continue;
          }
          goto LABEL_132;
        }
      case 2:
        v20 = v35;
        if (!v37 || (*(_BYTE *)(a1 + 116) & 4) != 0)
          goto LABEL_101;
        v6 = v34;
        if (v32 == 2)
        {
          v53 = PBReaderPlaceMark();
          v19 = (int *)MEMORY[0x1E0D82BF0];
          if (!v53)
            goto LABEL_157;
          v22 = (int *)MEMORY[0x1E0D82BB8];
          if (*(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(v3 + *v6))
          {
            do
            {
              if (*(_BYTE *)(v3 + *v20))
                break;
              v54 = 0;
              v55 = 0;
              v56 = 0;
              while (1)
              {
                v57 = *v19;
                v58 = *(_QWORD *)(v3 + v57);
                v59 = v58 + 1;
                if (v58 == -1 || v59 > *(_QWORD *)(v3 + *v6))
                  break;
                v60 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v58);
                *(_QWORD *)(v3 + v57) = v59;
                v56 |= (unint64_t)(v60 & 0x7F) << v54;
                if (v60 < 0)
                {
                  v54 += 7;
                  v30 = v55++ >= 9;
                  if (!v30)
                    continue;
                }
                goto LABEL_75;
              }
              *(_BYTE *)(v3 + *v20) = 1;
LABEL_75:
              PBRepeatedInt32Add();
            }
            while (*(_QWORD *)(v3 + *v19) < *(_QWORD *)(v3 + *v6));
          }
LABEL_76:
          PBReaderRecallMark();
        }
        else
        {
          v80 = 0;
          v81 = 0;
          v82 = 0;
          v19 = (int *)MEMORY[0x1E0D82BF0];
          v22 = (int *)MEMORY[0x1E0D82BB8];
          while (1)
          {
            v83 = *v19;
            v84 = *(_QWORD *)(v3 + v83);
            v85 = v84 + 1;
            if (v84 == -1 || v85 > *(_QWORD *)(v3 + *v6))
              break;
            v86 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v84);
            *(_QWORD *)(v3 + v83) = v85;
            v82 |= (unint64_t)(v86 & 0x7F) << v80;
            if (v86 < 0)
            {
              v80 += 7;
              v30 = v81++ >= 9;
              if (!v30)
                continue;
            }
            goto LABEL_132;
          }
LABEL_131:
          *(_BYTE *)(v3 + *v20) = 1;
LABEL_132:
          PBRepeatedInt32Add();
        }
        v17 = v94;
        goto LABEL_134;
      case 3:
        v20 = v35;
        if (!v37)
          goto LABEL_101;
        v6 = v34;
        if ((*(_BYTE *)(a1 + 116) & 0x40) != 0)
        {
          v69 = PBReaderSkipValueWithTag();
          v19 = (int *)MEMORY[0x1E0D82BF0];
          if ((v69 & 1) == 0)
            goto LABEL_157;
          v70 = 2 * *(_BYTE *)(a1 + 116);
          goto LABEL_108;
        }
        v61 = PBReaderPlaceMark();
        v19 = (int *)MEMORY[0x1E0D82BF0];
        if ((v61 & 1) == 0)
          goto LABEL_157;
        v62 = objc_alloc_init(GEOPDViewportInfo);
        if (!GEOPDViewportInfoReadAllFrom((uint64_t)v62, (void *)v3))
          goto LABEL_156;
        PBReaderRecallMark();
        v63 = 96;
        goto LABEL_87;
      case 4:
        v20 = v35;
        if (!v37)
          goto LABEL_101;
        v6 = v34;
        if ((*(_BYTE *)(a1 + 116) & 8) != 0)
        {
          v71 = PBReaderSkipValueWithTag();
          v19 = (int *)MEMORY[0x1E0D82BF0];
          if ((v71 & 1) == 0)
            goto LABEL_157;
          v70 = 16 * *(_BYTE *)(a1 + 116);
LABEL_108:
          v7 += v70 >> 7;
        }
        else
        {
          v64 = PBReaderPlaceMark();
          v19 = (int *)MEMORY[0x1E0D82BF0];
          if ((v64 & 1) == 0)
            goto LABEL_157;
          v62 = objc_alloc_init(GEOPDGuidesLocationEntry);
          if (!GEOPDGuidesLocationEntryReadAllFrom((uint64_t)v62, (void *)v3, v10 & 1))
            goto LABEL_156;
          PBReaderRecallMark();
          v63 = 72;
LABEL_87:
          v65 = *(void **)(a1 + v63);
          *(_QWORD *)(a1 + v63) = v62;

          --v7;
        }
        v17 = v94;
        goto LABEL_116;
      case 5:
        v20 = v35;
        if (!v37)
          goto LABEL_101;
        if ((*(_BYTE *)(a1 + 116) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_157;
          v6 = v34;
          v72 = 4 * *(_BYTE *)(a1 + 116);
          goto LABEL_114;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_157;
        v62 = objc_alloc_init(GEOPDGuidesHomeResultFilter);
        if (!GEOPDGuidesHomeResultFilterReadAllFrom((uint64_t)v62, (void *)v3, v10 & 1))
          goto LABEL_156;
        PBReaderRecallMark();
        v66 = 88;
        goto LABEL_98;
      case 6:
        v20 = v35;
        if (!v37)
        {
LABEL_101:
          v68 = PBReaderSkipValueWithTag();
          v17 = v94;
LABEL_102:
          v6 = v34;
          v19 = (int *)MEMORY[0x1E0D82BF0];
          v22 = (int *)MEMORY[0x1E0D82BB8];
          if ((v68 & 1) == 0)
          {
            v92 = 0;
            goto LABEL_137;
          }
LABEL_134:
          if (!(v93 & 1 | (v7 != 0)) || *(_QWORD *)(v3 + *v19) >= *(_QWORD *)(v3 + *v6))
            goto LABEL_136;
          continue;
        }
        if ((*(_BYTE *)(a1 + 116) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_157;
          v6 = v34;
          v72 = 8 * *(_BYTE *)(a1 + 116);
LABEL_114:
          v7 += v72 >> 7;
          v17 = v94;
LABEL_115:
          v19 = (int *)MEMORY[0x1E0D82BF0];
LABEL_116:
          v22 = (int *)MEMORY[0x1E0D82BB8];
          goto LABEL_134;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_157;
        v62 = objc_alloc_init(GEOPDResultRefinementGuidesHome);
        if (GEOPDResultRefinementGuidesHomeReadAllFrom((uint64_t)v62, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          v66 = 80;
LABEL_98:
          v67 = *(void **)(a1 + v66);
          *(_QWORD *)(a1 + v66) = v62;

          --v7;
          v17 = v94;
          v6 = v34;
          goto LABEL_115;
        }
LABEL_156:

LABEL_157:
        v92 = 0;
        v17 = v94;
LABEL_137:
        v21 = v91;
LABEL_138:
        if ((v21 & 1) != 0)
LABEL_139:
          *(_BYTE *)(a1 + 116) |= 1u;
        if (v17 & 1 | ((v92 & 1) == 0))
        {
          *(_BYTE *)(a1 + 116) |= 2u;
          *(_BYTE *)(a1 + 116) |= 4u;
          *(_BYTE *)(a1 + 116) |= 0x40u;
          *(_BYTE *)(a1 + 116) |= 8u;
          *(_BYTE *)(a1 + 116) |= 0x20u;
          *(_BYTE *)(a1 + 116) |= 0x10u;
        }
        else if (v18)
        {
          while (1)
          {
            v87 = *v18++;
            v88 = 2;
            switch(v87)
            {
              case 0:
                goto LABEL_150;
              case 1:
                goto LABEL_149;
              case 2:
                v88 = 4;
                goto LABEL_149;
              case 3:
                v88 = 64;
                goto LABEL_149;
              case 4:
                v88 = 8;
                goto LABEL_149;
              case 5:
                v88 = 32;
                goto LABEL_149;
              case 6:
                v88 = 16;
LABEL_149:
                *(_BYTE *)(a1 + 116) |= v88;
                break;
              default:
                continue;
            }
          }
        }
LABEL_150:
        if (v92)
        {
          v3 = *(_BYTE *)(v3 + *v20) == 0;
          if ((v17 & 1) == 0)
            return v3;
LABEL_154:
          v89 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        else
        {
          v3 = 0;
          if ((v17 & 1) != 0)
            goto LABEL_154;
        }
        return v3;
      default:
        if ((v91 & 1) == 0 || (*(_BYTE *)(a1 + 116) & 1) != 0)
        {
          v68 = PBReaderSkipValueWithTag();
          v17 = v94;
          v20 = v35;
          goto LABEL_102;
        }
        if (!*(_QWORD *)(a1 + 16))
        {
          v50 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
          v51 = *(void **)(a1 + 16);
          *(_QWORD *)(a1 + 16) = v50;

        }
        v52 = PBUnknownFieldAdd();
        v17 = v94;
        v20 = v35;
        v6 = v34;
        v19 = (int *)MEMORY[0x1E0D82BF0];
        v22 = (int *)MEMORY[0x1E0D82BB8];
        if (!v52)
        {
          v92 = 0;
          goto LABEL_139;
        }
        goto LABEL_134;
    }
  }
}

void sub_188B44DBC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B44EE4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B44FF4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B45174(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B4575C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B45834(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDGuidesHomeParametersCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 96), "readAll:", 1);
  -[GEOPDGuidesLocationEntry readAll:](*(_QWORD *)(a1 + 72), 1);
  -[GEOPDGuidesHomeResultFilter readAll:](*(_QWORD *)(a1 + 88), 1);
  -[GEOPDResultRefinementGuidesHome readAll:](*(_QWORD *)(a1 + 80), 1);
}

unint64_t GEOPDGuidesHomeParametersReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 108))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDGuidesHomeParametersReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 112));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 104) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 108) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDGuidesHomeParametersReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDGuidesHomeParametersReadAllFrom_initialTag;
  Specified = GEOPDGuidesHomeParametersReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDGuidesHomeParametersCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 112));
  return Specified;
}

void sub_188B45AF8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B45D38(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDGuidesHomeParametersIsDirty(uint64_t a1)
{
  char v2;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 112));
  v2 = *(_BYTE *)(a1 + 116);
  if ((v2 & 0xC6) != 0)
    return 1;
  if ((*(_BYTE *)(a1 + 116) & 8) != 0)
  {
    if ((GEOPDGuidesLocationEntryIsDirty(*(os_unfair_lock_s **)(a1 + 72)) & 1) != 0)
      return 1;
    v2 = *(_BYTE *)(a1 + 116);
  }
  if ((v2 & 0x20) == 0)
    goto LABEL_9;
  if ((GEOPDGuidesHomeResultFilterIsDirty(*(os_unfair_lock_s **)(a1 + 88)) & 1) != 0)
    return 1;
  v2 = *(_BYTE *)(a1 + 116);
LABEL_9:
  if ((v2 & 0x10) != 0)
    return (uint64_t)GEOPDResultRefinementGuidesHomeIsDirty(*(os_unfair_lock_s **)(a1 + 80));
  else
    return 0;
}

os_unfair_lock_s *GEOPDGuidesHomeParametersIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOPDGuidesHomeParametersIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 28);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_188B4609C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B464D0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDGuidesHomeRepeatableSectionReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  int *v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  BOOL v28;
  int v29;
  unint64_t v31;
  BOOL v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  char v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  id v44;
  void *v45;
  int v46;
  uint64_t v47;
  void *v48;
  GEOPDMapsIdentifier *v49;
  char v50;
  unsigned int v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  char v55;
  char v56;
  uint64_t v57;
  int v58;
  char v59;
  void *v60;
  int v62;
  int *v63;
  char v64;
  char v65;
  char v66;
  char v67;
  char v68;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 60);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 56));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = (vaddv_s16((int16x4_t)(*(_QWORD *)&vshl_u16((uint16x4_t)(*(_QWORD *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 76)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFCFFFAFFFBFFFDLL) & 0xFF01FF01FF01FF01))+ ((*(_BYTE *)(a1 + 76) & 4) != 0));
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 > 2;
        v65 = v16 & ~(_BYTE)v11 | v9;
        v66 = v16 | v11 | v65;
        v64 = v8;
        if ((((v16 | v11) | v8) & 1) != 0)
          v17 = 0;
        else
          v17 = a3;
        v67 = (v17 == 0) | v16 | v11;
        v68 = v16 | v11;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v7;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (*(_QWORD *)(v3 + *v18) < *(_QWORD *)(v3 + *v6) && !*(_BYTE *)(v3 + *v19))
  {
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0)
        goto LABEL_25;
      v21 += 7;
      v28 = v22++ >= 9;
      if (v28)
      {
        v23 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_25:
    v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_27:
    if (v29 || (v23 & 7) == 4)
      break;
    v31 = v23 >> 3;
    v32 = v68;
    if ((v67 & 1) == 0)
    {
      v33 = v17;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if ((v64 & 1) == 0)
          goto LABEL_80;
        v37 = 0;
        v38 = 0;
        v39 = 0;
        *(_BYTE *)(a1 + 76) |= 2u;
        while (1)
        {
          v40 = *v18;
          v41 = *(_QWORD *)(v3 + v40);
          v42 = v41 + 1;
          if (v41 == -1 || v42 > *(_QWORD *)(v3 + *v6))
            break;
          v43 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v41);
          *(_QWORD *)(v3 + v40) = v42;
          v39 |= (unint64_t)(v43 & 0x7F) << v37;
          if ((v43 & 0x80) == 0)
            goto LABEL_83;
          v37 += 7;
          v28 = v38++ >= 9;
          if (v28)
          {
            LODWORD(v39) = 0;
            goto LABEL_85;
          }
        }
        *(_BYTE *)(v3 + *v19) = 1;
LABEL_83:
        if (*(_BYTE *)(v3 + *v19))
          LODWORD(v39) = 0;
LABEL_85:
        v57 = 72;
        goto LABEL_90;
      case 2:
        if (!v32)
          goto LABEL_80;
        if ((*(_BYTE *)(a1 + 76) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_114;
          v7 += *(unsigned __int8 *)(a1 + 76) << 26 >> 31;
        }
        else
        {
          PBReaderReadString();
          v47 = objc_claimAutoreleasedReturnValue();
          v48 = *(void **)(a1 + 40);
          *(_QWORD *)(a1 + 40) = v47;

          --v7;
        }
        goto LABEL_93;
      case 3:
        if (!v32 || (*(_BYTE *)(a1 + 76) & 8) != 0)
          goto LABEL_80;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_114;
        v49 = objc_alloc_init(GEOPDMapsIdentifier);
        if (!GEOPDMapsIdentifierReadAllFrom((uint64_t)v49, (void *)v3))
          goto LABEL_113;
        PBReaderRecallMark();
        -[GEOPDGuidesHomeRepeatableSection _addNoFlagsCarouselGuideId:](a1, v49);
        goto LABEL_71;
      case 4:
        if (!v32 || (*(_BYTE *)(a1 + 76) & 0x40) != 0)
          goto LABEL_80;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_114;
        v49 = objc_alloc_init(GEOPDMapsIdentifier);
        if (!GEOPDMapsIdentifierReadAllFrom((uint64_t)v49, (void *)v3))
          goto LABEL_113;
        PBReaderRecallMark();
        -[GEOPDGuidesHomeRepeatableSection _addNoFlagsPublisherId:](a1, v49);
        goto LABEL_71;
      case 5:
        if (!v32 || (*(_BYTE *)(a1 + 76) & 0x10) != 0)
          goto LABEL_80;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_114;
        v49 = objc_alloc_init(GEOPDGuidesLocationEntry);
        if (GEOPDGuidesLocationEntryReadAllFrom((uint64_t)v49, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          -[GEOPDGuidesHomeRepeatableSection _addNoFlagsGuidesLocationEntry:](a1, v49);
LABEL_71:

LABEL_93:
          v19 = (int *)MEMORY[0x1E0D82BC8];
          goto LABEL_94;
        }
LABEL_113:

LABEL_114:
        v62 = 0;
        v63 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
        v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_97:
        if ((v65 & 1) != 0)
LABEL_98:
          *(_BYTE *)(a1 + v63[318]) |= 4u;
        if (v68 & 1 | ((v62 & 1) == 0))
        {
          *(_BYTE *)(a1 + v63[318]) |= 0x20u;
          *(_BYTE *)(a1 + v63[318]) |= 8u;
          *(_BYTE *)(a1 + v63[318]) |= 0x40u;
          *(_BYTE *)(a1 + v63[318]) |= 0x10u;
        }
        else if (v17)
        {
          while (1)
          {
            v58 = *v17++;
            v59 = 32;
            switch(v58)
            {
              case 0:
                goto LABEL_107;
              case 2:
                goto LABEL_106;
              case 3:
                v59 = 8;
                goto LABEL_106;
              case 4:
                v59 = 64;
                goto LABEL_106;
              case 5:
                v59 = 16;
LABEL_106:
                *(_BYTE *)(a1 + v63[318]) |= v59;
                break;
              default:
                continue;
            }
          }
        }
LABEL_107:
        if (v62)
          v3 = *(_BYTE *)(v3 + *v19) == 0;
        else
          v3 = 0;
        if ((v68 & 1) != 0)
        {
          v60 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      case 6:
        if ((v64 & 1) == 0)
          goto LABEL_80;
        v50 = 0;
        v51 = 0;
        v39 = 0;
        *(_BYTE *)(a1 + 76) |= 1u;
        while (2)
        {
          v52 = *v18;
          v53 = *(_QWORD *)(v3 + v52);
          v54 = v53 + 1;
          if (v53 == -1 || v54 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v19) = 1;
          }
          else
          {
            v55 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v53);
            *(_QWORD *)(v3 + v52) = v54;
            v39 |= (unint64_t)(v55 & 0x7F) << v50;
            if (v55 < 0)
            {
              v50 += 7;
              v28 = v51++ >= 9;
              if (v28)
              {
                LODWORD(v39) = 0;
                goto LABEL_89;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v19))
          LODWORD(v39) = 0;
LABEL_89:
        v57 = 68;
LABEL_90:
        *(_DWORD *)(a1 + v57) = v39;
        goto LABEL_94;
      default:
        if ((v65 & 1) == 0 || (*(_BYTE *)(a1 + 76) & 4) != 0)
        {
LABEL_80:
          v56 = PBReaderSkipValueWithTag();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if ((v56 & 1) == 0)
          {
            v62 = 0;
LABEL_96:
            v63 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
            goto LABEL_97;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v44 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v45 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v44;

          }
          v46 = PBUnknownFieldAdd();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if (!v46)
          {
            v62 = 0;
            v63 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
            goto LABEL_98;
          }
        }
LABEL_94:
        if (!(v66 & 1 | (v7 != 0)))
          goto LABEL_95;
        break;
    }
  }
LABEL_95:
  v62 = 1;
  goto LABEL_96;
}

void sub_188B46D78(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B46F60(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B47148(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B47A40(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDGuidesHomeRepeatableSectionCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  _BYTE v29[128];
  _BYTE v30[128];
  _BYTE v31[128];
  uint64_t v32;

  v32 = *MEMORY[0x1E0C80C00];
  v25 = 0u;
  v26 = 0u;
  v27 = 0u;
  v28 = 0u;
  v2 = a1[3];
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v25, v31, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v26;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v26 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v25 + 1) + 8 * v6++), "readAll:", 1);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v25, v31, 16);
    }
    while (v4);
  }

  v23 = 0u;
  v24 = 0u;
  v21 = 0u;
  v22 = 0u;
  v7 = a1[6];
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v21, v30, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v22;
    do
    {
      v11 = 0;
      do
      {
        if (*(_QWORD *)v22 != v10)
          objc_enumerationMutation(v7);
        objc_msgSend(*(id *)(*((_QWORD *)&v21 + 1) + 8 * v11++), "readAll:", 1);
      }
      while (v9 != v11);
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v21, v30, 16);
    }
    while (v9);
  }

  v19 = 0u;
  v20 = 0u;
  v17 = 0u;
  v18 = 0u;
  v12 = a1[4];
  v13 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v17, v29, 16);
  if (v13)
  {
    v14 = v13;
    v15 = *(_QWORD *)v18;
    do
    {
      v16 = 0;
      do
      {
        if (*(_QWORD *)v18 != v15)
          objc_enumerationMutation(v12);
        -[GEOPDGuidesLocationEntry readAll:](*(_QWORD *)(*((_QWORD *)&v17 + 1) + 8 * v16++), 1);
      }
      while (v14 != v16);
      v14 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v17, v29, 16);
    }
    while (v14);
  }

}

unint64_t GEOPDGuidesHomeRepeatableSectionReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 60))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDGuidesHomeRepeatableSectionReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 60) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDGuidesHomeRepeatableSectionReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDGuidesHomeRepeatableSectionReadAllFrom_initialTag;
  Specified = GEOPDGuidesHomeRepeatableSectionReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDGuidesHomeRepeatableSectionCallReadAllRecursiveWithoutSynchronized((id *)a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_188B47EC4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B4827C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B48678(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B48AC8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDGuidesHomeResultReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  char v17;
  unsigned __int8 v18;
  char v19;
  int *v20;
  int *v21;
  int *v22;
  int *v23;
  char v24;
  unsigned int v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  int v32;
  unint64_t v34;
  BOOL v35;
  int *v36;
  int v37;
  int v38;
  BOOL v39;
  GEOPDGuidesHomeFixedSection *v40;
  uint64_t v41;
  void *v42;
  id v43;
  void *v44;
  int v45;
  char v46;
  char v47;
  int v48;
  int v49;
  char v50;
  void *v51;
  int v53;
  int *v54;
  char v55;
  char v56;
  char v57;
  BOOL v58;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 60);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 56));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = (vaddv_s16((int16x4_t)(*(_QWORD *)&vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int8 *)(a1 + 68)), (uint16x4_t)0xFFFCFFFEFFFFFFFDLL) & 0xFF01FF01FF01FF01))+ (*(_BYTE *)(a1 + 68) & 1));
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 > 2;
        v17 = v16 & ~(_BYTE)v11 | v9;
        v18 = v16 | v11;
        v55 = v17;
        v19 = v18 | v17;
        if (((v18 | v8) & 1) != 0)
          v20 = 0;
        else
          v20 = a3;
        v58 = v18;
        v56 = v19;
        v57 = (v20 == 0) | v18;
        v21 = (int *)MEMORY[0x1E0D82BF0];
        v22 = (int *)MEMORY[0x1E0D82BC8];
        v23 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v7;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v21) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v22))
      goto LABEL_81;
    v24 = 0;
    v25 = 0;
    v26 = 0;
    while (1)
    {
      v27 = *v21;
      v28 = *(_QWORD *)(v3 + v27);
      v29 = v28 + 1;
      if (v28 == -1 || v29 > *(_QWORD *)(v3 + *v6))
        break;
      v30 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v28);
      *(_QWORD *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0)
        goto LABEL_25;
      v24 += 7;
      if (v25++ >= 9)
      {
        v26 = 0;
        v32 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v22) = 1;
LABEL_25:
    v32 = *(unsigned __int8 *)(v3 + *v22);
    if (*(_BYTE *)(v3 + *v22))
      v26 = 0;
LABEL_27:
    if (v32 || (v26 & 7) == 4)
    {
LABEL_81:
      v53 = 1;
      goto LABEL_82;
    }
    v34 = v26 >> 3;
    v35 = v58;
    if ((v57 & 1) == 0)
    {
      v36 = v20;
      do
      {
        v38 = *v36++;
        v37 = v38;
        v35 = v38 != 0;
        if (v38)
          v39 = v37 == (_DWORD)v34;
        else
          v39 = 1;
      }
      while (!v39);
    }
    if ((int)v34 <= 2)
    {
      if ((_DWORD)v34 == 1)
      {
        if (v35)
        {
          if ((*(_BYTE *)(a1 + 68) & 2) == 0)
          {
            if ((PBReaderPlaceMark() & 1) == 0)
              goto LABEL_101;
            v40 = objc_alloc_init(GEOPDGuidesHomeFixedSection);
            if (!GEOPDGuidesHomeFixedSectionReadAllFrom((uint64_t)v40, (void *)v3, v10 & 1))
              goto LABEL_100;
            PBReaderRecallMark();
            v41 = 24;
            goto LABEL_63;
          }
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_101;
          v47 = *(_BYTE *)(a1 + 68) << 6;
LABEL_78:
          v7 += v47 >> 7;
          goto LABEL_79;
        }
      }
      else
      {
        if ((_DWORD)v34 != 2)
          goto LABEL_64;
        if (v35)
        {
          if ((*(_BYTE *)(a1 + 68) & 8) == 0)
          {
            if ((PBReaderPlaceMark() & 1) == 0)
              goto LABEL_101;
            v40 = objc_alloc_init(GEOPDGuidesHomeFixedSection);
            if (!GEOPDGuidesHomeFixedSectionReadAllFrom((uint64_t)v40, (void *)v3, v10 & 1))
              goto LABEL_100;
            PBReaderRecallMark();
            v41 = 40;
LABEL_63:
            v42 = *(void **)(a1 + v41);
            *(_QWORD *)(a1 + v41) = v40;

            --v7;
LABEL_79:
            v22 = (int *)MEMORY[0x1E0D82BC8];
            goto LABEL_80;
          }
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_101;
          v47 = 16 * *(_BYTE *)(a1 + 68);
          goto LABEL_78;
        }
      }
      goto LABEL_70;
    }
    if ((_DWORD)v34 == 3)
      break;
    if ((_DWORD)v34 != 50)
    {
LABEL_64:
      if ((v55 & 1) != 0 && (*(_BYTE *)(a1 + 68) & 1) == 0)
      {
        if (!*(_QWORD *)(a1 + 16))
        {
          v43 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
          v44 = *(void **)(a1 + 16);
          *(_QWORD *)(a1 + 16) = v43;

        }
        v45 = PBUnknownFieldAdd();
        v22 = (int *)MEMORY[0x1E0D82BC8];
        if (!v45)
        {
          v53 = 0;
          v54 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
          goto LABEL_84;
        }
        goto LABEL_80;
      }
      goto LABEL_70;
    }
    if (v35 && (*(_BYTE *)(a1 + 68) & 0x10) == 0)
    {
      if ((PBReaderPlaceMark() & 1) == 0)
        goto LABEL_101;
      v40 = objc_alloc_init(GEOPDGuidesHomeRepeatableSection);
      if (!GEOPDGuidesHomeRepeatableSectionReadAllFrom((uint64_t)v40, (void *)v3, v10 & 1))
        goto LABEL_100;
      PBReaderRecallMark();
      -[GEOPDGuidesHomeResult _addNoFlagsRepeatableSection:](a1, v40);

      goto LABEL_79;
    }
LABEL_70:
    v46 = PBReaderSkipValueWithTag();
    v22 = (int *)MEMORY[0x1E0D82BC8];
    if ((v46 & 1) == 0)
    {
      v53 = 0;
LABEL_82:
      v54 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
      goto LABEL_83;
    }
LABEL_80:
    if (!(v56 & 1 | (v7 != 0)))
      goto LABEL_81;
  }
  if (!v35)
    goto LABEL_70;
  if ((*(_BYTE *)(a1 + 68) & 4) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0)
      goto LABEL_101;
    v47 = 32 * *(_BYTE *)(a1 + 68);
    goto LABEL_78;
  }
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_101;
  v40 = objc_alloc_init(GEOPDGuidesHomeFixedSection);
  if (GEOPDGuidesHomeFixedSectionReadAllFrom((uint64_t)v40, (void *)v3, v10 & 1))
  {
    PBReaderRecallMark();
    v41 = 32;
    goto LABEL_63;
  }
LABEL_100:

LABEL_101:
  v53 = 0;
  v54 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
  v22 = (int *)MEMORY[0x1E0D82BC8];
LABEL_83:
  if ((v55 & 1) == 0)
    goto LABEL_85;
LABEL_84:
  *(_BYTE *)(a1 + v54[327]) |= 1u;
LABEL_85:
  if (v58 || (v53 & 1) == 0)
  {
    *(_BYTE *)(a1 + v54[327]) |= 2u;
    *(_BYTE *)(a1 + v54[327]) |= 8u;
    *(_BYTE *)(a1 + v54[327]) |= 4u;
    *(_BYTE *)(a1 + v54[327]) |= 0x10u;
  }
  else if (v20)
  {
    while (1)
    {
      v49 = *v20++;
      v48 = v49;
      v50 = 2;
      switch(v49)
      {
        case 0:
          goto LABEL_94;
        case 1:
          goto LABEL_93;
        case 2:
          v50 = 8;
          goto LABEL_93;
        case 3:
          v50 = 4;
          goto LABEL_93;
        default:
          if (v48 != 50)
            continue;
          v50 = 16;
LABEL_93:
          *(_BYTE *)(a1 + v54[327]) |= v50;
          break;
      }
    }
  }
LABEL_94:
  if (v53)
    v3 = *(_BYTE *)(v3 + *v22) == 0;
  else
    v3 = 0;
  if (v58)
  {
    v51 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_188B492EC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B49440(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B49594(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B49BB4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDGuidesHomeResultCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _BYTE v11[128];
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  -[GEOPDGuidesHomeFixedSection readAll:](*(_QWORD *)(a1 + 24), 1);
  -[GEOPDGuidesHomeFixedSection readAll:](*(_QWORD *)(a1 + 40), 1);
  -[GEOPDGuidesHomeFixedSection readAll:](*(_QWORD *)(a1 + 32), 1);
  v9 = 0u;
  v10 = 0u;
  v7 = 0u;
  v8 = 0u;
  v2 = *(id *)(a1 + 48);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v8;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v8 != v5)
          objc_enumerationMutation(v2);
        -[GEOPDGuidesHomeRepeatableSection readAll:](*(_QWORD *)(*((_QWORD *)&v7 + 1) + 8 * v6++), 1);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
    }
    while (v4);
  }

}

unint64_t GEOPDGuidesHomeResultReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 60))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDGuidesHomeResultReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 60) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDGuidesHomeResultReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDGuidesHomeResultReadAllFrom_initialTag;
  Specified = GEOPDGuidesHomeResultReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDGuidesHomeResultCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_188B49F44(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B4A1A8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDGuidesHomeResultIsDirty(uint64_t a1)
{
  unsigned int v2;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  v2 = *(unsigned __int8 *)(a1 + 68);
  if ((v2 & 0x20) != 0)
    return 1;
  if ((v2 & 2) != 0)
  {
    if (GEOPDGuidesHomeFixedSectionIsDirty(*(_QWORD *)(a1 + 24)))
      return 1;
    v2 = *(unsigned __int8 *)(a1 + 68);
  }
  if ((v2 & 8) == 0)
    goto LABEL_8;
  if (GEOPDGuidesHomeFixedSectionIsDirty(*(_QWORD *)(a1 + 40)))
    return 1;
  v2 = *(unsigned __int8 *)(a1 + 68);
LABEL_8:
  if ((v2 & 4) != 0)
  {
    if (GEOPDGuidesHomeFixedSectionIsDirty(*(_QWORD *)(a1 + 32)))
      return 1;
    v2 = *(unsigned __int8 *)(a1 + 68);
  }
  return (v2 >> 4) & 1;
}

os_unfair_lock_s *GEOPDGuidesHomeResultIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOPDGuidesHomeResultIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 16);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_188B4A8BC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B4ACA0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDGuidesHomeResultFilterReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  int *v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  BOOL v28;
  int v29;
  unint64_t v31;
  BOOL v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  char v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  GEOPDGuidesHomeResultFilter *v44;
  char v45;
  void *v46;
  id v47;
  void *v48;
  int v49;
  char v50;
  char v51;
  int v52;
  int v53;
  char v54;
  void *v55;
  int v57;
  int *v58;
  char v59;
  char v60;
  char v61;
  char v62;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = ((*(unsigned __int8 *)(a1 + 56) >> 2) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 1) & 1);
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v7 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 != 0;
        v59 = v16 & ~(_BYTE)v11 | v9;
        v60 = v16 | v11 | v59;
        if ((((v16 | v11) | v7) & 1) != 0)
          v17 = 0;
        else
          v17 = a3;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v61 = (v17 == 0) | v16 | v11;
        v62 = v16 | v11;
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v8;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v19))
      goto LABEL_75;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0)
        goto LABEL_25;
      v21 += 7;
      v28 = v22++ >= 9;
      if (v28)
      {
        v23 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_25:
    v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_27:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_75:
      v57 = 1;
LABEL_76:
      v58 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
      goto LABEL_77;
    }
    v31 = v23 >> 3;
    v32 = v62;
    if ((v61 & 1) == 0)
    {
      v33 = v17;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    if ((_DWORD)v31 != 50)
      break;
    if (v32 && (*(_BYTE *)(a1 + 56) & 8) == 0)
    {
      if ((PBReaderPlaceMark() & 1) == 0)
        goto LABEL_97;
      v44 = objc_alloc_init(GEOPDGuidesHomeResultFilter);
      if (!GEOPDGuidesHomeResultFilterReadAllFrom())
        goto LABEL_96;
      PBReaderRecallMark();
      -[GEOPDGuidesHomeResultFilter _addNoFlagsSubFilter:](a1, v44);

      v19 = (int *)MEMORY[0x1E0D82BC8];
      v6 = (int *)MEMORY[0x1E0D82BD8];
      goto LABEL_66;
    }
LABEL_65:
    v50 = PBReaderSkipValueWithTag();
    v19 = (int *)MEMORY[0x1E0D82BC8];
    v6 = (int *)MEMORY[0x1E0D82BD8];
    if ((v50 & 1) == 0)
    {
      v57 = 0;
      goto LABEL_76;
    }
LABEL_66:
    if (!(v60 & 1 | (v8 != 0)))
      goto LABEL_75;
  }
  if ((_DWORD)v31 != 2)
  {
    if ((_DWORD)v31 == 1)
    {
      if ((v7 & 1) != 0)
      {
        v37 = 0;
        v38 = 0;
        v39 = 0;
        *(_BYTE *)(a1 + 56) |= 1u;
        v6 = (int *)MEMORY[0x1E0D82BD8];
        while (1)
        {
          v40 = *v18;
          v41 = *(_QWORD *)(v3 + v40);
          v42 = v41 + 1;
          if (v41 == -1 || v42 > *(_QWORD *)(v3 + *v6))
            break;
          v43 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v41);
          *(_QWORD *)(v3 + v40) = v42;
          v39 |= (unint64_t)(v43 & 0x7F) << v37;
          if ((v43 & 0x80) == 0)
            goto LABEL_69;
          v37 += 7;
          v28 = v38++ >= 9;
          if (v28)
          {
            LODWORD(v39) = 0;
            goto LABEL_71;
          }
        }
        *(_BYTE *)(v3 + *v19) = 1;
LABEL_69:
        if (*(_BYTE *)(v3 + *v19))
          LODWORD(v39) = 0;
LABEL_71:
        *(_DWORD *)(a1 + 52) = v39;
        goto LABEL_66;
      }
    }
    else if ((v59 & 1) != 0 && (*(_BYTE *)(a1 + 56) & 2) == 0)
    {
      if (!*(_QWORD *)(a1 + 16))
      {
        v47 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v48 = *(void **)(a1 + 16);
        *(_QWORD *)(a1 + 16) = v47;

      }
      v49 = PBUnknownFieldAdd();
      v19 = (int *)MEMORY[0x1E0D82BC8];
      v6 = (int *)MEMORY[0x1E0D82BD8];
      if (!v49)
      {
        v57 = 0;
        v58 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
        goto LABEL_78;
      }
      goto LABEL_66;
    }
    goto LABEL_65;
  }
  if (!v32)
    goto LABEL_65;
  if ((*(_BYTE *)(a1 + 56) & 4) != 0)
  {
    v51 = PBReaderSkipValueWithTag();
    v6 = (int *)MEMORY[0x1E0D82BD8];
    if ((v51 & 1) == 0)
      goto LABEL_97;
    v8 += *(unsigned __int8 *)(a1 + 56) << 29 >> 31;
    goto LABEL_74;
  }
  v45 = PBReaderPlaceMark();
  v6 = (int *)MEMORY[0x1E0D82BD8];
  if ((v45 & 1) == 0)
    goto LABEL_97;
  v44 = objc_alloc_init(GEOPDGuidesHomeResultFilterTypeConcept);
  if (GEOPDGuidesHomeResultFilterTypeConceptReadAllFrom((uint64_t)v44, (void *)v3, v10 & 1))
  {
    PBReaderRecallMark();
    v46 = *(void **)(a1 + 24);
    *(_QWORD *)(a1 + 24) = v44;

    --v8;
LABEL_74:
    v19 = (int *)MEMORY[0x1E0D82BC8];
    goto LABEL_66;
  }
LABEL_96:

LABEL_97:
  v57 = 0;
  v58 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
  v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_77:
  if ((v59 & 1) == 0)
    goto LABEL_79;
LABEL_78:
  *(_BYTE *)(a1 + v58[334]) |= 2u;
LABEL_79:
  if (v62 & 1 | ((v57 & 1) == 0))
  {
    *(_BYTE *)(a1 + v58[334]) |= 4u;
    *(_BYTE *)(a1 + v58[334]) |= 8u;
    goto LABEL_89;
  }
  if (v17)
  {
    while (2)
    {
      while (1)
      {
        v53 = *v17++;
        v52 = v53;
        if (v53 == 2)
          break;
        if (v52 == 50)
        {
          v54 = 8;
          goto LABEL_88;
        }
        if (!v52)
          goto LABEL_89;
      }
      v54 = 4;
LABEL_88:
      *(_BYTE *)(a1 + v58[334]) |= v54;
      continue;
    }
  }
LABEL_89:
  if (v57)
    v3 = *(_BYTE *)(v3 + *v19) == 0;
  else
    v3 = 0;
  if ((v62 & 1) != 0)
  {
    v55 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_188B4B480(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B4B9BC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDGuidesHomeResultFilterCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _BYTE v10[128];
  uint64_t v11;

  v11 = *MEMORY[0x1E0C80C00];
  v6 = 0u;
  v7 = 0u;
  v8 = 0u;
  v9 = 0u;
  v1 = *(id *)(a1 + 32);
  v2 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
  if (v2)
  {
    v3 = v2;
    v4 = *(_QWORD *)v7;
    do
    {
      v5 = 0;
      do
      {
        if (*(_QWORD *)v7 != v4)
          objc_enumerationMutation(v1);
        -[GEOPDGuidesHomeResultFilter readAll:](*(_QWORD *)(*((_QWORD *)&v6 + 1) + 8 * v5++), 1);
      }
      while (v3 != v5);
      v3 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
    }
    while (v3);
  }

}

unint64_t GEOPDGuidesHomeResultFilterReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDGuidesHomeResultFilterReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDGuidesHomeResultFilterReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDGuidesHomeResultFilterReadAllFrom_initialTag;
  Specified = GEOPDGuidesHomeResultFilterReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDGuidesHomeResultFilterCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_188B4C0A8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B4C2FC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDGuidesHomeResultFilterIsDirty(uint64_t a1)
{
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t i;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _BYTE v11[128];
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  if ((*(_BYTE *)(a1 + 56) & 0x1C) != 0)
    return 1;
  if ((*(_BYTE *)(a1 + 56) & 8) == 0)
    return 0;
  v9 = 0u;
  v10 = 0u;
  v7 = 0u;
  v8 = 0u;
  v3 = *(id *)(a1 + 32);
  v2 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
  if (v2)
  {
    v4 = *(_QWORD *)v8;
    while (2)
    {
      for (i = 0; i != v2; ++i)
      {
        if (*(_QWORD *)v8 != v4)
          objc_enumerationMutation(v3);
        if ((GEOPDGuidesHomeResultFilterIsDirty(*(_QWORD *)(*((_QWORD *)&v7 + 1) + 8 * i)) & 1) != 0)
        {
          v2 = 1;
          goto LABEL_15;
        }
      }
      v2 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
      if (v2)
        continue;
      break;
    }
  }
LABEL_15:

  return v2;
}

os_unfair_lock_s *GEOPDGuidesHomeResultFilterIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOPDGuidesHomeResultFilterIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 12);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_188B4C710(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDGuidesHomeResultFilterTypeConceptReadAllFrom(uint64_t a1, void *a2, int a3)
{
  char *v5;
  int *v6;
  int *v7;
  int *v8;
  int *v9;
  char v10;
  unsigned int v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  int v18;
  GEOPDRelatedSearchSuggestion *v20;
  void *v21;
  id v22;
  void *v23;
  _BOOL8 v24;

  v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    v6 = (int *)MEMORY[0x1E0D82BF0];
    v7 = (int *)MEMORY[0x1E0D82BD8];
    v8 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v5[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v5[*MEMORY[0x1E0D82BD8]])
    {
      v9 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v5[*v8])
          break;
        v10 = 0;
        v11 = 0;
        v12 = 0;
        while (1)
        {
          v13 = *v6;
          v14 = *(_QWORD *)&v5[v13];
          v15 = v14 + 1;
          if (v14 == -1 || v15 > *(_QWORD *)&v5[*v7])
            break;
          v16 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v14);
          *(_QWORD *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0)
            goto LABEL_13;
          v10 += 7;
          if (v11++ >= 9)
          {
            v12 = 0;
            v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        v18 = v5[*v8];
        if (v5[*v8])
          v12 = 0;
LABEL_15:
        if (v18 || (v12 & 7) == 4)
          break;
        if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_29;
          v20 = objc_alloc_init(GEOPDRelatedSearchSuggestion);
          if (!GEOPDRelatedSearchSuggestionReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          v21 = *(void **)(a1 + 16);
          *(_QWORD *)(a1 + 16) = v20;

        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v22 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v23 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v22;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_29;
        }
      }
      while (*(_QWORD *)&v5[*v6] < *(_QWORD *)&v5[*v7]);
    }
    v24 = v5[*v8] == 0;
  }
  else
  {
LABEL_29:
    v24 = 0;
  }
  objc_sync_exit(v5);

  return v24;
}

void sub_188B4CE68(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDGuidesLocationsSuggestionParametersReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  GEOPDViewportInfo *v18;
  void *v19;
  id v20;
  void *v21;
  _BOOL8 v22;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_29;
          v18 = objc_alloc_init(GEOPDViewportInfo);
          if (!GEOPDViewportInfoReadAllFrom((uint64_t)v18, v3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          v19 = *(void **)(a1 + 16);
          *(_QWORD *)(a1 + 16) = v18;

        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v20 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v21 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v20;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_29;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v22 = v3[*v6] == 0;
  }
  else
  {
LABEL_29:
    v22 = 0;
  }
  objc_sync_exit(v3);

  return v22;
}

void sub_188B4D578(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B4D894(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDGuidesLocationsSuggestionResultReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  char v17;
  unsigned __int8 v18;
  char v19;
  int *v20;
  int *v21;
  int *v22;
  int *v23;
  char v24;
  unsigned int v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  int v32;
  unint64_t v34;
  BOOL v35;
  int *v36;
  int v37;
  int v38;
  BOOL v39;
  GEOPDGuidesLocationEntry *v40;
  uint64_t v41;
  void *v42;
  id v43;
  void *v44;
  int v45;
  char v46;
  char v47;
  int v48;
  char v49;
  void *v50;
  int v52;
  int *v53;
  char v54;
  char v55;
  char v56;
  BOOL v57;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 52);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 48));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = ((*(unsigned __int8 *)(a1 + 60) >> 2) & 1)
      + (*(_BYTE *)(a1 + 60) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 1) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 3) & 1);
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 > 1;
        v17 = v16 & ~(_BYTE)v11 | v9;
        v18 = v16 | v11;
        v54 = v17;
        v19 = v18 | v17;
        if (((v18 | v8) & 1) != 0)
          v20 = 0;
        else
          v20 = a3;
        v57 = v18;
        v55 = v19;
        v56 = (v20 == 0) | v18;
        v21 = (int *)MEMORY[0x1E0D82BF0];
        v22 = (int *)MEMORY[0x1E0D82BC8];
        v23 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v7;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v21) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v22))
      goto LABEL_70;
    v24 = 0;
    v25 = 0;
    v26 = 0;
    while (1)
    {
      v27 = *v21;
      v28 = *(_QWORD *)(v3 + v27);
      v29 = v28 + 1;
      if (v28 == -1 || v29 > *(_QWORD *)(v3 + *v6))
        break;
      v30 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v28);
      *(_QWORD *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0)
        goto LABEL_25;
      v24 += 7;
      if (v25++ >= 9)
      {
        v26 = 0;
        v32 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v22) = 1;
LABEL_25:
    v32 = *(unsigned __int8 *)(v3 + *v22);
    if (*(_BYTE *)(v3 + *v22))
      v26 = 0;
LABEL_27:
    if (v32 || (v26 & 7) == 4)
    {
LABEL_70:
      v52 = 1;
      goto LABEL_71;
    }
    v34 = v26 >> 3;
    v35 = v57;
    if ((v56 & 1) == 0)
    {
      v36 = v20;
      do
      {
        v38 = *v36++;
        v37 = v38;
        v35 = v38 != 0;
        if (v38)
          v39 = v37 == (_DWORD)v34;
        else
          v39 = 1;
      }
      while (!v39);
    }
    if ((_DWORD)v34 == 3)
    {
      if (!v35)
        goto LABEL_61;
      if ((*(_BYTE *)(a1 + 60) & 8) == 0)
      {
        PBReaderReadString();
        v41 = objc_claimAutoreleasedReturnValue();
        v42 = *(void **)(a1 + 40);
        *(_QWORD *)(a1 + 40) = v41;
        goto LABEL_54;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        goto LABEL_88;
      v47 = 16 * *(_BYTE *)(a1 + 60);
LABEL_67:
      v7 += v47 >> 7;
      goto LABEL_68;
    }
    if ((_DWORD)v34 == 2)
      break;
    if ((_DWORD)v34 == 1)
    {
      if (v35 && (*(_BYTE *)(a1 + 60) & 2) == 0)
      {
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_88;
        v40 = objc_alloc_init(GEOPDGuidesLocationEntry);
        if (!GEOPDGuidesLocationEntryReadAllFrom((uint64_t)v40, (void *)v3, v10 & 1))
          goto LABEL_87;
        PBReaderRecallMark();
        -[GEOPDGuidesLocationsSuggestionResult _addNoFlagsEntry:](a1, v40);

        goto LABEL_68;
      }
    }
    else if ((v54 & 1) != 0 && (*(_BYTE *)(a1 + 60) & 1) == 0)
    {
      if (!*(_QWORD *)(a1 + 16))
      {
        v43 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v44 = *(void **)(a1 + 16);
        *(_QWORD *)(a1 + 16) = v43;

      }
      v45 = PBUnknownFieldAdd();
      v22 = (int *)MEMORY[0x1E0D82BC8];
      if (!v45)
      {
        v52 = 0;
        v53 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
        goto LABEL_73;
      }
      goto LABEL_69;
    }
LABEL_61:
    v46 = PBReaderSkipValueWithTag();
    v22 = (int *)MEMORY[0x1E0D82BC8];
    if ((v46 & 1) == 0)
    {
      v52 = 0;
LABEL_71:
      v53 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
      goto LABEL_72;
    }
LABEL_69:
    if (!(v55 & 1 | (v7 != 0)))
      goto LABEL_70;
  }
  if (!v35)
    goto LABEL_61;
  if ((*(_BYTE *)(a1 + 60) & 4) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0)
      goto LABEL_88;
    v47 = 32 * *(_BYTE *)(a1 + 60);
    goto LABEL_67;
  }
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_88;
  v40 = objc_alloc_init(GEOPDGuidesLocationEntry);
  if (GEOPDGuidesLocationEntryReadAllFrom((uint64_t)v40, (void *)v3, v10 & 1))
  {
    PBReaderRecallMark();
    v42 = *(void **)(a1 + 32);
    *(_QWORD *)(a1 + 32) = v40;
LABEL_54:

    --v7;
LABEL_68:
    v22 = (int *)MEMORY[0x1E0D82BC8];
    goto LABEL_69;
  }
LABEL_87:

LABEL_88:
  v52 = 0;
  v53 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
  v22 = (int *)MEMORY[0x1E0D82BC8];
LABEL_72:
  if ((v54 & 1) == 0)
    goto LABEL_74;
LABEL_73:
  *(_BYTE *)(a1 + v53[341]) |= 1u;
LABEL_74:
  if (v57 || (v52 & 1) == 0)
  {
    *(_BYTE *)(a1 + v53[341]) |= 2u;
    *(_BYTE *)(a1 + v53[341]) |= 4u;
    *(_BYTE *)(a1 + v53[341]) |= 8u;
  }
  else if (v20)
  {
    while (1)
    {
      v48 = *v20++;
      v49 = 2;
      switch(v48)
      {
        case 0:
          goto LABEL_81;
        case 1:
          goto LABEL_80;
        case 2:
          v49 = 4;
          goto LABEL_80;
        case 3:
          v49 = 8;
LABEL_80:
          *(_BYTE *)(a1 + v53[341]) |= v49;
          break;
        default:
          continue;
      }
    }
  }
LABEL_81:
  if (v52)
    v3 = *(_BYTE *)(v3 + *v22) == 0;
  else
    v3 = 0;
  if (v57)
  {
    v50 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_188B4E03C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B4E470(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B4E550(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDGuidesLocationsSuggestionResultCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _BYTE v11[128];
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  v7 = 0u;
  v8 = 0u;
  v9 = 0u;
  v10 = 0u;
  v2 = *(id *)(a1 + 24);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v8;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v8 != v5)
          objc_enumerationMutation(v2);
        -[GEOPDGuidesLocationEntry readAll:](*(_QWORD *)(*((_QWORD *)&v7 + 1) + 8 * v6++), 1);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
    }
    while (v4);
  }

  -[GEOPDGuidesLocationEntry readAll:](*(_QWORD *)(a1 + 32), 1);
}

unint64_t GEOPDGuidesLocationsSuggestionResultReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 52))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDGuidesLocationsSuggestionResultReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 52) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDGuidesLocationsSuggestionResultReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDGuidesLocationsSuggestionResultReadAllFrom_initialTag;
  Specified = GEOPDGuidesLocationsSuggestionResultReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDGuidesLocationsSuggestionResultCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_188B4E8B8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B4EB00(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDGuidesLocationsSuggestionResultIsDirty(uint64_t a1)
{
  char v2;
  uint64_t v3;
  id v5;
  uint64_t v6;
  uint64_t i;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _BYTE v12[128];
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v2 = *(_BYTE *)(a1 + 60);
  if ((v2 & 0x12) != 0)
    return 1;
  if ((*(_BYTE *)(a1 + 60) & 4) != 0)
  {
    if ((GEOPDGuidesLocationEntryIsDirty(*(os_unfair_lock_s **)(a1 + 32)) & 1) != 0)
      return 1;
    v2 = *(_BYTE *)(a1 + 60);
  }
  if ((v2 & 8) != 0)
    return 1;
  if ((v2 & 2) == 0)
    return 0;
  v10 = 0u;
  v11 = 0u;
  v8 = 0u;
  v9 = 0u;
  v5 = *(id *)(a1 + 24);
  v3 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
  if (v3)
  {
    v6 = *(_QWORD *)v9;
    while (2)
    {
      for (i = 0; i != v3; ++i)
      {
        if (*(_QWORD *)v9 != v6)
          objc_enumerationMutation(v5);
        if ((GEOPDGuidesLocationEntryIsDirty(*(os_unfair_lock_s **)(*((_QWORD *)&v8 + 1) + 8 * i)) & 1) != 0)
        {
          v3 = 1;
          goto LABEL_20;
        }
      }
      v3 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
      if (v3)
        continue;
      break;
    }
  }
LABEL_20:

  return v3;
}

void sub_188B4EECC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDIconMappingReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  int *v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  BOOL v28;
  int v29;
  unint64_t v31;
  BOOL v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  void *v40;
  int v41;
  char v42;
  unsigned int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  char v48;
  char v49;
  unsigned int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  char v55;
  char v56;
  unsigned int v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  char v61;
  GEOPDCartoIconZoom *v62;
  void *v63;
  char v64;
  unsigned int v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  char v70;
  char v71;
  uint64_t v72;
  BOOL v73;
  uint64_t v74;
  __int16 v75;
  int v76;
  __int16 v77;
  void *v78;
  int v80;
  int *v81;
  char v82;
  char v83;
  char v84;
  char v85;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 76);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 72));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 96)), (uint16x4_t)0xFFFBFFF8FFF9FFFALL), (int8x8_t)0x1000100010001))+ ((*(_WORD *)(a1 + 96) >> 4) & 1)+ ((*(_WORD *)(a1 + 96) >> 9) & 1)+ ((*(_WORD *)(a1 + 96) >> 3) & 1));
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 > 3;
        v82 = v16 & ~(_BYTE)v11 | v9;
        v83 = v16 | v11 | v82;
        if ((((v16 | v11) | v8) & 1) != 0)
          v17 = 0;
        else
          v17 = a3;
        v84 = (v17 == 0) | v16 | v11;
        v85 = v16 | v11;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v7;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v19))
      goto LABEL_135;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0)
        goto LABEL_25;
      v21 += 7;
      v28 = v22++ >= 9;
      if (v28)
      {
        v23 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_25:
    v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_27:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_135:
      v80 = 1;
      goto LABEL_136;
    }
    v31 = v23 >> 3;
    v32 = v85;
    if ((v84 & 1) == 0)
    {
      v33 = v17;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if (!v32)
          goto LABEL_104;
        if ((*(_WORD *)(a1 + 96) & 0x80) == 0)
        {
          PBReaderReadString();
          v37 = objc_claimAutoreleasedReturnValue();
          v38 = 48;
          goto LABEL_89;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_155;
        v75 = *(_WORD *)(a1 + 96) << 8;
        goto LABEL_132;
      case 2:
        if ((v8 & 1) == 0)
          goto LABEL_104;
        v42 = 0;
        v43 = 0;
        v44 = 0;
        while (2)
        {
          v45 = *v18;
          v46 = *(_QWORD *)(v3 + v45);
          v47 = v46 + 1;
          if (v46 == -1 || v47 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v19) = 1;
          }
          else
          {
            v48 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v46);
            *(_QWORD *)(v3 + v45) = v47;
            v44 |= (unint64_t)(v48 & 0x7F) << v42;
            if (v48 < 0)
            {
              v42 += 7;
              v28 = v43++ >= 9;
              if (v28)
              {
                LODWORD(v44) = 0;
                goto LABEL_109;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v19))
          LODWORD(v44) = 0;
LABEL_109:
        v72 = 88;
        goto LABEL_118;
      case 3:
        if ((v8 & 1) == 0)
          goto LABEL_104;
        v49 = 0;
        v50 = 0;
        v51 = 0;
        *(_WORD *)(a1 + 96) |= 4u;
        while (2)
        {
          v52 = *v18;
          v53 = *(_QWORD *)(v3 + v52);
          v54 = v53 + 1;
          if (v53 == -1 || v54 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v19) = 1;
          }
          else
          {
            v55 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v53);
            *(_QWORD *)(v3 + v52) = v54;
            v51 |= (unint64_t)(v55 & 0x7F) << v49;
            if (v55 < 0)
            {
              v49 += 7;
              v28 = v50++ >= 9;
              if (v28)
              {
                v51 = 0;
                goto LABEL_113;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v19))
          v51 = 0;
LABEL_113:
        v73 = v51 != 0;
        v74 = 93;
        goto LABEL_123;
      case 4:
        if (!v32)
          goto LABEL_104;
        if ((*(_WORD *)(a1 + 96) & 0x100) == 0)
        {
          PBReaderReadString();
          v37 = objc_claimAutoreleasedReturnValue();
          v38 = 56;
          goto LABEL_89;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_155;
        v75 = *(_WORD *)(a1 + 96) << 7;
        goto LABEL_132;
      case 5:
        if ((v8 & 1) == 0)
          goto LABEL_104;
        v56 = 0;
        v57 = 0;
        v44 = 0;
        *(_WORD *)(a1 + 96) |= 1u;
        while (2)
        {
          v58 = *v18;
          v59 = *(_QWORD *)(v3 + v58);
          v60 = v59 + 1;
          if (v59 == -1 || v60 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v19) = 1;
          }
          else
          {
            v61 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v59);
            *(_QWORD *)(v3 + v58) = v60;
            v44 |= (unint64_t)(v61 & 0x7F) << v56;
            if (v61 < 0)
            {
              v56 += 7;
              v28 = v57++ >= 9;
              if (v28)
              {
                LODWORD(v44) = 0;
                goto LABEL_117;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v19))
          LODWORD(v44) = 0;
LABEL_117:
        v72 = 84;
LABEL_118:
        *(_DWORD *)(a1 + v72) = v44;
        goto LABEL_134;
      case 6:
        if (!v32 || (*(_WORD *)(a1 + 96) & 0x20) != 0)
          goto LABEL_104;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_155;
        v62 = objc_alloc_init(GEOPDCartoIconZoom);
        if (!GEOPDCartoIconZoomReadAllFrom((uint64_t)v62, (void *)v3))
          goto LABEL_154;
        PBReaderRecallMark();
        -[GEOPDIconMapping _addNoFlagsCartoZoom:](a1, v62);
        goto LABEL_85;
      case 7:
        if (!v32 || (*(_WORD *)(a1 + 96) & 0x10) != 0)
          goto LABEL_104;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_155;
        v62 = objc_alloc_init(GEOPDCartoIconZoom);
        if (!GEOPDCartoIconZoomReadAllFrom((uint64_t)v62, (void *)v3))
          goto LABEL_154;
        PBReaderRecallMark();
        -[GEOPDIconMapping _addNoFlagsCartoZoomIndoor:](a1, v62);
LABEL_85:

        goto LABEL_133;
      case 8:
        if (!v32)
          goto LABEL_104;
        if ((*(_WORD *)(a1 + 96) & 0x40) == 0)
        {
          PBReaderReadString();
          v37 = objc_claimAutoreleasedReturnValue();
          v38 = 40;
LABEL_89:
          v63 = *(void **)(a1 + v38);
          *(_QWORD *)(a1 + v38) = v37;
          goto LABEL_95;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_155;
        v75 = *(_WORD *)(a1 + 96) << 9;
        goto LABEL_132;
      case 9:
        if (!v32)
          goto LABEL_104;
        if ((*(_WORD *)(a1 + 96) & 0x200) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_155;
          v75 = *(_WORD *)(a1 + 96) << 6;
LABEL_132:
          v7 += v75 >> 15;
          goto LABEL_133;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_155;
        v62 = objc_alloc_init(GEOPDVectorPoiDisplayDV);
        if (GEOPDVectorPoiDisplayDVReadAllFrom((uint64_t)v62, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          v63 = *(void **)(a1 + 64);
          *(_QWORD *)(a1 + 64) = v62;
LABEL_95:

          --v7;
LABEL_133:
          v19 = (int *)MEMORY[0x1E0D82BC8];
          v20 = (int *)MEMORY[0x1E0D82BB8];
LABEL_134:
          if (!(v83 & 1 | (v7 != 0)))
            goto LABEL_135;
          continue;
        }
LABEL_154:

LABEL_155:
        v80 = 0;
        v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_136:
        v81 = &OBJC_IVAR___GEOPDAutocompleteResultSection__readerMarkLength;
        if ((v82 & 1) != 0)
LABEL_137:
          *(_WORD *)(a1 + v81[188]) |= 8u;
        if (v85 & 1 | ((v80 & 1) == 0))
        {
          *(_WORD *)(a1 + v81[188]) |= 0x80u;
          *(_WORD *)(a1 + v81[188]) |= 0x40u;
          *(_WORD *)(a1 + v81[188]) |= 0x100u;
          *(_WORD *)(a1 + v81[188]) |= 0x20u;
          *(_WORD *)(a1 + v81[188]) |= 0x10u;
          *(_WORD *)(a1 + v81[188]) |= 0x200u;
        }
        else if (v17)
        {
          while (1)
          {
            v76 = *v17++;
            v77 = 128;
            switch(v76)
            {
              case 0:
                goto LABEL_148;
              case 1:
                goto LABEL_147;
              case 4:
                v77 = 256;
                goto LABEL_147;
              case 6:
                v77 = 32;
                goto LABEL_147;
              case 7:
                v77 = 16;
                goto LABEL_147;
              case 8:
                v77 = 64;
                goto LABEL_147;
              case 9:
                v77 = 512;
LABEL_147:
                *(_WORD *)(a1 + v81[188]) |= v77;
                break;
              default:
                continue;
            }
          }
        }
LABEL_148:
        if (v80)
          v3 = *(_BYTE *)(v3 + *v19) == 0;
        else
          v3 = 0;
        if ((v85 & 1) != 0)
        {
          v78 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      case 10:
        if ((v8 & 1) == 0)
          goto LABEL_104;
        v64 = 0;
        v65 = 0;
        v66 = 0;
        *(_WORD *)(a1 + 96) |= 2u;
        while (2)
        {
          v67 = *v18;
          v68 = *(_QWORD *)(v3 + v67);
          v69 = v68 + 1;
          if (v68 == -1 || v69 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v19) = 1;
          }
          else
          {
            v70 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v68);
            *(_QWORD *)(v3 + v67) = v69;
            v66 |= (unint64_t)(v70 & 0x7F) << v64;
            if (v70 < 0)
            {
              v64 += 7;
              v28 = v65++ >= 9;
              if (v28)
              {
                v66 = 0;
                goto LABEL_122;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v19))
          v66 = 0;
LABEL_122:
        v73 = v66 != 0;
        v74 = 92;
LABEL_123:
        *(_BYTE *)(a1 + v74) = v73;
        goto LABEL_134;
      default:
        if ((v82 & 1) == 0 || (*(_WORD *)(a1 + 96) & 8) != 0)
        {
LABEL_104:
          v71 = PBReaderSkipValueWithTag();
          v20 = (int *)MEMORY[0x1E0D82BB8];
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if ((v71 & 1) == 0)
          {
            v80 = 0;
            goto LABEL_136;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v39 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v40 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v39;

          }
          v41 = PBUnknownFieldAdd();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          v20 = (int *)MEMORY[0x1E0D82BB8];
          if (!v41)
          {
            v80 = 0;
            v81 = &OBJC_IVAR___GEOPDAutocompleteResultSection__readerMarkLength;
            goto LABEL_137;
          }
        }
        goto LABEL_134;
    }
  }
}

void sub_188B4FC90(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B4FE08(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B506F0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B507D8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDIconMappingCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  _BYTE v18[128];
  _BYTE v19[128];
  uint64_t v20;

  v20 = *MEMORY[0x1E0C80C00];
  v14 = 0u;
  v15 = 0u;
  v16 = 0u;
  v17 = 0u;
  v2 = *(id *)(a1 + 32);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v14, v19, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v15;
    while (1)
    {
      if (*(_QWORD *)v15 != v5)
        objc_enumerationMutation(v2);
      if (!--v4)
      {
        v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v14, v19, 16);
        if (!v4)
          break;
      }
    }
  }

  v12 = 0u;
  v13 = 0u;
  v10 = 0u;
  v11 = 0u;
  v6 = *(id *)(a1 + 24);
  v7 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v10, v18, 16);
  if (v7)
  {
    v8 = v7;
    v9 = *(_QWORD *)v11;
    while (1)
    {
      if (*(_QWORD *)v11 != v9)
        objc_enumerationMutation(v6);
      if (!--v8)
      {
        v8 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v10, v18, 16);
        if (!v8)
          break;
      }
    }
  }

  -[GEOPDVectorPoiDisplayDV readAll:](*(_QWORD *)(a1 + 64), 1);
}

unint64_t GEOPDIconMappingReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 76))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDIconMappingReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 80));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 72) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 76) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDIconMappingReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDIconMappingReadAllFrom_initialTag;
  Specified = GEOPDIconMappingReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDIconMappingCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 80));
  return Specified;
}

void sub_188B51B40(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEOPDIconMappingIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int v5;
  int *v6;
  char v7;
  unsigned int v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  int v16;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int v22;
  BOOL v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  int v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  int v33;
  char v34;
  unsigned int v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  int v41;
  int v42;
  BOOL v43;
  unsigned int v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  int v48;
  unsigned int v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  int v53;
  char v54;
  unsigned int v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  char v60;
  int v61;
  int v62;
  unsigned int v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  int v68;
  unsigned int v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  int v73;
  unsigned int v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  int v78;
  int v79;
  unsigned int v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  int v84;
  int v85;
  BOOL v86;
  uint64_t v87;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = 0;
    v6 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_167;
      v7 = 0;
      v8 = 0;
      v9 = 0;
      while (1)
      {
        v10 = *v2;
        v11 = *(_QWORD *)&a1[v10];
        v12 = v11 + 1;
        if (v11 == -1 || v12 > *(_QWORD *)&a1[*v3])
          break;
        v13 = *(_BYTE *)(*(_QWORD *)&a1[*v6] + v11);
        *(_QWORD *)&a1[v10] = v12;
        v9 |= (unint64_t)(v13 & 0x7F) << v7;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v7 += 7;
        v14 = v8++ >= 9;
        if (v14)
        {
          v9 = 0;
          v15 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v15 = a1[*v4];
      if (a1[*v4])
        v9 = 0;
LABEL_14:
      v16 = v9 & 7;
      if (v15 || v16 == 4)
        goto LABEL_167;
      switch((v9 >> 3))
      {
        case 1u:
          if (v16 == 2)
            goto LABEL_53;
          goto LABEL_176;
        case 2u:
          if (v5 || (v9 & 7) != 0)
            goto LABEL_176;
          v18 = 0;
          while (1)
          {
            v19 = *v2;
            v20 = *(_QWORD *)&a1[v19];
            v21 = v20 + 1;
            if (v20 == -1 || v21 > *(_QWORD *)&a1[*v3])
              break;
            v22 = *(char *)(*(_QWORD *)&a1[*v6] + v20);
            *(_QWORD *)&a1[v19] = v21;
            v5 = 2;
            if (v22 < 0)
            {
              v23 = v18++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_164;
          }
          a1[*v4] = 1;
          v5 = 2;
          goto LABEL_164;
        case 3u:
          if ((v9 & 7) != 0)
            goto LABEL_176;
          v24 = 0;
          while (1)
          {
            v25 = *v2;
            v26 = *(_QWORD *)&a1[v25];
            v27 = v26 + 1;
            if (v26 == -1 || v27 > *(_QWORD *)&a1[*v3])
              goto LABEL_160;
            v28 = *(char *)(*(_QWORD *)&a1[*v6] + v26);
            *(_QWORD *)&a1[v25] = v27;
            if (v28 < 0)
            {
              v23 = v24++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_164;
          }
        case 4u:
          if (v16 == 2)
            goto LABEL_53;
          goto LABEL_176;
        case 5u:
          if ((v9 & 7) != 0)
            goto LABEL_176;
          v29 = 0;
          while (1)
          {
            v30 = *v2;
            v31 = *(_QWORD *)&a1[v30];
            v32 = v31 + 1;
            if (v31 == -1 || v32 > *(_QWORD *)&a1[*v3])
              goto LABEL_160;
            v33 = *(char *)(*(_QWORD *)&a1[*v6] + v31);
            *(_QWORD *)&a1[v30] = v32;
            if (v33 < 0)
            {
              v23 = v29++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_164;
          }
        case 6u:
        case 7u:
          if (v16 == 2 && PBReaderPlaceMark() && GEOPDCartoIconZoomIsValid(a1))
            goto LABEL_162;
          goto LABEL_176;
        case 8u:
          if (v16 == 2)
            goto LABEL_53;
          goto LABEL_176;
        case 9u:
          if (v16 != 2 || !PBReaderPlaceMark())
            goto LABEL_176;
          objc_msgSend(a1, "position", 0, 0);
          objc_msgSend(a1, "length");
LABEL_58:
          while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3] && !a1[*v4])
          {
            v34 = 0;
            v35 = 0;
            v36 = 0;
            while (2)
            {
              v37 = *v2;
              v38 = *(_QWORD *)&a1[v37];
              v39 = v38 + 1;
              if (v38 == -1 || v39 > *(_QWORD *)&a1[*v3])
              {
                a1[*v4] = 1;
              }
              else
              {
                v40 = *(_BYTE *)(*(_QWORD *)&a1[*v6] + v38);
                *(_QWORD *)&a1[v37] = v39;
                v36 |= (unint64_t)(v40 & 0x7F) << v34;
                if (v40 < 0)
                {
                  v34 += 7;
                  v14 = v35++ >= 9;
                  if (v14)
                  {
                    v36 = 0;
                    v41 = a1[*v4];
                    goto LABEL_70;
                  }
                  continue;
                }
              }
              break;
            }
            v41 = a1[*v4];
            if (a1[*v4])
              v36 = 0;
LABEL_70:
            v42 = v36 & 7;
            if (v41)
              v43 = 1;
            else
              v43 = v42 == 4;
            if (!v43)
            {
              switch((v36 >> 3))
              {
                case 1u:
                  if ((v36 & 7) != 0)
                    goto LABEL_175;
                  v44 = 0;
                  while (1)
                  {
                    v45 = *v2;
                    v46 = *(_QWORD *)&a1[v45];
                    v47 = v46 + 1;
                    if (v46 == -1 || v47 > *(_QWORD *)&a1[*v3])
                      goto LABEL_149;
                    v48 = *(char *)(*(_QWORD *)&a1[*v6] + v46);
                    *(_QWORD *)&a1[v45] = v47;
                    if (v48 < 0)
                    {
                      v23 = v44++ > 8;
                      if (!v23)
                        continue;
                    }
                    goto LABEL_58;
                  }
                case 2u:
                case 4u:
                case 7u:
                case 8u:
                  if (v42 == 2 && PBReaderPlaceMark() && GEOPDZoomInfoIsValid(a1))
                    goto LABEL_78;
                  goto LABEL_175;
                case 3u:
                  if ((v36 & 7) != 0)
                    goto LABEL_175;
                  v49 = 0;
                  while (1)
                  {
                    v50 = *v2;
                    v51 = *(_QWORD *)&a1[v50];
                    v52 = v51 + 1;
                    if (v51 == -1 || v52 > *(_QWORD *)&a1[*v3])
                      goto LABEL_149;
                    v53 = *(char *)(*(_QWORD *)&a1[*v6] + v51);
                    *(_QWORD *)&a1[v50] = v52;
                    if (v53 < 0)
                    {
                      v23 = v49++ > 8;
                      if (!v23)
                        continue;
                    }
                    goto LABEL_58;
                  }
                case 5u:
                  if (v42 != 2 || !PBReaderPlaceMark())
                    goto LABEL_175;
                  objc_msgSend(a1, "position");
                  objc_msgSend(a1, "length");
LABEL_100:
                  while (2)
                  {
                    if (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3] && !a1[*v4])
                    {
                      v54 = 0;
                      v55 = 0;
                      v56 = 0;
                      while (1)
                      {
                        v57 = *v2;
                        v58 = *(_QWORD *)&a1[v57];
                        v59 = v58 + 1;
                        if (v58 == -1 || v59 > *(_QWORD *)&a1[*v3])
                          break;
                        v60 = *(_BYTE *)(*(_QWORD *)&a1[*v6] + v58);
                        *(_QWORD *)&a1[v57] = v59;
                        v56 |= (unint64_t)(v60 & 0x7F) << v54;
                        if ((v60 & 0x80) == 0)
                          goto LABEL_110;
                        v54 += 7;
                        v14 = v55++ >= 9;
                        if (v14)
                        {
                          v56 = 0;
                          v61 = a1[*v4];
                          goto LABEL_112;
                        }
                      }
                      a1[*v4] = 1;
LABEL_110:
                      v61 = a1[*v4];
                      if (a1[*v4])
                        v56 = 0;
LABEL_112:
                      v62 = v56 & 7;
                      if (!v61 && v62 != 4)
                      {
                        if ((v56 >> 3) == 2)
                        {
                          if (v62 == 2 && PBReaderPlaceMark() && GEOPDGeographicCoordinateIsValid(a1))
                          {
                            PBReaderRecallMark();
                            continue;
                          }
                        }
                        else
                        {
                          if ((v56 >> 3) != 1)
                          {
                            if ((PBReaderSkipValueWithTag() & 1) == 0)
                              goto LABEL_174;
                            continue;
                          }
                          if ((v56 & 7) == 0)
                          {
                            v64 = 0;
                            do
                            {
                              v65 = *v2;
                              v66 = *(_QWORD *)&a1[v65];
                              v67 = v66 + 1;
                              if (v66 == -1 || v67 > *(_QWORD *)&a1[*v3])
                              {
                                a1[*v4] = 1;
                                goto LABEL_100;
                              }
                              v68 = *(char *)(*(_QWORD *)&a1[*v6] + v66);
                              *(_QWORD *)&a1[v65] = v67;
                              if ((v68 & 0x80000000) == 0)
                                break;
                              v23 = v64++ > 8;
                            }
                            while (!v23);
                            continue;
                          }
                        }
LABEL_174:
                        PBReaderRecallMark();
                        goto LABEL_175;
                      }
                    }
                    break;
                  }
                  v79 = a1[*v4];
                  PBReaderRecallMark();
                  if (!v79)
                  {
LABEL_78:
                    PBReaderRecallMark();
                    continue;
                  }
LABEL_175:
                  PBReaderRecallMark();
                  goto LABEL_176;
                case 6u:
                  if ((v36 & 7) != 0)
                    goto LABEL_175;
                  v69 = 0;
                  while (1)
                  {
                    v70 = *v2;
                    v71 = *(_QWORD *)&a1[v70];
                    v72 = v71 + 1;
                    if (v71 == -1 || v72 > *(_QWORD *)&a1[*v3])
                      goto LABEL_149;
                    v73 = *(char *)(*(_QWORD *)&a1[*v6] + v71);
                    *(_QWORD *)&a1[v70] = v72;
                    if (v73 < 0)
                    {
                      v23 = v69++ > 8;
                      if (!v23)
                        continue;
                    }
                    goto LABEL_58;
                  }
                case 9u:
                  if ((v36 & 7) != 0)
                    goto LABEL_175;
                  v74 = 0;
                  do
                  {
                    v75 = *v2;
                    v76 = *(_QWORD *)&a1[v75];
                    v77 = v76 + 1;
                    if (v76 == -1 || v77 > *(_QWORD *)&a1[*v3])
                    {
LABEL_149:
                      a1[*v4] = 1;
                      goto LABEL_58;
                    }
                    v78 = *(char *)(*(_QWORD *)&a1[*v6] + v76);
                    *(_QWORD *)&a1[v75] = v77;
                    if ((v78 & 0x80000000) == 0)
                      break;
                    v23 = v74++ > 8;
                  }
                  while (!v23);
                  break;
                default:
                  if ((PBReaderSkipValueWithTag() & 1) != 0)
                    continue;
                  goto LABEL_175;
              }
              continue;
            }
            break;
          }
          v85 = a1[*v4];
          PBReaderRecallMark();
          if (v85)
          {
LABEL_176:
            PBReaderRecallMark();
            return 0;
          }
LABEL_162:
          PBReaderRecallMark();
LABEL_164:
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_167;
          break;
        case 0xAu:
          if ((v9 & 7) != 0)
            goto LABEL_176;
          v80 = 0;
          while (1)
          {
            v81 = *v2;
            v82 = *(_QWORD *)&a1[v81];
            v83 = v82 + 1;
            if (v82 == -1 || v83 > *(_QWORD *)&a1[*v3])
              break;
            v84 = *(char *)(*(_QWORD *)&a1[*v6] + v82);
            *(_QWORD *)&a1[v81] = v83;
            if (v84 < 0)
            {
              v23 = v80++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_164;
          }
LABEL_160:
          a1[*v4] = 1;
          goto LABEL_164;
        default:
LABEL_53:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_176;
          goto LABEL_164;
      }
    }
  }
  v5 = 0;
LABEL_167:
  if (a1[*v4])
    v86 = 1;
  else
    v86 = v5 == 0;
  v87 = !v86;
  PBReaderRecallMark();
  return v87;
}

void sub_188B52728(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDIconMappingIsDirty(uint64_t a1)
{
  _BOOL8 v2;
  uint64_t v3;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  if ((*(_WORD *)(a1 + 96) & 0x5F0) != 0)
    return 1;
  if ((*(_WORD *)(a1 + 96) & 0x200) == 0)
    return 0;
  v3 = *(_QWORD *)(a1 + 64);
  if (!v3)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(v3 + 72));
  v2 = (*(_WORD *)(v3 + 92) & 0x7E0) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(v3 + 72));
  return v2;
}

os_unfair_lock_s *GEOPDIconMappingIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOPDIconMappingIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 20);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_188B52C14(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDIdentityMerchantInformationReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  uint64_t v18;
  void *v19;
  id v20;
  void *v21;
  _BOOL8 v22;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 1)
        {
          PBReaderReadString();
          v18 = objc_claimAutoreleasedReturnValue();
          v19 = *(void **)(a1 + 16);
          *(_QWORD *)(a1 + 16) = v18;

        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v20 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v21 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v20;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_26;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v22 = v3[*v6] == 0;
  }
  else
  {
LABEL_26:
    v22 = 0;
  }
  objc_sync_exit(v3);

  return v22;
}

void sub_188B538D8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDIndexQueryNodeReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  int *v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  int *v18;
  int *v19;
  int *v20;
  int *v21;
  char v22;
  unsigned int v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  BOOL v29;
  int v30;
  unint64_t v32;
  BOOL v33;
  int *v34;
  int v35;
  int v36;
  BOOL v37;
  char v38;
  unsigned int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  id v45;
  void *v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  GEOPDIndexQueryNode *v51;
  char v52;
  char v53;
  int v54;
  char v55;
  void *v56;
  int v58;
  int *v59;
  char v60;
  char v61;
  char v62;
  char v63;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 52);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 48));
  v7 = v6;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = ((*(unsigned __int8 *)(a1 + 64) >> 3) & 1)
      + (*(_BYTE *)(a1 + 64) & 1)
      + ((*(unsigned __int8 *)(a1 + 64) >> 1) & 1)
      + ((*(unsigned __int8 *)(a1 + 64) >> 2) & 1);
  while (2)
  {
    v14 = 1;
    v15 = 1;
    v16 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v13;
        goto LABEL_8;
      case -3:
        v9 = 1;
        goto LABEL_7;
      case -2:
        v15 = v11;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v17 = v13 > 1;
        v60 = v17 & ~(_BYTE)v12 | v8;
        v61 = v17 | v12 | v60;
        if ((((v17 | v12) | v9) & 1) != 0)
          v18 = 0;
        else
          v18 = a3;
        v62 = (v18 == 0) | v17 | v12;
        v63 = v17 | v12;
        v19 = (int *)MEMORY[0x1E0D82BF0];
        v20 = (int *)MEMORY[0x1E0D82BC8];
        v21 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v13;
LABEL_7:
        v14 = v8;
LABEL_8:
        v15 = v11;
        v16 = v12;
LABEL_10:
        ++v10;
        v8 = v14;
        v11 = v15;
        v12 = v16;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v19) >= *(_QWORD *)(v3 + *v7) || *(_BYTE *)(v3 + *v20))
      goto LABEL_78;
    v22 = 0;
    v23 = 0;
    v24 = 0;
    while (1)
    {
      v25 = *v19;
      v26 = *(_QWORD *)(v3 + v25);
      v27 = v26 + 1;
      if (v26 == -1 || v27 > *(_QWORD *)(v3 + *v7))
        break;
      v28 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v26);
      *(_QWORD *)(v3 + v25) = v27;
      v24 |= (unint64_t)(v28 & 0x7F) << v22;
      if ((v28 & 0x80) == 0)
        goto LABEL_25;
      v22 += 7;
      v29 = v23++ >= 9;
      if (v29)
      {
        v24 = 0;
        v30 = *(unsigned __int8 *)(v3 + *v20);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v20) = 1;
LABEL_25:
    v30 = *(unsigned __int8 *)(v3 + *v20);
    if (*(_BYTE *)(v3 + *v20))
      v24 = 0;
LABEL_27:
    if (v30 || (v24 & 7) == 4)
    {
LABEL_78:
      v58 = 1;
      goto LABEL_79;
    }
    v32 = v24 >> 3;
    v33 = v63;
    if ((v62 & 1) == 0)
    {
      v34 = v18;
      do
      {
        v36 = *v34++;
        v35 = v36;
        v33 = v36 != 0;
        if (v36)
          v37 = v35 == (_DWORD)v32;
        else
          v37 = 1;
      }
      while (!v37);
    }
    switch((int)v32)
    {
      case 1:
        if ((v9 & 1) == 0)
          goto LABEL_65;
        v38 = 0;
        v39 = 0;
        v40 = 0;
        while (1)
        {
          v41 = *v19;
          v42 = *(_QWORD *)(v3 + v41);
          v43 = v42 + 1;
          if (v42 == -1 || v43 > *(_QWORD *)(v3 + *v7))
            break;
          v44 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v42);
          *(_QWORD *)(v3 + v41) = v43;
          v40 |= (unint64_t)(v44 & 0x7F) << v38;
          if ((v44 & 0x80) == 0)
            goto LABEL_68;
          v38 += 7;
          v29 = v39++ >= 9;
          if (v29)
          {
            LODWORD(v40) = 0;
            goto LABEL_70;
          }
        }
        *(_BYTE *)(v3 + *v20) = 1;
LABEL_68:
        if (*(_BYTE *)(v3 + *v20))
          LODWORD(v40) = 0;
LABEL_70:
        *(_DWORD *)(a1 + 60) = v40;
        goto LABEL_77;
      case 2:
        if (!v33)
          goto LABEL_65;
        if ((*(_BYTE *)(a1 + 64) & 2) == 0)
        {
          PBReaderReadString();
          v48 = objc_claimAutoreleasedReturnValue();
          v49 = 24;
          goto LABEL_59;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_95;
        v53 = *(_BYTE *)(a1 + 64) << 6;
        goto LABEL_75;
      case 3:
        if (!v33)
          goto LABEL_65;
        if ((*(_BYTE *)(a1 + 64) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_95;
          v53 = 16 * *(_BYTE *)(a1 + 64);
LABEL_75:
          v10 += v53 >> 7;
        }
        else
        {
          PBReaderReadString();
          v48 = objc_claimAutoreleasedReturnValue();
          v49 = 40;
LABEL_59:
          v50 = *(void **)(a1 + v49);
          *(_QWORD *)(a1 + v49) = v48;

          --v10;
        }
        goto LABEL_76;
      case 4:
        if (!v33 || (*(_BYTE *)(a1 + 64) & 4) != 0)
          goto LABEL_65;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_95;
        v51 = objc_alloc_init(GEOPDIndexQueryNode);
        if (GEOPDIndexQueryNodeReadAllFrom())
        {
          PBReaderRecallMark();
          -[GEOPDIndexQueryNode _addNoFlagsOperand:](a1, v51);

LABEL_76:
          v20 = (int *)MEMORY[0x1E0D82BC8];
          v7 = (int *)MEMORY[0x1E0D82BD8];
LABEL_77:
          if (!(v61 & 1 | (v10 != 0)))
            goto LABEL_78;
          continue;
        }

LABEL_95:
        v58 = 0;
        v20 = (int *)MEMORY[0x1E0D82BC8];
LABEL_79:
        v59 = &OBJC_IVAR___GEOPDAutocompleteResultSection__readerMarkLength;
        if ((v60 & 1) != 0)
LABEL_80:
          *(_BYTE *)(a1 + v59[206]) |= 1u;
        if (v63 & 1 | ((v58 & 1) == 0))
        {
          *(_BYTE *)(a1 + v59[206]) |= 2u;
          *(_BYTE *)(a1 + v59[206]) |= 8u;
          *(_BYTE *)(a1 + v59[206]) |= 4u;
        }
        else if (v18)
        {
          while (1)
          {
            v54 = *v18++;
            v55 = 2;
            switch(v54)
            {
              case 0:
                goto LABEL_88;
              case 2:
                goto LABEL_87;
              case 3:
                v55 = 8;
                goto LABEL_87;
              case 4:
                v55 = 4;
LABEL_87:
                *(_BYTE *)(a1 + v59[206]) |= v55;
                break;
              default:
                continue;
            }
          }
        }
LABEL_88:
        if (v58)
          v3 = *(_BYTE *)(v3 + *v20) == 0;
        else
          v3 = 0;
        if ((v63 & 1) != 0)
        {
          v56 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      default:
        if ((v60 & 1) == 0 || (*(_BYTE *)(a1 + 64) & 1) != 0)
        {
LABEL_65:
          v52 = PBReaderSkipValueWithTag();
          v7 = (int *)MEMORY[0x1E0D82BD8];
          v20 = (int *)MEMORY[0x1E0D82BC8];
          if ((v52 & 1) == 0)
          {
            v58 = 0;
            goto LABEL_79;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v45 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v46 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v45;

          }
          v47 = PBUnknownFieldAdd();
          v20 = (int *)MEMORY[0x1E0D82BC8];
          v7 = (int *)MEMORY[0x1E0D82BD8];
          if (!v47)
          {
            v58 = 0;
            v59 = &OBJC_IVAR___GEOPDAutocompleteResultSection__readerMarkLength;
            goto LABEL_80;
          }
        }
        goto LABEL_77;
    }
  }
}

void sub_188B5436C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B54880(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B54960(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDIndexQueryNodeCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _BYTE v10[128];
  uint64_t v11;

  v11 = *MEMORY[0x1E0C80C00];
  v6 = 0u;
  v7 = 0u;
  v8 = 0u;
  v9 = 0u;
  v1 = *(id *)(a1 + 32);
  v2 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
  if (v2)
  {
    v3 = v2;
    v4 = *(_QWORD *)v7;
    do
    {
      v5 = 0;
      do
      {
        if (*(_QWORD *)v7 != v4)
          objc_enumerationMutation(v1);
        -[GEOPDIndexQueryNode readAll:](*(_QWORD *)(*((_QWORD *)&v6 + 1) + 8 * v5++), 1);
      }
      while (v3 != v5);
      v3 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
    }
    while (v3);
  }

}

unint64_t GEOPDIndexQueryNodeReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 52))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDIndexQueryNodeReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 52) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDIndexQueryNodeReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDIndexQueryNodeReadAllFrom_initialTag;
  Specified = GEOPDIndexQueryNodeReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDIndexQueryNodeCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_188B54FF0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEOPDIndexQueryNodeIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int v5;
  int *v6;
  char v7;
  unsigned int v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  int v16;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int v22;
  BOOL v24;
  uint64_t v25;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = 0;
    v6 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_41;
      v7 = 0;
      v8 = 0;
      v9 = 0;
      while (1)
      {
        v10 = *v2;
        v11 = *(_QWORD *)&a1[v10];
        v12 = v11 + 1;
        if (v11 == -1 || v12 > *(_QWORD *)&a1[*v3])
          break;
        v13 = *(_BYTE *)(*(_QWORD *)&a1[*v6] + v11);
        *(_QWORD *)&a1[v10] = v12;
        v9 |= (unint64_t)(v13 & 0x7F) << v7;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v7 += 7;
        if (v8++ >= 9)
        {
          v9 = 0;
          v15 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v15 = a1[*v4];
      if (a1[*v4])
        v9 = 0;
LABEL_14:
      v16 = v9 & 7;
      if (v15 || v16 == 4)
        goto LABEL_41;
      switch((v9 >> 3))
      {
        case 1u:
          if (v5 || (v9 & 7) != 0)
            goto LABEL_48;
          v18 = 0;
          do
          {
            v19 = *v2;
            v20 = *(_QWORD *)&a1[v19];
            v21 = v20 + 1;
            if (v20 == -1 || v21 > *(_QWORD *)&a1[*v3])
            {
              v5 = 1;
              a1[*v4] = 1;
              goto LABEL_38;
            }
            v22 = *(char *)(*(_QWORD *)&a1[*v6] + v20);
            *(_QWORD *)&a1[v19] = v21;
            v5 = 1;
            if ((v22 & 0x80000000) == 0)
              break;
          }
          while (v18++ <= 8);
          goto LABEL_38;
        case 2u:
          if (v16 == 2)
            goto LABEL_31;
          goto LABEL_48;
        case 3u:
          if (v16 == 2)
            goto LABEL_31;
          goto LABEL_48;
        case 4u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOPDIndexQueryNodeIsValid(a1))
            goto LABEL_48;
          PBReaderRecallMark();
          goto LABEL_38;
        default:
LABEL_31:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_48:
            PBReaderRecallMark();
            return 0;
          }
LABEL_38:
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_41;
          break;
      }
    }
  }
  v5 = 0;
LABEL_41:
  if (a1[*v4])
    v24 = 1;
  else
    v24 = v5 == 0;
  v25 = !v24;
  PBReaderRecallMark();
  return v25;
}

void sub_188B554D8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDIndexQueryNodeIsDirty(uint64_t a1)
{
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t i;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _BYTE v11[128];
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  if ((*(_BYTE *)(a1 + 64) & 0x1E) != 0)
    return 1;
  if ((*(_BYTE *)(a1 + 64) & 4) == 0)
    return 0;
  v9 = 0u;
  v10 = 0u;
  v7 = 0u;
  v8 = 0u;
  v3 = *(id *)(a1 + 32);
  v2 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
  if (v2)
  {
    v4 = *(_QWORD *)v8;
    while (2)
    {
      for (i = 0; i != v2; ++i)
      {
        if (*(_QWORD *)v8 != v4)
          objc_enumerationMutation(v3);
        if ((GEOPDIndexQueryNodeIsDirty(*(_QWORD *)(*((_QWORD *)&v7 + 1) + 8 * i)) & 1) != 0)
        {
          v2 = 1;
          goto LABEL_15;
        }
      }
      v2 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
      if (v2)
        continue;
      break;
    }
  }
LABEL_15:

  return v2;
}

os_unfair_lock_s *GEOPDIndexQueryNodeIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOPDIndexQueryNodeIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 14);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_188B558DC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDIpGeoLookupParametersReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  uint64_t v18;
  void *v19;
  id v20;
  void *v21;
  _BOOL8 v22;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 1)
        {
          PBReaderReadString();
          v18 = objc_claimAutoreleasedReturnValue();
          v19 = *(void **)(a1 + 16);
          *(_QWORD *)(a1 + 16) = v18;

        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v20 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v21 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v20;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_26;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v22 = v3[*v6] == 0;
  }
  else
  {
LABEL_26:
    v22 = 0;
  }
  objc_sync_exit(v3);

  return v22;
}

void sub_188B560F4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B5640C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDIpGeoLookupResultReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  int *v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  BOOL v28;
  int v29;
  unint64_t v31;
  BOOL v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  char v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  id v44;
  void *v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  GEOLatLng *v49;
  void *v50;
  char v51;
  char v52;
  int v53;
  char v54;
  void *v55;
  int v57;
  int *v58;
  char v59;
  char v60;
  char v61;
  char v62;
  char v63;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 60);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 56));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = (vaddv_s16((int16x4_t)(*(_QWORD *)&vshl_u16((uint16x4_t)(*(_QWORD *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 72)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFBFFFEFFFDFFFCLL) & 0xFF01FF01FF01FF01))+ ((*(_BYTE *)(a1 + 72) & 2) != 0));
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v7 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 > 2;
        v60 = v16 & ~(_BYTE)v11 | v9;
        v61 = v16 | v11 | v60;
        v59 = v7;
        if ((((v16 | v11) | v7) & 1) != 0)
          v17 = 0;
        else
          v17 = a3;
        v62 = (v17 == 0) | v16 | v11;
        v63 = v16 | v11;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v8;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v19))
      goto LABEL_86;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0)
        goto LABEL_25;
      v21 += 7;
      v28 = v22++ >= 9;
      if (v28)
      {
        v23 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_25:
    v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_27:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_86:
      v57 = 1;
      goto LABEL_87;
    }
    v31 = v23 >> 3;
    v32 = v63;
    if ((v62 & 1) == 0)
    {
      v33 = v17;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if ((v59 & 1) == 0)
          goto LABEL_69;
        v37 = 0;
        v38 = 0;
        v39 = 0;
        *(_BYTE *)(a1 + 72) |= 1u;
        while (1)
        {
          v40 = *v18;
          v41 = *(_QWORD *)(v3 + v40);
          v42 = v41 + 1;
          if (v41 == -1 || v42 > *(_QWORD *)(v3 + *v6))
            break;
          v43 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v41);
          *(_QWORD *)(v3 + v40) = v42;
          v39 |= (unint64_t)(v43 & 0x7F) << v37;
          if ((v43 & 0x80) == 0)
            goto LABEL_72;
          v37 += 7;
          v28 = v38++ >= 9;
          if (v28)
          {
            LODWORD(v39) = 0;
            goto LABEL_74;
          }
        }
        *(_BYTE *)(v3 + *v19) = 1;
LABEL_72:
        if (*(_BYTE *)(v3 + *v19))
          LODWORD(v39) = 0;
LABEL_74:
        *(_DWORD *)(a1 + 68) = v39;
        goto LABEL_85;
      case 2:
        if (!v32)
          goto LABEL_69;
        if ((*(_BYTE *)(a1 + 72) & 8) == 0)
        {
          PBReaderReadString();
          v47 = objc_claimAutoreleasedReturnValue();
          v48 = 32;
          goto LABEL_67;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_105;
        v52 = 16 * *(_BYTE *)(a1 + 72);
        goto LABEL_83;
      case 3:
        if (!v32)
          goto LABEL_69;
        if ((*(_BYTE *)(a1 + 72) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_105;
          v52 = 8 * *(_BYTE *)(a1 + 72);
LABEL_83:
          v8 += v52 >> 7;
          goto LABEL_84;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_105;
        v49 = objc_alloc_init(GEOLatLng);
        if (GEOLatLngReadAllFrom((uint64_t)v49, (void *)v3))
        {
          PBReaderRecallMark();
          v50 = *(void **)(a1 + 40);
          *(_QWORD *)(a1 + 40) = v49;
LABEL_68:

          --v8;
LABEL_84:
          v19 = (int *)MEMORY[0x1E0D82BC8];
          goto LABEL_85;
        }

LABEL_105:
        v57 = 0;
        v58 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
        v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_88:
        if ((v60 & 1) != 0)
LABEL_89:
          *(_BYTE *)(a1 + v58[347]) |= 2u;
        if (v63 & 1 | ((v57 & 1) == 0))
        {
          *(_BYTE *)(a1 + v58[347]) |= 8u;
          *(_BYTE *)(a1 + v58[347]) |= 0x10u;
          *(_BYTE *)(a1 + v58[347]) |= 4u;
          *(_BYTE *)(a1 + v58[347]) |= 0x20u;
        }
        else if (v17)
        {
          while (1)
          {
            v53 = *v17++;
            v54 = 8;
            switch(v53)
            {
              case 0:
                goto LABEL_98;
              case 2:
                goto LABEL_97;
              case 3:
                v54 = 16;
                goto LABEL_97;
              case 4:
                v54 = 4;
                goto LABEL_97;
              case 5:
                v54 = 32;
LABEL_97:
                *(_BYTE *)(a1 + v58[347]) |= v54;
                break;
              default:
                continue;
            }
          }
        }
LABEL_98:
        if (v57)
          v3 = *(_BYTE *)(v3 + *v19) == 0;
        else
          v3 = 0;
        if ((v63 & 1) != 0)
        {
          v55 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      case 4:
        if (!v32)
          goto LABEL_69;
        if ((*(_BYTE *)(a1 + 72) & 4) == 0)
        {
          PBReaderReadString();
          v47 = objc_claimAutoreleasedReturnValue();
          v48 = 24;
          goto LABEL_67;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_105;
        v52 = 32 * *(_BYTE *)(a1 + 72);
        goto LABEL_83;
      case 5:
        if (!v32)
          goto LABEL_69;
        if ((*(_BYTE *)(a1 + 72) & 0x20) == 0)
        {
          PBReaderReadString();
          v47 = objc_claimAutoreleasedReturnValue();
          v48 = 48;
LABEL_67:
          v50 = *(void **)(a1 + v48);
          *(_QWORD *)(a1 + v48) = v47;
          goto LABEL_68;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_105;
        v52 = 4 * *(_BYTE *)(a1 + 72);
        goto LABEL_83;
      default:
        if ((v60 & 1) == 0 || (*(_BYTE *)(a1 + 72) & 2) != 0)
        {
LABEL_69:
          v51 = PBReaderSkipValueWithTag();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if ((v51 & 1) == 0)
          {
            v57 = 0;
LABEL_87:
            v58 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
            goto LABEL_88;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v44 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v45 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v44;

          }
          v46 = PBUnknownFieldAdd();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if (!v46)
          {
            v57 = 0;
            v58 = &OBJC_IVAR___GEORawPathGeometry__pathMatcherInstructions;
            goto LABEL_89;
          }
        }
LABEL_85:
        if (!(v61 & 1 | (v8 != 0)))
          goto LABEL_86;
        continue;
    }
  }
}

void sub_188B56C70(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B56DC4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B56F18(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B57464(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDIpGeoLookupResultReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 60))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDIpGeoLookupResultReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 60) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDIpGeoLookupResultReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDIpGeoLookupResultReadAllFrom_initialTag;
  Specified = GEOPDIpGeoLookupResultReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    objc_msgSend(*(id *)(a1 + 40), "readAll:", 1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_188B576CC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188B578C0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDIpGeoLookupResultIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  v2 = (*(_BYTE *)(a1 + 72) & 0x7C) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return v2;
}

void sub_188B57B24(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEOPDLitePlaceResultReadAllFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  char v25;
  unsigned int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  uint64_t result;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        v13 = v12 + 1;
        if (v12 == -1 || v13 > *(_QWORD *)(a2 + *v4))
          break;
        v14 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v15 = v9++ >= 9;
        if (v15)
        {
          v10 = 0;
          v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v16 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 2)
      {
        v25 = 0;
        v26 = 0;
        v27 = 0;
        *(_BYTE *)(a1 + 12) |= 2u;
        while (1)
        {
          v28 = *v3;
          v29 = *(_QWORD *)(a2 + v28);
          v30 = v29 + 1;
          if (v29 == -1 || v30 > *(_QWORD *)(a2 + *v4))
            break;
          v31 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v29);
          *(_QWORD *)(a2 + v28) = v30;
          v27 |= (unint64_t)(v31 & 0x7F) << v25;
          if ((v31 & 0x80) == 0)
            goto LABEL_41;
          v25 += 7;
          v15 = v26++ >= 9;
          if (v15)
          {
            LODWORD(v27) = 0;
            goto LABEL_43;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_41:
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v27) = 0;
LABEL_43:
        *(_DWORD *)(a1 + 8) = v27;
      }
      else if ((v10 >> 3) == 1)
      {
        v18 = 0;
        v19 = 0;
        v20 = 0;
        *(_BYTE *)(a1 + 12) |= 1u;
        while (1)
        {
          v21 = *v3;
          v22 = *(_QWORD *)(a2 + v21);
          v23 = v22 + 1;
          if (v22 == -1 || v23 > *(_QWORD *)(a2 + *v4))
            break;
          v24 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v22);
          *(_QWORD *)(a2 + v21) = v23;
          v20 |= (unint64_t)(v24 & 0x7F) << v18;
          if ((v24 & 0x80) == 0)
            goto LABEL_37;
          v18 += 7;
          v15 = v19++ >= 9;
          if (v15)
          {
            v20 = 0;
            goto LABEL_39;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_37:
        if (*(_BYTE *)(a2 + *v5))
          v20 = 0;
LABEL_39:
        *(_QWORD *)a1 = v20;
      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

unint64_t GEOPDLocalizedQueryUnderstandingTaxonomyResultItemBrandReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  int *v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  uint32x4_t v14;
  int8x16_t v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  char v21;
  unsigned __int8 v22;
  int *v23;
  int *v24;
  int *v25;
  int *v26;
  char v27;
  unsigned int v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  BOOL v34;
  int v35;
  unint64_t v37;
  BOOL v38;
  int *v39;
  int v40;
  int v41;
  BOOL v42;
  char v43;
  unsigned int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  id v50;
  void *v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  GEOLocalizedString *v55;
  uint64_t v56;
  char v57;
  unsigned int v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  char v63;
  char v64;
  unsigned int v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  char v69;
  void *v70;
  char v71;
  uint64_t v72;
  int v73;
  int v74;
  int v75;
  void *v76;
  int v78;
  char v79;
  char v80;
  char v81;
  BOOL v82;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 160));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 156);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 152));
  v7 = v6;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = *(_DWORD *)(a1 + 168);
  v14 = (uint32x4_t)vdupq_n_s32(v13);
  v15.i64[0] = 0x100000001;
  v15.i64[1] = 0x100000001;
  v16 = vaddvq_s32(vaddq_s32(vaddq_s32((int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v14, (uint32x4_t)xmmword_189CC9DD0), v15), (int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v14, (uint32x4_t)xmmword_189CC9DE0), v15)), (int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v14, (uint32x4_t)xmmword_189CC9DF0), v15)))+ ((v13 >> 5) & 1)+ ((v13 >> 8) & 1)+ ((v13 >> 3) & 1);
  while (2)
  {
    v17 = 1;
    v18 = 1;
    v19 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v16;
        goto LABEL_8;
      case -3:
        v9 = 1;
        goto LABEL_7;
      case -2:
        v18 = v11;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v20 = v16 > 0xA;
        v21 = v20 & ~(_BYTE)v12 | v10;
        v22 = v20 | v12;
        v79 = v21;
        v80 = v22 | v21;
        if (((v22 | v9) & 1) != 0)
          v23 = 0;
        else
          v23 = a3;
        v81 = (v23 == 0) | v22;
        v82 = v22;
        v24 = (int *)MEMORY[0x1E0D82BF0];
        v25 = (int *)MEMORY[0x1E0D82BC8];
        v26 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v16;
LABEL_7:
        v17 = v10;
LABEL_8:
        v18 = v11;
        v19 = v12;
LABEL_10:
        ++v8;
        v10 = v17;
        v11 = v18;
        v12 = v19;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v24) >= *(_QWORD *)(v3 + *v7) || *(_BYTE *)(v3 + *v25))
      goto LABEL_166;
    v27 = 0;
    v28 = 0;
    v29 = 0;
    while (1)
    {
      v30 = *v24;
      v31 = *(_QWORD *)(v3 + v30);
      v32 = v31 + 1;
      if (v31 == -1 || v32 > *(_QWORD *)(v3 + *v7))
        break;
      v33 = *(_BYTE *)(*(_QWORD *)(v3 + *v26) + v31);
      *(_QWORD *)(v3 + v30) = v32;
      v29 |= (unint64_t)(v33 & 0x7F) << v27;
      if ((v33 & 0x80) == 0)
        goto LABEL_25;
      v27 += 7;
      v34 = v28++ >= 9;
      if (v34)
      {
        v29 = 0;
        v35 = *(unsigned __int8 *)(v3 + *v25);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v25) = 1;
LABEL_25:
    v35 = *(unsigned __int8 *)(v3 + *v25);
    if (*(_BYTE *)(v3 + *v25))
      v29 = 0;
LABEL_27:
    if (v35 || (v29 & 7) == 4)
    {
LABEL_166:
      v78 = 1;
      goto LABEL_167;
    }
    v37 = v29 >> 3;
    v38 = v82;
    if ((v81 & 1) == 0)
    {
      v39 = v23;
      do
      {
        v41 = *v39++;
        v40 = v41;
        v38 = v41 != 0;
        if (v41)
          v42 = v40 == (_DWORD)v37;
        else
          v42 = 1;
      }
      while (!v42);
    }
    switch((int)v37)
    {
      case 1:
        if ((v9 & 1) == 0)
          goto LABEL_130;
        v43 = 0;
        v44 = 0;
        v45 = 0;
        *(_DWORD *)(a1 + 168) |= 2u;
        while (1)
        {
          v46 = *v24;
          v47 = *(_QWORD *)(v3 + v46);
          v48 = v47 + 1;
          if (v47 == -1 || v48 > *(_QWORD *)(v3 + *v7))
            break;
          v49 = *(_BYTE *)(*(_QWORD *)(v3 + *v26) + v47);
          *(_QWORD *)(v3 + v46) = v48;
          v45 |= (unint64_t)(v49 & 0x7F) << v43;
          if ((v49 & 0x80) == 0)
            goto LABEL_133;
          v43 += 7;
          v34 = v44++ >= 9;
          if (v34)
          {
            v45 = 0;
            goto LABEL_135;
          }
        }
        *(_BYTE *)(v3 + *v25) = 1;
LABEL_133:
        if (*(_BYTE *)(v3 + *v25))
          v45 = 0;
LABEL_135:
        v72 = 104;
        goto LABEL_144;
      case 2:
        if (!v38)
          goto LABEL_130;
        if ((*(_BYTE *)(a1 + 170) & 1) == 0)
        {
          PBReaderReadString();
          v53 = objc_claimAutoreleasedReturnValue();
          v54 = 136;
          goto LABEL_107;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_194;
        v73 = (int)(*(_DWORD *)(a1 + 168) << 15) >> 31;
        goto LABEL_163;
      case 3:
        if (!v38)
          goto LABEL_130;
        if ((*(_BYTE *)(a1 + 170) & 2) == 0)
        {
          PBReaderReadString();
          v53 = objc_claimAutoreleasedReturnValue();
          v54 = 144;
          goto LABEL_107;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_194;
        v73 = (int)(*(_DWORD *)(a1 + 168) << 14) >> 31;
        goto LABEL_163;
      case 4:
        if (!v38)
          goto LABEL_130;
        if ((*(_BYTE *)(a1 + 169) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_194;
          v73 = (int)(*(_DWORD *)(a1 + 168) << 16) >> 31;
          goto LABEL_163;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_194;
        v55 = objc_alloc_init(GEOLocalizedString);
        if (!GEOLocalizedStringReadAllFrom((uint64_t)v55, (void *)v3, v11 & 1))
          goto LABEL_193;
        PBReaderRecallMark();
        v56 = 128;
        goto LABEL_128;
      case 5:
        if (!v38 || (*(_BYTE *)(a1 + 169) & 2) != 0)
          goto LABEL_130;
        PBReaderReadString();
        v55 = (GEOLocalizedString *)objc_claimAutoreleasedReturnValue();
        if (v55)
          -[GEOPDLocalizedQueryUnderstandingTaxonomyResultItemBrand _addNoFlagsCategory:](a1, v55);
        goto LABEL_122;
      case 6:
        if (!v38)
          goto LABEL_130;
        if ((*(_BYTE *)(a1 + 169) & 4) == 0)
        {
          PBReaderReadString();
          v53 = objc_claimAutoreleasedReturnValue();
          v54 = 80;
          goto LABEL_107;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_194;
        v73 = (int)(*(_DWORD *)(a1 + 168) << 21) >> 31;
        goto LABEL_163;
      case 7:
        if ((v9 & 1) == 0)
          goto LABEL_130;
        v57 = 0;
        v58 = 0;
        v59 = 0;
        *(_DWORD *)(a1 + 168) |= 4u;
        while (2)
        {
          v60 = *v24;
          v61 = *(_QWORD *)(v3 + v60);
          v62 = v61 + 1;
          if (v61 == -1 || v62 > *(_QWORD *)(v3 + *v7))
          {
            *(_BYTE *)(v3 + *v25) = 1;
          }
          else
          {
            v63 = *(_BYTE *)(*(_QWORD *)(v3 + *v26) + v61);
            *(_QWORD *)(v3 + v60) = v62;
            v59 |= (unint64_t)(v63 & 0x7F) << v57;
            if (v63 < 0)
            {
              v57 += 7;
              v34 = v58++ >= 9;
              if (v34)
              {
                v59 = 0;
                goto LABEL_139;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v25))
          v59 = 0;
LABEL_139:
        *(_BYTE *)(a1 + 164) = v59 != 0;
        goto LABEL_165;
      case 8:
        if ((v9 & 1) == 0)
          goto LABEL_130;
        v64 = 0;
        v65 = 0;
        v45 = 0;
        *(_DWORD *)(a1 + 168) |= 1u;
        while (2)
        {
          v66 = *v24;
          v67 = *(_QWORD *)(v3 + v66);
          v68 = v67 + 1;
          if (v67 == -1 || v68 > *(_QWORD *)(v3 + *v7))
          {
            *(_BYTE *)(v3 + *v25) = 1;
          }
          else
          {
            v69 = *(_BYTE *)(*(_QWORD *)(v3 + *v26) + v67);
            *(_QWORD *)(v3 + v66) = v68;
            v45 |= (unint64_t)(v69 & 0x7F) << v64;
            if (v69 < 0)
            {
              v64 += 7;
              v34 = v65++ >= 9;
              if (v34)
              {
                v45 = 0;
                goto LABEL_143;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v25))
          v45 = 0;
LABEL_143:
        v72 = 48;
LABEL_144:
        *(_QWORD *)(a1 + v72) = v45;
        goto LABEL_165;
      case 9:
        if (!v38)
          goto LABEL_130;
        if ((*(_BYTE *)(a1 + 168) & 0x80) == 0)
        {
          PBReaderReadString();
          v53 = objc_claimAutoreleasedReturnValue();
          v54 = 56;
          goto LABEL_107;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_194;
        v73 = (int)(*(_DWORD *)(a1 + 168) << 24) >> 31;
        goto LABEL_163;
      case 10:
        if (!v38)
          goto LABEL_130;
        if ((*(_BYTE *)(a1 + 169) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_194;
          v73 = (int)(*(_DWORD *)(a1 + 168) << 17) >> 31;
          goto LABEL_163;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_194;
        v55 = objc_alloc_init(GEOPDMultiLocalizedString);
        if (!GEOPDMultiLocalizedStringReadAllFrom((uint64_t)v55, (void *)v3, v11 & 1))
          goto LABEL_193;
        PBReaderRecallMark();
        v56 = 120;
        goto LABEL_128;
      case 11:
        if (!v38 || (*(_BYTE *)(a1 + 169) & 0x20) != 0)
          goto LABEL_130;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_194;
        v55 = objc_alloc_init(GEOPDIconMapping);
        if (!GEOPDIconMappingReadAllFrom((uint64_t)v55, (void *)v3, v11 & 1))
          goto LABEL_193;
        PBReaderRecallMark();
        -[GEOPDLocalizedQueryUnderstandingTaxonomyResultItemBrand _addNoFlagsPrefCategoryIcon:](a1, v55);
        goto LABEL_122;
      case 12:
        if (!v38 || (*(_BYTE *)(a1 + 168) & 0x10) != 0)
          goto LABEL_130;
        PBReaderReadString();
        v55 = (GEOLocalizedString *)objc_claimAutoreleasedReturnValue();
        if (v55)
          -[GEOPDLocalizedQueryUnderstandingTaxonomyResultItemBrand _addNoFlagsBusinessCardAltCategories:](a1, v55);
        goto LABEL_122;
      case 13:
        if (!v38)
          goto LABEL_130;
        if ((*(_BYTE *)(a1 + 168) & 0x40) == 0)
        {
          PBReaderReadString();
          v53 = objc_claimAutoreleasedReturnValue();
          v54 = 40;
LABEL_107:
          v70 = *(void **)(a1 + v54);
          *(_QWORD *)(a1 + v54) = v53;
          goto LABEL_129;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_194;
        v73 = (int)(*(_DWORD *)(a1 + 168) << 25) >> 31;
        goto LABEL_163;
      case 14:
        if (!v38 || (*(_BYTE *)(a1 + 169) & 8) != 0)
          goto LABEL_130;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_194;
        v55 = objc_alloc_init(GEOPDIconMapping);
        if (!GEOPDIconMappingReadAllFrom((uint64_t)v55, (void *)v3, v11 & 1))
          goto LABEL_193;
        PBReaderRecallMark();
        -[GEOPDLocalizedQueryUnderstandingTaxonomyResultItemBrand _addNoFlagsModernPrimaryCategoryIcon:](a1, v55);
LABEL_122:

        goto LABEL_164;
      case 15:
        if (!v38)
          goto LABEL_130;
        if ((*(_BYTE *)(a1 + 169) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_194;
          v73 = (int)(*(_DWORD *)(a1 + 168) << 19) >> 31;
          goto LABEL_163;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_194;
        v55 = objc_alloc_init(GEOPDMultiLocalizedString);
        if (!GEOPDMultiLocalizedStringReadAllFrom((uint64_t)v55, (void *)v3, v11 & 1))
          goto LABEL_193;
        PBReaderRecallMark();
        v56 = 96;
        goto LABEL_128;
      case 16:
        if (!v38 || (*(_BYTE *)(a1 + 168) & 0x20) != 0)
          goto LABEL_130;
        PBReaderReadString();
        v55 = (GEOLocalizedString *)objc_claimAutoreleasedReturnValue();
        if (v55)
          -[GEOPDLocalizedQueryUnderstandingTaxonomyResultItemBrand _addNoFlagsBusinessCardModernAlternateCategories:](a1, v55);
        goto LABEL_122;
      case 17:
        if (!v38)
          goto LABEL_130;
        if ((*(_BYTE *)(a1 + 169) & 1) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_194;
          v73 = (int)(*(_DWORD *)(a1 + 168) << 23) >> 31;
LABEL_163:
          v8 += v73;
LABEL_164:
          v25 = (int *)MEMORY[0x1E0D82BC8];
          v7 = (int *)MEMORY[0x1E0D82BD8];
          v26 = (int *)MEMORY[0x1E0D82BB8];
LABEL_165:
          if (!(v80 & 1 | (v8 != 0)))
            goto LABEL_166;
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_194;
        v55 = objc_alloc_init(GEOPDBusinessConnectAttributes);
        if (GEOPDBusinessConnectAttributesReadAllFrom((uint64_t)v55, (void *)v3, v11 & 1))
        {
          PBReaderRecallMark();
          v56 = 64;
LABEL_128:
          v70 = *(void **)(a1 + v56);
          *(_QWORD *)(a1 + v56) = v55;
LABEL_129:

          --v8;
          goto LABEL_164;
        }
LABEL_193:

LABEL_194:
        v78 = 0;
        v25 = (int *)MEMORY[0x1E0D82BC8];
LABEL_167:
        if ((v79 & 1) != 0)
LABEL_168:
          *(_DWORD *)(a1 + 168) |= 8u;
        if (v82 || (v78 & 1) == 0)
        {
          *(_DWORD *)(a1 + 168) |= 0x10000u;
          *(_DWORD *)(a1 + 168) |= 0x20000u;
          *(_DWORD *)(a1 + 168) |= 0x8000u;
          *(_DWORD *)(a1 + 168) |= 0x200u;
          *(_DWORD *)(a1 + 168) |= 0x400u;
          *(_DWORD *)(a1 + 168) |= 0x80u;
          *(_DWORD *)(a1 + 168) |= 0x4000u;
          *(_DWORD *)(a1 + 168) |= 0x2000u;
          *(_DWORD *)(a1 + 168) |= 0x10u;
          *(_DWORD *)(a1 + 168) |= 0x40u;
          *(_DWORD *)(a1 + 168) |= 0x800u;
          *(_DWORD *)(a1 + 168) |= 0x1000u;
          *(_DWORD *)(a1 + 168) |= 0x20u;
          *(_DWORD *)(a1 + 168) |= 0x100u;
        }
        else if (v23)
        {
          while (1)
          {
            v74 = *v23++;
            v75 = 0x10000;
            switch(v74)
            {
              case 0:
                goto LABEL_187;
              case 2:
                goto LABEL_186;
              case 3:
                v75 = 0x20000;
                goto LABEL_186;
              case 4:
                v75 = 0x8000;
                goto LABEL_186;
              case 5:
                v75 = 512;
                goto LABEL_186;
              case 6:
                v75 = 1024;
                goto LABEL_186;
              case 9:
                v75 = 128;
                goto LABEL_186;
              case 10:
                v75 = 0x4000;
                goto LABEL_186;
              case 11:
                v75 = 0x2000;
                goto LABEL_186;
              case 12:
                v75 = 16;
                goto LABEL_186;
              case 13:
                v75 = 64;
                goto LABEL_186;
              case 14:
                v75 = 2048;
                goto LABEL_186;
              case 15:
                v75 = 4096;
                goto LABEL_186;
              case 16:
                v75 = 32;
                goto LABEL_186;
              case 17:
                v75 = 256;
LABEL_186:
                *(_DWORD *)(a1 + 168) |= v75;
                break;
              default:
                continue;
            }
          }
        }
LABEL_187:
        if (v78)
          v3 = *(_BYTE *)(v3 + *v25) == 0;
        else
          v3 = 0;
        if (v82)
        {
          v76 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      default:
        if ((v79 & 1) == 0 || (*(_BYTE *)(a1 + 168) & 8) != 0)
        {
LABEL_130:
          v71 = PBReaderSkipValueWithTag();
          v26 = (int *)MEMORY[0x1E0D82BB8];
          v7 = (int *)MEMORY[0x1E0D82BD8];
          v25 = (int *)MEMORY[0x1E0D82BC8];
          if ((v71 & 1) == 0)
          {
            v78 = 0;
            goto LABEL_167;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v50 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v51 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v50;

          }
          v52 = PBUnknownFieldAdd();
          v25 = (int *)MEMORY[0x1E0D82BC8];
          v7 = (int *)MEMORY[0x1E0D82BD8];
          v26 = (int *)MEMORY[0x1E0D82BB8];
          if (!v52)
          {
            v78 = 0;
            goto LABEL_168;
          }
        }
        goto LABEL_165;
    }
  }
}

